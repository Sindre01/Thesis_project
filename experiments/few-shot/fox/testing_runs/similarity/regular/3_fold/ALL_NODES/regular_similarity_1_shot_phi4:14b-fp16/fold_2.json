[
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 11381,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Returns true if the provided lists has at least one common element.\") list_has_common_element {\n        in(x: -171, y: -153, name: \"list1\") property(List) list1_1f846b\n        in(x: -179, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) has_common_element_f5a6e8\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 0, y: -55) any_5f7b6a root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> any_5f7b6a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_f9d4e3\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_7c5f6b root.Std_k98ojb.Logic.Not {}\n            func() {\n                in(x: -231, y: -69, name: \"value\") property(Boolean) value_42bc6f\n                value_42bc6f -> not_7c5f6b.value\n            } -> item_f9d4e3\n            not_7c5f6b.result -> result_e245cb\n        } -> any_5f7b6a.handler\n        instance(x: 0, y: -57) length_1b8f2e root.Std_k98ojb.List.Length {}\n        any_5f7b6a.output_list -> length_1b8f2e.list\n        instance(x: 0, y: -59) greater_than_or_equal_3d4c9e root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        length_1b8f2e.length -> greater_than_or_equal_3d4c9e.left\n        instance(x: 0, y: -61) number_from_string_7a5b6d root.Std_k98ojb.Math.NumberFromString {}\n        strings_empty_3d4c9e.String.Empty() -> number_from_string_7a5b6d.string\n        number_from_string_7a5b6d.number -> greater_than_or_equal_3d4c9e.right\n        greater_than_or_equal_3d4c9e.result -> has_common_element_f5a6e8\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_e245cb\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 133, y: -131) filter_7f5a6b root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_7f5a6b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(List) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) first_item_3b4c2d root.Std_k98ojb.List.FirstItem {}\n            item_42bc6f -> first_item_3b4c2d.list\n            first_item_3b4c2d.item -> result_e245cb\n        } -> filter_7f5a6b.handler\n\n        instance(x: 133, y: -131) find_9e8f1d root.Std_k98ojb.Iteration.Find {}\n        filter_7f5a6b.output_list -> find_9e8f1d.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(List) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) not_null_1a2b3c root.Std_k98ojb.Logic.Not {}\n            item_42bc6f -> not_null_1a2b3c.input\n            not_null_1a2b3c.result -> result_e245cb\n        } -> find_9e8f1d.predicate\n\n        instance(x: 133, y: -131) choose_5f4d7e root.Std_k98ojb.Choose {}\n        func() {\n            in(x: -231, y: -69, name: \"predicate\") property(Bool) predicate_42bc6f\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) constant_true_3a2b1d root.Std_k98ojb.Constant {}\n            true -> constant_true_3a2b1d.value\n            predicate_42bc6f -> choose_5f4d7e.predicate\n            constant_true_3a2b1d.value -> choose_5f4d7e.then\n            false -> choose_5f4d7e.else_\n            choose_5f4d7e.value -> result_e245cb\n        }\n        find_9e8f1d.item -> choose_5f4d7e.predicate\n        choose_5f4d7e.result -> has_common_element_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_5d9a6e\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 0, y: -180) filter_7b3a5f root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_7b3a5f.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) not_null_4e8c54 root.Std_k98ojb.Logic.Not {}\n            item_42bc6f -> not_null_4e8c54.value\n            not_null_4e8c54.result -> result_e245cb\n        } -> filter_7b3a5f.handler\n\n        instance(x: 0, y: -240) reduce_1d86d4 root.Std_k98ojb.Iteration.Reduce {}\n        filter_7b3a5f.output_list -> reduce_1d86d4.item\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Bool) acc_42bc6f\n            in(x: -223, y: 18, name: \"item\") property(Object) item_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) or_4e8c54 root.Std_k98ojb.Logic.Or {}\n            acc_42bc6f -> or_4e8c54.left\n            item_1d86d4 -> or_4e8c54.right\n            or_4e8c54.result -> result_e245cb\n        } -> reduce_1d86d4.handler\n\n        instance(x: 0, y: -300) if_5d9a6e root.Std_k98ojb.Std.If {}\n        reduce_1d86d4.output -> if_5d9a6e.value\n        func() {\n            in(x: -231, y: -69, name: \"then\") property(Bool) then_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) constant_4e8c54 root.Std_k98ojb.Std.Constant {}\n            true -> constant_4e8c54.value\n            constant_4e8c54.value -> then_42bc6f\n            then_42bc6f -> result_e245cb\n        } -> if_5d9a6e.then\n        func() {\n            in(x: -231, y: -69, name: \"else\") property(Bool) else_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) constant_4e8c54 root.Std_k98ojb.Std.Constant {}\n            false -> constant_4e8c54.value\n            constant_4e8c54.value -> else_42bc6f\n            else_42bc6f -> result_e245cb\n        } -> if_5d9a6e.else\n\n        if_5d9a6e.result -> has_common_element_5d9a6e\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) has_common_element_7c9a3e\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 93, y: -122) filter_7c9a3e root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_7c9a3e.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(List) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) first_7c9a3e root.Std_k98ojb.List.FirstItem {}\n            item_42bc6f -> first_7c9a3e.list\n            first_7c9a3e.item -> result_e245cb\n        } -> filter_7c9a3e.handler\n\n        instance(x: 93, y: -122) not_empty_7c9a3e root.Std_k98ojb.List.NotEmpty {}\n        filter_7c9a3e.output_list -> not_empty_7c9a3e.list\n        not_empty_7c9a3e.isEmpty -> has_common_element_7c9a3e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_a0a8c4\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) left_7a5c4e\n            in(x: -223, y: 18, name: \"item2\") property(Object) right_9f8b0d\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_k1c4e3 root.Std_k98ojb.Logic.Equal {}\n            left_7a5c4e -> equal_k1c4e3.left\n            right_9f8b0d -> equal_k1c4e3.right\n            equal_k1c4e3.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 134, y: -133) find_7b5c2a root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> find_7b5c2a.items\n        func() {\n            in(x: -232, y: -70, name: \"item\") property(Bool) item_f3d8e1\n\n            out(x: 246, y: -55, name: \"result\") property(Bool) result_9f7b0c\n\n            instance(x: -9, y: -54) choose_5a4d2e root.Std_k98ojb.Choose {}\n            item_f3d8e1 -> choose_5a4d2e.predicate\n            true -> choose_5a4d2e.then\n            false -> choose_5a4d2e.else_\n            choose_5a4d2e.value -> result_9f7b0c\n        } -> find_7b5c2a.predicate\n\n        find_7b5c2a.item -> has_common_element_a0a8c4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_intersection {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasIntersection\") property(Boolean) has_intersection_3a5e4d\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_3f9e5a root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_3f9e5a.left\n            list2_1d86d4 -> equal_3f9e5a.right\n            equal_3f9e5a.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 0, y: -53) any_true_6c8b7f root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> any_true_6c8b7f.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Boolean) item_b5a3d1\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_7f9e6b root.Std_k98ojb.Logic.Not {}\n            item_b5a3d1 -> not_7f9e6b.value\n            not_7f9e6b.result -> result_e245cb\n        } -> any_true_6c8b7f.predicate\n\n        instance(x: 0, y: -53) not_4f2c9b root.Std_k98ojb.Logic.Not {}\n        any_true_6c8b7f.item -> not_4f2c9b.value\n        not_4f2c9b.result -> has_intersection_3a5e4d\n    }\n\n    \n\n    instance(x: 93, y: -122) list_intersection_cbc0b6 root.main.list_intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) result_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 133, y: -131) filter_3f9a5b root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_3f9a5b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Boolean) item_f7c4d1\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_2e6f8c\n\n            instance(x: -8, y: -53) and_9a3b5f root.Std_k98ojb.Logic.And {}\n            item_f7c4d1 -> and_9a3b5f.left\n            true() -> and_9a3b5f.right\n            and_9a3b5f.result -> result_2e6f8c\n        } -> filter_3f9a5b.handler\n\n        instance(x: 133, y: -131) not_empty_7d4e1a root.Std_k98ojb.Iteration.Filter {}\n        filter_3f9a5b.output_list -> not_empty_7d4e1a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_f7c4d1\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_2e6f8c\n\n            instance(x: -8, y: -53) not_empty_5b3a9f root.Std_k98ojb.List.NotEmpty {}\n            item_f7c4d1 -> not_empty_5b3a9f.list\n            not_empty_5b3a9f.isEmpty -> result_2e6f8c\n        } -> not_empty_7d4e1a.handler\n\n        instance(x: 133, y: -131) reduce_6f8d3c root.Std_k98ojb.Iteration.Reduce {}\n        not_empty_7d4e1a.output_list -> reduce_6f8d3c.item\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Boolean) acc_42bc6f\n            in(x: -223, y: 18, name: \"item\") property(Object) item_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) or_3b9c7e root.Std_k98ojb.Logic.Or {}\n            acc_42bc6f -> or_3b9c7e.left\n            item_1d86d4 -> or_3b9c7e.right\n            or_3b9c7e.result -> result_e245cb\n        } -> reduce_6f8d3c.handler\n\n        instance(x: 133, y: -131) not_empty_final_2a5f1 root.Std_k98ojb.Iteration.Filter {}\n        reduce_6f8d3c.output_value -> not_empty_final_2a5f1.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Boolean) item_f7c4d1\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_2e6f8c\n\n            instance(x: -8, y: -53) not_empty_final_5b3a9f root.Std_k98ojb.List.NotEmpty {}\n            item_f7c4d1 -> not_empty_final_5b3a9f.list\n            not_empty_final_5b3a9f.isEmpty -> result_2e6f8c\n        } -> not_empty_final_2a5f1.handler\n\n        not_empty_final_2a5f1.output_list -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common_element {\n        in(x: -174, y: -154, name: \"list1\") property(List) list1_2c6f5e\n        in(x: -182, y: -14, name: \"list2\") property(List) list2_9a8d3b\n\n        out(x: 783, y: -111, name: \"hasCommonElement\") property(Boolean) has_common_element_7b1c4f\n\n        instance(x: 134, y: -132) zip_5e0b3f root.Std_k98ojb.Iteration.Zip {}\n        list1_2c6f5e -> zip_5e0b3f.left\n        list2_9a8d3b -> zip_5e0b3f.right\n        func() {\n            in(x: -232, y: -70, name: \"item1\") property(Number) item1_f4c6d7\n            in(x: -224, y: 19, name: \"item2\") property(Number) item2_5e9a8b\n\n            out(x: 246, y: -55, name: \"result\") property(Boolean) result_bf3e8c\n\n            instance(x: -7, y: -54) equal_1d4a6f root.Std_k98ojb.Logic.Equal {}\n            item1_f4c6d7 -> equal_1d4a6f.left\n            item2_5e9a8b -> equal_1d4a6f.right\n            equal_1d4a6f.result -> result_bf3e8c\n        } -> zip_5e0b3f.handler\n\n        instance(x: -11, y: 14) filter_7c2d9a root.Std_k98ojb.Iteration.Filter {}\n        zip_5e0b3f.zipped -> filter_7c2d9a.items\n        func() {\n            in(x: -237, y: -77, name: \"item\") property(List) item_8d6f1b\n\n            out(x: 251, y: -69, name: \"result\") property(Boolean) result_d3e7c2\n\n            instance(x: -16, y: -68) first_item_4f9a5d root.Std_k98ojb.List.FirstItem {}\n            item_8d6f1b -> first_item_4f9a5d.list\n            first_item_4f9a5d.item -> result_d3e7c2\n        } -> filter_7c2d9a.handler\n\n        instance(x: -20, y: 24) find_3e8f6b root.Std_k98ojb.Iteration.Find {}\n        filter_7c2d9a.output_list -> find_3e8f6b.items\n        func() {\n            in(x: -242, y: -81, name: \"item\") property(List) item_1c5d4f\n\n            out(x: 255, y: -72, name: \"result\") property(Boolean) result_a7f3e2\n\n            instance(x: -25, y: -71) not_null_6b9a8d root.Std_k98ojb.Logic.Not {}\n            item_1c5d4f -> not_null_6b9a8d.input\n            not_null_6b9a8d.result -> result_a7f3e2\n        } -> find_3e8f6b.predicate\n\n        instance(x: -29, y: 34) choose_9f1c5d root.Std_k98ojb.Choose {}\n        find_3e8f6b.item -> choose_9f1c5d.value\n        true -> choose_9f1c5d.then\n        false -> choose_9f1c5d.else_\n        choose_9f1c5d.result -> has_common_element_7b1c4f\n    }\n\n    \n\n    instance(x: 94, y: -123) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommon\") property(Boolean) has_common_3c5d8e\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_3a7b9f root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_3a7b9f.left\n            list2_1d86d4 -> equal_3a7b9f.right\n            equal_3a7b9f.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 134, y: -133) reduce_ae8c0f root.Std_k98ojb.Iteration.Reduce {}\n        zip_201051.zipped -> reduce_ae8c0f.item\n        func() {\n            in(x: -232, y: -70, name: \"acc\") property(Boolean) acc_7d9f2a\n            in(x: -224, y: 19, name: \"item\") property(Boolean) item_b4f1e5\n\n            out(x: 246, y: -55, name: \"result\") property(Boolean) result_f3b8c6\n\n            instance(x: -9, y: -54) or_9d2a7b root.Std_k98ojb.Logic.Or {}\n            acc_7d9f2a -> or_9d2a7b.left\n            item_b4f1e5 -> or_9d2a7b.right\n            or_9d2a7b.result -> result_f3b8c6\n        } -> reduce_ae8c0f.handler\n        reduce_ae8c0f.initialValue <- true\n        reduce_ae8c0f.result -> has_common_3c5d8e\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Boolean) result_e245cb\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_5a3b7c\n\n            instance(x: -8, y: -53) equal_9f6b34 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_9f6b34.left\n            list2_1d86d4 -> equal_9f6b34.right\n            equal_9f6b34.result -> result_5a3b7c\n        } -> zip_201051.handler\n\n        instance(x: 0, y: -55) find_if_8e7b42 root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> find_if_8e7b42.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(List) list1_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_5a3b7c\n\n            instance(x: -8, y: -53) get_at_9d4e2a root.Std_k98ojb.List.GetAt {}\n            list1_42bc6f -> get_at_9d4e2a.list\n            0 -> get_at_9d4e2a.index\n            get_at_9d4e2a.value -> result_5a3b7c\n        } -> find_if_8e7b42.predicate\n\n        find_if_8e7b42.item -> result_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") is_consecutive {\n        in(x: -526, y: -213, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -208, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -204, name: \"check if consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -20, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -16, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 50, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) subtract_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> subtract_c76d2b.first\n            _index_769593 -> subtract_c76d2b.second\n            subtract_c76d2b.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -15, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -27, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -22) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -24) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 847, y: -206) contains_32727d root.Std_k98ojb.List.Contains {}\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -4) is_consecutive_bf7dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to pairs\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"filter consecutive pairs\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"pair\") property(List) pair_4524be\n\n            instance(x: 74, y: -23) list_get_0f9b8c root.Std_k98ojb.List.GetAt {}\n            instance(x: 285, y: -25) list_get_1e7a2d root.Std_k98ojb.List.GetAt {}\n\n            list_get_0f9b8c.index -> 0\n            current_81298e -> list_get_0f9b8c.list\n\n            list_get_1e7a2d.index -> 1\n            current_81298e -> list_get_1e7a2d.list\n\n            list_get_0f9b8c.value -> pair_4524be\n            list_get_1e7a2d.value -> pair_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) subtract_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            subtract_c76d2b.second -> _index_170471[1]\n            subtract_c76d2b.first -> _index_170471[0]\n\n            subtract_c76d2b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n            true -> bool_4524be\n        } -> contains_32727d.handler\n        filter_c91965.output_list -> contains_32727d.list\n\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_bf3e9a root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        contains_32727d.is_contained -> output_8d07dc\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_ba4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"check consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -21, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_b8e7a5 root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> add_b8e7a5.first\n            _index_769593 -> add_b8e7a5.second\n            add_b8e7a5.result -> filter_c91965.items\n            list_07cae4[_index_769593 + 1] -> notequal_7836b4.left\n            current_81298e -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_75283f root.Std_k98ojb.Logic.Not {}\n            current_81298e -> not_75283f.input\n            not_75283f.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_75283f root.Std_k98ojb.Logic.Not {}\n            current_81298e -> not_75283f.input\n            not_75283f.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_f7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"filter consecutive pairs\") filter_1a8d5f root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: 1058, y: -203) property(List) pair_3c4f2e\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            pair_3c4f2e[1] -> notequal_7836b4.left\n            pair_3c4f2e[0] + 1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_1a8d5f.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 74, y: -23) property(List) next_item_9b2c3f\n\n            out(x: 521, y: -28, name: \"pair\") property(List) pair_4d5a7e\n\n            instance(x: 285, y: -25) list_1e6b8a root.Std_k98ojb.List.Add {}\n            current_81298e -> list_1e6b8a.item\n            next_item_9b2c3f -> list_1e6b8a.list\n            list_1e6b8a.listWithItem -> pair_4d5a7e\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: 74, y: -23, name: \"_next\") property(Number) _next_5f8c2d\n\n            out(x: 705, y: 49, name: \"pair\") property(List) pair_6b3e9f\n\n            instance(x: 285, y: -25) list_1e6b8a root.Std_k98ojb.List.Add {}\n            _index_170471 -> list_1e6b8a.item\n            _next_5f8c2d -> list_1e6b8a.list\n            list_1e6b8a.listWithItem -> pair_6b3e9f\n        } -> filter_1a8d5f.items\n\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: 847, y: -207) property(Bool) is_consecutive_f4e2c7\n\n            out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n            not_75283f.result -> output_8d07dc\n            is_consecutive_f4e2c7 -> not_75283f.input\n        } -> contains_32727d.onItem\n        filter_1a8d5f.output_list -> map_c73e3b.items\n        list_07cae4 -> map_c73e3b.items\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_9c2f6b root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if a list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_7f3e4d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_result_d5a2c1\n\n        instance(x: 847, y: -207) sorted_8b2f6c root.Std_k98ojb.List.Sort {}\n        instance(x: 1058, y: -203) map_consecutive_check_9e4d7b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 246, y: -209, name: \"check consecutive\") iteration_filter_f3a1c6 root.Std_k98ojb.Iteration.Filter {}\n\n        sorted_8b2f6c.list -> map_consecutive_check_9e4d7b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_number_3a1b2c\n            in(x: 74, y: -23, name: \"_index\") property(Number) index_a1f3e5\n\n            out(x: 521, y: -28, name: \"difference\") property(Number) difference_result_b9d4e7\n\n            instance(x: 285, y: -25) subtract_6c2b8a root.Std_k98ojb.Math.Sub {}\n            next_item -> subtract_6c2b8a.second\n            current_number_3a1b2c -> subtract_6c2b8a.first\n            subtract_6c2b8a.result -> difference_result_b9d4e7\n        } -> map_consecutive_check_9e4d7b.handler\n\n        map_consecutive_check_9e4d7b.output_list -> iteration_filter_f3a1c6.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_difference_8f2b5d\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_consecutive_check_f1a3e7\n\n            instance(x: 226, y: 56) notequal_9c3f6d root.Std_k98ojb.Logic.NotEqual {}\n            current_difference_8f2b5d -> notequal_9c3f6d.left\n            1 -> notequal_9c3f6d.right\n            notequal_9c3f6d.result -> output_consecutive_check_f1a3e7\n        } -> iteration_filter_f3a1c6.handler\n\n        true -> output_result_d5a2c1\n        func() {\n            in(x: -192, y: 56, name: \"output\") property(Bool) filter_output_4b9d8f\n\n            out(x: 521, y: 49, name: \"final output\") property(Bool) final_output_check_c3a2d7\n\n            instance(x: 285, y: 51) or_f1e3c6 root.Std_k98ojb.Logic.Or {}\n            filter_output_4b9d8f -> or_f1e3c6.left\n            false -> or_f1e3c6.right\n            or_f1e3c6.result -> final_output_check_c3a2d7\n        } -> output_result_d5a2c1\n        iteration_filter_f3a1c6.output_list.length > 0 -> filter_output_4b9d8f\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_instance_a2e7f3 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -191, y: 79, name: \"_prev\") property(Number) _prev_9c7f3d\n\n            out(x: 521, y: -28, name: \"difference\") property(Number) difference_6a4b2c\n\n            instance(x: 74, y: -23) sub_d5e1c8 root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_d5e1c8.first\n            _prev_9c7f3d -> sub_d5e1c8.second\n            sub_d5e1c8.result -> difference_6a4b2c\n        } -> map_c73e3b.handler\n\n        instance(x: -303, y: -205, name: \"shift list by 1\") shift_1_9d7f3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"output\") property(Number) output_6a4b2c\n            current_81298e -> output_6a4b2c\n        } -> shift_1_9d7f3b.handler\n        list_07cae4 -> shift_1_9d7f3b.items\n\n        instance(x: -303, y: 5) zip_b8f3a7 root.Std_k98ojb.Iteration.Zip {}\n        map_c73e3b.output_list -> zip_b8f3a7.left\n        shift_1_9d7f3b.output_list -> zip_b8f3a7.right\n\n        instance(x: 847, y: 5) contains_2c4d7f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"output\") property(Bool) output_b4d3f2\n            1 -> output_b4d3f2\n        } -> contains_2c4d7f.handler\n        zip_b8f3a7.zipped -> contains_2c4d7f.list\n\n        not_75283f.result -> output_8d07dc\n        contains_2c4d7f.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_a1b3c root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -184, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n\n            list_07cae4[_index_769593 + 1] -> modulo_ad7b2a.right\n            current_81298e -> modulo_ad7b2a.left\n\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        list_07cae4[0..len(list_07cae4) - 1] -> map_c73e3b.items\n\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"check consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -24, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_c76d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> add_c76d2b.first\n            _index_769593 -> add_c76d2b.second\n            add_c76d2b.result -> filter_c91965.handler\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -15, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) add_ad7b2a root.Std_k98ojb.Math.Add {}\n            current_81298e -> add_ad7b2a.first\n            _index_769593 -> add_ad7b2a.second\n            add_ad7b2a.result -> contains_32727d.item\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"map to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_2f1b9a root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) get_ae4c6d root.Std_k98ojb.List.GetAt {}\n            current_81298e -> sub_2f1b9a.first\n            _index_769593 -> get_ae4c6d.index\n            list_07cae4 -> get_ae4c6d.list\n            get_ae4c6d.item -> sub_2f1b9a.second\n            sub_2f1b9a.result -> output_efbc78\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_a8a9d5 root.Std_k98ojb.Logic.Equal {}\n            1 -> equal_a8a9d5.right\n            current_81298e -> equal_a8a9d5.left\n            equal_a8a9d5.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        1 -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"list\") property(List) list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_f1a2b3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        sublist_f1a2b3 -> sublist_for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        sublist_for_d26972.done -> continue_a96db6\n        sublist_for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        sublist_for_d26972.onItem -> sublist_ifexpression_875761.execute\n        sublist_ifexpression_875761.value -> output_5bbcd7\n        sublist_ifexpression_875761.then -> continue_a96db6\n        sublist_ifexpression_875761.else -> setter_9d4f1c.next\n        for_d26972.done -> sublist_for_d26972.reset\n        for_d26972.item -> getat_ce2a48.new_index\n        sublist_for_d26972.item -> getat_sublist_ce2a48.list\n        0 -> getat_sublist_ce2a48.index\n        getat_sublist_ce2a48.itemAtIndex -> sublist_ifexpression_875761.gen_1\n        for_d26972.item -> sublist_ifexpression_875761.gen_2\n        sublist_for_d26972.index -> sublist_ifexpression_875761.gen_0\n        getter_b280eb.value -> sublist_ifexpression_875761.gen_3\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"list\") property(List) list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_3f4b1d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        sublist_3f4b1d -> for_d26972.items_0\n        for_d26972.item_0 -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item_0 -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -505, y: 160, name: \"sublist\") property(List) sublist_f7b4c3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -20) for_e3c4a1 root.Std_k98ojb.Std.For {}\n        instance(x: 1000, y: 200) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        for_d26972.items -> main_list_ec88cd\n        for_d26972.item -> sublist_f7b4c3\n        for_d26972.onItem -> for_e3c4a1.reset\n        for_d26972.index -> ifexpression_875761.gen_0\n        0 -> getter_b280eb.value\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -400, y: -70) getat_f4d8c1 root.Std_k98ojb.List.GetAt {}\n\n        main_list_ec88cd -> getat_ce2a48.list\n        for_d26972.item -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_2\n\n        sublist_f7b4c3 -> getat_f4d8c1.list\n        0 -> getat_f4d8c1.index\n        for_e3c4a1.items -> getat_f4d8c1.list\n        for_e3c4a1.item -> getat_f4d8c1.index\n\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.else -> continue_a96db6\n\n        for_e3c4a1.onItem -> getat_f4d8c1.execute\n        getat_f4d8c1.itemAtIndex -> getter_b280eb.new_value\n        setter_9d4f1c.continue -> for_e3c4a1.next\n        for_e3c4a1.done -> continue_a96db6\n\n        execute_90aaec -> getat_ce2a48.execute\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        setter_9d4f1c.new_value -> previous\n        for_d26972.next -> for_e3c4a1.reset\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_3f4b7d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == len(main_list) - len(sublist)\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -275, y: 145) getat_4d9e3f root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n\n        for_d26972.items -> main_list_ec88cd\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_0\n        sublist_3f4b7d -> for_d26972.iterable\n        0 -> for_d26972.start\n        for_d26972.item -> getat_4d9e3f.list\n        getat_ce2a48.index - len(sublist_3f4b7d) -> getat_4d9e3f.index\n\n        ifexpression_875761.gen_1 -> getat_4d9e3f.itemAtIndex\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> for_d26972.trigger\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"list\") property(List) list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_3f8a1d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_c9d1e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_c9d1e4.else -> continue_a96db6\n        ifexpression_c9d1e4.value -> output_5bbcd7\n        ifexpression_c9d1e4.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        sublist_3f8a1d -> match_6b7f0d.list\n        match_6b7f0d.matched -> or_else_1c5e2b.first\n        or_else_1c5e2b.second -> false\n        or_else_1c5e2b.value -> is_sublist_root.Std_k98ojb.Std.OrElse\n        for_d26972.item -> ifexpression_c9d1e4.gen_2\n        for_d26972.index -> ifexpression_c9d1e4.gen_0\n        getter_b280eb.value -> ifexpression_c9d1e4.gen_1\n        for_d26972.onItem -> ifexpression_c9d1e4.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_root root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_f4b7d1\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 750, y: -120) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        for_d26972.items -> main_list_ec88cd\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n\n        sublist_f4b7d1 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n\n        setter_9d4f1c.continue -> for_d26972.next\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.else -> continue_a96db6\n        execute_90aaec -> getat_ce2a48.execute\n        getat_ce2a48.continue -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || main_list[index] == sublist[previous_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_b280eb.value\n        for_d26972.item -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.index -> ifexpression_875761.gen_2\n        ifexpression_875761.execute -> ifexpression_875761.execute\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        getter_b280eb.value -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"outer_list\") property(List) outer_list_ec88cd\n        in(x: -485, y: 150, name: \"inner_list\") property(List) inner_list_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1000, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        instance(x: 1300, y: 50) for_inner_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1375, y: 120) ifexpression_inner_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"inner_index == 0 || previous_inner <= current_inner\"\n        }\n        getter_inner(x: 1340, y: 160, name: \"getter_b280eb_inner\") getter_b280eb_inner = previous_inner\n        setter_inner(x: 1395, y: -313, name: \"setter_9d4f1c_inner\") setter_9d4f1c_inner = previous_inner\n\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        outer_list_ec88cd -> for_d26972.items\n\n        for_inner_d26972.item -> ifexpression_inner_875761.gen_2\n        for_inner_d26972.index -> ifexpression_inner_875761.gen_0\n        getter_b280eb_inner.value -> ifexpression_inner_875761.gen_1\n        ifexpression_inner_875761.then -> setter_9d4f1c_inner.execute\n        inner_list_ec88cd -> for_inner_d26972.items\n\n        ifexpression_875761.then -> for_inner_d26972.reset\n        ifexpression_inner_875761.value -> output_5bbcd7\n        ifexpression_inner_875761.else -> continue_a96db6\n        ifexpression_inner_875761.then -> setter_9d4f1c_inner.execute\n\n        execute_90aaec -> for_d26972.trigger\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        setter_9d4f1c.continue -> for_inner_d26972.trigger\n        setter_9d4f1c_inner.continue -> for_inner_d26972.next\n        for_inner_d26972.onItem -> ifexpression_inner_875761.execute\n        for_inner_d26972.done -> continue_a96db6\n\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + sublist_length <= main_list_length && sublist == main_list_slice\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> getter_b280eb.input\n        sublist_ec88cd -> getat_ce2a48.list\n        for_d26972.item -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        instance(x: 1000, y: -200) len_sublist root.Std_k98ojb.List.Length {}\n        sublist_ec88cd -> len_sublist.list\n        len_sublist.length -> ifexpression_875761.gen_2\n\n        instance(x: 1000, y: -50) len_main_list root.Std_k98ojb.List.Length {}\n        main_list_ec88cd -> len_main_list.list\n        len_main_list.length -> ifexpression_875761.gen_3\n\n        instance(x: 1200, y: -200) slice_main_list root.Std_k98ojb.List.Slice {}\n        setter_9d4f1c.new_value -> slice_main_list.start\n        getter_b280eb.value -> slice_main_list.end\n\n        instance(x: 1400, y: -50) eq_lists root.Std_k98ojb.Logic.Equal {}\n        sublist_ec88cd -> eq_lists.left\n        slice_main_list.slice -> eq_lists.right\n        eq_lists.result -> ifexpression_875761.gen_4\n\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"list\") property(List) list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_7c5b9f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        instance(x: 752, y: -150) ifexpression_f3e5a8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: -20, name: \"getter_4f2d1c\") getter_4f2d1c = previous\n        setter(x: 679, y: -315, name: \"setter_f7b3a9\") setter_f7b3a9 = previous\n        instance(x: 321, y: -220) for_5e8d0c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -221, name: \"setter_f7b3a9\") setter_4f6f1e = previous\n        instance(x: -275, y: -235) getat_2e7b8d root.Std_k98ojb.List.GetAt {}\n        ifexpression_f3e5a8.else -> continue_a96db6\n        ifexpression_f3e5a8.value -> output_5bbcd7\n        ifexpression_f3e5a8.then -> setter_f7b3a9.execute\n        sublist_7c5b9f -> for_5e8d0c.items\n        for_5e8d0c.item -> ifexpression_f3e5a8.gen_2\n        for_5e8d0c.index -> ifexpression_f3e5a8.gen_0\n        getter_4f2d1c.value -> ifexpression_f3e5a8.gen_1\n        for_5e8d0c.onItem -> ifexpression_f3e5a8.execute\n        for_5e8d0c.done -> continue_a96db6\n        for_5e8d0c.item -> setter_f7b3a9.new_value\n\n        instance(x: 752, y: -290) ifexpression_b1f2e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: -320, name: \"getter_8a3c7d\") getter_8a3c7d = previous\n        setter(x: 679, y: -515, name: \"setter_eb9f5e\") setter_eb9f5e = previous\n        instance(x: 321, y: -420) for_6c4f2a root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -421, name: \"setter_eb9f5e\") setter_8d1c3e = previous\n        instance(x: -275, y: -435) getat_7a6d4f root.Std_k98ojb.List.GetAt {}\n        ifexpression_b1f2e4.else -> continue_a96db6\n        ifexpression_b1f2e4.value -> output_5bbcd7\n        ifexpression_b1f2e4.then -> setter_eb9f5e.execute\n        list_ec88cd -> for_6c4f2a.items\n        for_6c4f2a.item -> ifexpression_b1f2e4.gen_2\n        for_6c4f2a.index -> ifexpression_b1f2e4.gen_0\n        getter_8a3c7d.value -> ifexpression_b1f2e4.gen_1\n        for_6c4f2a.onItem -> ifexpression_b1f2e4.execute\n        for_6c4f2a.done -> continue_a96db6\n        for_6c4f2a.item -> setter_eb9f5e.new_value\n\n        instance(x: 752, y: -540) ifexpression_3d8f7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: -640, name: \"getter_c9a1e4\") getter_c9a1e4 = previous\n        setter(x: 679, y: -735, name: \"setter_6f3b2d\") setter_6f3b2d = previous\n        instance(x: 321, y: -740) for_5c8d1e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -741, name: \"setter_6f3b2d\") setter_b9a7f4 = previous\n        instance(x: -275, y: -755) getat_d9e5c8 root.Std_k98ojb.List.GetAt {}\n        ifexpression_3d8f7b.else -> continue_a96db6\n        ifexpression_3d8f7b.value -> output_5bbcd7\n        ifexpression_3d8f7b.then -> setter_6f3b2d.execute\n        sublist_7c5b9f -> for_5c8d1e.items\n        for_5c8d1e.item -> ifexpression_3d8f7b.gen_2\n        for_5c8d1e.index -> ifexpression_3d8f7b.gen_0\n        getter_c9a1e4.value -> ifexpression_3d8f7b.gen_1\n        for_5c8d1e.onItem -> ifexpression_3d8f7b.execute\n        for_5c8d1e.done -> continue_a96db6\n        for_5c8d1e.item -> setter_6f3b2d.new_value\n\n        instance(x: 752, y: -790) ifexpression_9f4a1d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: -890, name: \"getter_7c2e5f\") getter_7c2e5f = previous\n        setter(x: 679, y: -985, name: \"setter_d1b3a8\") setter_d1b3a8 = previous\n        instance(x: 321, y: -990) for_4d9e1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -991, name: \"setter_d1b3a8\") setter_c9a7f5 = previous\n        instance(x: -275, y: -1005) getat_e9c5d8 root.Std_k98ojb.List.GetAt {}\n        ifexpression_9f4a1d.else -> continue_a96db6\n        ifexpression_9f4a1d.value -> output_5bbcd7\n        ifexpression_9f4a1"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        items_ai -> find_smallest_missing_node.items\n        func(x: 426, y: -378) lambda {\n            in(x: -159, y: -219, name: \"it\") property(Number) it_ae\n            out(x: 159, y: -219, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -303) std_if_node root.Std_k98ojb.Std.If {}\n            std_if_node.value -> lambda.result_ae\n            std_if_node.if -> find_smallest_missing_node.predicate\n\n            in(x: -159, y: -219, name: \"it\") property(Number) it_ae -> std_if_node.value\n            instance(x: 426, y: -378) std_if_then_node root.Std_k98ojb.Std.IfExpression {}\n            std_if_then_node.expression = \"(it == (prev + 1))\"\n            std_if_then_node.then -> std_if_node.else\n            std_if_then_node.else -> std_if_node.then\n\n            instance(x: 426, y: -453) iter_list_node root.Std_k98ojb.IterList {}\n            items_ai -> iter_list_node.items\n            func(x: 426, y: -498) lambda {\n                in(x: -159, y: -279, name: \"item\") property(Number) item_ae\n                out(x: 159, y: -279, name: \"result\") property(Number) result_ae\n\n                instance(x: 426, y: -354) std_relay_node root.Std_k98ojb.Std.Relay {}\n                item_ae -> std_relay_node.input\n                std_relay_node.value -> lambda.result_ae\n            } -> iter_list_node.onItem\n            func(x: 426, y: -498) lambda {\n                in(x: -159, y: -279, name: \"item\") property(Number) item_ae\n                out(x: 159, y: -279, name: \"result\") property(Number) result_ae\n\n                instance(x: 426, y: -354) std_relay_node root.Std_k98ojb.Std.Relay {}\n                item_ae -> std_relay_node.input\n                std_relay_node.value -> lambda.result_ae\n            } -> find_smallest_missing_node.onItem\n        } -> find_smallest_missing_node.predicate\n\n        instance(x: 426, y: -528) std_if_else_node root.Std_k98ojb.Std.If {}\n        std_if_else_node.if -> find_smallest_missing_node.item\n        std_if_else_node.value -> smallest_missing_num.missing_ai\n\n        func(x: 426, y: -573) lambda {\n            in(x: -159, y: -339, name: \"value\") property(Number) value_ae\n            out(x: 159, y: -339, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -438) std_relay_node root.Std_k98ojb.Std.Relay {}\n            value_ae -> std_relay_node.input\n            std_relay_node.value -> lambda.result_ae\n        } -> std_if_else_node.then\n\n        func(x: 426, y: -573) lambda {\n            in(x: -159, y: -339, name: \"value\") property(Number) value_ae\n            out(x: 159, y: -339, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -438) std_relay_node root.Std_k98ojb.Std.Relay {}\n            value_ae -> std_relay_node.input\n            std_relay_node.value -> lambda.result_ae\n        } -> std_if_else_node.else\n    }\n\n    \n    instance(x: 426, y: -528) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> find_smallest_missing_node.items\n        func() {\n            in(x: -159, y: -248, name: \"it\") property(Number) it_ae\n            out(x: 0, y: -219, name: \"\") property(Bool) _ae\n\n            instance(x: 426, y: -303) logic_node root.Std_k98ojb.Logic.Equal {}\n            func() {\n                in(x: -159, y: -248, name: \"left\") property(Number) left_ae\n                in(x: 0, y: -248, name: \"right\") property(Number) right_ae\n\n                instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Sub {}\n                it_ae -> math_node.first\n                func() {\n                    in(x: -159, y: -248, name: \"\") property(Number) _ae\n                    out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                    instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Add {}\n                    left_ae -> math_node.first\n                    right_ae -> math_node.second\n                } -> math_node.second\n            } -> logic_node.left\n            func() {\n                in(x: -159, y: -248, name: \"\") property(Number) _ae\n                out(x: 0, y: -219, name: \"result\") property(Bool) result_ae\n\n                instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.LessThan {}\n                left_ae -> math_node.left\n                right_ae -> math_node.right\n            } -> logic_node.right\n        } -> find_smallest_missing_node.predicate\n        func() {\n            in(x: -159, y: -248, name: \"index\") property(Number) index_ae\n            in(x: 0, y: -248, name: \"\") property(Number) _ae\n\n            instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Add {}\n            func() {\n                in(x: -159, y: -248, name: \"left\") property(Number) left_ae\n                out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.GetAt {}\n                numbers_ai -> math_node.list\n                index_ae -> math_node.index\n            } -> math_node.first\n            func() {\n                in(x: -159, y: -248, name: \"left\") property(Number) left_ae\n                out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Sub {}\n                index_ae -> math_node.first\n                func() {\n                    in(x: -159, y: -248, name: \"\") property(Number) _ae\n                    out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                    instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Add {}\n                    func() {\n                        in(x: -159, y: -248, name: \"left\") property(Number) left_ae\n                        out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                        instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Length {}\n                        numbers_ai -> math_node.list\n                    } -> math_node.first\n                    func() {\n                        in(x: -159, y: -248, name: \"left\") property(Number) left_ae\n                        out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                        instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Sub {}\n                        func() {\n                            in(x: -159, y: -248, name: \"\") property(Number) _ae\n                            out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                            instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Add {}\n                            func() {\n                                in(x: -159, y: -248, name: \"left\") property(Number) left_ae\n                                out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                                instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Length {}\n                                numbers_ai -> math_node.list\n                            } -> math_node.first\n                            func() {\n                                in(x: -159, y: -248, name: \"left\") property(Number) left_ae\n                                out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                                instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Sub {}\n                                func() {\n                                    in(x: -159, y: -248, name: \"\") property(Number) _ae\n                                    out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                                    instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Add {}\n                                    left_ae -> math_node.first\n                                    func() {\n                                        in(x: -159, y: -248, name: \"\") property(Number) _ae\n                                        out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                                        instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Sub {}\n                                        left_ae -> math_node.first\n                                        func() {\n                                            in(x: -159, y: -248, name: \"\") property(Number) _ae\n                                            out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                                            instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Add {}\n                                            func() {\n                                                in(x: -159, y: -248, name: \"left\") property(Number) left_ae\n                                                out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                                                instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Sub {}\n                                                func() {\n                                                    in(x: -159, y: -248, name: \"\") property(Number) _ae\n                                                    out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                                                    instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Add {}\n                                                    left_ae -> math_node.first\n                                                    func() {\n                                                        in(x: -159, y: -248, name: \"\") property(Number) _ae\n                                                        out(x: 0, y: -219, name: \"result\") property(Number) result_ae\n\n                                                        instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Sub {}\n                                                        left_ae -> math_node.first\n                                                    } -> math_node.second\n                                                } -> math_node.second\n                                            } -> math_node.first\n                                        } -> math_node.second\n                                    } -> math_node.second\n                                } -> math_node.second\n                            } -> math_node.second\n                        } -> math_node.second\n                    } -> math_node.result\n                } -> math_node.second\n            } -> math_node.result\n        } -> find_smallest_missing_node.onItem\n\n        find_smallest_missing_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> find_missing_node.items\n        \n        func(doc: \"predicate to find the smallest missing number.\") predicate {\n            in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n            out(x: 159, y: -219, name: \"\") property(Bool) result_ai\n\n            instance(x: 426, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {}\n            math_expr_node.expression = \"it != index + 1\"\n            \n            numbers_ai -> math_expr_node.index\n            item_ai -> math_expr_node.it\n            \n            math_expr_node.result -> result_ai\n        }\n\n        instance(x: 426, y: -303) predicate_instance root.main.smallest_missing_num.predicate {}\n        \n        find_missing_node.predicate <- predicate_instance.\n        find_missing_node.item -> missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -483) if_expression_node root.Std_k98ojb.IfExpression {}\n        instance(x: 426, y: -663) relay_node root.Std_k98ojb.Relay {}\n\n        numbers_ai -> for_node.items\n        for_node.trigger -> if_expression_node.execute\n        for_node.index -> if_expression_node.index\n\n        std.Std_k98ojb.Strings.Concat(\n            left: \"item\",\n            right: if_expression_node.index,\n            result: relay_node.value\n        )\n\n        if_expression_node.expression = \"it - numbers[relay_node.value] > 1\"\n        if_expression_node.then -> missing_number_ai\n        if_expression_node.else_ -> for_node.next\n\n        instance(x: 426, y: -843) std.Std_k98ojb.List.GetAt {\n            list: numbers_ai,\n            index: relay_node.value,\n            result: \"current_item\"\n        }\n\n        instance(x: 426, y: -1023) std.Std_k98ojb.Math.Add(\n            first: if_expression_node.index,\n            second: 1,\n            result: for_node.next\n        )\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.For {\n            in(index: 0, items: numbers_ai) {}\n            out(item: _, index: _) {}\n\n            trigger(continue: continue_trigger) {\n                if (index >= length(numbers_ai)) {\n                    missing_number_ai = index\n                } else if (numbers_ai[index] != index + 1) {\n                    missing_number_ai = index + 1\n                }\n                continue_trigger()\n            }\n\n            reset() {}\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node Std_k98ojb.Std.For {}\n        numbers_ai -> for_node.items\n\n        instance(x: 426, y: -483) if_node Std_k98ojb.Std.IfExpression {}\n        for_node.index -> if_node.expression.a\n        for_node.item -> if_node.expression.b\n        if_node.value -> if_node.result\n\n        instance(x: 426, y: -648) add_one_node Std_k98ojb.Math.Add {}\n        if_node.result -> add_one_node.first\n        std.number(1) -> add_one_node.second\n        add_one_node.result -> add_one_node.output\n\n        instance(x: 426, y: -813) relay_missing_node Std_k98ojb.Std.Relay {}\n        add_one_node.output -> relay_missing_node.value\n\n        for_node.on_item -> if_node.execute\n        for_node.done -> relay_missing_node.trigger\n\n        instance(x: 426, y: -978) not_found_node Std_k98ojb.Std.IfExpression {}\n        std.number(0) -> not_found_node.expression.a\n        for_node.index -> not_found_node.expression.b\n        not_found_node.value -> not_found_node.result\n\n        instance(x: 426, y: -1143) add_one_if_not_found_node Std_k98ojb.Math.Add {}\n        not_found_node.result -> add_one_if_not_found_node.first\n        std.number(1) -> add_one_if_not_found_node.second\n        add_one_if_not_found_node.result -> add_one_if_not_found_node.output\n\n        instance(x: 426, y: -1308) relay_missing_or_last_node Std_k98ojb.Std.OrElse {}\n        relay_missing_node.value -> relay_missing_or_last_node.first\n        add_one_if_not_found_node.output -> relay_missing_or_last_node.second\n        relay_missing_or_last_node.result -> missing_ai\n\n        for_node.trigger\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.For {}\n        find_smallest_missing_node.trigger -> items_ai\n        find_smallest_missing_node.reset -> items_ai\n        find_smallest_missing_node.next -> items_ai\n        find_smallest_missing_node.items -> items_ai\n\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n        find_smallest_missing_node.item -> if_node.value\n        if_node.then -> missing_number_ai\n\n        instance(x: 426, y: -588) if_expression_node root.Std_k98ojb.IfExpression {}\n        if_expression_node.expression <- \"it != index + 1 ? it : null\"\n        if_node.else -> if_expression_node.value\n        find_smallest_missing_node.index -> if_expression_node.index\n\n        instance(x: 426, y: -723) choose_node root.Std_k98ojb.Choose {}\n        if_expression_node.value -> choose_node.predicate\n        if_expression_node.value -> choose_node.then\n        Null -> choose_node.else\n        choose_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -423) if_expression_node root.Std_k98ojb.IfExpression {}\n        instance(x: 426, y: -543) relay_node root.Std_k98ojb.Relay {}\n\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        for_node.on_item -> if_expression_node.value\n\n        for_node.index -> if_expression_node.expression_index\n        std.String(\"it\") -> if_expression_node.expression_it\n        std.String(\"index\") -> if_expression_node.expression_index\n\n        instance(x: 426, y: -663) math_sub_node root.Std_k98ojb.Math.Sub {}\n        instance(x: 426, y: -783) relay_node_2 root.Std_k98ojb.Relay {}\n\n        for_node.item -> math_sub_node.first\n        for_node.index -> math_sub_node.second\n\n        if_expression_node.value -> relay_node.on_value\n        if_expression_node.expression -> std.String(\"it != index + 1\")\n\n        relay_node.value -> math_sub_node.first\n        relay_node_2.input -> relay_node.value\n\n        math_sub_node.result -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        items_ai -> find_smallest_missing_node.items\n        instance(x: 426, y: -403) predicate_node root.Std_k98ojb.Logic.NotEqual {}\n        find_smallest_missing_node.predicate -> predicate_node.handler\n        instance(x: 426, y: -503) index_handler_node root.Std_k98ojb.Iteration.Index {}\n        index_handler_node.index -> predicate_node.left\n        instance(x: 426, y: -603) item_handler_node root.Std_k98ojb.Iteration.Item {}\n        item_handler_node.item -> predicate_node.right\n        find_smallest_missing_node.item -> missing_number_ai\n\n        instance(x: 426, y: -703) generate_range_node root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 426, y: -803) list_min_node root.Std_k98ojb.List.Min {}\n        generate_range_node.from -> list_min_node.first\n        items_ai -> list_min_node.second\n        list_min_node.result -> generate_range_node.to\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.For {\n            trigger := Std_k98ojb.Start {}\n            reset := Std_k98ojb.Std_k98ojb.Std_k98ojb.IfExpression {\n                expression := \"index == 0\"\n                then := true\n                else := false\n            }\n            next := Std_k98ojb.Std_k98ojb.Count {\n                trigger := Std_k98ojb.Next {}\n                reset := Std_k98ojb.Reset {}\n                count := Std_k98ojb.OnCount {}\n            }\n\n            items := numbers_ai\n\n            on_item := func(index: Number, item: Number) {\n                if (item != index + 1) {\n                    missing_number_ai := index + 1\n                    return\n                }\n            }\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of space, comma or dot with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7b8c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9d3a4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f2e6c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7b8c5f.input\n        \" \" -> replace_7b8c5f.search\n        \":\" -> replace_7b8c5f.replace\n        replace_7b8c5f.result -> replace_b9d3a4.input\n        \",\" -> replace_b9d3a4.search\n        \":\" -> replace_b9d3a4.replace\n        replace_b9d3a4.result -> replace_f2e6c1.input\n        \".\" -> replace_f2e6c1.search\n        \":\" -> replace_f2e6c1.replace\n        replace_f2e6c1.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_8f3b7a root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of spaces, commas or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_f9e8f5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 26) replace_ea3c6d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 51) replace_7b4c1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_f9e8f5.input\n        \" \" -> replace_f9e8f5.search\n        \":\" -> replace_f9e8f5.replace\n        replace_f9e8f5.result -> replace_ea3c6d.input\n        \",\" -> replace_ea3c6d.search\n        \":\" -> replace_ea3c6d.replace\n        replace_ea3c6d.result -> replace_7b4c1c.input\n        \".\" -> replace_7b4c1c.search\n        \":\" -> replace_7b4c1c.replace\n        replace_7b4c1c.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3a5d8e root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f5b3a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4d9e6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8c7f1d root.Std_k98ojb.Strings.Replace {}\n        replace_7f5b3a.output -> replace_4d9e6c.input\n        replace_4d9e6c.output -> replace_8c7f1d.input\n        input_0 -> replace_7f5b3a.input\n        \" \" -> replace_7f5b3a.search\n        \":\" -> replace_7f5b3a.replace\n        \",\" -> replace_4d9e6c.search\n        \":\" -> replace_4d9e6c.replace\n        \".\" -> replace_8c7f1d.search\n        \":\" -> replace_8c7f1d.replace\n        replace_8c7f1d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_f4a2e6 root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d4c3e8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d7f9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_c6f2a1 root.Std_k98ojb.Strings.Replace {}\n        replace_d4c3e8.output -> replace_5d7f9a.input\n        replace_5d7f9a.output -> replace_c6f2a1.input\n        \":\" -> replace_d4c3e8.replace\n        \" \" -> replace_d4c3e8.search\n        \":\" -> replace_5d7f9a.replace\n        \",\" -> replace_5d7f9a.search\n        \":\" -> replace_c6f2a1.replace\n        \".\" -> replace_c6f2a1.search\n        input_0 -> replace_d4c3e8.input\n        replace_c6f2a1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_7b5a9d root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of spaces, commas and dots with colons.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7b8e9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 31) replace_f6a5d4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 61) replace_b2c3e1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7b8e9f.input\n        \" \" -> replace_7b8e9f.search\n        \":\" -> replace_7b8e9f.replace\n        replace_7b8e9f.output -> replace_f6a5d4.input\n        \",\" -> replace_f6a5d4.search\n        \":\" -> replace_f6a5d4.replace\n        replace_f6a5d4.output -> replace_b2c3e1.input\n        \".\" -> replace_b2c3e1.search\n        \":\" -> replace_b2c3e1.replace\n        replace_b2c3e1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_9a8b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_a9f4e5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8d6a7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_3e2b1d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_a9f4e5.input\n        \" \" -> replace_a9f4e5.search\n        \":\" -> replace_a9f4e5.replace\n        replace_a9f4e5.output -> replace_8d6a7c.input\n        \",\" -> replace_8d6a7c.search\n        \":\" -> replace_8d6a7c.replace\n        replace_8d6a7c.output -> replace_3e2b1d.input\n        \".\" -> replace_3e2b1d.search\n        \":\" -> replace_3e2b1d.replace\n        replace_3e2b1d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_f4a8f7 root.main.text_replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7e6d9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_bf5c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_c3a2d5 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7e6d9a.input\n        \" \" -> replace_7e6d9a.search\n        \":\" -> replace_7e6d9a.replace\n        replace_7e6d9a.result -> replace_bf5c8f.input\n        \",\" -> replace_bf5c8f.search\n        \":\" -> replace_bf5c8f.replace\n        replace_bf5c8f.result -> replace_c3a2d5.input\n        \".\" -> replace_c3a2d5.search\n        \":\" -> replace_c3a2d5.replace\n        replace_c3a2d5.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_d7b4f9 root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_9f6c4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_d3e7d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c1d2b8 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9f6c4a.input\n        \" \" -> replace_9f6c4a.search\n        \":\" -> replace_9f6c4a.replace\n        replace_9f6c4a.result -> replace_d3e7d5.input\n        \",\" -> replace_d3e7d5.search\n        \":\" -> replace_d3e7d5.replace\n        replace_d3e7d5.result -> replace_c1d2b8.input\n        \".\" -> replace_c1d2b8.search\n        \":\" -> replace_c1d2b8.replace\n        replace_c1d2b8.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_3f7a9c root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_ba8c3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_c9e4d7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_5a6d2e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_ba8c3f.input\n        \" \" -> replace_ba8c3f.search\n        \":\" -> replace_ba8c3f.replace\n        replace_ba8c3f.output -> replace_c9e4d7.input\n        \",\" -> replace_c9e4d7.search\n        \":\" -> replace_c9e4d7.replace\n        replace_c9e4d7.output -> replace_5a6d2e.input\n        \".\" -> replace_5a6d2e.search\n        \":\" -> replace_5a6d2e.replace\n        replace_5a6d2e.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_a3f9b8 root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of spaces, commas or dots with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f6c9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d5b8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_8b3d2f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f6c9a.input\n        \" \" -> replace_4f6c9a.search\n        \":\" -> replace_4f6c9a.replace\n        replace_4f6c9a.result -> replace_7d5b8e.input\n        \",\" -> replace_7d5b8e.search\n        \":\" -> replace_7d5b8e.replace\n        replace_7d5b8e.result -> replace_8b3d2f.input\n        \".\" -> replace_8b3d2f.search\n        \":\" -> replace_8b3d2f.replace\n        replace_8b3d2f.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_e54b7f root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_character {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n == input[0])\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d.length() -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substring_8e4c3d root.Std_k98ojb.Strings.Substring {}\n            input_f5c03d -> substring_8e4c3d.input\n            element_5f51f7 -> substring_8e4c3d.start\n            (element_5f51f7 + 1) -> substring_8e4c3d.end\n            substring_8e4c3d.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.length() -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d[0] -> expression_9fba8c.gen_0\n        add_b4554f.result -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_character_f0be66 root.main.is_same_character {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7e6f5a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) getat_5f1c3d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1312, y: -319) not_9e0b6c root.Std_k98ojb.Logic.Not {}\n        1 -> characters_7e6f5a.string\n        input_f5c03d -> characters_7e6f5a\n        characters_7e6f5a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_c9a8c4 root.Std_k98ojb.Math.Expression {\n                expression: \"(element == first_char)\"\n            }\n            element_5f51f7 -> expression_c9a8c4.gen_1\n            getat_5f1c3d.value -> expression_c9a8c4.gen_0\n            expression_c9a8c4.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        not_9e0b6c.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> getat_5f1c3d.index\n        characters_7e6f5a.characters -> getat_5f1c3d.list\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_c5e9d4 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(i == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d.length() -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_c8c1a6 root.Std_k98ojb.Strings.Substring {}\n            input_f5c03d -> substr_c8c1a6.input\n            element_5f51f7 -> substr_c8c1a6.start\n            func() {\n                in(x: -76, y: 46, name: \"element\") property(Number) element_3b4e2d\n\n                out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n                instance(x: 106, y: 17) add_5a7c8f root.Std_k98ojb.Math.Add {}\n                element_3b4e2d -> add_5a7c8f.first\n                1 -> add_5a7c8f.second\n                add_5a7c8f.result -> substr_c8c1a6.end\n            } -> substr_c8c1a6.execute\n            substr_c8c1a6.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.length() -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d.substr(0, 1) -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_chars_same_f0be66 root.main.is_all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_3f1d5a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(c == first_char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) firstitem_0d1e4c root.Std_k98ojb.List.FirstItem {}\n\n        input_f5c03d -> characters_3f1d5a.string\n        characters_3f1d5a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_c4b8d1 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> eq_c4b8d1.left\n            firstitem_0d1e4c.item -> eq_c4b8d1.right\n            eq_c4b8d1.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> firstitem_0d1e4c.index\n        characters_3f1d5a.characters -> firstitem_0d1e4c.list\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_7d9e5a root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_6a1e5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n != i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_6a1e5f.string\n        characters_6a1e5f.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) firstitem_e6a9c8 root.Std_k98ojb.List.FirstItem {}\n            characters_6a1e5f.characters -> firstitem_e6a9c8.list\n            firstitem_e6a9c8.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        firstitem_e6a9c8.item -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        firstitem_e6a9c8.item -> expression_b720d7.gen_0\n        for_8cb3f6.index -> expression_b720d7.gen_1\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_f0be66 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d.characters.length -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) pick_c8d4b9 root.Std_k98ojb.Query.Pick {}\n            input_f5c03d.characters -> pick_c8d4b9.items\n            element_5f51f7 -> pick_c8d4b9.key\n            pick_c8d4b9.value -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.characters[0] -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d.characters[0] -> expression_9fba8c.gen_0\n        input_f5c03d.characters[0] -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_chars_same_f0be66 root.main.is_all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> generaterange_038fce.from\n        func() {\n            in(x: -76, y: 46, name: \"index\") property(Number) index_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substring_f1d9c4 root.Std_k98ojb.Strings.Substring {}\n            input_f5c03d -> substring_f1d9c4.input\n            index_5f51f7 -> substring_f1d9c4.start\n            1 -> substring_f1d9c4.end\n            substring_f1d9c4.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        map_6030c9.output_list[0] -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_9fba8c.gen_1\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_chars_same {\n        in(x: 353, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c7e3a4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) equal_2e3d0f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) not_1c5b9f root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> characters_c7e3a4.string\n        characters_c7e3a4.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_f8a2d6 root.Std_k98ojb.Strings.Substring {}\n            element_5f51f7 -> substr_f8a2d6.input\n            0 -> substr_f8a2d6.start\n            1 -> substr_f8a2d6.end\n            substr_f8a2d6.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_2e3d0f.left\n        map_6030c9.output_list[0] -> equal_2e3d0f.right\n        equal_2e3d0f.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        not_1c5b9f.input -> out_f3db9f\n        and_80a119.result -> not_1c5b9f.input\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_chars_same_f0be66 root.main.is_all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1982, y: -53) firstitem_7c6d9e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 1975, y: -187) substring_f8a3ba root.Std_k98ojb.Strings.Substring {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substring_c1c8d2 root.Std_k98ojb.Strings.Substring {}\n            0 -> substring_c1c8d2.start\n            element_5f51f7 -> substring_c1c8d2.input\n            substring_c1c8d2.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        substring_f8a3ba.start -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> substring_f8a3ba.end\n        input_f5c03d -> substring_f8a3ba.input\n        firstitem_7c6d9e.item -> substring_f8a3ba.start\n        if_07b8c7.value -> substring_f8a3ba.input\n        substring_f8a3ba.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        substring_f8a3ba.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        input_f5c03d -> firstitem_7c6d9e.input\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_2b0c1e root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1977, y: -53) not_1c0e9f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1983, y: -187) matchindices_f5a2d6 root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 1968, y: 25) choose_4f7e1c root.Std_k98ojb.Std.Choose {}\n        instance(x: 1970, y: 74) switch_3b1b9f root.Std_k98ojb.Std.Switch {}\n        instance(x: 1986, y: -53) if_f2a8a4 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n\n        instance(x: 1972, y: -53) substrings_d6e3a4 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 1961, y: 74) substring_8f9a3d root.Std_k98ojb.Strings.Substring {}\n        input_f5c03d -> matchindices_f5a2d6.string\n        matchindices_f5a2d6.matches -> switch_3b1b9f.trigger\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(List) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) not_1c0e9f root.Std_k98ojb.Logic.Not {}\n            element_5f51f7 -> not_1c0e9f.input\n            not_1c0e9f.result -> out_d0fd24\n        } -> switch_3b1b9f.handler\n        matchindices_f5a2d6.matches -> choose_4f7e1c.predicate\n        switch_3b1b9f.value -> choose_4f7e1c.then\n        1 -> choose_4f7e1c.else\n        choose_4f7e1c.value -> if_f2a8a4.predicate\n        if_f2a8a4.then -> continue_8ba06b\n        matchindices_f5a2d6.matches -> for_8cb3f6.items\n        for_8cb3f6.item -> substrings_d6e3a4.start\n        0 -> substrings_d6e3a4.end\n        input_f5c03d -> substrings_d6e3a4.string\n        substrings_d6e3a4.substring -> substring_8f9a3d.string\n        for_8cb3f6.index -> substring_8f9a3d.start\n        1 -> substring_8f9a3d.end\n        substring_8f9a3d.substring -> if_f2a8a4.execute\n        if_f2a8a4.else -> for_8cb3f6.next\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.then -> continue_8ba06b\n        choose_4f7e1c.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_b5d2d0 root.main.all_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_7f6b5c\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) matchindices_9f3a7d root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 656, y: -330) len_5c2a8d root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        matchindices_9f3a7d.pattern: \"0|1|2|3|4|5|6|7|8|9\"\n        input_string_7f6b5c -> matchindices_9f3a7d.input\n        matchindices_9f3a7d.indices -> len_5c2a8d.list\n        len_5c2a8d.length -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.s_6b655b -> substr_4f5c7d.input\n        substr_4f5c7d.start -> number_3f2b1c.index\n        1 -> substr_4f5c7d.end\n        substr_4f5c7d.result -> is_numeric_adfa16.input\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        number_3f2b1c.value -> add_88bb8a.second\n        number_3f2b1c.index -> substr_4f5c7d.start\n        0 -> number_3f2b1c.index\n        count_digits_96023e.s_6b655b -> number_3f2b1c.input\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) regex_firstmatch_e1f2d7 root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"\\\\d\"\n        }\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n\n        input_string_6b655b -> regex_firstmatch_e1f2d7.input\n        regex_firstmatch_e1f2d7.matched -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_41e4ad.execute\n\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.output_732a8a -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n    }\n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_8f5a2c root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b.characters -> count_digits_96023e.s_6b655b\n        s_6b655b -> isnumeric_8f5a2c.input\n        isnumeric_8f5a2c.output -> ifexpression_3d7de6.gen_0\n        count_digits_96023e.rest -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_8a1f5d root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) substring_b1e5c7 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -249) length_4f3d2b root.Std_k98ojb.Strings.Length {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> substring_b1e5c7.input\n        0 -> substring_b1e5c7.start\n        length_4f3d2b.result - 1 -> substring_b1e5c7.end\n\n        substring_b1e5c7.result -> is_numeric_8a1f5d.input\n        is_numeric_8a1f5d.value -> add_88bb8a.first\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        s_6b655b -> substring_b1e5c7.input\n        1 -> length_4f3d2b.string\n\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) length_bf5c1d root.Std_k98ojb.Strings.Length {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: 97, y: -127) substring_f3e9b8 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 99, y: -249) is_numeric_c5d2c6 root.Std_k98ojb.Strings.IsNumeric {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        input_string_6b655b -> length_bf5c1d.string\n        length_bf5c1d.length -> for_loop_start.index_max\n        0 -> for_loop_start.index_init\n        execute_cdac2a -> for_loop_start.trigger\n        for_loop_start.continue -> substring_f3e9b8.start\n        for_loop_start.index -> substring_f3e9b8.end\n        input_string_6b655b -> substring_f3e9b8.string\n        substring_f3e9b8.substring -> is_numeric_c5d2c6.input\n\n        is_numeric_c5d2c6.result -> ifexpression_1.execute\n        instance(x: 80, y: -417) ifexpression_1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_numeric_c5d2c6.result\"\n        }\n        ifexpression_1.then -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        for_loop_start.next -> setter_375321.execute\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> for_loop_start.next\n        getter_38583a.value -> output_732a8a\n\n    }\n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_547f34 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.Strings.Length {}\n        1 -> substring_547f34.end\n        0 -> add_88bb8a.first\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        isnumeric_adfa16.input -> add_88bb8a.second\n        1 -> add_88bb8a.second\n        isnumeric_adfa16.result -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> length_61b38d.input\n        substring_547f34.start -> count_digits_96023e.s_6b655b\n        length_61b38d.output -> substring_547f34.end\n        length_61b38d.output -> ifexpression_3d7de6.gen_0\n        s_6b655b -> isnumeric_adfa16.input\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_f3d9f4 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -127) isnumeric_d5c7e6 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> substring_f3d9f4.input\n        0 -> substring_f3d9f4.start\n        -1 -> substring_f3d9f4.end\n        substring_f3d9f4.result -> isnumeric_d5c7e6.input\n        isnumeric_d5c7e6.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.output_732a8a -> substring_f3d9f4.input\n        count_digits_96023e.s_6b655b -> substring_f3d9f4.end\n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_b5c9d2 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -127) isnumeric_4e3f1e root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_1e8f2b root.Std_k98ojb.Strings.Length {}\n        instance(x: 97, y: -249) concat_3d9c5a root.Std_k98ojb.Strings.Concat {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> length_1e8f2b.input\n        length_1e8f2b.output -> substring_b5c9d2.end\n        0 -> substring_b5c9d2.start\n        substring_b5c9d2.result -> isnumeric_4e3f1e.input\n        isnumeric_4e3f1e.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        count_digits_96023e.s_6b655b -> substring_b5c9d2.string\n        concat_3d9c5a.left -> count_digits_96023e.s_6b655b\n        concat_3d9c5a.right -> substring_b5c9d2.result\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        count_digits_96023e.continue_d9efd7 -> concat_3d9c5a.left\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substr_547f34 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.Strings.Length {}\n        1 -> substr_547f34.end\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        substr_547f34.input -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        length_61b38d.string -> substr_547f34.start\n        s_6b655b -> length_61b38d.string\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        substr_547f34.input -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: 136) expression_5f7b1e root.Std_k98ojb.Math.Expression {\n            expression: \"div.result*div.result\"\n        }\n        div_64046c.result -> expression_5f7b1e.gen_0\n\n        expression_5f7b1e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_a8d2a4 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 23, y: -1) pow_7f9e5c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_b4e8f8 = 4\n        div_64046c.result -> pow_7f9e5c.first\n        data_b4e8f8 -> pow_7f9e5c.second\n\n        instance(x: 23, y: -1) sum_instance root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(a: Number, b: Number, i: Number, ctx: Any) Number {\n                return a + b\n            }\n        }\n\n        instance(x: 303, y: 2) range_9f3d6c root.Std_k98ojb.List.GenerateRange {}\n        data_instance(x: 330, y: 133) data_a1e8c4 = 1\n        n_3a3116 -> range_9f3d6c.to\n        data_a1e8c4 -> range_9f3d6c.from\n\n        pow_7f9e5c.result -> sum_instance.item\n        range_9f3d6c.list -> sum_instance.items\n        sum_instance.output -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_instance root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: -1) pow_instance root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_instance.base\n        data_instance(x: 500, y: 133) data_instance_for_pow = 4\n        data_instance_for_pow -> pow_instance.exponent\n\n        pow_instance.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_instance root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c5e4d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 2\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9c5e4d.second\n        expression_2d6da6.result -> pow_9c5e4d.first\n        data_cde0dc -> pow_9c5e4d.power\n        pow_9c5e4d.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_b1a8a5 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 23, y: -1) pow_a5f9b8 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a5f9b8.base\n        data_instance(x: 330, y: 133) data_4d7a6e = 4\n        data_4d7a6e -> pow_a5f9b8.exponent\n\n        pow_a5f9b8.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_1c2b3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: 136) fourth_power_expression root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        div_64046c.result -> fourth_power_expression.first\n        n_3a3116 -> fourth_power_expression.gen_0\n\n        instance(x: 303, y: 2) final_div root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> final_div.second\n        fourth_power_expression.result -> final_div.first\n\n        final_div.result -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 403, y: -5) pow_7b8e9f root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_7b8e9f.base\n        data_instance(x: 490, y: 133) data_e1d4a2  = 4\n        data_e1d4a2 -> pow_7b8e9f.exponent\n        pow_7b8e9f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_c5c6f0 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: -1) pow_instance root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_instance.base\n        data_instance(x: 330, y: 133) data_pow = 4\n        data_pow -> pow_instance.exponent\n\n        pow_instance.result -> sum_365f7b\n    }\n}\n\ninstance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_8c4e9d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 2\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_8c4e9d.second\n        expression_2d6da6.result -> pow_8c4e9d.first\n        data_cde0dc -> pow_8c4e9d.third\n        pow_8c4e9d.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 23, y: -1) pow_7f8e9c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_7f8e9c.first\n        data_instance(x: 330, y: 133) data_4a5b2d  = 2\n        data_4a5b2d -> pow_7f8e9c.second\n        pow_7f8e9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube with a given side length.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side\") property(Number) side_3e6f5d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f7c2a8\n\n        instance(x: 94, y: -105) mul_d0b9a4 root.Std_k98ojb.Math.Mul {}\n        side_3e6f5d -> mul_d0b9a4.first\n        6 -> mul_d0b9a4.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) pow_eb5d9a root.Std_k98ojb.Math.Pow {}\n            x_8ee839 -> pow_eb5d9a.x\n            2 -> pow_eb5d9a.y\n            pow_eb5d9a.result -> _7dd980\n        } -> mul_d0b9a4.second\n        mul_d0b9a4.result -> surfaceArea_f7c2a8\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") find_surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3f6b9d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surface_area_b5c8e7\n\n        instance(x: 94, y: -105) mul_4a1c2d root.Std_k98ojb.Math.Mul {}\n        size_3f6b9d -> mul_4a1c2d.first\n        6 -> mul_4a1c2d.second\n        mul_4a1c2d.result -> surface_area_b5c8e7\n    }\n\n    \n\n    instance(x: -92, y: 45) find_surface_area_of_cube_c9f3b7 root.main.find_surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_9f5a3e\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_7b2c8d\n\n        instance(x: 94, y: -105) mul_f0b6d1 root.Std_k98ojb.Math.Mul {}\n        size_9f5a3e -> mul_f0b6d1.first\n        size_9f5a3e -> mul_f0b6d1.second\n        mul_f0b6d1.result -> surfaceArea_7b2c8d\n\n        instance(x: 94, y: -145) mul_3b4c9d root.Std_k98ojb.Math.Mul {}\n        size_9f5a3e -> mul_3b4c9d.first\n        6 -> mul_3b6d1.second\n        mul_f0b6d1.result -> mul_3b4c9d.first\n        mul_3b4c9d.result -> surfaceArea_7b2c8d\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1a5f9e\n\n        out(x: 656, y: -68, name: \"\") property(Number) _7dd980\n\n        instance(x: 94, y: -105) mul_4d0b8a root.Std_k98ojb.Math.Mul {}\n        6 -> mul_4d0b8a.first\n        size_1a5f9e -> mul_4d0b8a.second\n        mul_4d0b8a.result -> _7dd980\n\n        instance(x: 94, y: -105) pow_d3c2a6 root.Std_k98ojb.Math.Pow {}\n        size_1a5f9e -> pow_d3c2a6.x\n        2 -> pow_d3c2a6.y\n        instance(x: 94, y: -105) mul_f4d7b8 root.Std_k98ojb.Math.Mul {}\n        mul_4d0b8a.result -> mul_f4d7b8.first\n        pow_d3c2a6.result -> mul_f4d7b8.second\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_e5e7d9 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") find_surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1a8d4e\n\n        out(x: 656, y: -68, name: \"\") property(Number) _7dd980\n\n        instance(x: 94, y: -105) mul_a6b5c0 root.Std_k98ojb.Math.Mul {}\n        size_1a8d4e -> mul_a6b5c0.first\n        6 -> mul_a6b5c0.second\n        mul_a6b5c0.result -> _7dd980\n\n        instance(x: -90, y: -105) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        size_1a8d4e -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        mul_a6b5c0.first <- pow_584bfd.result\n    }\n\n    \n\n    instance(x: -92, y: 45) find_surface_area_of_cube_7f3d9c root.main.find_surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_9f0d7a\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1c2e8b\n\n        instance(x: 94, y: -105) mul_a5b4f6 root.Std_k98ojb.Math.Mul {}\n        size_9f0d7a -> mul_a5b4f6.first\n        6 -> mul_a5b5f6.second\n        mul_a5b4f6.result -> surface_area_1c2e8b\n\n        instance(x: -20, y: -45) pow_c3e9fd root.Std_k98ojb.Math.Pow {}\n        size_9f0d7a -> pow_c3e9fd.x\n        2 -> pow_c3e9fd.y\n        mul_a5b4f6.first <- pow_c3e9fd.result\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_e8c1d0 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3f0e1b\n\n        out(x: 656, y: -68, name: \"\") property(Number) _a8d7c4\n\n        instance(x: 94, y: -105) mul_f5c6e2 root.Std_k98ojb.Math.Mul {}\n        size_3f0e1b -> mul_f5c6e2.first\n        size_3f0e1b -> mul_f5c6e2.second\n        mul_f5c6e2.result -> _a8d7c4\n\n        instance(x: 94, y: -30) mul_9e3d4a root.Std_k98ojb.Math.Mul {}\n        _a8d7c4 -> mul_9e3d4a.first\n        6 -> mul_9e3d4a.second\n        mul_9e3d4a.result -> _a8d7c4\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_f0b5d2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8ee839\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_cbb7bd\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_8ee839 -> mul_f2330d.first\n        size_8ee839 -> mul_f2330d.second\n        mul_f2330d.result -> surfaceArea_cbb7bd\n\n        instance(x: 94, y: -145) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        mul_f2330d.result -> mul_584bfd.first\n        6 -> mul_584bfd.second\n        mul_584bfd.result -> surfaceArea_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -120, y: -80, name: \"size\") property(Number) size_9e4f6d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_ea7b2c\n\n        instance(x: 94, y: -105) mul_3c5b0e root.Std_k98ojb.Math.Mul {}\n        size_9e4f6d -> mul_3c5b0e.first\n        size_9e4f6d -> mul_3c5b0e.second\n        mul_3c5b0e.result -> surfaceArea_ea7b2c\n\n        instance(x: 94, y: -135) mul_b8a1d1 root.Std_k98ojb.Math.Mul {}\n        6 -> mul_b8a1d1.first\n        surfaceArea_ea7b2c -> mul_b8a1d1.second\n        mul_b8a1d1.result -> surfaceArea_ea7b2c\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_3e4f9b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_9a1d6f\n\n        out(x: 656, y: -68, name: \"\") property(Number) _3e7b5c\n\n        instance(x: 94, y: -105) mul_a8d0f2 root.Std_k98ojb.Math.Mul {}\n        size_9a1d6f -> mul_a8d0f2.first\n        6 -> mul_a8d0f2.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_f7c5b3\n\n            out(x: 333, y: -50, name: \"\") property(Number) _a4e1c9\n\n            instance(x: 92, y: -22) mul_6f0d8f root.Std_k98ojb.Math.Mul {}\n            x_f7c5b3 -> mul_6f0d8f.first\n            x_f7c5b3 -> mul_6f0d8f.second\n            mul_6f0d8f.result -> _a4e1c9\n        } -> mul_a8d0f2.handler\n        mul_a8d0f2.result -> _3e7b5c\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_6f9c1a root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -483) subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> subtract_node.first\n        min_value_ai -> subtract_node.second\n        subtract_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_value_node root.main.diff_max_min {}\n    instance(x: 426, y: -393) min_value_node root.main.diff_max_min {}\n    instance(x: 426, y: -483) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -483) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.range_diff {}\n    instance(x: 426, y: -393) list_min_node root.main.range_diff {}\n    instance(x: 426, y: -483) sub_node root.main.range_diff {}\n\n    property(x: 159, y: -369, name: \"max_value\") Number max_value_ai\n    property(x: 159, y: -459, name: \"min_value\") Number min_value_ai\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") range_of_values {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -483) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range_of_values.list_max_node {}\n    instance(x: 426, y: -393) min_node root.main.range_of_values.list_min_node {}\n    instance(x: 426, y: -483) sub_node root.main.range_of_values.sub_node {}\n\n    \n    instance(x: 426, y: -573) range_of_values_node root.main.range_of_values {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_of_list {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range_of_list {}\n    instance(x: 426, y: -423) min_node root.main.range_of_list {}\n    instance(x: 426, y: -543) sub_node root.main.range_of_list {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -503) subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> subtract_node.first\n        min_value_ai -> subtract_node.second\n        subtract_node.result -> range_ai\n    }\n\n    property(Number) max_value_ai\n    property(Number) min_value_ai\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.range_diff {}\n    instance(x: 426, y: -403) list_min_node root.main.range_diff {}\n    instance(x: 426, y: -503) subtract_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest number in a list.\") range {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -432) max_node root.Std_k98ojb.List.Max {}\n\n        items_ai -> min_node.items\n        items_ai -> max_node.items\n\n        min_node.min -> range_sub.left\n        max_node.max -> range_sub.right\n\n        instance(x: 639, y: -378) range_sub_node root.Std_k98ojb.Math.Sub {}\n        range_sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) min_node root.main.range {}\n    instance(x: 426, y: -432) max_node root.main.range {}\n    instance(x: 639, y: -378) range_sub_node root.main.range {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -408) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        instance(x: 426, y: -503) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_ai -> math_sub_node.first\n        min_ai -> math_sub_node.second\n        math_sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.range_diff {}\n    instance(x: 426, y: -408) list_min_node root.main.range_diff {}\n    instance(x: 426, y: -503) math_sub_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest number in a list.\") range {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 626, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n        math_sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range {}\n    instance(x: 426, y: -403) min_node root.main.range {}\n    instance(x: 626, y: -303) sub_node root.main.range {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -453) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -603) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range_diff {}\n    instance(x: 426, y: -453) min_node root.main.range_diff {}\n    instance(x: 426, y: -603) sub_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_of_list {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        items_ai -> max_node.list\n        max_node.max -> max_value_ai\n\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n        items_ai -> min_node.items\n        min_node.min -> min_value_ai\n\n        instance(x: 426, y: -618) subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> subtract_node.first\n        min_value_ai -> subtract_node.second\n        subtract_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range_of_list.Max {}\n    instance(x: 426, y: -423) min_node root.main.range_of_list.Min {}\n    out(x: 159, y: -399, name: \"max_value\") property(Number) max_value_ai\n    out(x: 159, y: -585, name: \"min_value\") property(Number) min_value_ai\n    instance(x: 426, y: -618) subtract_node root.main.range_of_list.Sub {}\n\n    \n    instance(x: 426, y: -303) range_of_list_node root.main.range_of_list {}\n    \n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") EvenCheck {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) check_even root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_even.num\n        check_even.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.EvenCheck {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.number\n        if_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        instance(x: 772, y: 176) equals_7b3b7b root.Std_k98ojb.Logic.Equal {\n            left: modulo_7b3b7b.result\n            right: 0\n        }\n        equals_7b3b7b.value -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) check_even_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> check_even_7b3b7b.number\n        check_even_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.num\n        if_7b3b7b.value -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_1\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) expression_5a4f8b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_1 -> expression_5a4f8b.num\n        expression_5a4f8b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) check_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> check_7b3b7b.number\n        check_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.num\n        if_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.number\n        if_7b3b7b.value -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) check_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> check_7b3b7b.number\n        check_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_4a8f3b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_b7c9d2\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_1f5a3c\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7e8d9b\n\n            instance(x: 89, y: 29) contains_2d4f6a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            contains_2d4f6a.list -> notequal_807ffd.right\n            elem_1f5a3c -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_7e8d9b\n        } -> find_6d05b0.predicate\n\n        instance(x: 100, y: -50) char_list_3c4d2e root.Std_k98ojb.Strings.Characters {}\n        string_4a8f3b -> char_list_3c4d2e.input\n\n        instance(x: 150, y: -100) seen_chars_a1b2c3 root.Std_k98ojb.List.Empty {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_seen_5f6a7d\n            out(x: 515, y: 44, name: \"list\") property(List) list_seen_8e9f0b\n\n            instance(x: 89, y: 29) add_1c2d3e root.Std_k98ojb.List.Add {}\n            seen_chars_a1b2c3.listWithoutItem -> add_1c2d3e.list\n            elem_seen_5f6a7d -> add_1c2d3e.item\n            add_1c2d3e.listWithItem -> list_seen_8e9f0b\n        } -> find_6d05b0.onItem\n\n        char_list_3c4d2e.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_b7c9d2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_5f8a1c root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_7f3a2c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4d9b8e\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1a2b3c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) index_of_1088d5 root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> index_of_1088d5.start\n            char_1a2b3c -> index_of_1088d5.search\n            input_7f3a2c -> index_of_1088d5.string\n            notequal_807ffd.right -> bool_af09a7\n            index_of_1088d5.index -> notequal_807ffd.left\n            -1 -> notequal_807ffd.right\n        } -> find_repeated_char_6d05b0.predicate\n        instance(x: 89, y: 29) characters_9f6850 root.Std_k98ojb.Strings.Characters {}\n        input_7f3a2c -> characters_9f6850.string\n        characters_9f6850.characters -> find_repeated_char_6d05b0.items\n        find_repeated_char_6d05b0.item -> char_4d9b8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2f3b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) matchindices_3b2c1d root.Std_k98ojb.Strings.MatchIndices {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            matchindices_3b2c1d.counts -> notequal_807ffd.left\n            elem_9f6850 -> matchindices_3b2c1d.input\n            matchindices_3b2c1d.matches[0] -> char_4d5e6f\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        string_1a2f3b -> find_6d05b0.items\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_5c9e8h root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_7g8h9i\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_j0k1l2\n\n            instance(x: 89, y: 29) contains_3m4n5o root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) relay_a6b7c8 root.Std_k98ojb.Relay {}\n            \n            string_1a2b3c -> relay_a6b7c8.input\n            relay_a6b7c8.value -> contains_3m4n5o.list\n\n            current_char_7g8h9i -> contains_3m4n5o.item\n            contains_3m4n5o.result -> is_repeated_j0k1l2\n        } -> find_first_repeated.predicate\n        relay_a6b7c8.value -> find_first_repeated.items\n        find_first_repeated.item -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_7f3a1d\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_8b4c2e\n\n        instance(x: 0, y: 0) find_first_repeat_9c6b2d root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1a3f7e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d4c8a2\n\n            instance(x: 89, y: 29) contains_5b6d9a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) characters_3e7f1c root.Std_k98ojb.Strings.Characters {}\n            instance(x: 420, y: 50) slice_2f8b4d root.Std_k98ojb.List.Slice {}\n\n            input_7f3a1d -> characters_3e7f1c.string\n            char_1a3f7e -> contains_5b6d9a.item\n            slice_2f8b4d.list -> contains_5b6d9a.list\n\n            0 -> slice_2f8b4d.start\n            characters_3e7f1c.characters -> slice_2f8b4d.list\n            char_1a3f7e.index -> slice_2f8b4d.end\n            contains_5b6d9a.result -> bool_d4c8a2\n        } -> find_first_repeat_9c6b2d.predicate\n        characters_3e7f1c.characters -> find_first_repeat_9c6b2d.items\n        find_first_repeat_9c6b2d.item -> char_8b4c2e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1f8d2b\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_4e7c9a\n\n        instance(x: 0, y: 0) find_repeated_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) index_of_1088d5 root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> index_of_1088d5.start\n            string_1f8d2b -> index_of_1088d5.string\n            elem_9f6850 -> index_of_1088d5.search\n            index_of_1088d5.index -> notequal_807ffd.left\n            -1 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_repeated_6d05b0.predicate\n        string_1f8d2b.Characters() -> find_repeated_6d05b0.items\n        find_repeated_6d05b0.item -> char_4e7c9a\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1f2a3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_4b5d6e\n\n        instance(x: 0, y: 0) find_repeated_char_7f8g9h root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_2i3j4k\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_l1m2n3o\n\n            instance(x: 89, y: 29) contains_check_pqrstu root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) substring_vwx_yz root.Std_k98ojb.Strings.Substring {}\n\n            substring_vwx_yz.end -> -1\n            char_2i3j4k -> substring_vwx_yz.start\n\n            contains_check_pqrstu.list -> substring_vwx_yz.result\n            char_2i3j4k -> contains_check_pqrstu.item\n\n            contains_check_pqrstu.result -> bool_l1m2n3o\n        } -> find_repeated_char_7f8g9h.predicate\n        string_1f2a3c -> root.Std_k98ojb.Strings.Characters.characters\n        find_repeated_char_7f8g9h.item -> char_4b5d6e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1f4a8b\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_7c3d2e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) matchindices_e8b2d5 root.Std_k98ojb.Strings.MatchIndices {}\n            instance(x: 310, y: 35) contains_4f3e6c root.Std_k98ojb.Strings.Contains {}\n            0 -> contains_4f3e6c.contains\n            char_9f6850 -> contains_4f3e6c.input\n            matchindices_e8b2d5.matches -> contains_4f3e6c.contains\n            contains_4f3e6c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        string_1f4a8b -> matchindices_e8b2d5.input\n        1 -> matchindices_e8b2d5.pattern\n        matchindices_e8b2d5.matches -> find_6d05b0.items\n        find_6d05b0.item -> char_7c3d2e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1f3d4a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_7b2c8e\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_a1f685\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9af09a\n\n            instance(x: 89, y: 29) first_index_1088d5 root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(Char) item_b1f685\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2af09a\n\n                instance(x: 89, y: 29) equal_1088d5 root.Std_k98ojb.Logic.Equal {}\n                func() {\n                    in(x: -113, y: 34, name: \"left\") property(Char) left_c1f685\n                    in(x: -113, y: 34, name: \"right\") property(Char) right_d1f685\n\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3af09a\n\n                    equal_1088d5.left -> left_c1f685\n                    char_a1f685 -> equal_1088d5.right\n                    equal_1088d5.result -> bool_3af09a\n                } -> bool_2af09a\n                string_1f3d4a.characters -> first_index_1088d5.items\n                item_b1f685 -> first_index_1088d5.predicate\n            }\n            instance(x: 89, y: 29) second_index_1088d5 root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(Char) item_e1f685\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4af09a\n\n                instance(x: 89, y: 29) equal_1088d5 root.Std_k98ojb.Logic.Equal {}\n                func() {\n                    in(x: -113, y: 34, name: \"left\") property(Char) left_f1f685\n                    in(x: -113, y: 34, name: \"right\") property(Char) right_g1f685\n\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5af09a\n\n                    equal_1088d5.left -> left_f1f685\n                    char_a1f685 -> equal_1088d5.right\n                    equal_1088d5.result -> bool_5af09a\n                } -> bool_4af09a\n                string_1f3d4a.characters -> second_index_1088d5.items\n                item_e1f685 -> second_index_1088d5.predicate\n            }\n            instance(x: 89, y: 29) less_than_1088d5 root.Std_k98ojb.Math.LessThan {}\n            func() {\n                in(x: -113, y: 34, name: \"left\") property(Number) left_h1f685\n                in(x: -113, y: 34, name: \"right\") property(Number) right_i1f685\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_6af09a\n\n                first_index_1088d5.index -> left_h1f685\n                second_index_1088d5.index -> right_i1f685\n                less_than_1088d5.result -> bool_6af09a\n            }\n            less_than_1088d5.result -> bool_9af09a\n        }\n        string_1f3d4a.characters -> find_repeated_char_6d05b0.items\n        char_a1f685 -> find_repeated_char_6d05b0.predicate\n        find_repeated_char_6d05b0.item -> char_7b2c8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1f9c3a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_7b4d2e\n\n        instance(x: 0, y: 0) find_first_repeated_5d8f6 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_3a9c7f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4d8e2b\n\n            instance(x: 89, y: 29) index_of_6f5b2 root.Std_k98ojb.List.IndexOf {}\n            instance(x: 310, y: 35) notequal_9c7a1d root.Std_k98ojb.Logic.NotEqual {}\n            0 -> index_of_6f5b2.index\n            input_1f9c3a.characters -> index_of_6f5b2.list\n            char_3a9c7f -> index_of_6f5b2.value\n            notequal_9c7a1d.right -> bool_4d8e2b\n            index_of_6f5b2.index -> notequal_9c7a1d.left\n            -1 -> notequal_9c7a1d.right\n        } -> find_first_repeated_5d8f6.predicate\n        input_1f9c3a.characters -> find_first_repeated_5d8f6.items\n        find_first_repeated_5d8f6.item -> char_7b4d2e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 639, y: -303) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted_list -> list_slice_node.list\n        instance(x: 852, y: -303) number_get_node root.Std_k98ojb.List.GetAt {}\n        list_slice_node.slice -> number_get_node.indexed_list\n        number_get_node.index = 1\n        number_get_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -423) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_get_at_node.list\n        instance(x: 426, y: -539) number_1_node root.Std_k98ojb.Constant {}\n        number_1_node.value = 1\n        list_get_at_node.index -> number_1_node.value\n        list_get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_sort_instance root.main.second_smallest_num.list_sort_node {}\n    instance(x: 426, y: -423) list_get_at_instance root.main.second_smallest_num.list_get_at_node {}\n    instance(x: 426, y: -539) number_1_instance root.main.second_smallest_num.number_1_node {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted_list -> list_slice_node.list\n        number_1 -> list_slice_node.start\n        number_2 -> list_slice_node.end\n        list_slice_node.slice -> second_min_ai\n\n        instance(x: 426, y: -618) constant_node root.Std_k98ojb.Constant {}\n        number_1 -> constant_node.value\n\n        instance(x: 426, y: -723) constant_node_1 root.Std_k98ojb.Constant {}\n        number_2 -> constant_node_1.value\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n    instance(x: 426, y: -618) number_1_node root.Std_k98ojb.Number.FromString {}\n    string(\"1\") -> number_1_node.string\n\n    \n    instance(x: 426, y: -723) number_2_node root.Std_k98ojb.Number.FromString {}\n    string(\"2\") -> number_2_node.string\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> sorted_list_ai\n\n        instance(x: 426, y: -483) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        sorted_list_ai -> list_get_at_node.list\n        number_1 -> list_get_at_node.index\n        list_get_at_node.value -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_instance root.main.second_smallest_num {}\n\n    instance(x: -426, y: -483) constant_number_node root.Std_k98ojb.Constant {}\n    number_1 = 1\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -423) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_get_at_node.list\n        list_get_at_node.index = 1\n        list_get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted_list -> list_slice_node.list\n        Std_k98ojb.List.GetAt(list_index: 1) -> list_slice_node.start\n        Std_k98ojb.List.Add(item: -1) -> list_slice_node.end\n\n        instance(x: 426, y: -519) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.sliced_list -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> sorted_list_node.items\n\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list_node.listWithItem -> list_slice_node.list\n        std.Constant(1) -> list_slice_node.start\n        std.Constant(-1) -> list_slice_node.end\n        list_slice_node.listWithoutItem -> second_min_node.items\n\n        instance(x: 426, y: -588) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.listWithoutItem -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sorted_list_node root.main.second_smallest_num {}\n\n    \n    instance(x: 426, y: -588) second_min_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -459) list_getat_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_getat_node.list\n        list_getat_node.index = 1\n        list_getat_node.value -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> sorted_list_node.items\n        \n        instance(x: 426, y: -423) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        sorted_list_node.listWithItem -> list_get_at_node.list\n        std.Const_0 -> list_get_at_node.index\n        list_get_at_node.value -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sorted_list_node root.main.second_smallest_num {}\n\n    \n    instance(x: 426, y: -423) second_smallest_num_node root.main.second_smallest_num {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.list -> list_slice_node.list\n        instance(x: 426, y: -588) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_slice_node.slice -> list_get_at_node.list\n        instance(x: 426, y: -723) list_min_node root.Std_k98ojb.List.Min {}\n        list_get_at_node.item -> list_min_node.list\n\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 11381,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Returns true if the provided lists has at least one common element.\") list_has_common_element {\n        in(x: -171, y: -153, name: \"list1\") property(List) list1_1f846b\n        in(x: -179, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) has_common_element_f5a6e8\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 0, y: -55) any_5f7b6a root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> any_5f7b6a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_f9d4e3\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_7c5f6b root.Std_k98ojb.Logic.Not {}\n            func() {\n                in(x: -231, y: -69, name: \"value\") property(Boolean) value_42bc6f\n                value_42bc6f -> not_7c5f6b.value\n            } -> item_f9d4e3\n            not_7c5f6b.result -> result_e245cb\n        } -> any_5f7b6a.handler\n        instance(x: 0, y: -57) length_1b8f2e root.Std_k98ojb.List.Length {}\n        any_5f7b6a.output_list -> length_1b8f2e.list\n        instance(x: 0, y: -59) greater_than_or_equal_3d4c9e root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        length_1b8f2e.length -> greater_than_or_equal_3d4c9e.left\n        instance(x: 0, y: -61) number_from_string_7a5b6d root.Std_k98ojb.Math.NumberFromString {}\n        strings_empty_3d4c9e.String.Empty() -> number_from_string_7a5b6d.string\n        number_from_string_7a5b6d.number -> greater_than_or_equal_3d4c9e.right\n        greater_than_or_equal_3d4c9e.result -> has_common_element_f5a6e8\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Boolean) result_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: -5, y: 3) filter_7f9b6a root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_7f9b6a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n            item_42bc6f -> not_4e8c54.input\n            not_4e8c54.result -> result_e245cb\n        } -> filter_7f9b6a.handler\n\n        instance(x: -5, y: 3) reduce_7f9b6b root.Std_k98ojb.Iteration.Reduce {}\n        filter_7f9b6a.output_list -> reduce_7f9b6b.item\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Boolean) acc_42bc6f\n            in(x: -223, y: 18, name: \"item\") property(Object) item_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) or_4e8c55 root.Std_k98ojb.Logic.Or {}\n            acc_42bc6f -> or_4e8c55.left\n            item_1d86d4 -> or_4e8c55.right\n            or_4e8c55.result -> result_e245cb\n        } -> reduce_7f9b6b.handler\n\n        instance(x: -5, y: 3) constant_7f9b6c root.Std_k98ojb.Std.Constant {}\n        true -> constant_7f9b6c.value\n        constant_7f9b6c.value -> reduce_7f9b6b.acc\n\n        reduce_7f9b6b.result -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_b0c9e3\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_ea9d7e\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_b3b5f6\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_4c0d1f\n\n            instance(x: -8, y: -53) equal_7a9e34 root.Std_k98ojb.Logic.Equal {}\n            item1_ea9d7e -> equal_7a9e34.left\n            item2_b3b5f6 -> equal_7a9e34.right\n            equal_7a9e34.result -> result_4c0d1f\n        } -> zip_201051.handler\n\n        instance(x: -12, y: 15) filter_8f5d23 root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_8f5d23.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_3c9a7e\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_f4b2c1\n\n            instance(x: -8, y: -53) not_5d6f42 root.Std_k98ojb.Logic.Not {}\n            item_3c9a7e -> not_5d6f42.input\n            not_5d6f42.result -> result_f4b2c1\n        } -> filter_8f5d23.handler\n\n        instance(x: 10, y: -15) reduce_a1b2c3 root.Std_k98ojb.Iteration.Reduce {}\n        filter_8f5d23.output_list -> reduce_a1b2c3.item\n        func() {\n            in(x: -231, y: -69, name: \"accumulated\") property(Bool) accumulated_d4e7f6\n            in(x: -223, y: 18, name: \"item\") property(Object) item_9a8b7c\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_c3d2e1\n\n            instance(x: -8, y: -53) or_6f5d34 root.Std_k98ojb.Logic.Or {}\n            accumulated_d4e7f6 -> or_6f5d34.left\n            item_9a8b7c -> or_6f5d34.right\n            or_6f5d34.result -> result_c3d2e1\n        } -> reduce_a1b2c3.handler\n\n        instance(x: -12, y: 15) not_1f2g3h root.Std_k98ojb.Logic.Not {}\n        reduce_a1b2c3.output -> not_1f2g3h.input\n        not_1f2g3h.result -> result_b0c9e3\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_9c7e4a\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Any) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Any) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) contains_7a3b9f root.Std_k98ojb.List.Contains {}\n            item2_1d86d4 -> contains_7a3b9f.list\n            item1_42bc6f -> contains_7a3b9f.item\n            contains_7a3b9f.contains -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 8, y: -54) any_true_4c2d8f root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> any_true_4c2d8f.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Bool) item_e245cb\n\n            out(x: 245, y: -54, name: \"result\") property(Any) result_9c7e4a\n\n            instance(x: -8, y: -53) if_true_2b1d5f root.Std_k98ojb.Logic.Equal {}\n            item_e245cb -> if_true_2b1d5f.left\n            true_3e0d6a -> if_true_2b1d5f.right\n            if_true_2b1d5f.result -> result_9c7e4a\n        } -> any_true_4c2d8f.predicate\n\n        instance(x: 8, y: -54) not_null_1f0e3a root.Std_k98ojb.Logic.Not {}\n        any_true_4c2d8f.item -> not_null_1f0e3a.left\n        null_7d9e5c -> not_null_1f0e3a.right\n        not_null_1f0e3a.result -> has_common_element_9c7e4a\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: -153, name: \"list1\") property(List) list1_5a9f7c\n        in(x: -183, y: -12, name: \"list2\") property(List) list2_e3d4b8\n\n        out(x: 785, y: -111, name: \"result\") property(Bool) result_f0e6b1\n\n        instance(x: 132, y: -130) has_common_element_7f5c9a root.Std_k98ojb.Iteration.Find {}\n        list1_5a9f7c -> has_common_element_7f5c9a.items\n        func() {\n            in(x: -230, y: -68, name: \"item\") property(Any) item_3d8e2f\n\n            out(x: 246, y: -55, name: \"result\") property(Bool) result_6b7c9a\n\n            instance(x: -9, y: -52) contains_1a4f5b root.Std_k98ojb.List.Contains {}\n            item_3d8e2f -> contains_1a4f5b.item\n            list2_e3d4b8 -> contains_1a4f5b.list\n\n            contains_1a4f5b.contains -> result_6b7c9a\n        } -> has_common_element_7f5c9a.predicate\n        has_common_element_7f5c9a.item -> result_f0e6b1\n    }\n\n    \n\n    instance(x: 92, y: -121) has_common_element_instance root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: -9, y: 0) filter_3b5f8a root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_3b5f8a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(List) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) first_item_4e8c54 root.Std_k98ojb.List.FirstItem {}\n            item_42bc6f -> first_item_4e8c54.list\n            first_item_4e8c54.item -> result_e245cb\n        } -> filter_3b5f8a.handler\n\n        instance(x: -9, y: 0) not_empty_7d1f2c root.Std_k98ojb.List.NotEmpty {}\n        filter_3b5f8a.output_list -> not_empty_7d1f2c.list\n        not_empty_7d1f2c.isEmpty -> has_common_element_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common_element {\n        in(x: -174, y: -154, name: \"list1\") property(List) list1_2e3c5f\n        in(x: -182, y: -13, name: \"list2\") property(List) list2_f9d6b8\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) result_c7a1e4\n\n        instance(x: 134, y: -131) zip_3f5c9a root.Std_k98ojb.Iteration.Zip {}\n        list1_2e3c5f -> zip_3f5c9a.left\n        list2_f9d6b8 -> zip_3f5c9a.right\n\n        instance(x: -10, y: 12) any_7d4f2b root.Std_k98ojb.Iteration.Any {}\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_ae8c3a\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_9f4b7d\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_5b6c1d\n\n            instance(x: -8, y: -53) equal_3a8f4d root.Std_k98ojb.Logic.Equal {}\n            list1_ae8c3a -> equal_3a8f4d.left\n            list2_9f4b7d -> equal_3a8f4d.right\n            equal_3a8f4d.result -> result_5b6c1d\n        } -> any_7d4f2b.handler\n        any_7d4f2b.result -> result_c7a1e4\n    }\n\n    \n\n    instance(x: 94, y: -122) list_has_common_element_8d3f9b root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 133, y: -131) find_5a6f9b root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> find_5a6f9b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Boolean) result_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_3b2d7e root.Std_k98ojb.Logic.Not {}\n            result_42bc6f -> not_3b2d7e.input\n            not_3b2d7e.result -> result_e245cb\n        } -> find_5a6f9b.predicate\n\n        instance(x: 133, y: -131) not_7c8f1d root.Std_k98ojb.Logic.Not {}\n        find_5a6f9b.item -> not_7c8f1d.input\n        not_7c8f1d.result -> has_common_element_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the provided lists has at least one common element.\") list_has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 133, y: -131) filter_201052 root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_201052.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Bool) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) choose_4e8c55 root.Std_k98ojb.Choose {}\n            item_42bc6f -> choose_4e8c55.predicate\n            true -> choose_4e8c55.then\n            false -> choose_4e8c55.else_\n            choose_4e8c55.value -> result_e245cb\n        } -> filter_201052.handler\n\n        instance(x: 133, y: -131) not_empty_201053 root.Std_k98ojb.Iteration.NotEmpty {}\n        filter_201052.output_list -> not_empty_201053.items\n        not_empty_201053.isEmpty -> has_common_element_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -175, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -183, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 785, y: -110, name: \"result\") property(Boolean) result_e245cb\n\n        instance(x: 134, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_0c9b8a\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_0c9b8a\n        } -> zip_201051.handler\n\n        instance(x: 136, y: -161) filter_3f7d92 root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_3f7d92.items\n        func() {\n            in(x: -232, y: -69, name: \"item\") property(List) item_f9a8c4\n\n            out(x: 246, y: -54, name: \"result\") property(Boolean) result_0c9b8a\n\n            instance(x: -10, y: -55) first_6d5e1f root.Std_k98ojb.List.FirstItem {}\n            item_f9a8c4 -> first_6d5e1f.list\n            first_6d5e1f.item -> result_0c9b8a\n        } -> filter_3f7d92.handler\n\n        instance(x: 138, y: -181) not_empty_2f8b1e root.Std_k98ojb.List.NotEmpty {}\n        filter_3f7d92.output_list -> not_empty_2f8b1e.list\n        not_empty_2f8b1e.isEmpty -> result_e245cb\n    }\n\n    \n\n    instance(x: 94, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") is_consecutive {\n        in(x: -526, y: -213, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -208, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -204, name: \"check if consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -20, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -16, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 50, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) subtract_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> subtract_c76d2b.first\n            _index_769593 -> subtract_c76d2b.second\n            subtract_c76d2b.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -15, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -27, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -22) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -24) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 847, y: -206) contains_32727d root.Std_k98ojb.List.Contains {}\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -4) is_consecutive_bf7dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"only consecutive pairs\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: 49, y: 79, name: \"_next\") property(Number) _next_9e5a8c\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_d3b4f6 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> sub_d3b4f6.second\n            _next_9e5a8c -> sub_d3b4f6.first\n            sub_d3b4f6.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"next\") property(Number) next_7b1a8f\n\n            instance(x: 74, y: -23) add_c9c6d4 root.Std_k98ojb.Math.Add {}\n            current_81298e -> add_c9c6d4.first\n            1 -> add_c9c6d4.second\n            add_c9c6d4.result -> next_7b1a8f\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> filter_c91965.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: 49, y: 79, name: \"_next\") property(Number) _next_9e5a8c\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) list_7b1d4f root.Std_k98ojb.List.Add {}\n            instance(x: 463, y: 51) list_9c5a8e root.Std_k98ojb.List.Add {}\n\n            _index_170471 -> list_7b1d4f.item\n            list_07cae4 -> list_7b1d4f.list\n\n            _next_9e5a8c -> list_9c5a8e.item\n            list_07cae4 -> list_9c5a8e.list\n\n            list_7b1d4f.listWithItem -> output_efbc78\n        } -> filter_c91965.handler\n        contains_32727d.is_contained -> output_8d07dc\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) list_7b1d4f root.Std_k98ojb.List.Add {}\n            instance(x: 285, y: -25) contains_32727d root.Std_k98ojb.List.Contains {}\n\n            current_81298e -> list_7b1d4f.list\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n                out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n                instance(x: 226, y: 56) list_7b1d4f root.Std_k98ojb.List.Add {}\n                instance(x: 463, y: 51) list_9c5a8e root.Std_k98ojb.List.Add {}\n\n                _index_170471 -> list_7b1d4f.item\n                current_81298e -> list_7b1d4f.list\n\n                _index_170471 -> list_9c5a8e.item\n                current_81298e -> list_9c5a8e.list\n\n                list_7b1d4f.listWithItem -> output_efbc78\n            } -> contains_32727d.list\n            2 -> contains_32727d.index\n            true -> contains_32727d.item\n            contains_32727d.is_contained -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_ea1f8c root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_7c3d1e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_result_b4f2a5\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"check consecutive pairs\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_number_a1d2c3\n            in(x: -30, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) is_consecutive_c4e5f6\n\n            instance(x: 226, y: 56) subtract_b3d2c1 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n\n            current_number_a1d2c3 -> subtract_b3d2c1.first\n            _index_769593 -> subtract_b3d2c1.second\n\n            subtract_b3d2c1.result -> equal_7836b4.left\n            1 -> equal_7836b4.right\n\n            equal_7836b4.result -> is_consecutive_c4e5f6\n        } -> map_c73e3b.handler\n\n        input_list_7c3d1e -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_result_b4f2a5\n        contains_32727d.is_contained -> not_75283f.input\n    }\n}\n\ninstance(x: -293, y: -5) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -526, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 71, y: -23, name: \"_next\") property(Number) _next_b9f5a4\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> notequal_cb8a55.left\n            _next_b9f5a4 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: 71, y: 79, name: \"_next\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_3c8d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> add_3c8d2b.second\n            _index_769593 -> add_3c8d2b.first\n            add_3c8d2b.result -> output_efbc78\n            list_07cae4 -> notequal_7836b4.right\n            _index_170471 -> notequal_7836b4.left\n        } -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 246, y: -205, name: \"check consecutive numbers\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_3c6e8a root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> sub_3c6ejba.first\n            list_07cae4[_index_769593 + 1] -> sub_3c6ejba.second\n            sub_3c6ejba.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            not(notequal_cb8a55.result) -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n\n        instance(x: -303, y: -205, name: \"only true\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) not_75283f root.Std_k98ojb.Logic.Not {}\n            not_75283f.result -> filter_c91965.output_list\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_prev\") property(Number) _prev_e6c7f4\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_ba8e3d root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_ba8e3d.second\n            _prev_e6c7f4 -> sub_ba8e3d.first\n            sub_ba8e3d.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) not_75283f root.Std_k98ojb.Logic.Not {}\n            _index_170471 -> not_75283f.input\n            not_75283f.result -> output_efbc78\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_f7a2c9 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to pairs\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"filter consecutive pairs\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"pair\") property(List) pair_f9d3f4\n\n            instance(x: 74, y: -23) slice_ad7b2a root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: -25) add_5e8c55 root.Std_k98ojb.Math.Add {}\n\n            current_81298e -> slice_ad7b2a.list\n            0 -> slice_ad7b2a.start\n            1 -> slice_ad7b2a.end\n            slice_ad7b2a.slice -> pair_f9d3f4\n\n            instance(x: -192, y: 55) slice_81298e root.Std_k98ojb.List.Slice {}\n            current_81298e -> slice_81298e.list\n            1 -> slice_81298e.start\n            2 -> slice_81298e.end\n            add_5e8c55.second -> pair_f9d3f4\n            slice_81298e.slice -> add_5e8c55.first\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) diff_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_769593 -> diff_c76d2b.second\n            _index_170471.0 -> diff_c76d2b.first\n            diff_c76d2b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n\n        contains_32727d.is_contained -> output_8d07dc\n        true -> contains_32727d.item\n        filter_c91965.output_list -> contains_32727d.list\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_f9d3f4 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_b1a6f4\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) minus_7e3b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> minus_7e3b2c.first\n            _next_b1a6f4 -> minus_7e3b2c.second\n            minus_7e3b2c.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_8a1f2c\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) minus_7e3b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_170471 -> minus_7e3b2c.first\n            _next_8a1f2c -> minus_7e3b2c.second\n            minus_7e3b2c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: 49, name: \"current\") property(Number) _index_170471\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_b1a6f4\n\n            out(x: 705, y: 125, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) minus_7e3b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_170471 -> minus_7e3b2c.first\n            _next_b1a6f4 -> minus_7e3b2c.second\n            minus_7e3b2c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: 125, name: \"current\") property(Number) _index_170471\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_b1a6f4\n\n            out(x: 705, y: 201, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) minus_7e3b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_170471 -> minus_7e3b2c.first\n            _next_b1a6f4 -> minus_7e3b2c.second\n            minus_7e3b2c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: 201, name: \"current\") property(Number) _index_170471\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_b1a6f4\n\n            out(x: 705, y: 277, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) minus_7e3b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_170471 -> minus_7e3b2c.first\n            _next_b1a6f4 -> minus_7e3b2c.second\n            minus_7e3b2c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: 277, name: \"current\") property(Number) _index_170471\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_b1a6f4\n\n            out(x: 705, y: 353, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) minus_7e3b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_170471 -> minus_7e3b2c.first\n            _next_b1a6f4 -> minus_7e3b2c.second\n            minus_7e3b2c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: 353, name: \"current\") property(Number) _index_170471\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_b1a6f4\n\n            out(x: 705, y: 429, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) minus_7e3b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_170471 -> minus_7e3b2c.first\n            _next_b1a6f4 -> minus_7e3b2c.second\n            minus_7e3b2c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: 429, name: \"current\") property(Number) _index_170471\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_b1a6f4\n\n            out(x: 705, y: 505, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) minus_7e3b2c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 74, y: 56, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 285, y: -25) subtract_eb7d9f root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> subtract_eb7d9f.first\n            list_07cae4[_index_769593 + 1] -> subtract_eb7d9f.second\n            0 -> notequal_7836b4.right\n            subtract_eb7d9f.result -> notequal_7836b4.left\n            notequal_7836b4.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4[0..list_07cae4.Length - 1] -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) or_eb7d9f root.Std_k98ojb.Logic.Or {}\n            or_eb7d9f.input -> output_efbc78\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_b4c3e9 root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"list\") property(List) list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_f1a2b3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        sublist_f1a2b3 -> sublist_for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        sublist_for_d26972.done -> continue_a96db6\n        sublist_for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        sublist_for_d26972.onItem -> sublist_ifexpression_875761.execute\n        sublist_ifexpression_875761.value -> output_5bbcd7\n        sublist_ifexpression_875761.then -> continue_a96db6\n        sublist_ifexpression_875761.else -> setter_9d4f1c.next\n        for_d26972.done -> sublist_for_d26972.reset\n        for_d26972.item -> getat_ce2a48.new_index\n        sublist_for_d26972.item -> getat_sublist_ce2a48.list\n        0 -> getat_sublist_ce2a48.index\n        getat_sublist_ce2a48.itemAtIndex -> sublist_ifexpression_875761.gen_1\n        for_d26972.item -> sublist_ifexpression_875761.gen_2\n        sublist_for_d26972.index -> sublist_ifexpression_875761.gen_0\n        getter_b280eb.value -> sublist_ifexpression_875761.gen_3\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_7f3a9b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_7f3a9b -> match_2e8b0f.list\n        match_2e8b0f.value -> output_5bbcd7\n\n        instance(x: 800, y: -50) match_2e8b0f root.Std_k98ojb.Std.Match {}\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + len_sublist <= len_main_list && sublist[index:index+len_sublist] == main_list[index:index+len_sublist]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.else -> setter_9d4f1c.execute\n\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> getter_b280eb.property\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) for_1 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_index == len(sublist)\"\n        }\n        instance(x: 752, y: 93) ifexpression_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"main_list[index + sub_index] == sublist[sub_index]\"\n        }\n\n        getat_ce2a48.itemAtIndex -> output_5bbcd7\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> for_d26972.reset\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.index -> ifexpression_875761.gen_0\n        main_list_ec88cd -> for_d26972.items\n\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.continue -> for_1.reset\n\n        ifexpression_875761.then -> for_1.trigger\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.else -> continue_a96db6\n\n        0 -> for_1.index\n        sublist_5bbcd7 -> for_1.items\n        for_1.item -> ifexpression_2.gen_1\n        for_1.index -> ifexpression_2.gen_0\n        for_d26972.index -> ifexpression_2.gen_2\n\n        ifexpression_2.then -> continue_a96db6\n        ifexpression_2.value -> output_5bbcd7\n        ifexpression_2.else -> ifexpression_875761.continue\n\n        for_1.onItem -> ifexpression_2.execute\n        for_1.done -> getat_ce2a48.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> find_sublist_index.execute\n        for_d26972.index -> find_sublist_index.main_list_index\n        sublist_ec88cd -> find_sublist_index.sublist\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        instance(x: 500, y: -200) is_sublist_index root.main.is_sublist_index {\n            in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n            in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n            in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n            in(x: -485, y: 290, name: \"main_list_index\") property(Int) main_list_index\n\n            out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n            out(x: 1218, y: 147, name: \"output\") property(Int) output_5bbcd7\n\n            instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == -1 || sublist[index] != main_list[main_list_index + index]\"\n            }\n            getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n            setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n            instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n            instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n            ifexpression_875761.else -> continue_a96db6\n            ifexpression_875761.value -> output_5bbcd7\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            sublist_ec88cd -> for_d26972.items\n            for_d26972.item -> getat_ce2a48.itemAtIndex\n            getter_b280eb.value -> ifexpression_875761.gen_0\n            main_list_index -> getat_ce2a48.index\n            main_list_ec88cd -> getat_ce2a48.list\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> continue_a96db6\n            index -> setter_38e107.new_value\n            0 -> setter_9d4f1c.new_value\n        }\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        find_sublist_index.output_5bbcd7 -> getter_38e107.value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 500, y: -200) find_sublist_index root.main.is_sublist_index {\n            in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n            in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n            in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n            out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n            out(x: 1218, y: 147, name: \"output\") property(Int) output_38e107\n\n            instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == -1\"\n            }\n            getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n            setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n            instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n\n            ifexpression_875761.else -> continue_a96db6\n            ifexpression_875761.value -> output_38e107\n            ifexpression_875761.then -> is_sublist_index.execute\n            main_list_ec88cd -> for_d26972.items\n            for_d26972.item -> is_sublist_index.main_list\n            getter_b280eb.value -> ifexpression_875761.gen_0\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> continue_a96db6\n            0 -> setter_9d4f1c.new_value\n        }\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        sublist_ec88cd -> for_d26972.sublist_items\n        for_d26972.item -> getat_ce2a48.list\n\n        instance(x: 752, y: -200) ifexpression_875761_sub root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_index == -1\"\n        }\n        \n        ifexpression_875761_sub.then -> continue_a96db6\n        ifexpression_875761_sub.value -> output_5bbcd7\n\n        getat_ce2a48.itemAtIndex -> for_d26972.current_item\n        for_d26972.sublist_items -> for_d26972.items\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        instance(x: 752, y: -300) for_sub_d26972 root.Std_k98ojb.Std.For {}\n        \n        getat_ce2a48.itemAtIndex -> for_sub_d26972.current_item\n        sublist_ec88cd -> for_sub_d26972.items\n        for_sub_d26972.onItem -> ifexpression_875761_sub.execute\n        for_sub_d26972.done -> continue_a96db6\n\n        instance(x: -275, y: -200) getat_ce2a48_sub root.Std_k98ojb.List.GetAt {}\n        \n        sublist_ec88cd -> getat_ce2a48_sub.list\n        0 -> getat_ce2a48_sub.index\n        for_d26972.current_item -> getat_ce2a48_sub.item\n\n        ifexpression_875761.gen_0 -> for_sub_d26972.index\n        ifexpression_875761.gen_1 -> getat_ce2a48_sub.itemAtIndex\n        ifexpression_875761.gen_2 -> for_sub_d26972.item\n        \n        0 -> ifexpression_875761.gen_0\n\n        execute_90aaec -> for_d26972.trigger\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + sublist_length <= main_list.length\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        sublist_length := 0\n        sublist_ec88cd.length -> sublist_length\n\n        index := 0\n        for_d26972.index -> ifexpression_875761.gen_0\n        index -> ifexpression_875761.gen_1\n        sublist_length -> ifexpression_875761.gen_2\n\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_3\n        sublist_ec88cd[index] -> ifexpression_875761.gen_4\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> for_d26972.trigger\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> for_sublist.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        instance(x: -275, y: 160) ifexpression_sublist root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 285, name: \"getter_b280eb_sublist\") getter_b280eb_sublist = previous\n        setter(x: 679, y: -20, name: \"setter_9d4f1c_sublist\") setter_9d4f1c_sublist = previous\n        instance(x: 321, y: 110) for_sublist root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: 75, name: \"setter_9d4f1c_sublist\") setter_38e107_sublist = previous\n        instance(x: -275, y: 140) getat_ce2a48_sublist root.Std_k98ojb.List.GetAt {}\n        ifexpression_sublist.else -> continue_a96db6\n        ifexpression_sublist.value -> output_5bbcd7\n        ifexpression_sublist.then -> setter_9d4f1c_sublist.execute\n        sublist_5bbcd7 -> for_sublist.items\n        for_sublist.item -> ifexpression_sublist.gen_2\n        for_sublist.index -> ifexpression_sublist.gen_0\n        getter_b280eb_sublist.value -> ifexpression_sublist.gen_1\n        for_sublist.onItem -> ifexpression_sublist.execute\n        for_sublist.done -> continue_a96db6\n        for_sublist.item -> setter_9d4f1c_sublist.new_value\n        sublist_5bbcd7 -> getat_ce2a48_sublist.list\n        0 -> getat_ce2a48_sublist.index\n        getat_ce2a48_sublist.itemAtIndex -> setter_38e107_sublist.new_value\n        execute_90aaec -> setter_38e107_sublist.execute\n        setter_38e107_sublist.continue -> for_sublist.reset\n        setter_9d4f1c_sublist.continue -> for_sublist.next\n\n        instance(x: 750, y: 285) ifexpression_check root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index < sublist_length\"\n        }\n        getter(x: 334, y: 410, name: \"getter_b280eb_check\") getter_b280eb_check = previous\n        setter(x: 679, y: 75, name: \"setter_9d4f1c_check\") setter_9d4f1c_check = previous\n        instance(x: 321, y: 320) for_check root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: 285, name: \"setter_9d4f1c_check\") setter_38e107_check = previous\n        instance(x: -275, y: 340) getat_ce2a48_check root.Std_k98ojb.List.GetAt {}\n        ifexpression_check.else -> continue_a96db6\n        ifexpression_check.value -> output_5bbcd7\n        ifexpression_check.then -> setter_9d4f1c_check.execute\n        main_list_ec88cd -> for_check.items\n        sublist_length: List.Length(sublist_5bbcd7) -> for_check.limit\n        for_check.item -> ifexpression_check.gen_2\n        for_check.index -> ifexpression_check.gen_0\n        getter_b280eb_check.value -> ifexpression_check.gen_1\n        for_check.onItem -> ifexpression_check.execute\n        for_check.done -> continue_a96db6\n        for_check.item -> setter_9d4f1c_check.new_value\n        main_list_ec88cd -> getat_ce2a48_check.list\n        sublist_index: List.Length(sublist_5bbcd7) -> getat_ce2a48_check.index\n        getat_ce2a48_check.itemAtIndex -> setter_38e107_check.new_value\n        execute_90aaec -> setter_38e107_check.execute\n        setter_38e107_check.continue -> for_check.reset\n        setter_9d4f1c_check.continue -> for_check.next\n\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> for_sublist.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        instance(x: -275, y: 150) ifexpression_sublist root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_index == 0 || previous_sub <= current_sub\"\n        }\n        getter_sublist(x: 334, y: 280, name: \"getter_b280eb\") getter_sublist = previous_sub\n        setter_sublist(x: 679, y: -13, name: \"setter_9d4f1c\") setter_sublist = previous_sub\n        instance_sublist(x: 321, y: 130) for_sublist root.Std_k98ojb.Std.For {}\n        setter_sublist(x: -0, y: 67, name: \"setter_9d4f1c\") setter_sublist_2 = previous_sub\n        instance_sublist(x: -275, y: 215) getat_ce2a48_sub root.Std_k98ojb.List.GetAt {}\n        ifexpression_sublist.else -> continue_a96db6\n        ifexpression_sublist.value -> output_5bbcd7\n        ifexpression_sublist.then -> setter_sublist.execute\n        sublist_ec88cd -> for_sublist.items\n        main_list_ec88cd -> for_d26972.items\n        for_sublist.item -> ifexpression_sublist.gen_2\n        for_sublist.index -> ifexpression_sublist.gen_0\n        getter_sublist.value -> ifexpression_sublist.gen_1\n        for_sublist.onItem -> ifexpression_sublist.execute\n        for_sublist.done -> continue_a96db6\n        for_sublist.item -> setter_sublist.new_value\n        sublist_ec88cd -> getat_ce2a48_sub.list\n        0 -> getat_ce2a48_sub.index\n        getat_ce2a48_sub.itemAtIndex -> setter_sublist_2.new_value\n        execute_90aaec -> setter_sublist_2.execute\n        setter_sublist_2.continue -> for_sublist.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_check.items\n        sublist_check.done -> continue_a96db6\n        sublist_check.onItem -> is_sublist_check.execute\n        is_sublist_check.value -> output_5bbcd7\n\n        instance(x: 800, y: -100) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 600, y: -200) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist[index] == main_list[current_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_subindex = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_current_index = current_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_subindex_next = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> for_d26972.next\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_current_index.execute\n\n        sublist_ec88cd -> for_d26972.items\n        main_list_ec88cd -> sublist_check.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_subindex.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_current_index.new_value\n\n        execute_90aaec -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        items_ai -> find_smallest_missing_node.items\n        func(x: 426, y: -378) lambda {\n            in(x: -159, y: -219, name: \"it\") property(Number) it_ae\n            out(x: 159, y: -219, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -303) std_if_node root.Std_k98ojb.Std.If {}\n            std_if_node.value -> lambda.result_ae\n            std_if_node.if -> find_smallest_missing_node.predicate\n\n            in(x: -159, y: -219, name: \"it\") property(Number) it_ae -> std_if_node.value\n            instance(x: 426, y: -378) std_if_then_node root.Std_k98ojb.Std.IfExpression {}\n            std_if_then_node.expression = \"(it == (prev + 1))\"\n            std_if_then_node.then -> std_if_node.else\n            std_if_then_node.else -> std_if_node.then\n\n            instance(x: 426, y: -453) iter_list_node root.Std_k98ojb.IterList {}\n            items_ai -> iter_list_node.items\n            func(x: 426, y: -498) lambda {\n                in(x: -159, y: -279, name: \"item\") property(Number) item_ae\n                out(x: 159, y: -279, name: \"result\") property(Number) result_ae\n\n                instance(x: 426, y: -354) std_relay_node root.Std_k98ojb.Std.Relay {}\n                item_ae -> std_relay_node.input\n                std_relay_node.value -> lambda.result_ae\n            } -> iter_list_node.onItem\n            func(x: 426, y: -498) lambda {\n                in(x: -159, y: -279, name: \"item\") property(Number) item_ae\n                out(x: 159, y: -279, name: \"result\") property(Number) result_ae\n\n                instance(x: 426, y: -354) std_relay_node root.Std_k98ojb.Std.Relay {}\n                item_ae -> std_relay_node.input\n                std_relay_node.value -> lambda.result_ae\n            } -> find_smallest_missing_node.onItem\n        } -> find_smallest_missing_node.predicate\n\n        instance(x: 426, y: -528) std_if_else_node root.Std_k98ojb.Std.If {}\n        std_if_else_node.if -> find_smallest_missing_node.item\n        std_if_else_node.value -> smallest_missing_num.missing_ai\n\n        func(x: 426, y: -573) lambda {\n            in(x: -159, y: -339, name: \"value\") property(Number) value_ae\n            out(x: 159, y: -339, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -438) std_relay_node root.Std_k98ojb.Std.Relay {}\n            value_ae -> std_relay_node.input\n            std_relay_node.value -> lambda.result_ae\n        } -> std_if_else_node.then\n\n        func(x: 426, y: -573) lambda {\n            in(x: -159, y: -339, name: \"value\") property(Number) value_ae\n            out(x: 159, y: -339, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -438) std_relay_node root.Std_k98ojb.Std.Relay {}\n            value_ae -> std_relay_node.input\n            std_relay_node.value -> lambda.result_ae\n        } -> std_if_else_node.else\n    }\n\n    \n    instance(x: 426, y: -528) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> find_missing_node.items\n        func() {\n            in(x: 0, y: 0, name: \"it\") property(Number) it_ai\n            out(x: 0, y: 0, name: \"\") trigger onMissing\n\n            instance(x: 0, y: -30) less_than_next_node root.Std_k98ojb.Math.LessThan {}\n            it_ai -> less_than_next_node.left\n            find_missing_node.index + 1 -> less_than_next_node.right\n\n            instance(x: 0, y: -60) switch_node root.Std_k98ojb.Std.Switch {}\n            less_than_next_node.result -> switch_node.first\n            onMissing -> switch_node.second\n\n            instance(x: 0, y: -90) add_one_node root.Std_k98ojb.Math.Add {}\n            it_ai -> add_one_node.first\n            number(1) -> add_one_node.second\n            add_one_node.result -> missing_ai\n\n            instance(x: 0, y: -120) relay_missing_node root.Std_k98ojb.Std.Relay {}\n            onMissing -> relay_missing_node.input\n        } handler -> find_missing_node.predicate\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.For {}\n        \n        numbers_ai -> find_missing_node.items\n        \n        var(start: 0, x: 426, y: -348) number Std_k98ojb.Std.Constant {}\n        number.value -> find_missing_node.start\n        \n        instance(x: 426, y: -423) check_next_number root.Std_k98ojb.Iteration.Filter {}\n        \n        find_missing_node.item -> check_next_number.items\n        var(expected: 0, x: 426, y: -468) expected_value Std_k98ojb.Std.Constant {}\n        number.value -> expected_value.value\n        \n        instance(x: 426, y: -543) lambda_handler root.Std_k98ojb.Iteration.Map {}\n        \n        check_next_number.items -> lambda_handler.items\n        func(expected: it, current: it) {\n            return (expected + 1 != current)\n        } handler -> lambda_handler.handler\n\n        var(start: 0, x: 426, y: -648) index Std_k98ojb.Std.Constant {}\n        \n        instance(x: 426, y: -693) map_index root.Std_k98ojb.Iteration.Map {}\n        \n        check_next_number.items -> map_index.items\n        func(index: it, number: it) {\n            return (index)\n        } handler -> map_index.handler\n        \n        instance(x: 426, y: -798) find_first_missing root.Std_k98ojb.Query.Find {}\n        \n        lambda_handler.output_list -> find_first_missing.list\n        var(where: true, x: 426, y: -843) condition Std_k98ojb.Std.Constant {}\n        condition.value -> find_first_missing.where\n        \n        instance(x: 426, y: -948) add_one root.Std_k98ojb.Math.Add {}\n        \n        find_first_missing.item -> add_one.first\n        var(second: 1, x: 426, y: -993) one Std_k98ojb.Std.Constant {}\n        one.value -> add_one.second\n        \n        add_one.result -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> find_missing_node.items\n        func(x: 426, y: -363) handler {\n            in(index: -1, item: -1, name: \"it\") property(Number) it_ae\n            out() trigger\n\n            instance(x: 426, y: -393) if_node root.Std_k98ojb.Std.If {}\n            it_ae.index -> if_node.value\n            func(x: 426, y: -423) then {\n                in(expected: -1, actual: -1, name: \"it\") property(Number) it_bf\n                out() trigger\n\n                instance(x: 426, y: -453) add_one_node root.Std_k98ojb.Math.Add {}\n                it_bf.actual -> add_one_node.first\n                Std_k98ojb.List.GetAt(list: add_one_node.result, index: it_bf.expected) -> add_one_node.second\n                add_one_node.result -> then()\n            } then_ae\n\n            func(x: 426, y: -483) else {\n                in(item: -1, name: \"it\") property(Number) it_bg\n                out() trigger\n\n                instance(x: 426, y: -513) add_one_node_2 root.Std_k98ojb.Math.Add {}\n                it_bg.item -> add_one_node_2.first\n                Number(value: 0) -> add_one_node_2.second\n                add_one_node_2.result -> else()\n            } else_ae\n\n            if_node.value -> if_node.if\n        } handler_ai\n\n        find_missing_node.item -> missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.For {}\n        numbers_ai -> find_missing_node.items\n        find_missing_node.onItem {\n            in(index: 0, value: 1, name: \"index\") property(Number) index_ai\n            in(index: 2, value: 2, name: \"number\") property(Number) number_ai\n\n            instance(x: 426, y: -303) compare_index_node root.Std_k98ojb.Math.LessThan {}\n            index_ai -> compare_index_node.left\n            number_ai -> compare_index_node.right\n            \n            instance(x: 426, y: -303) choose_missing_node root.Std_k98ojb.Logic.IfExpression {}\n            compare_index_node.result -> choose_missing_node.expression\n            index_ai -> choose_missing_node.then\n            find_missing_node.item -> choose_missing_node.else\n\n            choose_missing_node.value -> missing_number_ai\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing {\n            in(x: -226, y: -313, name: \"list\") property(List) list_ai\n            out(x: 104, y: -293, name: \"missing\") property(Number) missing_ai\n            \n            func() {\n                var(i: -6, x: -106, y: -333, name: \"index\", type: Number) index_var\n                instance(x: -86, y: -363) for_each Std_k98ojb.Iteration.ForEach {}\n                \n                list_ai -> for_each.items\n                \n                func() {\n                    in(index: 0, item: 1, name: \"onItem\") trigger(on_item_trigger)\n                    \n                    on_item_trigger -> index_var.set\n                    index_var -> for_each.index\n                    \n                    instance(x: -6, y: -393) if_expression Std_k98ojb.Std.IfExpression {}\n                    index_var -> if_expression.expression\n                    \n                    func() {\n                        in(value: 0, name: \"value\") property(Number) value_ai\n                        out(x: 104, y: -413, name: \"then\", value: 1) trigger(then_trigger)\n                        out(x: 104, y: -453, name: \"else\", value: null) trigger(else_trigger)\n                        \n                        func() {\n                            in(index: 0, item: 1, name: \"index\") property(Number) index_ai\n                            in(index: 2, item: 3, name: \"item\") property(Number) item_ai\n                            \n                            instance(x: -86, y: -473) add Std_k98ojb.Math.Add {}\n                            index_ai -> add.first\n                            value_ai -> add.second\n                            add.result -> then_trigger.value\n                        }\n                        \n                        func() {\n                            in(index: 0, item: 1, name: \"index\") property(Number) index_ai\n                            in(index: 2, item: 3, name: \"item\") property(Number) item_ai\n                            \n                            instance(x: -86, y: -513) add Std_k98ojb.Math.Add {}\n                            index_ai -> add.first\n                            value_ai -> add.second\n                            add.result -> else_trigger.value\n                        }\n                    }\n                    \n                    if_expression.then -> for_each.next\n                    if_expression.else -> for_each.next\n                    \n                    instance(x: 104, y: -553) relay Std_k98ojb.Std.Relay {}\n                    index_var -> relay.input\n                    relay.value -> missing_ai\n                }\n            }\n        }\n\n        numbers_ai -> find_smallest_missing.list\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) list_iter_node root.Std_k98ojb.Iteration.ForEach {}\n        numbers_ai -> list_iter_node.items\n        list_iter_node.onItem -> find_missing_num_handler.onTrigger\n\n        func(doc: \"finds the smallest missing number.\") find_missing_num_handler {\n            in(x: -426, y: -248, name: \"number\") property(Number) num_ai\n            in(x: -426, y: -303, name: \"index\") property(Number) index_ai\n            out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_num_out\n\n            instance(x: 426, y: -303) if_node root.Std_k98ojb.IfExpression {}\n            num_ai -> if_node.expression\n            std.Std_k98ojb.Strings.Template(\"{{index}} + 1 != {{number}}\", index: index_ai, number: num_ai) -> if_node.then_expression\n\n            instance(x: 426, y: -378) relay_node root.Std_k98ojb.Relay {}\n            if_node.value -> relay_node.input\n            relay_node.value -> missing_num_out\n\n            instance(x: 426, y: -453) add_node root.Std_k98ojb.Math.Add {}\n            index_ai -> add_node.first\n            std.Std_k98ojb.List.GetAt(numbers_ai, std.Std_k98ojb.Iteration.Zip.add(index_ai, 1)) -> add_node.second\n            add_node.result -> missing_num_out\n\n            instance(x: 426, y: -528) if_else_node root.Std_k98ojb.Choose {}\n            relay_node.value -> if_else_node.predicate\n            std.Std_k98ojb.List.GetAt(numbers_ai, index_ai) -> if_else_node.then\n            add_node.result -> if_else_node.else_\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> find_missing_node.items\n        func() {\n            var(i: 0, x: 0, y: -120, name: \"index\") property(Number) index_ae\n            instance(x: 426, y: -183) if_expression_node root.Std_k98ojb.Std.IfExpression {}\n            index_ae -> if_expression_node.index\n            find_missing_node.item -> if_expression_node.a\n            func() {\n                var(i: 0, x: 0, y: -60, name: \"expected\") property(Number) expected_ae\n                instance(x: 426, y: -57) add_node root.Std_k98ojb.Math.Add {}\n                index_ae -> add_node.first\n                func() {\n                    var(i: 0, x: 0, y: -60, name: \"start\") property(Number) start_ae\n                    instance(x: 426, y: -57) constant_node root.Std_k98ojb.Std.Constant {}\n                    std.Int(1) -> constant_node.value\n                } -> add_node.second\n                add_node.result -> expected_ae\n\n                instance(x: 426, y: 0) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                expected_ae -> not_equal_node.left\n                find_missing_node.item -> not_equal_node.right\n            } -> if_expression_node.expression\n        } -> find_missing_node.predicate\n        find_missing_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_smallest_missing root.Std_k98ojb.Iteration.Find {}\n        items_ai -> find_smallest_missing.items\n\n        instance(x: 426, y: -423) predicate_node root.Std_k98ojb.Logic.Expression {}\n        predicate_node.expression <- \"it != index + 1\"\n        find_smallest_missing.predicate <- predicate_node.value\n        find_smallest_missing.index <- Std_k98ojb.Iteration.Zip {\n            left: items_ai,\n            right: Std_k98ojb.List.GenerateRange(from: 0, to: Std_k98ojb.List.Length(items_ai)),\n            handler: root.Std_k98ojb.Iteration.Zip.Handler {}\n        }.zipped\n\n        find_smallest_missing.item -> missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        items_ai -> find_missing_node.items\n\n        instance(x: 426, y: -453) expr_node Std_k98ojb.Math.Expression {\n            expression: \"it + 1 != next\"\n            it: find_missing_node.item\n            next: find_missing_node.next_item\n        }\n        expr_node.result -> find_missing_node.predicate\n\n        find_missing_node.item -> missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) find_missing_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of space, comma or dot with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7b8c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9d3a4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f2e6c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7b8c5f.input\n        \" \" -> replace_7b8c5f.search\n        \":\" -> replace_7b8c5f.replace\n        replace_7b8c5f.result -> replace_b9d3a4.input\n        \",\" -> replace_b9d3a4.search\n        \":\" -> replace_b9d3a4.replace\n        replace_b9d3a4.result -> replace_f2e6c1.input\n        \".\" -> replace_f2e6c1.search\n        \":\" -> replace_f2e6c1.replace\n        replace_f2e6c1.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_8f3b7a root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_9c3b4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_f6d8e5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7f8b1d root.Std_k98ojb.Strings.Replace {}\n        replace_9c3b4a.output -> replace_f6d8e5.input\n        replace_f6d8e5.output -> replace_7f8b1d.input\n        \":\" -> replace_7f8b1d.replace\n        \".\" -> replace_7f8b1d.search\n        \",\" -> replace_f6d8e5.search\n        \" \" -> replace_9c3b4a.search\n        input_0 -> replace_9c3b4a.input\n        replace_7f8b1d.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_ae9b6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d7a3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8b4c1e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_ae9b6f.input\n        \" \" -> replace_ae9b6f.search\n        \":\" -> replace_ae9b6f.replace\n        replace_ae9b6f.result -> replace_5d7a3c.input\n        \",\" -> replace_5d7a3c.search\n        \":\" -> replace_5d7a3c.replace\n        replace_5d7a3c.result -> replace_8b4c1e.input\n        \".\" -> replace_8b4c1e.search\n        \":\" -> replace_8b4c1e.replace\n        replace_8b4c1e.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f8c9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5e6a4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_c3b2e8 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7f8c9d.input\n        \" \" -> replace_7f8c9d.search\n        \":\" -> replace_7f8c9d.replace\n        replace_7f8c9d.result -> replace_5e6a4c.input\n        \",\" -> replace_5e6a4c.search\n        \":\" -> replace_5e6a4c.replace\n        replace_5e6a4c.result -> replace_c3b2e8.input\n        \".\" -> replace_c3b2e8.search\n        \":\" -> replace_c3b2e8.replace\n        replace_c3b2e8.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_e54b7f root.main.replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_9e6f7d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a4c3e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_f2a1bc root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9e6f7d.input\n        \" \" -> replace_9e6f7d.search\n        \":\" -> replace_9e6f7d.replace\n        replace_9e6f7d.result -> replace_8a4c3e.input\n        \",\" -> replace_8a4c3e.search\n        \":\" -> replace_8a4c3e.replace\n        replace_8a4c3e.result -> replace_f2a1bc.input\n        \".\" -> replace_f2a1bc.search\n        \":\" -> replace_f2a1bc.replace\n        replace_f2a1bc.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_9c3b8f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c3e8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7f6f4d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_b9a8a4 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5c3e8a.input\n        \" \" -> replace_5c3e8a.search\n        \":\" -> replace_5c3e8a.replace\n        replace_5c3e8a.result -> replace_7f6f4d.input\n        \",\" -> replace_7f6f4d.search\n        \":\" -> replace_7f6f4d.replace\n        replace_7f6f4d.result -> replace_b9a8a4.input\n        \".\" -> replace_b9a8a4.search\n        \":\" -> replace_b9a8a4.replace\n        replace_b9a8a4.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_7f3d2e root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of spaces, commas and dots with colons.\") replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_f7f9a8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6c4e3d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_ea2b5e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_f7f9a8.input\n        \" \" -> replace_f7f9a8.search\n        \":\" -> replace_f7f9a8.replace\n        replace_f7f9a8.output -> replace_6c4e3d.input\n        \",\" -> replace_6c4e3d.search\n        \":\" -> replace_6c4e3d.replace\n        replace_6c4e3d.output -> replace_ea2b5e.input\n        \".\" -> replace_ea2b5e.search\n        \":\" -> replace_ea2b5e.replace\n        replace_ea2b5e.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_1c8f3d root.main.replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3f8d7a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6e9c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_c2b5b1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3f8d7a.input\n        \" \" -> replace_3f8d7a.search\n        \":\" -> replace_3f8d7a.replace\n        replace_3f8d7a.result -> replace_6e9c4f.input\n        \",\" -> replace_6e9c4f.search\n        \":\" -> replace_6e9c4f.replace\n        replace_6e9c4f.result -> replace_c2b5b1.input\n        \".\" -> replace_c2b5b1.search\n        \":\" -> replace_c2b5b1.replace\n        replace_c2b5b1.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_7a9f8e root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) regex_firstmatch_9f3b6e root.Std_k98ojb.Strings.Regex.FirstMatch {}\n        instance(x: 265, y: 0) replace_7a5d2c root.Std_k98ojb.Strings.Replace {}\n        regex_firstmatch_9f3b6e.output -> replace_7a5d2c.input\n        input_0 -> regex_firstmatch_9f3b6e.input\n        \"[ ,.]\" -> regex_firstmatch_9f3b6e.pattern\n        \":\" -> replace_7a5d2c.replace\n        replace_7a5d2c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_d4e8f2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4b7e3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b5c9a8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6d5e1a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4b7e3f.input\n        \" \" -> replace_4b7e3f.search\n        \":\" -> replace_4b7e3f.replace\n        replace_4b7e3f.result -> replace_b5c9a8.input\n        \",\" -> replace_b5c9a8.search\n        \":\" -> replace_b5c9a8.replace\n        replace_b5c9a8.result -> replace_6d5e1a.input\n        \".\" -> replace_6d5e1a.search\n        \":\" -> replace_6d5e1a.replace\n        replace_6d5e1a.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_f8f9c3 root.main.replace_space_comma_dot_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_character {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n == input[0])\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d.length() -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substring_8e4c3d root.Std_k98ojb.Strings.Substring {}\n            input_f5c03d -> substring_8e4c3d.input\n            element_5f51f7 -> substring_8e4c3d.start\n            (element_5f51f7 + 1) -> substring_8e4c3d.end\n            substring_8e4c3d.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.length() -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d[0] -> expression_9fba8c.gen_0\n        add_b4554f.result -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_character_f0be66 root.main.is_same_character {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_6e5a3d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> characters_6e5a3d.string\n        input_f5c03d -> characters_6e5a3d\n        characters_6e5a3d.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) expression_c8d9b4 root.Std_k98ojb.Math.Expression {\n                expression: \"(element.length)\"\n            }\n            element_5f51f7 -> expression_c8d9b4.gen_0\n            expression_c8d9b4.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        characters_6e5a3d.characters[0] -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_7d1e4b root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c5f2e4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(c == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) getat_0f7e5d root.Std_k98ojb.List.GetAt {}\n\n        input_f5c03d -> characters_c5f2e4.string\n        characters_c5f2e3.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_ae4c9d root.Std_k98ojb.Math.Expression {\n                expression: \"(len(element) == 1)\"\n            }\n            element_5f51f7 -> expression_ae4c9d.gen_0\n            expression_ae4c9d.result -> if_07b8c7.predicate\n            if_07b8c7.execute -> out_d0fd24\n            if_07b8c7.then -> continue_8ba06b\n            element_5f51f7 -> getat_0f7e5d.list\n            0 -> getat_0f7e5d.index\n            getat_0f7e5d.value -> expression_b720d7.gen_1\n            element_5f51f7 -> expression_b720d7.gen_0\n            expression_b720d7.result -> if_e19a62.predicate\n            if_e19a62.then -> out_d0fd24\n            if_e19a62.else -> continue_8ba06b\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_chars_same_1f0e9d root.main.is_all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d.length() -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substring_8e4b2d root.Std_k98ojb.Strings.Substring {}\n            input_f5c03d -> substring_8e4b2d.input\n            element_5f51f7 -> substring_8e4b2d.start\n            func() {\n                in(x: 0, y: -20, name: \"input\") property(Number) input_d1a3b6\n\n                out(x: 100, y: 10, name: \"\") property(Number) out_f9c5f7\n\n                instance(x: 30, y: 15) add_4e0d8e root.Std_k98ojb.Math.Add {}\n                element_5f51f7 -> add_4e0d8e.first\n                input_d1a3b6 -> add_4e0d8e.second\n                add_4e0d8e.result -> out_f9c5f7\n            } -> substring_8e4b2d.end\n            substring_8e4b2d.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.length() -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_2e4d1f root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c6a5e4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_c6a5e4.string\n        characters_c6a5e4.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) firstitem_1b6e3c root.Std_k98ojb.List.FirstItem {}\n            characters_c6a5e4.characters -> firstitem_1b6e3c.list\n            firstitem_1b6e3c.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        firstitem_1b6e3c.item -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_2\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_5e7d4a root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) not_9f3c5e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_f9a1c2 root.Std_k98ojb.Strings.Substring {}\n            element_5f51f7 -> substr_f9a1c2.input\n            0 -> substr_f9a1c2.start\n            1 -> substr_f9a1c2.end\n            substr_f9a1c2.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n        if_e19a62.else -> continue_8ba06b\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> not_9f3c5e.input\n        not_9f3c5e.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n        lessthanorequal_f11fda.left -> if_07b8c7.predicate\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        and_80a119.result -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_e1e4c7 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_1a5e3f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_1a5e3f.string\n        characters_1a5e3f.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_f6e1d4 root.Std_k98ojb.Math.Expression {\n                expression: \"(element == first_char)\"\n            }\n            element_5f51f7 -> expression_f6e1d4.gen_0\n            input_f5c03d -> expression_f6e1d4.gen_1\n            expression_f6e1d4.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_b2e1d4 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> stringsplit_7e2e3d.string\n        stringsplit_7e2e3d.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_4c9b8e root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> eq_4c9b8e.left\n            input_f5c03d -> eq_4c9b8e.right\n            eq_4c9b8e.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_b0e5d2 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(i == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) length_f8c3a1 root.Std_k98ojb.Strings.Length {}\n            element_5f51f7 -> length_f8c3a1.input\n            length_f8c3a1.length -> out_d0fd24\n        } -> generaterange_038fce.handler\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) characters_f8c3a1 root.Std_k98ojb.Strings.Characters {}\n            element_5f51f7 -> characters_f8c3a1.input\n            characters_f8c3a1.characters[0] -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list[0] -> expression_9fba8c.gen_1\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c5f6a7 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(c == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) substr_1e4f2d root.Std_k98ojb.Strings.Substring {}\n\n        input_f5c03d -> characters_c5f6a7.string\n        characters_c5f6a7.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_c8b9d2 root.Std_k98ojb.Math.Expression {\n                expression: \"(len(element) > 0)\"\n            }\n            element_5f51f7 -> expression_c8b9d2.gen_0\n            expression_c8b9d2.result -> if_07b8c7.predicate\n            if_07b8c7.else -> out_d0fd24\n            if_07b8c7.then -> substr_1e4f2d.execute\n            element_5f51f7 -> substr_1e4f2d.string\n            0 -> substr_1e4f2d.start\n            -1 -> substr_1e4f2d.end\n            substr_1e4f2d.result -> if_e19a62.execute\n            if_e19a62.else -> out_d0fd24\n            if_e19a62.then -> expression_b720d7.execute\n            substr_1e4f2d.result -> expression_b720d7.gen_0\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> if_07b8c7.execute\n        characters_c5f6a7.characters[0] -> expression_b720d7.gen_1\n        expression_b720d7.result -> and_80a119.left\n        for_8cb3f6.index -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_5e7f9d root.main.all_chars_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_7f6b5c\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) matchindices_9f3a7d root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 656, y: -330) len_5c2a8d root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        matchindices_9f3a7d.pattern: \"0|1|2|3|4|5|6|7|8|9\"\n        input_string_7f6b5c -> matchindices_9f3a7d.input\n        matchindices_9f3a7d.indices -> len_5c2a8d.list\n        len_5c2a8d.length -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_547f34 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.Strings.Length {}\n        \n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        isnumeric_adfa16.input -> substring_547f34.input\n        length_61b38d.string -> substring_547f34.start\n        1 -> substring_547f34.end\n        substring_547f34.result -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n        length_61b38d.string -> substring_547f34.input\n        length_61b38d.output -> count_digits_96023e.s_6b655b\n        s_6b38d.output -> substring_547f34.start\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) regex_firstmatch_dfa16 root.Std_k98ojb.Strings.Regex.FirstMatch {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) length_547f34 root.Std_k98ojb.Strings.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        \"\\\\d\" -> regex_firstmatch_dfa16.pattern\n        s_6b655b -> regex_firstmatch_dfa16.input\n        \"\" -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        regex_firstmatch_dfa16.result -> length_547f34.input\n        0 -> add_88bb8a.first\n        length_547f34.output -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) regex_firstmatch_5f8a1c root.Std_k98ojb.Strings.Regex.FirstMatch {\n            pattern: \"\\\\d\"\n        }\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_2c9f5d root.Std_k98ojb.Strings.Length {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> getter_38583a.execute\n        regex_firstmatch_5f8a1c.value -> length_2c9f5d.input\n        length_2c9f5d.output -> setter_41e4ad.new_value\n        s_6b655b -> regex_firstmatch_5f8a1c.input\n        count_digits_96023e.s_6b655b -> substring_3b7e9f.string\n        0 -> substring_3b7e9f.start\n        1 -> substring_3b7e9f.end\n        substring_3b7e9f.output -> regex_firstmatch_5f8a1c.input\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_f4f8a7 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) substring_b7f8c1 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -249) length_c3e4d9 root.Std_k98ojb.Strings.Length {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        is_numeric_f4f8a7.input -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> length_c3e4d9.input\n        0 -> substring_b7f8c1.start\n        length_c3e4d9.output -> substring_b7f8c1.end\n        substring_b7f8c1.result -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) regex_firstmatch_dfa16 root.Std_k98ojb.Strings.Regex.FirstMatch {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_547f34 root.Std_k98ojb.Strings.Substring {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        \"(\\\\d)\" -> regex_firstmatch_dfa16.pattern\n        s_6b655b -> regex_firstmatch_dfa16.input\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        regex_firstmatch_dfa16.successful_match -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        substring_547f34.start -> regex_firstmatch_dfa16.successful_match.index + 1\n        s_6b655b -> substring_547f34.input\n        substring_547f34.result -> count_digits_96023e.s_6b655b\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) matchindices_b5f1d2 root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 656, y: -330) len_3c4f9a root.Std_k98ojb.Strings.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) substr_f4c9d2 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -249) iterlist_8e1f7c root.Std_k98ojb.IterList {}\n\n        \"0-9\" -> matchindices_b5f1d2.pattern\n        s_6b655b -> matchindices_b5f1d2.input\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        matchindices_b5f1d2.indices -> iterlist_8e1f7c.items\n        0 -> substr_f4c9d2.start\n        iterlist_8e1f7c.index + 1 -> substr_f4c9d2.end\n        s_6b655b -> substr_f4c9d2.input\n\n        substr_f4c9d2.output -> len_3c4f9a.string\n        len_3c4f9a.result -> setter_375321.new_value\n\n        iterlist_8e1f7c.on_item -> setter_375321.execute\n        count_digits_96023e.continue_d9efd7 -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> is_numeric_adfa16.input\n        is_numeric_adfa16.output -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.s_6b655b -> substring_7c9f4a.input\n        substring_7c9f4a.start -> number_5d3f1a.index\n        substring_7c9f4a.end -> number_5d3f1a.index + 1\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        number_5d3f1a.index -> add_88bb8a.second\n        number_5d3f1a.value -> substring_7c9f4a.input\n        number_5d3f1a.value -> is_numeric_adfa16.input\n        setter_375321.continue -> count_digits_96023e.next\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        getter_38583a.value -> output_732a8a\n\n        instance(x: 97, y: -249) number_5d3f1a root.Std_k98ojb.Iteration.Find {\n            predicate: \"it >= 0 && it < s.length()\"\n        }\n        instance(x: 99, y: -249) substring_7c9f4a root.Std_k98ojb.Strings.Substring {}\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_7f3b8d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_547f34 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.Strings.Length {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        input_string_7f3b8d -> length_61b38d.input\n        length_61b38d.output -> substring_547f34.end\n        0 -> substring_547f34.start\n        substring_547f34.result -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> ifexpression_3d7de6.gen_1\n        input_string_7f3b8d -> count_digits_96023e.input_string_7f3b8d\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) length_547f34 root.Std_k98ojb.Strings.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: 97, y: -127) matchindices_adfa16 root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: -202, y: -236) slice_61b38d root.List.Slice {}\n\n        \"0-9\" -> matchindices_adfa16.pattern\n        s_6b655b -> matchindices_adfa16.input\n        1 -> length_547f34.string\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        matchindices_adfa16.indices -> slice_61b38d.list\n        0 -> slice_61b38d.start\n        -1 -> slice_61b38d.end\n        slice_61b38d.output -> length_547f34.string\n        length_547f34.length -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: 136) expression_5f7b1e root.Std_k98ojb.Math.Expression {\n            expression: \"div.result*div.result\"\n        }\n        div_64046c.result -> expression_5f7b1e.gen_0\n\n        expression_5f7b1e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_a8d2a4 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") sum_of_fourth_powers {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: -1) pow_8b7f9c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_8b7f9c.base\n        data_instance(x: 500, y: 133) data_2a3d4e = 4\n        data_2a3d4e -> pow_8b7f9c.exponent\n\n        pow_8b7f9c.result -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: -1) power_7e9b5c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> power_7e9b5c.base\n        data_instance(x: 450, y: 133) data_8f3a2d = 4\n        data_8f3a2d -> power_7e9b5c.exponent\n\n        instance(x: 490, y: -1) sum_iter root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(in_: List, out_: Number) {\n                in_(0).value + in_(1)\n            }\n        }\n\n        instance(x: 570, y: -1) range_5f3a2c root.Std_k98ojb.List.GenerateRange {}\n        data_instance(x: 620, y: 133) data_9d4e7f = 1\n        data_9d4e7f -> range_5f3a2c.from\n        n_3a3116 -> range_5f3a2c.to\n\n        instance(x: 650, y: -1) map_f8b4c3 root.Std_k98ojb.Iteration.Map {}\n        range_5f3a2c.items -> map_f8b4c3.items\n        power_7e9b5c.result -> map_f8b4c3.handler\n\n        sum_iter.initial_value = 0\n        map_f8b4c3.output_list -> sum_iter.item\n\n        sum_iter.result -> sum_365f7b\n    }\n}\n\ninstance(x: 118, y: -26) fourth_power_sum_instance root.main.fourth_power_sum {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: -1) pow_instance root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_instance.base\n        data_instance(x: 470, y: 133) data_instance_1 = 4\n        data_instance_1 -> pow_instance.exponent\n\n        pow_instance.result -> sum_365f7b\n    }\n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"8*n*n*n*n-4*n*n+1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_ae9d1c root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) pow_a8f7b9 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a8f7b9.base\n        data_instance(x: 330, y: -1) data_ea4d3e = 4\n        data_ea4d3e -> pow_a8f7b9.exponent\n\n        pow_a8f7b9.result -> sum_365f7b\n    }\n}\n\ninstance(x: 118, y: -26) fourth_power_sum_1c2d5e root.main.fourth_power_sum {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_64046c root.Std_k98ojb.Math.Pow {}\n        data_cde0dc -> pow_64046c.second\n        mul_f892a4.result -> pow_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_64046c.result -> sum_365f7b\n    }\n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") sum_fourth_powers {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) pow_9b5f7c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9b5f7c.base\n        data_instance(x: 330, y: -2) data_ea3b4d = 4\n        data_ea3b4d -> pow_9b5f7c.exponent\n\n        pow_9b5f7c.result -> sum_365f7b\n    }\n}\n\ninstance(x: 118, y: -26) sum_fourth_powers_instance root.main.sum_fourth_powers {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) mul_7f9b5e root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_7f9b5e.first\n        div_64046c.result -> mul_7f9b5e.second\n        mul_7f9b5e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -24) pow_5e8b1c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5e8b1c.base\n        data_instance(x: 330, y: -21) data_ea2d4f  = 4\n        data_ea2d4f -> pow_5e8b1c.exponent\n        pow_5e8b1c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube with a given side length.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side\") property(Number) side_3e6f5d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f7c2a8\n\n        instance(x: 94, y: -105) mul_d0b9a4 root.Std_k98ojb.Math.Mul {}\n        side_3e6f5d -> mul_d0b9a4.first\n        6 -> mul_d0b9a4.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) pow_eb5d9a root.Std_k98ojb.Math.Pow {}\n            x_8ee839 -> pow_eb5d9a.x\n            2 -> pow_eb5d9a.y\n            pow_eb5d9a.result -> _7dd980\n        } -> mul_d0b9a4.second\n        mul_d0b9a4.result -> surfaceArea_f7c2a8\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7c6f9e\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_e1a2b3\n\n        instance(x: 94, y: -105) mul_5d8f4a root.Std_k98ojb.Math.Mul {}\n        size_7c6f9e -> mul_5d8f4a.first\n        size_7c6f9e -> mul_5d8f4a.second\n        mul_5d8f4a.result -> surfaceArea_e1a2b3\n\n        instance(x: 94, y: -130) mul_b3a4c5 root.Std_k98ojb.Math.Mul {}\n        surfaceArea_e1a2b3 -> mul_b3a4c5.first\n        6 -> mul_b3a4c5.second\n        mul_b3a4c5.result -> surfaceArea_e1a2b3\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7e8c6a\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_5d9b2f\n\n        instance(x: 94, y: -105) mul_f3b4d1 root.Std_k98ojb.Math.Mul {}\n        size_7e8c6a -> mul_f3b4d1.first\n        size_7e8c6a -> mul_f3b4d1.second\n        mul_f3b4d1.result -> surface_area_5d9b2f\n\n        instance(x: 94, y: -135) mul_ea0d8f root.Std_k98ojb.Math.Mul {}\n        surface_area_5d9b2f -> mul_ea0d8f.first\n        6 -> mul_ea0d8f.second\n        mul_ea0d8f.result -> surface_area_5d9b2f\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3e4f7d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        6 -> mul_f2330d.first\n        size_3e4f7d -> mul_f2330d.second\n        mul_f2330d.result -> result_cbb7bd\n\n        instance(x: 94, y: -105) mul_e2a5c9 root.Std_k98ojb.Math.Mul {}\n        mul_f2330d.result -> mul_e2a5c9.first\n        size_3e4f7d -> mul_e2a5c9.second\n        mul_e2a5c9.result -> result_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_b9ff6b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_9e6a2f\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_a1c8d5 root.Std_k98ojb.Math.Mul {}\n        size_9e6a2f -> mul_a1c8d5.first\n        6 -> mul_a1c8d5.second\n        mul_a1c8d5.result -> result_cbb7bd\n\n        instance(x: -12, y: -35) pow_b4b0a3 root.Std_k98ojb.Math.Pow {}\n        size_9e6a2f -> pow_b4b0a3.x\n        2 -> pow_b4b0a3.y\n        mul_a1c8d5.second -> mul_a1c8d5.first\n        pow_b4b0a3.result -> mul_a1c8d5.second\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_9f2e7b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6f9c3a\n\n        out(x: 656, y: -68, name: \"\") property(Number) _7dd980\n\n        instance(x: 94, y: -105) mul_1d0e2b root.Std_k98ojb.Math.Mul {}\n        size_6f9c3a -> mul_1d0e2b.first\n        6 -> mul_1d0e2b.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_d1e5f4 root.Std_k98ojb.Math.Mul {}\n            x_8ee839 -> mul_d1e5f4.first\n            size_6f9c3a -> mul_d1e5f4.second\n            mul_d1e5f4.result -> _7dd980\n        } -> mul_1d0e2b.handler\n        mul_1d0e2b.result -> _7dd980\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_f9c3a root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_9f0a7c\n\n        out(x: 656, y: -68, name: \"\") property(Number) _b8e6d3\n\n        instance(x: 94, y: -105) mul_e4a5a2 root.Std_k98ojb.Math.Mul {}\n        size_9f0a7c -> mul_e4a5a2.first\n        6 -> mul_e4a5a2.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_f1e3d8\n\n            out(x: 333, y: -50, name: \"\") property(Number) _c7f6b0\n\n            instance(x: 92, y: -22) mul_9a5b2c root.Std_k98ojb.Math.Mul {}\n            x_f1e3d8 -> mul_9a5b2c.first\n            size_9f0a7c -> mul_9a5b2c.second\n            mul_9a5b2c.result -> _c7f6b0\n        } -> mul_e4a5a2.handler\n        mul_e4a5a2.result -> _b8e6d3\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6c8f7d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9e2b3a\n\n        instance(x: 94, y: -105) mul_4d1a5e root.Std_k98ojb.Math.Mul {}\n        size_6c8f7d -> mul_4d1a5e.first\n        6 -> mul_4d1a5e.second\n        mul_4d1a5e.result -> surface_area_9e2b3a\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_8f7c0b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8ee839\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_8ee839 -> mul_584bfd.first\n        6 -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) find_cube_surface_area_b9ff6b root.main.find_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e3d1f\n\n        out(x: 656, y: -68, name: \"\") property(Number) _a0b5c7\n\n        instance(x: 94, y: -105) mul_f9c8e4 root.Std_k98ojb.Math.Mul {}\n        size_6e3d1f -> mul_f9c8e4.first\n        6 -> mul_f9c8e4.second\n        mul_f9c8e4.result -> _a0b5c7\n    }\n\n    \n\n    instance(x: -92, y: 45) find_surface_area_2f3d1a root.main.find_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -483) subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> subtract_node.first\n        min_value_ai -> subtract_node.second\n        subtract_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_value_node root.main.diff_max_min {}\n    instance(x: 426, y: -393) min_value_node root.main.diff_max_min {}\n    instance(x: 426, y: -483) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_of_list {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_instance_node root.main.range_of_list.list_max_node {}\n    instance(x: 426, y: -423) min_instance_node root.main.range_of_list.list_min_node {}\n    instance(x: 426, y: -543) sub_instance_node root.main.range_of_list.sub_node {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest number in a list.\") range_of_list {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        instance(x: 426, y: -483) subtract_node root.Std_k98ojb.Math.Sub {}\n        max_ai -> subtract_node.first\n        min_ai -> subtract_node.second\n        subtract_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.range_of_list {}\n\n    \n    instance(x: 426, y: -393) list_min_node root.main.range_of_list {}\n\n    \n    instance(x: 426, y: -483) subtract_node root.main.range_of_list {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -510) math_subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_subtract_node.first\n        min_value_ai -> math_subtract_node.second\n        math_subtract_node.result -> diff_ai\n    }\n\n    \n    in(x: -426, y: -303, name: \"max value\") property(Number) max_value_ai\n    in(x: -426, y: -423, name: \"min value\") property(Number) min_value_ai\n\n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_of_list {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        instance(x: 426, y: -453) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n\n        instance(x: 426, y: -594) math_sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n        math_sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_of_list_node root.main.range_of_list {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -378) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -453) math_subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_subtract_node.first\n        min_value_ai -> math_subtract_node.second\n        math_subtract_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_val_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_val_ai\n\n        instance(x: 426, y: -483) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_val_ai -> math_sub_node.first\n        min_val_ai -> math_sub_node.second\n        math_sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_val_ai property(Number)\n    instance(x: 426, y: -393) min_val_ai property(Number)\n\n    instance(x: 426, y: -483) range_node root.main.range {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest number in a list.\") range_of_list {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -453) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -588) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.range_of_list {}\ninstance(x: 426, y: -453) list_min_node root.main.range_of_list {}\ninstance(x: 426, y: -588) sub_node root.main.range_of_list {}\n\nproperty(Number) max_value_ai\nproperty(Number) min_value_ai\n\n\n    \n    instance(x: 426, y: -588) range_of_list_node root.main.range_of_list {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -453) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        instance(x: 426, y: -588) math_subtract_node root.Std_k98ojb.Math.Sub {}\n        max_ai -> math_subtract_node.first\n        min_ai -> math_subtract_node.second\n        math_subtract_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) math_sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n        math_sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") EvenCheck {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) check_even root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_even.num\n        check_even.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.EvenCheck {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.number\n        if_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) and_7b3b7b root.Std_k98ojb.Logic.And {\n            left: \"number % 2 == 0\"\n            right: \"true\"\n        }\n        number_ai -> and_7b3b7b.left\n        and_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) check_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_7b3b7b.num\n        check_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) result_ai\n        instance(x: 772, y: 76) check_even_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_even_7b3b7b.num\n        check_even_7b3b7b.result -> result_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) check_even root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_even.num\n        check_even.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_4a8f3b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_b7c9d2\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_1f5a3c\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7e8d9b\n\n            instance(x: 89, y: 29) contains_2d4f6a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            contains_2d4f6a.list -> notequal_807ffd.right\n            elem_1f5a3c -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_7e8d9b\n        } -> find_6d05b0.predicate\n\n        instance(x: 100, y: -50) char_list_3c4d2e root.Std_k98ojb.Strings.Characters {}\n        string_4a8f3b -> char_list_3c4d2e.input\n\n        instance(x: 150, y: -100) seen_chars_a1b2c3 root.Std_k98ojb.List.Empty {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_seen_5f6a7d\n            out(x: 515, y: 44, name: \"list\") property(List) list_seen_8e9f0b\n\n            instance(x: 89, y: 29) add_1c2d3e root.Std_k98ojb.List.Add {}\n            seen_chars_a1b2c3.listWithoutItem -> add_1c2d3e.list\n            elem_seen_5f6a7d -> add_1c2d3e.item\n            add_1c2d3e.listWithItem -> list_seen_8e9f0b\n        } -> find_6d05b0.onItem\n\n        char_list_3c4d2e.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_b7c9d2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_5f8a1c root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_char_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3n4o5p\n\n            instance(x: 89, y: 29) index_of_first_occurrence_6q7r8s root.Std_k98ojb.Strings.MatchIndices {}\n            instance(x: 310, y: 35) index_of_second_occurrence_9t0u1v root.Std_k98ojb.Strings.MatchIndices {}\n            instance(x: 89, y: 29) greater_than_2w3x4y root.Std_k98ojb.Math.GreaterThan {}\n\n            string_1a2b3c -> index_of_first_occurrence_6q7r8s.input\n            char_jk1l2m -> index_of_first_occurrence_6q7r8s.pattern\n\n            string_1a2b3c -> index_of_second_occurrence_9t0u1v.input\n            char_jk1l2m -> index_of_second_occurrence_9t0u1v.pattern\n\n            0 -> greater_than_2w3x4y.left\n            index_of_first_occurrence_6q7r8s.indices[0] -> greater_than_2w3x4y.right\n\n            index_of_second_occurrence_9t0u1v.indices[0] -> bool_3n4o5p\n        } -> find_repeated_char_7g8h9i.predicate\n        string_1a2b3c -> find_repeated_char_7g8h9i.items\n        find_repeated_char_7g8h9i.item -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_a1b2c3 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_5d8f9b\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_3a7c2e\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) index_of_1088d5 root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> index_of_1088d5.start\n            string_5d8f9b -> index_of_1088d5.string\n            char_9f6850 -> index_of_1088d5.search\n            index_of_1088d5.result -> notequal_807ffd.left\n            -1 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_repeated_char_6d05b0.predicate\n        string_5d8f9b -> root.Std_k98ojb.Strings.Characters().characters\n        find_repeated_char_6d05b0.item -> char_3a7c2e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_3f2a1b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_7e4c9d\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1a2b3c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d4e5f6\n\n            instance(x: 89, y: 29) contains_7g8h9i root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) set_at_jk0l1m root.Std_k98ojb.List.SetAt {}\n            instance(x: 410, y: 45) empty_list_nopqrs root.Std_k98ojb.List.Empty {}\n\n            string_3f2a1b -> contains_7g8h9i.list\n            char_1a2b3c -> contains_7g8h9i.item\n\n            set_at_jk0l1m.index -> 0\n            bool_d4e5f6 -> set_at_jk0l1m.value\n\n            empty_list_nopqrs.result -> set_at_jk0l1m.list\n            find_first_repeated.items -> string_3f2a1b.Characters.characters\n            contains_7g8h9i.result -> bool_d4e5f6\n        } -> find_first_repeated.predicate\n        find_first_repeated.item -> char_7e4c9d\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2c3d\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_b4e5f6\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_123abc root.Std_k98ojb.Strings.Contains {}\n            contains_123abc.input -> string_1a2c3d\n            elem_9f6850 -> contains_123abc.contains\n            contains_123abc.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n\n        instance(x: -100, y: 50) characters_456def root.Std_k98ojb.Strings.Characters {}\n        characters_456def.input -> string_1a2c3d\n        characters_456def.characters -> find_6d05b0.items\n\n        find_6d05b0.item -> char_b4e5f6\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_7g8h9i root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_9f6850\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_af09a7\n\n        instance(x: 0, y: 0) find_repeated_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            contains_1088d5.list -> list_so_far\n            elem_9f6850 -> contains_1088d5.item\n            contains_1088d5.result -> bool_af09a7\n        } -> find_repeated_6d05b0.predicate\n        instance(x: 0, y: -50) characters_2c856f root.Std_k98ojb.Strings.Characters {}\n        string_9f6850 -> characters_2c856f.input\n        characters_2c856f.characters -> list_so_far\n        find_repeated_6d05b0.item -> char_af09a7\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) str_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_4d5e6f\n\n        instance(x: 0, y: 0) find_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_a1b2c3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d4e5f6\n\n            instance(x: 89, y: 29) contains_10d11e root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) indexof_jk12lm root.Std_k98ojb.Strings.IndexOf {}\n            instance(x: 410, y: 45) substring_no13pq root.Std_k98ojb.Strings.Substring {}\n\n            list_ab_1 -> contains_10d11e.list\n            elem_a1b2c3 -> contains_10d11e.item\n\n            str_1a2b3c -> indexof_jk12lm.string\n            elem_a1b2c3 -> indexof_jk12lm.search\n\n            indexof_jk12lm.index -> substring_no13pq.start\n            (indexof_jk12lm.index + 1) -> substring_no13pq.end\n\n            substring_no13pq.result -> char_4d5e6f\n\n            contains_10d11e.result -> bool_d4e5f6\n        } -> find_7g8h9i.predicate\n        str_1a2b3c.Characters() -> list_ab_\n        find_7g8h9i.item -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_3r4s5t root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_char_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_n3o4p5\n\n            instance(x: 89, y: 29) has_char_6q7r8s root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) not_empty_t9u0v1 root.Std_k98ojb.List.NotEmpty {}\n\n            string_1a2b3c -> find_repeated_char_7g8h9i.items\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(Char) char_a1b2c3\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d4e5f6\n\n                instance(x: 89, y: 29) list_7g8h9i root.Std_k98ojb.List.Empty {}\n                instance(x: 310, y: 35) add_char_x1y2z3 root.Std_k98ojb.Iteration.Map {}\n\n                char_a1b2c3 -> add_char_x1y2z3.items\n                func() {\n                    in(x: -113, y: 34, name: \"char\") property(Char) char_m4n5o6\n\n                    out(x: 515, y: 44, name: \"list\") property(List) list_p7q8r9\n\n                    instance(x: 89, y: 29) concat_s1t2u3 root.Std_k98ojb.List.Concat {}\n                    instance(x: 310, y: 35) contains_v4w5x6 root.Std_k98ojb.List.Contains {}\n\n                    list_7g8h9i -> concat_s1t2u3.left\n                    char_m4n5o6 -> concat_s1t2u3.right\n                    concat_s1t2u3.result -> list_p7q8r9\n\n                    char_m4n5o6 -> contains_v4w5x6.item\n                    list_7g8h9i -> contains_v4w5x6.list\n                    contains_v4w5x6.result -> bool_d4e5f6\n                } -> add_char_x1y2z3.handler\n            } -> has_char_6q7r8s.list\n\n            char_jk1l2m -> has_char_6q7r8s.item\n            not_empty_t9u0v1.has_list -> bool_n3o4p5\n            has_char_6q7r8s.result -> bool_n3o4p5\n        } -> find_repeated_char_7g8h9i.predicate\n\n        find_repeated_char_7g8h9i.item -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_3c4d5e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_3d8f9a\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_5e2b7c\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            string_3d8f9a -> characters_1c2e4f.Std_k98ojb.Strings.Characters\n            characters_1c2e4f.characters -> list_abed4a.Std_k98ojb.List.Empty\n\n            instance(x: 150, y: 50) loop_instance root.Std_k98ojb.Iteration.ForEach {}\n            func() {\n                in(x: -200, y: 60, name: \"current_char\") property(String) current_char_9f6850\n                list_abed4a -> loop_list\n                loop_instance.items -> loop_list\n\n                instance(x: 250, y: 70) add_to_list root.Std_k98ojb.List.Add {}\n                func() {\n                    in(x: -300, y: 80, name: \"item\") property(String) item_9f6850\n                    current_char_9f6850 -> add_to_list.item\n                    loop_list -> add_to_list.list\n\n                    instance(x: 350, y: 90) contains_check root.Std_k98ojb.List.Contains {}\n                    func() {\n                        in(x: -400, y: 100, name: \"check_item\") property(String) check_item_9f6850\n                        current_char_9f6850 -> contains_check.item\n                        list_abed4a -> contains_check.list\n\n                        contains_check.result -> notequal_807ffd.right\n                        0 -> notequal_807ffd.left\n                        notequal_807ffd.result -> bool_af09a7\n                    }\n                }\n            }\n\n            loop_instance.items -> find_repeated_char_6d05b0.items\n            find_repeated_char_6d05b0.item -> char_5e2b7c\n        }\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_5d9f8a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_d3b7e2\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            contains_1088d5.input -> string_5d9f8a\n            elem_1088d5 -> contains_1088d5.contains\n            contains_1088d5.result -> bool_af09a7\n\n            instance(x: 89, y: 29) substring_807ffd root.Std_k98ojb.Strings.Substring {}\n            string_5d9f8a -> substring_807ffd.input\n            0 -> substring_807ffd.start\n            1 -> substring_807ffd.end\n            substring_807ffd.result -> elem_1088d5\n\n            instance(x: 89, y: 29) characters_3bc2ae root.Std_k98ojb.Strings.Characters {}\n            string_5d9f8a -> characters_3bc2ae.input\n            characters_3bc2ae.characters -> find_repeated_char_6d05b0.items\n        } -> find_repeated_char_6d05b0.predicate\n        find_repeated_char_6d05b0.item -> char_d3b7e2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 639, y: -303) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted_list -> list_slice_node.list\n        instance(x: 852, y: -303) number_get_node root.Std_k98ojb.List.GetAt {}\n        list_slice_node.slice -> number_get_node.indexed_list\n        number_get_node.index = 1\n        number_get_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) list_getat_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_getat_node.list\n        instance(x: 426, y: -588) number_1_node root.Std_k98ojb.Constant {}\n        number_1_node.value = 1\n        list_getat_node.index -> number_1_node.execute\n        list_getat_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n\n        instance(x: 426, y: -453) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_get_at_node.list\n        instance(x: 159, y: -453) constant_index_1 root.Std_k98ojb.Constant { value: 1 }\n        constant_index_1.value -> list_get_at_node.index\n\n        list_get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> list_slice_node.list\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        list_slice_node.list -> second_min_node.items\n\n        instance(x: 426, y: -519) second_min_node root.Std_k98ojb.List.FirstItem {}\n        second_min_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> sorted_list_ai\n        \n        instance(x: 426, y: -453) get_second_item_node Std_k98ojb.List.GetAt {}\n        sorted_list_ai -> get_second_item_node.list\n        get_second_item_node.index(1) = 1\n        get_second_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_items_node root.main.second_smallest_num {}\n\n    property(List) sorted_list_ai\n\n    \n    instance(x: 426, y: -453) get_second_item_node root.main.second_smallest_num {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n\n        instance(x: 426, y: -438) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_get_at_node.list\n        number_1 -> list_get_at_node.index\n        list_get_at_node.item -> second_min_ai\n\n        constant(x: 159, y: -459, value: \"1\") number_1 {}\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -483) list_getat_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_getat_node.list\n        list_getat_node.index <- 1\n        list_getat_node.value -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n\n        instance(x: 426, y: -423) list_get_at_node_1 root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_get_at_node_1.list\n        number(2) -> list_get_at_node_1.index\n        list_get_at_node_1.value -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_node root.main.second_smallest_num {}\n    items_ai -> sort_node.items\n\n    instance(x: 426, y: -423) get_second_item_node root.Std_k98ojb.List.GetAt {}\n    sort_node.sorted_list -> get_second_item_node.list\n    number(2) -> get_second_item_node.index\n    get_second_item_node.value -> second_min_ai\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> list_slice_node.input_list\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {\n            start: 1,\n            end: 2\n        }\n        list_slice_node.listWithoutItem -> second_min_node.item\n        second_min_node.min -> second_min_ai\n\n        instance(x: 426, y: -519) second_min_node root.Std_k98ojb.List.Min {}\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> list_slice_node.input_list\n\n        instance(x: 426, y: -483) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        list_slice_node.listWithoutItem -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 11381,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Returns true if the provided lists has at least one common element.\") list_has_common_element {\n        in(x: -171, y: -153, name: \"list1\") property(List) list1_1f846b\n        in(x: -179, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) has_common_element_f5a6e8\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        instance(x: 0, y: -55) any_5f7b6a root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> any_5f7b6a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_f9d4e3\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_7c5f6b root.Std_k98ojb.Logic.Not {}\n            func() {\n                in(x: -231, y: -69, name: \"value\") property(Boolean) value_42bc6f\n                value_42bc6f -> not_7c5f6b.value\n            } -> item_f9d4e3\n            not_7c5f6b.result -> result_e245cb\n        } -> any_5f7b6a.handler\n        instance(x: 0, y: -57) length_1b8f2e root.Std_k98ojb.List.Length {}\n        any_5f7b6a.output_list -> length_1b8f2e.list\n        instance(x: 0, y: -59) greater_than_or_equal_3d4c9e root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        length_1b8f2e.length -> greater_than_or_equal_3d4c9e.left\n        instance(x: 0, y: -61) number_from_string_7a5b6d root.Std_k98ojb.Math.NumberFromString {}\n        strings_empty_3d4c9e.String.Empty() -> number_from_string_7a5b6d.string\n        number_from_string_7a5b6d.number -> greater_than_or_equal_3d4c9e.right\n        greater_than_or_equal_3d4c9e.result -> has_common_element_f5a6e8\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) has_common_element_d3c9a8\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_5f7c3a root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_5f7c3a.left\n            list2_1d86d4 -> equal_5f7c3a.right\n            equal_5f7c3a.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 132, y: -130) filter_9e8b6d root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_9e8b6d.items\n        func() {\n            in(x: -232, y: -68, name: \"item\") property(List) item_b3a4f1\n\n            out(x: 246, y: -55, name: \"result\") property(Boolean) result_f7c2e9\n\n            instance(x: -10, y: -54) not_8b6d5f root.Std_k98ojb.Logic.Not {}\n            item_b3a4f1 -> not_8b6d5f.input\n            not_8b6d5f.result -> result_f7c2e9\n        } -> filter_9e8b6d.handler\n\n        instance(x: 131, y: -129) length_7a4c3e root.Std_k98ojb.List.Length {}\n        filter_9e8b6d.output_list -> length_7a4c3e.list\n\n        instance(x: 130, y: -128) greater_than_or_equal_2f5d1c root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        number(0) -> greater_than_or_equal_2f5d1c.left\n        length_7a4c3e.length -> greater_than_or_equal_2f5d1c.right\n        greater_than_or_equal_2f5d1c.result -> has_common_element_d3c9a8\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Boolean) result_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_4e8c54.left\n            list2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: -7, y: 3) filter_5f6a34 root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_5f6a34.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_7a3b2c root.Std_k98ojb.Logic.Not {}\n            item_42bc6f -> not_7a3b2c.input\n            not_7a3b2c.result -> result_e245cb\n        } -> filter_5f6a34.handler\n\n        instance(x: 0, y: -10) any_8d9e4f root.Std_k98ojb.Iteration.Any {}\n        filter_5f6a34.output_list -> any_8d9e4f.items\n        not_7a3b2c.result -> any_8d9e4f.predicate\n\n        instance(x: 0, y: -10) not_any_1b2c3d root.Std_k98ojb.Logic.Not {}\n        any_8d9e4f.result -> not_any_1b2c3d.input\n        not_any_1b2c3d.result -> result_0d40f1\n    }\n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Returns true if the two input lists have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommon\") property(Bool) has_common_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: -7, y: 5) filter_3f6b0a root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_3f6b0a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_e245cb\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_4e8c54\n\n            instance(x: -8, y: -53) not_6f9b3d root.Std_k98ojb.Logic.Not {}\n            item_e245cb -> not_6f9b3d.input\n            not_6f9b3d.result -> result_4e8c54\n        } -> filter_3f6b0a.handler\n\n        instance(x: 5, y: -7) contains_2a1f9e root.Std_k98ojb.List.Contains {}\n        list1_1f846b -> contains_2a1f9e.list\n        filter_3f6b0a.output_list -> contains_2a1f9e.item\n        contains_2a1f9e.contains -> has_common_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -171, y: -152, name: \"list1\") property(List) list1_2a3f8c\n        in(x: -179, y: -12, name: \"list2\") property(List) list2_9b4d7e\n\n        out(x: 782, y: -108, name: \"hasCommonElement\") property(Bool) has_common_element_f1a6b3\n\n        instance(x: 132, y: -130) zip_a1c8f2 root.Std_k98ojb.Iteration.Zip {}\n        list1_2a3f8c -> zip_a1c8f2.left\n        list2_9b4d7e -> zip_a1c8f2.right\n        func() {\n            in(x: -229, y: -67, name: \"item1\") property(Object) item1_5b6c3a\n            in(x: -221, y: 19, name: \"item2\") property(Object) item2_7d8e4f\n\n            out(x: 243, y: -52, name: \"result\") property(Bool) result_b9c8d5\n\n            instance(x: -6, y: -51) equal_3b9a1d root.Std_k98ojb.Logic.Equal {}\n            item1_5b6c3a -> equal_3b9a1d.left\n            item2_7d8e4f -> equal_3b9a1d.right\n            equal_3b9a1d.result -> result_b9c8d5\n        } -> zip_a1c8f2.handler\n\n        instance(x: 86, y: -119) any_true_d9c7e6 root.Std_k98ojb.Iteration.Find {}\n        zip_a1c8f2.zipped -> any_true_d9c7e6.items\n        func() {\n            in(x: -217, y: -65, name: \"item\") property(Object) item_4d5a3b\n\n            out(x: 241, y: -50, name: \"result\") property(Bool) result_1f2c8e\n\n            instance(x: -4, y: -49) is_true_6a7d9b root.Std_k98ojb.Logic.Not {}\n            item_4d5a3b -> is_true_6a7d9b.input\n            is_true_6a7d9b.value -> result_1f2c8e\n        } -> any_true_d9c7e6.predicate\n\n        instance(x: 76, y: -117) not_null_e4f5g7 root.Std_k98ojb.Logic.Not {}\n        any_true_d9c7e6.item -> not_null_e4f5g7.input\n        not_null_e4f5g7.value -> has_common_element_f1a6b3\n    }\n\n    \n\n    instance(x: 92, y: -121) has_common_element_8d9f0a root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommon\") property(Boolean) has_common_f3c0e5\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_3e9a5c root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_3e9a5c.left\n            list2_1d86d4 -> equal_3e9a5c.right\n            equal_3e9a5c.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 133, y: -131) filter_f8f6a0 root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_f8f6a0.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(List) item_a1d3e5\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) first_7f2a9c root.Std_k98ojb.List.FirstItem {}\n            item_a1d3e5 -> first_7f2a9c.list\n            first_7f2a9c.item -> result_e245cb\n        } -> filter_f8f6a0.handler\n\n        instance(x: 133, y: -131) reduce_4b3d2f root.Std_k98ojb.Iteration.Reduce {}\n        filter_f8f6a0.output_list -> reduce_4b3d2f.item\n        func() {\n            in(x: -231, y: -69, name: \"accumulated\") property(Boolean) accumulated_9e5c7f\n            in(x: -223, y: 18, name: \"item\") property(Boolean) item_d6a8b3\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) or_1f2d7c root.Std_k98ojb.Logic.Or {}\n            accumulated_9e5c7f -> or_1f2d7c.left\n            item_d6a8b3 -> or_1f2d7c.right\n            or_1f2d7c.result -> result_e245cb\n        } -> reduce_4b3d2f.handler\n\n        instance(x: 133, y: -131) choose_5c9e3b root.Std_k98ojb.Choose {}\n        func() {\n            in(x: -231, y: -69, name: \"predicate\") property(Boolean) predicate_7a8f6d\n            in(x: -223, y: 18, name: \"then\") property(Number) then_3c9e5d\n            in(x: -215, y: 27, name: \"else\") property(Number) else_4b2a1f\n\n            out(x: 245, y: -54, name: \"value\") property(Number) value_6f8d7e\n\n            predicate_7a8f6d -> choose_5c9e3b.predicate\n            then_3c9e5d -> choose_5c9e3b.then\n            else_4b2a1f -> choose_5c9e3b.else\n            choose_5c9e3b.value -> value_6f8d7e\n        }\n        reduce_4b3d2f.result -> choose_5c9e3b.predicate\n        true -> choose_5c9e3b.then\n        false -> choose_5c9e3b.else\n\n        choose_5c9e3b.value -> has_common_f3c0e5\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Boolean) has_common_element_3a9d7e\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: -11, y: 20) find_5f9b3a root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> find_5f9b3a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Boolean) item_f42bc6f\n\n            out(x: 245, y: -54, name: \"result\") property(Object) result_e245cb\n\n            instance(x: -8, y: -53) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n            item_f42bc6f -> not_4e8c54.input\n            not_4e8c54.result -> result_e245cb\n        } -> find_5f9b3a.predicate\n\n        instance(x: 11, y: -20) if_1d7f0e root.Std_k98ojb.Std.If {}\n        find_5f9b3a.item -> if_1d7f0e.input\n        func() {\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) constant_4e8c54 root.Std_k98ojb.Std.Constant {}\n            true -> constant_4e8c54.value\n            constant_4e8c54.value -> result_e245cb\n        } -> if_1d7f0e.then\n        func() {\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) constant_4e8c54 root.Std_k98ojb.Std.Constant {}\n            false -> constant_4e8c54.value\n            constant_4e8c54.value -> result_e245cb\n        } -> if_1d7f0e.else\n        if_1d7f0e.value -> has_common_element_3a9d7e\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the provided lists have at least one common element.\") list_has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_e245cb\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Any) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Any) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 133, y: -131) filter_201052 root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_201052.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Bool) item_e245cb\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) not_4e8c55 root.Std_k98ojb.Logic.Not {}\n            item_e245cb -> not_4e8c55.input\n            not_4e8c55.result -> result_e245cb\n        } -> filter_201052.handler\n\n        instance(x: 133, y: -131) reduce_201053 root.Std_k98ojb.Iteration.Reduce {}\n        filter_201052.output_list -> reduce_201053.item\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Bool) acc_e245cb\n            in(x: -223, y: 18, name: \"item\") property(Any) item_e245cb\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) or_4e8c56 root.Std_k98ojb.Logic.Or {}\n            acc_e245cb -> or_4e8c56.left\n            item_e245cb -> or_4e8c56.right\n            or_4e8c56.result -> result_e245cb\n        } -> reduce_201053.handler\n\n        instance(x: -8, y: -53) not_4e8c57 root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n            result_e245cb -> not_4e8c57.input\n        } -> reduce_201053.handler\n\n        instance(x: -8, y: -53) constant_4e8c58 root.Std_k98ojb.Std.Constant {}\n        false -> constant_4e8c58.value\n        func() {\n            in(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n            result_e245cb -> not_4e8c57.result\n        } -> constant_4e8c58.execute\n\n        constant_4e8c58.value -> reduce_201053.initial_value\n\n        reduce_201053.output -> has_common_element_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main { \n   func(doc: \"Returns true if the two lists have at least one common element.\") list_has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_ba9e5c\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_e245cb\n\n            instance(x: -8, y: -53) equal_5c3e9b root.Std_k98ojb.Logic.Equal {}\n            list1_42bc6f -> equal_5c3e9b.left\n            list2_1d86d4 -> equal_5c3e9b.right\n            equal_5c3e9b.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 133, y: -131) any_true_8a6f7f root.Std_k98ojb.Iteration.Any {}\n        zip_201051.zipped -> any_true_8a6f7f.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Bool) item_1e2c5d\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_3b9a8f\n\n            instance(x: -8, y: -53) not_6f7b4c root.Std_k98ojb.Logic.Not {}\n            item_1e2c5d -> not_6f7b4c.input\n            not_6f7b4c.result -> result_3b9a8f\n        } -> any_true_8a6f7f.handler\n\n        instance(x: -8, y: -53) not_b1f0e5 root.Std_k98ojb.Logic.Not {}\n        any_true_8a6f7f.result -> not_b1f0e5.input\n        not_b1f0e5.result -> has_common_element_ba9e5c\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the provided lists has at least one common item.\") list_has_common_item {\n        in(x: -171, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -179, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonItem\") property(Boolean) has_common_item_7e8c4d\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Object) item1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Object) item2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n            item1_42bc6f -> equal_4e8c54.left\n            item2_1d86d4 -> equal_4e8c54.right\n            equal_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n\n        instance(x: 133, y: -131) filter_7f3b6a root.Std_k98ojb.Iteration.Filter {}\n        zip_201051.zipped -> filter_7f3b6a.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Object) item_e245cb\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_f4d9c2\n\n            instance(x: -8, y: -53) not_1b3f7e root.Std_k98ojb.Logic.Not {}\n            item_e245cb -> not_1b3f7e.input\n            not_1b3f7e.result -> result_f4d9c2\n        } -> filter_7f3b6a.handler\n\n        instance(x: 133, y: -131) reduce_8d5f0b root.Std_k98ojb.Iteration.Reduce {}\n        filter_7f3b6a.output_list -> reduce_8d5f0b.item\n        func() {\n            in(x: -231, y: -69, name: \"accumulated\") property(Boolean) accumulated_c62075\n            in(x: -223, y: 18, name: \"item\") property(Object) item_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) or_3c9f2a root.Std_k98ojb.Logic.Or {}\n            accumulated_c62075 -> or_3c9f2a.left\n            item_1d86d4 -> or_3c9f2a.right\n            or_3c9f2a.result -> result_e245cb\n        } -> reduce_8d5f0b.reducer\n\n        instance(x: 133, y: -131) not_7e8c4d root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -231, y: -69, name: \"input\") property(Boolean) input_e245cb\n            input_e245cb -> not_7e8c4d.input\n            not_7e8c4d.result -> has_common_item_7e8c4d\n        }\n        reduce_8d5f0b.output -> not_7e8c4d.execute\n\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_item_cbc0b6 root.main.list_has_common_item {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") is_consecutive {\n        in(x: -526, y: -213, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -208, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -204, name: \"check if consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -20, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -16, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 50, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) subtract_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> subtract_c76d2b.first\n            _index_769593 -> subtract_c76d2b.second\n            subtract_c76d2b.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -15, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -27, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -22) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -24) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 847, y: -206) contains_32727d root.Std_k98ojb.List.Contains {}\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -4) is_consecutive_bf7dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.context_handler\n        list_07cae4 -> map_c73e3b.context_items\n        func() {\n            in(x: -192, y: 64, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 46, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 41) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: 43) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.index_handler\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_bf2c4a root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_2f3e7a root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_2f3e7a.first\n            list_07cae4[_index_769593 + 1] -> sub_2f3e7a.second\n            sub_2f3e7a.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4[0: -1] -> map_c73e3b.items\n\n        contains_32727d.list -> map_c73e3b.output_list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 246, y: -209, name: \"check consecutive numbers\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: -192, y: 56, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_d0b3a6 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_d0b3a6.first\n            list_07cae4.GetAt(_index_769593 + 1) -> sub_d0b3a6.second\n            sub_d0b3a6.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4.Slice(0, -2) -> map_c73e3b.items\n        func() {\n            in(x: 521, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            out(x: 1237, y: 49, name: \"output\") property(Bool) output_9f8c0d\n\n            instance(x: 1026, y: 56) or_4a5b1e root.Std_k98ojb.Logic.Or {}\n            output_efbc78 -> or_4a5b1e.left\n            false -> or_4a5b1e.right\n            or_4a5b1e.result -> output_9f8c0d\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_07cae4\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_result_8d07dc\n\n        instance(x: 847, y: -207) contains_e3b2a7 root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"generate pairs\") map_pairs_a1f4e9 root.Std_k98ojb.Iteration.Map {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_170471\n            in(x: 50, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"pair\") property(List) pair_efbc78\n\n            instance(x: 226, y: 56) slice_1b8c4d root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) add_b9e3f2 root.Std_k98ojb.Math.Add {}\n\n            current_769593 -> slice_1b8c4d.start\n            current_769593 -> add_b9e3f2.first\n            1 -> add_b9e3f2.second\n            input_list_07cae4 -> slice_1b8c4d.list\n            add_b9e3f2.result -> slice_1b8c4d.end\n\n            slice_1b8c4d.slice -> pair_efbc78\n        } -> map_pairs_a1f4e9.handler\n        input_list_07cae4 -> map_pairs_a1f4e9.items\n\n        instance(x: 1058, y: -203) any_consecutive_3f7a2b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"pair\") property(List) pair_current_81298e\n\n            out(x: 521, y: -28, name: \"is_consecutive\") property(Bool) is_consecutive_4524be\n\n            instance(x: 74, y: -23) length_d3a9b1 root.Std_k98ojb.List.Length {}\n            instance(x: 285, y: -25) sub_f2e8c7 root.Std_k98ojb.Math.Sub {}\n\n            pair_current_81298e -> length_d3a9b1.list\n            2 -> length_d3a9b1.expected_length\n\n            pair_current_81298e[0] -> sub_f2e8c7.first\n            pair_current_81298e[1] -> sub_f2e8c7.second\n\n            length_d3a9b1.result == 2 && sub_f2e8c7.result == 1 -> is_consecutive_4524be\n        } -> any_consecutive_3f7a2b.handler\n        map_pairs_a1f4e9.output_list -> any_consecutive_3f7a2b.items\n\n        contains_e3b2a7.is_contained -> output_result_8d07dc\n        true -> contains_e3b2a7.item\n        any_consecutive_3f7a2b.output_list -> contains_e3b2a7.list\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"only true values\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -13, name: \"_next\") property(Number) _next_2c3d7f\n\n            out(x: 521, y: -28, name: \"difference\") property(Number) difference_4a8b5e\n\n            current_81298e -> difference_4a8b5e\n            difference_4a8b5e -> _next_2c3d7f\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_1a9c5f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) equal_8b7d4e root.Std_k98ojb.Logic.Equal {}\n            current_1a9c5f -> equal_8b7d4e.left\n            1 -> equal_8b7d4e.right\n            equal_8b7d4e.result -> output_efbc78\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_8b7d4e root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_8b7d4e.left\n            true -> equal_8b7d4e.right\n            equal_8b7d4e.result -> bool_4524be\n        } -> contains_32727d.handler\n        filter_c91965.output_list -> contains_32727d.list\n        true -> output_8d07dc\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"check consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_c76d2b.first\n            _index_769593 -> sub_c76d2b.second\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n                instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> modulo_ad7b2a.value\n                2 -> modulo_ad7b2a.divisor\n                modulo_ad7b2a.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            } -> sub_c76d2b.handler\n            sub_c76d2b.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: -303, y: -205, name: \"only true values\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) _bool_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n            _bool_170471 -> output_efbc78\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n        contains_32727d.is_contained -> output_8d07dc\n        false -> contains_32727d.item\n        filter_c91965.output_list -> contains_32727d.list\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform to pairs\") zip_5e9f3a root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"left\") property(Number) left_3c5d2e\n            in(x: -23, y: 79, name: \"right\") property(Number) right_b9f1a4\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_8b3d5c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_d9f1e2 root.Std_k98ojb.Logic.Equal {}\n\n            1 -> sub_8b3d5c.second\n            left_3c5d2e -> sub_8b3d5c.first\n            sub_8b3d5c.result -> equal_d9f1e2.left\n            0 -> equal_d9f1e2.right\n            equal_d9f1e2.result -> output_efbc78\n        } -> zip_5e9f3a.handler\n\n        list_07cae4 -> zip_5e9f3a.left\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            out(x: 521, y: -28, name: \"next\") property(Number) next_6b2c8d\n\n            instance(x: 74, y: -23) add_c9a1f7 root.Std_k98ojb.Math.Add {}\n            current_81298e -> add_c9a1f7.first\n            1 -> add_c9a1f7.second\n            add_c9a1f7.result -> next_6b2c8d\n        } -> zip_5e9f3a.right\n\n        zip_5e9f3a.zipped -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_b3a4e2 root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"check consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_a1f3d2\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_a1f3d2 -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_b2f7d1\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_b2f7d1 -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_c3g8h2\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_c3g8h2 -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_a1f2d3 root.main.has_consecutive_numbers {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"list\") property(List) list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_f1a2b3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        sublist_f1a2b3 -> sublist_for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        sublist_for_d26972.done -> continue_a96db6\n        sublist_for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        sublist_for_d26972.onItem -> sublist_ifexpression_875761.execute\n        sublist_ifexpression_875761.value -> output_5bbcd7\n        sublist_ifexpression_875761.then -> continue_a96db6\n        sublist_ifexpression_875761.else -> setter_9d4f1c.next\n        for_d26972.done -> sublist_for_d26972.reset\n        for_d26972.item -> getat_ce2a48.new_index\n        sublist_for_d26972.item -> getat_sublist_ce2a48.list\n        0 -> getat_sublist_ce2a48.index\n        getat_sublist_ce2a48.itemAtIndex -> sublist_ifexpression_875761.gen_1\n        for_d26972.item -> sublist_ifexpression_875761.gen_2\n        sublist_for_d26972.index -> sublist_ifexpression_875761.gen_0\n        getter_b280eb.value -> sublist_ifexpression_875761.gen_3\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_for.items\n        sublist_for.item -> sublist_ifexpression.gen_2\n        sublist_for.index -> sublist_ifexpression.gen_0\n        getter_b280eb.value -> sublist_ifexpression.gen_1\n        sublist_for.onItem -> sublist_ifexpression.execute\n        sublist_for.done -> continue_a96db6\n        sublist_for.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 752, y: -200) ifexpression_sublist root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter_sublist(x: 334, y: 160, name: \"getter_b280eb_sublist\") getter_b280eb_sublist = previous\n        setter_sublist(x: 679, y: -313, name: \"setter_9d4f1c_sublist\") setter_9d4f1c_sublist = previous\n        instance_sublist(x: 321, y: -20) sublist_for root.Std_k98ojb.Std.For {}\n        setter_sublist(x: -0, y: -121, name: \"setter_9d4f1c_sublist\") setter_38e107_sublist = previous\n        instance_sublist(x: -275, y: -35) getat_ce2a48_sublist root.Std_k98ojb.List.GetAt {}\n        ifexpression_sublist.else -> continue_a96db6\n        sublist_ifexpression.value -> output_5bbcd7\n        sublist_ifexpression.then -> setter_9d4f1c_sublist.execute\n        sublist_for.item -> ifexpression_sublist.gen_2\n        sublist_for.index -> ifexpression_sublist.gen_0\n        getter_b280eb_sublist.value -> ifexpression_sublist.gen_1\n        sublist_for.onItem -> ifexpression_sublist.execute\n        sublist_for.done -> continue_a96db6\n        sublist_for.item -> setter_9d4f1c_sublist.new_value\n        main_list_ec88cd -> getat_ce2a48_sublist.list\n        0 -> getat_ce2a48_sublist.index\n        getat_ce2a48_sublist.itemAtIndex -> setter_38e107_sublist.new_value\n        execute_90aaec -> setter_38e107_sublist.execute\n        setter_38e107_sublist.continue -> sublist_for.reset\n        setter_9d4f1c_sublist.continue -> sublist_for.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + sublist_length <= main_list_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: -275, y: -35, name: \"getter_2a5b3e\") getter_2a5b3e = main_list\n        getter(x: -275, y: 160, name: \"getter_c1d9f7\") getter_c1d9f7 = sublist\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -275, y: 160) getat_4e5c3a root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> for_d26972.reset\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.else -> continue_a96db6\n\n        main_list_ec88cd -> getter_2a5b3e.list\n        sublist_ec88cd -> getter_c1d9f7.list\n\n        for_d26972.items -> List.Empty()\n        for_d26972.index -> 0\n        for_d26972.onItem -> check_sublist\n        for_d26972.done -> continue_a96db6\n\n        instance(x: -275, y: -35) sublist_check root.Std_k98ojb.Std.For {\n            items: \"List.GenerateRange(0, sublist_length)\"\n        }\n        instance(x: 752, y: 93) sublist_ifexpression root.Std_k98ojb.Std.IfExpression {\n            expression: \"main_list[index + i] == sublist[i]\"\n        }\n\n        getter_2a5b3e.list -> getat_ce2a48.list\n        index + i -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> sublist_ifexpression.gen_1\n\n        getter_c1d9f7.list -> getat_4e5c3a.list\n        i -> getat_4e5c3a.index\n        getat_4e5c3a.itemAtIndex -> sublist_ifexpression.gen_2\n\n        sublist_ifexpression.then -> continue_a96db6\n        sublist_ifexpression.else -> for_d26972.next\n        sublist_check.onItem -> sublist_ifexpression.execute\n        sublist_check.done -> for_d26972.next\n\n        execute_90aaec -> getter_b280eb.execute\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        getter_c1d9f7.length -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_d26972.next\n\n        main_list_ec88cd.length -> setter_9d4f1c.new_value\n        sublist_check.items -> List.Empty()\n        sublist_check.index -> 0\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"outer_list\") property(List) outer_list_ec88cd\n        in(x: -485, y: 155, name: \"inner_list\") property(List) inner_list_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        outer_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        instance(x: -275, y: 150) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        inner_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        instance(x: -275, y: 250) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        inner_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_f7c8d9\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) for_1e9f6c root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_index == len(sublist)\"\n        }\n        instance(x: 752, y: 93) ifexpression_bf5c1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"main_item == sublist_item\"\n        }\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        for_d26972.onItem -> ifexpression_bf5c1e.execute\n        for_d26972.done -> ifexpression_875761.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_f7c8d9 -> for_1e9f6c.items\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_bf5c1e.gen_1\n        sublist_f7c8d9 -> for_1e9f6c.items\n        for_1e9f6c.item -> ifexpression_bf5c1e.gen_0\n        for_1e9f6c.index -> ifexpression_bf5c1e.gen_2\n        0 -> for_1e9f6c.reset\n        ifexpression_bf5c1e.then -> for_1e9f6c.next\n        ifexpression_bf5c1e.else -> for_1e9f6c.reset\n        ifexpression_bf5c1e.value -> setter_a4d3b2.new_value\n        instance(x: 679, y: -313) setter_a4d3b2 root.Std_k98ojb.List.SetAt {}\n        getat_ce2a48.itemAtIndex -> setter_a4d3b2.list\n        for_1e9f6c.index -> setter_a4d3b2.index\n        setter_a4d3b2.new_value -> ifexpression_bf5c1e.gen_3\n        setter_a4d3b2.continue -> continue_a96db6\n        execute_90aaec -> for_d26972.trigger\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_check.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        instance(x: -275, y: 200) sublist_check root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 320, name: \"getter_sublist\") getter_sublist = previous\n        setter(x: 679, y: 77, name: \"setter_sublist\") setter_sublist = previous\n        instance(x: -275, y: 270) sublist_getat root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        sublist_check.item -> ifexpression_875761.gen_2\n        sublist_check.index -> ifexpression_875761.gen_0\n        getter_sublist.value -> ifexpression_875761.gen_1\n        sublist_check.onItem -> ifexpression_875761.execute\n        sublist_check.done -> continue_a96db6\n        sublist_ec88cd -> sublist_getat.list\n        0 -> sublist_getat.index\n        sublist_getat.itemAtIndex -> setter_sublist.new_value\n        execute_90aaec -> setter_sublist.execute\n        setter_sublist.continue -> sublist_check.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_7f3d9a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_7f3d9a -> match_2e8b0c.list\n        match_2e8b0c.onMatch -> check_sublist.execute\n        match_2e8b02c.onMatch -> continue_a96db6\n        check_sublist.done -> continue_a96db6\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        match_2e8b02c.list -> main_list_ec88cd\n        check_sublist.sublist -> sublist_7f3d9a\n        check_sublist.start_index -> match_2e8b0c.index\n        ifexpression_875761.value -> check_sublist.continue\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 1000, y: -200) match_2e8b0c root.Std_k98ojb.List.Match {}\n        instance(x: 1200, y: -150) check_sublist root.main.check_sublist {\n            in(x: -465, y: -235, name: \"execute\") trigger() execute_check\n            in(x: -485, y: 30, name: \"sublist\") property(List) sublist_check\n            in(x: -485, y: 165, name: \"start_index\") property(Int) start_index_check\n\n            out(x: 1227, y: 5, name: \"continue\") trigger() continue_check\n            out(x: 1218, y: 147, name: \"done\") trigger() done_check\n\n            instance(x: 800, y: -100) for_sublist root.Std_k98ojb.Std.For {}\n            sublist_check -> for_sublist.items\n            start_index_check -> getat_start.list\n            getat_start.itemAtIndex -> index_setter.new_value\n            index_setter.continue -> for_sublist.reset\n            0 -> getat_start.index\n\n            instance(x: -275, y: -35) getat_start root.Std_k98ojb.List.GetAt {}\n            instance(x: 679, y: -313) setter index_setter {\n                in(x: -465, y: -235, name: \"execute\") trigger() execute_index\n                out(x: 1227, y: 5, name: \"continue\") trigger() continue_index\n\n                in(x: -485, y: 30, name: \"new_value\") property(Int) new_value_index\n                out(x: 1218, y: 147, name: \"value\") property(Int) value_index\n\n                execute_index -> for_sublist.items\n                for_sublist.index -> value_index\n            }\n\n            instance(x: 321, y: -20) ifexpression_check root.Std_k98ojb.Std.IfExpression {\n                expression: \"index < length && sublist[index] == main_list[start_index + index]\"\n            }\n            getter(x: 334, y: 160, name: \"getter_sublist\") getter_sublist = sublist\n            setter(x: -0, y: -121, name: \"setter_main\") setter_main = main_list\n\n            instance(x: -275, y: -35) getat_sublist root.Std_k98ojb.List.GetAt {}\n            instance(x: -275, y: 150) getat_main root.Std_k98ojb.List.GetAt {}\n\n            ifexpression_check.then -> continue_check\n            ifexpression_check.value -> done_check\n\n            for_sublist.item -> ifexpression_check.gen_2\n            index_setter.value -> ifexpression_check.gen_0\n            getter_sublist.value -> ifexpression_check.gen_1\n            start_index_check + index_setter.value -> getat_main.index\n            main_list -> getat_main.list\n            sublist_check -> getat_sublist.list\n            for_sublist.index -> getat_sublist.index\n            for_sublist.onItem -> ifexpression_check.execute\n            for_sublist.done -> done_check\n\n        }\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9d4f1c\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_9d4f1c\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> for_d26972.sub_items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 800, y: -200) filter_3a2b6f root.Std_k98ojb.Query.Filter {\n            where: \"main_list.contains(sublist_item)\"\n        }\n        sublist_5bbcd7 -> filter_3a2b6f.items\n        filter_3a2b6f.output_list -> output_9d4f1c\n\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_1a2b3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: -20) match_a1b2c3 root.Std_k98ojb.Std.Match {}\n        instance(x: 400, y: 50) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + sublist_index < main_list_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> match_a1b2c3.execute\n\n        main_list_ec88cd -> match_a1b2c3.cases\n        sublist_1a2b3c -> match_a1b2c3.cases\n\n        match_a1b2c3.value -> ifexpression_875761.gen_3\n        0 -> setter_9d4f1c.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        sublist_index_5bbcd7 -> setter_9d4f1c.value\n\n        match_a1b2c3.matched -> continue_a96db6\n        match_a1b2c3.notMatched -> ifexpression_875761.else\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n\n        execute_90aaec -> for_d26972.trigger\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_f4b3a2\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_f4b3a2 -> match_b8e0cf.list\n        instance(x: 1000, y: -20) match_b8e0cf root.Std_k98ojb.List.Match {}\n        match_b8e0cf.onItem -> for_sublist.execute\n        match_b8e0cf.done -> continue_a96db6\n        match_b8e0cf.item -> sublist_index.value\n        instance(x: 1100, y: -20) for_sublist root.Std_k98ojb.Std.For {}\n        sublist_index.value -> for_sublist.items\n        for_d26972.index -> ifexpression_875761.gen_0\n        for_d26972.item -> ifexpression_875761.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        sublist_index.value -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        items_ai -> find_smallest_missing_node.items\n        func(x: 426, y: -378) lambda {\n            in(x: -159, y: -219, name: \"it\") property(Number) it_ae\n            out(x: 159, y: -219, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -303) std_if_node root.Std_k98ojb.Std.If {}\n            std_if_node.value -> lambda.result_ae\n            std_if_node.if -> find_smallest_missing_node.predicate\n\n            in(x: -159, y: -219, name: \"it\") property(Number) it_ae -> std_if_node.value\n            instance(x: 426, y: -378) std_if_then_node root.Std_k98ojb.Std.IfExpression {}\n            std_if_then_node.expression = \"(it == (prev + 1))\"\n            std_if_then_node.then -> std_if_node.else\n            std_if_then_node.else -> std_if_node.then\n\n            instance(x: 426, y: -453) iter_list_node root.Std_k98ojb.IterList {}\n            items_ai -> iter_list_node.items\n            func(x: 426, y: -498) lambda {\n                in(x: -159, y: -279, name: \"item\") property(Number) item_ae\n                out(x: 159, y: -279, name: \"result\") property(Number) result_ae\n\n                instance(x: 426, y: -354) std_relay_node root.Std_k98ojb.Std.Relay {}\n                item_ae -> std_relay_node.input\n                std_relay_node.value -> lambda.result_ae\n            } -> iter_list_node.onItem\n            func(x: 426, y: -498) lambda {\n                in(x: -159, y: -279, name: \"item\") property(Number) item_ae\n                out(x: 159, y: -279, name: \"result\") property(Number) result_ae\n\n                instance(x: 426, y: -354) std_relay_node root.Std_k98ojb.Std.Relay {}\n                item_ae -> std_relay_node.input\n                std_relay_node.value -> lambda.result_ae\n            } -> find_smallest_missing_node.onItem\n        } -> find_smallest_missing_node.predicate\n\n        instance(x: 426, y: -528) std_if_else_node root.Std_k98ojb.Std.If {}\n        std_if_else_node.if -> find_smallest_missing_node.item\n        std_if_else_node.value -> smallest_missing_num.missing_ai\n\n        func(x: 426, y: -573) lambda {\n            in(x: -159, y: -339, name: \"value\") property(Number) value_ae\n            out(x: 159, y: -339, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -438) std_relay_node root.Std_k98ojb.Std.Relay {}\n            value_ae -> std_relay_node.input\n            std_relay_node.value -> lambda.result_ae\n        } -> std_if_else_node.then\n\n        func(x: 426, y: -573) lambda {\n            in(x: -159, y: -339, name: \"value\") property(Number) value_ae\n            out(x: 159, y: -339, name: \"result\") property(Boolean) result_ae\n\n            instance(x: 426, y: -438) std_relay_node root.Std_k98ojb.Std.Relay {}\n            value_ae -> std_relay_node.input\n            std_relay_node.value -> lambda.result_ae\n        } -> std_if_else_node.else\n    }\n\n    \n    instance(x: 426, y: -528) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> find_missing_node.items\n        func() {\n            in(x: 0, y: 0, name: \"it\") property(Number) it_aj\n            out(x: 0, y: 0) property(Bool) result_bj\n\n            instance(x: 426, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {}\n            math_expr_node.expression <- \"it != (index + 1)\"\n            it_aj -> math_expr_node.it\n            index -> math_expr_node.index\n            math_expr_node.result -> result_bj\n        } find_missing_node.predicate\n\n        instance(x: 426, y: -303) relay_missing_node root.Std_k98ojb.Relay {}\n        find_missing_node.item -> relay_missing_node.value\n        relay_missing_node.value -> missing_number_ai\n\n        instance(x: 426, y: -303) choose_node root.Std_k98ojb.Choose {}\n        find_missing_node.notFound -> choose_node.predicate\n        numbers_ai.length -> choose_node.else\n        relay_missing_node.value -> choose_node.then\n        choose_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing {\n            in(numbers: -426, y: -248) List numbers\n            out(missing_number: 159, y: -219) Number missing_number\n\n            func() {\n                var(index: 0, value: 1) property(Number)\n                \n                instance(x: 426, y: -303) iterate_numbers {\n                    in(numbers: -426, y: -248) List numbers\n                    out(next_index: 159, y: -219) Number next_index\n\n                    func() {\n                        Std_k98ojb.List.GetAt(numbers, index).then({\n                            (item: Number) => {\n                                if(item != value) {\n                                    missing_number_ai -> value\n                                } else {\n                                    index + 1 -> index\n                                    value + 1 -> value\n                                }\n                                index + 1 -> next_index\n                            }\n                        }).else_({\n                            () => {\n                                value -> missing_number_ai\n                            }\n                        })\n                    }\n\n                    numbers -> iterate_numbers.numbers\n                    index -> iterate_numbers.index\n                }\n\n                instance(x: 426, y: -303) loop {\n                    in(next_index: -426, y: -248) Number next_index\n\n                    func() {\n                        Std_k98ojb.List.GetAt(numbers, next_index).then({\n                            (item: Number) => {\n                                if(item != value) {\n                                    missing_number_ai -> value\n                                } else {\n                                    next_index + 1 -> index\n                                    value + 1 -> value\n                                }\n                                iterate_numbers -> loop\n                            }\n                        }).else_({\n                            () => {\n                                value -> missing_number_ai\n                            }\n                        })\n                    }\n\n                    iterate_numbers -> loop.iterate_numbers\n                }\n\n                iterate_numbers -> loop.next_index\n            }\n        }\n\n        numbers_ai -> find_smallest_missing.numbers\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        \n        numbers_ai -> find_missing_node.items\n        \n        func(doc: \"checks if the number at index is missing.\") check_missing {\n            in(index: -426, value: -248, name: \"i\") property(Number) i_ai\n            out(x: 159, y: -219, name: \"is_missing\") property(Bool) is_missing_ai\n\n            instance(x: 426, y: -303) if_node root.Std_k98ojb.IfExpression {}\n            \n            i_ai -> if_node.expression\n            strings.Template(\"{{i}} + 1 != {{value}}\", x: 159, y: -219) -> if_node.template\n            \n            if_node.value -> is_missing_ai\n        }\n\n        instance(x: 426, y: -303) check_missing_node root.main.check_missing {}\n        \n        find_missing_node.predicate <- check_missing_node.execute\n        \n        func(doc: \"calculates the missing number.\") calculate_missing {\n            in(index: -426, name: \"i\") property(Number) i_ai\n            out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n            instance(x: 426, y: -303) add_node root.Std_k98ojb.Math.Add {}\n            \n            i_ai -> add_node.first\n            std.Constant(1, x: 159, y: -219) -> add_node.second\n            \n            add_node.result -> missing_number_ai\n        }\n\n        instance(x: 426, y: -303) calculate_missing_node root.main.calculate_missing {}\n\n        find_missing_node.item <- calculate_missing_node.execute\n\n        find_missing_node.items <- numbers_ai\n        find_missing_node.onNotFound <- std.Constant(1, x: 159, y: -219)\n        \n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iter_range_node root.Std_k98ojb.IterRange {}\n        numbers_ai -> iter_range_node.items\n        iter_range_node.onItem -> next_step_node.execute\n\n        instance(x: 426, y: -423) if_expression_node root.Std_k98ojb.IfExpression {}\n        iter_range_node.index -> if_expression_node.expression.index\n        if_expression_node.expression.expr = \"it != numbers_ai[it]\"\n\n        instance(x: 426, y: -516) constant_node root.Std_k98ojb.Constant {}\n        constant_node.value = 1\n\n        instance(x: 426, y: -612) add_node root.Std_k98ojb.Math.Add {}\n        if_expression_node.value -> add_node.first\n        constant_node.value -> add_node.second\n\n        instance(x: 426, y: -708) relay_node root.Std_k98ojb.Relay {}\n        iter_range_node.index -> relay_node.input\n        relay_node.value -> next_step_node.context\n\n        instance(x: 426, y: -804) if_node root.Std_k98ojb.If {}\n        add_node.result -> if_node.value\n        if_node.then -> missing_number_node.value\n        relay_node.value -> if_node.context\n\n        instance(x: 426, y: -900) constant_missing_node root.Std_k98ojb.Constant {}\n        numbers_ai.length + 1 -> constant_missing_node.value\n        constant_missing_node.value -> missing_number_node.value\n\n        instance(x: 426, y: -996) choose_node root.Std_k98ojb.Choose {}\n        if_node.context -> choose_node.predicate\n        add_node.result -> choose_node.then\n        constant_missing_node.value -> choose_node.else_\n\n        instance(x: 426, y: -1092) next_step_node root.Std_k98ojb.Fork {}\n        numbers_ai.length + 1 -> next_step_node.continue\n\n        instance(x: 426, y: -1188) missing_number_node root.Std_k98ojb.Relay {}\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> find_smallest_missing_node.items\n        instance(x: 426, y: -378) predicate_func Node {\n            func() {\n                in(x: -159, y: -219, name: \"it\") property(Number) it_ai\n                out(x: 159, y: -219, name: \"\") trigger()\n\n                if(it_ai + 1 != find_smallest_missing_node.next_item) {\n                    ->()\n                }\n            }\n\n            next_item = Std_k98ojb.Iteration.Map {\n                in(x: -426, y: -303, name: \"items\") property(List) items_ai\n                out(x: 159, y: -219, name: \"\") property(Number) result_ai\n\n                instance(x: 426, y: -378) add_one Node {\n                    func() {\n                        in(x: -159, y: -219, name: \"it\") property(Number) it_ai\n                        out(x: 159, y: -219, name: \"\") trigger()\n\n                        it_ai + 1 -> result_ai\n                    }\n                }\n\n                items_ai -> add_one.it\n            }\n        }\n\n        find_smallest_missing_node.predicate = predicate_func\n        find_smallest_missing_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_smallest_missing root.Std_k98ojb.Iteration.Find {}\n        find_smallest.onItem -> find_smallest.predicate\n        numbers_ai -> find_smallest.items\n        find_smallest.item -> missing_ai\n    }\n\n    func(predicate: \"checks if the current number is not equal to its index + 1.\") {\n        in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n        in(x: -426, y: -303, name: \"index\") property(Number) index_ai\n\n        instance(x: 426, y: -378) not_equal root.Std_k98ojb.Logic.NotEqual {}\n        index_ai -> not_equal.left\n        item_ai -> not_equal.right\n        not_equal.result -> predicate.value\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing {\n            in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n            out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n            instance(x: 426, y: -303) list_iter_node root.Std_k98ojb.Iteration.ForEach {}\n            numbers_ai -> list_iter_node.items\n\n            instance(x: 426, y: -303) if_expression_node root.Std_k98ojb.IfExpression {\n                expression := \"index + 1 != item\"\n            }\n            list_iter_node.index -> if_expression_node.index\n            list_iter_node.item -> if_expression_node.item\n\n            instance(x: 426, y: -303) relay_missing_number root.Std_k98ojb.Relay {}\n            if_expression_node.value -> relay_missing_missing_number.input\n\n            instance(x: 426, y: -303) choose_missing_number root.Std_k98ojb.Choose {\n                predicate := \"index + 1 != item\"\n            }\n            list_iter_node.index -> choose_missing_number.index\n            list_iter_node.item -> choose_missing_number.item\n            choose_missing_number.then := Std_k98ojb.List.GetAt(items=numbers_ai, index=choose_missing_number.index+1)\n            relay_missing_number.value -> missing_number_ai\n        }\n\n        numbers_ai -> find_smallest_missing.numbers\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        \n        func(doc: \"finds the first number where the condition is true.\") find_condition {\n            in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n            in(x: -426, y: -303, name: \"list\") property(List) list_ai\n            out(x: 159, y: -219, name: \"item\") property(Number) item_ai\n\n            instance(x: 426, y: -378) condition_node root.Std_k98ojb.Math.Expression {}\n            condition_node.expression = \"it[index] != index + 1\"\n            list_ai -> condition_node.list\n            index_ai -> condition_node.index\n            \n            instance(x: 426, y: -453) relay_index_node root.Std_k98ojb.Std.Relay {}\n            relay_index_node.input <- index_ai\n\n            func(doc: \"increments the index.\") increment {\n                in(x: -426, y: -303, name: \"index\") property(Number) index_ai\n                out(x: 159, y: -219, name: \"new_index\") property(Number) new_index_ai\n                \n                instance(x: 426, y: -528) add_node root.Std_k98ojb.Math.Add {}\n                add_node.first <- relay_index_node.value\n                add_node.second = 1\n                add_node.result -> new_index_ai\n            }\n\n            instance(x: 426, y: -603) increment_instance root.main.increment {}\n\n            index_ai -> increment_instance.index\n            increment_instance.new_index -> relay_index_node.input\n\n            condition_node.item -> item_ai\n        }\n        \n        instance(x: 426, y: -678) find_condition_instance root.main.find_condition {}\n        numbers_ai -> find_condition_instance.list\n        \n        func(doc: \"returns the missing number or the next number if none is missing.\") resolve_missing {\n            in(x: -426, y: -303, name: \"item\") property(Number) item_ai\n            in(x: -426, y: -378, name: \"list_length\") property(Number) list_length_ai\n            out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n            instance(x: 426, y: -753) if_node root.Std_k98ojb.Std.If {}\n            if_node.value <- item_ai\n            if_node.then {\n                instance(x: 426, y: -828) relay_item_node root.Std_k98ojb.Std.Relay {}\n                relay_item_node.input <- item_ai\n                relay_item_node.value -> result_ai\n            }\n            if_node.else {\n                instance(x: 426, y: -903) add_list_length_node root.Std_k98ojb.Math.Add {}\n                add_list_length_node.first = Std_k98ojb.List.Length(numbers_ai)\n                add_list_length_node.second = 1\n                add_list_length_node.result -> result_ai\n            }\n        }\n\n        instance(x: 426, y: -978) resolve_missing_instance root.main.resolve_missing {}\n        find_condition_instance.item -> resolve_missing_instance.item\n        Std_k98ojb.List.Length(numbers_ai) -> resolve_missing_instance.list_length\n        \n        resolve_missing_instance.result -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> find_missing_node.items\n        find_missing_node.predicate = Std_k98ojb.IfExpression {\n            expression: \"it != index + 1\"\n            index: 0\n            it: 0\n        }\n        find_missing_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of space, comma or dot with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7b8c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9d3a4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f2e6c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7b8c5f.input\n        \" \" -> replace_7b8c5f.search\n        \":\" -> replace_7b8c5f.replace\n        replace_7b8c5f.result -> replace_b9d3a4.input\n        \",\" -> replace_b9d3a4.search\n        \":\" -> replace_b9d3a4.replace\n        replace_b9d3a4.result -> replace_f2e6c1.input\n        \".\" -> replace_f2e6c1.search\n        \":\" -> replace_f2e6c1.replace\n        replace_f2e6c1.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_8f3b7a root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of spaces, commas or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_a3c9d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b7e8f4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3a1f9b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_a3c9d5.input\n        \" \" -> replace_a3c9d5.search\n        \":\" -> replace_a3c9d5.replace\n        replace_a3c9d5.result -> replace_b7e8f4.input\n        \",\" -> replace_b7e8f4.search\n        \":\" -> replace_b7e8f4.replace\n        replace_b7e8f4.result -> replace_3a1f9b.input\n        \".\" -> replace_3a1f9b.search\n        \":\" -> replace_3a1f9b.replace\n        replace_3a1f9b.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_5c7e8d root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3f5c8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_d6d7f4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f9e8d2 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3f5c8a.input\n        \" \" -> replace_3f5c8a.search\n        \":\" -> replace_3f5c8a.replace\n        replace_3f5c8a.result -> replace_d6d7f4.input\n        \",\" -> replace_d6d7f4.search\n        \":\" -> replace_d6d7f4.replace\n        replace_d6d7f4.result -> replace_f9e8d2.input\n        \".\" -> replace_f9e8d2.search\n        \":\" -> replace_f9e8d2.replace\n        replace_f9e8d2.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_5a7b3f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7d9e8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f5c6b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_1b4a9d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7d9e8a.input\n        \" \" -> replace_7d9e8a.search\n        \":\" -> replace_7d9e8a.replace\n        replace_7d9e8a.result -> replace_3f5c6b.input\n        \",\" -> replace_3f5c6b.search\n        \":\" -> replace_3f5c6b.replace\n        replace_3f5c6b.result -> replace_1b4a9d.input\n        \".\" -> replace_1b4a9d.search\n        \":\" -> replace_1b4a9d.replace\n        replace_1b4a9d.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_7f8e3c root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurences of space, comma and dot with :\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5c7b3e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a6f4d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_b8a8d3 root.Std_k98ojb.Strings.Replace {}\n        replace_5c7b3e.output -> replace_9a6f4d.input\n        replace_9a6f4d.output -> replace_b8a8d3.input\n        \":\" -> replace_b8a8d3.replace\n        \",\" -> replace_9a6f4d.search\n        \".\" -> replace_5c7b3e.search\n        \" \" -> replace_5c7b3e.replace\n        input_0 -> replace_5c7b3e.input\n        replace_b8a8d3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_1c6e4f root.main.text_replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5e4b6a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d9f7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_8f2b1d root.Std_k98ojb.Strings.Replace {}\n        replace_5e4b6a.output -> replace_3d9f7c.input\n        replace_3d9f7c.output -> replace_8f2b1d.input\n        \":\" -> replace_8f2b1d.replace\n        \".\" -> replace_8f2b1d.search\n        \",\" -> replace_5e4b6a.search\n        \" \" -> replace_3d9f7c.search\n        \":\" -> replace_5e4b6a.replace\n        input_0 -> replace_5e4b6a.input\n        replace_8f2b1d.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_c3d7f9 root.main.replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of spaces, commas and dots with colons.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7d8c4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_f9e5a6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3f8c4f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7d8c4f.input\n        \" \" -> replace_7d8c4f.search\n        \":\" -> replace_7d8c4f.replace\n        replace_7d8c4f.result -> replace_f9e5a6.input\n        \",\" -> replace_f9e5a6.search\n        \":\" -> replace_f9e5a6.replace\n        replace_f9e5a6.result -> replace_3f8c4f.input\n        \".\" -> replace_3f8c4f.search\n        \":\" -> replace_3f8c4f.replace\n        replace_3f8c4f.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_c7d5a6 root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5e3f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b4d7e9 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6a3e1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e3f8c.input\n        \" \" -> replace_5e3f8c.search\n        \":\" -> replace_5e3f8c.replace\n        replace_5e3f8c.result -> replace_b4d7e9.input\n        \",\" -> replace_b4d7e9.search\n        \":\" -> replace_b4d7e9.replace\n        replace_b4d7e9.result -> replace_6a3e1f.input\n        \".\" -> replace_6a3e1f.search\n        \":\" -> replace_6a3e1f.replace\n        replace_6a3e1f.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_2b7c8d root.main.replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurences of spaces, commas or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7e8b3a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9f5d4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_1c2e6b root.Std_k98ojb.Strings.Replace {}\n        replace_7e8b3a.output -> replace_b9f5d4.input\n        replace_b9f5d4.output -> replace_1c2e6b.input\n        \":\" -> replace_7e8b3a.replace\n        \" \" -> replace_7e8b3a.search\n        \":\" -> replace_b9f5d4.replace\n        \",\" -> replace_b9f5d4.search\n        \":\" -> replace_1c2e6b.replace\n        \".\" -> replace_1c2e6b.search\n        input_0 -> replace_7e8b3a.input\n        replace_1c2e6b.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3b6e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d9c4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8c7d1d root.Std_k98ojb.Strings.Replace {}\n        replace_3b6e8f.output -> replace_5d9c4a.input\n        replace_5d9c4a.output -> replace_8c7d1d.input\n        \" \" -> replace_3b6e8f.search\n        \":\" -> replace_3b6e8f.replace\n        \",\" -> replace_5d9c4a.search\n        \":\" -> replace_5d9c4a.replace\n        \".\" -> replace_8c7d1d.search\n        \":\" -> replace_8c7d1d.replace\n        input_0 -> replace_3b6e8f.input\n        replace_8c7d1d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_e54b7f root.main.text_replace_space_comma_dot {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_character {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n == input[0])\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d.length() -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substring_8e4c3d root.Std_k98ojb.Strings.Substring {}\n            input_f5c03d -> substring_8e4c3d.input\n            element_5f51f7 -> substring_8e4c3d.start\n            (element_5f51f7 + 1) -> substring_8e4c3d.end\n            substring_8e4c3d.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.length() -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d[0] -> expression_9fba8c.gen_0\n        add_b4554f.result -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_character_f0be66 root.main.is_same_character {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) if_1f0d5e root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_9e4c6a root.Std_k98ojb.Strings.Substring {}\n            element_5f51f7 -> substr_9e4c6a.input\n            0 -> substr_9e4c6a.start\n            1 -> substr_9e4c6a.end\n            substr_9e4c6a.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> and_80a119.left\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.next\n        and_80a119.right -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> for_8cb3f6.next\n        for_8cb3f6.done -> if_1f0d5e.execute\n        if_1f0d5e.predicate: true\n        if_1f0d5e.else -> continue_8ba06b\n        1 -> if_1f0d5e.then\n        if_1f0d5e.then -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_b4a7c8 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"True\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        Std_k98ojb.Strings.Length(input_f5c03d) -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_8e9c6a root.Std_k98ojb.Strings.Substring {}\n            input_f5c03d -> substr_8e9c6a.input\n            element_5f51f7 -> substr_8e9c6a.start\n            (element_5f51f7 + 1) -> substr_8e9c6a.end\n            substr_8e9c6a.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        Std_k98ojb.Strings.Length(input_f5c03d) -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_f0be66 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_character {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c7a1f4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> characters_c7a1f4.string\n        input_f5c03d -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) numberfromstring_ba8b3d root.Std_k98ojb.Math.NumberFromString {}\n            element_5f51f7 -> numberfromstring_ba8b3d.string\n            numberfromstring_ba8b3d.number -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        characters_c7a1f4.characters[0] -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_character_f0be66 root.main.is_same_character {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_8e4f5d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_c1a9b7\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_0c6b2f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_d5e8d4\n\n        instance(x: 352, y: -493) map_ea1a7c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_0e2b6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(ch == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> characters_0e2b6f.string\n        input_8e4f5d -> characters_0e2b6f.string\n        characters_0e2b6f.characters -> map_ea1a7c.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_c9f3a8\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_2d6b4e\n\n            instance(x: 106, y: 17) eq_7c0b5a root.Std_k98ojb.Logic.Equal {}\n            element_c9f3a8 -> eq_7c0b5a.left\n            input_8e4f5d -> eq_7c0b5a.right\n            eq_7c0b5a.result -> out_2d6b4e\n        } -> map_ea1a7c.handler\n        map_ea1a7c.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_8e4f5d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_d5e8d4\n        expression_b720d7.result -> and_80a119.left\n        map_ea1a7c.output_list[0] -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        if_07b8c7.value -> out_0c6b9a\n        if_e19a62.then -> continue_d5e8d4\n        for_8cb3f6.done -> continue_d5e8d4\n        execute_c1a9b7 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        out_0c6b9a -> out_0c6b2f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_5e1d4f root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) if_f3f1e7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) substr_1a9c3e root.Std_k98ojb.Strings.Substring {}\n            element_5f51f7 -> substr_1a9c3e.input\n            0 -> substr_1a9c3e.start\n            1 -> substr_1a9c3e.end\n            substr_1a9c3e.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        input_f5c03d -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> if_f3f1e7.execute\n        if_f3f1e7.else -> out_f3db9f\n        1 -> if_f3f1e7.value\n        if_e19a62.else -> if_f3f1e7.then\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_b4d5f9 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) if_2c1e9d root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_3c8e1d root.Std_k98ojb.Strings.Substring {}\n            0 -> substr_3c8e1d.start\n            element_5f51f7 -> substr_3c8e1d.input\n            substr_3c8e1d.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        input_f5c03d -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> if_2c1e9d.execute\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.else -> if_2c1e9d.predicate\n        if_2c1e9d.then -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_f0be66 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7f2e1a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_7f2e1a.string\n        characters_7f2e1a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_1e4c6a root.Std_k98ojb.Strings.Substring {}\n            element_5f51f7 -> substr_1e4c6a.input\n            0 -> substr_1e4c6a.start\n            1 -> substr_1e4c6a.end\n            substr_1e4c6a.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        map_6030c9.output_list[0] -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        if_07b8c7.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_d0d5c2 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_character {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_1e7a5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> for_8cb3c9.from\n        input_f5c03d -> characters_1e7a5f.string\n        characters_1e7a5f.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) len_8b2e9d root.Std_k98ojb.Strings.Length {}\n            element_5f51f7 -> len_8b2e9d.input\n            len_8b2e9d.length -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3c9.items\n        for_8cb3c9.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3c9.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        input_f5c03d -> expression_b720d7.gen_1\n        for_8cb3c9.item -> expression_b720d7.gen_0\n        and_80a119.right -> if_e19a62.predicate\n        if_07b8c7.value -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        for_8cb3c9.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3c9.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3c9.reset\n        if_e19a62.else -> for_8cb3c9.next\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_character_1e6d5e root.main.is_same_character {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) not_2c9e3d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_0a6e2d.input\n        strings_characters_0a6e2d.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n            element_5f51f7 -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        instance(x: 1842, y: -155) reduce_f1a4e0 root.Std_k98ojb.Iteration.Reduce {}\n        map_6030c9.output_list -> reduce_f1a4e0.item\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Bool) accumulator_a6f3d5\n            in(x: -76, y: 17, name: \"item\") property(String) item_9c8b7a\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_2e1f0f\n            accumulator_a6f3d5 -> and_80a119.left\n            item_9c8b7a -> and_80a119.right\n            and_80a119.result -> out_2e1f0f\n        } -> reduce_f1a4e0.handler\n\n        reduce_f1a4e0.item -> if_e19a62.predicate\n        1 -> reduce_f1a4e0.initialValue\n        for_8cb3f6.done -> reduce_f1a4e0.execute\n        reduce_f1a4e0.output -> not_2c9e3d.input\n        not_2c9e3d.result -> out_f3db9f\n\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_chars_same_f0be66 root.main.is_all_chars_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_7f6b5c\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) matchindices_9f3a7d root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 656, y: -330) len_5c2a8d root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        matchindices_9f3a7d.pattern: \"0|1|2|3|4|5|6|7|8|9\"\n        input_string_7f6b5c -> matchindices_9f3a7d.input\n        matchindices_9f3a7d.indices -> len_5c2a8d.list\n        len_5c2a8d.length -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.s_6b655b -> substring_4c2d3f.input\n        substring_4c2d3f.start -> 1\n        substring_4c2d3f.end -> -1\n        substring_4c2d3f.result -> count_digits_96023e.s_6b655b\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_8f4c9a root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substr_5e1d7c root.Std_k98ojb.Strings.Substring {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        isnumeric_8f4c9a.input -> substr_5e1d7c.string\n        substr_5e1d7c.start -> 0\n        substr_5e1d7c.end -> 1\n        substr_5e1d7c.result -> isnumeric_8f4c9a.input\n        isnumeric_8f4c9a.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        s_6b655b -> substr_5e1d7c.string\n        count_digits_96023e.s_6b655b -> substr_5e1d7c.string\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) match_indices_f5a3c7 root.Std_k98ojb.Strings.MatchIndices {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        match_indices_f5a3c7.pattern = \"[0-9]\"\n        input_string_6b655b -> match_indices_f5a3c7.input\n        match_indices_f5a3c7.indices -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        count -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_3f6b8d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_f1a2c4\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_f1c3d9 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -127) isnumeric_b5e2f7 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        \n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        \n        input_string_3f6b8d -> substring_f1c3d9.input\n        0 -> substring_f1c3d9.start\n        1 -> substring_f1c3d9.end\n        substring_f1c3d9.result -> isnumeric_b5e2f7.input\n        isnumeric_b5e2f7.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        \n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        substring_f1c3d9.input -> floor_61b38d.input\n        floor_61b38d.output -> substring_f1c3d9.start\n        floor_61b38d.output -> substring_f1c3d9.end\n        \n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n        getter_38583a.value -> output_f1a2c4\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        is_numeric_adfa16.input -> count_digits_96023e.s_6b655b\n        is_numeric_adfa16.output -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n        s_6b655b[0] -> is_numeric_adfa16.input\n        s_6b655b[1:] -> count_digits_96023e.s_6b655b\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_547f34 root.Std_k98ojb.Strings.Substring {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> substring_547f34.start\n        0 -> substring_547f34.start\n        s_6b655b -> substring_547f34.input\n        substring_547f34.result -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_2.root.Std_k98ojb.Std.If {\n            value: \"is_numeric_adfa16.value\"\n            then: count_digits_96023e.execute_cdac2a\n            else: add_88bb8a.execute\n        }\n        1 -> add_88bb8a.first\n        setter_375321.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> substring_547f34.end\n        s_6b655b.length() - 1 -> substring_547f34.end\n        setter_375321.continue -> count_digits_96023e.s_6b655b\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) substring_547f34 root.Std_k98ojb.Strings.Substring {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.Strings.Length {}\n        1 -> substring_547f34.end\n        substring_547f34.result -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> add_88bb8a.first\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        input_string_6b655b -> length_61b38d.input\n        length_61b38d.output -> substring_547f34.start\n        length_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) length_547f34 root.Std_k98ojb.Strings.Length {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> add_88bb8a.first\n\n        input_string_6b655b -> length_547f34.string\n        length_547f34.length -> count_digits_96023e.input_string_6b655b\n\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        input_string_6b655b -> is_numeric_adfa16.string\n        is_numeric_adfa16.result -> add_88bb8a.second\n\n        add_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) length_bf3d1c root.Std_k98ojb.Strings.Length {}\n        instance(x: 97, y: -127) substring_7e2b5f root.Std_k98ojb.Strings.Substring {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> substring_7e2b5f.end\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> substring_7e2b5f.start\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        length_bf3d1c.result -> add_88bb8a.second\n        0 -> add_88bb8a.first\n        substring_7e2b5f.result -> is_digit_4c6f8b.input\n        is_digit_4c6f8b.output -> ifexpression_2b9d1a.gen_0\n        is_digit_4c6f8b.output -> ifexpression_2b9d1a.gen_1\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.start\n        count_digits_96023e.start -> substring_7e2b5f.start\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> length_bf3d1c.input\n        setter_375321.new_value -> substring_7e2b5f.start\n        count_digits_96023e.continue_d9efd7 -> continue_d9efd7\n        ifexpression_2b9d1a.then -> add_88bb8a.second\n        ifexpression_2b9d1a.else -> add_88bb8a.first\n\n        instance(x: 100, y: -550) is_digit_4c6f8b root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 400, y: -500) ifexpression_2b9d1a root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_digit\"\n        }\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: 136) expression_5f7b1e root.Std_k98ojb.Math.Expression {\n            expression: \"div.result*div.result\"\n        }\n        div_64046c.result -> expression_5f7b1e.gen_0\n\n        expression_5f7b1e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_a8d2a4 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") sum_fourth_powers {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_64046c root.Std_k98ojb.Math.Pow {}\n        data_cde0dc -> pow_64046c.second\n        mul_f892a4.result -> pow_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_64046c.result -> sum_365f7b\n    }\n}\n\ninstance(x: 118, y: -26) sum_fourth_powers_9dcc3d root.main.sum_fourth_powers {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -22) pow_1f7e9b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_1f7e9b.first\n        data_instance(x: 330, y: -20) data_b3d2a4  = 4\n        data_b3d2a4 -> pow_1f7e9b.second\n\n        pow_1f7e9b.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: 136) fourth_power_expression root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n-1)*(4*n*n-1)\"\n        }\n        fourth_power_expression.result -> mul_f892a4.second\n        n_3a3116 -> fourth_power_expression.gen_0\n\n        instance(x: 303, y: 2) div_second root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_second.second\n        mul_f892a4.result -> div_second.first\n        div_second.result -> sum_365f7b\n    }\n}\n\ninstance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        \n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc = 4\n        \n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_f892a4.first\n        data_cde0dc -> pow_f892a4.second\n\n        instance(x: 303, y: 2) iter_64046c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(acc: Number, item: Number) {\n                return acc + item\n            }\n        }\n\n        instance(x: 23, y: -1) gen_range_f892a4 root.Std_k98ojb.List.GenerateRange {}\n        data_instance(x: 330, y: 133) data_cde0dc = 1\n        n_3a3116 -> gen_range_f892a4.to\n\n        gen_range_f892a4.listWithItem -> iter_64046c.item\n        pow_f892a4.result -> iter_64046c.acc\n\n        iter_64046c.output -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -22) div_7b1c8f root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -21) data_f9e5a4  = 3\n        mul_f892a4.result -> div_7b1c8f.first\n        data_f9e5a4 -> div_7b1c8f.second\n        instance(x: 303, y: -42) mul_b6d2ef root.Std_k98ojb.Math.Mul {}\n        expression_2d6da6.result -> mul_b6d2ef.first\n        div_64046c.result -> mul_b6d2ef.second\n        instance(x: 303, y: -63) div_f8f1a7 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -62) data_3e0e5f  = 3\n        mul_b6d2ef.result -> div_f8f1a7.first\n        data_3e0e5f -> div_f8f1a7.second\n        instance(x: 303, y: -84) add_9c4b3a root.Std_k98ojb.Math.Add {}\n        div_64046c.result -> add_9c4b3a.first\n        div_f8f1a7.result -> add_9c4b3a.second\n        instance(x: 303, y: -105) mul_c6e0d2 root.Std_k98ojb.Math.Mul {}\n        div_7b1c8f.result -> mul_c6e0d2.first\n        add_9c4b3a.result -> mul_c6e0d2.second\n        mul_c6e0d2.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_5e8b2d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 12, y: -1) pow_9b5f8c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9b5f8c.base\n        data_instance(x: 330, y: 133) data_7a3e4d  = 2\n        data_7a3e4d -> pow_9b5f8c.exponent\n        pow_9b5f8c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_1e6d0b root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_8e9f5c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_8e9f5c.first\n        data_instance(x: 330, y: 2) data_4d6a3f  = 4\n        data_4d6a3f -> pow_8e9f5c.second\n        pow_8e9f5c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: -1) pow_8c7f9b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_8c7f9b.first\n        data_instance(x: 330, y: 133) data_cde0dc = 4\n        data_cde0dc -> pow_8c7f9b.second\n\n        instance(x: 303, y: -2) iter_list_ae5d3c root.Std_k98ojb.IterList {\n            items: n_3a3116\n        }\n        iter_list_ae5d3c.on_item -> sum_365f7b\n        pow_8c7f9b.result -> iter_list_ae5d3c.on_item\n    }\n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        pow_f892a4.result -> sum_365f7b\n        data_cde0dc -> pow_f892a4.power\n        expression_2d6da6.result -> pow_f892a4.base\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube with a given side length.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"side\") property(Number) side_3e6f5d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f7c2a8\n\n        instance(x: 94, y: -105) mul_d0b9a4 root.Std_k98ojb.Math.Mul {}\n        side_3e6f5d -> mul_d0b9a4.first\n        6 -> mul_d0b9a4.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) pow_eb5d9a root.Std_k98ojb.Math.Pow {}\n            x_8ee839 -> pow_eb5d9a.x\n            2 -> pow_eb5d9a.y\n            pow_eb5d9a.result -> _7dd980\n        } -> mul_d0b9a4.second\n        mul_d0b9a4.result -> surfaceArea_f7c2a8\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3f0d5c\n\n        out(x: 656, y: -68, name: \"\") property(Number) _7dd980\n\n        instance(x: 94, y: -105) mul_2a4e9f root.Std_k98ojb.Math.Mul {}\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n            in(x: -120, y: -37, name: \"y\") property(Number) y_f5c0f1\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            mul_2a4e9f.x -> x_8ee839\n            mul_2a4e9f.y -> y_f5c0f1\n            mul_2a4e9f.result -> _7dd980\n        } -> mul_2a4e9f.handler\n\n        size_3f0d5c -> func().x\n        6 -> func().y\n        mul_2a4e9f.result -> surface_area_of_cube._7dd980\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b1b8f6 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1f8e7c\n\n        out(x: 656, y: -68, name: \"\") property(Number) _2d4b6a\n\n        instance(x: 94, y: -105) mul_5a9d0c root.Std_k98ojb.Math.Mul {}\n        size_1f8e7c -> mul_5a9d0c.first\n        size_1f8e7c -> mul_5a9d0c.second\n        mul_5a9d0c.result -> _2d4b6a\n\n        instance(x: 94, y: -168) mul_3c7b7c root.Std_k98ojb.Math.Mul {}\n        6 -> mul_3c7b7c.first\n        _2d4b6a -> mul_3c7b7c.second\n        mul_3c7b7c.result -> _2d4b6a\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_5f0e1d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube with side length `size`\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_9c1f7d\n\n        out(x: 656, y: -68, name: \"\") property(Number) _3a8e5b\n\n        instance(x: 94, y: -105) mul_6b2e4c root.Std_k98ojb.Math.Mul {}\n        size_9c1f7d -> mul_6b2e4c.first\n        size_9c1f7d -> mul_6b2e4c.second\n        func() {\n            in(x: -121, y: -37, name: \"\") property(Number) _3a8e5b\n\n            out(x: 333, y: -50, name: \"\") property(Number) _9a0f7d\n\n            instance(x: 92, y: -22) mul_6b2e4c root.Std_k98ojb.Math.Mul {}\n            _3a8e5b -> mul_6b2e4c.first\n            6 -> mul_6b2e4c.second\n            mul_6b2e4c.result -> _9a0f7d\n        } -> mul_6b2e4c.onSuccess\n        mul_6b2e4c.result -> _3a8e5b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_1a7b3f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e0f7c\n\n        out(x: 656, y: -68, name: \"area\") property(Number) area_cbb7bd\n\n        instance(x: 94, y: -105) mul_2b9a3f root.Std_k98ojb.Math.Mul {}\n        size_8e0f7c -> mul_2b9a3f.first\n        size_8e0f7c -> mul_2b9a3f.second\n        mul_2b9a3f.result -> area_cbb7bd\n\n        instance(x: 94, y: -135) mul_f4d1ad root.Std_k98ojb.Math.Mul {}\n        6 -> mul_f4d1ad.first\n        area_cbb7bd -> mul_f4d1ad.second\n        mul_f4d1ad.result -> area_cbb7bd\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") find_cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e5f1b\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b7a8c4\n\n        instance(x: 94, y: -105) mul_a9d3b0 root.Std_k98ojb.Math.Mul {}\n        size_6e5f1b -> mul_a9d3b0.first\n        6 -> mul_a9d3b0.second\n        mul_a9d3b0.result -> surface_area_b7a8c4\n    }\n\n    \n\n    instance(x: -92, y: 45) find_cube_surface_area_3e1f5f root.main.find_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1e4f6a\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_9c8b2d root.Std_k98ojb.Math.Mul {}\n        size_1e4f6a -> mul_9c8b2d.first\n        6 -> mul_9c8b2d.second\n        mul_9c8b2d.result -> result_cbb7bd\n\n        instance(x: -12, y: -105) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        size_1e4f6a -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        mul_9c8b2d.first <- pow_584bfd.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_f0f5e7 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3e9f8a\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_7d5b4c\n\n        instance(x: 94, y: -105) mul_2c0b1e root.Std_k98ojb.Math.Mul {}\n        size_3e9f8a -> mul_2c0b1e.first\n        6 -> mul_2c0b1e.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_5d7a4b\n\n            out(x: 333, y: -50, name: \"\") property(Number) _9f3a8d\n\n            instance(x: 92, y: -22) mul_f1c6e0 root.Std_k98ojb.Math.Mul {}\n            x_5d7a4b -> mul_f1c6e0.first\n            x_5d7a4b -> mul_f1c6e0.second\n            mul_f1c6e0.result -> _9f3a8d\n        } -> mul_2c0b1e.handler\n        mul_2c0b1e.result -> result_7d5b4c\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_1a6b8f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube with side length `size`\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3c6e8a\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_d1f7d2\n\n        instance(x: 94, y: -105) mul_f5b4c0 root.Std_k98ojb.Math.Mul {}\n        size_3c6e8a -> mul_f5b4c0.first\n        size_3c6e8a -> mul_f5b4c0.second\n        mul_f5b4c0.result -> surface_area_d1f7d2\n\n        instance(x: 92, y: -22) mul_3a5b9f root.Std_k98ojb.Math.Mul {}\n        mul_f5b4c0.result -> mul_3a5b9f.first\n        6 -> mul_3a5b9f.second\n        mul_3a5b9f.result -> surface_area_d1f7d2\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8f0c5e\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_3a2d1b\n\n        instance(x: 94, y: -105) mul_9f7d6f root.Std_k98ojb.Math.Mul {}\n        size_8f0c5e -> mul_9f7d6f.first\n        size_8f0c5e -> mul_9f7d6f.second\n        mul_9f7d6f.result -> surfaceArea_3a2d1b\n\n        instance(x: 94, y: -140) mul_d4e5f2 root.Std_k98ojb.Math.Mul {}\n        surfaceArea_3a2d1b -> mul_d4e5f2.first\n        6 -> mul_d4f7f9.second\n        mul_d4e5f2.result -> surfaceArea_3a2d1b\n    }\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -483) subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> subtract_node.first\n        min_value_ai -> subtract_node.second\n        subtract_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_value_node root.main.diff_max_min {}\n    instance(x: 426, y: -393) min_value_node root.main.diff_max_min {}\n    instance(x: 426, y: -483) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -483) math_subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_subtract_node.first\n        min_value_ai -> math_subtract_node.second\n        math_subtract_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_value_ai property(Number)\n    instance(x: 426, y: -393) min_value_ai property(Number)\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.range_diff {}\n    instance(x: 426, y: -393) list_min_node root.main.range_diff {}\n    instance(x: 426, y: -483) math_subtract_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n        \n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -519) subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> subtract_node.first\n        min_value_ai -> subtract_node.second\n        subtract_node.result -> difference_ai\n    }\n\n    \n    in(x: -426, y: -303, name: \"max_value\") property(Number) max_value_ai\n    in(x: -426, y: -423, name: \"min_value\") property(Number) min_value_ai\n\n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest number in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_val\n\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_val\n\n        instance(x: 426, y: -618) math_subtract_node root.Std_k98ojb.Math.Sub {}\n        max_val -> math_subtract_node.first\n        min_val -> math_subtract_node.second\n        math_subtract_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest number in a list.\") range_of_values {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -438) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -573) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_of_values_node root.main.range_of_values {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 639, y: -303) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range {}\n    instance(x: 426, y: -423) min_node root.main.range {}\n    instance(x: 426, y: -543) subtract_node root.main.range {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest number in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_val_ai\n\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_val_ai\n\n        instance(x: 426, y: -519) subtract_node root.Std_k98ojb.Math.Sub {}\n        max_val_ai -> subtract_node.first\n        min_val_ai -> subtract_node.second\n        subtract_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -503) diff_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> diff_node.first\n        min_node.min -> diff_node.second\n        diff_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") EvenCheck {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) check_even root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_even.num\n        check_even.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.EvenCheck {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.number\n        if_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) check_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_7b3b7b.num\n        check_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") EvenCheck {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) check_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> check_7b3b7b.number\n        check_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.EvenCheck {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) check_even_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> check_even_7b3b7b.number\n        check_even_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) check_even_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_even_7b3b7b.num\n        check_even_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") Even {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_k98ojb root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> if_k98ojb.num\n        if_k98ojb.value -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_node root.main.Even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) check_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        num_ai -> check_7b3b7b.num\n        check_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") EvenCheck {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.number\n        if_7b3b7b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.EvenCheck {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"number % 2 == 0\"\n        }\n        number_ai -> expression_7b3b7b.number\n        expression_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_4a8f3b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_b7c9d2\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_1f5a3c\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7e8d9b\n\n            instance(x: 89, y: 29) contains_2d4f6a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            contains_2d4f6a.list -> notequal_807ffd.right\n            elem_1f5a3c -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_7e8d9b\n        } -> find_6d05b0.predicate\n\n        instance(x: 100, y: -50) char_list_3c4d2e root.Std_k98ojb.Strings.Characters {}\n        string_4a8f3b -> char_list_3c4d2e.input\n\n        instance(x: 150, y: -100) seen_chars_a1b2c3 root.Std_k98ojb.List.Empty {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_seen_5f6a7d\n            out(x: 515, y: 44, name: \"list\") property(List) list_seen_8e9f0b\n\n            instance(x: 89, y: 29) add_1c2d3e root.Std_k98ojb.List.Add {}\n            seen_chars_a1b2c3.listWithoutItem -> add_1c2d3e.list\n            elem_seen_5f6a7d -> add_1c2d3e.item\n            add_1c2d3e.listWithItem -> list_seen_8e9f0b\n        } -> find_6d05b0.onItem\n\n        char_list_3c4d2e.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_b7c9d2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_5f8a1c root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) str_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_d4e5f6\n\n        instance(x: 0, y: 0) find_repeated_char_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_n3o4p5\n\n            instance(x: 89, y: 29) contains_6q7r8s root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) list_from_chars_9t0u1v root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -113, y: 34, name: \"char\") property(Char) char_x2y3z4\n\n                out(x: 515, y: 44, name: \"char\") property(Char) char_a5b6c7\n\n                instance(x: 89, y: 29) to_char_8d9e0f root.Std_k98ojb.Strings.Characters {}\n                char_x2y3z4 -> to_char_8d9e0f.input\n                to_char_8d9e0f.characters -> list_from_chars_9t0u1v.output_list\n            } -> list_from_chars_9t0u1v.handler\n            str_1a2b3c -> list_from_chars_9t0u1v.items\n\n            instance(x: 310, y: 35) slice_7h8i9j root.Std_k98ojb.List.Slice {}\n            slice_7h8i9j.start -> 0\n            char_jk1l2m -> slice_7h8i9j.end\n            list_from_chars_9t0u1v.output_list -> slice_7h8i9j.list\n\n            contains_6q7r8s.list -> slice_7h8i9j.result\n            char_jk1l2m -> contains_6q7r8s.item\n            bool_n3o4p5 <- contains_6q7r8s.contains\n        } -> find_repeated_char_7g8h9i.predicate\n        list_from_chars_9t0u1v.output_list -> find_repeated_char_7g8h9i.items\n        find_repeated_char_7g8h9i.item -> char_d4e5f6\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_a1b2c3 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_4f8d2a\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_7e9b3c\n\n        instance(x: 0, y: 0) find_repeated_char_root Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_1f8a4d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9c7e2b\n\n            instance(x: 89, y: 29) has_occurred_before_3f8d2a Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_5c9b7e\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2d8f3a\n\n                instance(x: 310, y: 35) equal_6f9d2e Std_k98ojb.Logic.Equal {}\n                func() {\n                    in(x: -113, y: 34, name: \"left\") property(String) left_7c8d5e\n                    in(x: -113, y: 34, name: \"right\") property(String) right_3f9d2e\n\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1a8b4c\n\n                    left_7c8d5e -> equal_6f9d2e.left\n                    char_1f8a4d -> equal_6f9d2e.right\n                    equal_6f9d2e.result -> bool_1a8b4c\n                } -> bool_2d8f3a\n\n                elem_5c9b7e -> has_occurred_before_3f8d2a.items\n            }\n            has_occurred_before_3f8d2a.output_list -> find_repeated_char_root.predicate\n            char_1f8a4d -> find_repeated_char_root.items\n            find_repeated_char_root.item -> char_7e9b3c\n        }\n\n        instance(x: 89, y: 29) characters Std_k98ojb.Strings.Characters {}\n        string_4f8d2a -> characters.string\n\n        instance(x: 310, y: 35) filter_chars Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9c7e5b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_a8f2d3\n\n            instance(x: 310, y: 35) is_not_whitespace Std_k98ojb.Strings.IsWhitespace {}\n            func() {\n                in(x: -113, y: 34, name: \"string\") property(String) string_7e9a4c\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3f8d2b\n\n                is_not_whitespace.string -> string_7e9a4c\n                !is_not_whitespace.result -> bool_3f8d2b\n            } -> bool_a8f2d3\n\n            elem_9c7e5b -> filter_chars.items\n        }\n        characters.characters -> filter_chars.items\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_9d8f3b\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_7e4a2c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_f3b1a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2d9c8f\n\n            instance(x: 89, y: 29) contains_5e4b6a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) not_3f7b1d root.Std_k98ojb.Logic.Not {}\n            contains_5e4b6a.list -> not_3f7b1d.left\n            contains_5e4b6a.item -> not_3f7b1d.right\n            elem_f3b1a7 -> contains_5e4b6a.item\n            string_9d8f3b.characters -> contains_5e4b6a.list\n            not_3f7b1d.result -> bool_2d9c8f\n        } -> find_6d05b0.predicate\n        string_9d8f3b.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_7e4a2c\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_1a5c8e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1a2f3b\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_a7c4d9\n\n        instance(x: 0, y: 0) find_first_repeat_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_3f5c8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d4a7ef\n\n            instance(x: 89, y: 29) has_seen_1088d5 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -113, y: 34, name: \"seen_char\") property(String) seen_char_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_seen_a7c4d9\n\n                instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n                func() {\n                    in(x: -113, y: 34, name: \"left\") property(String) left_2a3f8e\n                    in(x: -113, y: 34, name: \"right\") property(String) right_4c5d9a\n\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result_f0b1c2\n\n                    left_2a3f8e -> equal_807ffd.left\n                    right_4c5d9a -> equal_807ffd.right\n                    equal_807ffd.result -> bool_result_f0b1c2\n                } -> bool_seen_a7c4d9\n                seen_char_9f6850 -> bool_seen_a7c4d9.item\n            }\n            string_1a2f3b -> has_seen_1088d5.items\n            has_seen_1088d5.output_list -> find_first_repeat_6d05b0.predicate.context\n\n            instance(x: 310, y: 35) in_seen_807ffd root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -113, y: 34, name: \"seen\") property(String) seen_2a3f8e\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_in_seen_a7c4d9\n\n                instance(x: 89, y: 29) equal_1088d5 root.Std_k98ojb.Logic.Equal {}\n                func() {\n                    in(x: -113, y: 34, name: \"left\") property(String) left_f0b1c2\n                    in(x: -113, y: 34, name: \"right\") property(String) right_4c5d9a\n\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_result_e3f7d8\n\n                    left_f0b1c2 -> equal_1088d5.left\n                    right_4c5d9a -> equal_1088d5.right\n                    equal_1088d5.result -> bool_result_e3f7d8\n                } -> bool_in_seen_a7c4d9\n                seen_2a3f8e -> bool_in_seen_a7c4d9.item\n            }\n            find_first_repeat_6d05b0.predicate.context -> in_seen_807ffd.items\n\n            instance(x: 89, y: 29) not_1088d5 root.Std_k98ojb.Logic.Not {}\n            func() {\n                in(x: -113, y: 34, name: \"bool\") property(Bool) bool_input_f0b1c2\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) not_result_a7c4d9\n\n                bool_input_f0b1c2 -> not_1088d5.bool\n                not_1088d5.result -> not_result_a7c4d9\n            }\n            in_seen_807ffd.output_list -> not_1088d5.bool\n            not_1088d5.result -> bool_d4a7ef\n\n            char_3f5c8e -> find_first_repeat_6d05b0.items\n        } -> first_repeated_char.predicate\n        string_1a2f3b -> first_repeated_char.string\n        find_first_repeat_6d05b0.item -> char_a7c4d9\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_5a7c2d\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_f8e3b9\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_b4c7a1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3f9d2e\n\n            instance(x: 89, y: 29) matchindices_c6b5e8 root.Std_k98ojb.Strings.MatchIndices {}\n            instance(x: 310, y: 35) contains_7a1c4f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 410, y: 45) substrings_d9b3e2 root.Std_k98ojb.Strings.Substring {}\n            matchindices_c6b5e8.indices -> substrings_d9b3e2.start\n            1 -> substrings_d9b3e2.end\n            string_5a7c2d -> substrings_d9b3e2.input\n            substrings_d9b3e2.result -> contains_7a1c4f.contains\n            elem_b4c7a1 -> contains_7a1c4f.input\n            contains_7a1c4f.result -> bool_3f9d2e\n        } -> find_6d05b0.predicate\n        instance(x: -150, y: 60) characters_a8b5f3 root.Std_k98ojb.Strings.Characters {}\n        string_5a7c2d -> characters_a8b5f3.input\n        characters_a8b5f3.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_f8e3b9\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_1a2c7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1d8f2a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_b4c3e7\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_5d8b2e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) sublist_4f3c9d root.Std_k98ojb.List.Slice {}\n            func() {\n                in(x: -113, y: 34, name: \"list\") property(List) list_1a2b3c\n\n                out(x: 515, y: 44, name: \"sublist\") property(List) sublist_4f3c9d_output\n\n                instance(x: 89, y: 29) index_7e8d5 root.Std_k98ojb.List.GetAt {}\n                list_1a2b3c -> index_7e8d5.list\n                elem_9f6850 -> index_7e8d5.index\n\n                sublist_4f3c9d_output <- list_1a2b3c.slice(index_7e8d5.result, -1)\n            }\n            contains_5d8b2e.contains <- sublist_4f3c9d_output.contains(elem_9f6850)\n            input_1d8f2a.characters -> contains_5d8b2e.input\n            contains_5d8b2e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_1d8f2a.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_b4c3e7\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_3f8d2a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_7b4c9e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_1a2f3b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4d8e7c\n\n            instance(x: 89, y: 29) contains_5b6c9d root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_2a3f1d root.Std_k98ojb.List.Slice {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(Char) item_6e7c8b\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9f8a3d\n\n                instance(x: 89, y: 29) characters_4b2c1e root.Std_k98ojb.Strings.Characters {}\n                slice_2a3f1d.start -> characters_4b2c1e.index\n                string_3f8d2a -> characters_4b2c1e.input\n                characters_4b2c1e.characters -> contains_5b6c9d.list\n                item_6e7c8b -> contains_5b6c9d.item\n                contains_5b6c9d.contains -> bool_9f8a3d\n            } -> find_6d05b0.predicate\n            slice_2a3f1d.end -> elem_1a2f3b.index\n            string_3f8d2a -> characters_4b2c1e.input\n            characters_4b2c1e.characters -> slice_2a3f1d.list\n            0 -> slice_2a3f1d.start\n            -1 -> slice_2a3f1d.end\n            find_6d05b0.item -> char_7b4c9e\n        }\n        string_3f8d2a -> characters_4b2c1e.input\n        characters_4b2c1e.characters -> list_abed4a\n        list_abed4a -> find_6d05b0.items\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_8f3c7d root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_9f6a2b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_first_repeat_7d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) has_repeated_1088d5 root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) count_occurrences_e8b6c3 root.Std_k98ojb.Iteration.Map {}\n                func() {\n                    in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n                    out(x: 515, y: 44, name: \"number\") property(Number) number_e8b6c3\n\n                    instance(x: 89, y: 29) count_2d5a4e root.Std_k98ojb.Iteration.Count {}\n                    func() {\n                        in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n                        count_2d5a4e.item -> number_e8b6c3\n                    }\n                    elem_9f6850.characters -> count_2d5a4e.items\n                    item_9f6850 -> count_2d5a4e.onItem\n                }\n                elem_9f6850.characters -> count_occurrences_e8b6c3.items\n                count_occurrences_e8b6c3.item -> bool_af09a7\n            }\n            string_9f6a2b.characters -> has_repeated_1088d5.items\n            has_repeated_1088d5.item -> elem_9f6850\n\n            instance(x: 89, y: 29) greater_than_one_d4e3c1 root.Std_k98ojb.Math.GreaterThan {}\n            func() {\n                in(x: -113, y: 34, name: \"left\") property(Number) left_f8a6d5\n                in(x: -113, y: 54, name: \"right\") property(Number) right_9f6850\n\n                greater_than_one_d4e3c1.result -> bool_af09a7\n            }\n            count_occurrences_e8b6c3.item -> greater_than_one_d4e3c1.left\n            1 -> greater_than_one_d4e3c1.right\n        }\n        string_9f6a2b.characters -> find_first_repeat_7d05b0.items\n        find_first_repeat_7d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_1f8a4b\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_d3e7c2\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            contains_1088d5.list -> string_1f8a4b.characters\n            char_9f6850 -> contains_1088d5.item\n            contains_1088d5.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        string_1f8a4b.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_d3e7c2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 639, y: -303) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted_list -> list_slice_node.list\n        instance(x: 852, y: -303) number_get_node root.Std_k98ojb.List.GetAt {}\n        list_slice_node.slice -> number_get_node.indexed_list\n        number_get_node.index = 1\n        number_get_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -423) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_get_at_node.list\n        instance(x: 426, y: -540) number_1_node root.Std_k98ojb.Constant {}\n        number_1_node.value = 1\n        list_get_at_node.index -> number_1_node.value\n        number_1_node.value -> list_get_at_node.index\n        list_get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> slice_list_node.items\n\n        instance(x: 426, y: -459) list_slice_node root.Std_k98ojb.List.Slice {}\n        slice_list_node.listWithItem -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        list_slice_node.listWithoutItem -> min_node.items\n\n        instance(x: 426, y: -603) list_min_node root.Std_k98ojb.List.Min {}\n        min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_list_node root.main.second_smallest_num {}\n\n    \n    instance(x: 426, y: -459) slice_list_node root.main.second_smallest_num {}\n\n    \n    instance(x: 426, y: -603) min_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 726, y: -303) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted_list -> list_slice_node.list\n        instance(x: 1026, y: -303) number_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_slice_node.slice -> number_get_at_node.indexed_item\n        instance(x: 1326, y: -303) number_get_at_1_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> number_get_at_1_node.list\n        number_get_at_1_node.index -> std.Int(1)\n        number_get_at_1_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.listWithSortedItems -> list_slice_node.list\n        instance(x: 426, y: -519) constant_1_node root.Std_k98ojb.Constant {}\n        constant_1_node.value = 1\n        constant_1_node.value -> list_slice_node.start\n        instance(x: 426, y: -615) constant_2_node root.Std_k98ojb.Constant {}\n        constant_2_node.value = 2\n        constant_2_node.value -> list_slice_node.end\n\n        list_slice_node.listWithoutSlice -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -423) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_sort_node.sorted_list -> list_get_at_node.list\n        instance(x: 159, y: -303) constant_two_node root.Std_k98ojb.Constant {}\n        constant_two_node.value = 1\n        list_get_at_node.index -> constant_two_node.value\n        list_get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -483) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted_list -> list_slice_node.list\n        instance(x: 159, y: -648) number_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_slice_node.slice -> number_get_at_node.list\n        number(1) -> number_get_at_node.index\n        number_get_at_node.value -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_instance root.main.second_smallest_num.list_sort_node {}\n    instance(x: 426, y: -483) slice_instance root.main.second_smallest_num.list_slice_node {}\n    instance(x: 159, y: -648) get_at_instance root.main.second_smallest_num.number_get_at_node {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> slice_list_node.items\n\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        slice_list_node.listWithItem -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        list_slice_node.listWithoutItem -> min_of_rest_node.items\n\n        instance(x: 426, y: -588) list_min_node root.Std_k98ojb.List.Min {}\n        min_of_rest_node.items -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n\n        instance(x: 426, y: -403) list_get_at_node root.Std_k98ojb.List.GetAt {\n            index: 1\n        }\n        list_sort_node.sorted_list -> list_get_at_node.list\n        list_get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> sorted_list_node.input_list\n\n        instance(x: 426, y: -483) list_slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list_node.output_list -> list_slice_node.list\n        instance(x: 159, y: -483) constant_1_node root.Std_k98ojb.Constant { value: 1 }\n        constant_1_node.value -> list_slice_node.start\n        instance(x: 426, y: -639) constant_2_node root.Std_k98ojb.Constant { value: 2 }\n        constant_2_node.value -> list_slice_node.end\n\n        list_slice_node.listWithoutItem -> second_min_node.input_list\n        instance(x: 159, y: -639) first_item_node root.Std_k98ojb.List.FirstItem {}\n        sorted_list_node.output_list -> first_item_node.list\n        first_item_node.item -> min_ai\n\n        instance(x: 426, y: -795) list_remove_node root.Std_k98ojb.List.Remove {}\n        second_min_node.input_list -> list_remove_node.list\n        min_ai -> list_remove_node.index\n        list_remove_node.listWithoutItem -> final_second_min_node.input_list\n\n        instance(x: 159, y: -795) first_item_final_node root.Std_k98ojb.List.FirstItem {}\n        final_second_min_node.input_list -> first_item_final_node.list\n        first_item_final_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_sort_node root.main.second_smallest_num {}\n    instance(x: 159, y: -483) sorted_list_node root.Std_k98ojb.List.Slice {}\n    instance(x: 426, y: -639) second_min_node root.Std_k98ojb.List.FirstItem {}\n    instance(x: 426, y: -795) final_second_min_node root.Std_k98ojb.List.FirstItem {}\n\n    \n}"
            ]
        }
    }
]