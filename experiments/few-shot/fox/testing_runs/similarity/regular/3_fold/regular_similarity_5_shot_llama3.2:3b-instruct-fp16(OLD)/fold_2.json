[
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -439, y: 47, name: \"list1\") property(List) list_2e3f6d\n        in(x: -451, y: 62, name: \"list2\") property(List) list_e7b5a4\n\n        out(x: 1169, y: -15, name: \"output\") property(Bool) output_f0cdd1\n\n        instance(x: 219, y: 35) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1008, y: -19) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -28, y: 49, name: \"current\") property(Number) _index_170471\n            in(x: -43, y: 64, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1285, y: 15, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 292, y: 57) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {}\n            getter(x: 184, y: 110, name: \"getter_b280eb\") getter_b280eb = previous\n            setter(x: 651, y: -314, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n            instance(x: 299, y: -23) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n            instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> output_f0cdd1\n            ifexpression_875761.value -> output_f0cdd1\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            list_e7b5a4 -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> output_f0cdd1\n            for_d26972.item -> setter_9d4f1c.new_value\n            list_e7b5a4 -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> contains_32727d.handler\n        list_e7b5a4 -> contains_32727d.list\n        false -> not_75283f.input\n        not_75283f.result -> output_f0cdd1\n    }\n\n    \n\n    instance(x: 14, y: -201) has_common_element_c9e2d3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -509, y: -236, name: \"list1\") property(List) list_3f2d5b\n        in(x: -526, y: 24, name: \"list2\") property(List) list_e7c4cd\n\n        out(x: 1196, y: 17, name: \"output\") property(Bool) output_9e1d16\n\n        instance(x: 742, y: 53) filter_8fbaa5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -186, y: -14) contains_2f3c0a root.Std_k98ojb.List.Contains {}\n        list_e7c4cd -> filter_8fbaa5.items\n        1 -> filter_8fbaa5.item\n        filter_8fbaa5.output_list -> contains_2f3c0a.list\n        contains_2f3c0a.item -> output_9e1d16\n    }\n\n    \n\n    instance(x: -194, y: 54) has_common_element_4bce77 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -231, y: 21, name: \"list1\") property(List) list_0d41f6\n        in(x: -253, y: 62, name: \"list2\") property(List) list_a3c7a5\n\n        out(x: 1118, y: -27, name: \"output\") property(Bool) output_eb1e34\n\n        instance(x: 102, y: 54) intersection_6d6f23 root.Std_k98ojb.Sets.Intersection {}\n        list_a3c7a5 -> intersection_6d6f23.left\n        list_0d41f6 -> intersection_6d6f23.right\n        instance(x: -83, y: 39) not_equal_9cd5e4 root.Std_k98ojb.Logic.NotEqual {}\n        output_eb1e34 -> not_equal_9cd5e4.result\n        intersection_6d6f23.intersect -> not_equal_9cd5e4.left\n        list_a3c7a5 -> not_equal_9cd5e4.right\n    }\n\n    \n\n    instance(x: -75, y: 57) has_common_element_0b2a85 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -469, y: 35, name: \"list1\") property(List) list_0d40f1\n        in(x: -473, y: 64, name: \"list2\") property(List) list_3e4b61\n\n        out(x: 1119, y: 44, name: \"output\") property(Bool) output_c8d6a7\n\n        instance(x: 242, y: 53) filter_5fdd34 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -139, y: 71) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 278, y: 59) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        list_0d40f1 -> filter_5fdd34.items\n        list_3e4b61 -> filter_5fdd34.items\n        filter_5fdd34.output_list -> contains_32727d.list\n        map_c73e3b.item -> contains_32727d.item\n        contains_32727d.is_contained -> output_c8d6a7\n    }\n\n    \n\n    instance(x: -96, y: 76) has_common_element_5f2c4d root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -488, y: 57, name: \"list1\") property(List) list_0f6d3b\n        in(x: -489, y: 44, name: \"list2\") property(List) list_c4e5c7\n\n        out(x: 1158, y: 16, name: \"output\") property(Bool) output_a59a41\n\n        instance(x: 253, y: 70) filter_9f1b3d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -27, y: 73) contains_2c5d96 root.Std_k98ojb.List.Contains {}\n        instance(x: 108, y: 61) map_c73e3b root.Std_k98ojbj.Iteration.Map {}\n        list_0f6d3b -> filter_9f1b3d.items\n        list_c4e5c7 -> filter_9f1b3d.items\n        filter_9f1b3d.output_list -> map_c73e3b.list\n        instance(x: 246, y: -16) isnumeric_d6a0df root.Std_k98ojbj.Strings.IsNumeric {}\n        list_0f6d3b -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_2c5d96.list\n        instance(x: 342, y: -28) not_75283f root.Std_k98ojbj.Logic.Not {}\n        contains_2c5d96.is_contained -> not_75283f.input\n        not_75283f.result -> output_a59a41\n    }\n\n    \n\n    instance(x: 102, y: -192) has_common_element_d9e7af root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -449, y: 43, name: \"list1\") property(List) list_0e1f64\n        in(x: -460, y: 27, name: \"list2\") property(List) list_7a98d5\n\n        out(x: 1128, y: 10, name: \"output\") property(Bool) output_a4c22b\n\n        instance(x: 251, y: 53) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -109, y: 24) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: 384, y: 40) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 107, y: 41) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_0e1f64 -> contains_32727d.left\n        list_7a98d5 -> contains_32727d.right\n        flatten_c31c7c.items -> length_4b8927.list\n        0 -> sub_f133b2.first\n        length_4b8927.length -> sub_f133b2.second\n        sub_f133b2.result -> output_a4c22b\n        contains_32727d.is_contained -> output_a4c22b\n    }\n\n    \n\n    instance(x: 13, y: -179) has_common_element_5e9d6a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -527, y: -214, name: \"list1\") property(List) list_07cae4\n        in(x: -537, y: 3, name: \"list2\") property(List) list_0c6aef\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -303, y: -205, name: \"filter_list1\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform_numbers_to_true_false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_9b7f65 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -457, y: 59, name: \"list1\") property(List) list_0e2f50\n        in(x: -469, y: -24, name: \"list2\") property(List) list_ba9d5b\n\n        out(x: 1017, y: -27, name: \"output\") property(Bool) output_a9df57\n\n        instance(x: 342, y: 71) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1083, y: -29) not_equal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        list_ba9d5b -> contains_32727d.item\n        not_equal_cb8a55.right -> output_a9df57\n        contains_32727d.is_contained -> not_equal_cb8a55.input\n        list_0e2f50 -> contains_32727d.list\n        0 -> contains_32727d.index\n        contains_32727d.itemAtIndex -> not_equal_cb8a55.new_value\n    }\n\n    \n\n    instance(x: -292, y: -18) has_common_element_9b5c1e root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -473, y: 23, name: \"list1\") property(List) list_5e3a6b\n        in(x: -494, y: 17, name: \"list2\") property(List) list_b4c0f9\n\n        out(x: 1188, y: 15, name: \"output\") property(Bool) output_a1d7ea\n\n        instance(x: 748, y: 80) intersection_6b95e5 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -44, y: 12) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_b4c0f9 -> intersection_6b95e5.left\n        list_5e3a6b -> intersection_6b95e5.right\n        intersection_6b95e5.intersect -> output_a1d7ea\n    }\n\n    \n\n    instance(x: -475, y: 16) has_common_element_b0f2ab root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -517, y: -225, name: \"list1\") property(List) list_4f0e6d\n        in(x: -542, y: 11, name: \"list2\") property(List) list_ba5c8b\n\n        out(x: 1069, y: 7, name: \"output\") property(Bool) output_4df1bc\n\n        instance(x: 245, y: 62) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -119, y: -23) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 743, y: 67) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        list_4f0e6d -> contains_32727d.list\n        list_ba5c8b -> contains_32727d.item\n        filter_c91965.items -> map_c73e3b.list\n        1 -> map_c73e3b.index\n        map_c73e3b.output_list -> output_4df1bc\n        contains_32727d.is_contained -> filter_c91965.item\n    }\n\n    \n\n    instance(x: -305, y: -5) has_common_element_0c9d7a root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -549, y: 19, name: \"list\") property(List) list_6d4a1b\n\n        out(x: 1153, y: -24, name: \"output\") property(Bool) output_b5d7e8\n\n        instance(x: 341, y: 98) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1049, y: 73) getat_4f6c66 root.Std_k98ojb.List.GetAt {}\n        instance(x: -20, y: 87) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_6d4a1b -> for_d26972.items\n        for_d26972.index -> getat_4f6c66.index\n        for_d26972.item -> getat_4f6c66.list\n        0 -> equal_f89569.left\n        for_d26972.next -> equal_f89569.right\n        equal_f89569.result -> output_b5d7e8\n    }\n\n    \n\n    instance(x: -25, y: 138) is_consecutive_e9bfef root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3d5a43\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_bf6e41\n\n        instance(x: -484, y: 72) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -45, y: 84) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -43, y: 79) lessThanOrEqual_f2a7e1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_3d5a43 -> for_d26972.items\n        for_d26972.index -> contains_32727d.item\n        for_d26972.item -> lessThanOrEqual_f2a7e1.left\n        for_d26972.next -> lessThanOrEqual_f2a7e1.right\n        lessThanOrEqual_f2a7e1.result -> output_bf6e41\n    }\n\n    \n\n    instance(x: -27, y: 126) is_consecutive_0b5d42 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -565, y: 3, name: \"list\") property(List) list_b1a5e6\n\n        out(x: 1009, y: -96, name: \"output\") property(Bool) output_94d0b4\n\n        instance(x: 736, y: 90) for_d2f8c3 root.Std_k98ojb.Std.For {}\n        instance(x: -304, y: 115) count_c4a7f1 root.Std_k98ojb.Std.Count {}\n        instance(x: 271, y: 103) getat_9e5e34 root.Std_k98ojb.List.GetAt {}\n        instance(x: 468, y: 111) greaterthan_f8d2c0 root.Std_k98ojb.Math.GreaterThan {}\n        list_b1a5e6 -> for_d2f8c3.items\n        for_d2f8c3.index -> count_c4a7f1.reset\n        for_d2f8c3.item -> greaterthan_f8d2c0.left\n        getat_9e5e34.list -> greaterthan_f8d2c0.right\n        1 -> greaterthan_f8d2c0.value\n        greaterthan_f8d2c0.result -> output_94d0b4\n    }\n\n    \n\n    instance(x: -60, y: 133) is_consecutive_9f6a7 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -565, y: 2, name: \"list\") property(List) list_1a3d9b\n\n        out(x: 1015, y: 45, name: \"output\") property(Bool) output_4e6a85\n\n        instance(x: 1038, y: -14, name: \"is_consecutive\") for_d2bf35 root.Std_k98ojb.Std.For {}\n        instance(x: -64, y: 50, name: \"previous\") getter_a9c22f root.Std_k98ojb.List.GetAt {}\n        instance(x: 1054, y: -13) next_6e8d7a root.Std_k98ojb.Std.For {}\n        instance(x: -69, y: 45, name: \"difference\") Math_Subtract {}\n        instance(x: -64, y: 50, name: \"previous\") getter_a9c22f\n        list_1a3d9b -> for_d2bf35.items\n        for_d2bf35.index -> next_6e8d7a.index\n        previous.value -> difference.subtract\n        difference.result -> is_consecutive.output\n    }\n\n    \n\n    instance(x: -66, y: 101) is_consecutive_3e1c8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: 25, name: \"list\") property(List) list_5f2a3d\n\n        out(x: 546, y: 53, name: \"output\") property(Bool) output_4b6b7c\n\n        instance(x: 111, y: 46) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -30, y: 55, name: \"previous\") getter_a2dcd root.Std_k98ojb.List.GetAt {}\n        instance(x: 255, y: 49) nextitem_3f7a85 root.Std_k98ojb.List.NextItem {}\n        instance(x: 111, y: -39) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_5f2a3d -> for_d26972.items\n        previous.value -> for_d26972.index\n        nextitem_3f7a85.item -> for_d26972.next\n        equal_f89569.left -> for_d26972.index\n        1 -> for_d26972.increment\n        for_d26972.onItem -> equal_f89569.execute\n        for_d26972.done -> output_4b6b7c\n    }\n\n    \n\n    instance(x: -44, y: 91) is_consecutive_a5e3d8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 3, name: \"list\") property(List) list_5f9dcb\n\n        out(x: 1211, y: 33, name: \"output\") property(Bool) output_b0e6c4\n\n        instance(x: -275, y: 44) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        instance(x: 743, y: 36) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -24, y: 47) diff_c9e8d4 root.Std_k98ojb.Math.Sub {}\n        instance(x: 191, y: 52) is_greater_than_3a2f5c root.Std_k98ojb.Math.GreaterThan {}\n        list_5f9dcb -> filter_7b3b7b.list\n        filter_7b3b7b.result -> for_d26972.items\n        for_d26972.item -> diff_c9e8d4.first\n        for_d26972.index -> diff_c9e8d4.second\n        diff_c9e8d4.result -> is_greater_than_3a2f5c.left\n        1 -> is_greater_than_3a2f5c.right\n        is_greater_than_3a2f5c.result -> output_b0e6c4\n    }\n\n    \n\n    instance(x: -37, y: 104) is_consecutive_93b9d8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -567, y: 27, name: \"list\") property(List) list_5d8e84\n\n        out(x: 1041, y: -95, name: \"output\") property(Bool) output_eb3c6f\n\n        instance(x: 784, y: -28) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -13, y: -32) getat_7e8d33 root.Std_k98ojb.List.GetAt {}\n        instance(x: -9, y: -41) lessThanOrEqual_e5a6c4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1041, y: -95) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_5d8e84 -> for_d26972.items\n        for_d26972.index -> getat_7e8d33.index\n        getat_7e8d33.itemAtIndex -> lessThanOrEqual_e5a6c4.left\n        1 -> lessThanOrEqual_e5a6c4.right\n        lessThanOrEqual_e5a6c4.result -> not_75283f.input\n    }\n\n    \n\n    instance(x: -41, y: 119) is_consecutive_b7d9b3 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: 38, name: \"list\") property(List) list_5e8a4d\n\n        out(x: 1237, y: 21, name: \"output\") property(Bool) output_c9c3f2\n\n        instance(x: 1061, y: -35) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 334, y: 43) getat_4a5e66 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1033, y: 55) greaterthan_1c9d7f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -44, y: 71) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_5e8a4d -> for_d26972.items\n        for_d26972.index -> greaterthan_1c9d7f.left\n        getat_4a5e66.valueAtIndex -> greaterthan_1c9d7f.right\n        not_75283f.input -> output_c9c3f2\n        greaterthan_1c9d7f.result -> output_c9c3f2\n    }\n\n    \n\n    instance(x: -38, y: 141) is_consecutive_8e4e95 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -563, y: 10, name: \"list\") property(List) list_0d2a6f\n\n        out(x: 1061, y: -14, name: \"output\") property(Bool) output_4e23b9\n\n        instance(x: -336, y: 46, name: \"previous number\") getat_f97b3c root.Std_k98ojb.List.GetAt {}\n        instance(x: -337, y: 52) nextitem_5f0d34 root.Std_k98ojb.List.NextItem {}\n        instance(x: -335, y: 43) sub_6a4e58 root.Std_k98ojb.Math.Sub {}\n        instance(x: 188, y: 45) greaterthan_7c2a83 root.Std_k98ojb.Math.GreaterThan {}\n        list_0d2a6f -> getat_f97b3c.list\n        1 -> getat_f97b3c.index\n        getat_f97b3c.itemAtIndex -> sub_6a4e58.first\n        nextitem_5f0d34.index -> sub_6a4e58.second\n        greaterthan_7c2a83.left -> sub_6a4e58.result\n        list_0d2a6f -> greaterthan_7c2a83.right\n        greaterthan_7c2a83.result -> output_4e23b9\n    }\n\n    \n\n    instance(x: -54, y: 29) is_consecutive_bdf3c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -585, y: 3, name: \"list\") property(List) list_1e8a0d\n\n        out(x: 1079, y: 5, name: \"output\") property(Bool) output_4b7a6f\n\n        instance(x: -346, y: 46, name: \"numbers\") filter_c3c3ca root.Std_k98ojb.Query.Filter {}\n        instance(x: 1018, y: 44) length_81e7d1 root.Std_k98ojb.List.Length {}\n        instance(x: 355, y: -13) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_1e8a0d -> filter_c3c3ca.list\n        filter_c3c3ca.result -> length_81e7d1.list\n        length_81e7d1.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_4b7a6f\n    }\n\n    \n\n    instance(x: -342, y: 66) consecutive_numbers_d2c8ea root.main.Consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -473, y: 13, name: \"main_list\") property(List) list_8e2d5b\n        in(x: -481, y: 17, name: \"sublist\") property(List) list_a4a7c1\n\n        out(x: 1193, y: -202, name: \"output\") property(Bool) output_e5f5af\n\n        instance(x: -278, y: -196) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -274, y: -203) filter_c91965 root.Std_k98ojb.Query.Filter {}\n        list_a4a7c1 -> filter_c91965.where\n        is_sublist_6d5a83 -> contains_32727d.item\n    }\n\n    \n\n    instance(x: 15, y: -16) is_sublist_f8f3cd root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -509, y: 49, name: \"main_list\") property(List) list_5d8f2a\n        in(x: -517, y: 11, name: \"sublist\") property(List) list_0e3d74\n\n        out(x: 1191, y: 4, name: \"output\") property(Bool) output_eb7fca\n\n        instance(x: -302, y: -18) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -293, y: 38) length_8166b0 root.Std_k98ojb.List.Length {}\n        list_5d8f2a -> contains_32727d.list\n        list_0e3d74 -> contains_32727d.item\n        contains_32727d.is_contained -> length_8166b0.length\n    }\n\n    \n\n    instance(x: -293, y: 38) is_sublist_f4c1f5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -494, y: 44, name: \"main_list\") property(List) list_5d15f6\n        in(x: -512, y: 53, name: \"sublist\") property(List) list_a1c7a8\n\n        out(x: 1029, y: 49, name: \"output\") property(Bool) output_eb2e42\n\n        instance(x: -394, y: 48) contains_3d6f71 root.Std_k98ojb.List.Contains {}\n        list_a1c7a8 -> contains_3d6f71.item\n        list_a1c7a8 -> contains_3d6f71.list\n        func() {\n            in(x: -521, y: 55, name: \"index\") property(Number) index_4b5dd9\n\n            out(x: 1040, y: 43, name: \"output\") property(Bool) output_eb2e42\n\n            instance(x: -396, y: 49) length_8166b0 root.Std_k98ojb.List.Length {}\n            list_a1c7a8 -> length_8166b0.list\n            length_8166b0.length -> index_4b5dd9\n            func() {\n                in(x: -517, y: 58, name: \"i\") property(Number) i_63c5f2\n\n                out(x: 1033, y: 47, name: \"output\") property(Bool) output_eb2e42\n\n                instance(x: -394, y: 48) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n                list_a1c7a8 -> equal_f89569.left\n                list_5d15f6 -> equal_f89569.right\n                i_63c5f2 -> equal_f89569.index\n                equal_f89569.result -> output_eb2e42\n            } -> length_8166b0.handler\n        } -> contains_3d6f71.execute\n    }\n\n    \n\n    instance(x: -394, y: 48) is_sublist_b1c7cd root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -513, y: 19, name: \"main_list\") property(List) list_5d4a3b\n        in(x: -527, y: -196, name: \"sublist\") property(List) list_a85c7f\n\n        out(x: 1061, y: 3, name: \"output\") property(Bool) output_b0df6e\n\n        instance(x: -321, y: -202) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -44, y: -208) index_8c9f7a root.Std_k98ojb.List.Index {}\n        instance(x: 146, y: 187) list_slice_4dd2e5 root.Std_k98ojb.List.Slice {}\n        instance(x: -45, y: -201) not_equal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        list_a85c7f -> contains_32727d.item\n        list_a85c7f -> index_8c9f7a.index\n        list_a85c7f -> list_slice_4dd2e5.start\n        list_a85c7f -> list_slice_4dd2e5.end\n        not_equal_7836b4.right -> output_b0df6e\n        contains_32727d.is_contained -> not_equal_7836b4.input\n    }\n\n    \n\n    instance(x: -294, y: 11) is_sublist_f1c9a8 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -499, y: 4, name: \"main_list\") property(List) list_5a2d8b\n        in(x: -491, y: -12, name: \"sublist\") property(List) list_b3e7f6\n\n        out(x: 1040, y: -24, name: \"output\") property(Bool) output_fcd4f1\n\n        instance(x: -313, y: -26) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 146, y: -25) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_b3e7f6 -> zip_201051.left\n        list_5a2d8b -> zip_20151.right\n        func() {\n            in(x: -236, y: 0, name: \"i\") property(Number) index_a9c63b\n\n            out(x: 1011, y: -21, name: \"output\") property(Bool) output_ba4d2f\n\n            instance(x: 109, y: -24) eq_8e33ea root.Std_k98ojb.Logic.Equal {}\n            list_b3e7f6 -> eq_8e33ea.left\n            list_5a2d8b[index_a9c63b] -> eq_8e33ea.right\n            eq_8e33ea.result -> output_ba4d2f\n        } -> contains_32727d.handler\n        contains_32727d.is_contained -> zip_201051.zipped\n        zip_201051.zipped -> output_fcd4f1\n    }\n\n    \n\n    instance(x: -284, y: 28) is_sublist_b5e77b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -255, y: 41, name: \"main_list\") property(List) list_5eaa8a\n        in(x: -294, y: -7, name: \"sublist\") property(List) list_6f55c3\n\n        out(x: 1184, y: -23, name: \"output\") property(Bool) output_a9dca1\n\n        instance(x: -92, y: -29) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 114, y: -16) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: -83, y: -19) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_5eaa8a -> contains_32727d.list\n        list_6f55c3 -> contains_32727d.item\n        length_8166b0.length -> equal_f89569.left\n        length_8166b0.length -> equal_f89569.right\n        1 -> equal_f89569.value\n        equal_f89569.result -> output_a9dca1\n    }\n\n    \n\n    instance(x: -88, y: 70) is_sublist_b3f5a2 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -509, y: 24, name: \"main_list\") property(List) list_4a3f6d\n        in(x: -505, y: 11, name: \"sublist\") property(List) list_a7c2e1\n\n        out(x: 1045, y: 6, name: \"output\") property(Bool) output_bda35b\n\n        instance(x: -320, y: 36) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_a7c2e1 -> zip_201051.left\n        list_4a3f6d -> zip_201051.right\n        func() {\n            in(x: -464, y: 11, name: \"item\") property(Number) item_0ec5e9\n\n            out(x: 1048, y: 2, name: \"is_item\") property(Bool) is_item_4f7c3b\n\n            instance(x: -12, y: 38) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            list_a7c2e1 -> equal_f89569.left\n            item_0ec5e9 -> equal_f89569.right\n            equal_f89569.result -> is_item_4f7c3b\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_bda35b\n    }\n\n    \n\n    instance(x: -316, y: 43) is_sublist_0a5e6d root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -449, y: 18, name: \"main_list\") property(List) list_5e6d22\n        in(x: -462, y: 34, name: \"sublist\") property(List) list_4a2c77\n\n        out(x: 1247, y: 1, name: \"output\") property(Bool) output_e48d38\n\n        instance(x: -302, y: -21) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -312, y: -17) count_8e0f65 root.Std_k98ojb.Std.Count {}\n        instance(x: 177, y: 24) not_equal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        list_5e6d22 -> for_d26972.items\n        list_4a2c77 -> for_d26972.items\n        count_8e0f65.reset -> for_d26972.trigger\n        count_8e0f65.count -> not_equal_7836b4.left\n        0 -> not_equal_7836b4.right\n        not_equal_7836b4.result -> output_e48d38\n    }\n\n    \n\n    instance(x: -304, y: -14) is_sublist_f7a2c5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 43, name: \"main_list\") property(List) list_4a5e6b\n        in(x: -251, y: -16, name: \"sublist\") property(List) list_a1c2d7\n\n        out(x: 1158, y: -28, name: \"output\") property(Bool) output_b3f0a9\n\n        instance(x: -233, y: -43) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_a1c2d7 -> contains_32727d.item\n        main_list -> contains_32727d.list\n        contains_32727d.is_contained -> output_b3f0a9\n    }\n\n    \n\n    instance(x: -224, y: 49) is_sublist_5b6d8e root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -444, y: 442, name: \"main_list\") property(List) list_1d6e28\n        in(x: -454, y: -35, name: \"sublist\") property(List) list_3f2c9a\n\n        out(x: 1268, y: 5, name: \"output\") property(Bool) output_0b7ad4\n\n        instance(x: -321, y: -27) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -31) filter_6f4c9e root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        list_3f2c9a -> filter_6f4c9e.where\n        filter_6f4c9e.result -> contains_32727d.item\n        contains_32727d.is_contained -> output_0b7ad4\n    }\n\n    \n\n    instance(x: -275, y: 51) is_sublist_d2eb3a root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -209, y: 3, name: \"list\") property(List) list_4d6a30\n        out(x: 0, y: 8, name: \"smallest_missing\") property(Number) smallest_missing_a9b5c7\n\n        instance(x: 191, y: 35) for_loop_2e3f1 root.Std_k98ojb.Std.For {\n            items: list_4d6a30\n            reset: Std_k98ojb.Std.Count.reset\n            next: Std_k98ojb.Std.Count.next\n            on_item: Std_k98ojb.Std.Count.on_item\n            done: Std_k98ojb.Std.Count.done\n        }\n        for_loop_2e3f1.trigger -> SmallestMissing.smallest_missing_node.start\n        list_4d6a30 -> for_loop_2e3f1.items\n        Std_k98ojb.Std.Count.reset -> for_loop_2e3f1.reset\n        Std_k98ojb.Std.Count.next -> for_loop_2e3f1.next\n        Std_k98ojb.Std.Count.on_item -> for_loop_2e3f1.on_item\n        Std_k98ojb.Std.Count.done -> for_loop_2e3f1.done\n        for_loop_2e3f1.item -> SmallestMissing.smallest_missing_node.item\n        ifexpression_e54c6d root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == 0 || it > Std_k98ojb.Std.Count.length(list)\"\n        }\n        getter(x: -21, y: 38, name: \"getter_1f5a8f\") getter_1f5a8f = SmallestMissing.smallest_missing_node\n        ifexpression_e54c6d.then -> SmallestMissing.find_missing_node.start\n        list_4d6a30[0] -> SmallestMissing.find_missing_node.item\n        for_loop_2e3f1.index -> SmallestMissing.find_missing_node.index\n        Std_k98ojb.Std.Count.length(list) -> SmallestMissing.find_missing_node.length\n        ifexpression_e54c6d.then -> SmallestMissing.find_missing_node.execute\n    }\n\n    \n\n    instance(x: -191, y: 58) SmallestMissing_1f8a4e root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -436, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 0, name: \"missing\") property(Number) missing_9d3b49\n\n        instance(x: 451, y: 69) for_node root.Std_k98ojb.Std.For {\n            trigger: \"start\"\n            reset: \"reset\"\n            next: \"next\"\n            items: list_ai\n            on item: {\n                in(x: -113, y: 0, name: \"i\") property(Number) i_8d3e15\n                out(x: 512, y: 78, name: \"smallest_missing\") property(Number) smallest_missing_1a6b4f\n            }\n        }\n\n        instance(x: 509, y: -294) ifexpression_d2a9c0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == list_ai.length\"\n        }\n        getter(x: 115, y: 34, name: \"getter_3e5d7f\") getter_3e5d7f = smallest_missing\n        setter(x: 116, y: -16, name: \"setter_a8c2b1\") setter_a8c2b1 = smallest_missing\n        i_8d3e15 -> ifexpression_d2a9c0.gen_0\n        list_ai.length -> ifexpression_d2a9c0.gen_1\n        getter_3e5d7f.value -> smallest_missing_1a6b4f\n        for_node.start -> setter_a8c2b1.execute\n        i_8d3e15 -> setter_a8c2b1.new_value\n        list_ai.length -> setter_a8c2b1.new_value\n        ifexpression_d2a9c0.then -> setter_a8c2b1.continue\n    }\n\n    \n\n    instance(x: -36, y: 120) SmallestMissing_6e3f7d root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -288, y: 23, name: \"list\") property(List) list_4a0e8d\n\n        out(x: 9, y: 58, name: \"missing_number\") property(Number) missing_number_e5c7f2\n        instance(x: 22, y: 36) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: -141, y: 73) find_first_missing_node root.Std_k98ojb.Iteration.Find {}\n        list_4a0e8d -> count_node.items\n        find_first_missing_node.item -> missing_number_e5c7f2\n    }\n\n    \n\n    instance(x: 9, y: 47) find_smallest_missing_1e6ca3 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -270, y: 0, name: \"numbers\") property(List) numbers_9f4d6e\n        out(x: 53, y: -1, name: \"missing\") property(Number) missing_f8a7b3\n\n        instance(x: 326, y: 76) count_node root.Std_k98ojb.Count {}\n        numbers_9f4d6e -> count_node.items\n        count_node.reset -> find_smallest_missing.execute\n        find_smallest_missing.continue -> count_node.count\n        find_smallest_missing.done -> missing_f8a7b3\n\n        instance(x: 0, y: -1) for_loop_node root.Std_k98ojb.For {}\n        numbers_9f4d6e.firstItem -> for_loop_node.items\n        for_loop_node.on item -> missing_f8a7b3\n        for_loop_node.index -> missing_f8a7b3\n        for_loop_node.done -> find_smallest_missing.continue\n    }\n\n    \n\n    instance(x: -54, y: 529) find_smallest_missing_9c758 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_4d9e21\n        out(x: 159, y: 44, name: \"missing\") property(Number) missing_5b0a7c\n\n        instance(x: 315, y: 41) count_node root.Std_k98ojb.Std.Count {}\n        list_4d9e21 -> count_node.items\n        count_node.reset -> true\n        count_node.count -> missing_5b0a7c\n        instance(x: -216, y: 57) for_loop_a8f6c2 root.Std_k98ojb.Std.For {\n            items: list_4d9e21,\n            reset: count_node.reset,\n            next: count_node.next,\n            on item: missing_5b0a7c\n        }\n        instance(x: -110, y: 84) ifexpression_d66f8a root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == missing_5b0a7c + 1\"\n        }\n        getter(x: 91, y: 97, name: \"getter_9e33d3\") getter_9e33d3 = missing_5b0a7c\n        setter(x: -22, y: 63, name: \"setter_bf2b45\") setter_bf2b45 = missing_5b0a7c\n        for_loop_a8f6c2.item -> ifexpression_d66f8a.gen_0\n        ifexpression_d66f8a.then -> setter_bf2b45.execute\n        missing_5b0a7c -> setter_bf2b45.new_value\n    }\n\n    \n\n    instance(x: -44, y: 121) SmallestMissing_e3e9d4 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -292, y: 6, name: \"list\") property(List) list_a4d7f5\n\n        out(x: 14, y: 11, name: \"min\") property(Number) min_9e7c8b\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        list_a4d7f5 -> count_node.items\n        count_node.reset -> find_smallest_missing.continue\n        find_smallest_missing.find -> min_9e7c8b\n    }\n\n    \n\n    instance(x: -53, y: 529) find_smallest_missing_d1d0a root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -326, y: 0, name: \"list\") property(List) list_8e89f5\n        out(x: 2, y: 0, name: \"missing\") property(Number) missing_1b7a5d\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        list_8e89f5 -> count_node.items\n        count_node.reset -> find_smallest_missing.continue\n        count_node.count -> missing\n        find_smallest_missing.next -> find_smallest_missing.continue\n\n        instance(x: -315, y: 0) for_node root.Std_k98ojb.Std.For {}\n        list_8e89f5 -> for_node.items\n        for_node.trigger -> find_smallest_missing.continue\n        for_node.reset -> count_node.reset\n        for_node.next -> for_node.continue\n\n        instance(x: -308, y: 0) ifexpression_6d9c25 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == missing + 1\"\n        }\n        getter(x: -296, y: 17, name: \"getter_3f4d5e\") getter_3f4d5e = missing\n        setter(x: 0, y: 10, name: \"setter_b7a5c6\") setter_b7a5c6 = missing\n        ifexpression_6d9c25.then -> setter_b7a5c6.execute\n        list_8e89f5[missing_1b7a5d] -> setter_b7a5c6.new_value\n        ifexpression_6d9c25.else -> find_smallest_missing.continue\n    }\n\n    \n\n    instance(x: -270, y: 0) find_smallest_missing_4eb2f root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -0, y: 4, name: \"numbers\") property(List) numbers_3d3f1a\n\n        out(x: 2, y: 13, name: \"missing\") property(Number) missing_a8c6d9\n        instance(x: 31, y: 16) for_loop_9e0b21 root.Std_k98ojb.Std.For {\n            trigger: \"start\", reset: true, next: false, items: numbers_3d3f1a\n            in(x: -110, y: 27, name: \"i\") property(Number) i_e4c2aa\n\n            out(x: 1, y: 14, name: \"missing\") property(Number) missing_a8c6d9\n\n            instance(x: 0, y: 19) ifexpression_6e5f7 root.Std_k98ojb.Std.IfExpression {\n                expression: \"i + 1 in numbers\"\n            }\n            getter(x: -59, y: 21, name: \"getter_2c8d4a\") getter_2c8d4a = missing_a8c6d9\n            setter(x: 22, y: 13, name: \"setter_b5e0b1\") setter_b5e0b1 = missing_a8c6d9\n            ifexpression_6e5f7.then -> setter_b5e0b1.execute\n            numbers_3d3f1a[i_e4c2aa] -> setter_b5e0b1.new_value\n        }\n    }\n\n    \n\n    instance(x: -24, y: 49) SmallestMissing_d2e4df root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -255, y: 2, name: \"numbers\") property(List) numbers_6d0f66\n        out(x: 1, y: -111, name: \"smallest_missing\") property(Number) smallest_missing_4b8c85\n\n        instance(x: 0, y: 0) find_smallest_1e5a9 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -108, y: 38, name: \"i\") property(Number) i_3fdd7d\n            out(x: 1, y: -112, name: \"next_number\") property(Number) next_number_a6c9ca\n\n            instance(x: 0, y: 0) count_8e2a31 root.Std_k98ojb.Std.Count {}\n            numbers_6d0f66 -> count_8e2a31.items\n            count_8e2a31.reset -> find_smallest_1e5a9.predicate\n            i_3fdd7d -> find_smallest_1e5a9.item\n            next_number_a6c9ca -> find_smallest_1e5a9.item + 1\n            if(i_3fdd7d == numbers_6d0f66.length) {\n                smallest_missing_4b8c85 = i_3fdd7d + 1\n            } else {\n                find_smallest_1e5a9.item = next_number_a6c9ca\n            }\n        } -> find_smallest_1e5a9.predicate\n        numbers_6d0f66 -> find_smallest_missing.output\n        smallest_missing_4b8c85 -> find_smallest_missing.smallest_missing\n    }\n\n    \n\n    instance(x: -74, y: 521) find_smallest_missing_2f7c98 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -219, y: 0, name: \"list\") property(List) list_abcd6a\n        out(x: 2, y: 69, name: \"smallest_missing\") property(Number) smallest_missing_8d4f64\n\n        instance(x: 0, y: 1) count_node root.Std_k98ojb.Std.Count {}\n        list_abcd6a -> count_node.items\n        count_node.reset -> SmallestMissing_9e2c5b.count\n        count_node.next -> SmallestMissing_9e2c5b.next\n        instance(x: -341, y: 59) for_node root.Std_k98ojb.Std.For {}\n        list_abcd6a -> for_node.items\n        for_node.trigger -> SmallestMissing_9e2c5b.trigger\n        instance(x: 0, y: 1) ifexpression_7d35f4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == i + 1\"\n        }\n        getter(x: -342, y: 84, name: \"getter_a9c45e\") getter_a9c45e = smallest_missing\n        setter(x: 91, y: 0, name: \"setter_8d2b23\") setter_8d2b23 = smallest_missing\n        instance(x: -103, y: 73) next_node root.Std_k98ojb.Std.For {}\n        for_node.index -> next_node.i\n        list_abcd6a[for_node.index] -> next_node.item\n        ifexpression_7d35f4.then -> setter_8d2b23.execute\n        count_node.value -> setter_a9c45e.count\n        i -> setter_a9c45e.next\n        for_node.done -> setter_a9c45e.execute\n    }\n\n    \n\n    instance(x: -69, y: 111) SmallestMissing_f7a3d2 root.main.SmallestMissing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1548, y: 22, name: \"input\") property(String) input_4d6f9b\n\n        out(x: 512, y: 0, name: \"output\") property(String) output_2e98c3\n\n        instance(x: 1061, y: 12) replace_d63a66 root.Std_k98ojb.Strings.Replace {}\n        input_4d6f9b -> replace_d63a66.input\n        \",\" -> replace_d63a66.search\n        \".\" -> replace_d63a66.replace\n        \" \" -> replace_d63a66.replace\n        replace_d63a66.result -> output_2e98c3\n    }\n\n    \n\n    instance(x: 69, y: -44) replace_special_chars_a9f7d4 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -154, y: 6, name: \"input\") property(String) input_0\n\n        out(x: 528, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 101, y: 1) replace_d63e35 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d63e35.input\n        \",\" -> replace_d63e35.search\n        \".\" -> replace_d63e35.replace\n        \" \" -> replace_d63e35.search\n        \":\" -> replace_d63e35.replace\n        replace_d63e35.result -> output_0\n    }\n\n    \n\n    instance(x: 91, y: -68) replace_special_chars_a4c9b2 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1439, y: 13, name: \"input\") property(String) input_ae\n        out(x: 520, y: -47, name: \"output\") property(String) output_ae\n\n        instance(x: 105, y: -72) replace_8d0a6b root.Std_k98ojb.Strings.Replace {}\n        input_ae -> replace_8d0a6b.input\n        \",\" -> replace_8d0a6b.search\n        \".\" -> replace_8d0a6b.replace\n        \" \" -> replace_8d0a6b.replace\n        replace_8d0a6b.result -> output_ae\n    }\n\n    \n\n    instance(x: 84, y: -51) replace_punctuation_4fdd5c root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -136, y: 18, name: \"input\") property(String) input_2d\n        out(x: 596, y: -69, name: \"output\") property(String) output_3b6a4c\n\n        instance(x: 109, y: -23) replace_d0e1f8 root.Std_k98ojb.Strings.Replace {}\n        input_2d -> replace_d0e1f8.input\n        \",\" -> replace_d0e1f8.search\n        \".\" -> replace_d0e1f8.replace\n        \" \" -> replace_d0e1f8.replace\n        replace_d0e1f8.result -> output_3b6a4c\n    }\n\n    \n\n    instance(x: -143, y: 52) replace_special_chars_e97d21 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -138, y: 17, name: \"input\") property(String) input_9d4f2a\n\n        out(x: 594, y: -42, name: \"output\") property(String) output_8b7a0e\n\n        instance(x: 99, y: 3) replace_d5c5f1 root.Std_k98ojb.Strings.Replace {}\n        input_9d4f2a -> replace_d5c5f1.input\n        \",\" -> replace_d5c5f1.search\n        \".\" -> replace_d5c5f1.replace\n        \":\" -> replace_d5c5f1.replace\n        replace_d5c5f1.result -> output_8b7a0e\n    }\n\n    \n\n    instance(x: 101, y: -63) replace_special_chars_e2d6a9 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -130, y: 21, name: \"input\") property(String) input_e1\n\n        out(x: 499, y: -30, name: \"output\") property(String) output_7cdd5e\n\n        instance(x: 79, y: -56) replace_d8f2ec root.Std_k98ojb.Strings.Replace {}\n        input_e1 -> replace_d8f2ec.input\n        \",\" -> replace_d8f2ec.search\n        \".\" -> replace_d8f2ec.replace\n        \" \" -> replace_d8f2ec.replace\n        replace_d8f2ec.result -> output_7cdd5e\n    }\n\n    \n\n    instance(x: -110, y: 46) replace_with_colon_3d1b0a root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -172, y: 21, name: \"input\") property(String) input_9e8a41\n\n        out(x: 541, y: -45, name: \"output\") property(String) output_2f1c0d\n\n        instance(x: 114, y: -72) replace_6bcb7b root.Std_k98ojb.Strings.Replace {}\n        input_9e8a41 -> replace_6bcb7b.input\n        \",\" -> replace_6bcb7b.search\n        \".\" -> replace_6bcb7b.replace\n        \" \" -> replace_6bcb7b.replace\n        replace_6bcb7b.result -> output_2f1c0d\n    }\n\n    \n\n    instance(x: -146, y: 22) replace_special_chars_e5a2ea root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -135, y: 29, name: \"input\") property(String) input_0\n\n        out(x: 430, y: 2, name: \"output\") property(String) output_0\n\n        instance(x: 89, y: 15) replace_d34f4b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d34f4b.input\n        \",\" -> replace_d34f4b.search\n        \".\" -> replace_d34f4b.replace\n        \" \" -> replace_d34f4b.replace\n        replace_d34f4b.result -> output_0\n    }\n\n    \n\n    instance(x: -134, y: 5) replace_with_colon_9d7a6c root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1455, y: 33, name: \"input\") property(String) input_1e9d8a\n\n        out(x: 547, y: -31, name: \"output\") property(String) output_a3c0e4\n\n        instance(x: 95, y: -22) replace_d2f71b root.Std_k98ojb.Strings.Replace {}\n        input_1e9d8a -> replace_d2f71b.input\n        \", .\" -> replace_d2f71b.search\n        \":\" -> replace_d2f71b.replace\n        replace_d2f71b.result -> output_a3c0e4\n    }\n\n    \n\n    instance(x: 102, y: -69) replace_special_chars_5c7d1a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1151, y: 10, name: \"input\") property(String) input_2f9d0e\n\n        out(x: 539, y: -28, name: \"output\") property(String) output_4c1a59\n\n        instance(x: 1035, y: 70) replace_d56bdf root.Std_k98ojb.Strings.Replace {}\n        input_2f9d0e -> replace_d56bdf.input\n        \",\" -> replace_d56bdf.search\n        \".\" -> replace_d56bdf.replace\n        \" \" -> replace_d56bdf.replace\n        replace_d56bdf.result -> output_4c1a59\n    }\n\n    \n\n    instance(x: -155, y: 22) replace_special_chars_a0f7d5 root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in a string are the same.\") is_all_same {\n        in(x: -44, y: 22, name: \"input\") property(String) input_8d1f9b\n\n        out(x: 1314, y: -24, name: \"output\") property(Bool) output_a2a0e3\n\n        instance(x: -92, y: 26) ifexpression_7c6d15 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current\"\n        }\n        getter(x: 333, y: 63, name: \"getter_95f2a1\") getter_95f2a1 = previous\n        setter(x: -0, y: -113, name: \"setter_4b6c67\") setter_4b6c67 = previous\n        instance(x: -273, y: 22) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 74, y: 24) setter_95f2a1 = previous\n        instance(x: -0, y: 31) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7c6d15.then -> setter_4b6c67.execute\n        input_8d1f9b -> for_d26972.items\n        for_d26972.item -> ifexpression_7c6d15.gen_2\n        for_d26972.index -> ifexpression_7c6d15.gen_0\n        getter_95f2a1.value -> ifexpression_7c6d15.gen_1\n        for_d26972.onItem -> ifexpression_7c6d15.execute\n        for_d26972.done -> setter_4b6c67.continue\n        setter_4b6c67.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 13, y: -99) is_all_same_f5a8e3 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in the given string are same or not.\") is_all_same {\n        in(x: -475, y: 26, name: \"string\") property(String) str_5d3e6b\n\n        out(x: 1198, y: 12, name: \"output\") property(Bool) output_e4c7f9\n\n        instance(x: -83, y: 48) ifexpression_0a15af root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 320, y: 113, name: \"getter_7c4f3e\") getter_7c4f3e = previous\n        setter(x: -24, y: 56) setter_7c4f3e = previous\n        instance(x: 201, y: 109) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: 76) setter_7c4f3e = previous\n        instance(x: -275, y: 22) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_0a15af.then -> output_e4c7f9\n        str_5d3e6b -> for_d26972.items\n        for_d26972.item -> ifexpression_0a15af.gen_1\n        for_d26972.index -> ifexpression_0a15af.gen_0\n        getter_7c4f3e.value -> ifexpression_0a15af.gen_2\n        for_d26972.onItem -> ifexpression_0a15af.execute\n        for_d26972.done -> output_e4c7f9\n        for_d26972.item -> setter_7c4f3e.new_value\n        str_5d3e6b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_7c4f3e.new_value\n        ifexpression_0a15af.execute -> output_e4c7f9.continue\n        for_d26972.reset -> ifexpression_0a15af.else\n        setter_7c4f3e.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 13, y: -162) is_all_same_b2d6eb root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_all_same {\n        in(x: -394, y: 45, name: \"string\") property(String) string_4a0f2d\n\n        out(x: 1263, y: 17, name: \"output\") property(Bool) output_a5e8c6\n\n        instance(x: 221, y: 54) length_7e87b1 root.Std_k98ojb.List.Length {}\n        instance(x: -30, y: 35) islower_e4d3f9 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 249, y: 53) tolower_d2a6c5 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 365, y: 21) contains_0e1a51 root.Std_k98ojb.Strings.Contains {}\n        is_all_same -> output_a5e8c6\n        length_7e87b1.length -> contains_0e1a51.count\n        string_4a0f2d -> tolower_d2a6c5.input\n        contains_0e1a51.item -> islower_e4d3f9.input\n    }\n\n    \n\n    instance(x: 56, y: -208) is_all_same_8b7a57 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -44, y: 12, name: \"string\") property(String) string_0f5aee\n\n        out(x: 1101, y: 35, name: \"output\") property(Bool) output_ebf3c6\n\n        instance(x: 243, y: 97) islower_8e4e20 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -142, y: 46) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 111, y: 34) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 157, y: 35) if_e19a62 root.Std_k98ojb.Std.If {}\n        list_0f5aee -> islower_8e4e20.input\n        string_0f5aee -> contains_32727d.contains\n        not_75283f.result -> output_ebf3c6\n        if_e19a62.then -> output_ebf3c6\n    }\n\n    \n\n    instance(x: 18, y: -14) is_all_same_7e2a9b root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in the string are same or not.\") is_all_same {\n        in(x: -245, y: 54, name: \"string\") property(String) str_11fdd4\n\n        out(x: 1243, y: -45, name: \"output\") property(Bool) output_6e85d8\n\n        instance(x: 74, y: 20) tolower_5b9c30 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 246, y: 51) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        is_all_same.result -> output_6e85d8\n        tolower_5b9c30.value -> contains_32727d.search\n        str_11fdd4 -> tolower_5b9c30.input\n    }\n\n    \n\n    instance(x: 36, y: -193) is_all_same_d7a2aa root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_characters_same {\n        in(x: -208, y: 58, name: \"string\") property(String) string_4a8d9e\n\n        out(x: 1046, y: 55, name: \"output\") property(Bool) output_a3fdd1\n\n        instance(x: 91, y: 61) length_5c0d14 root.Std_k98ojb.List.Length {}\n        instance(x: -12, y: 78) tolower_b6a8e2 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 173, y: 66) characters_4f5d7b root.Std_k98ojb.Strings.Characters {}\n        instance(x: 255, y: 62) contains_d3c94e root.Std_k98ojb.Strings.Contains {}\n        all_characters_same_9aeb0a.output -> output_a3fdd1\n        length_5c0d14.length -> contains_d3c94e.is_contained\n        string_4a8d9e -> tolower_b6a8e2.input\n        characters_4f5d7b.list -> contains_d3c94e.contains\n    }\n\n    \n\n    instance(x: 49, y: -145) all_characters_same_e0b4e1 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -292, y: 14, name: \"input\") property(List) list_4e8d6f\n\n        out(x: 1119, y: 59, name: \"output\") property(Bool) output_b4b5c2\n\n        instance(x: 155, y: 58) islower_e0a6bf root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -109, y: 55) ifexpression_93d1f9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 201, y: 12, name: \"getter_3c4a8e\") getter_3c4a8e = previous\n        setter(x: -44, y: 16, name: \"setter_e3f7d5\") setter_e3f7d5 = previous\n        instance(x: 141, y: 56) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -63, y: 19) setter_9d4f1c = previous\n        instance(x: -274, y: 18) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_93d1f9.then -> setter_e3f7d5.execute\n        list_4e8d6f -> for_d26972.items\n        for_d26972.item -> ifexpression_93d1f9.gen_2\n        for_d26972.index -> ifexpression_93d1f9.gen_0\n        getter_3c4a8e.value -> ifexpression_93d1f9.gen_1\n        for_d26972.onItem -> ifexpression_93d1f9.execute\n        for_d26972.done -> output_b4b5c2\n        for_d26972.item -> setter_e3f7d5.new_value\n        list_4e8d6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        islower_e0a6bf.value -> output_b4b5c2\n    }\n\n    \n\n    instance(x: -16, y: 46) is_same_char_f8e7c5 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_characters_same {\n        in(x: -242, y: 55, name: \"string\") property(String) str_9e4d3a\n\n        out(x: 1085, y: 22, name: \"output\") property(Bool) output_1c8fba\n\n        instance(x: -30, y: 66) tolower_6d0b2a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 222, y: 62) characters_3c7cd5 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 455, y: 22) count_1f3e9a root.Std_k98ojb.Std.Count {}\n        instance(x: -14, y: 45) ifexpression_b8d0d6 root.Std_k98ojb.Std.IfExpression {}\n\n        output_1c8fba -> tolower_6d0b2a.value\n        characters_3c7cd5 -> tolower_6d0b2a.value\n        count_1f3f65 -> ifexpression_b8d0d6.value\n        str_9e4d3a -> ifexpression_b8d0d6.then\n        tolower_6d0b2a.value -> ifexpression_b8d0d6.execute\n    }\n\n    \n\n    instance(x: 13, y: -19) all_characters_same_5c1f43 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: -430, y: 74, name: \"input\") property(String) input_5e3a15\n\n        out(x: 1150, y: 22, name: \"output\") property(Bool) output_b9d6f1\n\n        instance(x: 143, y: 75) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: -29, y: -20) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 245, y: 24) islower_2c5e89 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 354, y: 73) tolower_82d7f9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -88, y: 28) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 201, y: 72) isnumeric_6cd0a5 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 265, y: 23) if_e19a62.execute -> for_8cb3f6.reset\n        input_5e3a15 -> tolower_82d7f9.input\n        islower_2c5e89.value -> contains_32727d.contains\n        contains_32727d.is_contained -> if_e19a62.then\n        isnumeric_6cd0a5.value -> is_same_char.predicate\n        for_8cb3f6.item -> is_same_char.handler\n    }\n\n    \n\n    instance(x: 13, y: -24) is_same_char_a2b4d1 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in the given string are same or not.\") all_same_chars {\n        in(x: -215, y: 27, name: \"input\") property(String) input_3f2d4e\n        out(x: 1027, y: 5, name: \"output\") property(Bool) output_ea0ebc\n\n        instance(x: -82, y: 59) tolower_fdbec9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 189, y: 54) contains_8fba1d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 270, y: 48) if_e0a6e5 root.Std_k98ojb.Std.If {}\n        tolower_fdbec9.value -> input_3f2d4e\n        97 -> contains_8fba1d.contains\n        true -> if_e0a6e5.then\n        false -> if_e0a6e5.else\n    }\n\n    \n\n    instance(x: -93, y: 16) all_same_chars_65c9af root.main.all_same_chars {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 3, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 1, y: 0) strings_length_node root.Std_k98ojb.List.Length {}\n        string_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n\n        instance(x: -214, y: -471) strings_to_numbers_node root.Std_k98ojb.Iteration.Map {\n            handler: \"it => Std_k98ojb.Math.Floor(it)\"\n        }\n        strings_to_numbers_node.items -> strings_length_node.value\n        strings_to_numbers_node.output_list -> count_digits_8f0a9c\n\n        instance(x: 100, y: -474) count_digits_8f0a9c root.main.count_digits {}\n        string_ai -> count_digits_8f0a9c.string\n        count_digits_8f0a9c.result -> result_ai\n    }\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1, y: -1, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 0) list_generate_range_node root.Std_k98ojb.List.GenerateRange {}\n        input_ai -> list_generate_range_node.from\n        10 -> list_generate_range_node.to\n        list_generate_range_node.result -> count_ai\n    }\n\n    \n    instance(x: -87, y: -450, name: \"count_digits\") expression_3d7de6 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 3, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_digits_1d7f55\n        instance(x: -176, y: 2) list_generate_range_node root.Std_k98ojb.List.GenerateRange {}\n        count_digits_1d7f55 -> list_generate_range_node.from\n        list_generate_range_node.to -> count_digits_1d7f55\n        list_generate_range_node.generate -> strings_to_digits_3c0e15\n        instance(x: 1, y: -236) digits_count_node root.Std_k98ojb.List.Count {}\n        strings_to_digits_3c0e15.output -> digits_count_node.input\n        digits_count_node.count -> result_ai\n    }\n\n    \n    instance(x: -174, y: -234) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 10, y: -430) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 17, y: -296) digits_2b7a1f root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n        instance(x: -242, y: -463) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Strings.IsNumeric(it)\"\n        }\n        filter_7b3b7b.result -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: 104, y: -459) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 34, y: -221) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n\n        instance(x: 17, y: -233) sum_digits_node root.main.count_digits {}\n        count_ai -> sum_digits_node.value\n        sum_digits_node.result -> count_ai\n    }\n\n    \n    instance(x: -222, y: -235) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 39, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 85, y: 3) math_length_node root.Std_k98ojb.List.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 263, y: -465, name: \"count_digits\") count_9f1a5c root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 5, y: -222, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 3) strings_length_node root.Std_k98ojb.List.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: -436, name: \"count_digits\") count_92a5f2 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 15, y: -442, name: \"count\") property(Number) count_ai\n\n        instance(x: 19, y: -46) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n        instance(x: 20, y: -446) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(input)\"\n        }\n        instance(x: 95, y: -418) digits_from_string_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> ifexpression_3d7de6.input\n        ifexpression_3d7de6.then -> digits_from_string_node\n        digits_from_string_node.characters -> count_ai\n    }\n\n    \n\n    instance(x: 0, y: -442) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 2, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 24, y: -459) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 20, y: -448) strings_to_numbers_node root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 150, name: \"n\") property(Number) n_2e4d3b\n\n        out(x: 1039, y: -1, name: \"output\") property(Number) output_7fbd5c\n\n        instance(x: 0, y: 0) sum_fourth_power_0 root.Std_k98ojb.Std.If\n        func() {\n            in(x: -222, y: 95, name: \"i\") property(Number) i_6a3d2e\n\n            out(x: 1039, y: -1, name: \"output\") property(Number) output_a5c71f\n\n            instance(x: 0, y: 95, name: \"sum\") expression_8b4df9 root.Std_k98ojb.Math.Expression {\n                expression: \"i * (i + 1)^3\"\n            }\n            instance(x: -22, y: 83) modulo_f2aef5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 0, y: 90) add_87c7f6 root.Std_k98ojb.Math.Add {}\n            instance(x: 1, y: 97) div_9e95d3 root.Std_k98ojb.Math.Div {}\n            setter(x: -194, y: 81, name: \"setter_f2aef5\") setter_f2aef5 = sum\n            setter(x: 0, y: 100, name: \"setter_8b4df9\") setter_8b4df9 = sum\n            getter(x: 0, y: 103, name: \"getter_a5c71f\") getter_a5c71f = sum\n            instance(x: -194, y: 83) floor_f2aef5 root.Std_k98ojb.Math.Floor {}\n            1 -> modulo_f2aef5.divisor\n            modulo_f2aef5.result -> add_87c7f6.first\n            1 -> div_9e95d3.second\n            div_9e95d3.result -> expression_8b4df9.gen_0\n            0 -> setter_f2aef5.new_value\n            setter_f2aef5.continue -> sum_fourth_power_0.execute\n            sum_fourth_power_0.else -> output_a5c71f.execute_cdac2a\n            expression_8b4df9.result -> getter_a5c71f\n        } -> sum_fourth_power_0.predicate\n        n_2e4d3b -> i_6a3d2e\n        i_6a3d2e -> expression_8b4df9.gen_1\n    }\n\n    \n\n    instance(x: -189, y: 157) sum_fourth_power_7f65d5 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 165, name: \"n\") property(Number) n_1a3d0b\n\n        out(x: 1149, y: -347, name: \"output\") property(Number) output_b2c85e\n\n        instance(x: 104, y: -401) mul_f6f2aa root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 326, y: 133) data_9a8d5c  = 1\n        instance(x: 0, y: 136) expression_e4e9ec root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)^3 / 6\"\n        }\n        instance(x: 113, y: 2) div_5f7a95 root.Std_k98ojb.Math.Div {}\n        data_9a8d5c -> div_5f7a95.second\n        mul_f6f2aa.result -> div_5f7a95.first\n        expression_e4e9ec.result -> mul_f6f2aa.second\n        n_1a3d0b -> mul_f6f2aa.first\n        n_1a3d0b -> expression_e4e9ec.gen_0\n        div_5f7a95.result -> output_b2c85e\n    }\n\n    \n\n    instance(x: -191, y: 151) sum_fourth_power_96a8ad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -283, y: 166, name: \"n\") property(Number) n_3e4a6b\n\n        out(x: 1219, y: -647, name: \"output\") property(Number) output_b8c0f2\n\n        instance(x: 532, y: 147) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: 0) power_5d7e95 root.Std_k98ojb.Math.Pow {}\n        instance(x: -39, y: 26, name: \"First odd number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        list_09fcba -> ``First odd number_0b1361``.items\n        find_de624f.item -> mul_f892a4.first\n        ``First odd number_0b1361``.item -> mul_f892a4.second\n        mul_f892a4.result -> power_5d7e95.first\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -450, y: 0, name: \"n\") property(Number) n_6b655b\n\n        out(x: 800, y: 7, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 0, y: 0) sum_fourth_power_1 root.Std_k98ojb.Std.Count {}\n        instance(x: -35, y: 19) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 66, y: 34) pow_6d05b0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 59, y: 50) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: -39, y: 86) div_64046c root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: 0, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: 18, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: 28, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: 12) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> mul_f892a4.second\n        pow_6d05b0.result -> mul_f892a4.first\n        n_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_64046c.first\n        2 -> div_64046c.second\n        div_64046c.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> sum_fourth_power_1.execute_cdac2a\n        sum_fourth_power_1.output_list -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue_d9efd7 -> sum_fourth_power_1.output_list\n        getter_38583a.value -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -444, y: 0, name: \"n\") property(Number) n_5f8d4b\n\n        out(x: 1086, y: -1, name: \"output\") property(Number) output_ba94e2\n\n        instance(x: 43, y: 70) pow_6c7b9a root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 19) sum_87d4f5 root.Std_k98ojb.Std.Count {}\n        instance(x: 49, y: -40) ifexpression_1df2ac root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 50, y: 13) add_f7d8c6 root.Std_k98ojb.Math.Add {}\n        instance(x: 47, y: -33) mul_9e56a5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 46, y: 17) div_2f0df3 root.Std_k98ojb.Math.Div {}\n        instance(x: 44, y: 11) floor_6c7b9d root.Std_k98ojb.Math.Floor {}\n        instance(x: 43, y: -40) modulo_1a60e5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 45, y: 17) pow_6c7b9a.second\n        instance(x: 0, y: 19) sum_87d4f5.n_5f8d4b\n        ifexpression_1df2ac.then -> add_f7d8c6.execute\n        ifexpression_1df2ac.else -> pow_6c7b9a.execute_cdac2a\n        pow_6c7b9a.result -> mul_9e56a5.first\n        3 -> div_2f0df3.second\n        div_2f0df3.result -> floor_6c7b9d.input\n        floor_6c7b9d.output -> modulo_1a60e5.divisor\n        modulo_1a60e5.result -> add_f7d8c6.first\n        4 -> mul_9e56a5.second\n        mul_9e56a5.result -> sum_87d4f5.value\n        sum_87d4f5.output -> output_ba94e2\n    }\n\n    \n\n    instance(x: -292, y: 164) sum_fourth_power_8c0b3 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -285, y: 165, name: \"n\") property(Number) n_2b3e0a\n\n        out(x: 1176, y: -361, name: \"output\") property(Number) output_f1c4f5\n\n        instance(x: 73, y: 97) sum_fourth_power_58d7c9 root.main.sum_fourth_power {}\n        instance(x: 313, y: 82) pow_9b9a2e root.Std_k98ojb.Math.Pow {}\n        instance(x: -59, y: 14) ifexpression_4f0d8d root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 88, y: -278) mul_f7a1c9 root.Std_k98ojb.Math.Mul {}\n        instance(x: 305, y: 73) modulo_2d8e4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 655, y: -261) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 94, y: -241) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -216, y: -462, name: \"setter_4e5e2d\") setter_4e5e2d = sum\n        setter(x: 876, y: -517, name: \"setter_3c0a29\") setter_3c0a29 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -203, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> pow_9b9a2e.power\n        n_2b3e0a -> mul_f7a1c9.first\n        pow_9b9a2e.result -> modulo_2d8e4f.value\n        3 -> div_547f34.second\n        div_547f34.result -> sum_fourth_power_58d7c9.n_2b3e0a\n        0 -> setter_4e5e2d.new_value\n        setter_4e5e2d.continue -> ifexpression_4f0d8d.execute\n        ifexpression_4f0d8d.then -> sum_fourth_power_58d7c9.execute\n        execute_cdac2a -> setter_4e5e2d.execute\n        ifexpression_4f0d8d.else -> sum_fourth_power_58d7c9.execute_cdac2a\n        sum_fourth_power_58d7c9.continue_d9efd7 -> setter_3c0a29.execute\n        sum_fourth_power_58d7c9.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_3c0a29.new_value\n        setter_3c0a29.continue -> continue_d9efd7\n        getter_38583a.value -> output_f1c4f5\n        n_2b3e0a -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_2d8e4f.value\n        floor_61b38d.output -> ifexpression_4f0d8d.gen_0\n    }\n\n    \n\n    instance(x: -174, y: 36) sum_fourth_power_f1a6c9 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -287, y: 164, name: \"n\") property(Number) n_8d4a1e\n\n        out(x: 1456, y: -335, name: \"output\") property(Number) output_e2f0b3\n\n        instance(x: 54, y: -348) mul_f7ca9c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 310, y: 151) data_1e6e42  = 1\n        instance(x: 0, y: -372) power_a2a8d4 root.Std_k98ojb.Math.Pow {}\n        instance(x: 93, y: -342) modulo_5c9f47 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 660, y: -315) add_7e9db1 root.Std_k98ojb.Math.Add {}\n        instance(x: 96, y: -248) div_4d2a25 root.Std_k98ojb.Math.Div {}\n        setter(x: -208, y: -374, name: \"setter_3df8c6\") setter_3df8c6 = sum\n        setter(x: 865, y: -427, name: \"setter_b5f9ea\") setter_b5f9ea = sum\n        getter(x: 900, y: -314, name: \"getter_d4a2b1\") getter_d4a2b1 = sum\n        instance(x: -199, y: -258) floor_57c21d root.Std_k98ojb.Math.Floor {}\n        3 -> power_a2a8d4.base\n        data_1e6e42 -> power_a2a8d4.value\n        4 -> power_a2a8d4.exponent\n        mul_f7ca9c.result -> power_a2a8d4.result\n        3 -> modulo_5c9f47.divisor\n        3 -> div_4d2a25.second\n        data_1e6e42 -> div_4d2a25.first\n        div_4d2a25.result -> setter_b5f9ea.new_value\n        mul_f7ca9c.result -> add_7e9db1.first\n        3 -> add_7e9db1.second\n        modulo_5c9f47.result -> setter_3df8c6.new_value\n        add_7e9db1.result -> getter_d4a2b1.value\n        div_4d2a25.result -> floor_57c21d.input\n        floor_57c21d.output -> modulo_5c9f47.value\n        floor_57c21d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -193, y: 155) sum_fourth_power_b2e4a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -289, y: 166, name: \"n\") property(Number) n_34a5f1\n\n        out(x: 7536, y: -371, name: \"output\") property(Number) output_a3c85d\n\n        instance(x: 0, y: 0) find_7d95c9 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_7d95c9.predicate\n        list_abed4a -> find_7d95c9.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7d95c9.predicate\n        list_abed4a -> find_7d95c9.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 420, y: 78) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7d95c9.predicate\n        list_abed4a -> find_7d95c9.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 420, y: 78) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_7d95c9.predicate\n        list_abed4a -> find_7d95c9.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 419, y: 77) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7d95c9.predicate\n        list_abed4a -> find_7d95c9.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 418, y: 76) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_7d95c9.predicate\n        list_abed4a -> find_7d95c9.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 417, y: 77) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_7d95c9.predicate\n        list_abed4a -> find_7d95c9.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 416, y: 76) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_7d95c9.predicate\n        list_abed4a -> find_7d95c9.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_bf4e21\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_bf4e21 -> modulo_1088d5.value\n            2 -> modulo_1088",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_38f3a2\n\n        out(x: 1146, y: -647, name: \"output\") property(Number) output_0c869e\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_fourth_power_9f1c5a root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 654, y: -330) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"x^4\"\n        }\n        instance(x: 112, y: 80) pow_0f1e3a root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -249) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: 303, y: 2) sum_f5d6cd root.Std_k98ojb.Math.Sum {}\n        instance(x: -39, y: 26, name: \"First odd number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        list_09fcba -> ``First odd number_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        sum_fourth_power_9f1c5a.continue_d9efd7 -> mul_f892a4.execute\n        mul_f892a4.result -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_0f1e3a.first\n        pow_0f1e3a.result -> div_64046c.first\n        div_64046c.result -> sum_f5d6cd.n_38f3a2\n        sum_f5d6cd.continue_d9efd7 -> mul_f892a4.execute_cdac2a\n        mul_f892a4.output_732a8a -> sum_f5d6cd.new_value\n        sum_f5d6cd.continue_d9efd7 -> expression_2d6da6.execute_cdac2a\n        expression_2d6da6.result -> sum_f5d6cd.value\n        n_38f3a2 -> pow_0f1e3a.second\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_0c869e root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -276, y: 174, name: \"n\") property(Number) n_4d0b6a\n\n        out(x: 1249, y: 7, name: \"sum\") property(Number) sum_3f8f2c\n\n        instance(x: 88, y: -343) ifexpression_43e4c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 432, y: -305) pow_f7a9d6 root.Std_k98ojb.Math.Pow {}\n        instance(x: 95, y: -238) sum_4e2f8c root.main.sum_fourth_power {}\n        instance(x: 87, y: -269) mul_e1cf3d root.Std_k98ojb.Math.Mul {}\n        instance(x: 99, y: -213) div_55a9da root.Std_k98ojb.Math.Div {}\n        setter(x: -209, y: -430, name: \"setter_d63c8f\") setter_d63c8f = sum\n        setter(x: 911, y: -486, name: \"setter_e77d14\") setter_e77d14 = sum\n        getter(x: 938, y: -314, name: \"getter_3e2a9b\") getter_3e2a9b = sum\n        instance(x: -193, y: -240) floor_f7c8f4 root.Std_k98ojb.Math.Floor {}\n        pow_f7a9d6.result -> mul_e1cf3d.first\n        4 -> div_55a9da.second\n        div_55a9da.result -> setter_d63c8f.new_value\n        setter_d63c8f.continue -> ifexpression_43e4c5.execute\n        ifexpression_43e4c5.then -> sum_4e2f8c.execute_cdac2a\n        execute_cdac2a -> setter_e77d14.execute\n        ifexpression_43e4c5.else -> pow_f7a9d6.execute_cdac2a\n        sum_4e2f8c.continue_d9efd7 -> setter_d63c8f.execute\n        sum_4e2f8c.output_732a8a -> mul_e1cf3d.second\n        mul_e1cf3d.result -> setter_e77d14.new_value\n        setter_e77d14.continue -> continue_d9efd7\n        getter_3e2a9b.value -> sum_4e2f8c.output_732a8a\n        n_4d0b6a -> floor_f7c8f4.input\n        floor_f7c8f4.output -> div_55a9da.first\n        floor_f7c8f4.output -> pow_f7a9d6.value\n        floor_f7c8f4.output -> ifexpression_43e4c5.gen_0\n    }\n\n    \n\n    instance(x: -208, y: 173) sum_fourth_power_3b1c2 root.main.sum_fourth_power {}\n\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -218, y: 29, name: \"side_length\") property(Number) side_length_1e8f2d\n\n        out(x: 152, y: 57, name: \"surface_area\") property(Number) surface_area_4f5b6a\n\n        instance(x: 104, y: -41, name: \"six_sides\") property(Number) six_sides_6c7e9d = 6\n        data_instance(x: -194, y: -216, name: \"squared_side_length\") property(Number) squared_side_length_3a5f0d = side_length_1e8f2d * side_length_1e8f2d\n\n        instance(x: 55, y: 166) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -195, y: -221, name: \"side_times_six\") property(Number) side_times_six_e0c6d7 = squared_side_length_3a5f0d * six_sides_6c7e9d\n        mul_f892a4.result -> surface_area_4f5b6a\n        side_length_1e8f2d -> mul_f892a4.first\n        squared_side_length_3a5f0d -> mul_f892a4.second\n    }\n\n    \n\n    instance(x: 201, y: -15) surface_area_e9c34a root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -192, y: 21, name: \"side\") property(Number) side_9f2d4a\n\n        out(x: 216, y: 14, name: \"surface_area\") property(Number) area_f87c3b\n        out(x: 204, y: 33, name: \"continue\") trigger() continue_5dd2e6\n\n        instance(x: -114, y: 11) mul_0a4f45 root.Std_k98ojb.Math.Mul {}\n        side_9f2d4a -> mul_0a4f45.first\n        6 -> mul_0a4f45.second\n        mul_0a4f45.result -> area_f87c3b\n    }\n\n    \n\n    instance(x: -187, y: 41) surface_area_1e1bb9 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -104, y: 21, name: \"side\") property(Number) side_94d8e9\n\n        out(x: 132, y: 11, name: \"surface_area\") property(Number) surface_area_6a7c41\n        out(x: 119, y: 24, name: \"continue\") trigger() continue_4b1f2b\n\n        instance(x: -55, y: -39) expression_f1e8d9 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * (side^2)\"\n        }\n        side_94d8e9 -> expression_f1e8d9.gen_0\n        expression_f1e8d9.result -> surface_area_6a7c41\n    }\n\n    \n\n    instance(x: 29, y: -48) cube_surface_area_9fda95 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -209, y: 23, name: \"side\") property(Number) side_5a8f0d\n\n        out(x: 216, y: 56, name: \"area\") property(Number) area_b9c85e\n        out(x: 227, y: 12, name: \"continue\") trigger() continue_3e7e4b\n\n        instance(x: -104, y: -24) mul_94f1a5 root.Std_k98ojb.Math.Mul {}\n        side_5a8f0d -> mul_94f1a5.first\n        6 -> mul_94f1a5.second\n        mul_94f1a5.result -> area_b9c85e\n    }\n\n    \n\n    instance(x: -176, y: 63) surface_area_7b3eb8 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -195, y: 21, name: \"side_length\") property(Number) side_length_5f1d23\n\n        out(x: 216, y: -49, name: \"surface_area\") property(Number) surface_area_e2c1a8\n\n        instance(x: 31, y: -121) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 206, y: 165) data_9f1d6d  = 6\n        instance(x: 12, y: 168) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length * data_9f1d6d\"\n        }\n        instance(x: 204, y: -58) div_64046c root.Std_k98ojb.Math.Div {}\n        data_9f1d6d -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_b720d7.result -> mul_f892a4.second\n        side_length_5f1d23 -> mul_f892a4.first\n        surface_area_e2c1a8 -> div_64046c.result\n    }\n\n    \n\n    instance(x: 101, y: -137) surface_area_9bba3e root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -120, y: 25, name: \"side_length\") property(Number) side_length_0a9e4f\n\n        out(x: 216, y: 38, name: \"surface_area\") property(Number) surface_area_b2b7df\n\n        instance(x: 12, y: -15) square_f6d33c root.Std_k98ojb.Math.Pow {}\n        side_length_0a9e4f -> square_f6d33c.first\n        2 -> square_f6d33c.second\n        square_f6d33c.result -> surface_area_b2b7df\n\n        instance(x: -106, y: -45) mul_6dbf0a root.Std_k98ojb.Math.Mul {}\n        side_length_0a9e4f -> mul_6dbf0a.first\n        6 -> mul_6dbf0a.second\n        mul_6dbf0a.result -> surface_area_b2b7df\n\n        instance(x: -208, y: -198) add_f5d1f3 root.Std_k98ojb.Math.Add {}\n        surface_area_b2b7df -> add_f5d1f3.first\n        surface_area_b2b7df -> add_f5d1f3.second\n        add_f5d1f3.result -> surface_area_b2b7df\n    }\n\n    \n\n    instance(x: 93, y: -13) cube_surface_area_9c5e98 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -106, y: 15, name: \"side_length\") property(Number) side_length_5f6e95\n\n        out(x: 352, y: 23, name: \"surface_area\") property(Number) surface_area_1b9c2d\n\n        instance(x: -101, y: 63, name: \"sides\") property(Number) sides_a3a4bb\n        instance(x: -111, y: 34, name: \"area_of_each_side\") property(Number) area_of_each_side_b0f0b8\n        instance(x: 117, y: 56, name: \"sum_of_areas\") property(Number) sum_of_areas_6d7c2a\n\n        data_instance(x: -94, y: 69, name: \"sides_data\") = 6\n        side_length_5f6e95 -> sides_data\n        area_of_each_side_b0f0b8.result -> sum_of_areas\n        for(x: -108, y: 23, name: \"for_loop\") {\n            in(x: -103, y: 61, name: \"i\") property(Number) i_9dcd33\n            out(x: -98, y: 67, name: \"area_of_each_side_in_for\") property(Number) area_of_each_side_in_for_b4c0a3\n\n            instance(x: -112, y: 37, name: \"side_area_expression\") property(Number) side_area_expression_2d1c7f\n            side_length_5f6e95 -> side_area_expression.x\n            side_length_5f6e95 -> side_area_expression.y\n            side_area_expression.result -> area_of_each_side_in_for_b4c0a3\n\n            instance(x: -100, y: 64, name: \"sum_of_areas_expression\") property(Number) sum_of_areas_expression_e4d9b2\n            for_loop.index -> sum_of_areas_expression.x\n            sides_data -> sum_of_areas_expression.y\n            side_area_expression.result -> sum_of_areas_expression.gen_0\n            area_of_each_side_in_for_b4c0a3 -> sum_of_areas_expression.gen_1\n            sum_of_areas_expression.result -> area_of_each_side_in_for_b4c0a3\n        }\n        for_loop.done -> sum_of_areas_expression.execute\n    }\n\n    \n\n    instance(x: -69, y: 26) surface_area_d25dca root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -222, y: 55, name: \"side\") property(Number) side_6f3d43\n\n        out(x: 216, y: 7, name: \"surface_area\") property(Number) surface_area_5e4a0c\n        out(x: 228, y: 67, name: \"continue\") trigger() continue_a2b8eb\n\n        instance(x: -45, y: -213) expression_9d1f43 root.Std_k98ojb.Math.Expression {\n            expression: \"(6 * (side^2))\"\n        }\n        side_6f3d43 -> expression_9d1f43.gen_0\n        expression_9d1f43.result -> surface_area_5e4a0c\n    }\n\n    \n\n    instance(x: 214, y: -104) cube_surface_area_e77b1b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -101, y: 44, name: \"side_length\") property(Number) side_length_1d0a4f\n\n        out(x: 216, y: -43, name: \"surface_area\") property(Number) area_f2e9db\n        out(x: 222, y: -54, name: \"continue\") trigger() continue_5df9af\n\n        instance(x: 98, y: -210) mul_34d3c4 root.Std_k98ojb.Math.Mul {}\n        side_length_1d0a4f -> mul_34d3c4.first\n        6 -> mul_34d3c4.second\n        mul_34d3c4.result -> area_f2e9db\n    }\n\n    \n\n    instance(x: -219, y: 140) surface_area_7b8b14 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -129, y: 29, name: \"side\") property(Number) side_5a0d6e\n\n        out(x: 216, y: -11, name: \"surface_area\") property(Number) sa_7f66c4\n        out(x: 105, y: 18, name: \"continue\") trigger() continue_9b3df8\n\n        instance(x: 47, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        side_5a0d6e -> mul_f892a4.first\n        6 -> mul_f892a4.second\n        mul_f892a4.result -> sa_7f66c4\n    }\n\n    \n\n    instance(x: -220, y: 24) surface_area_b1c3b9 root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -493, y: 16, name: \"list\") property(List) list_4d3e33\n\n        out(x: 451, y: -22, name: \"difference\") property(Number) difference_a3f0b5\n        out(x: 439, y: 115, name: \"output\") trigger() output_b1c7ec\n\n        instance(x: -1069, y: -44) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -1023, y: 141) find_max_d0a4d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1008, y: 133) find_min_b7c1b9 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1062, y: 110) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_4d3e33 -> length_6e87f2.list\n        length_6e87f2.length -> find_max_d0a4d5.index\n        find_max_d0a4d5.item -> sub_f133b2.first\n        list_4d3e33 -> find_min_b7c1b9.list\n        find_min_b7c1b9.item -> sub_f133b2.second\n        sub_f133b2.result -> difference_a3f0b5\n    }\n\n    \n\n    instance(x: 73, y: -18) diff_largest_smallest_6d8e23 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -245, y: 234, name: \"list\") property(List) list_6d5f44\n\n        out(x: 446, y: 65, name: \"difference\") property(Number) difference_ae0d2a\n        out(x: 518, y: -104, name: \"continue\") trigger() continue_e9c34b\n\n        instance(x: -141, y: 242) maxitem_6f3cd4 root.Std_k98ojb.List.Max {}\n        instance(x: -134, y: 225) minitem_d8d2a0 root.Std_k98ojb.List.Min {}\n        instance(x: -101, y: 236) sub_8e9c42 root.Std_k98ojb.Math.Sub {}\n        list_6d5f44 -> maxitem_6f3cd4.list\n        list_6d5f44 -> minitem_d8d2a0.list\n        maxitem_6f3cd4.item -> sub_8e9c42.first\n        minitem_d8d2a0.item -> sub_8e9c42.second\n        sub_8e9c42.result -> difference_ae0d2a\n    }\n\n    \n\n    instance(x: 33, y: -34) diff_max_min_f4f2b5 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1121, y: -638, name: \"list\") property(List) list_8f9b71\n\n        out(x: 547, y: -1010, name: \"difference\") property(Number) difference_eb7e4d\n        out(x: -1063, y: -103, name: \"continue\") trigger() continue_f6a4d1\n\n        instance(x: -1118, y: -596) length_9c2f33 root.Std_k98ojb.List.Length {}\n        instance(x: 509, y: -115, name: \"max\") property(Number) max_e7a5e3\n        instance(x: 1101, y: -104, name: \"min\") property(Number) min_4c2d66\n        instance(x: -1096, y: -609) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_8f9b71 -> length_9c2f33.list\n        max_e7a5e3 -> sub_f133b2.first\n        min_4c2d66 -> sub_f133b2.second\n        length_9c2f33.length -> sub_f133b2.right\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_max_min_59a8e5 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -101, y: 24, name: \"list\") property(List) list_6d3e8a\n\n        out(x: -145, y: -23, name: \"difference\") property(Number) difference_c4b7c1\n        out(x: -142, y: 22, name: \"output\") trigger() output_9f43ef\n\n        instance(x: -111, y: 24) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -101, y: -104) maxitem_a3d5ca root.Std_k98ojb.List.Max {}\n        instance(x: -109, y: -28) minitem_4c8a7a root.Std_k98ojb.List.Min {}\n        data_instance(x: 106, y: -14) data_e1e8f2  = [max, min]\n        instance(x: -105, y: -24) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_6d3e8a -> maxitem_a3d5ca.list\n        list_6d3e8a -> minitem_4c8a7a.list\n        data_e1e8f2 -> length_6e87f2.items\n        0 -> sub_f133b2.first\n        length_6e87f2.length -> sub_f133b2.second\n        maxitem_a3d5ca.item -> data_e1e8f2.max\n        minitem_4c8a7a.item -> data_e1e8f2.min\n        list_6d3e8a -> sub_f133b2.result\n        sub_f133b2.result -> difference_c4b7c1\n    }\n\n    \n\n    instance(x: 93, y: -13) diff_max_min_5a74df root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -159, y: 16, name: \"list\") property(List) list_6d4a5e\n\n        out(x: -151, y: -24, name: \"difference\") property(Number) difference_c8b1c2\n        out(x: -155, y: 20, name: \"output\") trigger() output_bf7d94\n\n        instance(x: -1049, y: -375) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) maxitem_d2a5e3 root.Std_k98ojb.List.Max {}\n        instance(x: -1059, y: -696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        instance(x: -432, y: -620) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 188, y: 425) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -318, y: 521) lessThanOrEqual_6f9d66 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -48, y: 517) sub_f133b2_1 root.Std_k98ojb.Math.Sub {}\n        list_6d4a5e -> length_4b8927.list\n        maxitem_d2a5e3.list -> lastitem_d831ca.list\n        list_6d4a5e -> greaterthan_cb50ae.left\n        lastitem_d831ca.item -> greaterthan_cb50ae.right\n        sub_f133b2.result -> lessThanOrEqual_6f9d66.left\n        maxitem_d2a5e3.item -> lessThanOrEqual_6f9d66.right\n        sub_f133b2_1.result -> sub_f133b2.left\n        greaterthan_cb50ae.result -> sub_f133b2_1.right\n        lastitem_d831ca.item -> sub_f133b2_1.second\n        maxitem_d2a5e3.item -> sub_f133b2_1.first\n        length_4b8927.length -> sub_f133b2.left\n        greaterthan_cb50ae.result -> sub_f133b2.right\n        lessThanOrEqual_6f9d66.result -> difference_c8b1c2\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_max_min_4fba0e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -157, y: -538, name: \"list\") property(List) list_1a2b3d\n\n        out(x: 540, y: -38, name: \"output\") property(Number) output_b6c4e5\n\n        instance(x: -1169, y: -387) length_7f0a34 root.Std_k98ojb.List.Length {}\n        instance(x: -1193, y: -478) maxitem_8f5d95 root.Std_k98ojb.List.Max {}\n        instance(x: 199, y: -22) minitem_a1c9e4 root.Std_k98ojb.List.Min {}\n        instance(x: -1237, y: -528) sub_6a0df3 root.Std_k98ojb.Math.Sub {}\n        list_1a2b3d -> length_7f0a34.list\n        maxitem_8f5d95.list -> length_7f0a34.list\n        minitem_a1c9e4.list -> length_7f0a34.list\n        sub_6a0df3.result -> output_b6c4e5\n    }\n\n    \n\n    instance(x: 109, y: -68) diff_max_min_5b0cd4 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -107, y: 19, name: \"list\") property(List) list_5d9b4a\n\n        out(x: 444, y: 56, name: \"difference\") property(Number) difference_a7f6df\n        out(x: 114, y: -13, name: \"continue\") trigger() continue_74e0c3\n\n        instance(x: -110, y: -27) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -43, y: 56) maxitem_d1b8a4 root.Std_k98ojb.List.Max {}\n        instance(x: -109, y: -24) minitem_b5d3c7 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: 52) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_5d9b4a -> length_6e87f2.list\n        maxitem_d1b8a4.item -> sub_852f2e.first\n        minitem_b5d3c7.item -> sub_852f2e.second\n        length_6e87f2.length -> sub_852f2e.right\n    }\n\n    \n\n    instance(x: 57, y: -19) diff_max_min_9b4a8 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -208, y: -49, name: \"list\") property(List) list_9a3e4d\n\n        out(x: 443, y: 55, name: \"output\") property(Number) output_8c6f6b\n\n        instance(x: -1049, y: -375) firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1059, y: -696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_9a3e4d -> lastitem_d831ca.list\n        list_9a3e4d -> firstitem_9b1bc3.list\n        data_cc1b1b -> flatten_c31c7c.items\n        firstitem_9b1bc3.item -> data_cc1b1b.last\n        lastitem_d831ca.item -> data_cc1b1b.first\n        list_9a3e4d -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> output_8c6f6b\n        list_9a3e4d -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_4d8aeb root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -493, y: 444, name: \"list\") property(List) list_1f9d2a\n\n        out(x: 548, y: 83, name: \"max_diff\") property(Number) max_diff_e3d5b8\n        out(x: 456, y: 97, name: \"min_value\") property(Number) min_value_fddfc4\n        out(x: -142, y: 99, name: \"min_max_diff\") trigger() min_max_diff_1f7c59\n\n        instance(x: -1095, y: 88, name: \"max_node\") Std_k98ojb.List.Max {}\n        list_1f9d2a -> max_node.items\n        max_node.value -> max_diff_e3d5b8\n        instance(x: -1047, y: 118) min_node root.Std_k98ojb.List.Min {}\n        list_1f9d2a -> min_node.items\n        min_node.value -> min_value_fddfc4\n        sub_0c1e65 root.Std_k98ojb.Math.Sub {}\n        max_diff_e3d5b8 -> sub_0c1e65.result\n        min_value_fddfc4 -> sub_0c1e65.first\n    }\n\n    \n\n    instance(x: 101, y: -27) diff_max_min_7f6bb2 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -219, y: 23, name: \"list\") property(List) list_1e3f9d\n\n        out(x: 433, y: 73, name: \"difference\") property(Number) difference_a8b2df\n        out(x: 509, y: -27, name: \"continue\") trigger() continue_d4a6c5\n\n        instance(x: -1141, y: 19) length_9f6d22 root.Std_k98ojb.List.Length {}\n        instance(x: -1088, y: 97) maxitem_e7e2cd root.Std_k98ojb.List.Max {}\n        instance(x: -1025, y: 75) minitem_a1c3ec root.Std_k98ojb.List.Min {}\n        instance(x: -1016, y: 71) sub_8e9a35 root.Std_k98ojb.Math.Sub {}\n        list_1e3f9d -> length_9f6d22.list\n        length_9f6d22.length -> maxitem_e7e2cd.length\n        list_1e3f9d -> minitem_a1c3ec.list\n        length_9f6d22.length -> sub_8e9a35.first\n        0 -> sub_8e9a35.second\n        maxitem_e7e2cd.item -> sub_8e9a35.result\n        minitem_a1c3ec.item -> difference_a8b2df\n        length_9f6d22.length -> continue_d4a6c5.length\n    }\n\n    \n\n    instance(x: 51, y: -29) diff_max_min_4e9d7 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -38, y: 35, name: \"n\") property(Number) n_5f8d9a\n\n        out(x: 1094, y: -31, name: \"output\") property(Bool) output_b7c98e\n\n        instance(x: 23, y: 33) modulo_d3f0eb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 42) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        n_a6cea7 -> modulo_d3f0eb.value\n        2 -> modulo_d3f0eb.divisor\n        modulo_d3f0eb.result -> notequal_7836b4.left\n        0 -> notequal_7836b4.right\n        notequal_7836b4.result -> output_b7c98e\n    }\n\n    \n\n    instance(x: -19, y: -13) is_even_1f5a57 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -525, y: 439, name: \"number\") property(Number) num_5f2d95\n\n        out(x: 1893, y: -210, name: \"output\") property(Bool) output_b9a1cd\n\n        instance(x: -299, y: -205, name: \"is even\") Std.If {\n            input: \"num_5f2d95 % 2 == 0\"\n            then: true\n            else: false\n        }\n        num_5f2d95 -> is_even.input\n        is_even.value -> output_b9a1cd\n    }\n\n    \n\n    instance(x: -68, y: -37) is_even_7c8693 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -43, y: 23, name: \"number\") property(Number) number_6d8a55\n\n        out(x: 1849, y: -10, name: \"output\") property(Bool) output_f5c7b4\n\n        instance(x: -191, y: 35) modulo_0f2e30 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 198, y: 27) equal_c7f2d6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 104, y: 33) isnumeric_b1a3ad root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -193, y: 22) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 195, y: 30) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        modulo_0f2e30.result -> equal_c7f2d6.predicate\n        number_6d8a55 -> modulo_0f2e30.value\n        isnumeric_b1a3ad.is_contained -> not_75283f.input\n        if_07b8c7.else -> output_f5c7b4\n        equal_c7f2d6.result -> output_f5c7b4\n    }\n\n    \n\n    instance(x: -59, y: 16) is_even_1a0e31 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -26, y: 2, name: \"number\") property(Number) num_1f8d0e\n\n        out(x: 1945, y: -205, name: \"output\") property(Bool) output_e4cbb9\n\n        instance(x: -84, y: 6) modulo_d7f3b2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 189, y: 49) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -34, y: -26, name: \"current\") property(Number) current_8d3e4a\n\n            out(x: 1295, y: 23, name: \"output\") property(Bool) output_56f2c6\n\n            instance(x: 224, y: 50) modulo_9bfc77 root.Std_k98ojb.Math.Modulo {}\n            current_8d3e4a -> modulo_9bfc77.value\n            2 -> modulo_9bfc77.divisor\n            modulo_9bfc77.result -> output_56f2c6\n        } -> not_75283f.handler\n        modulo_d7f3b2.result -> not_75283f.input\n        not_75283f.result -> output_e4cbb9\n    }\n\n    \n\n    instance(x: -29, y: 1) is_even_f0e5a8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -28, y: 44, name: \"n\") property(Number) n_5f8e9d\n\n        out(x: 1716, y: 59, name: \"output\") property(Bool) output_85a98c\n\n        instance(x: 123, y: 42) modulo_a2c0b3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 189, y: 58) equal_6c7f9d root.Std_k98ojb.Logic.Equal {}\n        instance(x: -36, y: 59) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 143, y: 56) expression_8e1f5a root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 123, y: 59) if_e19a62 root.Std_k98ojb.Std.If {}\n        modulo_a2c0b3.result -> equal_6c7f9d.left\n        n_5f8e9d -> equal_6c7f9d.right\n        expression_8e1f5a.result -> if_e19a62.predicate\n        if_e19a62.then -> not_75283f\n        not_75283f.input -> output_85a98c\n        modulo_a2c0b3.divisor -> equal_6c7f9d.right\n        n_5f8e9d -> equal_6c7f9d.left\n    }\n\n    \n\n    instance(x: 47, y: -23) is_even_1e4a65 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -57, y: 44, name: \"input\") property(Number) input_5e6d22\n\n        out(x: 1899, y: -21, name: \"output\") property(Bool) output_a2b0a4\n\n        instance(x: 145, y: -23, name: \"transform number to even/odd\") map_e3f2c7 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 91, y: -26, name: \"check for even/odd\") if_0e9a1d root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -32, y: -22, name: \"current\") property(Number) current_5f3c15\n\n            out(x: 1902, y: -19, name: \"output\") property(Bool) output_d4d9a6\n\n            instance(x: 231, y: 50) modulo_e0b8e1 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 215, y: 53) equal_2c7f5d root.Std_k98ojb.Logic.Equal {}\n            current_5f3c15 -> modulo_e0b8e1.value\n            0 -> equal_2c7f5d.right\n            equal_2c7f5d.result -> output_d4d9a6\n            modulo_e0b8e1.result -> equal_2c7f5d.left\n        } -> map_e3f2c7.handler\n        input_5e6d22 -> map_e3f2c7.input\n        if_0e9a1d.execute -> output_a2b0a4\n        0 -> if_0e9a1d.then\n        not(output_d4d9a6) -> if_0e9a1d.else\n    }\n\n    \n\n    instance(x: -69, y: -29) is_even_0fbd41 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: 4, name: \"n\") property(Number) n_5d9a94\n\n        out(x: 1232, y: 69, name: \"output\") property(Bool) output_eb1c0f\n    }\n\n    \n\n    instance(x: 34, y: 61) is_even_7bf3e6 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -535, y: 2, name: \"input\") property(Number) input_5e3a4d\n\n        out(x: 1749, y: -10, name: \"output\") property(Bool) output_bf66c1\n\n        instance(x: 159, y: -212, name: \"check if even\") filter_8f6b2d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 135, y: -205, name: \"transform to bool\") map_d4cd34 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 186, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        list_0b075e -> filter_8f6b2d.items\n        input_5e3a4d -> filter_8f6b2d.value\n        map_d4cd34.handler(input_5e3a4d) -> not_75283f.input\n        not_75283f.result -> output_bf66c1\n    }\n\n    \n\n    instance(x: -63, y: 227) is_even_f9f0b8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"input\") property(Number) input_1d8f0e\n\n        out(x: 1894, y: -10, name: \"output\") property(Bool) output_f6c5a2\n\n        instance(x: 106, y: 17) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 285, y: 49) equal_78c9f1 root.Std_k98ojb.Logic.Equal {}\n        modulo_c76d2b.result -> output_f6c5a2\n        input_1d8f0e -> modulo_c76d2b.value\n        0 -> equal_78c9f1.right\n        input_1d8f0e -> equal_78c9f1.left\n    }\n\n    \n\n    instance(x: -293, y: -5) is_even_7a4dad root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -46, y: 47, name: \"number\") property(Number) num_1a9f0d\n\n        out(x: 1832, y: -10, name: \"output\") property(Bool) output_8b3b4c\n\n        instance(x: -25, y: 69) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 101, y: 64) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        num_1a9f0d -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        notequal_cb8a55.result -> output_8b3b4c\n        modulo_c76d2b.result -> notequal_cb8a55.left\n    }\n\n    \n\n    instance(x: -53, y: -14) is_even_7e5d45 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -261, y: 186, name: \"string\") property(String) input_0\n\n        out(x: 1101, y: 26, name: \"output\") property(Number) output_4c6f1d\n\n        instance(x: 342, y: 22) tolower_e2b5d3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: -193, name: \"map_0e8f9a\") map_0e8f9a = [Std_k98ojb.List, Std_k98ojb.List]\n        instance(x: 234, y: 44) count_a1b4d6 root.Std_k98ojb.Std.Count {}\n        instance(x: 450, y: -186, name: \"first_even\") first_even_6f7e2c root.Std_k98ojb.Iteration.For {}\n        instance(x: 456, y: -180) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        tolower_e2b5d3.output -> map_0e8f9a[0]\n        input_0 -> tolower_e2b5d3.input\n        map_0e8f9a[1] -> count_a1b4d6.list\n        0 -> count_a1b4d6.reset\n        first_even.index -> count_a1b4d6.count\n        count_a1b4d6.count -> first_even.next\n        input_0 -> first_even.item\n        map_0e8f9a[0] -> equal_aabb6e.left\n        tolower_e2b5d3.input -> equal_aabb6e.right\n        equal_aabb6e.result -> first_even.done\n        count_a1b4d6.count -> output_4c6f1d\n    }\n\n    \n\n    instance(x: -221, y: 199) first_repeated_char_f2df43 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -343, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1015, y: 29, name: \"output\") property(Number) output_2d6f1c\n\n        instance(x: 509, y: 57) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -192, y: 83, name: \"index\") index_7a3a66 {}\n        instance(x: 0, y: 59) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 112, y: 69) count_1f9c6d root.Std_k98ojb.Std.Count {}\n        instance(x: -192, y: 97, name: \"char\") char_0b3e95 {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> index_7a3a66.reset\n        1 -> count_1f9c6d.count\n        char_0b3e95 -> count_1f9c6d.value\n        count_1f9c6d.result -> index_7a3a66.index\n        index_7a3a66.item -> output_2d6f1c\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -269, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1054, y: -1, name: \"output\") property(Number) output_e2f8d3\n\n        instance(x: 59, y: 24) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 254, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 420, y: -142, name: \"map\") map_5f3c1a {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> map_5f3c1a.map\n        instance(x: 431, y: -133) count_7bfc6b root.Std_k98ojb.Std.Count {}\n        instance(x: 550, y: 0) if_7c284f root.Std_k98ojb.Std.If {}\n        map_5f3c1a.map -> count_7bfc6b.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> count_7bfc6b.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> map_5f3c1a.predicate\n        instance(x: -231, y: 54) first_repeated_char_4e21d root.Std_k98ojb.Iteration.Find {}\n        map_5f3c1a.map -> first_repeated_char_4e21d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> first_repeated_char_4e21d.predicate\n        map_5f3c1a.map -> first_repeated_char_4e21d.item\n        if_7c284f.then -> output_e2f8d3.value\n    }\n\n    \n\n    instance(x: -287, y: 145) first_repeated_char_f9b6af root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -305, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1095, y: 29, name: \"output\") property(Number) output_b9c1b8\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 264, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_b9c1b8\n        1 -> contains_d42dce.index\n    }\n\n    \n\n    instance(x: -41, y: 155) first_repeated_char_f7f3a6 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -247, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 1121, y: 34, name: \"output\") property(Number) output_ebf5b4\n\n        instance(x: 41, y: 80) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 221, y: -16, name: \"map\") map_6c8f44 root.Std_k98ojb.List.Map {}\n        instance(x: 0, y: 1) filter_5ebd7a root.Std_k98ojb.Iteration.Filter {}\n        tolower_2e1444.output -> map_6c8f44.input\n        input_0 -> tolower_2e1444.input\n        map_6c8f44.output -> filter_5ebd7a.items\n        instance(x: 134, y: -27, name: \"count\") count_5dd3af root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 1) for_065883 root.Std_k98ojb.Std.For {}\n        filter_5ebd7a.output -> for_065883.items\n        instance(x: -104, y: 75) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 134, y: -27) if_7c284f root.Std_k98ojb.Std.If {}\n        count_5dd3af.reset -> for_065883.trigger\n        for_065883.done -> filter_5ebd7a.trigger\n        map_6c8f44.output -> if_7c284f.items\n        instance(x: 0, y: 1) find_first_occurrence root.Std_k98ojb.Iteration.Find {}\n        count_5dd3af.count -> find_first_occurrence.index\n        for_065883.item -> equal_aabb6e.left\n        map_6c8f44.output -> equal_aabb6e.right\n        if_7c284f.execute -> find_first_occurrence.predicate\n        instance(x: 0, y: 1) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: -104, y: 75) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        if_7c284f.result -> notequal_148aeb.left\n        input_0 -> contains_d42dce.input\n        contains_d42dce.contains -> notequal_148aeb.right\n        notequal_148aeb.result -> output_ebf5b4\n    }\n\n    \n\n    instance(x: -292, y: 161) first_repeated_char_9f2e47 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -344, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1243, y: -1, name: \"output\") property(Number) output_ebef81\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 266, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_ebef81\n        tolower_2e1444.output -> contains_d42dce.input\n        \"b\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_ebef81\n    }\n\n    \n\n    instance(x: 90, y: 52) first_repeated_char_f5f7a9 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -343, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 535, y: -2, name: \"output\") property(Any) output_d93f4e\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -105) count_4a66eb root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> count_4a66eb.reset\n        1 -> count_4a66eb.value\n        count_4a66eb.count -> output_d93f4e\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -334, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1293, y: -1, name: \"output\") property(Any) output_4d2c6a\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 346, y: -135, name: \"count\") count_5f9c21 root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> count_5f9c21.reset\n        count_5f9c21.count -> count_5f9c21.value\n    }\n\n    \n\n    instance(x: 111, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -294, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 819, y: -1, name: \"output\") property(Any) output_2d3c31\n\n        instance(x: 47, y: 10) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 221, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 345, y: -101, name: \"count\") Std_k98ojb.Count {} count_1e85a9\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> count_1e85a9.reset\n        1 -> count_1e85a9.count\n        count_1e85a9.done -> output_2d3c31\n        count_1e85a9.item -> output_2d3c31\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> count_1e85a9.reset\n    }\n\n    \n\n    instance(x: -288, y: 188) first_repeated_char_f5dfc6 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -246, y: 176, name: \"string\") property(String) input_0\n\n        out(x: 1053, y: -361, name: \"output\") property(Any) output_b2d8f4\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 393, y: -338, name: \"map\") map_3f44a5 = [new Map, index]\n        instance(x: 340, y: 60) for_065883 root.Std_k98ojb.Std.For {}\n        instance(x: 532, y: -105) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        map_3f44a5 -> output_b2d8f4\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.contains -> equal_aabb6e.left\n        for_065883.items -> equal_aabb6e.right\n        equal_aabb6e.result -> if_7c284f.predicate\n        map_3f44a5.index -> if_7c284f.index\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_f0f1d4 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -434, y: 18, name: \"list\") property(List) list_a8f1d4\n\n        out(x: 504, y: 38, name: \"min\") property(Number) min_6e31c0\n        out(x: 515, y: 17, name: \"second_min\") property(Number) second_min_3b7a41\n\n        instance(x: -109, y: 29) first_smallest_node root.Std_k98ojb.List.Min {}\n        list_a8f1d4 -> first_smallest_node.items\n        first_smallest_node.min -> min_6e31c0\n        instance(x: 310, y: 15) second_smallest_node root.Std_k98ojb.List.Sort {}\n        list_a8f1d4 -> second_smallest_node.items\n        min_6e31c0 -> second_smallest_node.items[1]\n        second_smallest_node.result -> second_min_3b7a41\n    }\n\n    \n\n    instance(x: -35, y: 555) second_smallest_9bcb59 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -434, y: 2, name: \"list\") property(List) list_4d5f8e\n\n        out(x: 0, y: 0, name: \"second_min\") property(Number) second_min_0b15c1\n        instance(x: 426, y: -303) first_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 430, y: -295) second_min_node root.Std_k98ojb.List.Min {}\n        list_4d5f8e -> first_min_node.items\n        first_min_node.min -> second_min_0b15c1\n        second_min_node.reset -> first_min_node.reset\n        list_4d5f8e -> second_min_node.items\n        second_min_node.min -> second_min_0b15c1\n    }\n    \n\n    instance(x: -55, y: 529) second_smallest_7a3b66 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -509, y: 2, name: \"list\") property(List) list_2d9e6a\n        out(x: 246, y: -1, name: \"min2\") property(Number) min2_b3b4c5\n\n        instance(x: 0, y: 0) first_smallest_node root.Std_k98ojb.List.Min {}\n        list_2d9e6a -> first_smallest_node.items\n        first_smallest_node.min -> min_a1f71f\n\n        out(x: -213, y: 28, name: \"min2\") property(Number) min2_b3b4c5\n        instance(x: 0, y: 0) Std.If {\n            input: min_a1f71f < min2_b3b4c5\n        }\n        min_a1f71f -> Std.If.input\n        min2_b3b4c5 -> Std.If.value\n        first_smallest_node.continue -> Std.If.then\n    }\n\n    \n\n    instance(x: -51, y: 530) second_smallest_7a6d66 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -106, y: 2, name: \"list\") property(List) list_9a3d0f\n\n        out(x: 538, y: 39, name: \"min\") property(Number) min_85e56b\n        out(x: 509, y: 19, name: \"second_min\") property(Number) second_min_e4d5c1\n\n        instance(x: -442, y: -105, name: \"index\") trigger() index_b9f2a7\n        list_9a3d0f -> Std_k98ojb.Std.For.index\n        Std_k98ojb.Std.For.next -> Std_k98ojb.Std.For.index\n        Std_k98ojb.Std.For.done -> Std_k98ojb.Std.For.index\n        min_85e56b.value -> second_min_e4d5c1\n    }\n\n    \n\n    instance(x: -15, y: 555) second_smallest_9f8a8f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -454, y: 2, name: \"list\") property(List) list_4d3f66\n\n        out(x: 540, y: 18, name: \"second_min\") property(Number) second_min_9b0f6a\n\n        instance(x: 26, y: 24) first_smallest_node root.Std_k98ojb.List.Min {}\n        list_4d3f66 -> first_smallest_node.items\n        first_smallest_node.min -> min_a1cdd2\n        second_min_node = root.Std_k98ojb.List.Min {}\n\n        instance(x: -113, y: 14, name: \"compare\") Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 33, name: \"getter_7f6c2e\") getter_7f6c2e = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min_a1cdd2\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min_node.min\n        getter_7f6c2e.value -> second_min_9b0f6a\n        compare.then -> setter_1cedb2.execute\n        min_a1cdd2.new_value -> setter_1cedb2.new_value\n        compare.else -> setter_37db7f.execute\n        setter_1cedb2.continue -> second_min_node.continue\n        setter_37db7f.continue -> second_min_node.continue\n    }\n\n    \n\n    instance(x: -174, y: 44) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -246, y: 2, name: \"list\") property(List) list_a6d1e4\n        out(x: 0, y: 155, name: \"min\") property(Number) min_7a8f48\n        out(x: 0, y: 156, name: \"second_min\") property(Number) second_min_b2c5b3\n\n        instance(x: -121, y: 0) count_1e6d4 root.Std_k98ojb.Std.Count {}\n        list_a6d1e4 -> count_1e6d4.items\n        count_1e6d4.reset -> min_7a8f48\n        count_1e6d4.count -> second_min_b2c5b3\n        count_1e6d4.done -> min_7a8f48\n\n        instance(x: 0, y: -114, name: \"first_smallest\") property(Number) first_smallest_e3ff55\n        list_a6d1e4 -> first_smallest_e3ff55\n        Std.IfExpression {\n            expression: \"count_1e6d4.count > 1\"\n        }\n        ifexpression_8c7f5b.first_smallest -> min_7a8f48\n        Std.IfExpression {\n            expression: \"first_smallest_e3ff55 == list_a6d1e4[0]\"\n        }\n        ifexpression_8c7f5b.then -> second_min_b2c5b3\n        first_smallest_e3ff55 -> min_7a8f48\n    }\n\n    \n\n    instance(x: -60, y: 529) second_smallest_9e4d6b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -273, y: 2, name: \"list\") property(List) list_abed4a\n\n        out(x: 446, y: -1, name: \"min_2\") property(Number) min_2_ae9f6d\n        out(x: 445, y: -1, name: \"second_min\") property(Number) second_min_f8f2c5\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        list_abed4a -> count_node.items\n        count_node.reset -> min_2_ae9f6d\n        count_node.count -> second_min_f8f2c5\n        second_min_f8f2c5.value -> second_min_f8f2c5\n        instance(x: 0, y: -101) ifexpression_3a15b4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 1\"\n        }\n        min_2_ae9f6d -> ifexpression_3a15b4.gen_0\n        second_min_f8f2c5 -> ifexpression_3a15b4.gen_1\n    }\n\n    \n\n    instance(x: -45, y: 528) second_smallest_7f23df root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -270, y: 2, name: \"list\") property(List) list_b3d1f6\n\n        out(x: 509, y: -1, name: \"second_min\") property(Number) second_min_9a71c8\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.List.Min {}\n        in(x: -304, y: 12, name: \"first_min\") property(Number) first_min_4f3d14\n\n        list_b3d1f6 -> min_node.items\n        min_node.min -> first_min_4f3d14\n        Std.IfExpression(\n            expression: \"list.length > 1\",\n            then: {\n                instance(x: -105, y: -104) second_smallest_node root.Std_k98ojb.List.GetAt {}\n                list_b3d1f6.length -> second_smallest_node.index\n                first_min_4f3d14 -> second_smallest_node.value\n                Std.IfExpression(\n                    expression: \"list_get_at(index) < first_min\",\n                    then: {\n                        second_smallest_node.value -> second_min_9a71c8\n                    },\n                    else: {\n                        second_min_9a71c8 -> first_min_4f3d14\n                    }\n                )\n            },\n            else: {\n                second_min_9a71c8 -> null\n            }\n        ) -> second_smallest_node.value\n    }\n\n    \n\n    instance(x: -43, y: 533) second_smallest_5b2e63 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -305, y: 0, name: \"list\") property(List) list_abed4a\n        out(x: 503, y: -1, name: \"second_min\") property(Number) second_min_8d85e5\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        in(x: -105, y: 34, name: \"reset\") trigger() reset_4f66b6\n        list_abed4a -> count_node.items\n        count_node.reset -> reset_4f66b6.execute\n        instance(x: 0, y: 29) second_smallest_node root.Std_k98ojb.Iteration.Map {}\n        in(x: -113, y: 34, name: \"index\") property(Number) index_9f6850\n        in(x: -109, y: 44, name: \"value\") property(Number) value_ca79ac\n        instance(x: 89, y: 29) min_node root.Std_k98ojb.Math.Min {}\n        second_smallest_node.handler -> min_node\n        index_9f6850 -> min_node.first\n        value_ca79ac -> min_node.second\n        min_node.result -> second_min_8d85e5\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -303, y: 3, name: \"list\") property(List) list_4e3a6d\n\n        out(x: -219, y: 158, name: \"min\") property(Number) min_ai\n        out(x: -210, y: 71, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 0, y: 0) list_min_node root.Std_k98ojb.List.Min {}\n        list_4e3a6d -> list_min_node.items\n        list_min_node.min -> min_ai\n        out(x: -219, y: 158, name: \"first\") property(Number) first_ai\n\n        instance(x: 0, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        first_ai -> ifexpression_e38995.gen_0\n        min_ai -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> second_min_ai\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        list_4e3a6d.a -> setter_1cedb2.new_value\n        list_4e3a6d.b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        ifexpression_e38995.then -> setter_1cedb2.continue\n        first_ai -> setter_1cedb2.continue\n        list_4e3a6d.b -> setter_37db7f.continue\n    }\n\n    \n\n    instance(x: -174, y: -63) second_smallest_node root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -439, y: 47, name: \"list1\") property(List) list_2e3f6d\n        in(x: -451, y: 62, name: \"list2\") property(List) list_e7b5a4\n\n        out(x: 1169, y: -15, name: \"output\") property(Bool) output_f0cdd1\n\n        instance(x: 219, y: 35) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1008, y: -19) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -28, y: 49, name: \"current\") property(Number) _index_170471\n            in(x: -43, y: 64, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1285, y: 15, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 292, y: 57) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {}\n            getter(x: 184, y: 110, name: \"getter_b280eb\") getter_b280eb = previous\n            setter(x: 651, y: -314, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n            instance(x: 299, y: -23) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n            instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> output_f0cdd1\n            ifexpression_875761.value -> output_f0cdd1\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            list_e7b5a4 -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> output_f0cdd1\n            for_d26972.item -> setter_9d4f1c.new_value\n            list_e7b5a4 -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> contains_32727d.handler\n        list_e7b5a4 -> contains_32727d.list\n        false -> not_75283f.input\n        not_75283f.result -> output_f0cdd1\n    }\n\n    \n\n    instance(x: 14, y: -201) has_common_element_c9e2d3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -146, y: 38, name: \"list1\") property(List) list_5d8e30\n        in(x: -165, y: 10, name: \"list2\") property(List) list_a4a6b3\n\n        out(x: 1057, y: 14, name: \"output\") property(Bool) output_bf1c9c\n\n        instance(x: 227, y: 25) contains_8e0bf5 root.Std_k98ojb.List.Contains {}\n        instance(x: -144, y: 18) list_6a4d64 root.Std_k98ojb.List.Concat {}\n        instance(x: 251, y: 24) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 345, y: 20) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -129, y: 13) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -25, y: 11, name: \"current\") property(Number) _index_8d7e23\n            in(x: -28, y: 64, name: \"_index\") property(Number) _index_9f3c6a\n\n            out(x: 1061, y: 16, name: \"output\") property(Bool) output_5b4bb2\n\n            instance(x: 341, y: 48) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: -137, y: 44) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            _index_9f3c6a -> modulo_c76d2b.value\n            list_a4a6b3 -> filter_c91965.items\n            ifexpression_875761.expression -> map_c73e3b.expression\n        } -> contains_8e0bf5.handler\n        list_a4a6b3 -> contains_8e0bf5.list\n        func() {\n            in(x: -14, y: 12, name: \"current\") property(Number) current_d1c2d9\n\n            out(x: 1057, y: 16, name: \"bool\") property(Bool) bool_4f0e43\n\n            instance(x: 249, y: 24) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: -129, y: 13) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_d1c2d9 -> modulo_ad7b2a.value\n            list_a4a6b3 -> filter_c91965.list\n            ifexpression_875761.value -> bool_4f0e43\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        not_75283f.result -> output_bf1c9c\n    }\n\n    \n\n    instance(x: -143, y: 8) has_common_element_6a5d96 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -489, y: 14, name: \"list1\") property(List) list_9f6e3b\n        in(x: -491, y: -13, name: \"list2\") property(List) list_82a4c8\n\n        out(x: 1207, y: -96, name: \"output\") property(Bool) output_5d9eb1\n\n        instance(x: 275, y: 78) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 442, y: -95) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: 1058, y: -91) filter_d9a6e1 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 216, y: -96) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_9f6e3b -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> filter_d9a6e1.handler\n        list_82a4c8 -> filter_d9a6e1.items\n        filter_d9a6e1.output_list -> not_75283f.list\n        false -> not_75283f.item\n        not_75283f.result -> output_5d9eb1\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -191, y: 23, name: \"list1\") property(List) list_3e0f6d\n        in(x: -208, y: 43, name: \"list2\") property(List) list_0c5a5b\n\n        out(x: 1024, y: -216, name: \"output\") property(Bool) output_19eb44\n\n        instance(x: 123, y: 74) contains_6f1d14 root.Std_k98ojb.List.Contains {}\n        instance(x: 334, y: -21) filter_d2c0a9 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 102, y: 91) map_f7e34d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 69, y: 66) not_8f1c5b root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -42, y: -31, name: \"current\") property(Number) _index_19351\n            in(x: -17, y: 53, name: \"_index\") property(Number) _index_4c9f0d\n\n            out(x: 1032, y: -233, name: \"output\") property(Bool) output_eb6a8e\n\n            instance(x: 199, y: 62) ifexpression_d1df34 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || previous == current\"\n            }\n            getter(x: -23, y: 78, name: \"getter_4c8e35\") getter_4c8e35 = previous\n            setter(x: 345, y: -246, name: \"setter_b5f9c7\") setter_b5f9c7 = previous\n            instance(x: 278, y: -17) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_b5f9c7\") setter_3d6eb1 = previous\n            instance(x: -295, y: -38) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_d1df34.else -> filter_d2c0a9.execute\n            ifexpression_d1df34.value -> output_eb6a8e\n            ifexpression_d1df34.then -> setter_b5f9c7.execute\n            list_3e0f6d -> for_d26972.items\n            for_d26972.item -> ifexpression_d1df34.gen_2\n            for_d26972.index -> ifexpression_d1df34.gen_0\n            getter_4c8e35.value -> ifexpression_d1df34.gen_1\n            for_d26972.onItem -> ifexpression_d1df34.execute\n            for_d26972.done -> filter_d2c0a9.reset\n            for_d26972.item -> setter_b5f9c7.new_value\n            list_3e0f6d -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_3d6eb1.new_value\n            setter_3d6eb1.continue -> for_d26972.reset\n            setter_b5f9c7.continue -> for_d26972.next\n        } -> filter_d2c0a9.handler\n        list_3e0f6d -> map_f7e34d.list\n        map_f7e34d.item -> contains_6f1d14.input\n        false -> contains_6f1d14.is_contained\n        not_8f1c5b.result -> output_eb6a8e\n        contains_6f1d14.output_list -> output_19eb44\n    }\n\n    \n\n    instance(x: 108, y: -193) has_common_element_f2d41f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -484, y: 33, name: \"list1\") property(List) list_0d3a80\n        in(x: -497, y: -215, name: \"list2\") property(List) list_1c9b22\n\n        out(x: 1267, y: -208, name: \"output\") property(Bool) output_ebfef5\n\n        instance(x: 743, y: 89) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 255, y: -21) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -28, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list_0d3a80 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_efbc78\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -505, y: 16, name: \"list1\") property(List) list_57d5a4\n        in(x: -528, y: 53, name: \"list2\") property(List) list_a7f6e3\n\n        out(x: 1280, y: 8, name: \"output\") property(Bool) output_9b1cd4\n\n        instance(x: 266, y: 45) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -44, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 135, y: 60) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -193, y: -13, name: \"current\") property(Number) _index_170471\n            in(x: -18, y: 77, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1239, y: 7, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 103, y: 69) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {}\n            getter(x: -4, y: 86, name: \"getter_b280eb\") getter_b280eb = current\n            setter(x: 344, y: -315, name: \"setter_9d4f1c\") setter_9d4f1c = current\n            instance(x: 231, y: -25) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -7, y: -123, name: \"setter_9d4f1c\") setter_38e107 = current\n            instance(x: -292, y: -36) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> filter_c91965.execute\n            ifexpression_875761.value -> output_efbc78\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            list_a7f6e3 -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            filter_c91965.output_list -> output_efbc78\n            list_a7f6e3 -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> filter_c91965.handler\n        list_a7f6e3 -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_efbc78\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -295, y: 16) has_common_element_9a2bda root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -538, y: -236, name: \"list1\") property(List) list_2d4a5f\n        in(x: -544, y: 18, name: \"list2\") property(List) list_6c3e89\n\n        out(x: 1237, y: -241, name: \"output\") property(Bool) output_e0e85b\n\n        instance(x: 271, y: 53) filter_5d5f1a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 102, y: -248) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 104, y: -255) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        list_2d4a5f -> filter_5d5f1a.items\n        list_6c3e89 -> filter_5d5f1a.items\n        filter_5d5f1a.output_list -> map_c73e3b.list\n        map_c73e3b.expression: \"contains == true\"\n    }\n\n    \n\n    instance(x: -304, y: 57) has_common_element_e9c6ca root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -231, y: 44, name: \"list1\") property(List) list_5d8e4b\n        in(x: -245, y: 67, name: \"list2\") property(List) list_9f3f6c\n\n        out(x: 1140, y: -55, name: \"output\") property(Bool) output_e1a90d\n\n        instance(x: 1024, y: 72) contains_3267e8 root.Std_k98ojb.List.Contains {}\n        instance(x: 341, y: -46) not_equal_6f5c2b root.Std_k98ojb.Logic.NotEqual {}\n        func() {\n            in(x: -22, y: 31, name: \"current\") property(Number) _index_11e71a\n            in(x: -25, y: 81, name: \"_index\") property(Number) _index_b1f2d4\n\n            out(x: 1247, y: 46, name: \"output\") property(Bool) output_e1a90d\n\n            instance(x: 254, y: 39) modulo_9e3c21 root.Std_k98ojb.Math.Modulo {}\n            instance(x: -11, y: 71) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list_5d8e4b -> contains_3267e8.list\n            _index_b1f2d4 -> modulo_9e3c21.divisor\n            contains_3267e8.itemAtIndex -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_e1a90d\n            modulo_9e3c21.result -> notequal_7836b4.left\n            _index_b1f2d4 -> contains_3267e8.index\n        } -> not_equal_6f5c2b.handler\n        list_5d8e4b -> contains_3267e8.items\n        list_9f3f6c -> contains_3267e8.list\n        contains_3267e8.itemAtIndex -> output_e1a90d\n    }\n\n    \n\n    instance(x: -12, y: 56) has_common_element_9b8f6b root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -493, y: 63, name: \"list1\") property(List) list_3e9d6b\n        in(x: -475, y: -194, name: \"list2\") property(List) list_c5f8a4\n\n        out(x: 1017, y: -202, name: \"output\") property(Bool) output_97c1df\n\n        instance(x: 236, y: 93) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 451, y: -204) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -0, y: -11, name: \"current\") property(Number) _index_170471\n            in(x: -31, y: -16, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1057, y: -30, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 220, y: 64) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n            list_3e9d6b -> filter_c91965.items\n            list_c5f8a4 -> filter_c91965.right\n            filter_c91965.output_list -> contains_32727d.list\n            _index_769593 -> contains_32727d.index\n        } -> not_75283f.handler\n        not_75283f.result -> output_efbc78\n        contains_32727d.is_contained -> has_common_element.output\n    }\n\n    \n\n    instance(x: 5, y: -187) has_common_element_9c71ad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -475, y: 22, name: \"list1\") property(List) list_3e2f4b\n        in(x: -494, y: -201, name: \"list2\") property(List) list_a6a5d0\n\n        out(x: 1037, y: -202, name: \"output\") property(Bool) output_1c4a9d\n\n        instance(x: 219, y: 34) filter_d8e2b5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 742, y: -201) contains_f0f6e3 root.Std_k98ojb.List.Contains {}\n        list_3e2f4b -> filter_d8e2b5.items\n        list_a6a5d0 -> filter_d8e2b5.list\n        filter_d8e2b5.output_list -> output_1c4a9d\n    }\n\n    \n\n    instance(x: 17, y: -217) has_common_element_7d3f4b root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -549, y: 19, name: \"list\") property(List) list_6d4a1b\n\n        out(x: 1153, y: -24, name: \"output\") property(Bool) output_b5d7e8\n\n        instance(x: 341, y: 98) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1049, y: 73) getat_4f6c66 root.Std_k98ojb.List.GetAt {}\n        instance(x: -20, y: 87) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_6d4a1b -> for_d26972.items\n        for_d26972.index -> getat_4f6c66.index\n        for_d26972.item -> getat_4f6c66.list\n        0 -> equal_f89569.left\n        for_d26972.next -> equal_f89569.right\n        equal_f89569.result -> output_b5d7e8\n    }\n\n    \n\n    instance(x: -25, y: 138) is_consecutive_e9bfef root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -493, y: 4, name: \"list\") property(List) list_8e5d23\n\n        out(x: 1081, y: -29, name: \"output\") property(Bool) output_ba9c3f\n\n        instance(x: -312, y: 58, name: \"previous\") getat_e3d0af root.Std_k98ojb.List.GetAt {}\n        instance(x: -297, y: 48) less_than_7e4c31 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -284, y: 41) next_5f6a9f root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: 37) reset_8d1f71 root.Std_k98ojb.Std.Reset {}\n        list_8e5d23 -> getat_e3d0af.list\n        0 -> getat_e3d0af.index\n        getat_e3d0af.itemAtIndex -> less_than_7e4c31.left\n        previous.value -> less_than_7e4c31.right\n        next_.trigger -> reset_8d1f71.execute\n        list_8e5d23 -> next_.items\n        1 -> next_.index\n        getat_e3d0af.itemAtIndex -> next_.item\n        reset_8d1f71.continue -> less_than_7e4c31.reset\n        less_than_7e4c31.result -> output_ba9c3f\n    }\n\n    \n\n    instance(x: -44, y: 111) is_consecutive_9bda15 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -475, y: 3, name: \"list\") property(List) list_8a9e35\n\n        out(x: 1141, y: -32, name: \"output\") property(Bool) output_b6d0f4\n\n        instance(x: 751, y: 94) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -16, y: 115) is_equal_3e7c9a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 293, y: 112) subtract_1d0f5e root.Std_k98ojb.Math.Sub {}\n        list_8a9e35 -> for_d26972.items\n        for_d26972.index -> is_equal_3e7c9a.gen_2\n        for_d26972.item -> is_equal_3e7c9a.gen_0\n        subtract_1d0f5e.first -> is_equal_3e7c9a.left\n        1 -> is_equal_3e7c9a.right\n        is_equal_3e7c9a.result -> output_b6d0f4\n    }\n\n    \n\n    instance(x: -20, y: 140) is_consecutive_77a8b2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -536, y: 22, name: \"list\") property(List) list_5f4d2b\n\n        out(x: 1037, y: 49, name: \"output\") property(Bool) output_7cdd94\n\n        instance(x: 760, y: 37) isconsecutives_9f8a0e root.Std_k98ojb.Std.For {}\n        instance(x: -36, y: 47) getat_aebd4d root.Std_k98ojb.List.GetAt {}\n        instance(x: -33, y: 46) sub_1cd7b5 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1082, y: 40) lessThanOrEqual_e58f50 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_5f4d2b -> isconsecutives_9f8a0e.items\n        isconsecutives_9f8a0e.item -> getat_aebd4d.list\n        sub_1cd7b5.first -> getat_aebd4d.index\n        sub_1cd7b5.second -> getat_aebd4d.value\n        lessThanOrEqual_e58f50.left -> sub_1cd7b5.result\n        getat_aebd4d.itemAtIndex -> isconsecutives_9f8a0e.gen_2\n        isconsecutives_9f8a0e.onItem -> isconsecutives_9f8e4c.execute\n        isconsecutives_9f8e4c.done -> output_7cdd94\n    }\n\n    \n\n    instance(x: -46, y: 81) is_consecutive_5e34d3 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -509, y: 3, name: \"list\") property(List) list_6e9a8d\n\n        out(x: 127, y: 94, name: \"output\") property(Bool) output_c1f5c4\n\n        instance(x: 789, y: 93) for_d2b9c3 root.Std_k98ojb.Std.For {}\n        instance(x: -277, y: 100) count_7a6e0d root.Std_k98ojb.Std.Count {}\n        instance(x: -305, y: 96) nextitem_e4f1ad root.Std_k98ojb.List.NextItem {}\n        instance(x: -300, y: 95) previousitem_8f5c22 root.Std_k98ojb.List.PreviousItem {}\n        instance(x: 191, y: 92) greaterthan_f0a9d3 root.Std_k98ojb.Math.GreaterThan {}\n        list_6e9a8d -> for_d2b9c3.items\n        for_d2b9c3.index -> count_7a6e0d.reset\n        for_d2b9c3.item -> nextitem_e4f1ad.new_value\n        previousitem_8f5c22.value -> greaterthan_f0a9d3.left\n        greaterthan_f0d5d5.value -> output_c1f5c4\n    }\n\n    \n\n    instance(x: -31, y: 121) is_consecutive_d2c7e root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -547, y: 2, name: \"list\") property(List) list_6d8a19\n\n        out(x: 1199, y: 4, name: \"output\") property(Bool) output_98e9c7\n\n        instance(x: 755, y: 93) count_1d6f45 root.Std_k98ojb.Std.Count {}\n        instance(x: -29, y: 100) isLessThanOrEqual_8c5a60 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1089, y: 96) subtract_2e4d56 root.Std_k98ojb.Math.Sub {}\n        list_6d8a19 -> count_1d6f45.items\n        count_1d6f45.count -> isLessThanOrEqual_8c5a60.left\n        subtract_2e4d56.first -> isLessThanOrEqual_8c5a60.right\n        isLessThanOrEqual_8c5a60.result -> output_98e9c7\n    }\n\n    \n\n    instance(x: -33, y: 147) is_consecutive_d3fdd0 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -555, y: 33, name: \"list\") property(List) list_4f5e42\n\n        out(x: 1013, y: -34, name: \"output\") property(Bool) output_a9b1db\n\n        instance(x: 732, y: 94) for_d7a51c root.Std_k98ojb.Std.For {}\n        instance(x: -287, y: 120) getat_5d4f66 root.Std_k98ojb.List.GetAt {}\n        instance(x: -278, y: 121) sub_96da0e root.Std_k98ojb.Math.Sub {}\n        instance(x: 124, y: 123) greaterthan_8c2d33 root.Std_k98ojb.Math.GreaterThan {}\n        list_4f5e42 -> for_d7a51c.items\n        for_d7a51c.index -> getat_5d4f66.index\n        getat_5d4f66.itemAtIndex -> sub_96da0e.first\n        sub_96da0e.result -> greaterthan_8c2d33.left\n        1 -> greaterthan_8c2d33.right\n        greaterthan_8c2d33.result -> output_a9b1db\n    }\n\n    \n\n    instance(x: -64, y: 146) is_consecutive_7a4f5 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -567, y: 2, name: \"list\") property(List) list_9d3a5b\n\n        out(x: 1234, y: -93, name: \"output\") property(Bool) output_c7c0eb\n\n        instance(x: 732, y: -94) for_d2f1e8 root.Std_k98ojb.Std.For {}\n        instance(x: -283, y: -97) getat_96d9aa root.Std_k98ojb.List.GetAt {}\n        instance(x: 219, y: -95) lessThanOrEqual_5c6a7b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 245, y: -91) sub_0f77ec root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -96) isnumeric_8d4e23 root.Std_k98ojb.Strings.IsNumeric {}\n        list_9d3a5b -> for_d2f1e8.items\n        for_d2f1e8.index -> getat_96d9aa.index\n        getat_96d9aa.itemAtIndex -> sub_0f77ec.first\n        lessThanOrEqual_5c6a7b.left -> sub_0f77ec.result\n        list_9d3a5b[getat_96d9aa.index + 1] -> isnumeric_8d4e23.input\n        isnumeric_8d4e23.is_contained -> lessThanOrEqual_5c6a7b.input\n    }\n\n    \n\n    instance(x: -34, y: 130) is_consecutive_bf3b0d root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -544, y: 26, name: \"list\") property(List) list_8f4e1d\n\n        out(x: 1205, y: -27, name: \"output\") property(Bool) output_3c9a6b\n\n        instance(x: -315, y: 78, name: \"is_consecutive_list\") filter_d0b2df root.Std_k98ojb.Query.Filter {}\n        instance(x: 234, y: 70, name: \"previous_number\") getat_5e1f7d root.Std_k98ojb.List.GetAt {}\n        instance(x: -314, y: 74) less_than_e9a0ec root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_8f4d1d -> filter_d0b2df.list\n        filter_d0b2df.result -> previous_number.list\n        previous_number.index -> less_than_e9a0ec.left\n        1 -> less_than_e9a0ec.right\n        less_than_e9a0ec.result -> is_consecutive_list.is_contained\n    }\n\n    \n\n    instance(x: -68, y: 120) is_consecutive_4c7f5b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -566, y: 5, name: \"list\") property(List) list_6a9d15\n\n        out(x: 439, y: 28, name: \"output\") property(Bool) output_a8c94e\n\n        instance(x: 761, y: 25) for_d2b7f1 root.Std_k98ojb.Std.For {}\n        instance(x: -27, y: 40, name: \"previous\") getter_5a83eb root.Std_k98ojb.List.GetAt {}\n        instance(x: 295, y: 37) nextitem_8e4c23 root.Std_k98ojb.List.NextItem {}\n        instance(x: -34, y: 32) equal_c7f6d3 root.Std_k98ojb.Logic.Equal {}\n        list_6a9d15 -> for_d2b7f1.items\n        for_d2b7f1.index -> previous.value\n        nextitem_8e4c23.item -> equal_c7f6d3.left\n        0 -> equal_c7f6d3.right\n        equal_c7f6d3.result -> output_a8c94e\n    }\n\n    \n\n    instance(x: -33, y: 14) is_consecutive_9a5f1b root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -473, y: 13, name: \"main_list\") property(List) list_8e2d5b\n        in(x: -481, y: 17, name: \"sublist\") property(List) list_a4a7c1\n\n        out(x: 1193, y: -202, name: \"output\") property(Bool) output_e5f5af\n\n        instance(x: -278, y: -196) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -274, y: -203) filter_c91965 root.Std_k98ojb.Query.Filter {}\n        list_a4a7c1 -> filter_c91965.where\n        is_sublist_6d5a83 -> contains_32727d.item\n    }\n\n    \n\n    instance(x: 15, y: -16) is_sublist_f8f3cd root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -295, y: 15, name: \"main_list\") property(List) list_4f6e98\n        in(x: -304, y: -28, name: \"sublist\") property(List) list_a5a9c7\n\n        out(x: 1041, y: -33, name: \"output\") property(Bool) output_b0d8b3\n\n        instance(x: -192, y: -16, name: \"is_subset\") filter_d2e76f root.Std_k98ojb.Query.Filter {\n            where: \"index < length\"\n        }\n        instance(x: 137, y: -28, name: \"main_list_slice\") slice_5d4a0c root.Std_k98ojb.List.Slice {}\n        instance(x: 236, y: -26) contains_d9f2e6 root.Std_k98ojb.List.Contains {}\n        list_a5a9c7 -> is_subset.list\n        is_subset.result -> main_list_slice.slice\n        list_a5a9c7 -> contains_d9f2e6.item\n        0 -> contains_d9f2e6.index\n        contains_d9f2e6.is_contained -> output_b0d8b3\n    }\n\n    \n\n    instance(x: -63, y: -38) is_sublist_5a4c89 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -474, y: 22, name: \"main_list\") property(List) list_0f1e3b\n        in(x: -495, y: -27, name: \"sublist\") property(List) list_74f6a5\n\n        out(x: 1049, y: -43, name: \"output\") property(Bool) output_4d5a2c\n\n        instance(x: -287, y: -22) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_74f6a5 -> zip_201051.left\n        list_0f1e3b -> zip_201051.right\n        func() {\n            in(x: -451, y: 15, name: \"item\") property(Number) item_9d8c83\n\n            out(x: 1072, y: -24, name: \"result\") property(Bool) result_a3a5b4\n\n            instance(x: -11, y: -23) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            list_74f6a5 -> equal_f89569.left\n            list_0f1e3b -> equal_f89569.right\n            equal_f89569.result -> result_a3a5b4\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_4d5a2c\n    }\n\n    \n\n    instance(x: -261, y: 11) is_sublist_bf8dd9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"main_list\") property(List) list_3a0f6d\n        in(x: -484, y: 20, name: \"sublist\") property(List) list_b1b9f4\n\n        out(x: 1285, y: 2, name: \"output\") property(Bool) output_99e1c8\n\n        instance(x: -93, y: -28) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 104, y: 30) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 179, y: 20) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -24, y: -15, name: \"current\") property(Number) index_8e1a4c\n            in(x: -28, y: 30, name: \"_list\") property(List) list_b1b9f4\n\n            out(x: 1145, y: -23, name: \"continue\") trigger() continue_a96db6\n            out(x: 1217, y: 3, name: \"output\") property(Bool) output_8c0a55\n\n            instance(x: -15, y: -25) isequal_4d0f2e root.Std_k98ojb.Logic.Equal {}\n            list_b1b9f4 -> getat_ce2a48.list\n            index_8e1a4c -> getat_ce2a48.index\n            list_b1b9f4 -> getat_ce2a48.itemAtIndex\n            isequal_4d0f2e.result -> output_8c0a55\n        } -> for_d26972.handler\n        list_b1b9f4 -> contains_32727d.list\n        false -> contains_32727d.is_contained\n        not_75283f.result -> output_99e1c8\n    }\n\n    \n\n    instance(x: -64, y: 57) is_sublist_d2a7aa root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -528, y: 36, name: \"main_list\") property(List) list_5d0a74\n        in(x: -525, y: 23, name: \"sublist\") property(List) list_b1c2eb\n\n        out(x: 1119, y: 4, name: \"output\") property(Bool) output_9e8f1b\n\n        instance(x: 104, y: -47) filter_5a0d3a root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        list_b1c2eb -> filter_5a0d3a.where\n        filter_5a0d3a.result -> output_9e8f1b\n    }\n\n    \n\n    instance(x: -19, y: 81) is_sublist_d2c4bb root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 25, name: \"main_list\") property(List) list_8d3a5b\n        in(x: -303, y: 22, name: \"sublist\") property(List) list_9f2e85\n\n        out(x: 1297, y: 4, name: \"output\") property(Bool) output_e1dd34\n\n        instance(x: -219, y: -20) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_8d3a5b -> zip_201051.left\n        list_9f2e85 -> zip_201051.right\n        func() {\n            in(x: -301, y: 24, name: \"item\") property(Number) item_a7c758\n\n            out(x: 1241, y: 3, name: \"output_list\") property(List) output_list_9d23e4\n\n            instance(x: 136, y: 20) filter_d6f8e5 root.Std_k98ojb.Query.Filter {\n                where: \"index < length\"\n            }\n            list_9f2e85 -> filter_d6f8e5.items\n            filter_d6f8e5.result -> output_list_9d23e4\n        } -> zip_201051.handler\n        is_sublist.output_list -> output_e1dd34\n    }\n\n    \n\n    instance(x: -210, y: 19) is_sublist_f3f2b7 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 14, name: \"main_list\") property(List) list_5e4d65\n        in(x: -454, y: -34, name: \"sublist\") property(List) list_6a8b1c\n\n        out(x: 1233, y: 23, name: \"output\") property(Bool) output_a7dcd0\n\n        instance(x: -219, y: -20) contains_c9e5f2 root.Std_k98ojb.List.Contains {}\n        list_6a8b1c -> contains_c9e5f2.item\n        list_5e4d65 -> contains_c9e5f2.list\n        output_a7dcd0 -> contains_c9e5f2.is_contained\n    }\n\n    \n\n    instance(x: -210, y: 55) is_sublist_6b66c1 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -494, y: 436, name: \"main_list\") property(List) list_4f6e5d\n        in(x: -504, y: -26, name: \"sublist\") property(List) list_0a7a3c\n\n        out(x: 1028, y: 23, name: \"output\") property(Bool) output_e1b49f\n\n        instance(x: -278, y: 459) contains_f2d96e root.Std_k98ojb.List.Contains {}\n        list_0a7a3c -> contains_f2d96e.item\n        list_4f6e5d -> contains_f2d96e.list\n        ifexpression_e1b49f = Std_k98ojb.Std.IfExpression {\n            expression: \"contains_f2d96e.is_contained\"\n        }\n        getter_e1b49f = Std_k98ojb.Std.IfExpression {\n            expression: \"output_e1b49f.value\"\n        }\n        setter_e1b49f = Std_k98ojb.Std.IfExpression {\n            expression: \"output_e1b49f.then\"\n        }\n    }\n\n    \n\n    instance(x: -255, y: 28) is_sublist_6a7e23 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -527, y: 25, name: \"main_list\") property(List) list_9e2f3d\n        in(x: -531, y: 28, name: \"sublist\") property(List) sublist_a8c0a4\n\n        out(x: 1241, y: 5, name: \"output\") property(Bool) output_66b6f4\n\n        instance(x: -289, y: -18) filter_d63d7e root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        list_9e2f3d -> filter_d63d7e.list\n        sublist_a8c0a4 -> filter_d63d7e.where\n        filter_d63d7e.result -> output_66b6f4\n    }\n\n    \n\n    instance(x: -251, y: 40) is_sublist_5da9cd root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 24, name: \"main_list\") property(List) list_6a9f1b\n        in(x: -483, y: -22, name: \"sublist\") property(List) list_a0d7ab\n\n        out(x: 1012, y: -19, name: \"output\") property(Bool) output_8e3c5d\n\n        instance(x: -315, y: -29) for_loop_6a8a23 root.Std_k98ojb.Std.For {}\n        list_a0d7ab -> for_loop_6a8a23.items\n        func() {\n            in(x: -208, y: 19, name: \"index\") property(Number) index_9e5f45\n\n            out(x: 1112, y: -21, name: \"continue\") trigger() continue_7c8d6b\n            out(x: 1003, y: 4, name: \"output\") property(Bool) output_0a6c85\n\n            instance(x: -19, y: 23) ifexpression_9f5e15 root.Std_k98ojb.Std.IfExpression {}\n            for_loop_6a8a23.trigger -> ifexpression_9f5e15.then\n            list_a0d7ab -> ifexpression_9f5e15.value\n            list_6a9f1b -> ifexpression_9f5e15.then\n            index_9e5f45 -> ifexpression_9f5e15.gen_2\n            list_6a9f1b[index_9e5f45] -> output_0a6c85\n        } -> for_loop_6a8a23.handler\n        for_loop_6a8a23.done -> continue_7c8d6b\n    }\n\n    \n\n    instance(x: -291, y: 59) is_sublist_d3dd25 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -209, y: 3, name: \"list\") property(List) list_4d6a30\n        out(x: 0, y: 8, name: \"smallest_missing\") property(Number) smallest_missing_a9b5c7\n\n        instance(x: 191, y: 35) for_loop_2e3f1 root.Std_k98ojb.Std.For {\n            items: list_4d6a30\n            reset: Std_k98ojb.Std.Count.reset\n            next: Std_k98ojb.Std.Count.next\n            on_item: Std_k98ojb.Std.Count.on_item\n            done: Std_k98ojb.Std.Count.done\n        }\n        for_loop_2e3f1.trigger -> SmallestMissing.smallest_missing_node.start\n        list_4d6a30 -> for_loop_2e3f1.items\n        Std_k98ojb.Std.Count.reset -> for_loop_2e3f1.reset\n        Std_k98ojb.Std.Count.next -> for_loop_2e3f1.next\n        Std_k98ojb.Std.Count.on_item -> for_loop_2e3f1.on_item\n        Std_k98ojb.Std.Count.done -> for_loop_2e3f1.done\n        for_loop_2e3f1.item -> SmallestMissing.smallest_missing_node.item\n        ifexpression_e54c6d root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == 0 || it > Std_k98ojb.Std.Count.length(list)\"\n        }\n        getter(x: -21, y: 38, name: \"getter_1f5a8f\") getter_1f5a8f = SmallestMissing.smallest_missing_node\n        ifexpression_e54c6d.then -> SmallestMissing.find_missing_node.start\n        list_4d6a30[0] -> SmallestMissing.find_missing_node.item\n        for_loop_2e3f1.index -> SmallestMissing.find_missing_node.index\n        Std_k98ojb.Std.Count.length(list) -> SmallestMissing.find_missing_node.length\n        ifexpression_e54c6d.then -> SmallestMissing.find_missing_node.execute\n    }\n\n    \n\n    instance(x: -191, y: 58) SmallestMissing_1f8a4e root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -304, y: 0, name: \"list\") property(List) list_3d4e34\n        out(x: 0, y: 2, name: \"smallest_missing\") property(Number) smallest_missing_8c5f1a\n\n        instance(x: 0, y: -11, count_node root.Std_k98ojb.Std.Count {\n            reset: true,\n            trigger: \"count\",\n            items: list_3d4e34\n        }\n        count_node.reset -> false\n        count_node.count -> smallest_missing_8c5f1a\n\n        instance(x: 0, y: -12, for_node root.Std_k98ojb.Std.For {\n            trigger: \"for\",\n            reset: true,\n            items: list_3d4e34,\n            on_item: SmallestMissing.find_smallest_missing\n        }\n        for_node.reset -> false\n        for_node.next -> smallest_missing_8c5f1a\n    }\n\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -105, y: 0, name: \"i\") property(Number) i_b7d2e4\n        in(x: -145, y: 1, name: \"min\") property(Number) min_8a3c5f\n\n        instance(x: 0, y: -13, greaterthan_node root.Std_k98ojb.Math.GreaterThan {\n            left: i_b7d2e4,\n            right: min_8a3c5f\n        }\n        greaterthan_node.result -> false\n    }\n\n    instance(x: -55, y: 0) SmallestMissing_d6d6dd root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -444, y: 2, name: \"list\") property(List) list_8e56a3\n\n        out(x: 10, y: 5, name: \"missing_number\") property(Number) missing_number_4c7f45\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        list_8e56a3 -> count_node.items\n        count_node.reset -> find_smallest_missing.continue\n        find_smallest_missing.start -> count_node.trigger\n        count_node.count -> missing_number_4c7f45\n\n        instance(x: 0, y: 0) for_node root.Std_k98ojb.Std.For {}\n        list_8e56a3 -> for_node.items\n        for_node.reset -> find_smallest_missing.continue\n        find_smallest_missing.start -> for_node.trigger\n        for_node.next -> count_node.next\n        count_node.count -> missing_number_4c7f45\n\n        instance(x: 0, y: 0) ifexpression_8d9e6b root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -444, y: 2, name: \"getter_5eb3a1\") getter_5eb3a1 = missing_number_4c7f45\n        setter(x: 0, y: 2, name: \"setter_9d5b3e\") setter_9d5b3e = missing_number_4c7f45\n        ifexpression_8d9e6b.then -> setter_9d5b3e.execute\n        for_node.item -> ifexpression_8d9e6b.gen_0\n        getter_5eb3a1.value -> missing_number_4c7f45\n        ifexpression_8d9e6b.else -> count_node.reset\n    }\n\n    \n\n    instance(x: -113, y: 129) find_smallest_missing_92db38 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -439, y: 3, name: \"list\") property(List) list_5f6d8e\n        out(x: 0, y: 4, name: \"missing_number\") property(Number) missing_number_0c2a67\n\n        instance(x: 434, y: 27) count_node root.Std_k98ojb.Count {}\n        list_5f6d8e -> count_node.items\n        count_node.reset -> find_smallest_missing.continue\n        count_node.count -> find_smallest_missing.find_count\n        find_smallest_missing.find_count + 1 -> missing_number_0c2a67\n    }\n\n    \n\n    instance(x: -27, y: 542) find_smallest_missing_d3f3df root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -270, y: 2, name: \"list\") property(List) list_a5e4d6\n        out(x: 0, y: 3, name: \"min\") property(Number) min_9f8b65\n\n        instance(x: 0, y: 0) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -105, y: 33, name: \"elem\") property(Number) elem_d1d2e5\n            out(x: 17, y: 44, name: \"bool\") property(Bool) bool_8c9f67\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_d1d2e5 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_8c9f67\n        } -> find_smallest_missing_node.predicate\n        list_a5e4d6 -> find_smallest_missing_node.items\n        find_smallest_missing_node.item -> min_9f8b65\n    }\n\n    \n\n    instance(x: -55, y: 529) find_smallest_missing_f1c869 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -0, y: 0, name: \"list\") property(List) list_8d56e5\n        out(x: 1, y: 0, name: \"missing\") property(Number) missing_b6c9f4\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: -69, y: 38) for_node root.Std_k98ojb.Std.For {}\n        list_8d56e5 -> count_node.items\n        count_node.reset -> for_node.trigger\n        for_node.next -> count_node.count\n        for_node.item -> missing_b6c9f4\n\n        instance(x: -341, y: 69) find_missing_node root.find_missing {}\n\n        func() {\n            in(x: -0, y: 0, name: \"i\") property(Number) i_74e5a1\n            out(x: 1, y: 0, name: \"num\") property(Number) num_4c89d7\n\n            instance(x: 0, y: 0) ifexpression_d2f6d3 root.Std_k98ojb.Std.IfExpression {\n                expression: \"i < list_8d56e5.length\"\n            }\n            i_74e5a1 -> ifexpression_d2f6d3.gen_0\n            list_8d56e5[ifexpression_d2f6d3.gen_1] -> ifexpression_d2f6d3.gen_1\n            num_4c89d7 -> ifexpression_d2f6d3.value\n\n            for_node.trigger -> ifexpression_d2f6d3.execute\n        } -> find_missing_node.predicate\n    }\n\n    \n\n    instance(x: -190, y: 69) find_missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -509, y: 1, name: \"list\") property(List) list_2d0e3f\n\n        out(x: 1, y: -219, name: \"missing\") property(Number) missing_e3a7b6\n        instance(x: 410, y: 19) for_node root.Std_k98ojb.Std.For {\n            trigger: \"start\"\n            reset: \"reset\"\n            next: \"next\"\n            items: list_2d0e3f\n            on item: {\n                in(x: -113, y: 34, name: \"i\") property(Number) i_1e8c31\n                out(x: 514, y: 40, name: \"diff\") property(Number) diff_9b9d35\n\n                instance(x: 0, y: 0) ifexpression_e3a7b6 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"i - (i + 1) == 1\"\n                }\n                getter(x: -144, y: 112, name: \"getter_2d0e3f\") getter_2d0e3f = list_2d0e3f\n                setter(x: 116, y: -268, name: \"setter_e3a7b6\") setter_e3a7b6 = missing_e3a7b6\n                i_1e8c31 -> ifexpression_e3a7b6.gen_0\n                getter_2d0e3f.firstItem -> ifexpression_e3a7b6.gen_1\n                setter_e3a7b6.value -> diff_9b9d35\n                ifexpression_e3a7b6.then -> next.execute\n            }\n            reset: {\n                i_1e8c31 = 0\n            }\n            next: {\n                i_1e8c31 -> i_1e8c31 + 1\n            }\n        } -> for_node.trigger\n    }\n\n    \n\n    instance(x: -55, y: 529) SmallestMissing_2d4a85 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_ai\n        out(x: 1, y: 0, name: \"missing\") property(Number) missing_9d3b8a\n\n        instance(x: 426, y: -303) find_missing_18f5c4 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -908, y: -241, name: \"i\") property(Number) i_ca79ac\n\n            out(x: 1, y: -306, name: \"bool\") property(Bool) bool_af09a7\n            instance(x: 89, y: 29) greaterthan_1088d5 root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 310, y: 35) next_807ffd root.Std_k98ojb.Std.For.Next {}\n            0 -> greaterthan_1088d5.left\n            elem_9f6850 -> greaterthan_1088d5.right\n            i_ca79ac -> greaterthan_1088d5.index\n            greaterthan_1088d5.result -> bool_af09a7\n            next_807ffd.item -> elem_9f6850\n            if (bool_af09a7) {\n                i_ca79ac + 1 -> next_807ffd.next\n            } else {\n                break;\n            }\n        } -> find_missing_18f5c4.predicate\n        list_ai -> find_missing_18f5c4.items\n        find_missing_18f5c4.item -> missing_9d3b8a\n    }\n\n    \n\n    instance(x: -55, y: 529) SmallestMissing_2c856f root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -243, y: 2, name: \"list\") property(List) list_5a6d34\n        out(x: 15, y: 0, name: \"missing\") property(Number) missing_a8f7e4\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        list_5a6d34 -> count_node.items\n        count_node.reset -> find_missing.reset\n        count_node.count -> find_missing.count\n        instance(x: -101, y: 1) for_node root.Std_k98ojb.Std.For {\n            trigger: \"count\", value: count_node.count\n            items: list_5a6d34\n            on item: \"item_i\", value: Std_k98ojb.List.GetAt { index: Std_k98ojb.List.FirstItem(list_5a6d34) }\n            done: \"done_i\"\n        }\n        for_node.next -> find_missing.count\n        instance(x: -245, y: 2) ifexpression_b7e4c9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"item_i == missing_a8f7e4 + count_node.count - 1\"\n        }\n        item_i -> ifexpression_b7e4c9.gen_0\n        missing_a8f7e4 + count_node.count -> ifexpression_b7e4c9.gen_1\n        Std_k98ojb.List.FirstItem(list_5a6d34) -> ifexpression_b7e4c9.gen_2\n        ifexpression_b7e4c9.then -> find_missing.missing\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_f1f8d0 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -445, y: 2, name: \"list\") property(List) list_8d1e9f\n\n        out(x: 0, y: 0, name: \"number\") property(Number) number_a6c5a4\n        instance(x: -123, y: 3) count_node root.Std_k98ojb.Count {}\n        list_8d1e9f -> count_node.items\n        count_node.reset -> find_smallest_missing.continue\n        count_node.count -> find_smallest_missing.number_a6c5a4\n        find_smallest_missing.continue -> count_node.reset\n    }\n\n    \n\n    instance(x: -101, y: 0) smallest_missing_8e9d65 root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1548, y: 22, name: \"input\") property(String) input_4d6f9b\n\n        out(x: 512, y: 0, name: \"output\") property(String) output_2e98c3\n\n        instance(x: 1061, y: 12) replace_d63a66 root.Std_k98ojb.Strings.Replace {}\n        input_4d6f9b -> replace_d63a66.input\n        \",\" -> replace_d63a66.search\n        \".\" -> replace_d63a66.replace\n        \" \" -> replace_d63a66.replace\n        replace_d63a66.result -> output_2e98c3\n    }\n\n    \n\n    instance(x: 69, y: -44) replace_special_chars_a9f7d4 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -164, y: 13, name: \"input\") property(String) input_4f6d1b\n\n        out(x: 544, y: 22, name: \"output\") property(String) output_e2c5a3\n\n        instance(x: 98, y: 9) replace_d3e7ca root.Std_k98ojb.Strings.Replace {}\n        input_4f6d1b -> replace_d3e7ca.input\n        \",.\" -> replace_d3e7ca.search\n        \":\" -> replace_d3e7ca.replace\n        replace_d3e7ca.result -> output_e2c5a3\n    }\n\n    \n\n    instance(x: 114, y: -38) replace_with_colon_85d1ec root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1579, y: 18, name: \"input\") property(String) input_5d2b41\n\n        out(x: 1033, y: 45, name: \"output\") property(String) output_e6c0f1\n\n        instance(x: 74, y: 21) replace_d8a4e9 root.Std_k98ojb.Strings.Replace {}\n        input_5d2b41 -> replace_d8a4e9.input\n        \",\" -> replace_d8a4e9.search\n        \".\" -> replace_d8a4e9.replace\n        \" \" -> replace_d8a4e9.search\n        \":\" -> replace_d8a4e9.replace\n        replace_d8a4e9.result -> output_e6c0f1\n    }\n\n    \n\n    instance(x: 95, y: -60) replace_punctuation_3b5d2b root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1429, y: 16, name: \"input\") property(String) input_0\n\n        out(x: 539, y: -48, name: \"output\") property(String) output_1\n\n        instance(x: 1083, y: 73) replace_d87f28 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d87f28.input\n        \",\" -> replace_d87f28.search\n        \".\" -> replace_d87f28.replace\n        \" \" -> replace_d87f28.replace\n        replace_d87f28.result -> output_1\n    }\n\n    \n\n    instance(x: 93, y: -46) replace_with_colon_a7d3c9 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -150, y: 4, name: \"input\") property(String) input_8e1b9a\n\n        out(x: 525, y: -47, name: \"output\") property(String) output_b1f2d5\n\n        instance(x: 101, y: 12) replace_d6d4c3 root.Std_k98ojb.Strings.Replace {}\n        input_8e1b9a -> replace_d6d4c3.input\n        \",\" -> replace_d6d4c3.search\n        \".\" -> replace_d6d4c3.replace\n        \":\" -> replace_d6d4c3.replace\n        replace_d6d4c3.result -> output_b1f2d5\n    }\n\n    \n\n    instance(x: 74, y: -59) replace_special_chars_7b8e57 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1533, y: 0, name: \"input\") property(String) input_6d8f14\n\n        out(x: 543, y: -53, name: \"output\") property(String) output_9c3b43\n\n        instance(x: 92, y: -67) replace_d2c7a5 root.Std_k98ojb.Strings.Replace {}\n        input_6d8f14 -> replace_d2c7a5.input\n        \",\" -> replace_d2c7a5.search\n        \".\" -> replace_d2c7a5.replace\n        replace_d2c7a5.result -> output_9c3b43\n    }\n\n    \n\n    instance(x: 101, y: -63) replace_punctuation_a8d4e0 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -139, y: 17, name: \"input\") property(String) input_0\n\n        out(x: 439, y: 13, name: \"output\") property(String) output_2d4a7f\n\n        instance(x: 101, y: 29) replace_9b8c66 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_9b8c66.input\n        \",.\" -> replace_9b8c66.search\n        \":\" -> replace_9b8c66.replace\n        replace_9b8c66.result -> output_2d4a7f\n    }\n\n    \n\n    instance(x: -121, y: 24) replace_with_colon_ae1d3 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1135, y: 18, name: \"input\") property(String) input_4d8f1e\n\n        out(x: 341, y: 72, name: \"output\") property(String) output_e45c43\n\n        instance(x: 74, y: -76) replace_2b7ca9 root.Std_k98ojb.Strings.Replace {}\n        input_4d8f1e -> replace_2b7ca9.input\n        \",\" -> replace_2b7ca9.search\n        \".\" -> replace_2b7ca9.replace\n        \" \" -> replace_2b7ca9.search\n        \":\" -> replace_2b7ca9.replace\n        replace_2b7ca9.result -> output_e45c43\n    }\n\n    \n\n    instance(x: -105, y: 38) replace_punctuation_4a5d34 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -173, y: 12, name: \"input\") property(String) input_4e5a1d\n\n        out(x: 341, y: -43, name: \"output\") property(String) output_9c8f6b\n\n        instance(x: 92, y: -56) replace_3e2aa7 root.Std_k98ojb.Strings.Replace {}\n        input_4e5a1d -> replace_3e2aa7.input\n        \",\" -> replace_3e2aa7.search\n        \".\" -> replace_3e2aa7.replace\n        \":\" -> replace_3e2aa7.replace\n        replace_3e2aa7.result -> output_9c8f6b\n    }\n\n    \n\n    instance(x: -92, y: 46) replace_special_chars_ea4d4a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1298, y: 20, name: \"input\") property(String) input_0\n\n        out(x: 539, y: -19, name: \"output\") property(String) output_1f3d6a\n\n        instance(x: 74, y: 22) replace_d4e7b5 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d4e7b5.input\n        \",\" -> replace_d4e7b5.search\n        \".\" -> replace_d4e7b5.replace\n        \" \" -> replace_d4e7b5.replace\n        replace_d4e7b5.result -> output_1f3d6a\n    }\n\n    \n\n    instance(x: 89, y: -11) replace_special_chars_e9c2ad root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in a string are the same.\") is_all_same {\n        in(x: -44, y: 22, name: \"input\") property(String) input_8d1f9b\n\n        out(x: 1314, y: -24, name: \"output\") property(Bool) output_a2a0e3\n\n        instance(x: -92, y: 26) ifexpression_7c6d15 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current\"\n        }\n        getter(x: 333, y: 63, name: \"getter_95f2a1\") getter_95f2a1 = previous\n        setter(x: -0, y: -113, name: \"setter_4b6c67\") setter_4b6c67 = previous\n        instance(x: -273, y: 22) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 74, y: 24) setter_95f2a1 = previous\n        instance(x: -0, y: 31) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7c6d15.then -> setter_4b6c67.execute\n        input_8d1f9b -> for_d26972.items\n        for_d26972.item -> ifexpression_7c6d15.gen_2\n        for_d26972.index -> ifexpression_7c6d15.gen_0\n        getter_95f2a1.value -> ifexpression_7c6d15.gen_1\n        for_d26972.onItem -> ifexpression_7c6d15.execute\n        for_d26972.done -> setter_4b6c67.continue\n        setter_4b6c67.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 13, y: -99) is_all_same_f5a8e3 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in the given string are same or not.\") is_all_same {\n        in(x: -255, y: 28, name: \"string\") property(String) str_0f9a6d\n\n        out(x: 1085, y: 8, name: \"output\") property(Bool) output_b7e4b3\n\n        instance(x: 235, y: 25) length_33c1cd root.Std_k98ojb.List.Length {}\n        instance(x: -142, y: 63) for_0f6a2d root.Std_k98ojb.Std.For {}\n        instance(x: 193, y: 69) if_e9e7b4 root.Std_k98ojb.Std.If {}\n        instance(x: 102, y: 72) tolower_1c3d95 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -192, y: 76) contains_d2f1ec root.Std_k98ojb.List.Contains {}\n        instance(x: 173, y: 80) not_75283f root.Std_k98ojb.Logic.Not {}\n    }\n\n    \n\n    instance(x: 47, y: 10) is_all_same_c9d7e5 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_all_same {\n        in(x: -27, y: 47, name: \"input\") property(String) input_1a8f38\n\n        out(x: 1929, y: -25, name: \"output\") property(Bool) output_e7c2d4\n\n        instance(x: 100, y: 19) tolower_f5b0ea root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 247, y: 58) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: -15, y: 21) replace_c3e6a1 root.Std_k98ojb.Strings.Replace {}\n        list_0b075e -> tolower_f5b0ea.input\n        input_1a8f38 -> contains_32727d.search\n        replace_c3e6a1.search -> contains_32727d.contains\n        replace_c3e6a1.replace -> output_e7c2d4\n        tolower_f5b0ea.value -> is_all_same.predicate\n    }\n\n    \n\n    instance(x: 41, y: -177) is_all_same_9f8f14 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -255, y: 34, name: \"string\") property(String) string_9f2a5e\n\n        out(x: 1213, y: 42, name: \"output\") property(Bool) output_e4d23b\n\n        instance(x: -64, y: 45) tolower_6cd7c1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 261, y: 50) isnumeric_8a77f2 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 420, y: 53) ifexpression_3f5e9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current\"\n        }\n        getter(x: -38, y: 76, name: \"getter_f7d4c1\") getter_f7d4c1 = previous\n        setter(x: 594, y: 63, name: \"setter_93a6b9\") setter_93a6b9 = previous\n        instance(x: -91, y: 51) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -34, y: 58, name: \"setter_f7d4c1\") setter_f7d4c1 = previous\n        instance(x: -278, y: 46) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_3f5e9d.else -> output_e4d23b\n        ifexpression_3f5e9d.value -> output_e4d23b\n        ifexpression_3f5e9d.then -> setter_93a6b9.execute\n        string_9f2a5e -> for_d26972.items\n        for_d26972.item -> ifexpression_3f5e9d.gen_2\n        for_d26972.index -> ifexpression_3f5e9d.gen_0\n        getter_f7d4c1.value -> ifexpression_3f5e9d.gen_1\n        for_d26972.onItem -> ifexpression_3f5e9d.execute\n        for_d26972.done -> output_e4d23b\n        for_d26972.item -> setter_f7d4c1.new_value\n        string_9f2a5e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_93a6b9.new_value\n        tolower_6cd7c1.result -> isnumeric_8a77f2.left\n        string_9f2a5e -> isnumeric_8a77f2.right\n        isnumeric_8a77f2.is_contained -> output_e4d23b\n    }\n\n    \n\n    instance(x: 21, y: -186) all_characters_same_d2c43b root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -235, y: 5, name: \"s\") property(String) s_3a4d41\n\n        out(x: 1012, y: -205, name: \"output\") property(Bool) output_e1f7e6\n\n        instance(x: -45, y: -198) islower_f0a8c5 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 157, y: -194) tolower_9d3a2b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 274, y: -191) same_7e8fca root.Std_k98ojb.Logic.Equal {}\n        s_3a4d41 -> islower_f0a8c5.input\n        tolower_9d3a2b.result -> islower_f0a8c5.value\n        islower_f0a8c5.value -> same_7e8fca.left\n        s_3a4d41 -> same_7e8fca.right\n    }\n\n    \n\n    instance(x: 52, y: -186) is_all_same_2b9d6b root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same_char {\n        in(x: -475, y: 31, name: \"string\") property(String) string_2a5f1d\n\n        out(x: 1253, y: -10, name: \"output\") property(Bool) output_4e8e0b\n\n        instance(x: -242, y: 40) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 261, y: 38) islower_5a7c32 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 388, y: 42) tolower_3d4dd8 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -82, y: 55) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 115, y: 57) compare_6c23f2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == j\"\n        }\n        getter(x: 304, y: -20) getter_b280eb = string_2a5f1d.charAt(i)\n        setter(x: 599, y: -18) setter_9d4f1c = string_2a5f1d.charAt(i)\n        instance(x: 272, y: 61) if_e19a62 root.Std_k98ojb.Std.If {}\n        length_6e87f2.length -> for_d26972.items\n        for_d26972.item -> compare_6c23f2.gen_0\n        for_d26972.index -> compare_6c23f2.gen_1\n        getter_b280eb.value -> compare_6c23f2.gen_2\n        string_2a5f1d.length -> length_6e87f2.list\n    }\n\n    \n\n    instance(x: 46, y: -4) is_same_char_7a0c3b root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in the string are same or not.\") is_same_char {\n        in(x: -191, y: 55, name: \"string\") property(String) str_6f3d33\n\n        out(x: 1038, y: 53, name: \"output\") property(Bool) output_e0a1eb\n\n        instance(x: -28, y: 73) length_4c4e2b root.Std_k98ojb.List.Length {}\n        instance(x: 234, y: 50) islower_a3f8d7 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 449, y: 55) tolower_d6e9a1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -34, y: 66) contains_0e5c71 root.Std_k98ojb.List.Contains {}\n        is_same_char -> output_e0a1eb\n    }\n\n    \n\n    instance(x: 17, y: 11) is_same_char_d4f9d3 root.main.is_same_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_characters_same {\n        in(x: -245, y: 33, name: \"string\") property(String) string_5f2d4e\n\n        out(x: 1123, y: 13, name: \"output\") property(Bool) output_e8b3a1\n\n        instance(x: 78, y: 66) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -21, y: 29) islower_5b7c38 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 249, y: 11) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 444, y: 17) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: -176, y: 26) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        length_6e87f2.length -> islower_5b7c38.value\n        string_5f2d4e -> islower_5b7c38.input\n        contains_32727d.is_contained -> if_e19a62.predicate\n        all_characters_same_1fbb0d.output_list -> if_e19a62.execute\n    }\n\n    \n\n    instance(x: 46, y: -174) all_characters_same_1fbb0d root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -243, y: 55, name: \"string\") property(String) string_0aee42\n\n        out(x: 1211, y: 51, name: \"output\") property(Bool) output_b5f8d4\n\n        instance(x: -43, y: 57) tolower_c6c3e9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 216, y: 50) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        instance(x: 361, y: 53) ifexpression_e1fbb5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current\"\n        }\n        getter(x: -22, y: 64, name: \"getter_3e0d66\") getter_3e0d66 = previous\n        setter(x: 425, y: -275, name: \"setter_e2a4b6\") setter_e2a4b6 = previous\n        instance(x: 269, y: 65) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -176, name: \"setter_e2a4b6\") setter_3e0d66 = previous\n        instance(x: -287, y: -27) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e1fbb5.else -> output_b5f8d4\n        ifexpression_e1fbb5.value -> output_b5f8d4\n        ifexpression_e1fbb5.then -> setter_e2a4b6.execute\n        string_0aee42 -> for_d26972.items\n        for_d26972.item -> ifexpression_e1fbb5.gen_2\n        for_d26972.index -> ifexpression_e1fbb5.gen_0\n        getter_3e0d66.value -> ifexpression_e1fbb5.gen_1\n        for_d26972.onItem -> ifexpression_e1fbb5.execute\n        for_d26972.done -> output_b5f8d4\n        for_d26972.item -> setter_e2a4b6.new_value\n        string_0aee42 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_3e0d66.new_value\n        ifexpression_e1fbb5.execute -> output_b5f8d4.continue\n        for_d26972.reset -> output_b5f8d4.continue\n        setter_e2a4b6.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 21, y: -159) all_same_9c0e3f root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -20, y: 18, name: \"string\") property(String) string_3e4d33\n\n        out(x: 1219, y: 64, name: \"output\") property(Bool) output_7f6c35\n\n        instance(x: 59, y: 77) tolower_8a66ea root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -174, y: 46) isnumeric_f0dfc9 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 108, y: 64) count_2f6e34 root.Std_k98ojb.Std.Count {}\n        tolower_8a66ea.value -> isnumeric_f0dfc9\n        string_3e4d33 -> tolower_8a66ea.input\n        isnumeric_f0dfc9.is_contained -> count_2f6e34.list\n        count_2f6e34.count -> output_7f6c35\n    }\n\n    \n\n    instance(x: 21, y: -13) all_characters_same_e5b8d4 root.main.all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 3, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 1, y: 0) strings_length_node root.Std_k98ojb.List.Length {}\n        string_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n\n        instance(x: -214, y: -471) strings_to_numbers_node root.Std_k98ojb.Iteration.Map {\n            handler: \"it => Std_k98ojb.Math.Floor(it)\"\n        }\n        strings_to_numbers_node.items -> strings_length_node.value\n        strings_to_numbers_node.output_list -> count_digits_8f0a9c\n\n        instance(x: 100, y: -474) count_digits_8f0a9c root.main.count_digits {}\n        string_ai -> count_digits_8f0a9c.string\n        count_digits_8f0a9c.result -> result_ai\n    }\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -222, name: \"result\") property(Number) result_ai\n\n        instance(x: 50, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 40, y: -237) strings_to_numbers_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -228, name: \"result\") property(Number) result_ai\n\n        instance(x: 80, y: 70) math_length_node root.Std_k98ojb.List.Length {}\n        input_ai -> math_length_node.input\n        math_length_node.length -> result_ai\n        10 -> math_length_node.value\n    }\n\n    \n    instance(x: -38, y: -245, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: -317) strings_length_node root.Std_k98ojb.Strings.Length {}\n        string_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 264, y: -466, name: \"count_digits\") count_5f0d42 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -218, name: \"result\") property(Number) result_ai\n\n        instance(x: 9, y: 2) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 0, y: -240, name: \"count_digits\") count_93f8d4 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 2, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 13, y: -456) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 266, y: -303) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 0) list_gen_node root.Std_k98ojb.List.GenerateRange {}\n        input_ai -> list_gen_node.from\n        10 -> list_gen_node.to\n        list_gen_node.list -> digits_list_2d1e8c\n        function(x: Number) Strings.Characters() {\n            return String(x).Characters()\n        }\n        for each char in digits_list_2d1e8c {\n            if Strings.IsNumeric(char) {\n                count_ai += 1\n            }\n        }\n        result_ai -> count_ai\n    }\n\n    \n    instance(x: -42, y: -316, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 14, y: -47) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 2, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 1, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 5, y: -395) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: -245, y: -430) strings_to_numbers_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 1, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 13, y: -247) strings_length_node root.Std_k98ojb.Strings.Length {}\n        string_ai -> strings_length_node.input\n        strings_length_node.value -> count_ai\n    }\n\n    \n    instance(x: 11, y: -457, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 150, name: \"n\") property(Number) n_2e4d3b\n\n        out(x: 1039, y: -1, name: \"output\") property(Number) output_7fbd5c\n\n        instance(x: 0, y: 0) sum_fourth_power_0 root.Std_k98ojb.Std.If\n        func() {\n            in(x: -222, y: 95, name: \"i\") property(Number) i_6a3d2e\n\n            out(x: 1039, y: -1, name: \"output\") property(Number) output_a5c71f\n\n            instance(x: 0, y: 95, name: \"sum\") expression_8b4df9 root.Std_k98ojb.Math.Expression {\n                expression: \"i * (i + 1)^3\"\n            }\n            instance(x: -22, y: 83) modulo_f2aef5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 0, y: 90) add_87c7f6 root.Std_k98ojb.Math.Add {}\n            instance(x: 1, y: 97) div_9e95d3 root.Std_k98ojb.Math.Div {}\n            setter(x: -194, y: 81, name: \"setter_f2aef5\") setter_f2aef5 = sum\n            setter(x: 0, y: 100, name: \"setter_8b4df9\") setter_8b4df9 = sum\n            getter(x: 0, y: 103, name: \"getter_a5c71f\") getter_a5c71f = sum\n            instance(x: -194, y: 83) floor_f2aef5 root.Std_k98ojb.Math.Floor {}\n            1 -> modulo_f2aef5.divisor\n            modulo_f2aef5.result -> add_87c7f6.first\n            1 -> div_9e95d3.second\n            div_9e95d3.result -> expression_8b4df9.gen_0\n            0 -> setter_f2aef5.new_value\n            setter_f2aef5.continue -> sum_fourth_power_0.execute\n            sum_fourth_power_0.else -> output_a5c71f.execute_cdac2a\n            expression_8b4df9.result -> getter_a5c71f\n        } -> sum_fourth_power_0.predicate\n        n_2e4d3b -> i_6a3d2e\n        i_6a3d2e -> expression_8b4df9.gen_1\n    }\n\n    \n\n    instance(x: -189, y: 157) sum_fourth_power_7f65d5 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -345, y: 168, name: \"n\") property(Number) n_4a6b9\n\n        out(x: 12150, y: -369, name: \"output\") property(Number) output_a5d8e3\n\n        instance(x: 0, y: 0) find_7f1c9 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -212, y: 81, name: \"elem\") property(Number) elem_c4bb34\n\n            out(x: 1170, y: 88, name: \"bool\") property(Bool) bool_9c5f2a\n\n            instance(x: 108, y: 79) modulo_8d4b21 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 414, y: 85) equal_1e0e3d root.Std_k98ojb.Logic.Equal {}\n            elem_c4bb34 -> modulo_8d4b21.value\n            2 -> modulo_8d4b21.divisor\n            modulo_8d4b21.result -> equal_1e0e3d.left\n            1 -> equal_1e0e3d.right\n            equal_1e0e3d.result -> bool_9c5f2a\n        } -> find_7f1c9.predicate\n        func() {\n            in(x: -212, y: 81, name: \"elem\") property(Number) elem_c4bb34\n\n            out(x: 1170, y: 88, name: \"bool\") property(Bool) bool_9c5f2a\n\n            instance(x: 108, y: 79) modulo_8d4b21 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 78) notequal_4e0db1 root.Std_k98ojb.Logic.NotEqual {}\n            elem_c4bb34 -> modulo_8d4b21.value\n            2 -> modulo_8d4b21.divisor\n            modulo_8d4b21.result -> notequal_4e0db1.left\n            1 -> notequal_4e0db1.right\n            notequal_4e0db1.result -> bool_9c5f2a\n        } -> find_7f1c9.predicate\n        list_09fcba -> find_7f1c9.items\n        func() {\n            in(x: -212, y: 81, name: \"elem\") property(Number) elem_c4bb34\n\n            out(x: 1170, y: 88, name: \"bool\") property(Bool) bool_9c5f2a\n\n            instance(x: 108, y: 79) modulo_8d4b21 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 420, y: 78) equal_1e0e3d root.Std_k98ojb.Logic.Equal {}\n            elem_c4bb34 -> modulo_8d4b21.value\n            2 -> modulo_8d4b21.divisor\n            modulo_8d4b21.result -> equal_1e0e3d.left\n            1 -> equal_1e0e3d.right\n            equal_1e0e3d.result -> bool_9c5f2a\n        } -> find_7f1c9.predicate\n        func() {\n            in(x: -212, y: 81, name: \"elem\") property(Number) elem_c4bb34\n\n            out(x: 1170, y: 88, name: \"bool\") property(Bool) bool_9c5f2a\n\n            instance(x: 108, y: 79) modulo_8d4b21 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 420, y: 78) notequal_4e0db1 root.Std_k98ojb.Logic.NotEqual {}\n            elem_c4bb34 -> modulo_8d4b21.value\n            2 -> modulo_8d4b21.divisor\n            modulo_8d4b21.result -> notequal_4e0db1.left\n            1 -> notequal_4e0db1.right\n            notequal_4e0db1.result -> bool_9c5f2a\n        } -> find_7f1c9.predicate\n        func() {\n            in(x: -212, y: 81, name: \"elem\") property(Number) elem_c4bb34\n\n            out(x: 1170, y: 88, name: \"bool\") property(Bool) bool_9c5f2a\n\n            instance(x: 108, y: 79) modulo_8d4b21 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 420, y: 78) equal_1e0e3d root.Std_k98ojb.Logic.Equal {}\n            elem_c4bb34 -> modulo_8d4b21.value\n            2 -> modulo_8d4b21.divisor\n            modulo_8d4b21.result -> equal_1e0e3d.left\n            1 -> equal_1e0e3d.right\n            equal_1e0e3d.result -> bool_9c5f2a\n        } -> find_7f1c9.predicate\n        instance(x: -202, y: -236) power_4b8dd6 root.Std_k98ojb.Math.Pow {}\n        instance(x: 108, y: 79) modulo_8d4b21 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 414, y: 78) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        modulo_8d4b21.result -> power_4b8dd6.first\n        2 -> power_4b8dd6.y\n        power_4b8dd6.result -> add_88bb8a.first\n        4 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        floor_61b38d.output -> div_547f34.first\n        1 -> div_547f34.second\n        div_547f34.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> continue_d9efd7\n        setter_375321.continue_d9efd7 -> continue_d9efd7\n        getter_38583a.value -> output_a5d8e3\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_f2f77b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -282, y: 169, name: \"n\") property(Number) n_3d9f4a\n\n        out(x: 1946, y: -269, name: \"sum\") property(Number) sum_e0b7c5\n\n        instance(x: 70, y: -341) mul_f2e1ac root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 388, y: 163) data_6d3f8a  = 4\n        instance(x: 43, y: 165) pow_ea0d4c root.Std_k98ojb.Math.Pow {}\n        instance(x: -64, y: 251) modulo_1e9e2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 304, y: 265) add_7f8ad5 root.Std_k98ojb.Math.Add {}\n        instance(x: 94, y: 269) div_59d3c6 root.Std_k98ojb.Math.Div {}\n        setter(x: -234, y: -341, name: \"setter_1a0e23\") setter_1a0e23 = sum\n        setter(x: 878, y: -306, name: \"setter_7f8d77\") setter_7f8d77 = sum\n        getter(x: 906, y: -270, name: \"getter_6c3c44\") getter_6c3c44 = sum\n        instance(x: -222, y: -289) floor_e74a59 root.Std_k98ojb.Math.Floor {}\n        3 -> mul_f2e1ac.second\n        data_6d3f8a -> pow_ea0d4c.first\n        3 -> div_59d3c6.second\n        div_59d3c6.result -> sum_e0b7c5.n_3d9f4a\n        0 -> setter_1a0e23.new_value\n        setter_1a0e23.continue -> ifexpression_d93eb2.execute\n        ifexpression_d93eb2.then -> setter_7f8d77.execute\n        sum_e0b7c5.continue_d9efd7 -> setter_1a0e23.execute_cdac2a\n        sum_e0b7c5.output_732a8a -> add_7f8ad5.second\n        add_7f8ad5.result -> setter_7f8d77.new_value\n        setter_7f8d77.continue -> continue_d9efd7\n        getter_6c3c44.value -> output_e0b7c5\n        n_3d9f4a -> floor_e74a59.input\n        floor_e74a59.output -> modulo_1e9e2.value\n        floor_e74a59.output -> ifexpression_d93eb2.gen_0\n    }\n\n    \n\n    instance(x: -269, y: 179) sum_fourth_power_bf7d21 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 164, name: \"n\") property(Number) n_1b3f4d\n\n        out(x: 800, y: 7, name: \"sum\") property(Number) sum_ea8f2c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b9e3db\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_a1d6a5\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_b9e3db -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_a1d6a5\n        } -> find_6d05b0.predicate\n        list_empty_6d4f38 -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b9e3db\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_a1d6a5\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b9e3db -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_a1d6a5\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b9e3db\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_a1d6a5\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_b9e3db -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_a1d6a5\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b9e3db\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_a1d6a5\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b9e3db -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_a1d6a5\n        } -> find_6d05b0.predicate\n        list_empty_6d4f38 -> sum_fourth_power.output_ebef81\n        instance(x: -194, y: 83) power_f87c76 root.Std_k98ojb.Math.Pow {}\n        instance(x: 112, y: 80) add_88bb8a root.Std_k98ojb.Math.Add {}\n        list_empty_6d4f38 -> power_f87c76.input\n        power_f87c76.y -> sum_fourth_power.output_ebef81\n        find_6d05b0.item -> power_f87c76.first\n        find_6d05b0.item -> add_88bb8a.first\n        add_88bb8a.result -> sum_fourth_power.output_ebef81\n    }\n\n    \n\n    instance(x: -292, y: 179) sum_fourth_power_9dd1f2 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -294, y: 0, name: \"n\") property(Number) n_4e3b2\n\n        out(x: 1296, y: -1, name: \"sum\") property(Number) sum_f0f8d5\n\n        instance(x: 47, y: 30) ifexpression_35a7c9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 45, y: -213, name: \"sum\") expression_1f2d3e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4\"\n        }\n        instance(x: 68, y: -221) add_9a6c7b root.Std_k98ojb.Math.Add {}\n        instance(x: 95, y: -248) div_5f8d0e root.Std_k98ojb.Math.Div {}\n        instance(x: 69, y: -186) modulo_d2f1d4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 96, y: -249) floor_6b9a15 root.Std_k98ojb.Math.Floor {}\n        instance(x: 71, y: -221) notequal_0c869e root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 64, y: -187) equal_b5f7aa root.Std_k98ojb.Logic.Equal {}\n        2 -> modulo_d2f1d4.divisor\n        sum_f0f8d5.result -> add_9a6c7b.first\n        2 -> div_5f8d0e.second\n        div_5f8d0e.result -> expression_1f2d3e.value\n        notequal_0c869e.result -> equal_b5f7aa.left\n        0 -> equal_b5f7aa.right\n        equal_b5f7aa.result -> sum_f0f8d5\n        n_4e3b2 -> floor_6b9a15.input\n        floor_6b9a15.output -> div_5f8d0e.first\n        floor_6b9a15.output -> modulo_d2f1d4.value\n        floor_6b9a15.output -> ifexpression_35a7c9.gen_0\n    }\n\n    \n\n    instance(x: -233, y: 167) sum_fourth_power_5e38c root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -288, y: 140, name: \"n\") property(Number) n_6b655b\n\n        out(x: 571, y: 7, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        instance(x: -202, y: -236) power_4d5c62 root.Std_k98ojb.Math.Pow {}\n        4 -> power_4d5c62.exponent\n        current_afd5b1 -> power_4d5c62.base\n        power_4d5c62.result -> sum_fourth_power.n_6b655b\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -305, y: 165, name: \"n\") property(Number) n_2d6da6\n\n        out(x: 1124, y: -347, name: \"sum\") property(Number) sum_7fdd8e\n\n        instance(x: 85, y: 134) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 533, y: 142) pow_2d0c6 root.Std_k98ojb.Math.Pow {}\n        instance(x: -40, y: 29, name: \"First odd number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First odd number_0b1361``.predicate\n        list_09fcba -> ``First odd number_0b1361``.items\n        find_de624f.item -> mul_f892a4.first\n        ``First odd number_0b1361``.item -> mul_f892a4.second\n        pow_2d0c6.result -> sum_7fdd8e\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_e37c5 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -345, y: 167, name: \"n\") property(Number) n_3d5a8\n\n        out(x: 1056, y: -1, name: \"output\") property(Number) output_2b9c21\n\n        instance(x: 88, y: 140) mul_f7e14f root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: 135) ifexpression_e5d95a root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 80, y: -442) modulo_1c7f6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -329) add_8a55c5 root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -123) pow_f2d4ac root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        3 -> pow_f2d4ac.exponent\n        10 -> modulo_1c7f6e.divisor\n        mul_f7e14f.result -> add_8a55c5.first\n        add_8a55c5.result -> pow_f2d4ac.value\n        pow_f2d4ac.result -> div_547f34.first\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_e5d95a.execute\n        ifexpression_e5d95a.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_e5d95a.else -> sum_fourth_power.execute_cdac2a\n        sum_fourth_power.continue_d9efd7 -> setter_375321.execute\n        sum_fourth_power.output_732a8a -> add_8a55c5.second\n        add_8a55c5.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_2b9c21\n        n_3d5a8 -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_1c7f6e.value\n        floor_61b38d.output -> ifexpression_e5d95a.gen_0\n    }\n\n    \n\n    instance(x: -176, y: 529) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -282, y: 142, name: \"n\") property(Number) n_2a6e8d\n\n        out(x: 1155, y: 135, name: \"sum\") property(Number) sum_4c9f1b\n\n        instance(x: 0, y: 0) find_f7c8ca root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_3d4a31 root.Std_k98ojb.Logic.Equal {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> equal_3d4a31.left\n            1 -> equal_3d4a31.right\n            equal_3d4a31.result -> bool_2f5db7\n        } -> find_f7c8ca.predicate\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_6e8aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> notequal_6e8aeb.left\n            1 -> notequal_6e8aeb.right\n            notequal_6e8aeb.result -> bool_2f5db7\n        } -> find_f7c8ca.predicate\n        list_2b6b9d -> find_f7c8ca.items\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_6e8aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> notequal_6e8aeb.left\n            1 -> notequal_6e8aeb.right\n            notequal_6e8aeb.result -> bool_2f5db7\n        } -> find_f7c8ca.predicate\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_6e8aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> notequal_6e8aeb.left\n            1 -> notequal_6e8aeb.right\n            notequal_6e8aeb.result -> bool_2f5db7\n        } -> find_f7c8ca.predicate\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_6e8aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> notequal_6e8aeb.left\n            1 -> notequal_6e8aeb.right\n            notequal_6e8aeb.result -> bool_2f5db7\n        } -> find_f7c8ca.predicate\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_6e8aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> notequal_6e8aeb.left\n            1 -> notequal_6e8aeb.right\n            notequal_6e8aeb.result -> bool_2f5db7\n        } -> find_f7c8ca.predicate\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_6e8aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> notequal_6e8aeb.left\n            1 -> notequal_6e8aeb.right\n            notequal_6e8aeb.result -> bool_2f5db7\n        } -> find_f7c8ca.predicate\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_6e8aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> notequal_6e8aeb.left\n            1 -> notequal_6e8aeb.right\n            notequal_6e8aeb.result -> bool_2f5db7\n        } -> find_f7c8ca.predicate\n        func() {\n            in(x: -292, y: 34, name: \"current\") property(Number) current_ba9d3e\n\n            out(x: 698, y: 44, name: \"bool\") property(Bool) bool_2f5db7\n\n            instance(x: 112, y: 80) modulo_4c869 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_6e8aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_ba9d3e -> modulo_4c869.value\n            2 -> modulo_4c869.divisor\n            modulo_4c869.result -> notequal_6e8aeb.left\n            1 -> notequal_6e8aeb.right\n            notequal_6e8aeb.result -> bool_2f",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -281, y: 161, name: \"n\") property(Number) n_1f5e0d\n\n        out(x: 1078, y: -275, name: \"sum\") property(Number) sum_3a7b9c\n\n        instance(x: 86, y: -394) pow_f4c6eb root.Std_k98ojb.Math.Pow {}\n        instance(x: 91, y: -216) ifexpression_d1f8e0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 442, y: -272) mul_7d3c44 root.Std_k98ojb.Math.Mul {}\n        instance(x: 91, y: -221) add_f7f5df root.Std_k98ojb.Math.Add {}\n        instance(x: 89, y: -230) div_8a9e0f root.Std_k98ojb.Math.Div {}\n        setter(x: -394, y: -484, name: \"setter_4c6d1a\") setter_4c6d1a = sum\n        setter(x: 933, y: -475, name: \"setter_f7e8f2\") setter_f7e8f2 = sum\n        getter(x: 956, y: -360, name: \"getter_d3c44a\") getter_d3c44a = sum\n        instance(x: -227, y: -286) floor_5b1d8f root.Std_k98ojb.Math.Floor {}\n        pow_f4c6eb.result -> mul_7d3c44.first\n        2 -> div_8a9e0f.second\n        div_8a9e0f.result -> add_f7f5df.first\n        1 -> setter_4c6d1a.new_value\n        setter_4c6d1a.continue -> ifexpression_d1f8e0.execute\n        ifexpression_d1f8e0.then -> getter_d3c44a\n        ifexpression_d1f8e0.else -> sum_fourth_power.execute_cdac2a\n        sum_fourth_power.continue_d9efd7 -> setter_f7e8f2.execute\n        sum_fourth_power.output_732a8a -> add_f7f5df.second\n        add_f7f5df.result -> setter_f7e8f2.new_value\n        setter_f7e8f2.continue -> continue_d9efd7\n        getter_d3c44a.value -> output_3a7b9c\n        n_1f5e0d -> floor_5b1d8f.input\n        floor_5b1d8f.output -> div_8a9e0f.first\n        floor_5b1d8f.output -> pow_f4c6eb.value\n        pow_f4c6eb.result -> ifexpression_d1f8e0.gen_0\n    }\n\n    \n\n    instance(x: -269, y: 143) sum_fourth_power_0a51ab root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -218, y: 29, name: \"side_length\") property(Number) side_length_1e8f2d\n\n        out(x: 152, y: 57, name: \"surface_area\") property(Number) surface_area_4f5b6a\n\n        instance(x: 104, y: -41, name: \"six_sides\") property(Number) six_sides_6c7e9d = 6\n        data_instance(x: -194, y: -216, name: \"squared_side_length\") property(Number) squared_side_length_3a5f0d = side_length_1e8f2d * side_length_1e8f2d\n\n        instance(x: 55, y: 166) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -195, y: -221, name: \"side_times_six\") property(Number) side_times_six_e0c6d7 = squared_side_length_3a5f0d * six_sides_6c7e9d\n        mul_f892a4.result -> surface_area_4f5b6a\n        side_length_1e8f2d -> mul_f892a4.first\n        squared_side_length_3a5f0d -> mul_f892a4.second\n    }\n\n    \n\n    instance(x: 201, y: -15) surface_area_e9c34a root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -119, y: 43, name: \"side\") property(Number) side_6d7f8a\n\n        out(x: 258, y: 36, name: \"surface_area\") property(Number) surface_area_a5c0b9\n        out(x: 1044, y: -38, name: \"continue\") trigger() continue_2e5df3\n\n        instance(x: 16, y: 44) mul_1d33eb root.Std_k98ojb.Math.Mul {}\n        side_6d7f8a -> mul_1d33eb.first\n        6 -> mul_1d33eb.second\n        mul_1d33eb.result -> surface_area_a5c0b9\n    }\n\n    \n\n    instance(x: -91, y: 15) cube_surface_area_f3e4cd root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -120, y: 46, name: \"side\") property(Number) side_6e5d85\n\n        out(x: 1320, y: 35, name: \"surface_area\") property(Number) surface_area_ba1f45\n        out(x: 1056, y: 44, name: \"continue\") trigger() continue_8b7d3c\n\n        instance(x: -88, y: 67) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        side_6e5d85 -> mul_f892a4.first\n        6 -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_ba1f45\n    }\n\n    \n\n    instance(x: -92, y: 18) cube_surface_area_9c0b94 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -114, y: 17, name: \"side_length\") property(Number) side_length_3f1a5d\n\n        out(x: 216, y: 25, name: \"surface_area\") property(Number) surface_area_8c8694\n        out(x: 96, y: -55, name: \"continue\") trigger() continue_57b6e9\n\n        instance(x: 26, y: -15) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        side_length_3f1a5d -> mul_2f9d09.first\n        4 -> mul_2f9d09.second\n        mul_2f9d09.result -> surface_area_8c8694\n    }\n\n    \n\n    instance(x: -102, y: -63) cube_surface_area_2bf7b5 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -142, y: 22, name: \"side\") property(Number) side_8d65a5\n\n        out(x: 216, y: 20, name: \"surface_area\") property(Number) sa_a2f7c9\n\n        instance(x: -94, y: -137) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -409, y: 97) data_e8d1df  = 6\n        instance(x: -246, y: 25) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side * side\"\n        }\n        instance(x: -281, y: 59) div_64046c root.Std_k98ojb.Math.Div {}\n        data_e8d1df -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_8d65a5 -> mul_f892a4.first\n        div_64046c.result -> sa_a2f7c9\n    }\n\n    \n\n    instance(x: 114, y: -14) surface_area_bdf0b3 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -105, y: 68, name: \"side\") property(Number) side_9d5e2a\n\n        out(x: 152, y: 17, name: \"surface_area\") property(Number) surface_area_0c5f8b\n        out(x: 1094, y: -24, name: \"continue\") trigger() continue_56dd34\n\n        instance(x: 25, y: -33) expression_1d3f7a root.Std_k98ojb.Math.Expression {\n            expression: \"(6 * side^2)\"\n        }\n        getter(x: -101, y: 69, name: \"getter_8c0ca9\") getter_8c0ca9 = surface_area\n        setter(x: 121, y: 14, name: \"setter_4b1f44\") setter_4b1f44 = surface_area\n        side_9d5e2a -> expression_1d3f7a.gen_0\n        expression_1d3f7a.result -> getter_8c0ca9\n        setter_4b1f44.execute -> continue_56dd34\n    }\n\n    \n\n    instance(x: 106, y: -20) cube_surface_area_5e2d9 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -192, y: 19, name: \"side_length\") property(Number) side_length_5f0d7a\n\n        out(x: 216, y: 59, name: \"surface_area\") property(Number) surface_area_8c5e22\n        out(x: 224, y: -29, name: \"continue\") trigger() continue_9a83f6\n\n        instance(x: 18, y: -64) expression_1d7d11 root.Std_k98ojb.Math.Expression {\n            expression: \"(6 * side_length^2)\"\n        }\n        getter(x: -121, y: 56, name: \"getter_5e9c47\") getter_5e9c47 = surface_area\n        setter(x: 106, y: -193, name: \"setter_8a0f5b\") setter_8a0f5b = surface_area\n        side_length_5f0d7a -> expression_1d7d11.gen_0\n        expression_1d7d11.result -> getter_5e9c47\n        setter_8a0f5b.continue -> continue_9a83f6\n    }\n\n    \n\n    instance(x: 201, y: -63) cube_surface_area_2dfb3 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -119, y: 44, name: \"side\") property(Number) side_6d4f8a\n\n        out(x: 216, y: 7, name: \"surface_area\") property(Number) surface_area_3b1e0c\n\n        instance(x: -146, y: 17, name: \"six_times_side\") property(Number) six_times_side_5f5d21\n        side_6d4f8a -> six_times_side_5f5d21\n        six_times_side_5f5d21 -> surface_area_3b1e0c\n\n        instance(x: -191, y: 105, name: \"surface_area\") property(Number) surface_area_2f9c43 {\n            expression: \"6 * side^2\"\n        }\n        side_6d4f8a -> surface_area_2f9c43.gen_0\n        surface_area_2f9c43.result -> surface_area_3b1e0c\n    }\n\n    \n\n    instance(x: 201, y: -12) cube_surface_area_d89e85 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -222, y: 69, name: \"side_length\") property(Number) side_length_4a6d41\n\n        out(x: 1080, y: -35, name: \"surface_area\") property(Number) surface_area_5b9f8c\n\n        instance(x: 11, y: -27) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 336, y: 132) data_cde0dc  = 6\n        instance(x: 12, y: 135) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side_length * side_length * data_cde0dc\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_length_4a6d41 -> mul_f892a4.first\n        surface_area_5b9f8c -> div_64046c.result\n    }\n\n    \n\n    instance(x: 109, y: -43) surface_area_d2e66d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -141, y: 59, name: \"side_length\") property(Number) side_length_6e2a4f\n\n        out(x: 1088, y: -114, name: \"surface_area\") property(Number) area_34c3d5\n\n        instance(x: 33, y: -211) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -209, y: -1) data_e5e4f2  = 6\n        instance(x: 10, y: 25) expression_8c7d3f root.Std_k98ojb.Math.Expression {\n            expression: \"12*side_length^2\"\n        }\n        instance(x: 18, y: -29) div_64046c root.Std_k98ojb.Math.Div {}\n        data_e5e4f2 -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_8c7d3f.result -> mul_f892a4.second\n        side_length_6e2a4f -> mul_f892a4.first\n        area_34c3d5 -> div_64046c.result\n    }\n\n    \n\n    instance(x: 136, y: -28) surface_area_4b1e56 root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -493, y: 16, name: \"list\") property(List) list_4d3e33\n\n        out(x: 451, y: -22, name: \"difference\") property(Number) difference_a3f0b5\n        out(x: 439, y: 115, name: \"output\") trigger() output_b1c7ec\n\n        instance(x: -1069, y: -44) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -1023, y: 141) find_max_d0a4d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1008, y: 133) find_min_b7c1b9 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1062, y: 110) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_4d3e33 -> length_6e87f2.list\n        length_6e87f2.length -> find_max_d0a4d5.index\n        find_max_d0a4d5.item -> sub_f133b2.first\n        list_4d3e33 -> find_min_b7c1b9.list\n        find_min_b7c1b9.item -> sub_f133b2.second\n        sub_f133b2.result -> difference_a3f0b5\n    }\n\n    \n\n    instance(x: 73, y: -18) diff_largest_smallest_6d8e23 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -193, y: -106, name: \"list\") property(List) list_0f2d1e\n\n        out(x: 555, y: 57, name: \"difference\") property(Number) difference_6b9c21\n        out(x: 113, y: -104, name: \"continue\") trigger() continue_58a0a3\n\n        instance(x: -131, y: -73) maxitem_e4d2f1 root.Std_k98ojb.List.Max {}\n        instance(x: -125, y: -64) minitem_8e5f47 root.Std_k98ojb.List.Min {}\n        data_instance(x: 108, y: -75) data_0a7c3c  = [max, min]\n        instance(x: -115, y: -87) length_2f6d4b root.Std_k98ojb.List.Length {}\n        instance(x: -123, y: -65) sub_f1ffeb root.Std_k98ojb.Math.Sub {}\n        list_0f2d1e -> maxitem_e4d2f1.list\n        list_0f2d1e -> minitem_8e5f47.list\n        data_0a7c3c -> length_2f6d4b.items\n        maxitem_e4d2f1.item -> sub_f1ffeb.first\n        minitem_8e5f47.item -> sub_f1ffeb.second\n        list_0f2d1e -> length_2f6d4b.list\n        1 -> length_2f6d4b.length\n        sub_f1ffeb.result -> data_0a7c3c.max\n        maxitem_e4d2f1.done -> continue_58a0a3\n        minitem_8e5f47.done -> continue_58a0a3\n    }\n\n    \n\n    instance(x: 105, y: -77) diff_max_min_50b9b7 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -193, y: -246, name: \"list\") property(List) list_4f6b47\n\n        out(x: 439, y: -234, name: \"difference\") property(Number) difference_e5a8d1\n        out(x: 504, y: -237, name: \"continue\") trigger() continue_3c2e23\n\n        instance(x: -1009, y: -346) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) max_7a1f55 root.Std_k98ojb.Math.Max {}\n        instance(x: -1078, y: -486) min_9d4c89 root.Std_k98ojb.Math.Min {}\n        instance(x: 439, y: -237) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_4f6b47 -> length_6e87f2.list\n        max_7a1f55.result -> difference_e5a8d1\n        min_9d4c89.result -> sub_852f2e.first\n        sub_852f2e.second -> difference_e5a8d1\n    }\n\n    \n\n    instance(x: 102, y: -67) diff_max_min_54b7d6 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -159, y: -493, name: \"list\") property(List) list_6f5d3a\n\n        out(x: 416, y: -105, name: \"difference\") property(Number) difference_c1b7e4\n        out(x: -475, y: -103, name: \"continue\") trigger() continue_5c9bf2\n\n        instance(x: -108, y: -490) length_3a6f26 root.Std_k98ojb.List.Length {}\n        instance(x: 223, y: -105) max_1d0e34 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: -488) min_4c1da9 root.Std_k98ojb.List.Min {}\n        data_instance(x: -467, y: -111) data_9f5a3c  = [max, min]\n        instance(x: -451, y: -109) sub_f6d87e root.Std_k98ojb.Math.Sub {}\n        list_6f5d3a -> max_1d0e34.list\n        list_6f5d3a -> min_4c1da9.list\n        data_9f5a3c -> sub_f6d87e.items\n        length_3a6f26.length -> sub_f6d87e.first\n        max_1d0e34.value -> difference_c1b7e4\n        min_4c1da9.value -> sub_f6d87e.second\n    }\n\n    \n\n    instance(x: 48, y: -35) diff_largest_smallest_bf5a57 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -101, y: 15, name: \"list\") property(List) list_58a1d3\n\n        out(x: -105, y: 28, name: \"difference\") property(Number) difference_bf8c4b\n        out(x: -69, y: 35, name: \"output\") trigger() output_6e31c9\n\n        instance(x: -85, y: -33) length_2d7a0a root.Std_k98ojb.List.Length {}\n        instance(x: -97, y: 20) maxitem_d8f3b5 root.Std_k98ojb.List.Max {}\n        instance(x: -93, y: 19) minitem_b1c9e6 root.Std_k98ojb.List.Min {}\n        instance(x: -103, y: 36) sub_4d7a0a root.Std_k98ojb.Math.Sub {}\n        list_58a1d3 -> length_2d7a0a.list\n        length_2d7a0a.length -> maxitem_d8f3b5.length\n        length_2d7a0a.length -> minitem_b1c9e6.length\n        maxitem_d8f3b5.item -> sub_4d7a0a.first\n        minitem_b1c9e6.item -> sub_4d7a0a.second\n        list_58a1d3 -> sub_4d7a0a.list\n    }\n\n    \n\n    instance(x: -46, y: 22) diff_max_min_5b2d5f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -109, y: -27, name: \"list\") property(List) list_9f8b15\n\n        out(x: 547, y: 63, name: \"output\") property(Number) output_a6c4d3\n        out(x: -113, y: -25, name: \"continue\") trigger() continue_b0a7e1\n\n        instance(x: -43, y: -26) length_9b8f89 root.Std_k98ojb.List.Length {}\n        instance(x: 191, y: 63) maxitem_e6c5d2 root.Std_k98ojb.List.Max {}\n        instance(x: -113, y: -25) minitem_f0e1ac root.Std_k98ojb.List.Min {}\n        instance(x: -108, y: 59) sub_34f8a4 root.Std_k98ojb.Math.Sub {}\n        list_9f8b15 -> length_9b8f89.list\n        maxitem_e6c5d2.result -> output_a6c4d3\n        minitem_f0e1ac.result -> sub_34f8a4.first\n        sub_34f8a4.result -> output_a6c4d3\n    }\n\n    \n\n    instance(x: 103, y: -22) diff_largest_smallest_eb2f38 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -157, y: -43, name: \"list\") property(List) list_3d9a2b\n\n        out(x: -109, y: 163, name: \"difference\") property(Number) difference_ae1c74\n        out(x: 523, y: -134, name: \"output\") trigger() output_b0f6db\n\n        instance(x: -123, y: -114) length_5a9d4b root.Std_k98ojb.List.Length {}\n        instance(x: -47, y: 170) maxitem_e8e7c3 root.Std_k98ojb.List.Max {}\n        instance(x: -135, y: 161) minitem_f7f0c2 root.Std_k98ojb.List.Min {}\n        instance(x: -102, y: 165) sub_9d5a66 root.Std_k98ojb.Math.Sub {}\n        list_3d9a2b -> length_5a9d4b.list\n        maxitem_e8e7c3.item -> sub_9d5a66.first\n        minitem_f7f0c2.item -> sub_9d5a66.second\n        sub_9d5a66.result -> difference_ae1c74\n    }\n\n    \n\n    instance(x: 98, y: -33) diff_max_min_4bda8e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -102, y: -446, name: \"list\") property(List) list_9d4e3f\n\n        out(x: 109, y: -466, name: \"max_diff\") property(Number) max_diff_b0b7a5\n        out(x: -509, y: -436, name: \"min_diff\") trigger() min_diff_4c1f6c\n\n        instance(x: -108, y: -458) length_9e8d35 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -438) maxitem_7eb94a root.Std_k98ojb.List.Max {}\n        instance(x: -112, y: -471) minitem_a6f0c2 root.Std_k98ojb.List.Min {}\n        instance(x: -108, y: -458) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_9d4e3f -> maxitem_7eb94a.list\n        list_9d4e3f -> minitem_a6f0c2.list\n        length_9e8d35.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> maxitem_7eb94a.value\n        list_9d4e3f -> minitem_a6f0c2.list\n        length_9e8d35.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> minitem_a6f0c2.value\n        maxitem_7eb94a.value -> max_diff_b0b7a5\n        minitem_a6f0c2.value -> min_diff_4c1f6c\n    }\n\n    \n\n    instance(x: 109, y: -467) diff_max_min_f63e47 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -273, y: 21, name: \"list\") property(List) list_8a5e6d\n\n        out(x: 522, y: -119, name: \"difference\") property(Number) difference_3f1c4b\n        out(x: 488, y: -115, name: \"output\") trigger() output_47b7b2\n\n        instance(x: -1049, y: -375) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) max_4d65f1 root.Std_k98ojb.Math.Max {}\n        instance(x: 201, y: 62) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) min_3e3d85 root.Std_k98ojb.Math.Min {}\n        list_8a5e6d -> length_6e87f2.list\n        max_4d65f1.result -> sub_f133b2.first\n        sub_f133b2.first -> min_3e3d85.result\n        list_8a5e6d -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.second\n        max_4d65f1.right -> difference_3f1c4b\n        min_3e3d85.value -> output_47b7b2\n    }\n\n    \n\n    instance(x: 48, y: -67) diff_largest_smallest_e9a6db root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -269, y: 20, name: \"list\") property(List) list_9f6d65\n\n        out(x: -193, y: -18, name: \"difference\") property(Number) difference_b0e8c1\n        out(x: 484, y: 55, name: \"output\") trigger() output_4a6d36\n\n        instance(x: -1069, y: -305) length_58b2d3 root.Std_k98ojb.List.Length {}\n        instance(x: -1055, y: 71) maxitem_dedc8e root.Std_k98ojb.List.Max {}\n        instance(x: -1041, y: 88) minitem_e7f0df root.Std_k98ojb.List.Min {}\n        instance(x: -1013, y: 93) sub_5a4d21 root.Std_k98ojb.Math.Sub {}\n        list_9f6d65 -> length_58b2d3.list\n        maxitem_dedc8e.item -> sub_5a4d21.first\n        minitem_e7f0df.item -> sub_5a4d21.second\n        sub_5a4d21.result -> difference_b0e8c1\n    }\n\n    \n\n    instance(x: 111, y: -63) diff_largest_smallest_6b2c0a root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -38, y: 35, name: \"n\") property(Number) n_5f8d9a\n\n        out(x: 1094, y: -31, name: \"output\") property(Bool) output_b7c98e\n\n        instance(x: 23, y: 33) modulo_d3f0eb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 42) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        n_a6cea7 -> modulo_d3f0eb.value\n        2 -> modulo_d3f0eb.divisor\n        modulo_d3f0eb.result -> notequal_7836b4.left\n        0 -> notequal_7836b4.right\n        notequal_7836b4.result -> output_b7c98e\n    }\n\n    \n\n    instance(x: -19, y: -13) is_even_1f5a57 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -565, y: 442, name: \"number\") property(Number) num_0e4d9a\n\n        out(x: 1775, y: -206, name: \"output\") property(Bool) output_eb8c43\n\n        instance(x: -292, y: -204, name: \"check parity\") filter_f3f1ad root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 198, y: -208) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 194, y: -203) equal_cb8a55 root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _value_3d0f9\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _value_3d0f9 -> modulo_c76d2b.value\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n        } -> filter_f3f1ad.handler\n        num_0e4d9a -> filter_f3f1ad.item\n        filter_f3f1ad.output_list -> not_75283f.list\n        not_75283f.input -> equal_cb8a55.left\n        2 -> equal_cb8a55.right\n        equal_cb8a55.result -> output_eb8c43\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_f21f44 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -523, y: 432, name: \"number\") property(Number) num_9f4a34\n\n        out(x: 1935, y: -221, name: \"output\") property(Bool) output_f7e8c6\n\n        instance(x: -219, y: -215, name: \"is even\") filter_1b0d85 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 187, y: -217, name: \"transform to boolean\") map_5f2ad9 root.Std_k98ojb.Iteration.Map {\n            expression: \"(it % 2 == 0)\"\n        }\n        instance(x: 194, y: -223) not_7e8c4 root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_1b0d85.handler\n        num_9f4a34 -> filter_1b0d85.input\n        filter_1b0d85.output_list -> map_5f2ad9.items\n        map_5f2ad9.output_list -> not_7e8c4.list\n        not_7e8c4.result -> output_f7e8c6\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_3d0c1b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"input\") property(Number) input_5d8f1e\n\n        out(x: 1748, y: -10, name: \"output\") property(Bool) output_ba3d4b\n\n        instance(x: 106, y: 17) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 245, y: -209, name: \"transform to bool\") map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        input_5d8f1e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> map_6030c9.handler\n        map_6030c9.expression: \"it % 2 == 0\"\n        map_6030c9.items -> not_75283f.input\n        not_75283f.result -> output_ba3d4b\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_f21f44 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -38, y: 46, name: \"number\") property(Number) number_51e6d4\n\n        out(x: 1789, y: -215, name: \"output\") property(Bool) output_a5f2c1\n\n        instance(x: -81, y: 49) modulo_d63b0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 197, y: -217) equal_7e8d65 root.Std_k98ojb.Logic.Equal {}\n        number_51e6d4 -> modulo_d63b0a.value\n        2 -> modulo_d63b0a.divisor\n        modulo_d63b0a.result -> equal_7e8d65.left\n        0 -> equal_7e8d65.right\n        equal_7e8d65.result -> output_a5f2c1\n    }\n\n    \n\n    instance(x: -23, y: -10) is_even_4dd34b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -55, y: 59, name: \"number\") property(Number) num_8d6f22\n\n        out(x: 1081, y: -209, name: \"output\") property(Bool) output_2aeb0c\n\n        instance(x: 188, y: 68) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 115, y: 52) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: -19, y: 71) isnumeric_9c1a0f root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 201, y: 63) equal_cb50ae root.Std_k98ojb.Logic.Equal {}\n\n        modulo_c76d2b.divisor -> 2\n        num_8d6f22 -> modulo_c76d2b.value\n        not_75283f.result -> output_2aeb0c\n        isnumeric_9c1a0f.is_contained -> equal_cb50ae.left\n        equal_cb50ae.right -> 0\n        equal_cb50ae.result -> output_2aeb0c\n    }\n\n    \n\n    instance(x: -294, y: -5) is_even_d4b8d3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -536, y: 439, name: \"input\") property(Number) input_5e4a83\n\n        out(x: 1753, y: -216, name: \"output\") property(Bool) output_1fdd8c\n        instance(x: -189, y: 438, name: \"is_even\") Std.If {\n            then: \"input % 2 == 0\",\n            else: \"input % 2 != 0\"\n        }\n        input_5e4a83 -> is_even.then\n        is_even.else -> output_1fdd8c\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_f21f44 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -565, y: 23, name: \"number\") property(Number) num_6f2d5e\n\n        out(x: 1234, y: -11, name: \"output\") property(Bool) output_f1a9db\n\n        instance(x: -29, y: -21, name: \"even\") Std.If {\n            then: \"num % 2 == 0\"\n        }\n        num -> even.then\n        even.else -> output_f1a9db\n    }\n\n    \n\n    instance(x: -41, y: 24) is_even_4b7c6f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -526, y: 4, name: \"n\") property(Number) n_6a2e0d\n\n        out(x: 1285, y: 3, name: \"output\") property(Bool) output_7f1c9b\n\n        instance(x: 189, y: -24, name: \"transform number to boolean\") map_54df34 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 123, y: -27, name: \"check if even\") filter_3d4d23 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 93, y: -21) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -17, y: -16, name: \"current\") property(Number) current_e9d1a4\n            out(x: 1183, y: -18, name: \"output\") property(Bool) output_1f8c43\n\n            instance(x: 100, y: -21) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            current_e9d1a4 -> modulo_c76d2b.value\n            0 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> output_1f8c43\n        } -> filter_3d4d23.handler\n        map_54df34.output_list -> filter_3d4d23.items\n        not_75283f.result -> output_7f1c9b\n    }\n\n    \n\n    instance(x: -292, y: 2) is_even_5a8aa6 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -59, y: 32, name: \"n\") property(Number) n_5d0f23\n\n        out(x: 1024, y: -214, name: \"output\") property(Bool) output_9a2e3c\n\n        instance(x: 186, y: 45) modulo_d6b1ec root.Std_k98ojb.Math.Modulo {}\n        instance(x: 195, y: 59) equal_4fdd29 root.Std_k98ojb.Logic.Equal {}\n        modulo_d6b1ec.result -> output_9a2e3c\n        n_5d0f23 -> modulo_d6b1ec.value\n        0 -> equal_4fdd29.right\n        modulo_d6b1ec.divisor -> equal_4fdd29.left\n    }\n\n    \n\n    instance(x: -17, y: 13) is_even_8e3a42 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -261, y: 186, name: \"string\") property(String) input_0\n\n        out(x: 1101, y: 26, name: \"output\") property(Number) output_4c6f1d\n\n        instance(x: 342, y: 22) tolower_e2b5d3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: -193, name: \"map_0e8f9a\") map_0e8f9a = [Std_k98ojb.List, Std_k98ojb.List]\n        instance(x: 234, y: 44) count_a1b4d6 root.Std_k98ojb.Std.Count {}\n        instance(x: 450, y: -186, name: \"first_even\") first_even_6f7e2c root.Std_k98ojb.Iteration.For {}\n        instance(x: 456, y: -180) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        tolower_e2b5d3.output -> map_0e8f9a[0]\n        input_0 -> tolower_e2b5d3.input\n        map_0e8f9a[1] -> count_a1b4d6.list\n        0 -> count_a1b4d6.reset\n        first_even.index -> count_a1b4d6.count\n        count_a1b4d6.count -> first_even.next\n        input_0 -> first_even.item\n        map_0e8f9a[0] -> equal_aabb6e.left\n        tolower_e2b5d3.input -> equal_aabb6e.right\n        equal_aabb6e.result -> first_even.done\n        count_a1b4d6.count -> output_4c6f1d\n    }\n\n    \n\n    instance(x: -221, y: 199) first_repeated_char_f2df43 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -273, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1059, y: -3, name: \"output\") property(Number) output_2e5a1f\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -105) count_6c5c7f root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> count_6c5c7f.reset\n        1 -> count_6c5c7f.count\n        count_6c5c7f.value -> output_2e5a1f\n        contains_d42dce.result -> output_2e5a1f\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -317, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1059, y: 25, name: \"output\") property(Any) output_d34f8e\n\n        instance(x: 11, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -44, y: 20, name: \"map_9d6a66\") map_9d6a66 = {}\n        instance(x: 245, y: 23) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        map_9d6a66 -> contains_d42dce\n        contains_d42dce.result -> output_d34f8e\n    }\n\n    \n\n    instance(x: 83, y: 51) first_repeated_char_f1c3b7 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 1124, y: -2, name: \"output\") property(Any) output_b9f9c5\n\n        instance(x: 0, y: 0) tolower_3a6dce root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 253, y: 1) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 342, y: -105, name: \"char\") char_97e5a2 {}\n        tolower_3a6dce.output -> contains_d42dce.input\n        input_1 -> tolower_3a6dce.input\n        contains_d42dce.result -> char_97e5a2.value\n        1 -> contains_d42dce.count\n        char_97e5a2.value -> output_b9f9c5\n    }\n\n    \n\n    instance(x: -294, y: 163) first_repeated_char_f6c89b root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -292, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1051, y: -394, name: \"output\") property(Any) output_ae2b3d\n\n        instance(x: 58, y: 57) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 261, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 373, y: -305, name: \"count\") count_5a8f77 root.Std_k98ojb.Std.Count {}\n        instance(x: 489, y: -315, name: \"char\") char_4c3e7d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 531, y: -303, name: \"map_6a5f2e\") map_6a5f2e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 638, y: -287, name: \"filter_0d1e42\") filter_0d1e42 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 755, y: -283, name: \"result\") result_6a5f2e root.Std_k98ojb.Iteration.Reduce {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        count_5a8f77.reset -> filter_0d1e42.trigger\n        map_6a5f2e.handler -> filter_0d1e42.handler\n        char_4c3e7d.output -> result_6a5f2e.value\n        contains_d42dce.result -> count_5a8f77.count\n        1 -> count_5a8f77.new_value\n        filter_0d1e42.onItem -> map_6a5f2e.item\n        filter_0d1e42.done -> result_6a5f2e.value\n    }\n\n    \n\n    instance(x: -312, y: 192) first_repeated_char_f3bba9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -290, y: 0, name: \"string\") property(String) input_9\n\n        out(x: 1091, y: -2, name: \"output\") property(Any) output_a4d5f3\n\n        instance(x: 21, y: 44) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 234, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 401, y: -139, name: \"map\") map_6a1f5c root.Std_k98ojb.List.Map {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_9 -> tolower_2e1444.input\n        contains_d42dce.result -> map_6a1f5c.map\n        0 -> map_6a1f5c.index\n        map_6a1f5c.value -> output_a4d5f3\n    }\n\n    \n\n    instance(x: -289, y: 189) first_repeated_char_2b65af root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -281, y: 186, name: \"string\") property(String) input_0\n\n        out(x: 1105, y: 64, name: \"output\") property(Number) output_a4d6c9\n\n        instance(x: 19, y: 26) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 194, y: -35, name: \"char_map\") Map {} char_map_3f7a66\n        instance(x: 270, y: 20) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 392, y: 76) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> char_map_3f7a66.value\n        if_7c284f.execute -> char_map_3f7a66.add\n        char_map_3f7a66 -> if_7c284f.then\n        1 -> char_map_3f7a66.new_value\n    }\n\n    \n\n    instance(x: -295, y: 195) first_repeated_char_6d5b4e root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -269, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1091, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -156, name: \"map\") map_3a1c21 root.Std_k98ojb.List.Map {}\n        instance(x: 121, y: -155, name: \"count\") count_7f6c5d root.Std_k98ojb.List.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        map_3a1c21.list -> count_7f6c5d.items\n        contains_d42dce.result -> first_repeated_char.output\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_2\n\n        out(x: 1153, y: -1, name: \"output\") property(Any) output_b9f86e\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -105, name: \"char_count\") count_3c3f7a root.Std_k98ojb.List.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_2 -> tolower_2e1444.input\n        contains_d42dce.result -> char_count.reset\n        char_count.value -> contains_d42dce.contains\n        1 -> char_count.new_value\n        contains_d42dce.result -> output_b9f86e\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_6f0c5a root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -342, y: 0, name: \"string\") property(String) input_2\n\n        out(x: 1113, y: -1, name: \"output\") property(Number) output_e6f9a4\n\n        instance(x: 0, y: 2) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_2 -> tolower_2e1444.input\n        contains_d42dce.result -> output_e6f9a4\n        1 -> contains_d42dce.index\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -434, y: 18, name: \"list\") property(List) list_a8f1d4\n\n        out(x: 504, y: 38, name: \"min\") property(Number) min_6e31c0\n        out(x: 515, y: 17, name: \"second_min\") property(Number) second_min_3b7a41\n\n        instance(x: -109, y: 29) first_smallest_node root.Std_k98ojb.List.Min {}\n        list_a8f1d4 -> first_smallest_node.items\n        first_smallest_node.min -> min_6e31c0\n        instance(x: 310, y: 15) second_smallest_node root.Std_k98ojb.List.Sort {}\n        list_a8f1d4 -> second_smallest_node.items\n        min_6e31c0 -> second_smallest_node.items[1]\n        second_smallest_node.result -> second_min_3b7a41\n    }\n\n    \n\n    instance(x: -35, y: 555) second_smallest_9bcb59 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -434, y: 2, name: \"list\") property(List) list_8f2d4a\n        out(x: 504, y: 15, name: \"second_min\") property(Number) second_min_5b1c6e\n\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -342, y: 43) second_min_node root.Std_k98ojb.List.Min {}\n        list_8f2d4a -> min_node.items\n        list_8f2d4a -> second_min_node.items\n\n        out(x: 0, y: 20, name: \"continue\") trigger() continue_e7c1e5\n        min_node.min -> second_min_5b1c6e\n        min_node.done -> continue_e7c1e5\n        second_min_node.min -> Std_k98ojb.Std.IfExpression()\n        Std_k98ojb.Std.IfExpression().expression: \"min < second_min\"\n        Std_k98ojb.Std.IfExpression().then -> second_min_5b1c6e\n        list_8f2d4a[0] -> min_node.item\n        list_8f2d4a[1] -> second_min_node.item\n        Std_k98ojb.Std.IfExpression().else -> continue_e7c1e5\n    }\n\n    \n\n    instance(x: -21, y: 536) second_smallest_6ea3d0 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -902, y: 3, name: \"list\") property(List) list_8a5f74\n        out(x: 509, y: 77, name: \"second_min\") property(Number) second_min_a2e4c6\n\n        instance(x: 0, y: 0) first_min_node root.Std_k98ojb.List.Min {}\n        list_8a5f74 -> first_min_node.items\n        first_min_node.min -> min_node_e7d85d\n\n        instance(x: -342, y: 36) second_min_node root.Std_k98ojb.List.Sort {}\n        list_8a5f74 -> second_min_node.items\n        min_node_e7d85d -> second_min_node.items[1]\n        second_min_node.result -> second_min_a2e4c6\n    }\n\n    \n\n    instance(x: -104, y: 548) second_smallest_f9bb3b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -103, y: 5, name: \"list\") property(List) list_0d3a2f\n\n        out(x: 515, y: 55, name: \"second_min\") property(Number) second_min_6c43b1\n        instance(x: 322, y: 47) Std.IfExpression_4e23d root.Std_k98ojb.Std.IfExpression {\n            expression: \"list_0d3a2f.length == 2\"\n        }\n        in(x: -112, y: 18, name: \"min\") property(Number) min_f7c1b9\n        in(x: -109, y: 10, name: \"second_min_candidate\") property(Number) second_min_candidate_9d7f4e\n\n        list_0d3a2f -> Std.IfExpression_4e23d.gen_0\n        Std.IfExpression_4e23d.then -> min_f7c1b9\n        list_0d3a2f[1] -> second_min_candidate_9d7f4e\n        min_f7c1b9 -> second_min\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_5bf6fa root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"min\") property(Number) min_ai\n        out(x: 343, y: 34, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: -106, y: -1, name: \"first_smallest_node\") Std_k98ojb.Std.If {}\n        instance(x: -288, y: -110, name: \"second_smallest_node\") Std_k98ojb.Std.If {}\n\n        list_ai -> first_smallest_node.items\n        first_smallest_node.then ->\n            second_smallest_node.items = [first_smallest_node.item, ... list_ai]\n            second_smallest_node.value = List.Max(second_smallest_node.items)\n            second_smallest_node.item -> second_min_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -436, y: 25, name: \"list\") property(List) list_9f8e3a\n        out(x: 514, y: -219, name: \"second_min\") property(Number) second_min_b0b6d4\n\n        instance(x: 0, y: 0) sort_node root.Std_k98ojb.List.Sort {}\n        list_9f8e3a -> sort_node.items\n        sort_node.result -> second_min_b0b6d4\n    }\n\n    \n\n    instance(x: -234, y: 509) second_smallest_d2c5d7 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -100, y: 19, name: \"list\") property(List) list_9a8e23\n        out(x: 315, y: -211, name: \"second_min\") property(Number) second_min_bf8b6c\n\n        instance(x: 0, y: 0) sort_node root.Std_k98ojb.List.Sort {}\n        list_9a8e23 -> sort_node.items\n        sort_node.result -> list_9a8e23\n        in(x: -111, y: 17, name: \"second_min_index\") property(Number) second_min_index_6d1f5c\n\n        instance(x: 0, y: 2) find_smallest root.Std_k98ojb.Iteration.Find {}\n        list_9a8e23 -> find_smallest.items\n        find_smallest.item -> a\n        in(x: -109, y: 21, name: \"smallest\") property(Number) smallest_7d0c1f\n\n        Std.IfExpression {\n            expression: \"second_min_index == 1\"\n        } -> second_min_index\n        Std.IfExpression {\n            expression: \"second_min_index > 0 && second_min_index < list_9a8e23.length - 1\"\n        } -> second_min_index\n        find_smallest.item -> second_min\n        a -> second_min\n        find_smallest.item -> second_min\n        Std.IfExpression {\n            expression: \"second_min == smallest\"\n        } -> second_min\n        Std.IfExpression {\n            expression: \"second_min != smallest\"\n        } -> second_min\n    }\n\n    \n\n    instance(x: -35, y: 522) second_smallest_8f2d6c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -434, y: 2, name: \"list\") property(List) list_8f6d4a\n\n        out(x: 509, y: -1, name: \"min\") property(Number) min_98c0e9\n        out(x: 508, y: -1, name: \"second_min\") property(Number) second_min_a3fde5\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 310, y: 35) greaterthan_6e1c25 root.Std_k98ojb.Math.GreaterThan {}\n            0 -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            2 -> greaterthan_6e1c25.left\n            min_98c0e9 -> greaterthan_6e1c25.right\n            elem_9f6850 -> greaterthan_6e1c25.value\n            notequal_807ffd.result -> bool_af09a7\n\n            instance(x: 89, y: 29) find_6d05b0 predicate\n            instance(x: 310, y: 35) min_node root.Std_k98ojb.Std.IfExpression {}\n            greaterthan_6e1c25.result -> min_node.then\n            elem_9f6850 -> min_node.then\n            notequal_807ffd.result -> min_node.else\n            find_6d05b0.item -> elem_9f6850\n            min_node.value -> min_98c0e9\n        } -> find_6d05b0.predicate\n        list_8f6d4a -> find_6d05b0.items\n        find_6d05b0.item -> second_min_a3fde5\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -471, y: 4, name: \"list\") property(List) list_a3f6a5\n\n        out(x: 504, y: -222, name: \"second_min\") property(Number) second_min_1c9e0d\n        instance(x: 0, y: 0) sort_node root.Std_k98ojb.List.Sort {}\n        instance(x: 513, y: -213) min_node root.Std_k98ojb.List.Min {}\n        list_a3f6a5 -> sort_node.items\n        sort_node.result -> min_node.items\n        min_node.min -> second_min_1c9e0d\n    }\n\n    \n\n    instance(x: 512, y: -114) second_smallest_8d6f7 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -902, y: 4, name: \"list\") property(List) list_1f2e9a\n        out(x: 505, y: 64, name: \"min\") property(Number) min_e7c8b3\n        out(x: 506, y: 62, name: \"second_min\") property(Number) second_min_e7c8b3\n\n        instance(x: -113, y: 34, name: \"first_smallest\") Std_k98ojb.Std.If {\n            input: list_1f2e9a.length > 1\n            then: {\n                in(x: -305, y: 29, name: \"second_min\") property(Number) second_min_e7c8b3\n                Std_k98ojb.Std.Count() -> count\n                list_1f2e9a[Std_k98ojb.Std.Count(count) - 1] -> second_min\n            }\n        }\n        list_1f2e9a -> first_smallest.input\n        first_smallest.then -> min_e7c8b3\n        Std_k98ojb.Std.Count() -> count\n        list_1f2e9a[Std_k98ojb.Std.Count(count) - 1] -> second_min_e7c8b3\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_6d4d0f root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -439, y: 47, name: \"list1\") property(List) list_2e3f6d\n        in(x: -451, y: 62, name: \"list2\") property(List) list_e7b5a4\n\n        out(x: 1169, y: -15, name: \"output\") property(Bool) output_f0cdd1\n\n        instance(x: 219, y: 35) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1008, y: -19) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -28, y: 49, name: \"current\") property(Number) _index_170471\n            in(x: -43, y: 64, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1285, y: 15, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 292, y: 57) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {}\n            getter(x: 184, y: 110, name: \"getter_b280eb\") getter_b280eb = previous\n            setter(x: 651, y: -314, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n            instance(x: 299, y: -23) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n            instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_875761.else -> output_f0cdd1\n            ifexpression_875761.value -> output_f0cdd1\n            ifexpression_875761.then -> setter_9d4f1c.execute\n            list_e7b5a4 -> for_d26972.items\n            for_d26972.item -> ifexpression_875761.gen_2\n            for_d26972.index -> ifexpression_875761.gen_0\n            getter_b280eb.value -> ifexpression_875761.gen_1\n            for_d26972.onItem -> ifexpression_875761.execute\n            for_d26972.done -> output_f0cdd1\n            for_d26972.item -> setter_9d4f1c.new_value\n            list_e7b5a4 -> getat_ce2a48.list\n            0 -> getat_ce2a48.index\n            getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n            execute_90aaec -> setter_38e107.execute\n            setter_38e107.continue -> for_d26972.reset\n            setter_9d4f1c.continue -> for_d26972.next\n        } -> contains_32727d.handler\n        list_e7b5a4 -> contains_32727d.list\n        false -> not_75283f.input\n        not_75283f.result -> output_f0cdd1\n    }\n\n    \n\n    instance(x: 14, y: -201) has_common_element_c9e2d3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -191, y: 73, name: \"list1\") property(List) list_9f2d6b\n        in(x: -194, y: 71, name: \"list2\") property(List) list_e7c8a3\n\n        out(x: 1194, y: 76, name: \"output\") property(Bool) output_f0e5ad\n\n        instance(x: 121, y: 97) filter_9d7d0f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -18, y: 95) contains_2a3c6a root.Std_k98ojb.List.Contains {}\n        instance(x: 269, y: 77) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -1, y: -14, name: \"current\") property(Number) _index_0d2e5a\n            in(x: -18, y: -12, name: \"_index\") property(Number) _index_8c6f3b\n\n            out(x: 1197, y: 77, name: \"output\") property(Bool) output_bdf4bb\n\n            instance(x: 240, y: 82) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: -14, y: 81) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list_e7c8a3 -> filter_9d7d0f.items\n            _index_8c6f3b -> modulo_c76d2b.divisor\n            list_9f2d6b -> filter_9d7d0f.items\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_bdf4bb\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_8c6f3b -> modulo_c76d2b.value\n        } -> filter_9d7d0f.handler\n        list_e7c8a3 -> contains_2a3c6a.list\n        contains_2a3c6a.item -> output_bdf4bb\n        not_75283f.result -> output_bdf4bb\n        filter_9d7d0f.output_list -> contains_2a3c6a.list\n    }\n\n    \n\n    instance(x: -13, y: 59) has_common_element_5b8e38 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -531, y: 39, name: \"list1\") property(List) list_4d6f2b\n        in(x: -546, y: -220, name: \"list2\") property(List) list_b2a3ad\n\n        out(x: 1039, y: -198, name: \"output\") property(Bool) output_e0e7c8\n\n        instance(x: 266, y: -208) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1004, y: -201) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -35, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 69, name: \"_index\") property(Number) _index_769593\n\n            out(x: 522, y: -29, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            list_b2a3ad -> contains_32727d.list\n            _index_769593 -> modulo_c76d2b.divisor\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            list_4d6f2b -> contains_32727d.item\n        } -> not_75283f.handler\n        not_75283f.input -> output_e0e7c8\n        contains_32727d.is_contained -> output_efbc78\n    }\n\n    \n\n    instance(x: 101, y: -67) has_common_element_ac7dfb root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -523, y: -194, name: \"list1\") property(List) list_3d4f67\n        in(x: -544, y: 6, name: \"list2\") property(List) list_5c7e9b\n\n        out(x: 1118, y: 10, name: \"output\") property(Bool) output_e0f4a1\n\n        instance(x: 245, y: -123) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1015, y: -116) list_3d4f67 -> contains_32727d.left\n        instance(x: 1039, y: -114) list_5c7c9a -> contains_32727d.right\n        instance(x: 1108, y: -118) not_equal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        list_3d4f67 -> not_equal_cb8a55.left\n        list_5c7c9a -> not_equal_cb8a55.right\n        not_equal_cb8a55.result -> output_e0f4a1\n        contains_32727d.is_contained -> not_equal_cb8a55.input\n    }\n\n    \n\n    instance(x: -284, y: 34) has_common_element_66c9e6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -231, y: 63, name: \"list1\") property(List) list_0d8e6a\n        in(x: -247, y: -21, name: \"list2\") property(List) list_a9f4c5\n\n        out(x: 1093, y: -30, name: \"output\") property(Bool) output_bf7df1\n\n        instance(x: -117, y: -38) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1059, y: -43) length_8166b0 root.Std_k98ojb.List.Length {}\n        list_a9f4c5 -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_a9f4c5 -> intersection_c7c7e6.right\n        length_8166b0.length -> output_bf7df1\n    }\n\n    \n\n    instance(x: 92, y: -54) has_common_element_ea2d43 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -471, y: 44, name: \"list1\") property(List) list_8a5d0f\n        in(x: -488, y: -11, name: \"list2\") property(List) list_c6bdf4\n\n        out(x: 1027, y: -19, name: \"output\") property(Bool) output_a3e1c9\n\n        instance(x: 216, y: 53) intersection_93a5d8 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 473, y: -26) list_contains_7f0b2f root.Std_k98ojb.List.Contains {}\n        output_a3e1c9 -> intersection_93a5d8.is_contained\n    }\n\n    \n\n    instance(x: 104, y: -173) has_common_element_6c71e4 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -471, y: 56, name: \"list1\") property(List) list_5e8a3d\n        in(x: -462, y: 18, name: \"list2\") property(List) list_a6f9c0\n\n        out(x: 1217, y: 11, name: \"output\") property(Bool) output_e4bfc1\n\n        instance(x: 103, y: 63) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -102, y: 67) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        list_a6f9c0 -> filter_c91965.items\n        filter_c91965.item -> contains_32727d.item\n        contains_32727d.is_contained -> output_e4bfc1\n    }\n\n    \n\n    instance(x: -85, y: 33) has_common_element_7e8a6f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -446, y: 13, name: \"list1\") property(List) list_6f8d3a\n        in(x: -465, y: 30, name: \"list2\") property(List) list_c9e7c0\n\n        out(x: 1234, y: 5, name: \"output\") property(Bool) output_3df62b\n\n        instance(x: 103, y: 49) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -246, y: 50) list_2a8c7f root.Std_k98ojb.List.Flatten {}\n        func() {\n            in(x: -18, y: -26, name: \"current\") property(Number) _index_3d7e1d\n            in(x: -20, y: 79, name: \"_index\") property(Number) _index_8f6b5a\n\n            out(x: 1184, y: 147, name: \"output\") property(Bool) output_9c62c0\n\n            instance(x: 246, y: 56) list_slice_2d4e3 root.Std_k98ojb.List.Slice {}\n            instance(x: -34, y: 42) not_equal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 59, y: 47) contains_f9c7f1 root.Std_k98ojb.List.Contains {}\n            list_c9e7c0 -> list_slice_2d4e3.list\n            0 -> list_slice_2d4e3.start\n            list_slice_2d4e3.slice -> not_equal_7836b4.left\n            list_6f8d3a -> contains_f9c7f1.list\n            _index_8f6b5a -> contains_f9c7f1.index\n            contains_f9c7f1.itemAtIndex -> not_equal_7836b4.right\n        } -> contains_32727d.handler\n        list_c9e7c0 -> output_3df62b.output_list\n        func() {\n            in(x: -0, y: 59, name: \"current\") property(Number) current_1f77e5\n\n            out(x: 1178, y: 147, name: \"bool\") property(Bool) bool_9d2c42\n\n            instance(x: 74, y: 49) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: -16, y: 50) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_1f77e5 -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_9d2c42\n        } -> contains_f9c7f1.handler\n        list_c9e7c0 -> output_3df62b.output_list\n        func() {\n            in(x: -23, y: 70, name: \"current\") property(Number) current_5eb7e8\n\n            out(x: 1184, y: 147, name: \"output\") property(Bool) output_9c62c0\n\n            instance(x: 105, y: 49) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: -34, y: 42) not_equal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_5eb7e8 -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> not_equal_7836b4.left\n            0 -> not_equal_7836b4.right\n            not_equal_7836b4.result -> output_9c62c0\n        } -> contains_f9c7f1.handler\n        list_c9e7c0 -> output_3df62b.output_list\n    }\n\n    \n\n    instance(x: 11, y: -177) has_common_element_6a5d48 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -525, y: -196, name: \"list1\") property(List) list_0a2e5b\n        in(x: -545, y: 24, name: \"list2\") property(List) list_b1c3f6\n\n        out(x: 1127, y: 4, name: \"output\") property(Bool) output_a8d1eb\n\n        instance(x: 227, y: 70) filter_5e71ec root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -208, y: -64) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 104, y: -58) map_2f8a21 root.Std_k98ojb.Iteration.Map {}\n        list_0a2e5b -> filter_5e71ec.items\n        list_b1c3f6 -> filter_5e71ec.items\n        filter_5e71ec.output_list -> contains_32727d.list\n        map_2f8a21.expression: \"it in contains_32727d\"\n    }\n\n    \n\n    instance(x: -91, y: 18) has_common_element_5b9c3a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -191, y: 30, name: \"list1\") property(List) list_0e2a5d\n        in(x: -210, y: 48, name: \"list2\") property(List) list_e8c4ec\n\n        out(x: 1149, y: 7, name: \"output\") property(Bool) output_3f3b45\n\n        instance(x: 346, y: 57) filter_d1d6a5 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -13, y: 65) contains_e8e9c7 root.Std_k98ojb.List.Contains {}\n        instance(x: 115, y: 51) map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 201, y: 49) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -15, y: -20, name: \"current\") property(Number) _index_170471\n            in(x: -25, y: 71, name: \"_index\") property(Number) _index_769593\n\n            out(x: 1179, y: 43, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 439, y: 55) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 1015, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_d1d6a5.handler\n        list_e8c4ec -> filter_d1d6a5.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 522, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_d1d6a5.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_e8e9c7.list\n        false -> contains_e8e9c7.item\n        not_75283f.result -> output_efbc78\n        contains_e8e9c7.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_0d4b67 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -549, y: 19, name: \"list\") property(List) list_6d4a1b\n\n        out(x: 1153, y: -24, name: \"output\") property(Bool) output_b5d7e8\n\n        instance(x: 341, y: 98) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1049, y: 73) getat_4f6c66 root.Std_k98ojb.List.GetAt {}\n        instance(x: -20, y: 87) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_6d4a1b -> for_d26972.items\n        for_d26972.index -> getat_4f6c66.index\n        for_d26972.item -> getat_4f6c66.list\n        0 -> equal_f89569.left\n        for_d26972.next -> equal_f89569.right\n        equal_f89569.result -> output_b5d7e8\n    }\n\n    \n\n    instance(x: -25, y: 138) is_consecutive_e9bfef root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") Consecutive {\n        in(x: -538, y: 6, name: \"list\") property(List) list_4d5f43\n\n        out(x: 1181, y: 3, name: \"output\") property(Bool) output_9bfb84\n\n        instance(x: -91, y: -29, name: \"is_sorted\") filter_ba59e6 root.Std_k98ojb.Query.Filter {\n            where: \"it == it + 1\"\n        }\n        list_4d5f43 -> filter_ba59e6.list\n        filter_ba59e6.result -> output_9bfb84\n    }\n\n    \n\n    instance(x: -48, y: 135) consecutive_f2c869 root.main.Consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 3, name: \"list\") property(List) list_4d8c9a\n\n        out(x: 1025, y: -13, name: \"output\") property(Bool) output_58f2b7\n\n        instance(x: -290, y: 29, name: \"previous_number\") getat_e85e3 root.Std_k98ojb.List.GetAt {}\n        instance(x: -287, y: 33) nextitem_f1a8c4 root.Std_k98ojb.List.NextItem {}\n        instance(x: -286, y: 36) is_greater_than_9d5f71 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -285, y: 40) not_equal_cb6f43 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: -284, y: 44) modulo_1c3a95 root.Std_k98ojb.Math.Modulo {}\n        list_4d8c9a -> getat_e85e3.list\n        0 -> getat_e85e3.index\n        getat_e85e3.itemAtIndex -> nextitem_f1a8c4.list\n        modulo_1c3a95.divisor -> 1\n        not_equal_cb6f43.right -> output_58f2b7\n        is_greater_than_9d5f71.left -> nextitem_f1a8c4.item\n        previous_number.value -> is_greater_than_9d5f71.left\n        modulo_1c3a95.result -> is_greater_than_9d5f71.right\n    }\n\n    \n\n    instance(x: -72, y: 48) is_consecutive_d1b2c6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -532, y: 4, name: \"list\") property(List) list_9a7d41\n\n        out(x: 1231, y: 5, name: \"output\") property(Bool) output_8e0f34\n\n        instance(x: -312, y: 33) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -308, y: 36) nextitem_3c9d6a root.Std_k98ojb.List.NextItem {}\n        instance(x: -309, y: 41) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 184, y: 43) greaterthan_7b8c4f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 189, y: 48) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_9a7d41 -> for_d26972.items\n        for_d26972.index -> nextitem_3c9d6a.new_index\n        nextitem_3c9d6a.item -> sub_852f2e.first\n        sub_852f2e.result -> greaterthan_7b8c4f.left\n        1 -> greaterthan_7b8c4f.right\n        not_75283f.result -> output_8e0f34\n    }\n\n    \n\n    instance(x: -67, y: -37) is_consecutive_f21f44 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -509, y: 2, name: \"list\") property(List) list_3f43d4\n\n        out(x: 1238, y: -99, name: \"output\") property(Bool) output_b5c6a9\n\n        instance(x: 736, y: 94, name: \"is_consecutive_list\") filter_f3b46d root.Std_k98ojb.Query.Filter {}\n        instance(x: 251, y: 122) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -31, y: 131) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1141, y: 132) lessThanOrEqual_f9c2df root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_3f43d4 -> filter_f3b46d.list\n        filter_f3b46d.result -> firstitem_870503.list\n        firstitem_870503.item -> sub_852f2e.first\n        sub_852f2e.second -> lessThanOrEqual_f9c2df.right\n        is_consecutive_list.result -> output_b5c6a9\n    }\n\n    \n\n    instance(x: -44, y: 57) is_consecutive_8bda45 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: 25, name: \"list\") property(List) list_6a5d48\n\n        out(x: 1288, y: 49, name: \"output\") property(Bool) output_b4f4e3\n\n        instance(x: -292, y: 69) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -283, y: 52) getat_1a0d35 root.Std_k98ojb.List.GetAt {}\n        instance(x: -282, y: 53) sub_7c8f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -281, y: 55) lessThanOrEqual_e6a3d4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -280, y: 57) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_6a5d48 -> for_d26972.items\n        for_d26972.index -> getat_1a0d35.index\n        for_d26972.item -> sub_7c8f2e.first\n        getat_1a0d35.itemAtIndex -> sub_7c8f2e.second\n        lessThanOrEqual_e6a3d4.left -> not_75283f.input\n        1 -> lessThanOrEqual_e6a3d4.right\n        not_75283f.result -> output_b4f4e3\n    }\n\n    \n\n    instance(x: -27, y: 104) is_consecutive_a4c0b9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -546, y: 29, name: \"list\") property(List) list_1a3a8f\n\n        out(x: 1005, y: 6, name: \"output\") property(Bool) output_e8d4c7\n\n        instance(x: 765, y: 74) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -292, y: 82) getat_9a5e3b root.Std_k98ojb.List.GetAt {}\n        instance(x: 1018, y: 95) less_than_e0f4c2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_1a3a8f -> for_d26972.items\n        for_d26972.index -> getat_9a5e3b.index\n        getat_9a5e3b.itemAtIndex -> less_than_e0f4c2.left\n        getat_9a5e3b.nextIndex -> less_than_e0f4c2.right\n        1 -> less_than_e0f4c2.value\n        less_than_e0f4c2.result -> output_e8d4c7\n    }\n\n    \n\n    instance(x: -53, y: 127) is_consecutive_3a51b9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -549, y: 5, name: \"list\") property(List) list_6d1a3b\n\n        out(x: 1158, y: -92, name: \"output\") property(Bool) output_95c4f2\n\n        instance(x: -285, y: 65) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -33, y: 73) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -43, y: 71) less_than_e7c8d1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 219, y: 70) not_75283f root.Std_k98ojb.Logic.Not {}\n        list_6d1a3b -> for_d26972.items\n        for_d26972.index -> getat_ce2a48.index\n        less_than_e7c8d1.left -> getat_ce2a48.itemAtIndex\n        not_75283f.input -> less_than_e7c8d1.right\n        is_consecutive.output -> not_\n    }\n\n    \n\n    instance(x: -27, y: 123) is_consecutive_5b9df3 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -499, y: 2, name: \"list\") property(List) list_6f5a3d\n\n        out(x: 1128, y: -22, name: \"output\") property(Bool) output_9b0c7e\n\n        instance(x: 761, y: 64) for_d41a84 root.Std_k98ojb.Std.For {}\n        instance(x: -33, y: 127) nextitem_96d1f5 root.Std_k98ojb.List.NextItem {}\n        instance(x: -31, y: 125) greaterthan_fdb2c6 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 114, y: 123) sub_4a8f0e root.Std_k98ojb.Math.Sub {}\n        list_6f5a3d -> for_d41a84.items\n        for_d41a84.index -> greaterthan_fdb2c6.left\n        nextitem_96d1f5.value -> sub_4a8f0e.first\n        sub_4a8f0e.result -> greaterthan_fdb2c6.right\n        greaterthan_fdb2c6.result -> output_9b0c7e\n    }\n\n    \n\n    instance(x: -59, y: 54) is_consecutive_5df3d4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: 13, name: \"list\") property(List) list_0d4f3a\n\n        out(x: 1039, y: -101, name: \"output\") property(Bool) output_a5c8e1\n\n        instance(x: -292, y: 69, name: \"is_consecutive_list\") for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -49, y: 95, name: \"previous_number\") getter_b280eb root.Std_k98ojb.List.Getters.Getter {}\n        instance(x: 1004, y: 86) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -28, y: 112) not_equal_f89569 root.Std_k98ojb.Logic.NotEqual {}\n        list_0d4f3a -> for_d26972.items\n        for_d26972.item -> sub_852f2e.new_value\n        previous_number.value -> sub_852f2e.first\n        is_consecutive_list.onItem -> not_equal_f89569.input\n        1 -> not_equal_f89569.right\n        not_equal_f89569.result -> output_a5c8e1\n    }\n\n    \n\n    instance(x: -34, y: 147) is_consecutive_6b9d4a root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -473, y: 13, name: \"main_list\") property(List) list_8e2d5b\n        in(x: -481, y: 17, name: \"sublist\") property(List) list_a4a7c1\n\n        out(x: 1193, y: -202, name: \"output\") property(Bool) output_e5f5af\n\n        instance(x: -278, y: -196) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -274, y: -203) filter_c91965 root.Std_k98ojb.Query.Filter {}\n        list_a4a7c1 -> filter_c91965.where\n        is_sublist_6d5a83 -> contains_32727d.item\n    }\n\n    \n\n    instance(x: 15, y: -16) is_sublist_f8f3cd root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 49, name: \"main_list\") property(List) list_1d4e2b\n        in(x: -487, y: -11, name: \"sublist\") property(List) list_0f8c85\n\n        out(x: 1103, y: -17, name: \"output\") property(Bool) output_a7a5bc\n\n        instance(x: -316, y: -29) contains_c1d9b6 root.Std_k98ojb.List.Contains {}\n        list_0f8c85 -> contains_c1d9b6.item\n        list_1d4e2b -> contains_c1d9b6.list\n        contains_c1d9b6.is_contained -> output_a7a5bc\n    }\n\n    \n\n    instance(x: -302, y: 31) is_sublist_0c3f8b root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -313, y: 24, name: \"main_list\") property(List) list_9f8d3b\n        in(x: -343, y: 15, name: \"sublist\") property(List) list_1e6c48\n\n        out(x: 1145, y: -93, name: \"output\") property(Bool) output_b0c2a4\n\n        instance(x: -62, y: -82) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_9f8d3b -> zip_201051.left\n        list_1e6c48 -> zip_201051.right\n        func() {\n            in(x: -227, y: 44, name: \"item\") property(Number) item_4e5cd7\n\n            out(x: 1279, y: -104, name: \"index\") property(Number) index_c3f8b2\n\n            instance(x: -38, y: -85) eq_1a0c95 root.Std_k98ojb.Logic.Equal {}\n            list_1e6c48 -> eq_1a0c95.left\n            item_4e5cd7 -> eq_1a0c95.right\n            eq_1a0c95.result -> index_c3f8b2\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_b0c2a4\n    }\n\n    \n\n    instance(x: -11, y: 55) is_sublist_d41e5d root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -235, y: 45, name: \"main_list\") property(List) list_59f2d1\n        in(x: -231, y: -7, name: \"sublist\") property(List) list_9c8e3a\n\n        out(x: 1185, y: 4, name: \"output\") property(Bool) output_e0d1b6\n\n        instance(x: -91, y: 52) contains_f1f7e2 root.Std_k98ojb.List.Contains {}\n        list_59f2d1 -> contains_f1f7e2.list\n        sublist_9c8e3a -> contains_f1f7e2.item\n        contains_f1f7e2.is_contained -> output_e0d1b6\n    }\n\n    \n\n    instance(x: -84, y: 63) is_sublist_5fddfa root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -494, y: 46, name: \"main_list\") property(List) list_5f3a1b\n        in(x: -505, y: 28, name: \"sublist\") property(List) list_e9d8c4\n\n        out(x: 1202, y: 33, name: \"output\") property(Bool) output_0e31f7\n\n        instance(x: -300, y: 30) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -326, y: -22, name: \"index\") setter_f7c5a3 = previous\n        getter(x: 121, y: 43, name: \"get_item\") get_item_1d8e5f = previous\n        instance(x: -302, y: 50) is_equal_c9b95e root.Std_k98ojb.Logic.Equal {}\n        list_e9d8c4 -> for_d26972.items\n        for_d26972.index -> is_equal_c9b95e.left\n        get_item_1d8e5f.value -> is_equal_c9b95e.right\n        for_d26972.item -> get_item_1d8e5f.new_value\n        is_equal_c9b95e.result -> output_0e31f7\n    }\n\n    \n\n    instance(x: -285, y: 11) is_sublist_f1a3c6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -471, y: 41, name: \"main_list\") property(List) list_1e3f6b\n        in(x: -475, y: 11, name: \"sublist\") property(List) list_a4a9c5\n\n        out(x: 1197, y: 46, name: \"output\") property(Bool) output_2d0dd1\n\n        instance(x: -313, y: 37) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it in list_a4a9c5\"\n        }\n        instance(x: -49, y: 52) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 201, y: 45) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_f3b46d.handler\n        list_a4a9c5 -> filter_f3b46d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_f3b46d.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_2d0dd1\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_b8a3c9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -493, y: 18, name: \"main_list\") property(List) list_4a2e5b\n        in(x: -469, y: -11, name: \"sublist\") property(List) list_a9d6f3\n\n        out(x: 1211, y: -20, name: \"output\") property(Bool) output_e85c43\n\n        instance(x: -275, y: -16) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 192, y: -21) length_8166b0 root.Std_k98ojb.List.Length {}\n        list_a9d6f3 -> contains_32727d.item\n        contains_32727d.is_contained -> length_8166b0.length\n        length_8166b0.length -> output_e85c43\n    }\n\n    \n\n    instance(x: -286, y: 13) is_sublist_5c8f65 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -484, y: 439, name: \"main_list\") property(List) list_9f2d3a\n        in(x: -493, y: -23, name: \"sublist\") property(List) list_6e7c59\n\n        out(x: 1145, y: -98, name: \"output\") property(Bool) output_0a34b1\n\n        instance(x: -303, y: -204) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_9f2d3a -> contains_32727d.list\n        sublist_6e7c59 -> contains_32727d.item\n        contains_32727d.is_contained -> output_0a34b1\n    }\n\n    \n\n    instance(x: -288, y: 70) is_sublist_e8f5aa root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 42, name: \"main_list\") property(List) list_2d8e33\n        in(x: -493, y: 18, name: \"sublist\") property(List) list_6b4a3f\n\n        out(x: 1275, y: -98, name: \"output\") property(Bool) output_e1c0eb\n\n        instance(x: -274, y: -97) zip_d2fba8 root.Std_k98ojb.Iteration.Zip {}\n        list_6b4a3f -> zip_d2fba8.left\n        list_2d8e33 -> zip_d2fba8.right\n        func() {\n            in(x: -344, y: 71, name: \"index\") property(Number) index_c7c5ca\n\n            out(x: 1231, y: -120, name: \"equal\") property(Bool) equal_4d35a3\n\n            instance(x: -13, y: -117) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            list_6b4a3f -> equal_f89569.left\n            list_2d8e33[index_c7c5ca] -> equal_f89569.right\n            equal_f89569.result -> equal_4d35a3\n        } -> zip_d2fba8.handler\n        zip_d2fba8.zipped -> output_e1c0eb\n    }\n\n    \n\n    instance(x: -23, y: 64) is_sublist_b5e21b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"main_list\") property(List) list_5a1e2d\n        in(x: -478, y: -210, name: \"sublist\") property(List) list_9f5c4b\n\n        out(x: 1218, y: 5, name: \"output\") property(Bool) output_a7df56\n\n        instance(x: -315, y: -217) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -302, y: -227) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % sublist.length == 0\"\n        }\n        list_9f5c4b -> contains_32727d.item\n        list_9f5c4b -> filter_f3b46d.where\n        filter_f3b46d.result -> output_a7df56\n    }\n\n    \n\n    instance(x: -297, y: 39) is_sublist_74a1f2 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -209, y: 3, name: \"list\") property(List) list_4d6a30\n        out(x: 0, y: 8, name: \"smallest_missing\") property(Number) smallest_missing_a9b5c7\n\n        instance(x: 191, y: 35) for_loop_2e3f1 root.Std_k98ojb.Std.For {\n            items: list_4d6a30\n            reset: Std_k98ojb.Std.Count.reset\n            next: Std_k98ojb.Std.Count.next\n            on_item: Std_k98ojb.Std.Count.on_item\n            done: Std_k98ojb.Std.Count.done\n        }\n        for_loop_2e3f1.trigger -> SmallestMissing.smallest_missing_node.start\n        list_4d6a30 -> for_loop_2e3f1.items\n        Std_k98ojb.Std.Count.reset -> for_loop_2e3f1.reset\n        Std_k98ojb.Std.Count.next -> for_loop_2e3f1.next\n        Std_k98ojb.Std.Count.on_item -> for_loop_2e3f1.on_item\n        Std_k98ojb.Std.Count.done -> for_loop_2e3f1.done\n        for_loop_2e3f1.item -> SmallestMissing.smallest_missing_node.item\n        ifexpression_e54c6d root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == 0 || it > Std_k98ojb.Std.Count.length(list)\"\n        }\n        getter(x: -21, y: 38, name: \"getter_1f5a8f\") getter_1f5a8f = SmallestMissing.smallest_missing_node\n        ifexpression_e54c6d.then -> SmallestMissing.find_missing_node.start\n        list_4d6a30[0] -> SmallestMissing.find_missing_node.item\n        for_loop_2e3f1.index -> SmallestMissing.find_missing_node.index\n        Std_k98ojb.Std.Count.length(list) -> SmallestMissing.find_missing_node.length\n        ifexpression_e54c6d.then -> SmallestMissing.find_missing_node.execute\n    }\n\n    \n\n    instance(x: -191, y: 58) SmallestMissing_1f8a4e root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -439, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1, y: 0, name: \"missing\") property(Number) missing_5f8c63\n\n        instance(x: 437, y: 57) count_node root.Std_k98ojb.Count {}\n        list_ai -> count_node.items\n        count_node.reset -> SmallestMissing.reset\n        count_node.count -> SmallestMissing.missing\n        instance(x: -105, y: 94) for_node root.Std_k98ojb.Std.For {\n            trigger: \"count\", value: count_node.value\n            reset: \"reset\"\n            next: \"next\"\n            items: list_ai\n            on item: \"item\", index: \"index\" -> SmallestMissing.missing\n        }\n    }\n\n    \n\n    instance(x: -57, y: 509) SmallestMissing_9f0a15 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_5e4d2f\n\n        out(x: 1, y: 8, name: \"missing\") property(Number) missing_7f9b23\n        instance(x: 0, y: 0) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -112, y: 33, name: \"elem\") property(Number) elem_6c8d4a\n\n            out(x: 2, y: 43, name: \"bool\") property(Bool) bool_f1e0f3\n\n            instance(x: 89, y: 29) greaterthan_eb7da9 root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 310, y: 35) count_2c4c32 root.Std_k98ojb.Std.Count {}\n            1 -> greaterthan_eb7da9.left\n            list_5e4d2f[0] -> greaterthan_eb7da9.right\n            greaterthan_eb7da9.result -> bool_f1e0f3\n            count_2c4c32.reset -> true\n            for_9a3c94 root.Std_k98ojb.Std.For {}\n            for_9a3c94.trigger -> greaterthan_eb7da9.right\n            list_5e4d2f[0] -> for_9a3c94.items\n            count_2c4c32.count -> for_9a3c94.count\n            for_9a3c94.done -> greaterthan_eb7da9.result\n            if(bool_f1e0f3) {\n                1 -> missing_7f9b23\n            } else {\n                list_5e4d2f[0] -> missing_7f9b23\n            }\n        } -> find_missing_node.predicate\n        list_5e4d2f -> find_missing_node.items\n        find_missing_node.item -> missing_7f9b23\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_f3c59a root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -255, y: 2, name: \"list\") property(List) list_ai\n        out(x: 0, y: 15, name: \"missing_number\") property(Number) missing_number_9f8d85\n\n        instance(x: -105, y: 1) count_node root.Std_k98ojb.Count {}\n        list_ai -> count_node.items\n        count_node.reset -> true\n        count_node.count -> missing_number_9f8d85\n\n        instance(x: -74, y: 5) for_loop_node root.Std_k98ojb.For {\n            items: list_ai,\n            reset: count_node.reset,\n            next: count_node.next,\n            on_item: function() {\n                in(x: -141, y: 11, name: \"i\") property(Number) i_8d7e2c\n                out(x: 1, y: 13, name: \"item\") property(Number) item_4f6a5b\n                item_4f6a5b -> missing_number_9f8d85\n            }\n        }\n    }\n\n    \n\n    instance(x: -28, y: 72) SmallestMissing_f2e98c root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -442, y: 0, name: \"numbers\") property(List) numbers_ai\n        out(x: 0, y: 22, name: \"smallest_missing\") property(Number) smallest_missing_9f66a3\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Std.Count {}\n        instance(x: -19, y: 33) for_node root.Std_k98ojb.Std.For {\n            trigger: \"start\"\n            reset: \"end\"\n            next: \"item\"\n            items: numbers_ai\n            on item: \"item_process\"\n            done: \"end\"\n        }\n        count_node.value -> for_node.index\n        for_node.item -> smallest_missing_9f66a3\n        instance(x: -110, y: 40) find_node root.Std_k98ojb.Iteration.Find {}\n        find_node.predicate: \"it == smallest_missing_9f66a3 + 1\"\n        numbers_ai -> find_node.items\n        find_node.item -> smallest_missing_9f66a3\n    }\n\n    \n\n    instance(x: -114, y: 54) SmallestMissing_2b7e6d root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -209, y: 2, name: \"list\") property(List) list_8f66b9\n        out(x: 13, y: 10, name: \"missing\") property(Number) missing_f4c9d5\n\n        instance(x: 0, y: 0) for_loop_65a0ec root.Std_k98ojb.Std.For {\n            trigger: \"start\"\n            reset: \"reset\"\n            next: \"next\"\n            items: list_8f66b9\n            on item: \"item\"\n            done: \"done\"\n        }\n        instance(x: 209, y: -109, find_missing_0c4d5a root.Std_k98ojb.List.Find) {}\n        for_loop_65a0ec.item -> find_missing_0c4d5a.predicate\n        list_8f66b9[0] -> for_loop_65a0ec.index\n        find_missing_0c4d5a.item -> missing_f4c9d5\n        for_loop_65a0ec.done -> missing_f4c9d5\n    }\n\n    \n\n    instance(x: -101, y: 109) find_smallest_missing_8f2e96 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -341, y: 1, name: \"list\") property(List) list_ai\n        out(x: 0, y: 0, name: \"number\") property(Number) number_3c4d2a\n\n        instance(x: 109, y: 73) count_node root.Std_k98ojb.Count {}\n        list_ai -> count_node.items\n        count_node.reset -> SmallestMissing.number\n        count_node.count -> SmallestMissing.number\n        instance(x: -141, y: 74) for_node root.Std_k98ojb.Std.For {\n            trigger: \"start\"\n            reset: \"reset\"\n            next: \"next\"\n            items: list_ai\n            on item: {\n                in(x: 0, y: 1, name: \"i\") property(Number) i_9fdd6d\n\n                out(x: -69, y: 63, name: \"diff\") property(Number) diff_b8c5b2\n\n                instance(x: 95, y: 67) modulo_node root.Std_k98ojb.Math.Modulo {}\n                modulo_node.result -> diff_b8c5b2\n                i_9fdd6d + 1 -> modulo_node.value\n                i_9fdd6d -> modulo_node.divisor\n            }\n        } -> for_node.next\n        instance(x: -34, y: 83) ifexpression_e3a7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"diff > number\"\n        }\n        getter(x: -121, y: 86, name: \"getter_4d2e1f\") getter_4d2e1f = SmallestMissing.number\n        setter(x: 108, y: 70, name: \"setter_6c7a0b\") setter_6c7a0b = SmallestMissing.number\n        instance(x: -141, y: 75) min_node root.Std_k98ojb.List.Min {}\n        list_ai -> min_node.items\n        min_node.min -> setter_6c7a0b\n        ifexpression_e3a7b.then -> for_node.next\n        diff_b8c5b2 -> setter_6c7a0b.new_value\n    }\n\n    \n\n    instance(x: -44, y: 109) SmallestMissing_6f23e9 root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -245, y: 0, name: \"list\") property(List) list_6d4f9e\n\n        out(x: 1, y: 123, name: \"missing\") property(Number) missing_8c7b20\n        instance(x: 313, y: 115) for_node root.Std_k98ojb.Std.For {\n            trigger: \"start\"\n            reset: \"reset\"\n            next: \"next\"\n            items: list_6d4f9e\n            on item: \"item\"\n            done: \"done\"\n        }\n        list_6d4f9e[0] -> for_node.index\n        for_node.item -> missing_8c7b20\n        for_node.done -> missing_8c7b20\n    }\n\n    \n\n    instance(x: -59, y: 119) find_missing_e3d66a root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number in a sorted list of natural numbers.\") SmallestMissing {\n        in(x: -342, y: 0, name: \"list\") property(List) list_6d8f5e\n\n        out(x: 1, y: -1, name: \"smallest_missing\") property(Number) smallest_missing_a4c9b3\n        instance(x: 1, y: 0) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -109, y: 43, name: \"elem\") property(Number) elem_5dca6a\n\n            out(x: 2, y: 44, name: \"bool\") property(Bool) bool_9f4df7\n\n            instance(x: 89, y: 29) greaterthan_node root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 310, y: 35) smallest_missing_node root.Std_k98ojb.List.Min {}\n            1 -> greatesthan_node.left\n            elem_5dca6a -> greatesthan_node.right\n            greatesthan_node.result -> bool_9f4df7\n            if(bool_9f4df7) {\n                2 -> smallest_missing_node.items\n                smallest_missing_node.min -> smallest_missing_a4c9b3\n            }\n        } -> find_smallest_missing_node.predicate\n        list_6d8f5e -> find_smallest_missing_node.items\n        find_smallest_missing_node.item -> smallest_missing_a4c9b3\n    }\n\n    \n\n    instance(x: -55, y: 529) SmallestMissing_ba3c1b root.main.SmallestMissing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -243, y: 1, name: \"numbers\") property(List) numbers_9a5b2d\n        out(x: 7, y: 20, name: \"missing_number\") property(Number) missing_number_8f4c94\n\n        instance(x: 0, y: 0) count_node root.Std_k98ojb.Count {}\n        count_node.reset -> numbers_9a5b2d\n        count_node.count -> missing_number_8f4c94\n        numbers_9a5b2d[0] -> count_node.value\n        Std.IfExpression(x: -341, y: 10, name: \"if_expression\") {\n            expression: \"numbers_9a5b2d.length > 1\"\n        }\n        if_expression.then -> Std.For(x: -332, y: 12, name: \"for_loop\")\n        for_loop.trigger -> numbers_9a5b2d\n        for_loop.reset -> count_node\n        for_loop.next -> missing_number_8f4c94\n        Std.IfExpression(x: -338, y: 14, name: \"if_expression_2\") {\n            expression: \"missing_number_8f4c94 == numbers_9a5b2d[for_loop.index]\"\n        }\n        if_expression_2.then -> Std.For(x: -335, y: 16, name: \"for_loop_2\")\n        for_loop_2.trigger -> missing_number_8f4c94\n        for_loop_2.reset -> count_node\n        for_loop_2.next -> numbers_9a5b2d[for_loop.index]\n        Std.IfExpression(x: -334, y: 18, name: \"if_expression_3\") {\n            expression: \"missing_number_8f4c94 > numbers_9a5b2d[for_loop.index]\"\n        }\n        if_expression_3.then -> Std.For(x: -332, y: 20, name: \"for_loop_3\")\n        for_loop_3.trigger -> missing_number_8f4c94\n        for_loop_3.reset -> count_node\n        for_loop_3.next -> numbers_9a5b2d[for_loop.index]\n    }\n\n    \n\n    instance(x: -25, y: 60) find_smallest_missing_9e34f root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1548, y: 22, name: \"input\") property(String) input_4d6f9b\n\n        out(x: 512, y: 0, name: \"output\") property(String) output_2e98c3\n\n        instance(x: 1061, y: 12) replace_d63a66 root.Std_k98ojb.Strings.Replace {}\n        input_4d6f9b -> replace_d63a66.input\n        \",\" -> replace_d63a66.search\n        \".\" -> replace_d63a66.replace\n        \" \" -> replace_d63a66.replace\n        replace_d63a66.result -> output_2e98c3\n    }\n\n    \n\n    instance(x: 69, y: -44) replace_special_chars_a9f7d4 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1498, y: 11, name: \"input\") property(String) input_0\n\n        out(x: 538, y: -24, name: \"output\") property(String) output_1\n\n        instance(x: 93, y: -67) replace_d5e4b2 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d5e4b2.input\n        \",\" -> replace_d5e4b2.search\n        \".\" -> replace_d5e4b2.replace\n        replace_d5e4b2.result -> output_1\n    }\n\n    \n\n    instance(x: -134, y: 19) replace_with_colon_1d7c0f root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1249, y: 13, name: \"input\") property(String) input_8d3b5a\n\n        out(x: 439, y: 46, name: \"output\") property(String) output_e1e0f6\n\n        instance(x: 113, y: 16) replace_d4c2ec root.Std_k98ojb.Strings.Replace {}\n        input_8d3b5a -> replace_d4c2ec.input\n        \",\" -> replace_d4c2ec.search\n        \".\" -> replace_d4c2ec.replace\n        \" \" -> replace_d4c2ec.replace\n        replace_d4c2ec.result -> output_e1e0f6\n    }\n\n    \n\n    instance(x: -145, y: 33) replace_with_colon_9d7a8b root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -1629, y: 11, name: \"input\") property(String) input_0\n        out(x: 342, y: 43, name: \"output\") property(String) output_6d7c4f\n\n        instance(x: 76, y: 24) replace_5a2b1e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5a2b1e.input\n        \",\" -> replace_5a2b1e.search\n        \".\" -> replace_5a2b1e.replace\n        \" \" -> replace_5a2b1e.replace\n        replace_5a2b1e.result -> output_6d7c4f\n    }\n\n    \n\n    instance(x: 102, y: -13) replace_with_colon_9b8df3 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -158, y: 3, name: \"input\") property(String) input_1a6d0e\n\n        out(x: 451, y: 85, name: \"output\") property(String) output_e2f7eb\n\n        instance(x: 97, y: 93) replace_d5c34b root.Std_k98ojb.Strings.Replace {}\n        input_1a6d0e -> replace_d5c34b.input\n        \",.\" -> replace_d5c34b.search\n        \":\" -> replace_d5c34b.replace\n        replace_d5c34b.result -> output_e2f7eb\n    }\n\n    \n\n    instance(x: -148, y: 69) replace_punctuation_9d56a4 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1345, y: 20, name: \"input\") property(String) input_8d0f34\n\n        out(x: 451, y: -38, name: \"output\") property(String) output_a7e3f1\n\n        instance(x: 97, y: 13) replace_d4c2df root.Std_k98ojb.Strings.Replace {}\n        input_8d0f34 -> replace_d4c2df.input\n        \",.\" -> replace_d4c2df.search\n        \":\" -> replace_d4c2df.replace\n        replace_d4c2df.result -> output_a7e3f1\n    }\n\n    \n\n    instance(x: 108, y: -31) replace_special_chars_9b6d8a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -137, y: 25, name: \"input\") property(String) input_5d3a2b\n\n        out(x: 547, y: 71, name: \"output\") property(String) output_e8e4f1\n\n        instance(x: 1009, y: 74) replace_d0c7d6 root.Std_k98ojb.Strings.Replace {}\n        input_5d3a2b -> replace_d0c7d6.input\n        \",\" -> replace_d0c7d6.search\n        \".\" -> replace_d0c7d6.replace\n        \" \" -> replace_d0c7d6.replace\n        replace_d0c7d6.result -> output_e8e4f1\n    }\n\n    \n\n    instance(x: 92, y: -39) replace_special_chars_9f2dfb root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -1488, y: 13, name: \"input\") property(String) input_0\n\n        out(x: 504, y: -50, name: \"output\") property(String) output_0\n\n        instance(x: 245, y: -21) replace_d42dce root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_d42dce.input\n        \",.\" -> replace_d42dce.search\n        \":\" -> replace_d42dce.replace\n        replace_d42dce.result -> output_0\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_special_chars_7e38f2 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: -1113, y: 2, name: \"input\") property(String) input_4e8f5d\n\n        out(x: 456, y: -63, name: \"output\") property(String) output_ba6bdf\n\n        instance(x: 1049, y: 0) replace_d7c45b root.Std_k98ojb.Strings.Replace {}\n        input_4e8f5d -> replace_d7c45b.input\n        \",\" -> replace_d7c45b.search\n        \".\" -> replace_d7c45b.replace\n        \" \" -> replace_d7c45b.replace\n        replace_d7c45b.result -> output_ba6bdf\n    }\n\n    \n\n    instance(x: -143, y: 23) replace_punctuation_3d0c5e root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -142, y: 21, name: \"input\") property(String) input_5a3e0f\n\n        out(x: 439, y: 55, name: \"output\") property(String) output_e5c9d4\n\n        instance(x: 101, y: 36) replace_d8b6db root.Std_k98ojb.Strings.Replace {}\n        input_5a3e0f -> replace_d8b6db.input\n        \",\" -> replace_d8b6db.search\n        \".\" -> replace_d8b6db.replace\n        replace_d8b6db.result -> output_e5c9d4\n    }\n\n    \n\n    instance(x: 84, y: -24) replace_with_colon_0e3f2 root.main.replace_with_colon {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in a string are the same.\") is_all_same {\n        in(x: -44, y: 22, name: \"input\") property(String) input_8d1f9b\n\n        out(x: 1314, y: -24, name: \"output\") property(Bool) output_a2a0e3\n\n        instance(x: -92, y: 26) ifexpression_7c6d15 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous == current\"\n        }\n        getter(x: 333, y: 63, name: \"getter_95f2a1\") getter_95f2a1 = previous\n        setter(x: -0, y: -113, name: \"setter_4b6c67\") setter_4b6c67 = previous\n        instance(x: -273, y: 22) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 74, y: 24) setter_95f2a1 = previous\n        instance(x: -0, y: 31) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7c6d15.then -> setter_4b6c67.execute\n        input_8d1f9b -> for_d26972.items\n        for_d26972.item -> ifexpression_7c6d15.gen_2\n        for_d26972.index -> ifexpression_7c6d15.gen_0\n        getter_95f2a1.value -> ifexpression_7c6d15.gen_1\n        for_d26972.onItem -> ifexpression_7c6d15.execute\n        for_d26972.done -> setter_4b6c67.continue\n        setter_4b6c67.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 13, y: -99) is_all_same_f5a8e3 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in the given string are same or not.\") all_characters_same {\n        in(x: -45, y: 16, name: \"string\") property(String) str_6d3f8e\n\n        out(x: 1004, y: -21, name: \"output\") property(Bool) output_a0a7c1\n\n        instance(x: 206, y: 19) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 391, y: 18) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: -82, y: 62) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || str[index] == str[0]\"\n        }\n        getter(x: 334, y: 155, name: \"getter_b280eb\") getter_b280eb = str\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = str\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_a0a7c1\n        ifexpression_875761.value -> output_a0a7c1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        str -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_a0a7c1\n        for_d26972.item -> setter_9d4f1c.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) all_characters_same_3b5d48 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") is_same_char {\n        in(x: -245, y: 18, name: \"string\") property(String) string_e5f6a9\n\n        out(x: 1111, y: 46, name: \"output\") property(Bool) output_8c89d3\n\n        instance(x: -29, y: 54) ifexpression_93b2e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == string[index]\"\n        }\n        getter(x: 222, y: 134, name: \"getter_1f3c6a\") getter_1f3c6a = previous\n        setter(x: -38, y: -20, name: \"setter_9e4b9d\") setter_9e4b9d = previous\n        instance(x: 292, y: 57) for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 216, y: 124, name: \"getter_1f3c6a\") getter_1f3c6a.value -> ifexpression_93b2e4.gen_0\n        setter(x: -15, y: 31, name: \"setter_9e4b9d\") setter_9e4b9d.value -> ifexpression_93b2e4.gen_1\n        for_d26972.item -> ifexpression_93b2e4.execute\n        for_d26972.index -> ifexpression_93b2e4.gen_2\n        getter_1f3c6a.value -> ifexpression_93b2e4.gen_3\n        string_e5f6a9 -> for_d26972.items\n    }\n\n    \n\n    instance(x: 49, y: -10) is_same_char_77d0d8 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same {\n        in(x: -23, y: 74, name: \"input\") property(String) input_5a8d4f\n\n        out(x: 1151, y: -24, name: \"output\") property(Bool) output_bdd9e6\n\n        instance(x: -62, y: 19) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 199, y: 67) islower_7c1a3d root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 201, y: 68) isupper_9c5a4f root.Std_k98ojb.Strings.IsUpper {}\n        instance(x: -2, y: 73) tolower_8ca8e6 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 114, y: 70) uppercase_0d7dd3 root.Std_k98ojb.Strings.UpperCase {}\n        islower_7c1a3d.result -> output_bdd9e6\n        isupper_9c5a4f.result -> output_bdd9e6\n        tolower_8ca8e6.value -> uppercase_0d7dd3.value\n        length_6e87f2.length -> islower_7c1a3d.input\n        input_5a8d4f -> length_6e87f2.list\n    }\n\n    \n\n    instance(x: 25, y: -14) all_same_0b9df6 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_characters_same {\n        in(x: -19, y: 39, name: \"input\") property(String) input_7f5d84\n\n        out(x: 1351, y: 14, name: \"output\") property(Bool) output_9a3b0e\n\n        instance(x: 224, y: 51) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 467, y: 48) contains_c8d4ad root.Std_k98ojb.List.Contains {}\n        instance(x: 631, y: 41) islower_b4c7a3 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 817, y: -22) stringstolower_2e9f6b root.Std_k98ojb.Strings.ToLower {}\n        function(x: -0, y: -121, name: \"func_8d2c85\") func_8d2c85() property(String) result_f7c7eb {\n            in(x: 0, y: 10, name: \"char\") property(Char) char_4e3f6b\n            out(x: -101, y: 5, name: \"result\") property(String) result_1c9d37\n\n            instance(x: 11, y: 7) replace_2a35c8 root.Std_k98ojb.Strings.Replace {}\n            char_4e3f6b -> replace_2a35c8.search\n            input_7f5d84 -> replace_2a35c8.replace\n            result_f7c7eb.result -> replace_2a35c8.result\n        } -> func_8d2c85.handler\n\n        length_6e87f2.length -> contains_c8d4ad.is_contained\n        input_7f5d84 -> contains_c8d4ad.item\n        islower_b4c7a3.value -> stringstolower_2e9f6b.value\n        stringstolower_2e9f6b.result -> func_8d2c85.result\n        func_8d2c85.result -> output_9a3b0e\n    }\n\n    \n\n    instance(x: 18, y: -15) all_characters_same_e7d36a root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in the string are same or not.\") all_characters_same {\n        in(x: -234, y: 13, name: \"input\") property(String) input_6d9a5f\n\n        out(x: 1254, y: 31, name: \"output\") property(Bool) output_1b8e63\n\n        instance(x: 345, y: 67) length_7c8f45 root.Std_k98ojb.List.Length {}\n        instance(x: -0, y: 5) islower_d2a6d3 root.Std_k98ojb.Strings.IsLower {}\n        instance(x: 253, y: 28) tolower_9e1db root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 394, y: 21) isnumeric_b4c8f7 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -0, y: 44) replace_6a1df3 root.Std_k98ojb.Strings.Replace {}\n        length_7c8f45.length -> islower_d2a6d3.length\n        input_6d9a5f -> tolower_9e1db.input\n        tolower_9e1db.result -> replace_6a1df3.input\n        isnumeric_b4c8f7.is_contained -> replace_6a1df3.search\n        '0' -> replace_6a1df3.replace\n        replace_6a1df3.result -> output_1b8e63\n    }\n\n    \n\n    instance(x: 43, y: -19) all_characters_same_9f7c2d root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in the string are same or not.\") all_characters_same {\n        in(x: -246, y: 40, name: \"string\") property(String) str_6e8d2f\n\n        out(x: 1211, y: 52, name: \"output\") property(Bool) output_e3c7b4\n\n        instance(x: 105, y: 59) length_85a65b root.Std_k98ojb.List.Length {}\n        instance(x: -234, y: 47) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 341, y: 64) tolower_1c9e21 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 471, y: 60) isnumeric_ba4f43 root.Std_k98ojb.Strings.IsNumeric {}\n        all_characters_same.result -> output_e3c7b4\n        length_85a65b.length -> contains_32727d.index\n        str_6e8d2f -> tolower_1c9e21.input\n        tolower_1c9e21.value -> isnumeric_ba4f43.input\n        isnumeric_ba4f43.result -> output_e3c7b4\n    }\n\n    \n\n    instance(x: 47, y: -24) all_characters_same_8d5da0 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -26, y: 15, name: \"string\") property(String) string_5f4a42\n\n        out(x: 1221, y: -21, name: \"output\") property(Bool) output_8d7e66\n\n        instance(x: -23, y: 81) ifexpression_d2c63b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == string[0]\"\n        }\n        getter(x: 157, y: 28, name: \"getter_9d7e34\") getter_9d7e34 = previous\n        setter(x: -13, y: -25, name: \"setter_d4c1f5\") setter_d4c1f5 = previous\n        instance(x: 202, y: 74) for_96a8db root.Std_k98ojb.Std.For {}\n        setter(x: -9, y: -22, name: \"setter_d4c1f5\") setter_0e3d7a = previous\n        instance(x: -44, y: -35) getat_93f1ec root.Std_k98ojb.List.GetAt {}\n        ifexpression_d2c63b.else -> output_8d7e66\n        ifexpression_d2c63b.value -> output_8d7e66\n        ifexpression_d2c63b.then -> setter_d4c1f5.execute\n        string_5f4a42 -> for_96a8db.items\n        for_96a8db.item -> ifexpression_d2c63b.gen_2\n        for_96a8db.index -> ifexpression_d2c63b.gen_0\n        getter_9d7e34.value -> ifexpression_d2c63b.gen_1\n        for_96a8db.onItem -> ifexpression_d2c63b.execute\n        for_96a8db.done -> output_8d7e66\n        for_96a8db.item -> setter_d4c1f5.new_value\n        string_5f4a42 -> getat_93f1ec.list\n        0 -> getat_93f1ec.index\n        getat_93f1ec.itemAtIndex -> setter_0e3d7a.new_value\n        for_96a8db.next -> setter_d4c1f5.continue\n    }\n\n    \n\n    instance(x: -12, y: 27) all_characters_same_9b6f42 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether all the characters are same or not.\") all_same {\n        in(x: -34, y: 11, name: \"input\") property(String) input_8f2e66\n\n        out(x: 1349, y: 64, name: \"output\") property(Bool) output_e7d0c6\n\n        instance(x: 201, y: 70) length_5b3df4 root.Std_k98ojb.List.Length {}\n        instance(x: -12, y: 61) same_7f2a1e root.Std_k98ojb.Strings.Equal {}\n        input_8f2e66 -> length_5b3df4.list\n        length_5b3df4.length -> same_7f2a1e.left\n        input_8f2e66 -> same_7f2a1e.right\n        instance(x: 105, y: -22) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -33, y: 68) islower_3d5b4f root.Std_k98ojb.Strings.IsLower {}\n        same_7f2a1e.result -> output_e7d0c6\n        length_5b3df4.length -> for_d26972.items\n        input_8f2e66 -> for_d26972.item\n        islower_3d5b4f.value -> for_d26972.gen_0\n        same_7f2a1e.then -> for_d26972.execute\n    }\n\n    \n\n    instance(x: 11, y: -13) all_same_e87c42 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -247, y: 29, name: \"string\") property(String) str_0e3f6d\n\n        out(x: 1171, y: 19, name: \"output\") property(Bool) output_ba5c25\n\n        instance(x: 78, y: 35) length_2e9b65 root.Std_k98ojb.List.Length {}\n        instance(x: -27, y: 23) tolower_77f6d3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 255, y: 39) characters_1cdd41 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 145, y: 47) isnumeric_7e5aef root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -201, y: 31) filter_82f0d2 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 108, y: 39) count_3c4e1f root.Std_k98ojb.Std.Count {}\n        isnumeric_7e5aef.result -> output_ba5c25\n        filter_82f0d2.output_list -> count_3c4e1f.list\n        length_2e9b65.length -> count_3c4e1f.count\n        str_0e3f6d -> characters_1cdd41.input\n        tolower_77f6d3.value -> isnumeric_7e5aef.input\n        filter_82f0d2.handler -> count_3c4e1f.execute\n    }\n\n    \n\n    instance(x: 13, y: -165) is_same_9b4c43 root.main.is_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 3, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 1, y: 0) strings_length_node root.Std_k98ojb.List.Length {}\n        string_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n\n        instance(x: -214, y: -471) strings_to_numbers_node root.Std_k98ojb.Iteration.Map {\n            handler: \"it => Std_k98ojb.Math.Floor(it)\"\n        }\n        strings_to_numbers_node.items -> strings_length_node.value\n        strings_to_numbers_node.output_list -> count_digits_8f0a9c\n\n        instance(x: 100, y: -474) count_digits_8f0a9c root.main.count_digits {}\n        string_ai -> count_digits_8f0a9c.string\n        count_digits_8f0a9c.result -> result_ai\n    }\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: -418) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 262, y: -464, name: \"count_digits\") count_9e1c8d root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 2, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 0) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.value -> result_ai\n    }\n\n    \n    instance(x: -83, y: -43, name: \"count_digits\") expression_3d7de6 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 1, y: -436, name: \"result\") property(Number) result_ai\n\n        instance(x: 24, y: 0) math_length_node root.Std_k98ojb.List.Length {}\n        string_ai -> math_length_node.input\n        math_length_node.length -> result_ai\n    }\n\n    \n    instance(x: 25, y: -462, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 2, y: -243, name: \"result\") property(Number) result_ai\n\n        instance(x: 85, y: -394) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n        result_ai -> Std_k98ojb.Std.IfExpression {\n            expression: \"result_ai > 0\"\n        }\n        Std_k98ojb.Std.IfExpression.then -> Std_k98ojb.Std.Count {}\n        Std_k98ojb.Std.IfExpression.then.input -> input_ai\n        Std_k98ojb.Std.IfExpression.then.value -> result_ai\n    }\n\n    \n    instance(x: -206, y: 108) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 1, y: -434, name: \"count\") property(Number) count_ai\n\n        instance(x: 5, y: 0) loop_node root.Std_k98ojb.Std.For {}\n        s_ai -> loop_node.items\n        loop_node.index -> loop_node.index\n        loop_node.value -> loop_node.item\n        Strings.IsNumeric(loop_node.item) -> count_if_1e7d8\n        count_if_1e7d8.value -> count_ai\n        loop_node.done -> loop_done_5f3a4b\n        loop_node.reset -> reset_6c9e4d\n    }\n\n    instance(x: 0, y: -434) reset_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 3, y: -255, name: \"count\") property(Number) count_ai\n\n        instance(x: 1, y: 12) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n    }\n\n    \n    instance(x: 0, y: -43) digits_3e7a5d root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"s\") property(String) s_ai\n        out(x: 0, y: 0, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: -456) strings_length_node root.Std_k98ojb.Strings.Length {}\n        s_ai -> strings_length_node.input\n        strings_length_node.length -> count_ai\n        instance(x: 46, y: -484) strings_is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        s_ai -> strings_is_numeric_node.input\n        strings_is_numeric_node.result -> count_ai\n    }\n\n    \n    instance(x: 0, y: -465, name: \"count_digits\") ifexpression_3d7de6 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a string.\") count_digits{\n        in(x: 0, y: 0, name: \"string\") property(String) string_ai\n        out(x: 2, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 11, y: -43) list_generate_range_node root.Std_k98ojb.List.GenerateRange {}\n        string_ai -> list_generate_range_node.from\n        10 -> list_generate_range_node.to\n        list_generate_range_node.items -> result_ai\n    }\n\n    \n    instance(x: 246, y: -469) strings_is_numeric_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits{\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 11, y: -42) strings_length_node root.Std_k98ojb.Strings.Length {}\n        input_ai -> strings_length_node.input\n        strings_length_node.length -> result_ai\n        function_4d6e48 root.Std_k98ojb.Function {\n            name: \"count_digits\"\n            handler: function_handler\n        }\n        function_handler(x: 0, y: -235) count_digits_node {}\n        input_ai -> count_digits_node.input\n        count_digits_node.result -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) strings_to_numbers_node root.Std_k98ojb.Function {\n        name: \"strings_to_numbers\"\n        handler: strings_to_numbers_handler\n    }\n    function_4d6e48(x: -213, y: -206) strings_to_numbers_node {}\n    instance(x: 13, y: -208) list_map_node root.Std_k98ojbj.Iteration.Map {\n        items: strings_to_numbers_node.output\n        handler: map_handler\n    }\n    function_4d6e48(x: 0, y: -223) list_map_node {}\n    instance(x: 11, y: -225) count_digits_node root.Std_k98ojb.Function {\n        name: \"count_digits\"\n        handler: count_digits_handler\n    }\n    function_4d6e48(x: 0, y: -230) count_digits_node {}\n    instance(x: 13, y: -233) list_flatten_node root.Std_k98ojbj.Iteration.Flatten {\n        items: count_digits_node.output\n    }\n    function_4d6e48(x: 0, y: -240) list_flatten_node {}\n    instance(x: 11, y: -242) strings_length_node root.Std_k98ojbj.List.Length {}\n    input_ai -> strings_length_node.input\n    strings_length_node.length -> result_ai\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -341, y: 150, name: \"n\") property(Number) n_2e4d3b\n\n        out(x: 1039, y: -1, name: \"output\") property(Number) output_7fbd5c\n\n        instance(x: 0, y: 0) sum_fourth_power_0 root.Std_k98ojb.Std.If\n        func() {\n            in(x: -222, y: 95, name: \"i\") property(Number) i_6a3d2e\n\n            out(x: 1039, y: -1, name: \"output\") property(Number) output_a5c71f\n\n            instance(x: 0, y: 95, name: \"sum\") expression_8b4df9 root.Std_k98ojb.Math.Expression {\n                expression: \"i * (i + 1)^3\"\n            }\n            instance(x: -22, y: 83) modulo_f2aef5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 0, y: 90) add_87c7f6 root.Std_k98ojb.Math.Add {}\n            instance(x: 1, y: 97) div_9e95d3 root.Std_k98ojb.Math.Div {}\n            setter(x: -194, y: 81, name: \"setter_f2aef5\") setter_f2aef5 = sum\n            setter(x: 0, y: 100, name: \"setter_8b4df9\") setter_8b4df9 = sum\n            getter(x: 0, y: 103, name: \"getter_a5c71f\") getter_a5c71f = sum\n            instance(x: -194, y: 83) floor_f2aef5 root.Std_k98ojb.Math.Floor {}\n            1 -> modulo_f2aef5.divisor\n            modulo_f2aef5.result -> add_87c7f6.first\n            1 -> div_9e95d3.second\n            div_9e95d3.result -> expression_8b4df9.gen_0\n            0 -> setter_f2aef5.new_value\n            setter_f2aef5.continue -> sum_fourth_power_0.execute\n            sum_fourth_power_0.else -> output_a5c71f.execute_cdac2a\n            expression_8b4df9.result -> getter_a5c71f\n        } -> sum_fourth_power_0.predicate\n        n_2e4d3b -> i_6a3d2e\n        i_6a3d2e -> expression_8b4df9.gen_1\n    }\n\n    \n\n    instance(x: -189, y: 157) sum_fourth_power_7f65d5 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -315, y: 145, name: \"n\") property(Number) n_5d4e9b\n\n        out(x: 1303, y: -1, name: \"sum\") property(Number) sum_2aef55\n\n        instance(x: 0, y: 0) for_6f8ca7 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -192, y: 46, name: \"i\") property(Number) i_b9c1a5\n\n            out(x: 1212, y: 38, name: \"sum\") property(Number) sum_7d3f1e\n\n            instance(x: 81, y: 27) expression_6cd7c4 root.Std_k98ojb.Math.Expression {\n                expression: \"(i+1)^4\"\n            }\n            instance(x: 0, y: -20) pow_f2df34 root.Std_k98ojb.Math.Pow {}\n            instance(x: 99, y: 16) modulo_9f6a30 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 97, y: 32) add_e8e0d4 root.Std_k98ojb.Math.Add {}\n            setter(x: -210, y: -14, name: \"setter_3cd29c\") setter_3cd29c = sum\n            getter(x: 1039, y: 15, name: \"getter_5f1a0d\") getter_5f1a0d = sum\n            instance(x: -203, y: 11) floor_f2e8b4 root.Std_k98ojb.Math.Floor {}\n            i_b9c1a5 -> pow_f2df34.input\n            modulo_9f6a30.result -> add_e8e0d4.first\n            add_e8e0d4.result -> setter_3cd29c.new_value\n        } -> for_6f8ca7.iterate\n        sum_7d3f1e.value -> getter_5f1a0d\n    }\n\n    \n\n    instance(x: -287, y: 151) sum_fourth_power_2dd62b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -343, y: 174, name: \"n\") property(Number) n_9d6f4a\n\n        out(x: 1296, y: 151, name: \"sum\") property(Number) sum_b5b8c3\n\n        instance(x: 68, y: 128) pow_1e7da root.Std_k98ojb.Math.Pow {}\n        instance(x: -24, y: 123) mul_4d6f9a root.Std_k98ojb.Math.Mul {}\n        instance(x: 62, y: 129) add_9c2df3 root.Std_k98ojb.Math.Add {}\n        data_instance(x: 293, y: 131) data_5d8d96  = [1]\n        instance(x: -14, y: 135) list_66a6e4 root.Std_k98ojb.List.GenerateRange {\n            from: 1\n            to: n_9d6f4a\n        }\n        instance(x: 0, y: 131) filter_5c2f68 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -13, y: 134) pow_8e3e63 root.Std_k98ojb.Math.Pow {}\n        data_5d8d96 -> list_66a6e4.items\n        filter_5c2f68.predicate -> pow_1e7da\n        pow_1e7da.result -> mul_4d6f9a.first\n        3 -> pow_8e3e63.exponent\n        data_5d8d96 -> pow_8e3e63.value\n        filter_5c2f68.output_list -> add_9c2df3.items\n        list_66a6e4.length -> sum_b5b8c3\n        0 -> sum_b5b8c3.reset\n        add_9c2df3.result -> sum_b5b8c3\n    }\n\n    \n\n    instance(x: -278, y: 143) sum_fourth_power_e1f7d4 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 189, name: \"n\") property(Number) n_1d5a66\n\n        out(x: 1283, y: -647, name: \"output\") property(Number) output_bf8c31\n\n        instance(x: 0, y: 0) find_e2b4af root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -215, y: 26, name: \"current\") property(Number) current_3d7e6a\n\n            out(x: 1145, y: 45, name: \"bool\") property(Bool) bool_b0f2c4\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_3d7e6a -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_b0f2c4\n        } -> find_e2b4af.predicate\n        func() {\n            in(x: -215, y: 26, name: \"current\") property(Number) current_3d7e6a\n\n            out(x: 1145, y: 45, name: \"bool\") property(Bool) bool_b0f2c4\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_3d7e6a -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_a54bdc.left\n            1 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_b0f2c4\n        } -> find_e2b4af.predicate\n        instance(x: -202, y: -236) power_5a9d22 root.Std_k98ojb.Math.Pow {}\n        instance(x: 89, y: 29) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        4 -> power_5a9d22.exponent\n        current_3d7e6a -> power_5a9d22.base\n        power_5a9d22.result -> mul_f892a4.first\n        2 -> div_64046c.second\n        div_64046c.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> bool_b0f2c4.execute\n        ifexpression_3d7de6.then -> setter_375321.execute\n        find_e2b4af.item -> mul_f892a4.second\n        find_e2b4af.item -> power_5a9d22.result\n        find_e2b4af.item -> div_64046c.first\n        sum_digits_96023e.n_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_64046c.second\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_5f8e56 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -269, y: 165, name: \"n\") property(Number) n_4e2aeb\n\n        out(x: 1130, y: -394, name: \"output\") property(Number) output_e7d8f5\n\n        instance(x: 68, y: 135) sum_6b3c77 root.Std_k98ojb.Math.Sum {}\n        instance(x: 104, y: 261) mul_65a9e4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -30, y: 78, name: \"fourth_power\") expression_e8fdd5 root.Std_k98ojb.Math.Expression {\n            expression: \"n^4\"\n        }\n        instance(x: 0, y: 249) div_2a3d65 root.Std_k98ojb.Math.Div {}\n        instance(x: -15, y: 270) modulo_f1f86e root.Std_k98ojb.Math.Modulo {}\n        data_instance(x: 394, y: 261) data_a6c8b4  = [sum_6b3c77, mul_65a9e4]\n        instance(x: -34, y: 251) ifexpression_e1d5f2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 97, y: 258) add_6c7589 root.Std_k98ojb.Math.Add {}\n        instance(x: -31, y: 281) notequal_3a5f35 root.Std_k98ojb.Logic.NotEqual {}\n        1 -> modulo_f1f86e.divisor\n        expression_e8fdd5.result -> mul_65a9e4.first\n        0 -> add_6c7589.second\n        add_6c7589.result -> sum_6b3c77.value\n        notequal_3a5f35.result -> ifexpression_e1d5f2.execute\n        sum_6b3c77.value -> div_2a3d65.first\n        expression_e8fdd5.result -> div_2a3d65.second\n        0 -> data_a6c8b4.continue_d9efd7\n        ifexpression_e1d5f2.then -> sum_6b3c77.execute_cdac2a\n        sum_6b3c77.value -> mul_65a9e4.result\n        expression_e8fdd5.result -> data_a6c8b4.sum\n        div_2a3d65.result -> output_e7d8f5\n    }\n\n    \n\n    instance(x: -215, y: 148) sum_fourth_power_f1a0eb root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -439, y: 145, name: \"n\") property(Number) n_0e8f3d\n\n        out(x: 1500, y: 2, name: \"sum\") property(Number) sum_f1c85a\n\n        instance(x: 69, y: -394) pow_4bdc7 root.Std_k98ojb.Math.Pow {}\n        instance(x: 13, y: 251) add_5f8d6e root.Std_k98ojb.Math.Add {}\n        instance(x: 45, y: 266) div_2c3a9f root.Std_k98ojb.Math.Div {}\n        instance(x: 86, y: -349) mul_4cdd1a root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -415) count_8d5aaf root.Std_k98ojb.Std.Count {}\n        instance(x: 76, y: 275) ifexpression_a4e5f6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 54, y: -251) continue_1a65c9 root.Std_k98ojb.Std.Continue {}\n        instance(x: 70, y: 273) sum_fourth_power_8d2f2e root.main.sum_fourth_power {}\n        count_8d5aaf.reset -> ifexpression_a4e5f6.execute\n        count_8d5aaf.count -> sum_fourth_power_8d2f2e.n_0e8f3d\n        ifexpression_a4e5f6.then -> continue_1a65c9\n        continue_1a65c9.continue_d9efd7 -> add_5f8d6e.execute\n        sum_fourth_power_8d2f2e.n_0e8f3d -> pow_4bdc7.input\n        pow_4bdc7.result -> div_2c3a9f.first\n        pow_4bdc7.result -> mul_4cdd1a.second\n        div_2c3a9f.result -> sum_fourth_power_8d2f2e.sum\n    }\n\n    \n\n    instance(x: -394, y: 253) sum_fourth_power_f6c5ab root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -344, y: 173, name: \"n\") property(Number) n_2a9d3f\n\n        out(x: 1056, y: -269, name: \"output\") property(Number) output_ebfdbb\n\n        instance(x: 0, y: 0) sum_1e5c7b root.Std_k98ojb.Math.Add {}\n        instance(x: 49, y: 157) mul_f4a3ad root.Std_k98ojb.Math.Mul {}\n        instance(x: -38, y: 22, name: \"sum\") expression_4f8d33 root.Std_k98ojb.Math.Expression {\n            expression: \"n^4\"\n        }\n        instance(x: 0, y: 141) modulo_5a1e21 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -43, y: 29, name: \"divisor\") number_2d8f9c root.Std_k98ojb.Math.Div {}\n        instance(x: 15, y: 104) div_4d1a83 root.Std_k98ojb.Math.Div {}\n        instance(x: 49, y: -25, name: \"power\") power_b5e7df root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: 124) floor_3fdd45 root.Std_k98ojb.Math.Floor {}\n        4 -> power.power\n        n_2a9d3f -> power.input\n        power.result -> div_4d1a83.first\n        div_4d1a83.second -> mul_f4a3ad.first\n        divisor -> mul_f4a3ad.second\n        sum_1e5c7b.value -> output_ebfdbb\n    }\n\n    \n\n    instance(x: -82, y: 161) sum_fourth_power_8f4d6b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -275, y: 133, name: \"n\") property(Number) n_5d6f9a\n\n        out(x: 1292, y: -439, name: \"sum\") property(Number) sum_b1b8e4\n\n        instance(x: 0, y: 0) for_85c3ec root.Std_k98ojb.Std.For {\n            in(x: -342, y: 26, name: \"i\") property(Number) i_4d9fdd\n\n            out(x: 88, y: 19, name: \"odd_number\") property(Number) odd_number_58e2c5\n\n            instance(x: 0, y: 15, name: \"power\") expression_e8a3b1 root.Std_k98ojb.Math.Expression {\n                expression: \"4*i*i*i*i\"\n            }\n            instance(x: 44, y: -21) modulo_6d66f9 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 53, y: 36) notequal_7c3a8e root.Std_k98ojb.Logic.NotEqual {}\n            i_4d9fdd -> modulo_6d66f9.value\n            1 -> modulo_6d66f9.divisor\n            modulo_6d66f9.result -> notequal_7c3a8e.left\n            2 -> notequal_7c3a8e.right\n            notequal_7c3a8e.result -> odd_number_58e2c5\n        } -> for_85c3ec.trigger\n        instance(x: -215, y: 104) sum_67f1af root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: 14) add_c7a4a9 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: 18) div_2e3c8d root.Std_k98ojb.Math.Div {}\n        instance(x: -197, y: 44) floor_6fba5f root.Std_k98ojb.Math.Floor {}\n        i_4d9fdd -> sum_67f1af.input\n        sum_67f1af.reset -> add_c7a4a9.execute\n        add_c7a4a9.result -> div_2e3c8d.first\n        div_2e3c8d.result -> sum_b1b8e4\n        floor_6fba5f.output -> div_2e3c8d.second\n    }\n\n    \n\n    instance(x: -296, y: 155) sum_fourth_power_0bf7a9 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -291, y: 150, name: \"n\") property(Number) n_6b655b\n\n        out(x: 576, y: -1, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 0, y: 0) sum_fourth_power_0 root.Std_k98ojb.Math.Expression {\n            expression: \"sum((i+1)^4 for i in range(0,n))\"\n        }\n        instance(x: -123, y: 255) find_first_odd_number root.Std_k98ojb.Iteration.Find {}\n        instance(x: 92, y: 28) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i % 2 == 0\"\n        }\n        instance(x: -123, y: 255) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 395, y: 86) pow_3d7de6 root.Std_k98ojb.Math.Pow {}\n        instance(x: 99, y: -249) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 112, y: 80) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        4 -> pow_3d7de6.exponent\n        div_547f34.result -> sum_fourth_power_0.n_6b655b\n        ifexpression_3d7de6.then -> continue_d9efd7\n        find_first_odd_number.item -> pow_3d7de6.value\n        modulo_adfa16.result -> pow_3d7de6.value\n        1 -> pow_3d7de6.base\n        pow_3d7de6.result -> add_88bb8a.first\n        add_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> continue_d9efd7\n        sum_fourth_power_0.execute_cdac2a -> setter_375321.execute\n        sum_fourth_power_0.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue_d9efd7 -> continue_d9efd7\n        getter_38583a.value -> output_edc2e3\n        n_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.divisor\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: 178) sum_fourth_power_f1d5a4 root.main.sum_fourth_power {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -277, y: 166, name: \"n\") property(Number) n_1f3e5a\n\n        out(x: 2714, y: -7, name: \"sum\") property(Number) sum_f37c9d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_9c8d6b\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_9c8d6b\n        } -> find_6d05b0.predicate\n        list_abed4a -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_9c8d6b\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_9c8d6b\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_9c8d6b\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_9c8d6b\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_9c8d6b\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_9c8d6b\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_b5f4a3\n\n            out(x: 1, y: 85, name: \"bool\") property(Bool) bool_9c8d6b\n\n            instance(x: 112, y: 80) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_b5f4a3 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            1 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_9c8d6b\n        } -> find_6d05b"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -218, y: 29, name: \"side_length\") property(Number) side_length_1e8f2d\n\n        out(x: 152, y: 57, name: \"surface_area\") property(Number) surface_area_4f5b6a\n\n        instance(x: 104, y: -41, name: \"six_sides\") property(Number) six_sides_6c7e9d = 6\n        data_instance(x: -194, y: -216, name: \"squared_side_length\") property(Number) squared_side_length_3a5f0d = side_length_1e8f2d * side_length_1e8f2d\n\n        instance(x: 55, y: 166) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -195, y: -221, name: \"side_times_six\") property(Number) side_times_six_e0c6d7 = squared_side_length_3a5f0d * six_sides_6c7e9d\n        mul_f892a4.result -> surface_area_4f5b6a\n        side_length_1e8f2d -> mul_f892a4.first\n        squared_side_length_3a5f0d -> mul_f892a4.second\n    }\n\n    \n\n    instance(x: 201, y: -15) surface_area_e9c34a root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -195, y: 17, name: \"side_length\") property(Number) side_length_5f2a8e\n\n        out(x: 324, y: 11, name: \"surface_area\") property(Number) surface_area_4c3b43\n\n        instance(x: -194, y: -22, name: \"sides_of_cube\") property(List) sides_of_cube_0d65eb\n        data_instance(x: -114, y: 109) data_d6a8e1  = 6\n        instance(x: -305, y: 78) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: -311, y: 11) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: -342, y: 68) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: -334, y: 17) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: -329, y: 6) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        data_d6a8e1 -> div_64046c.second\n        data_d6a8e1 -> mul_f892a4.first\n        side_length_5f2a8e -> mul_f892a4.second\n        pow_584bfd.y -> 2\n        add_b4554f.result -> surface_area_4c3b43\n    }\n\n    \n\n    instance(x: -175, y: -55) cube_surface_area_9d98df root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -113, y: 31, name: \"side\") property(Number) side_5f8d37\n\n        out(x: 216, y: 16, name: \"surface_area\") property(Number) surface_area_a85a3b\n        out(x: 213, y: 29, name: \"continue\") trigger() continue_b1e7c4\n\n        instance(x: -24, y: -194) mul_8f5d0a root.Std_k98ojb.Math.Mul {}\n        side_5f8d37 -> mul_8f5d0a.first\n        6 -> mul_8f5d0a.second\n        mul_8f5d0a.result -> surface_area_a85a3b\n    }\n\n    \n\n    instance(x: -215, y: -46) cube_surface_area_e2e5d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -234, y: 104, name: \"side_length\") property(Number) side_length_5f3b8e\n\n        out(x: 216, y: -10, name: \"surface_area\") property(Number) surface_area_4d9a2c\n\n        instance(x: 7, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 210, y: 103) data_cde0dc  = 6\n        instance(x: 12, y: 104) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"6 * side_length^2\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_length_5f3b8e -> mul_f892a4.first\n        surface_area_4d9a2c -> div_64046c.result\n    }\n\n    \n\n    instance(x: 114, y: -26) cube_surface_area_b0af47 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -117, y: 22, name: \"side\") property(Number) side_3e9a4d\n\n        out(x: 216, y: -41, name: \"surface_area\") property(Number) surface_area_5f7c34b\n        out(x: 211, y: 69, name: \"continue\") trigger() continue_3c1aa2\n\n        instance(x: 31, y: -18) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 233, y: 104) data_cde0dc  = 6\n        instance(x: 64, y: 133) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"12 * (side^2)\"\n        }\n        instance(x: 231, y: 3) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_3e9a4d -> mul_f892a4.first\n        div_64046c.result -> surface_area_5f7c34b\n    }\n\n    \n\n    instance(x: 201, y: -63) cube_surface_area_8bf6d1 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -194, y: 46, name: \"side_length\") property(Number) side_length_4f5a6b\n\n        out(x: 88, y: -69, name: \"surface_area\") property(Number) sa_f0d98c\n\n        instance(x: -109, y: -76, name: \"sides_of_cube\") property(Number) sides_of_cube_e85eb2 = 6\n        instance(x: 13, y: -216, name: \"square_side\") property(Number) square_side_4f5a6b = side_length_4f5a6b * side_length_4f5a6b\n        instance(x: 73, y: -176, name: \"sum_of_squares\") property(Number) sum_of_squares_7c0d8e\n\n        out(x: 88, y: -69, name: \"surface_area\") property(Number) sa_f0d98c\n\n        data_instance(x: -135, y: -253) data_d3a4f6  = [square_side]\n        instance(x: -47, y: -221) sum_2d66d9 root.Std_k98ojb.List.Sum {}\n        sides_of_cube -> sum_2d66d9.items\n        sum_2d66d9.sum -> sum_of_squares_7c0d8e\n        side_length_4f5a6b -> data_d3a4f6.a\n        square_side_4f5a6b -> sum_of_squares_7c0d8e\n        sa_f0d98c = sides_of_cube * sum_of_squares_7c0d8e\n    }\n\n    \n\n    instance(x: 103, y: -242) surface_area_b1a2d4 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -217, y: 44, name: \"side_length\") property(Number) side_length_5e4f34\n\n        out(x: 216, y: 74, name: \"surface_area\") property(Number) sa_9c9d7b\n\n        instance(x: -341, y: -222) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: -209, y: -179) data_e1f6ad  = 6\n        instance(x: 14, y: 193) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        side_length_5e4f34 -> mul_f892a4.first\n        side_length_5e4f34 -> pow_584bfd.x\n        data_e1f6ad -> pow_584bfd.y\n        pow_584bfd.result -> sa_9c9d7b\n    }\n\n    \n\n    instance(x: 301, y: -15) surface_area_66a2df root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -111, y: 59, name: \"side_length\") property(Number) side_length_5f2e4d\n\n        out(x: 216, y: 104, name: \"surface_area\") property(Number) sa_f1f7b3\n\n        instance(x: 28, y: -41, name: \"six_sides\") property(Number) six_sides_8a6c31\n        side_length_5f2e4d -> six_sides_8a6c31\n        six_sides_8a6c31 = 6\n\n        instance(x: 26, y: -96, name: \"side_area\") property(Number) side_area_b1f0a3\n        side_length_5f2e4d -> side_area_b1f0a3\n        side_area_b1f0a3 = 2 * side_length_5f2e4d * side_length_5f2e4d\n\n        instance(x: -43, y: -21, name: \"sum_areas\") property(Number) sum_areas_9c45b6\n        six_sides_8a6c31 -> sum_areas_9c45b6\n        side_area_b1f0a3 -> sum_areas_9c45b6\n        sum_areas_9c45b6 = 6 * side_length_5f2e4d * side_length_5f2e4d\n\n        instance(x: -110, y: 7, name: \"result\") property(Number) result_ea3df1\n        sum_areas_9c45b6 -> result_ea3df1\n    }\n\n    \n\n    instance(x: 102, y: 201) surface_area_f0d8f5 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -231, y: 41, name: \"side\") property(Number) side_9d0f4a\n\n        out(x: 216, y: -146, name: \"surface_area\") property(Number) surface_area_e3c5eb\n        out(x: 104, y: -240, name: \"continue\") trigger() continue_1e8da7\n\n        instance(x: 91, y: -105) mul_8d2d14 root.Std_k98ojb.Math.Mul {}\n        side_9d0f4a -> mul_8d2d14.first\n        6 -> mul_8d2d14.second\n        mul_8d2d14.result -> surface_area_e3c5eb\n    }\n\n    \n\n    instance(x: -174, y: -240) cube_surface_area_9e1a3b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -114, y: 23, name: \"side\") property(Number) side_1d3f65\n\n        out(x: 2128, y: 7, name: \"surface_area\") property(Number) surface_area_9a6c2b\n\n        instance(x: 14, y: -13, name: \"expression_4e5ca9\") expression_4e5ca9 = root.Std_k98ojb.Math.Expression {\n            expression: \"(6 * (side ^ 2))\"\n        }\n        side_1d3f65 -> expression_4e5ca9.gen_0\n        expression_4e5ca9.result -> surface_area_9a6c2b\n    }\n\n    \n\n    instance(x: -191, y: 23, name: \"cube_surface_area_7e1e22\") cube_surface_area_7e1e22 {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -493, y: 16, name: \"list\") property(List) list_4d3e33\n\n        out(x: 451, y: -22, name: \"difference\") property(Number) difference_a3f0b5\n        out(x: 439, y: 115, name: \"output\") trigger() output_b1c7ec\n\n        instance(x: -1069, y: -44) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -1023, y: 141) find_max_d0a4d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1008, y: 133) find_min_b7c1b9 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1062, y: 110) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_4d3e33 -> length_6e87f2.list\n        length_6e87f2.length -> find_max_d0a4d5.index\n        find_max_d0a4d5.item -> sub_f133b2.first\n        list_4d3e33 -> find_min_b7c1b9.list\n        find_min_b7c1b9.item -> sub_f133b2.second\n        sub_f133b2.result -> difference_a3f0b5\n    }\n\n    \n\n    instance(x: 73, y: -18) diff_largest_smallest_6d8e23 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") Diff {\n        in(x: -155, y: -23, name: \"list\") property(List) list_9d3f0e\n\n        out(x: 456, y: 63, name: \"max_diff\") property(Number) max_diff_a4c1d7\n        out(x: 102, y: -114, name: \"min_diff\") property(Number) min_diff_8a88c9\n\n        instance(x: -107, y: -38) length_3b6e83 root.Std_k98ojb.List.Length {}\n        instance(x: -95, y: 58) maxitem_f5d4f7 root.Std_k98ojb.List.MaxItem {}\n        instance(x: -106, y: -47) minitem_8a8c59 root.Std_k98ojb.List.MinItem {}\n        data_instance(x: -82, y: -36) data_d3e3ea  = [length, max, min]\n        instance(x: -71, y: 55) flatten_1d9f8f root.Std_k98ojb.List.Flatten {}\n        instance(x: -95, y: 42) slice_4a2bf0 root.Std_k98ojb.List.Slice {}\n        instance(x: -144, y: -38) length_3e5c62 root.Std_k98ojb.List.Length {}\n        instance(x: -105, y: -23) sub_8d45f6 root.Std_k98ojb.Math.Sub {}\n        list_9d3f0e -> maxitem_f5d4f7.list\n        list_9d3f0e -> minitem_8a8c59.list\n        data_d3e3ea -> flatten_1d9f8f.items\n        length_3b6e83.length -> sub_8d45f6.first\n        maxitem_f5d4f7.item -> sub_8d45f6.second\n        minitem_8a8c59.item -> sub_8d45f6.third\n        list_9d3f0e -> slice_4a2bf0.list\n        1 -> slice_4a2bf0.start\n        slice_4a2bf0.slice -> data_d3e3ea.max\n        flatten_1d9f8f.flattened -> max_diff_a4c1d7\n        length_3b6e83.length -> sub_8d45f6.first\n        minitem_8a8c59.item -> sub_8d45f6.second\n        list_9d3f0e -> slice_4a2bf0.list\n        1 -> slice_4a2bf0.start\n        slice_4a2bf0.slice -> data_d3e3ea.min\n        flatten_1d9f8f.flattened -> min_diff_8a88c9\n    }\n\n    \n\n    instance(x: -151, y: -55) Diff_8d2b5 root.main.Diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -124, y: -546, name: \"list\") property(List) list_9f55d4\n\n        out(x: 443, y: 53, name: \"difference\") property(Number) difference_e1c0df\n        out(x: 108, y: -556, name: \"continue\") trigger() continue_5a2e7b\n\n        instance(x: -105, y: -110) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -972, y: -516) maxitem_e0d9e6 root.Std_k98ojb.List.Max {}\n        instance(x: 201, y: 53) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_9f55d4 -> length_4b8927.list\n        list_9f55d4 -> maxitem_e0d9e6.list\n        length_4b8927.length -> sub_f133b2.first\n        maxitem_e0d9e6.item -> sub_f133b2.second\n        sub_f133b2.result -> difference_e1c0df\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_largest_smallest_58f4ec root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -155, y: -26, name: \"list\") property(List) list_5b3a8f\n\n        out(x: 446, y: 64, name: \"output\") property(Number) output_e1e4c6\n\n        instance(x: -1149, y: -484) length_4d7ca2 root.Std_k98ojb.List.Length {}\n        instance(x: -1085, y: 159) maxitem_8f0a66 root.Std_k98ojb.List.Max {}\n        instance(x: -1041, y: 161) minitem_74c21e root.Std_k98ojb.List.Min {}\n        instance(x: -1013, y: 179) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_5b3a8f -> length_4d7ca2.list\n        maxitem_8f0a66 -> minitem_74c21e\n        minitem_74c21e -> output_e1e4c6\n        sub_f133b2.result -> output_e1e4c6\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_largest_smallest_5d3f22 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -1459, y: -530, name: \"list\") property(List) list_8e4f5d\n\n        out(x: -1441, y: -546, name: \"max\") property(Number) max_ea5c74\n        out(x: 1092, y: -538, name: \"min\") property(Number) min_c59b23\n        out(x: -1059, y: -558, name: \"difference\") property(Number) difference_8f5e24\n\n        instance(x: -1133, y: -479) length_2a4d7c root.Std_k98ojb.List.Length {}\n        instance(x: 1091, y: 13, name: \"max_node\") Std.If {\n            condition: \"it == list_8e4f5d.length\"\n        }\n        instance(x: -1129, y: -513) lastitem_7a2dd6 root.Std_k98ojb.List.LastItem {}\n        instance(x: 1111, y: -479) firstitem_d66c0d root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1135, y: -484) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: -1123, y: -547) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        list_8e4f5d -> max_node.condition\n        list_8e4f5d -> lastitem_7a2dd6.list\n        firstitem_d66c0d.item -> sub_f133b2.first\n        lastitem_7a2dd6.item -> sub_f133b2.second\n        greaterthan_cb50ae.left -> max_node.value\n        greaterthan_cb50ae.right -> min_c59b23.value\n        if(max_node.value) {\n            max_ea5c74 -> lastitem_7a2dd6.item\n            min_c59b23 -> firstitem_d66c0d.item\n            sub_f133b2.result -> difference_8f5e24\n        } else {\n            max_ea5c74 -> firstitem_d66c0d.item\n            min_c59b23 -> lastitem_7a2dd6.item\n            sub_f133b2.result -> difference_8f5e24\n        }\n    }\n\n    \n\n    instance(x: 103, y: -58) diff_max_min_4d86e1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -159, y: 432, name: \"list\") property(List) list_0b8d38\n\n        out(x: 549, y: 56, name: \"difference\") property(Number) difference_ea6f95\n        out(x: 442, y: -114, name: \"continue\") trigger() continue_5e89c7\n\n        instance(x: -110, y: -116) length_8d4b9b root.Std_k98ojb.List.Length {}\n        instance(x: 208, y: 55) maxitem_d6fdd1 root.Std_k98ojb.List.Max {}\n        instance(x: -120, y: 438) minitem_ba5e0c root.Std_k98ojb.List.Min {}\n        instance(x: -116, y: 63) sub_3d9e7b root.Std_k98ojb.Math.Sub {}\n        list_0b8d38 -> length_8d4b9b.list\n        length_8d4b9b.length -> maxitem_d6fdd1.length\n        maxitem_d6fdd1.item -> sub_3d9e7b.first\n        minitem_ba5e0c.item -> sub_3d9e7b.second\n        sub_3d9e7b.result -> difference_ea6f95\n    }\n\n    \n\n    instance(x: 44, y: -24) diff_largest_smallest_65dd62 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -119, y: 243, name: \"list\") property(List) list_6d84f8\n\n        out(x: -110, y: 253, name: \"max\") property(Number) max_e1c9b5\n        out(x: 508, y: 244, name: \"min\") property(Number) min_4e3d36\n        out(x: 618, y: 240, name: \"difference\") property(Number) difference_a5f55a\n\n        instance(x: -1049, y: -375) firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1059, y: -696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_6d84f8 -> lastitem_d831ca.list\n        list_6d84f8 -> firstitem_9b1bc3.list\n        data_cc1b1b -> flatten_c31c7c.items\n        firstitem_9b1bc3.item -> data_cc1b1b.last\n        lastitem_d831ca.item -> data_cc1b1b.first\n        list_6d84f8 -> slice_3f3ee6.list\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        flatten_c31c7c.flattened -> max_e1c9b5\n        list_6d84f8 -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.end\n    }\n\n    \n\n    instance(x: -174, y: -63) diff_max_min_0e9a8c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -155, y: 19, name: \"list\") property(List) list_9d2f8a\n\n        out(x: 432, y: -194, name: \"difference\") property(Number) difference_ae4c5b\n        out(x: 439, y: 65, name: \"output\") trigger() output_0c9f1e\n\n        instance(x: -105, y: -110) length_3a56d7 root.Std_k98ojb.List.Length {}\n        instance(x: -144, y: 112, name: \"max\") property(Number) max_e6e2df\n        instance(x: -119, y: 493, name: \"min\") property(Number) min_a1f5c4\n        instance(x: -120, y: 491) sub_8a4d3b root.Std_k98ojb.Math.Sub {}\n        list_9d2f8a -> length_3a56d7.list\n        length_3a56d7.length -> max_e6e2df\n        length_3a56d7.length -> min_a1f5c4\n        sub_8a4d3b.result -> difference_ae4c5b\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_largest_smallest_53f6af root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -113, y: -533, name: \"list\") property(List) list_5f9d4e\n\n        out(x: -146, y: -537, name: \"output\") property(Number) output_b0a8c7\n        out(x: 451, y: -117, name: \"continue\") trigger() continue_58b5df\n\n        instance(x: -1059, y: -638) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -1351, y: 145, name: \"max\") property(Number) max_0c74d4\n        instance(x: -1417, y: -592) minitem_8aebcd root.Std_k98ojb.List.MinItem {}\n        instance(x: -1399, y: -488) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 509, y: -576) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        list_5f9d4e -> length_6e87f2.list\n        max_0c74d4 -> minitem_8aebcd.item\n        list_5f9d4e -> sub_f133b2.list\n        length_6e87f2.length -> greaterthan_cb50ae.right\n        1 -> greaterthan_cb50ae.left\n        sub_f133b2.result -> max_0c74d4\n        minitem_8aebcd.item -> output_b0a8c7\n        list_5f9d4e -> length_6e87f2.list\n    }\n\n    \n\n    instance(x: 201, y: -33) diff_largest_smallest_59e35b root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -128, y: -498, name: \"list\") property(List) list_4d0e89\n\n        out(x: 436, y: -495, name: \"max\") property(Number) max_1f8c9b\n        out(x: 508, y: -504, name: \"min\") property(Number) min_a5c869\n        out(x: 513, y: -493, name: \"difference\") property(Number) difference_0e4d56\n\n        instance(x: -105, y: -494) length_1b1a51 root.Std_k98ojb.List.Length {}\n        instance(x: -48, y: 495) max_8c7f2b root.Std_k98ojb.Math.Max {}\n        instance(x: -108, y: 499) min_f9d3ca root.Std_k98ojb.Math.Min {}\n        instance(x: -44, y: 503) sub_d1e4a0 root.Std_k98ojb.Math.Sub {}\n        list_4d0e89 -> length_1b1a51.list\n        max_8c7f2b.result -> min_a5c869\n        min_f9d3ca.result -> difference_0e4d56\n        sub_d1e4a0.first -> max_8c7f2b.right\n        1 -> length_1b1a51.length\n        length_1b1a51.length -> sub_d1e4a0.second\n    }\n\n    \n\n    instance(x: -69, y: -39) diff_max_min_3d42ec root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -38, y: 35, name: \"n\") property(Number) n_5f8d9a\n\n        out(x: 1094, y: -31, name: \"output\") property(Bool) output_b7c98e\n\n        instance(x: 23, y: 33) modulo_d3f0eb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 42) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        n_a6cea7 -> modulo_d3f0eb.value\n        2 -> modulo_d3f0eb.divisor\n        modulo_d3f0eb.result -> notequal_7836b4.left\n        0 -> notequal_7836b4.right\n        notequal_7836b4.result -> output_b7c98e\n    }\n\n    \n\n    instance(x: -19, y: -13) is_even_1f5a57 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -534, y: 3, name: \"number\") property(Number) num_5f1d45\n\n        out(x: 1708, y: -10, name: \"output\") property(Bool) output_7a5b9e\n\n        instance(x: 192, y: -11, name: \"transform number to even/odd\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 105, y: -12, name: \"check parity\") logic_equal_0c9f7d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 189, y: -10, name: \"transform result to bool\") logic_not_6f5a8e root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -19, y: -16, name: \"current\") property(Number) current_ae2c3d\n\n            out(x: 191, y: 74, name: \"output\") property(Bool) output_6f5a8e\n\n            instance(x: 231, y: 75) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            current_ae2c3d -> modulo_c76d2b.value\n            0 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> output_6f5a8e\n        } -> map_c73e3b.handler\n        num_5f1d45 -> map_c73e3b.expression\n        logic_equal_0c9f7d.left -> modulo_c76d2b.value\n        0 -> logic_equal_0c9f7d.right\n        logic_not_6f5a8e.result -> output_7a5b9e\n    }\n\n    \n\n    instance(x: -64, y: -10) is_even_f1dd3a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -529, y: 46, name: \"number\") property(Number) num_4d3b9f\n\n        out(x: 0, y: 70, name: \"result\") property(Bool) result_e1a8e6\n\n        instance(x: -189, y: 59) modulo_d5c8e7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 188, y: 64) equal_4f2d3b root.Std_k98ojb.Logic.Equal {}\n        modulo_d5c8e7.result -> result_e1a8e6\n        num_4d3b9f -> modulo_d5c8e7.value\n        0 -> equal_4f2d3b.right\n        1 -> equal_4f2d3b.left\n        equal_4f2d3b.result -> result_e1a8e6\n    }\n\n    \n\n    instance(x: -55, y: -21) is_even_74a5c9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -33, y: 20, name: \"number\") property(Number) num_5a5f64\n\n        out(x: 1749, y: -10, name: \"output\") property(Bool) output_8e0d36\n\n        instance(x: 102, y: 26) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 145, y: 43) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 178, y: -5) tolower_3e4f6c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 102, y: 26) isnumeric_2d0d47 root.Std_k98ojb.Strings.IsNumeric {}\n\n        num_5a5f64 -> modulo_c76d2b.value\n        0 -> notequal_cb8a55.right\n        tolower_3e4f6c.input -> modulo_c76d2b.result\n        isnumeric_2d0d47.input -> tolower_3e4f6c.result\n        modulo_c76d2b.divisor -> isnumeric_2d0d47.divisor\n        notequal_cb8a55.result -> output_8e0d36\n        isnumeric_2d0d47.is_contained -> notequal_cb8a55.input\n    }\n\n    \n\n    instance(x: 48, y: 11) is_even_6f9c34 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -27, y: 46, name: \"number\") property(Number) number_4a3d0e\n\n        out(x: 1281, y: -22, name: \"output\") property(Bool) output_b9f6c7\n\n        instance(x: 184, y: 34) modulo_d45b44 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1003, y: 46) equal_2d8eaa root.Std_k98ojb.Logic.Equal {}\n        number_4a3d0e -> modulo_d45b44.value\n        0 -> equal_2d8eaa.right\n        modulo_d45b44.result -> equal_2d8eaa.left\n        equal_2d8eaa.result -> output_b9f6c7\n    }\n\n    \n\n    instance(x: -73, y: -22) is_even_f3cd51 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -47, y: 35, name: \"n\") property(Number) n_8f9d85\n\n        out(x: 1104, y: -31, name: \"output\") property(Bool) output_a1c43e\n\n        instance(x: 184, y: 24) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 104, y: 33) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        n_a6cea7 -> modulo_c76d2b.value\n        0 -> notequal_7836b4.right\n        modulo_c76d2b.result -> notequal_7836b4.left\n        modulo_c76d2b.divisor -> notequal_7836b4.right\n        n_a6cea7 % notequal_7836b4.right -> output_a1c43e\n    }\n\n    \n\n    instance(x: -56, y: 13) is_even_fef9f5 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -42, y: 44, name: \"n\") property(Number) n_1f2a4d\n\n        out(x: 1095, y: -14, name: \"output\") property(Bool) output_ba3c9b\n\n        instance(x: 210, y: -12, name: \"is_even\") Std.If {\n            then: \"n % 2 == 0\"\n            else: \"n % 2 != 0\"\n        }\n        n_1f2a4d -> is_even.then\n        is_even.else -> output_ba3c9b\n    }\n\n    \n\n    instance(x: -46, y: 14) is_even_d8dd5b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -530, y: 25, name: \"number\") property(Number) num_4d9f8a\n\n        out(x: 1753, y: 14, name: \"output\") property(Bool) output_59c5e1\n\n        instance(x: 234, y: 34, name: \"check even\") Std.If {\n            then: \"if (number % 2 == 0) { return true; } else { return false; }\"\n            else: \"return false;\"\n        }\n        num_4d9f8a -> check_even.input\n        check_even.value -> output_59c5e1\n    }\n\n    \n\n    instance(x: -190, y: 54) is_even_0b7c37 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -38, y: 14, name: \"number\") property(Number) num_6e4d5a\n\n        out(x: 1732, y: -210, name: \"output\") property(Bool) output_a8f3b9\n\n        instance(x: 115, y: -206, name: \"even check\") filter_d63d35 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 245, y: -204, name: \"transform to bool\") map_8c4a6e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 17, y: -205) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -23, y: -21, name: \"current\") property(Number) current_7d3c5a\n            in(x: -16, y: 78, name: \"_modulus\") property(Number) modulus_2f71f1\n\n            out(x: 1729, y: 50, name: \"output\") property(Bool) output_4eb8e0\n\n            instance(x: 231, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            current_7d3c5a -> modulo_c76d2b.value\n            modulus_2f71f1 -> modulo_c76d2b.divisor\n            not_75283f.result -> output_4eb8e0\n            modulo_c76d2b.result -> not_75283f.left\n            0 -> not_75283f.right\n            not_75283f.result -> output_4eb8e0\n        } -> filter_d63d35.handler\n        num_6e4d5a -> filter_d63d35.input\n        map_8c4a6e.output_list -> output_a8f3b9\n    }\n\n    \n\n    instance(x: -44, y: 15) is_even_e1a2ea root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -527, y: 438, name: \"input\") property(Number) input_3f2a95\n\n        out(x: 1734, y: -209, name: \"output\") property(Bool) output_b0b8d5\n\n        instance(x: -303, y: -205, name: \"transform number to boolean\") map_7c7e24 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 847, y: -207) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            out(x: 1734, y: -209, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            0 -> modulo_c76d2b.divisor\n            input_3f2a95 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> map_7c7e24.handler\n        input_3f2a95 -> map_7c7e24.input\n        map_7c7e24.output_list -> not_75283f.list\n        false -> not_75283f.item\n        output_b0b8d5.result -> output_efbc78\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_f21f44 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -261, y: 186, name: \"string\") property(String) input_0\n\n        out(x: 1101, y: 26, name: \"output\") property(Number) output_4c6f1d\n\n        instance(x: 342, y: 22) tolower_e2b5d3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: -193, name: \"map_0e8f9a\") map_0e8f9a = [Std_k98ojb.List, Std_k98ojb.List]\n        instance(x: 234, y: 44) count_a1b4d6 root.Std_k98ojb.Std.Count {}\n        instance(x: 450, y: -186, name: \"first_even\") first_even_6f7e2c root.Std_k98ojb.Iteration.For {}\n        instance(x: 456, y: -180) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        tolower_e2b5d3.output -> map_0e8f9a[0]\n        input_0 -> tolower_e2b5d3.input\n        map_0e8f9a[1] -> count_a1b4d6.list\n        0 -> count_a1b4d6.reset\n        first_even.index -> count_a1b4d6.count\n        count_a1b4d6.count -> first_even.next\n        input_0 -> first_even.item\n        map_0e8f9a[0] -> equal_aabb6e.left\n        tolower_e2b5d3.input -> equal_aabb6e.right\n        equal_aabb6e.result -> first_even.done\n        count_a1b4d6.count -> output_4c6f1d\n    }\n\n    \n\n    instance(x: -221, y: 199) first_repeated_char_f2df43 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 196, name: \"string\") property(String) input_0\n\n        out(x: 1213, y: 26, name: \"output\") property(Number) output_b2c4f1\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_b2c4f1\n        26 -> contains_d42dce.length\n        input_0 -> tolower_2e1444.input\n    }\n\n    \n\n    instance(x: -201, y: 178) first_repeated_char_6c9a83 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -338, y: 0, name: \"string\") property(String) input_3\n\n        out(x: 1039, y: -2, name: \"result\") property(Any) result_1\n\n        instance(x: 10, y: 2) tolower_a4d8a5 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 281, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 449, y: -135, name: \"count\") count_6e3f1c root.Std_k98ojb.Std.Count {}\n        instance(x: 538, y: 25, name: \"index\") index_c7a2db root.Std_k98ojb.Std.For {}\n        tolower_a4d8a5.output -> contains_d42dce.input\n        input_3 -> tolower_a4d8a5.input\n        count_6e3f1c.reset -> index.index\n        contains_d42dce.result -> result_1\n        1 -> count_6e3f1c.new_value\n        index.next -> count_6e3f1c.reset\n        input_3 -> tolower_a4d8a5.input\n        tolower_a4d8a5.output -> contains_d42dce.input\n        input_3 -> contains_d42dce.input\n        contains_d42dce.result -> result_1\n    }\n\n    \n\n    instance(x: 23, y: 178) first_repeated_char_f54e2b root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -270, y: 0, name: \"string\") property(String) input_9\n\n        out(x: 1045, y: 38, name: \"output\") property(Number) output_d1c7d4\n\n        instance(x: 0, y: 2) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_9 -> tolower_2e1444.input\n        contains_d42dce.result -> output_d1c7d4\n        instance(x: 0, y: 1) count_6f4a3b root.Std_k98ojb.Std.Count {}\n        count_6f4a3b.reset -> contains_d42dce.continue\n        list_09fcba -> count_6f4a3b.items\n        instance(x: -39, y: 26, name: \"char\") char_0e7b5c root.Std_k98ojb.Strings.Characters {}\n        char_0e7b5c.output -> output_d1c7d4\n        input_9 -> char_0e7b5c.input\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -215, y: 1, name: \"string\") property(String) input_0\n\n        out(x: 1025, y: -2, name: \"result\") property(Any) result_0\n\n        instance(x: 74, y: 18) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 275, y: 1) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 430, y: -167, name: \"char\") char_a9c2a7 {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> result_0\n        char_a9c2a7.value -> result_0\n    }\n\n    \n\n    instance(x: 123, y: 57) first_repeated_char_f1d85b root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 531, y: -157, name: \"map\") map_8a7f14 = {}\n        instance(x: 112, y: 80) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 415, y: 86) not_equal_a55e45 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 112, y: -158, name: \"char\") char_0b1361 {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> map_8a7f14.value\n        if_7c284f.execute -> not_equal_a55e45.predicate\n        char_0b1361 -> map_8a7f14.key\n        1 -> map_8a7f14.new_value\n        contains_d42dce.contains -> not_equal_a55e45.left\n        input_0 -> not_equal_a55e45.right\n        not_equal_a55e45.result -> char_0b1361.value\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -242, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 531, y: -2, name: \"result\") property(Any) result_c4c5e9\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 421, y: -105, name: \"map\") map_3a7f1c root.Std_k98ojb.List.Map {}\n        instance(x: 112, y: 80) if_7c284f root.Std_k98ojb.Std.If {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> map_3a7f1c.map\n        map_3a7f1c.map -> if_7c284f.predicate\n        1 -> if_7c284f.index\n        map_3a7f1c.value -> if_7c284f.item\n        if_7c284f.result -> result_c4c5e9\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_f15bad root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -251, y: 0, name: \"string\") property(String) input_4\n\n        out(x: 1141, y: -2, name: \"output\") property(Number) output_3e6aeb\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 532, y: -105) count_a95f9a root.Std_k98ojb.Std.Count {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_4 -> tolower_2e1444.input\n        contains_d42dce.result -> count_a95f9a.reset\n        count_a95f9a.count -> contains_d42dce.value\n        count_a95f9a.done -> output_3e6aeb\n        1 -> count_a95f9a.new_value\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_char_0c7f2b root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -289, y: 186, name: \"string\") property(String) input_1\n\n        out(x: 1049, y: 43, name: \"output\") property(Number) output_e5f0b3\n\n        instance(x: 48, y: 191) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -40, y: 84, name: \"map_7d9a8c\") map_7d9a8c = {}\n        instance(x: 58, y: 187) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        input_1 -> tolower_2e1444.input\n        contains_d42dce.result -> map_7d9a8c.contains\n        0 -> map_7d9a8c.index\n        1 -> map_7d9a8c.value\n        map_7d9a8c.result -> output_e5f0b3\n    }\n\n    \n\n    instance(x: -109, y: 234) first_repeated_char_f2e4ab root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -272, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Number) output_3ae271\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> output_3ae271\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -434, y: 18, name: \"list\") property(List) list_a8f1d4\n\n        out(x: 504, y: 38, name: \"min\") property(Number) min_6e31c0\n        out(x: 515, y: 17, name: \"second_min\") property(Number) second_min_3b7a41\n\n        instance(x: -109, y: 29) first_smallest_node root.Std_k98ojb.List.Min {}\n        list_a8f1d4 -> first_smallest_node.items\n        first_smallest_node.min -> min_6e31c0\n        instance(x: 310, y: 15) second_smallest_node root.Std_k98ojb.List.Sort {}\n        list_a8f1d4 -> second_smallest_node.items\n        min_6e31c0 -> second_smallest_node.items[1]\n        second_smallest_node.result -> second_min_3b7a41\n    }\n\n    \n\n    instance(x: -35, y: 555) second_smallest_9bcb59 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -313, y: 3, name: \"list\") property(List) list_9d5a4b\n\n        out(x: 517, y: -1, name: \"second_min\") property(Number) second_min_7c1e8f\n        instance(x: 0, y: 0) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 416, y: 30) count_node root.Std_k98ojb.Std.Count {}\n        list_9d5a4b -> min_node.items\n        count_node.reset -> min_node.trigger\n        count_node.count -> min_node.value\n        min_node.min -> second_min_7c1e8f\n    }\n\n    \n\n    instance(x: -52, y: 547) second_smallest_eb0bb9 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -444, y: 11, name: \"list\") property(List) list_9d4e48\n\n        out(x: 515, y: 56, name: \"second_min\") property(Number) second_min_2f8a29\n        instance(x: 0, y: 0) Std.If { \n            in(x: -106, y: 46, name: \"first_min\") property(Number) first_min_4c9d7b\n            in(x: -388, y: 24, name: \"count\") property(Number) count_c6e8f5\n\n            out(x: 0, y: 22, name: \"else\") trigger() else_8e3a11\n            first_min_4c9d7b -> Std.If.then\n            list_9d4e48[1] -> Std.If.then\n            count_c6e8f5 -> Std.If.else\n        } \n        instance(x: 0, y: 0) Std.IfExpression { \n            expression: \"first_min < second_min\"\n        }\n        first_min_4c9d7b -> Std.IfExpression.gen_0\n        list_9d4e48[1] -> Std.IfExpression.gen_1\n        count_c6e8f5 -> Std.IfExpression.gen_2\n        Std.IfExpression.then -> second_min_2f8a29\n        first_min_4c9d7b -> second_min_2f8a29\n        list_9d4e48[1] -> second_min_2f8a29\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_dfe6eb root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -275, y: 9, name: \"list\") property(List) list_4d1e3a\n\n        out(x: 542, y: -114, name: \"second_min\") property(Number) second_min_2c8c7f\n\n        instance(x: -341, y: -112, name: \"min_node\") root.Std_k98ojb.List.Min {}\n        list_4d1e3a -> min_node.items\n        min_node.min -> Std_k98ojb.Std.IfExpression {\n            expression: \"true\"\n        }\n        Std_k98ojb.Std.IfExpression.then -> Std_k98ojb.Std.IfExpression {\n            expression: \"false\"\n        }\n        Std_k98ojb.Std.IfExpression.then.then -> second_min_2c8c7f\n        list_4d1e3a[1] -> Std_k98ojb.Std.IfExpression.gen_0\n        list_4d1e3a[0] -> Std_k98ojb.Std.IfExpression.gen_1\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_9f8e7f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"min1\") property(Number) min1_7a94c9\n        out(x: 342, y: 69, name: \"min2\") property(Number) min2_b5d3f4\n\n        instance(x: -106, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min1\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min1\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min1\n        getter_9cceb3.value -> min1_b5d3f4\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n\n        instance(x: 0, y: 3) min1_node root.Std_k98ojb.List.Min {}\n        a_f37c19 -> min1_node.items\n        min1_node.min -> min1_b5d3f4\n\n        instance(x: -34, y: 127) second_smallest_node root.main.second_smallest {}\n\n        data_instance(x: -609, y: -363) data_9a9c70  = [a_f37c19, b_f9110a]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        a_f37c19 -> data_9a9c70.a\n        b_f9110a -> data_9a9c70.b\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> min2_b5d3f4\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -445, y: 1, name: \"list\") property(List) list_8f5e2a\n        out(x: 542, y: -118, name: \"min\") property(Number) min_1d3b9c\n        out(x: 548, y: -119, name: \"second_min\") property(Number) second_min_6ca4cd\n\n        instance(x: -219, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -278, y: 112, name: \"getter_3c9d7f\") getter_3c9d7f = min\n        setter(x: 108, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 110, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        list_8f5e2a -> ifexpression_e38995.gen_0\n        getter_3c9d7f.value -> min_1d3b9c\n        instance(x: 118, y: -56, name: \"second_min_node\") second_min_node root.Std_k98ojb.Std.IfExpression {}\n        list_8f5e2a[1] -> second_min_node.gen_0\n        ifexpression_e38995.then -> setter_37db7f.execute\n        list_8f5e2a[0] -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        getter_3c9d7f.value -> min_1d3b9c\n        second_min_node.item -> second_min_6ca4cd\n    }\n\n    \n\n    instance(x: -174, y: 0) second_smallest_5e43a8 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -213, y: 2, name: \"list\") property(List) list_a3a8d1\n\n        out(x: 512, y: -19, name: \"min\") property(Number) min_5c758f\n        out(x: 513, y: -19, name: \"second_min\") property(Number) second_min_7b4e9f\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -104, y: 36, name: \"elem\") property(Number) elem_f1cd35\n            out(x: 546, y: 44, name: \"bool\") property(Bool) bool_2c7aeb\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_f1cd35 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_2c7aeb\n        } -> find_6d05b0.predicate\n\n        instance(x: -145, y: 29) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -164, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        elem_f1cd35 -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> min_5c758f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        elem_f1cd35 -> setter_1cedb2.new_value\n        find_6d05b0.item -> second_min_7b4e9f\n        find_6d05b0.done -> min_5c758f\n        ifexpression_e38995.else -> setter_37db7f.execute\n        elem_f1cd35 -> setter_37db7f.new_value\n        find_6d05b0.item -> second_min_7b4e9f\n        find_6d05b0.done -> min_5c758f\n    }\n\n    \n\n    instance(x: -55, y: 529) second_smallest_baeb95 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -909, y: 18, name: \"list\") property(List) list_9f6a3d\n\n        out(x: 514, y: 40, name: \"second_min\") property(Number) second_min_9c4e8b\n\n        instance(x: -445, y: 20) min_node root.Std_k98ojb.List.Min {}\n        instance(x: -326, y: 34) second_node root.Std_k98ojb.List.For {\n            trigger: \"done\",\n            reset: \"done\",\n            next: \"item\"\n            items: list_9f6a3d\n        }\n        list_9f6a3d -> min_node.items\n        min_node.min -> Std.IfExpression { a < b ? a : b } \n        second_node.item -> Std.IfExpression { a > b ? a : b }\n        second_node.item -> second_min_9c4e8b\n    }\n\n    \n\n    instance(x: -19, y: 555) second_smallest_6a3f35 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -439, y: 8, name: \"list\") property(List) list_5d1f3a\n\n        out(x: 518, y: 43, name: \"min\") property(Number) min_b0e4c6\n        out(x: 522, y: 29, name: \"second_min\") property(Number) second_min_eb71cd\n\n        instance(x: -213, y: -108, name: \"indexer_5d0f23\") indexer_5d0f23 root.Std_k98ojb.List.Index {}\n        list_5d1f3a -> indexer_5d0f23.list\n        indexer_5d0f23.index -> min_b0e4c6\n        instance(x: -222, y: 55) Std.If {\n            in(x: -434, y: 2, name: \"first_min\") property(Number) first_min_8a1f7b\n            first_min_8a1f7b -> min_b0e4c6\n            instance(x: -217, y: 23) Std.IfExpression {\n                expression: \"first_min < second_min\"\n            }\n            first_min -> Std.If.then\n            second_min_eb71cd -> Std.If.else\n        } -> second_min_eb71cd\n    }\n\n    \n\n    instance(x: -52, y: 551) second_smallest_4f6e3d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the second smallest number in a given list of numbers.\") second_smallest {\n        in(x: -305, y: 2, name: \"list\") property(List) list_a5a4d8\n\n        out(x: 518, y: -219, name: \"min\") property(Number) min_1e7f3c\n        out(x: 520, y: -210, name: \"second_min\") property(Number) second_min_4b6df9\n\n        instance(x: -144, y: -110) first_smallest_node root.Std_k98ojb.List.Min {}\n        list_a5a4d8 -> first_smallest_node.items\n        first_smallest_node.min -> min_1e7f3c\n        instance(x: 22, y: -301) second_smallest_node root.Std_k98ojb.List.Sort {}\n        list_a5a4d8 -> second_smallest_node.items\n        second_smallest_node.value -> second_min_4b6df9\n    }\n    \n\n    instance(x: -55, y: 526) second_smallest_1f7e2c root.main.second_smallest {}\n}"
            ]
        }
    }
]