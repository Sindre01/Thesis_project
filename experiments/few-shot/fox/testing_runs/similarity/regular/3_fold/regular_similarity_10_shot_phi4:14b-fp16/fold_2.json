[
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 12101,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -277, y: 164, name: \"list1\") property(List) list1_0a8f9e\n        in(x: -278, y: -3, name: \"list2\") property(List) list2_eb7d5c\n\n        out(x: 801, y: 145, name: \"output\") property(Bool) output_d6c4ba\n\n        instance(x: 532, y: 147) intersection_9a8e0f root.Std_k98ojb.Sets.Intersection {}\n        list1_0a8f9e -> intersection_9a8e0f.left\n        list2_eb7d5c -> intersection_9a8e0f.right\n        instance(x: 698, y: 145) notempty_4a3b6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a8e0f.intersect -> notempty_4a3b6f.list\n        notempty_4a3b6f.isEmpty -> output_d6c4ba\n    }\n\n    \n\n    instance(x: -291, y: 177) intersection_1d5d7c root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_4e9f8a\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_eb7c6d\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_5e3e1e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_4a8f0c root.Std_k98ojb.Sets.Intersection {}\n        list1_4e9f8a -> intersection_4a8f0c.left\n        list2_eb7c6d -> intersection_4a8f0c.right\n        instance(x: 679, y: -49) notempty_3a5b3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4a8f0c.intersect -> notempty_3a5b3f.list\n        notempty_3a5b3f.isEmpty -> output_5e3e1e\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_9d6f2c root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -172, y: 18, name: \"list1\") property(List) list1_94ca93\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_aa3106\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_20b99a\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_94ca93 -> intersection_c7c7e6.left\n        list2_aa3106 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> output_20b99a\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_aad0c2 root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 18, name: \"list1\") property(List) list1_9e6f8a\n        in(x: -163, y: -121, name: \"list2\") property(List) list2_7c3d5b\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_b4c0aa\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_9e1f8a root.Std_k98ojb.Sets.Intersection {}\n        list1_9e6f8a -> intersection_9e1f8a.left\n        list2_7c3d5b -> intersection_9e1f8a.right\n        instance(x: -11, y: 9) notempty_4aeea6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9e1f8a.intersect -> notempty_4aeea6.list\n        notempty_4aeea6.isEmpty -> output_b4c0aa\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_3a8f9e\n        in(x: -182, y: -120, name: \"list2\") property(List) list2_e5b6c7\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 133, y: -131) intersection_3e9d0a root.Std_k98ojb.Sets.Intersection {}\n        list1_3a8f9e -> intersection_3e9d0a.left\n        list2_e5b6c7 -> intersection_3e9d0a.right\n        instance(x: 363, y: -110) notempty_c4f7ed root.Std_k98ojb.List.NotEmpty {}\n        intersection_3e9d0a.intersect -> notempty_c4f7ed.list\n        notempty_c4f7ed.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_3e9b5a\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_e6f7d4\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_8c9b0f\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_5e1a5f root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9b5a -> intersection_5e1a5f.left\n        list2_e6f7d4 -> intersection_5e1a5f.right\n        instance(x: 188, y: -50) notempty_8c0c9e root.Std_k98ojb.List.NotEmpty {}\n        intersection_5e1a5f.intersect -> notempty_8c0c9e.list\n        notempty_8c0c9e.isEmpty -> output_8c9b0f\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_e7d6b2 root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -177, y: 19, name: \"list1\") property(List) list1_3a0f8e\n        in(x: -178, y: -117, name: \"list2\") property(List) list2_9c7d5b\n\n        out(x: 505, y: -49, name: \"output\") property(Bool) output_6c4a3f\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_e1e8cd root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f8e -> intersection_e1e8cd.left\n        list2_9c7d5b -> intersection_e1e8cd.right\n        instance(x: 321, y: -20) notempty_6f4a4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_e1e8cd.intersection -> notempty_6f4a4c.list\n        notempty_6f4a4c.isEmpty -> output_6c4a3f\n    }\n\n    \n\n    instance(x: -138, y: -63) has_common_element_aad0c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -174, y: 18, name: \"list1\") property(List) list1_3e9b8a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7f6c4d\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_e5c1ea\n\n        instance(x: 133, y: -131) intersection_9a3e8b root.Std_k98ojb.Sets.Intersection {}\n        list1_3e9b8a -> intersection_9a3e8b.left\n        list2_7f6c4d -> intersection_9a3e8b.right\n        instance(x: 360, y: -95) notempty_5f0c1f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a3e8b.intersect -> notempty_5f0c1f.list\n        notempty_5f0c1f.isEmpty -> output_e5c1ea\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: 18, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        instance(x: 363, y: -109) notempty_f8a6c9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> notempty_f8a6c9.list\n        notempty_f8a6c9.isEmpty -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -171, y: 20, name: \"list1\") property(List) list1_8e6b2f\n        in(x: -169, y: -124, name: \"list2\") property(List) list2_7a9c0d\n\n        out(x: 557, y: -98, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e6b2f -> intersection_c7c7e6.left\n        list2_7a9c0d -> intersection_c7c7e6.right\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        instance(x: 360, y: -95) greaterthan_1f3a9d root.Std_k98ojb.Math.GreaterThan {}\n        length_8166b0.length -> greaterthan_1f3a9d.left\n        0 -> greaterthan_1f3a9d.right\n        greaterthan_1f3a9d.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 438, y: 25, name: \"getter_8a3f9d\") getter_8a3f9d = previous\n        setter(x: 882, y: -312, name: \"setter_7c0b4e\") setter_7c0b4e = previous\n        instance(x: 416, y: -19) for_1e5b2e root.Std_k98ojb.Std.For {}\n        setter(x: -3, y: -121, name: \"setter_7c0b4e\") setter_9f6d3a = previous\n        instance(x: -276, y: -35) getat_1b8b2c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b2c.else -> continue_8b5e7f\n        ifexpression_7e7b2c.value -> output_eb7d1c\n        ifexpression_7e7b2c.then -> setter_7c0b4e.execute\n        list_0a8f9e -> for_1e5b2e.items\n        for_1e5b2e.item -> ifexpression_7e7b2c.gen_2\n        for_1e5b2e.index -> ifexpression_7e7b2c.gen_0\n        getter_8a3f9d.value -> ifexpression_7e7b2c.gen_1\n        for_1e5b2e.onItem -> ifexpression_7e7b2c.execute\n        for_1e5b2e.done -> continue_8b5e7f\n        for_1e5b2e.item -> setter_7c0b4e.new_value\n        list_0a8f9e -> getat_1b8b2c.list\n        0 -> getat_1b8b2c.index\n        getat_1b8b2c.itemAtIndex -> setter_9f6d3a.new_value\n        execute_5f7c4e -> setter_9f6d3a.execute\n        setter_9f6d3a.continue -> for_1e5b2e.reset\n        setter_7c0b4e.continue -> for_1e5b2e.next\n    }\n\n    \n\n    instance(x: -64, y: 60) is_consecutive_8b0b4e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 3, name: \"list\") property(List) list_1a9f8e\n\n        out(x: 1025, y: 0, name: \"output\") property(Bool) output_7b2c8d\n\n        instance(x: 106, y: -12) sort_4e6b3c root.Std_k98ojb.List.Sort {}\n        instance(x: 387, y: 10) for_9a1f0c root.Std_k98ojb.Std.For {}\n        instance(x: 723, y: 8) sub_7d2f5c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1023, y: -11) if_6e4a2c root.Std_k98ojb.Std.If {}\n        sort_4e6b3c.list -> for_9a1f0c.items\n        func() {\n            in(x: -113, y: 38, name: \"current\") property(Number) current_8d5f7c\n\n            out(x: 515, y: 48, name: \"bool\") property(Bool) bool_4b2a3e\n\n            instance(x: 112, y: 33) sub_9e1b0c root.Std_k98ojb.Math.Sub {}\n            instance(x: 417, y: 39) equal_a5f6d8 root.Std_k98ojb.Logic.Equal {}\n            for_9a1f0c.index -> sub_9e1b0c.first\n            1 -> sub_9e1b0c.second\n            current_8d5f7c -> sub_9e1b0c.right\n            sub_9e1b0c.result -> equal_a5f6d8.left\n            sub_9e1b0c.result -> sub_7d2f5c.first\n            1 -> sub_7d2f5c.second\n            sub_7d2f5c.result -> equal_a5f6d8.right\n            equal_a5f6d8.result -> bool_4b2a3e\n        } -> for_9a1f0c.handler\n        for_9a1f0c.onItem -> if_6e4a2c.execute\n        if_6e4a2c.else -> output_7b2c8d\n        true -> if_6e4a2c.predicate\n        if_6e4a2c.then -> for_9a1f0c.next\n        list_1a9f8e -> sort_4e6b3c.list\n        for_9a1f0c.done -> output_7b2c8d\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_f5f9c8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 1009, y: 11, name: \"output\") property(Bool) output_eb7c4d\n\n        instance(x: 107, y: -6) sort_2b0c5f root.Std_k98ojb.List.Sort {}\n        instance(x: 424, y: 1) for_9e8a7f root.Std_k98ojb.Std.For {}\n        instance(x: 742, y: 13) ifexpression_c3f4d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        sort_2b0c5f.list -> for_9e8a7f.items\n        func() {\n            in(x: -191, y: 56, name: \"_index\") property(Number) _index_6d4c0e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 52) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 47) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_6d4c0e -> modulo_c76d2b.value\n        } -> for_9e8a7f.handler\n        ifexpression_c3f4d6.else -> output_eb7c4d\n        ifexpression_c3f4d6.value -> output_eb7c4d\n        list_1a3f8e -> sort_2b0c5f.list\n        for_9e8a7f.item -> ifexpression_c3f4d6.gen_2\n        for_9e8a7f.index -> ifexpression_c3f4d6.gen_0\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9e8a7f.handler\n        ifexpression_c3f4d6.then -> for_9e8a7f.next\n        func() {\n            in(x: -192, y: 56, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 49, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 52) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: 54) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9e8a7f.handler\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9e8a7f.handler\n        func() {\n            in(x: -192, y: 56, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 49, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 52) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: 54) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9e8a7f.handler\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9e8a7f.handler\n        func() {\n            in(x: -192, y: 56, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 49, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 52) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: 54) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9e8a7f.handler\n        func() {\n            in(x: -192, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_9e8a7f.handler\n        func() {\n            in(x: -192, y: 56, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 49, name: \"bool\") property(Bool) bool_4524be",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e8a3f\n\n        out(x: 1225, y: 2, name: \"output\") property(Bool) output_7c6d4b\n\n        instance(x: 0, y: -15) for_8f1c5f root.Std_k98ojb.Std.For {}\n        instance(x: 336, y: 3) ifexpression_9e2a5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> for_8f1c5f.handler\n        list_9e8a3f -> for_8f1c5f.items\n        ifexpression_9e2a5c.else -> output_7c6d4b\n        ifexpression_9e2a5c.value -> output_7c6d4b\n        ifexpression_9e2a5c.then -> for_8f1c5f.next\n        for_8f1c5f.onItem -> ifexpression_9e2a5c.execute\n        for_8f1c5f.index -> ifexpression_9e2a5c.gen_0\n        for_8f1c5f.item -> ifexpression_9e2a5c.gen_2\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> for_8f1c5f.handler\n    }\n\n    \n\n    instance(x: -71, y: 127) is_consecutive_2e9b7d root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 4, name: \"list\") property(List) list_1f0a8e\n\n        out(x: 1229, y: 5, name: \"output\") property(Bool) output_e6b2c7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1f0a8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f0a8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_f5a8b2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 5, name: \"list\") property(List) list_1a3f0e\n\n        out(x: 1119, y: 14, name: \"output\") property(Bool) output_7c2b6d\n\n        instance(x: 752, y: 63) ifexpression_8a5b4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8a5b4c.else -> continue_a96db6\n        ifexpression_8a5b4c.value -> output_7c2b6d\n        ifexpression_8a5b4c.then -> setter_9d4f1c.execute\n        list_1a3f0e -> for_d26972.items\n        for_d26972.item -> ifexpression_8a5b4c.gen_2\n        for_d26972.index -> ifexpression_8a5b4c.gen_0\n        getter_b280eb.value -> ifexpression_8a5b4c.gen_1\n        for_d26972.onItem -> ifexpression_8a5b4c.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a3f0e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a5b8f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 1, name: \"list\") property(List) list_9a3f0e\n\n        out(x: 1066, y: 8, name: \"output\") property(Bool) output_5c7d4b\n\n        instance(x: 0, y: -12) sort_2b1a2f root.Std_k98ojb.List.Sort {}\n        instance(x: 321, y: 15) for_9e3f6c root.Std_k98ojb.Std.For {}\n        instance(x: 641, y: 16) sub_7d5c4c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1010, y: -12) if_1a2b7f root.Std_k98ojb.Std.If {}\n        sort_2b1a2f.list -> for_9e3f6c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_9e3f6c.handler\n        list_9a3f0e -> sort_2b1a2f.list\n        for_9e3f6c.item -> sub_7d5c4c.first\n        for_9e3f6c.index -> sub_7d5c4c.second\n        1 -> sub_7d5c4c.second\n        sub_7d5c4c.result -> if_1a2b7f.predicate\n        for_9e3f6c.onItem -> if_1a2b7f.execute\n        if_1a2b7f.else -> output_5c7d4b\n        true -> if_1a2b7f.then\n    }\n\n    \n\n    instance(x: -54, y: 129) is_consecutive_9e3f6c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 5, name: \"list\") property(List) list_1a3f0e\n\n        out(x: 1219, y: 4, name: \"output\") property(Bool) output_7c8b7d\n\n        instance(x: 772, y: -6) ifexpression_5a7d0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 77, name: \"getter_8c3e9f\") getter_8c3e9f = previous\n        setter(x: 679, y: -211, name: \"setter_5b0a6d\") setter_5b0a6d = previous\n        instance(x: 321, y: -123) for_1e7a4f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -224, name: \"setter_5b0a6d\") setter_d9c3ed = previous\n        instance(x: -275, y: -139) getat_2b1e7f root.Std_k98ojb.List.GetAt {}\n        ifexpression_5a7d0f.else -> continue_8ba06b\n        ifexpression_5a7d0f.value -> output_7c8b7d\n        ifexpression_5a7d0f.then -> setter_5b0a6d.execute\n        list_1a3f0e -> for_1e7a4f.items\n        for_1e7a4f.item -> ifexpression_5a7d0f.gen_2\n        for_1e7a4f.index -> ifexpression_5a7d0f.gen_0\n        getter_8c3e9f.value -> ifexpression_5a7d0f.gen_1\n        for_1e7a4f.onItem -> ifexpression_5a7d0f.execute\n        for_1e7a4f.done -> continue_8ba06b\n        for_1e7a4f.item -> setter_5b0a6d.new_value\n        list_1a3f0e -> getat_2b1e7f.list\n        0 -> getat_2b1e7f.index\n        getat_2b1e7f.itemAtIndex -> setter_d9c3ed.new_value\n        execute_27b8c3 -> setter_d9c3ed.execute\n        setter_d9c3ed.continue -> for_1e7a4f.reset\n        setter_5b0a6d.continue -> for_1e7a4f.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_8f7b2f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 0, name: \"list\") property(List) list_1f8d5e\n\n        out(x: 1023, y: 7, name: \"output\") property(Bool) output_6a2b9c\n\n        instance(x: 104, y: -11) sort_b4a0ef root.Std_k98ojb.List.Sort {}\n        instance(x: 387, y: 5) for_8f1e7d root.Std_k98ojb.Std.For {}\n        instance(x: 723, y: 9) sub_3c6b2f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1000, y: -10) if_ea4b9c root.Std_k98ojb.Std.If {}\n        list_1f8d5e -> sort_b4a0ef.list\n        sort_b4a0ef.sortedList -> for_8f1e7d.items\n        func() {\n            in(x: -111, y: 42, name: \"current\") property(Number) current_6c9b3e\n\n            out(x: 695, y: 43, name: \"bool\") property(Bool) bool_5a2f8f\n\n            instance(x: 106, y: 39) sub_1d7c0c root.Std_k98ojb.Math.Sub {}\n            current_6c9b3e -> sub_1d7c0c.first\n            for_8f1e7d.index -> sub_1d7c0c.second\n            sub_1d7c0c.result -> bool_5a2f8f\n        } -> if_ea4b9c.predicate\n        for_8f1e7d.item -> sub_3c6b2f.first\n        for_8f1e7d.index -> sub_3c6b2f.second\n        sub_3c6b2f.result -> if_ea4b9c.gen_0\n        for_8f1e7d.onItem -> if_ea4b9c.execute\n        if_ea4b9c.else -> output_6a2b9c\n        if_ea4b9c.value -> output_6a2b9c\n        for_8f1e7d.done -> output_6a2b9c\n    }\n\n    \n\n    instance(x: -63, y: 119) is_consecutive_3b0d4c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -285, y: 4, name: \"list\") property(List) list_9e8a0f\n\n        out(x: 1115, y: 1, name: \"output\") property(Bool) output_6b7c3d\n\n        instance(x: 0, y: -15) for_1a2c8f root.Std_k98ojb.Std.For {}\n        instance(x: 354, y: 10) lessthan_f9e5ee root.Std_k98ojb.Math.LessThan {}\n        instance(x: 628, y: 7) if_3d4f0c root.Std_k98ojb.Std.If {}\n        instance(x: 1002, y: -1) not_8a7c6f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -192, y: -5, name: \"current\") property(Number) current_3d4e9e\n\n            out(x: 705, y: 14, name: \"output\") property(Bool) output_1a8f7c\n\n            instance(x: 226, y: 11) sub_2b5e6c root.Std_k98ojb.Math.Sub {}\n            current_3d4e9e -> sub_2b5e6c.first\n            for_1a2c8f.index -> sub_2b5e6c.second\n            lessthan_f9e5ee.result -> output_1a8f7c\n            1 -> lessthan_f9e5ee.right\n            sub_2b5e6c.result -> lessthan_f9e5ee.left\n        } -> if_3d4f0c.predicate\n        list_9e8a0f -> for_1a2c8f.items\n        for_1a2c8f.item -> if_3d4f0c.gen_0\n        for_1a2c8f.index -> if_3d4f0c.gen_1\n        not_8a7c6f.result -> output_6b7c3d\n        if_3d4f0c.value -> not_8a7c6f.input\n        for_1a2c8f.onItem -> if_3d4f0c.execute\n        for_1a2c8f.done -> output_6b7c3d\n    }\n\n    \n\n    instance(x: -71, y: 111) is_consecutive_9e5c4c root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"sublist\") property(List) sublist_3f9a8e\n        in(x: -285, y: -160, name: \"list\") property(List) list_1c7b4d\n\n        out(x: 1265, y: -95, name: \"output\") property(Bool) output_2e0c1e\n\n        instance(x: -85, y: -96, name: \"find sublist in list\") find_3a9f8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_1e7d6\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2c9a0\n\n            instance(x: 112, y: 80) contains_3b5f4 root.Std_k98ojb.List.Contains {}\n            current_1e7d6 -> contains_3b5f4.list\n            sublist_3f9a8e -> contains_3b5f4.item\n            contains_3b5f4.is_contained -> bool_2c9a0\n        } -> find_3a9f8c.predicate\n        list_1c7b4d -> find_3a9f8c.items\n        find_3a9f8c.item -> output_2e0c1e\n    }\n\n    \n\n    instance(x: -83, y: 59) is_sublist_f5a6c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 15, name: \"sublist\") property(List) sublist_1a8f9e\n        in(x: -284, y: -166, name: \"list\") property(List) list_2b7c0d\n\n        out(x: 1265, y: -143, name: \"output\") property(Bool) output_e4a6ee\n\n        instance(x: -3, y: -142) contains_1f9e8c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -31, y: 0, name: \"sublist\") property(List) sublist_2d5f7a\n            in(x: -32, y: -143, name: \"list\") property(List) list_3c9e1b\n\n            out(x: 1016, y: -10, name: \"\") property(Bool) _0f4a6e\n\n            instance(x: 246, y: -12) filter_2d5b7c root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -31, y: -26, name: \"current\") property(Number) current_3a8f1f\n                in(x: -32, y: 0, name: \"_index\") property(Number) _index_4c9e1b\n\n                out(x: 705, y: 49, name: \"\") property(Bool) _7dd980\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                current_3a8f1f -> modulo_c76d2b.value\n                2 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_7836b4.left\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> _7dd980\n            } -> filter_2d5b7c.handler\n            list_3c9e1b -> filter_2d5b7c.items\n            func() {\n                in(x: -31, y: -26, name: \"current\") property(Number) current_3a8f1f\n\n                out(x: 705, y: 49, name: \"\") property(Bool) _7dd980\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                current_3a8f1f -> modulo_c76d2b.value\n                2 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_7836b4.left\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> _7dd980\n            } -> sublist_2d5f7a.handler\n            filter_2d5b7c.output_list -> sublist_2d5f7a.items\n            func() {\n                in(x: -31, y: -26, name: \"current\") property(Number) current_3a8f1f\n\n                out(x: 705, y: 49, name: \"\") property(Bool) _7dd980\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                current_3a8f1f -> modulo_c76d2b.value\n                2 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_7836b4.left\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> _7dd980\n            } -> list_3c9e1b.handler\n            sublist_2d5f7a.output_list -> list_3c9e1b.items\n            filter_2d5b7c.output_list -> contains_1f9e8c.list\n            sublist_1a8f9e -> contains_1f9e8c.item\n            contains_1f9e8c.is_contained -> _0f4a6e\n        } -> is_sublist\n        list_2b7c0d -> is_sublist.list\n        sublist_1a8f9e -> is_sublist.sublist\n        is_sublist.result -> output_e4a6ee\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_3a8f1f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 5, name: \"sublist\") property(List) sublist_1f9a3b\n        in(x: -300, y: -185, name: \"list\") property(List) list_2e7c8d\n\n        out(x: 1060, y: -90, name: \"output\") property(Bool) output_4c6b5f\n\n        instance(x: -50, y: -183, name: \"sublist length\") length_1a9f9f root.Std_k98ojb.List.Length {}\n        instance(x: 240, y: -186) contains_3d0e2c root.Std_k98ojb.List.Contains {}\n        instance(x: 560, y: -185) getat_5f7c8c root.Std_k98ojb.List.GetAt {}\n        instance(x: 780, y: -184) slice_4a9c1c root.Std_k98ojb.List.Slice {}\n        sublist_1f9a3b -> length_1a9f9f.list\n        list_2e7c8d -> contains_3d0e2c.list\n        func() {\n            in(x: -23, y: 49, name: \"index\") property(Number) index_5a4b6c\n\n            out(x: 702, y: 51, name: \"\") property(List) _1f9c8f\n\n            instance(x: 92, y: 29) slice_3e7d0c root.Std_k98ojb.List.Slice {}\n            index_5a4b6c -> slice_3e7d0c.start\n            list_2e7c8d -> slice_3e7d0c.list\n            length_1a9f9f.length -> slice_3e7d0c.end\n            slice_3e7d0c.slice -> _1f9c8f\n        } -> contains_3d0e2c.item\n        0 -> getat_5f7c8c.index\n        list_2e7c8d -> getat_5f7c8c.list\n        getat_5f7c8c.itemAtIndex -> slice_4a9c1c.start\n        sublist_1f9a3b -> slice_4a9c1c.list\n        length_1a9f9f.length -> slice_4a9c1c.end\n        contains_3d0e2c.is_contained -> output_4c6b5f\n    }\n\n    \n\n    instance(x: -82, y: 39) is_sublist_f7a8d2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -277, y: -248, name: \"main_list\") property(List) main_list_ai\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        sublist_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -277, y: 166, name: \"sublist\") property(List) sublist_09fcba\n        in(x: -297, y: -5, name: \"list\") property(List) list_ec88cd\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        sublist_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        sublist_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 15, name: \"sublist\") property(List) sublist_1a9f2e\n        in(x: -305, y: -135, name: \"list\") property(List) list_5c7d6b\n\n        out(x: 1000, y: -120, name: \"output\") property(Bool) output_e4f8ad\n\n        instance(x: -105, y: -125, name: \"sublist length\") length_1e9a3f root.Std_k98ojb.List.Length {}\n        instance(x: 300, y: -115) contains_5d0c6c root.Std_k98ojb.List.Contains {}\n        sublist_1a9f2e -> length_1e9a3f.list\n        list_5c7d6b -> contains_5d0c6c.list\n        func() {\n            in(x: -193, y: 10, name: \"list\") property(List) _list_4a8a2\n\n            out(x: 702, y: -15, name: \"\") property(List) _7f1b9e\n\n            instance(x: 76, y: 5) slice_6c3d0f root.Std_k98ojb.List.Slice {}\n            length_1e9a3f.length -> slice_6c3d0f.end\n            0 -> slice_6c3d0f.start\n            _list_4a8a2 -> slice_6c3d0f.list\n            slice_6c3d0f.slice -> _7f1b9e\n        } -> contains_5d0c6c.handler\n        length_1e9a3f.length -> contains_5d0c6c.count\n        sublist_1a9f2e -> contains_5d0c6c.item\n        contains_5d0c6c.is_contained -> output_e4f8ad\n    }\n\n    \n\n    instance(x: -91, y: 55) is_sublist_3b7b9c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 0, name: \"sublist\") property(List) sublist_1a8f2e\n        in(x: -285, y: 170, name: \"list\") property(List) list_3b9d7c\n\n        out(x: 1265, y: 95, name: \"output\") property(Bool) output_6a4a0d\n\n        instance(x: 1048, y: -1) contains_2f3e7c root.Std_k98ojb.List.Contains {}\n        instance(x: 1059, y: 169) contains_5f9a2d root.Std_k98ojb.List.Contains {}\n        sublist_1a8f2e -> contains_2f3e7c.list\n        list_3b9d7c -> contains_2f3e7c.item\n        contains_2f3e7c.is_contained -> contains_5f9a2d.item\n        list_3b9d7c -> contains_5f9a2d.list\n        contains_5f9a2d.is_contained -> output_6a4a0d\n    }\n\n    \n\n    instance(x: -285, y: 95) is_sublist_ae1c8c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 15, name: \"sublist\") property(List) sublist_1a9f2e\n        in(x: -306, y: -160, name: \"list\") property(List) list_7c8d3b\n\n        out(x: 1000, y: -70, name: \"output\") property(Bool) output_4a5b9c\n\n        instance(x: -85, y: -161, name: \"is sublist\") filter_1e2f6c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 226, y: -162) length_8d3b1c root.Std_k98ojb.List.Length {}\n        instance(x: 440, y: -161) sub_9a5c0c root.Std_k98ojb.List.Slice {}\n        instance(x: 658, y: -160) equal_f6e7f4 root.Std_k98ojb.Logic.Equal {}\n        sublist_1a9f2e -> filter_1e2f6c.items\n        func() {\n            in(x: -192, y: -24, name: \"current\") property(List) current_8d5f0e\n\n            out(x: 705, y: -13, name: \"output\") property(Bool) output_7b1a2f\n\n            instance(x: 226, y: -20) length_9c3f6f root.Std_k98ojb.List.Length {}\n            instance(x: 440, y: -19) sub_4d5e8f root.Std_k98ojb.List.Slice {}\n            instance(x: 658, y: -18) equal_7a1f0f root.Std_k98ojb.Logic.Equal {}\n            current_8d5f0e -> length_9c3f6f.list\n            sublist_1a9f2e -> sub_4d5e8f.list\n            length_9c3f6f.length -> sub_4d5e8f.start\n            length_9c3f6f.length -> equal_7a1f0f.left\n            sub_4d5e8f.slice -> equal_7a1f0f.right\n            equal_7a1f0f.result -> output_7b1a2f\n        } -> filter_1e2f6c.handler\n        list_7c8d3b -> length_8d3b1c.list\n        length_8d3b1c.length -> sub_9a5c0c.end\n        0 -> sub_9a5c0c.start\n        filter_1e2f6c.output_list -> equal_f6e7f4.left\n        list_7c8d3b -> sub_9a5c0c.list\n        sub_9a5c0c.slice -> equal_f6e7f4.right\n        equal_f6e7f4.result -> output_4a5b9c\n    }\n\n    \n\n    instance(x: -291, y: 39) is_sublist_1d3d8c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 30, name: \"sublist\") property(List) sublist_1a8d5f\n        in(x: -277, y: -135, name: \"list\") property(List) list_3b9c0e\n\n        out(x: 1047, y: -105, name: \"output\") property(Bool) output_6c2f7f\n\n        instance(x: -5, y: -107, name: \"check if sublist is in list\") contains_f1d8a4 root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: 0, y: -22, name: \"list\") property(List) list_3b9c0e\n            in(x: -20, y: 26, name: \"sublist\") property(List) sublist_1a8d5f\n\n            out(x: 700, y: 2, name: \"\") property(Bool) _7dd980\n\n            instance(x: 160, y: 0) contains_f1d8a4 root.Std_k98ojb.List.Contains {}\n            list_3b9c0e -> contains_f1d8a4.list\n            sublist_1a8d5f -> contains_f1d8a4.item\n            contains_f1d8a4.is_contained -> _7dd980\n        } -> contains_f1d8a4.handler\n        list_3b9c0e -> contains_f1d8a4.list\n        sublist_1a8d5f -> contains_f1d8a4.item\n        contains_f1d8a4.is_contained -> output_6c2f7f\n    }\n\n    \n\n    instance(x: -293, y: 59) is_sublist_3e0b7f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -265, y: 0, name: \"sublist\") property(List) sublist_1f8d6a\n        in(x: -265, y: 155, name: \"list\") property(List) list_2b9c5e\n\n        out(x: 557, y: 63, name: \"output\") property(Bool) output_3c0b7e\n\n        instance(x: 146, y: 62) contains_1a8d4f root.Std_k98ojb.List.Contains {}\n        list_2b9c5e -> contains_1a8d4f.list\n        sublist_1f8d6a -> contains_1a8d4f.item\n        contains_1a8d4f.is_contained -> output_3c0b7e\n    }\n\n    \n\n    instance(x: 93, y: -37) is_sublist_2f9d5e root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1226, y: 29, name: \"continue\") trigger() continue_e2c4ee\n        out(x: 1213, y: 148, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: -5, y: -120) for_9b7d8f root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_4c6c3d\") getter_4c6c3d = index\n        setter(x: 780, y: -125, name: \"setter_e9a7e1\") setter_e9a7e1 = index\n        instance(x: 465, y: 5) ifexpression_8f0b9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_9b7d8f.items\n        execute_5c7d8b -> setter_e9a7e1.execute\n        0 -> setter_e9a7e1.new_value\n        getter_4c6c3d.value -> output_1e0a1f\n        for_9b7d8f.done -> continue_e2c4ee\n        setter_e9a7e1.continue -> for_9b7d8f.reset\n        for_9b7d8f.onItem -> ifexpression_8f0b9f.execute\n        for_9b7d8f.index -> ifexpression_8f0b9f.gen_0\n        for_9b7d8f.item -> ifexpression_8f0b9f.gen_1\n        ifexpression_8f0b9f.then -> setter_e9a7e1.execute\n        for_9b7d8f.index -> setter_e9a7e1.new_value\n        ifexpression_8f0b9f.else -> continue_e2c4ee\n    }\n\n    \n\n    instance(x: -207, y: 3) find_missing_5c6f4f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_2e3f9d\n        in(x: -283, y: -225, name: \"execute\") trigger() execute_7a8c6b\n\n        out(x: 594, y: -1, name: \"continue\") trigger() continue_e4b0ec\n        out(x: 593, y: 148, name: \"output\") property(Number) output_9f5e3d\n\n        instance(x: 0, y: 0) for_2a7c8e root.Std_k98ojb.Std.For {}\n        getter(x: -143, y: 152, name: \"getter_1e6c8e\") getter_1e6c8e = index\n        setter(x: 115, y: -268, name: \"setter_e9a3f7\") setter_e9a3f7 = index\n        instance(x: 316, y: -35) getat_c4b2d5 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) if_8e6c1f root.Std_k98ojb.Std.If {}\n        getter_1e6c8e.value -> output_9f5e3d\n        list_2e3f9d -> for_2a7c8e.items\n        execute_7a8c6b -> setter_e9a3f7.execute\n        0 -> setter_e9a3f7.new_value\n        for_2a7c8e.done -> continue_e4b0ec\n        setter_e9a3f7.continue -> for_2a7c8e.reset\n        for_2a7c8e.onItem -> if_8e6c1f.execute\n        for_2a7c8e.index -> if_8e6c1f.predicate\n        list_2e3f9d -> getat_c4b2d5.list\n        for_2a7c8e.index -> getat_c4b2d5.index\n        getat_c4b2d5.itemAtIndex -> if_8e6c1f.gen_0\n        for_2a7c8e.index -> if_8e6c1f.gen_1\n        if_8e6c1f.else -> setter_e9a3f7.execute\n        if_8e6c1f.then -> continue_e4b0ec\n        for_2a7c8e.next -> continue_e4b0ec\n    }\n\n    \n\n    instance(x: -50, y: 128) find_missing_5d7d9f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 0, name: \"list\") property(List) list_9e6f1d\n        in(x: -304, y: -232, name: \"execute\") trigger() execute_ea7c8b\n\n        out(x: 1005, y: -234, name: \"continue\") trigger() continue_3c0f4f\n        out(x: 1011, y: 6, name: \"output\") property(Number) output_9d2e9f\n\n        instance(x: 15, y: -232) for_8b5a9c root.Std_k98ojb.Std.For {}\n        instance(x: 335, y: 0) ifexpression_1b7c4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 325, y: 60, name: \"getter_ea6f2d\") getter_ea6f2d = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1b7c4e.else -> continue_3c0f4f\n        ifexpression_1b7c4e.value -> output_9d2e9f\n        ifexpression_1b7c4e.then -> setter_9d4f1c.execute\n        list_9e6f1d -> for_8b5a9c.items\n        for_8b5a9c.item -> ifexpression_1b7c4e.gen_2\n        for_8b5a9c.index -> ifexpression_1b7c4e.gen_0\n        getter_ea6f2d.value -> ifexpression_1b7c4e.gen_1\n        for_8b5a9c.onItem -> ifexpression_1b7c4e.execute\n        for_8b5a9c.done -> continue_3c0f4f\n        for_8b5a9c.item -> setter_9d4f1c.new_value\n        list_9e6f1d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_ea7c8b -> setter_38e107.execute\n        setter_38e107.continue -> for_8b5a9c.reset\n        setter_9d4f1c.continue -> for_8b5a9c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f3a7f2 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9e8b5f\n        in(x: -284, y: -225, name: \"execute\") trigger() execute_1a3d4c\n\n        out(x: 1017, y: -229, name: \"continue\") trigger() continue_e2c0aa\n        out(x: 1026, y: 148, name: \"output\") property(Number) output_9e8b5f\n\n        instance(x: 0, y: 0) for_1a3d4c root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 166, name: \"getter_6a2d7e\") getter_6a2d7e = index\n        setter(x: 780, y: -125, name: \"setter_60cfcd\") setter_60cfcd = index\n        instance(x: 465, y: 5) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_2bbadf -> for_9ed60a.items\n        elem_94ca57 -> ifexpression_6c15d4.gen_0\n        for_9ed60a.item -> ifexpression_6c15d4.gen_1\n        -1 -> setter_6a6081.new_value\n        execute_076885 -> setter_6a6081.execute\n        getter_cc0721.value -> index_fc05e7\n        for_9ed60a.done -> continue_9f5f84\n        setter_6a6081.continue -> for_9ed60a.reset\n        for_9ed60a.onItem -> ifexpression_6c15d4.execute\n        ifexpression_6c15d4.then -> setter_60cfcd.execute\n        for_9ed60a.index -> setter_60cfcd.new_value\n        setter_60cfcd.continue -> for_9ed60a.next\n        ifexpression_6c15d4.else -> for_9ed60a.next\n\n        instance(x: 0, y: 0) math_add_node root.Std_k98ojb.Math.Add {}\n        getter_6a2d7e.value -> math_add_node.first\n        1 -> math_add_node.second\n        list_9e8b5f -> for_1a3d4c.items\n        execute_1a3d4c -> for_1a3d4c.trigger\n        getter_6a2d7e.value -> ifexpression_6c15d4.gen_0\n        for_1a3d4c.item -> ifexpression_6c15d4.gen_1\n        math_add_node.result -> setter_60cfcd.new_value\n        for_1a3d4c.onItem -> ifexpression_6c15d4.execute\n        ifexpression_6c15d4.then -> for_1a3d4c.next\n        ifexpression_6c15d4.else -> output_9e8b5f\n        for_1a3d4c.done -> continue_e2c0aa\n    }\n\n    \n\n    instance(x: -204, y: 12) find_missing_7a8d8f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_9f5b8e\n        in(x: -281, y: -221, name: \"execute\") trigger() execute_7c1d6a\n\n        out(x: 1213, y: 13, name: \"continue\") trigger() continue_e4b0ed\n        out(x: 1182, y: 145, name: \"output\") property(Number) output_5e9f7f\n\n        instance(x: -1, y: -120) for_6a8d3c root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_4a2d8f\") getter_4a2d8f = index\n        setter(x: 350, y: -251, name: \"setter_7e9c1f\") setter_7e9c1f = index\n        instance(x: 658, y: 10) ifexpression_6b3f5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        getter(x: 0, y: 0, name: \"getter_4a2d8f\") getter_ae7c1e = index\n        instance(x: 658, y: -76) if_3a9b5c root.Std_k98ojb.Std.If {}\n        setter(x: 1016, y: -157, name: \"setter_5f4d0f\") setter_5f4d0f = index\n        list_7e9c1f -> for_6a8d3c.items\n        execute_7c1d6a -> setter_7e9c1f.execute\n        0 -> setter_7e9c1f.new_value\n        getter_ae7c1e.value -> output_5e9f7f\n        for_6a8d3c.done -> continue_e4b0ed\n        setter_7e9c1f.continue -> for_6a8d3c.reset\n        for_6a8d3c.onItem -> ifexpression_6b3f5f.execute\n        getter_4a2d8f.value -> ifexpression_6b3f5f.gen_0\n        for_6a8d3c.item -> ifexpression_6b3f5f.gen_1\n        ifexpression_6b3f5f.then -> setter_5f4d0f.execute\n        for_6a8d3c.index -> setter_5f4d0f.new_value\n        ifexpression_6b3f5f.else -> for_6a8d3c.next\n        setter_5f4d0f.continue -> continue_e4b0ed\n        ifexpression_6b3f5f.value -> if_3a9b5c.predicate\n        if_3a9b5c.then -> for_6a8d3c.next\n    }\n\n    \n\n    instance(x: -11, y: 160) find_missing_7e1b2e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -276, y: -221, name: \"execute\") trigger() execute_ea7d3c\n\n        out(x: 1216, y: -219, name: \"continue\") trigger() continue_5a8c4f\n        out(x: 1160, y: 2, name: \"output\") property(Number) output_9e1b2f\n\n        instance(x: 0, y: 0) for_7d6a8c root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_5a3f9f\") getter_5a3f9f = index\n        setter(x: -1, y: -2, name: \"setter_e7d6c4\") setter_e7d6c4 = index\n        instance(x: 340, y: 60) ifexpression_ae0b8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_9f0b2e -> for_7d6a8c.items\n        execute_ea7d3c -> setter_e7d6c4.execute\n        1 -> setter_e7d6c4.new_value\n        getter_5a3f9f.value -> output_9e1b2f\n        for_7d6a8c.done -> continue_5a8c4f\n        setter_e7d6c4.continue -> for_7d6a8c.reset\n        for_7d6a8c.onItem -> ifexpression_ae0b8c.execute\n        getter_5a3f9f.value -> ifexpression_ae0b8c.gen_1\n        for_7d6a8c.item -> ifexpression_ae0b8c.gen_2\n        ifexpression_ae0b8c.then -> setter_e7d6c4.execute\n        for_7d6a8c.index -> ifexpression_ae0b8c.gen_0\n        setter_e7d6c4.continue -> continue_5a8c4f\n    }\n\n    \n\n    instance(x: 776, y: -17) find_missing_9f1f1f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1e3f9a\n        in(x: -299, y: -226, name: \"execute\") trigger() execute_e5b8d7\n\n        out(x: 593, y: -225, name: \"continue\") trigger() continue_6c2b4e\n        out(x: 595, y: 1, name: \"output\") property(Number) output_3f9a0a\n\n        instance(x: 0, y: 0) for_7d8c9c root.Std_k98ojb.Std.For {}\n        getter(x: -140, y: 44, name: \"getter_6e1f4c\") getter_6e1f4c = index\n        setter(x: 116, y: -268, name: \"setter_7d8a3c\") setter_7d8a3c = index\n        instance(x: 310, y: 35) ifexpression_9b2f0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7d8a3c\") getter_4e6c9c = previous\n        setter(x: 679, y: -313, name: \"setter_6e1f4c\") setter_5b2a0d = previous\n        instance(x: 321, y: -20) math_add_node root.Std_k98ojb.Math.Add {}\n        ifexpression_9b2f0c.else -> continue_6c2b4e\n        list_1e3f9a -> for_7d8c9c.items\n        getter_6e1f4c.value -> ifexpression_9b2f0c.gen_0\n        getter_4e6c9c.value -> ifexpression_9b2f0c.gen_1\n        for_7d8c9c.item -> ifexpression_9b2f0c.gen_2\n        math_add_node.result -> output_3f9a0a\n        1 -> math_add_node.second\n        getter_4e6c9c.value -> math_add_node.first\n        execute_e5b8d7 -> setter_7d8a3c.execute\n        -1 -> setter_7d8a3c.new_value\n        for_7d8c9c.onItem -> ifexpression_9b2f0c.execute\n        ifexpression_9b2f0c.then -> setter_5b2a0d.execute\n        for_7d8c9c.index -> setter_5b2a0d.new_value\n        for_7d8c9c.item -> setter_5b2a0d.new_value\n        ifexpression_9b2f0c.value -> output_3f9a0a\n        for_7d8c9c.done -> continue_6c2b4e\n        setter_7d8a3c.continue -> for_7d8c9c.reset\n        setter_5b2a0d.continue -> for_7d8c9c.next\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1e4f6c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9f0b2e\n        in(x: -281, y: -227, name: \"execute\") trigger() execute_7a8c5d\n\n        out(x: 1056, y: -225, name: \"continue\") trigger() continue_1b4a5e\n        out(x: 1049, y: 75, name: \"output\") property(Number) output_3f2b7e\n\n        instance(x: 0, y: 0) for_8d6c5f root.Std_k98ojb.Std.For {}\n        getter(x: -111, y: 116, name: \"getter_1a4f7e\") getter_1a4f7e = index\n        setter(x: 680, y: -164, name: \"setter_3d9c8e\") setter_3d9c8e = index\n        instance(x: 451, y: -80) ifexpression_eb6f2e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_3d9c8e\") getter_3d9c8e = index\n        setter(x: -184, y: -248, name: \"setter_5b7f2a\") setter_5b7f2a = index\n        list_",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9f6a1e\n        in(x: -290, y: -224, name: \"execute\") trigger() execute_7b2d3c\n\n        out(x: 1024, y: -225, name: \"continue\") trigger() continue_8f5b9f\n        out(x: 1016, y: 0, name: \"output\") property(Number) output_e1e1a7\n\n        instance(x: 0, y: 0) for_2c4d3e root.Std_k98ojb.Std.For {}\n        getter(x: -145, y: 29, name: \"getter_9f6a1e\") getter_9f6a1e = index\n        setter(x: 755, y: -158, name: \"setter_8d7c2e\") setter_8d7c2e = index\n        instance(x: 0, y: 0) ifexpression_e5b3ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 340, y: 60, name: \"getter_8d7c2e\") getter_8d7c2e = previous\n        setter(x: -0, y: -121, name: \"setter_9f6a1e\") setter_9f6a1e = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e5b3ed.else -> continue_8f5b9f\n        ifexpression_e5b3ed.then -> setter_8d7c2e.execute\n        list_9f6a1e -> for_2c4d3e.items\n        for_2c4d3e.item -> ifexpression_e5b3ed.gen_2\n        for_2c4d3e.index -> ifexpression_e5b3ed.gen_0\n        getter_9f6a1e.value -> ifexpression_e5b3ed.gen_1\n        for_2c4d3e.onItem -> ifexpression_e5b3ed.execute\n        for_2c4d3e.done -> continue_8f5b9f\n        for_2c4d3e.item -> setter_8d7c2e.new_value\n        list_9f6a1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9f6a1e.new_value\n        execute_7b2d3c -> setter_9f6a1e.execute\n        getter_8d7c2e.value -> output_e1e1a7\n        setter_9f6a1e.continue -> for_2c4d3e.reset\n        setter_8d7c2e.continue -> for_2c4d3e.next\n    }\n\n    \n\n    instance(x: 0, y: -31) find_missing_5b8c4e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 2, name: \"list\") property(List) list_1e9b3f\n        in(x: -299, y: -226, name: \"execute\") trigger() execute_7c8a5d\n\n        out(x: 1016, y: -225, name: \"continue\") trigger() continue_e2c4ef\n        out(x: 1009, y: 69, name: \"output\") property(Number) output_1b3e9f\n\n        instance(x: 0, y: 0) for_7a5d6d root.Std_k98ojb.Std.For {}\n        getter(x: -2, y: 120, name: \"getter_8c1b7f\") getter_8c1b7f = index\n        setter(x: 655, y: -157, name: \"setter_ea9e5d\") setter_ea9e5d = index\n        instance(x: 450, y: -10) ifexpression_a6f0ec root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_a6f0ec.else -> continue_e2c4ef\n        ifexpression_a6f0ec.value -> output_1b3e9f\n        ifexpression_a6f0ec.then -> setter_ea9e5d.execute\n        list_1e9b3f -> for_7a5d6d.items\n        for_7a5d6d.item -> ifexpression_a6f0ec.gen_2\n        for_7a5d6d.index -> ifexpression_a6f0ec.gen_0\n        getter_b280eb.value -> ifexpression_a6f0ec.gen_1\n        for_7a5d6d.onItem -> ifexpression_a6f0ec.execute\n        for_7a5d6d.done -> continue_e2c4ef\n        for_7a5d6d.item -> setter_ea9e5d.new_value\n        list_1e9b3f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_7c8a5d -> setter_38e107.execute\n        getter_8c1b7f.value -> output_1b3e9f\n        setter_ea9e5d.continue -> continue_e2c4ef\n        setter_38e107.continue -> for_7a5d6d.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f8b9d1 root.main.find_missing {}\n\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -228, y: 1, name: \"input\") property(String) input_9e3f8a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7b4c5d\n\n        instance(x: 0, y: 0) replace_6e8f0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -1) replace_3a9c8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -2) replace_7d5f4f root.Std_k98ojb.Strings.Replace {}\n        input_9e3f8a -> replace_6e8f0f.input\n        \" \" -> replace_6e8f0f.search\n        \":\" -> replace_6e8f0f.replace\n        replace_6e8f0f.output -> replace_3a9c8e.input\n        \",\" -> replace_3a9c8e.search\n        \":\" -> replace_3a9c8e.replace\n        replace_3a9c8e.output -> replace_7d5f4f.input\n        \".\" -> replace_7d5f4f.search\n        \":\" -> replace_7d5f4f.replace\n        replace_7d5f4f.output -> output_7b4c5d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9e8a6f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 44, name: \"input\") property(String) input_0\n        out(x: 744, y: 146, name: \"output\") property(String) output_1\n\n        instance(x: 52, y: 47, name: \"replaceSpace\") replaceNode_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replaceComma\") replaceNode_3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replaceNode_4 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replaceNode_2.input\n        \" \" -> replaceNode_2.search\n        \":\" -> replaceNode_2.replace\n        replaceNode_2.output -> replaceNode_3.input\n        \",\" -> replaceNode_3.search\n        \":\" -> replaceNode_3.replace\n        replaceNode_3.output -> replaceNode_4.input\n        \".\" -> replaceNode_4.search\n        \":\" -> replaceNode_4.replace\n        replaceNode_4.output -> output_1\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_5 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 44, name: \"input\") property(String) input_0\n\n        out(x: 744, y: 146, name: \"output\") property(String) output_1\n\n        instance(x: 52, y: 47, name: \"replace_spaces\") replace_5e3c9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replace_commas\") replace_b2a7d8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replace_dots_4e1c6f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_spaces.input\n        \" \" -> replace_spaces.search\n        \":\" -> replace_spaces.replace\n        replace_spaces.output -> replace_commas.input\n        \",\" -> replace_commas.search\n        \":\" -> replace_commas.replace\n        replace_commas.output -> replace_dots_4e1c6f.input\n        \".\" -> replace_dots_4e1c6f.search\n        \":\" -> replace_dots_4e1c6f.replace\n        replace_dots_4e1c6f.output -> output_1\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_spaces_commas_dots_2d7b9a root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1f3a8e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c7d4b\n\n        instance(x: 0, y: 1) replace_6e9a9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8f3b9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d5d7c1 root.Std_k98ojb.Strings.Replace {}\n        input_1f3a8e -> replace_6e9a9e.input\n        \" \" -> replace_6e9a9e.search\n        \":\" -> replace_6e9a9e.replace\n        replace_6e9a9e.output -> replace_8f3b9c.input\n        \",\" -> replace_8f3b9c.search\n        \":\" -> replace_8f3b9c.replace\n        replace_8f3b9c.output -> replace_d5d7c1.input\n        \".\" -> replace_d5d7c1.search\n        \":\" -> replace_d5d7c1.replace\n        replace_d5d7c1.output -> output_5c7d4b\n    }\n\n    \n\n    instance(x: 81, y: 52) Replace_e54b7f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 44, name: \"input\") property(String) input_0\n        out(x: 744, y: 146, name: \"output\") property(String) output_1\n\n        instance(x: 52, y: 47, name: \"replace_comma\") replace_node root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replace_dot\") replace_node_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replace_space root.Std_k98ojb.Strings.Replace {}\n        instance(x: 516, y: 144) replace_colon root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_comma.input\n        \",\" -> replace_comma.search\n        \":\" -> replace_comma.replace\n        replace_comma.output -> replace_dot.input\n        \".\" -> replace_dot.search\n        \":\" -> replace_dot.replace\n        replace_dot.output -> replace_space.input\n        \" \" -> replace_space.search\n        \":\" -> replace_space.replace\n        replace_space.output -> replace_colon.input\n        \":\" -> replace_colon.search\n        \"\" -> replace_colon.replace\n        replace_colon.output -> output_1\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_2d3f0c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_8a1b2f\n\n        out(x: 505, y: -3, name: \"output\") property(String) output_7c6e5d\n\n        instance(x: 94, y: -19) replace_9b4b7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 10) replace_1a8f2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 39) replace_5e6a8d root.Std_k98ojb.Strings.Replace {}\n        input_8a1b2f -> replace_9b4b7c.input\n        \" \" -> replace_9b4b7c.search\n        \":\" -> replace_9b4b7c.replace\n        replace_9b4b7c.output -> replace_1a8f2d.input\n        \",\" -> replace_1a8f2d.search\n        \":\" -> replace_1a8f2d.replace\n        replace_1a8f2d.output -> replace_5e6a8d.input\n        \".\" -> replace_5e6a8d.search\n        \":\" -> replace_5e6a8d.replace\n        replace_5e6a8d.output -> output_7c6e5d\n    }\n\n    \n\n    instance(x: -90, y: 30) replace_spaces_commas_dots_9b3f1f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -172, y: 0, name: \"input\") property(String) input_9f1a3d\n\n        out(x: 504, y: -2, name: \"output\") property(String) output_8e6b7c\n\n        instance(x: 0, y: 1) replace_5c4f8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d9a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_6c7c6d root.Std_k98ojb.Strings.Replace {}\n        input_9f1a3d -> replace_5c4f8e.input\n        \" \" -> replace_5c4f8e.search\n        \":\" -> replace_5c4f8e.replace\n        replace_5c4f8e.output -> replace_3d9a2d.input\n        \",\" -> replace_3d9a2d.search\n        \":\" -> replace_3d9a2d.replace\n        replace_3d9a2d.output -> replace_6c7c6d.input\n        \".\" -> replace_6c7c6d.search\n        \":\" -> replace_6c7c6d.replace\n        replace_6c7c6d.output -> output_8e6b7c\n    }\n\n    \n\n    instance(x: 81, y: -2) replace_5a1f4c root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_8a1b9f\n\n        out(x: 504, y: -2, name: \"output\") property(String) output_7e3d6c\n\n        instance(x: 0, y: 1) replace_4e5f0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a1a2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7c9d6f root.Std_k98ojb.Strings.Replace {}\n        input_8a1b9f -> replace_4e5f0e.input\n        \" \" -> replace_4e5f0e.search\n        \":\" -> replace_4e5f0e.replace\n        replace_4e5f0e.output -> replace_8a1a2f.input\n        \",\" -> replace_8a1a2f.search\n        \":\" -> replace_8a1a2f.replace\n        replace_8a1a2f.output -> replace_7c9d6f.input\n        \".\" -> replace_7c9d6f.search\n        \":\" -> replace_7c9d6f.replace\n        replace_7c9d6f.output -> output_7e3d6c\n    }\n\n    \n\n    instance(x: 101, y: -52) replace_spaces_commas_dots_5b1a4e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a8f7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5c6d9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_4b2c1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a8f7e.input\n        \" \" -> replace_3a8f7e.search\n        \":\" -> replace_3a8f7e.replace\n        replace_3a8f7e.output -> replace_5c6d9d.input\n        \",\" -> replace_5c6d9d.search\n        \":\" -> replace_5c6d9d.replace\n        replace_5c6d9d.output -> replace_4b2c1c.input\n        \".\" -> replace_4b2c1c.search\n        \":\" -> replace_4b2c1c.replace\n        replace_4b2c1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) Replace_e54b7f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -198, y: 0, name: \"input\") property(String) input_9f2e8a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7c6b1d\n\n        instance(x: 0, y: 1) replace_3c4a5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e8f8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_c7b6aa root.Std_k98ojb.Strings.Replace {}\n        input_9f2e8a -> replace_3c4a5d.input\n        \" \" -> replace_3c4a5d.search\n        \":\" -> replace_3c4a5d.replace\n        replace_3c4a5d.output -> replace_9e8f8f.input\n        \",\" -> replace_9e8f8f.search\n        \":\" -> replace_9e8f8f.replace\n        replace_9e8f8f.output -> replace_c7b6aa.input\n        \".\" -> replace_c7b6aa.search\n        \":\" -> replace_c7b6aa.replace\n        replace_c7b6aa.output -> output_7c6b1d\n    }\n\n    \n\n    instance(x: 81, y: 52) Replace_5e3f9a root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 555, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_4b1e7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: -3) length_8f9a4f root.Std_k98ojb.List.Length {}\n        instance(x: 479, y: 5) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 702, y: 1) equal_7c7e3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 926, y: -4) reduce_9a5b8f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        characters_4b1e7c.characters -> length_8f9a4f.list\n        string_3f8a9e -> characters_4b1e7c.input\n        0 -> getat_6d0f2f.index\n        characters_4b1e7c.characters -> getat_6d0f2f.list\n        length_8f9a4f.length -> reduce_9a5b8f.count\n        equal_7c7e3c.left -> reduce_9a5b8f.previous\n        equal_7c7e3c.right -> reduce_9a5b8f.current\n        getat_6d0f2f.itemAtIndex -> equal_7c7e3c.left\n        1 -> equal_7c7e3c.index\n        equal_7c7e3c.result -> reduce_9a5b8f.new_value\n        true -> reduce_9a5b8f.initial\n        reduce_9a5b8f.output -> output_5c7d6b\n    }\n\n    \n\n    instance(x: -16, y: 18) check_same_f3e1f4 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_3a9c5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -48, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_3a9c5f.characters -> contains_d42dce.list\n        \"z\" -> contains_d42dce.item\n        characters_3a9c5f.characters -> length_6e87f2.list\n        1 -> greaterthan_cb50ae.right\n        length_6e87f2.length -> greaterthan_cb50ae.left\n        instance(x: 188, y: 425) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        contains_d42dce.result -> and_80a119.left\n        greaterthan_cb50ae.result -> and_80a119.right\n        instance(x: 2136, y: -356) and_80a119 root.Std_k98ojb.Logic.And {}\n        and_80a119.result -> result_1\n        string_1 -> characters_3a9c5f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_2e7d4f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -285, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 553, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_5a7d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -3) setintersection_e6e4c9 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 480, y: 1) length_0c2c5a root.Std_k98ojb.List.Length {}\n        characters_5a7d8f.characters -> setintersection_e6e4c9.left\n        characters_5a7d8f.characters -> setintersection_e6e4c9.right\n        length_0c2c5a.length -> setintersection_e6e4c9.intersection\n        string_1 -> characters_5a7d8f.input\n        1 -> length_0c2c5a.list\n        setintersection_e6e4c9.result -> output_1\n    }\n\n    \n\n    instance(x: -53, y: 52) check_same_3b2c6c root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 557, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_2e5c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 264, y: -1) length_7d3a8c root.Std_k98ojb.List.Length {}\n        instance(x: 488, y: 0) getat_e4b6ef root.Std_k98ojb.List.GetAt {}\n        instance(x: 715, y: 0) for_9e2f5f root.Std_k98ojb.Std.For {}\n        instance(x: 1023, y: -1) equal_8c7a8d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1256, y: 0) reduce_4e8b1c root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        input_1 -> characters_2e5c9f.input\n        characters_2e5c9f.characters -> length_7d3a8c.list\n        characters_2e5c9f.characters -> for_9e2f5f.items\n        0 -> getat_e4b6ef.index\n        characters_2e5c9f.characters -> getat_e4b6ef.list\n        length_7d3a8c.length -> equal_8c7a8d.left\n        for_9e2f5f.item -> equal_8c7a8d.right\n        1 -> equal_8c7a8d.right\n        equal_8c7a8d.result -> reduce_4e8b1c.initialValue\n        getat_e4b6ef.itemAtIndex -> for_9e2f5f.item\n        for_9e2f5f.onItem -> getat_e4b6ef.execute\n        for_9e2f5f.index -> reduce_4e8b1c.value\n        true -> reduce_4e8b1c.previous\n        for_9e2f5f.done -> reduce_4e8b1c.execute\n        reduce_4e8b1c.result -> output_1\n    }\n\n    \n\n    instance(x: -17, y: 18) is_same_7a6d0f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_3a8f9e\n\n        out(x: 558, y: 1, name: \"output\") property(Bool) output_5b7d6c\n\n        instance(x: 0, y: 0) characters_4f9c1c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: -2) length_3a8e4f root.Std_k98ojb.List.Length {}\n        instance(x: 477, y: 0) getat_5d7f2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 692, y: 1) equal_6c9b4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 906, y: -3) reduce_8e7a0c root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        characters_4f9c1c.characters -> length_3a8e4f.list\n        string_3a8f9e -> characters_4f9c1c.input\n        0 -> getat_5d7f2f.index\n        characters_4f9c1c.characters -> getat_5d7f2f.list\n        length_3a8e4f.length -> getat_5d7f2f.index\n        equal_6c9b4c.left -> reduce_8e7a0c.accumulated\n        equal_6c9b4c.right -> reduce_8e7a0c.value\n        getat_5d7f2f.itemAtIndex -> equal_6c9b4c.left\n        characters_4f9c1c.characters -> equal_6c9b4c.right\n        1 -> length_3a8e4f.list\n        reduce_8e7a0c.result -> output_5b7d6c\n    }\n\n    \n\n    instance(x: -12, y: 10) is_same_1c2b8f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_3f8d6a\n\n        out(x: 530, y: -1, name: \"output\") property(Bool) output_9c7e2b\n\n        instance(x: 0, y: 0) characters_4f8c5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) set_intersection_1a3d6c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 530, y: -1) length_9e2a7c root.Std_k98ojb.List.Length {}\n        characters_4f8c5f.input -> string_3f8d6a\n        characters_4f8c5f.characters -> set_intersection_1a3d6c.left\n        1 -> set_intersection_1a3d6c.right\n        length_9e2a7c.length -> set_intersection_1a3d6c.intersection\n        set_intersection_1a3d6c.result -> output_9c7e2b\n    }\n\n    \n\n    instance(x: -10, y: 11) check_same_8f4b0f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_7e8c6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) length_9a2d5f root.Std_k98ojb.List.Length {}\n        instance(x: 480, y: -1) ifexpression_4f9c3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 172, y: 32, name: \"getter_8e5a6d\") getter_8e5a6d = previous\n        setter(x: 417, y: -33, name: \"setter_e9b1c7\") setter_e9b1c7 = previous\n        instance(x: 150, y: -35) for_3f0c2f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -64, name: \"setter_e9b1c7\") setter_8e5a6d = previous\n        instance(x: -275, y: -79) getat_4f9b3c root.Std_k98ojb.List.GetAt {}\n        ifexpression_4f9c3c.else -> output_0\n        ifexpression_4f9c3c.value -> output_0\n        ifexpression_4f9c3c.then -> setter_e9b1c7.execute\n        characters_7e8c6f.characters -> for_3f0c2f.items\n        for_3f0c2f.item -> ifexpression_4f9c3c.gen_2\n        for_3f0c2f.index -> ifexpression_4f9c3c.gen_0\n        getter_8e5a6d.value -> ifexpression_4f9c3c.gen_1\n        for_3f0c2f.onItem -> ifexpression_4f9c3c.execute\n        for_3f0c2f.done -> output_0\n        for_3f0c2f.item -> setter_e9b1c7.new_value\n        characters_7e8c6f.characters -> getat_4f9b3c.list\n        0 -> getat_4f9b3c.index\n        getat_4f9b3c.itemAtIndex -> setter_8e5a6d.new_value\n        input_0 -> characters_7e8c6f.input\n        length_9a2d5f.list -> getat_4f9b3c.list\n        characters_7e8c6f.characters -> length_9a2d5f.list\n    }\n\n    \n\n    instance(x: 40, y: -1) is_same_0a9d4f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -287, y: 0, name: \"string\") property(String) string_3f8d9a\n\n        out(x: 560, y: 1, name: \"output\") property(Bool) output_7c2b4e\n\n        instance(x: 0, y: 0) characters_6c5b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 267, y: -1) length_9a8d3f root.Std_k98ojb.List.Length {}\n        instance(x: 482, y: 2) equal_7e9b9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 700, y: 0) filter_5c4c6c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 33, name: \"current\") property(String) current_9f6850\n\n            out(x: 515, y: 43, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 28) equal_2b8d4c root.Std_k98ojb.Logic.Equal {}\n            characters_6c5b4c.characters -> equal_2b8d4c.left\n            current_9f6850 -> equal_2b8d4c.right\n            equal_2b8d4c.result -> bool_af09a7\n        } -> filter_5c4c6c.handler\n        characters_6c5b4c.characters -> filter_5c4c6c.items\n        length_9a8d3f.length -> equal_7e9b9f.left\n        filter_5c4c6c.output_list -> equal_7e9b9f.right\n        string_3f8d9a -> characters_6c5b4c.input\n        equal_7e9b9f.result -> output_7c2b4e\n    }\n\n    \n\n    instance(x: -53, y: 530) check_same_2c856f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_7a9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        characters_7a9c8f.characters -> contains_d42dce.list\n        func() {\n            in(x: -30, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_2a9c1e root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_2a9c1e.left\n            firstitem_870503.item -> equal_2a9c1e.right\n            equal_2a9c1e.result -> out_d0fd24\n        } -> contains_d42dce.handler\n        string_1 -> characters_7a9c8f.input\n        characters_7a9c8f.characters -> firstitem_870503.list\n        contains_d42dce.result -> result_1\n    }\n\n    \n\n    instance(x: -66, y: 52) is_same_2e5b6f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 593, y: 3, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_7b8f2c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 488, y: 3) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 170, y: 16, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 415, y: -35, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 157, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -21, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -273, y: -36) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> output_1\n        ifexpression_875761.value -> output_1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_7b8f2c.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_1\n        for_d26972.item -> setter_9d4f1c.new_value\n        characters_7b8f2c.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        input_1 -> characters_7b8f2c.input\n        length_6e87f2.length -> for_d26972.itemsLength\n        characters_7b8f2c.characters -> length_6e87f2.list\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -55, y: 529) is_same_7b3a5f root.main.is_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e5c8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e5c8d.second\n        expression_2d6da6.result -> pow_9e5c8d.first\n        n_3a3116 -> mul_f892a4.first\n        pow_9e5c8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c9e8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9e8d.second\n        expression_2d6da6.result -> pow_4c9e8d.first\n        n_3a3116 -> mul_f892a4.first\n        pow_4c9e8d.result -> mul_f892a4.second\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e5c8d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e5c8d.second\n        expression_2d6da6.result -> pow_9e5c8d.first\n        n_3a3116 -> mul_f892a4.first\n        pow_9e5c8d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c0e9d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c0e9d.second\n        expression_2d6da6.result -> pow_4c0e9d.first\n        data_cde0dc -> sum_365f7b\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 330, y: 133) add_1c8e1f root.Std_k98ojb.Math.Add {}\n        pow_4c0e9d.result -> add_1c8e1f.second\n        add_1c8e1f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4c0d5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c0d5e.y\n        data_cde0dc -> pow_4c0d5e.x\n        expression_2d6da6.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4c0d5e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8c2d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e8c2d.second\n        expression_2d6da6.result -> pow_9e8c2d.first\n        data_cde0dc -> sum_365f7b\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9e8c2d.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9e6a1f\n\n        out(x: 50, y: 0, name: \"surface_area\") property(Number) surface_area_7c2b3d\n\n        instance(x: 20, y: -10) mul_f8a4e5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 20, y: 40) mul_1f0c6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 70, y: 30) mul_7d9f3f root.Std_k98ojb.Math.Mul {}\n        size_9e6a1f -> mul_f8a4e5.first\n        size_9e6a1f -> mul_f8a4e5.second\n        mul_f8a4e5.result -> mul_7d9f3f.first\n        6 -> mul_7d9f3f.second\n        mul_7d9f3f.result -> surface_area_7c2b3d\n        size_9e6a1f -> mul_1f0c6c.first\n        size_9e6a1f -> mul_1f0c6c.second\n    }\n\n    \n\n    instance(x: 50, y: -10, name: \"surface_area_cube\") surface_area_cube_7b8d5f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_2f3a8d\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_1c7b5e\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_9f4a3f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8d2f0d\n\n        instance(x: 80, y: -417) ifexpression_eb1e6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9a7f4d root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_1e3c5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_6f2f0f root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_7d9a8e\") setter_7d9a8e = sum\n        getter(x: 902, y: -314, name: \"getter_5c1f3d\") getter_5c1f3d = sum\n        instance(x: -202, y: -236) floor_6b0c2d root.Std_k98ojb.Math.Floor {}\n        10 -> mul_1e3c5c.second\n        mul_1e3c5c.result -> add_6f2f0f.first\n        6 -> add_6f2f0f.second\n        add_6f2f0f.result -> setter_7d9a8e.new_value\n        0 -> setter_7d9a8e.new_value\n        setter_7d9a8e.continue -> ifexpression_eb1e6c.execute\n        ifexpression_eb1e6c.then -> continue_9f4a3f\n        execute_2f3a8d -> setter_7d9a8e.execute\n        ifexpression_eb1e6c.else -> surface_area_cube_9a7f4d.execute_2f3a8d\n        surface_area_cube_9a7f4d.continue_9f4a3f -> getter_5c1f3d.execute\n        getter_5c1f3d.value -> output_8d2f0d\n        side_length_1c7b5e -> floor_6b0c2d.input\n        floor_6b0c2d.output -> mul_1e3c5c.first\n        floor_6b0c2d.output -> ifexpression_eb1e6c.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_7f8a4c root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -333, y: 0, name: \"size\") property(Number) size_1f3a9d\n\n        out(x: 1046, y: 10, name: \"surface_area\") property(Number) surface_area_b2c8e7\n\n        instance(x: 13, y: -4) mul_f9b5a0 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 333, y: 133) data_3f6d1c  = 6\n        instance(x: 12, y: 136) expression_7e8b7f root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        mul_f9b5a0.result -> surface_area_b2c8e7\n        data_3f6d1c -> mul_f9b5a0.first\n        expression_7e8b7f.result -> mul_f9b5a0.second\n        size_1f3a9d -> expression_7e8b7f.gen_0\n    }\n\n    \n\n    instance(x: 426, y: -303) surface_area_cube_a2c6f4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_1a8d9f\n\n        out(x: 39, y: 0, name: \"surface_area\") property(Number) surface_area_3e7b6c\n\n        instance(x: 15, y: 0) mul_4a2a1 root.Std_k98ojb.Math.Mul {}\n        side_1a8d9f -> mul_4a2a1.first\n        side_1a8d9f -> mul_4a2a1.second\n        instance(x: -5, y: 0) mul_7e3c1 root.Std_k98ojb.Math.Mul {}\n        mul_4a2a1.result -> mul_7e3c1.first\n        6 -> mul_7e3c1.second\n        mul_7e3c1.result -> surface_area_3e7b6c\n    }\n\n    \n\n    instance(x: -33, y: 0) surface_area_cube_8f9d4 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 10, name: \"size\") property(Number) size_1a8f9e\n\n        out(x: 1062, y: 7, name: \"surface_area\") property(Number) surface_area_b5c0d3\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_1a8f9e -> mul_f892a4.first\n        size_1a8f9e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_b5c0d3\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 1, name: \"size\") property(Number) size_9e6f5a\n\n        out(x: 1018, y: 3, name: \"surface_area\") property(Number) surface_area_7b0c2d\n\n        instance(x: 14, y: -11) mul_1b4f6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 333, y: 56) data_9e5a3d  = 6\n        instance(x: 16, y: 51) pow_e8c7ed root.Std_k98ojb.Math.Pow {}\n        size_9e6f5a -> mul_1b4f6f.first\n        pow_e8c7ed.result -> mul_1b4f6f.second\n        data_9e5a3d -> mul_1b4f6f.second\n        size_9e6f5a -> pow_e8c7ed.x\n        2 -> pow_e8c7ed.y\n        mul_1b4f6f.result -> surface_area_7b0c2d\n    }\n\n    \n\n    instance(x: -18, y: -17) surface_area_cube_9e5a3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9e6f8a\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_7b3c0d\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_1b2f4f\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_8a8e9f\n\n        instance(x: 80, y: -417) ifexpression_7c3d6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_2a8d9f root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_f1c7e4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_3b0a6c root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_5f8d9f\") setter_5f8d9f = sum\n        getter(x: 902, y: -314, name: \"getter_1a6c7e\") getter_1a6c7e = sum\n        instance(x: -202, y: -236) floor_2b3f4d root.Std_k98ojb.Math.Floor {}\n        10 -> mul_f1c7e4.second\n        mul_f1c7e4.result -> add_3b0a6c.first\n        6 -> add_3b0a6c.second\n        add_3b0a6c.result -> setter_5f8d9f.new_value\n        0 -> setter_5f8d9f.new_value\n        setter_5f8d9f.continue -> ifexpression_7c3d6e.execute\n        ifexpression_7c3d6e.then -> continue_1b2f4f\n        execute_9e6f8a -> setter_5f8d9f.execute\n        ifexpression_7c3d6e.else -> surface_area_cube_2a8d9f.execute_9e6f8a\n        surface_area_cube_2a8d9f.continue_1b2f4f -> getter_1a6c7e.execute\n        surface_area_cube_2a8d9f.output_8a8e9f -> setter_5f8d9f.new_value\n        side_length_7b3c0d -> floor_2b3f4d.input\n        floor_2b3f4d.output -> mul_f1c7e4.first\n        getter_1a6c7e.value -> output_8a8e9f\n        surface_area_cube_2a8d9f.side_length_7b3c0d -> floor_2b3f4d.input\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_5f1b8c root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 57, name: \"side\") property(Number) side_1f9a5e\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_3c8b6d\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_1f9a5e -> mul_f892a4.first\n        side_1f9a5e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_3c8b6d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_7f8c1c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_1f9d5e\n\n        out(x: 46, y: 0, name: \"surface_area\") property(Number) surface_area_3a8c4b\n\n        instance(x: 15, y: -1) mul_2e6c7c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_2e6c7c.result -> div_64046c.first\n        expression_2d6da6.result -> mul_2e6c7c.second\n        side_1f9d5e -> mul_2e6c7c.first\n        side_1f9d5e -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_3a8c4b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -102, y: 12, name: \"size\") property(Number) size_9f0e6a\n\n        out(x: 1118, y: 13, name: \"surface_area\") property(Number) surface_area_7c1b3d\n\n        instance(x: 10, y: -5) mul_4a2c7 root.Std_k98ojb.Math.Mul {}\n        instance(x: 15, y: 43) pow_6f8e0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 96, y: 40) mul_3d9d1 root.Std_k98ojb.Math.Mul {}\n        size_9f0e6a -> pow_6f8e0.x\n        2 -> pow_6f8e0.y\n        pow_6f8e0.result -> mul_4a2c7.first\n        6 -> mul_4a2c7.second\n        mul_4a2c7.result -> mul_3d9d1.first\n        size_9f0e6a -> mul_3d9d1.second\n        mul_3d9d1.result -> surface_area_7c1b3d\n    }\n\n    \n\n    instance(x: 264, y: -464) surface_area_cube_5f2a4 root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 157, name: \"list\") property(List) list_9a3b5f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7e8d1c\n\n        instance(x: 201, y: 126) sub_4a6b0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 157) max_9f5b3c root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358) min_f7d8c1 root.Std_k98ojb.List.Min {}\n        list_9a3b5f -> max_9f5b3c.list\n        list_9a3b5f -> min_f7d8c1.list\n        max_9f5b3c.max -> sub_4a6b0e.first\n        min_f7d8c1.min -> sub_4a6b0e.second\n        sub_4a6b0e.result -> output_7e8d1c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5f9f2c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 156, name: \"list\") property(List) list_0d3b9f\n\n        out(x: 593, y: 147, name: \"output\") property(Number) output_ea1c7e\n\n        instance(x: 0, y: 0) sub_6a5a2c root.Std_k98ojb.Math.Sub {}\n        instance(x: -279, y: -35) max_9f3d4c root.Std_k98ojb.List.Max {}\n        instance(x: -280, y: 115) min_1e7a8c root.Std_k98ojb.List.Min {}\n        list_0d3b9f -> max_9f3d4c.list\n        list_0d3b9f -> min_1e7a8c.list\n        max_9f3d4c.max -> sub_6a5a2c.first\n        min_1e7a8c.min -> sub_6a5a2c.second\n        sub_6a5a2c.result -> output_ea1c7e\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_3f0b9d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 155, name: \"list\") property(List) list_0d9b5f\n\n        out(x: 446, y: 146, name: \"output\") property(Number) output_e6a7c4\n\n        instance(x: 194, y: 147) sub_3e8f2f root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 155) max_1d9f0f root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -5) min_4c6a1c root.Std_k98ojb.List.Min {}\n        list_0d9b5f -> max_1d9f0f.list\n        list_0d9b5f -> min_4c6a1c.list\n        max_1d9f0f.max -> sub_3e8f2f.first\n        min_4c6a1c.min -> sub_3e8f2f.second\n        sub_3e8f2f.result -> output_e6a7c4\n    }\n\n    \n\n    instance(x: -60, y: 177) diff_max_min_9b5d7f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 154, name: \"list\") property(List) list_1a9b5f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7e2d3c\n\n        instance(x: 188, y: 126) sub_4b0c6f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a8b9f root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358) min_f3e5a2 root.Std_k98ojb.List.Min {}\n        list_1a9b5f -> max_1a8b9f.list\n        list_1a9b5f -> min_f3e5a2.list\n        max_1a8b9f.max -> sub_4b0c6f.first\n        min_f3e5a2.min -> sub_4b0c6f.second\n        sub_4b0c6f.result -> output_7e2d3c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_9a1f2f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 165, name: \"list\") property(List) list_0a1b9f\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_9d6f8a root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_0b1361 root.Std_k98ojb.List.Min {}\n        list_0a1b9f -> max_9d6f8a.list\n        list_0a1b9f -> min_0b1361.list\n        max_9d6f8a.max -> sub_7e1ce0.first\n        min_0b1361.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -318, y: 521, name: \"Max list\") max_4f3a9d root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_1e6f8c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_4f3a9d.max -> sub_852f2e.first\n        min_1e6f8c.min -> sub_852f2e.second\n        list_0b075e -> max_4f3a9d.list\n        list_0b075e -> min_1e6f8c.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a9f3e\n\n        out(x: 592, y: 7, name: \"output\") property(Number) output_eb6d8c\n\n        instance(x: 0, y: 0) max_2e4c1c root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_9f3a5c root.Std_k98ojb.List.Min {}\n        list_1a9f3e -> max_2e4c1c.list\n        list_1a9f3e -> min_9f3a5c.list\n        instance(x: 312, y: 7) sub_8d0a2c root.Std_k98ojb.Math.Sub {}\n        max_2e4c1c.max -> sub_8d0a2c.first\n        min_9f3a5c.min -> sub_8d0a2c.second\n        sub_8d0a2c.result -> output_eb6d8c\n    }\n\n    \n\n    instance(x: -56, y: 529) diff_max_min_7e4b4c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -318, y: 521, name: \"Max list\") max_4f3a9d root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_f6e7ec root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_4f3a9d.list -> list_0b075e\n        min_f6e7ec.list -> list_0b075e\n        max_4f3a9d.max -> sub_852f2e.first\n        min_f6e7ec.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 0, name: \"list\") property(List) list_1f9d5e\n\n        out(x: 550, y: 27, name: \"output\") property(Number) output_7b2a6c\n\n        instance(x: 186, y: 22) sub_4b8f3f root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 0, name: \"Max value\") max_f1d5e9 root.Std_k98ojb.List.Max {}\n        instance(x: -108, y: -139, name: \"Min value\") min_3f7c8a root.Std_k98ojb.List.Min {}\n        list_1f9d5e -> max_f1d5e9.list\n        list_1f9d5e -> min_3f7c8a.list\n        max_f1d5e9.max -> sub_4b8f3f.first\n        min_3f7c8a.min -> sub_4b8f3f.second\n        sub_4b8f3f.result -> output_7b2a6c\n    }\n\n    \n\n    instance(x: -67, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -277, y: 165, name: \"list\") property(List) list_0f9d3e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_edc2e3\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_9f7759 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_f9110a root.Std_k98ojb.List.Min {}\n        list_0f9d3e -> max_9f7759.list\n        list_0f9d3e -> min_f9110a.list\n        max_9f7759.max -> sub_7e1ce0.first\n        min_f9110a.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 20, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1217, y: 20, name: \"output\") property(Bool) output_eb1e5a\n\n        instance(x: 1052, y: 17) ifexpression_c0d9bc root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_12bf99 -> ifexpression_c0d9bc.execute\n        input_5e8f1d -> ifexpression_c0d9bc.gen_0\n        ifexpression_c0d9bc.value -> output_eb1e5a\n        ifexpression_c0d9bc.then -> continue_685c8f\n        ifexpression_c0d9bc.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -175, y: 21) is_even_2e7f3f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 30, name: \"input\") property(Number) input_1a8f0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_eb9c6d\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_7b2f5f\n        out(x: 1268, y: 27, name: \"output\") property(Bool) output_3e1a0d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a8f0e -> ifexpression_e38995.gen_0\n        execute_eb9c6d -> ifexpression_e38995.execute\n        ifexpression_e38995.then -> continue_7b2f5f\n        ifexpression_e38995.else -> continue_7b2f5f\n        ifexpression_e38995.value -> output_3e1a0d\n    }\n\n    \n\n    instance(x: -174, y: 11) is_even_9c8d6f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 0, name: \"input\") property(Number) input_1f9a3e\n        in(x: -451, y: -116, name: \"execute\") trigger() execute_e5b7c4\n\n        out(x: 516, y: -117, name: \"continue\") trigger() continue_6d8c2f\n        out(x: 443, y: 13, name: \"output\") property(Bool) output_9e3a1e\n\n        instance(x: -103, y: -115) ifexpression_e0b5ec root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1f9a3e -> ifexpression_e0b5ec.gen_0\n        2 -> ifexpression_e0b5ec.gen_1\n        execute_e5b7c4 -> ifexpression_e0b5ec.execute\n        ifexpression_e0b5ec.value -> output_9e3a1e\n        ifexpression_e0b5ec.then -> continue_6d8c2f\n        ifexpression_e0b5ec.else -> continue_6d8c2f\n    }\n\n    \n\n    instance(x: -171, y: 14) is_even_4e9b7a root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_1f3e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1216, y: 5, name: \"output\") property(Bool) output_9a3e1b\n\n        instance(x: 1060, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1f3e9d -> ifexpression_875761.gen_0\n        ifexpression_875761.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_875761.else -> continue_685c8f\n        false -> getter_b280eb.value\n        getter_b280eb.value -> output_9a3e1b\n        execute_12bf99 -> ifexpression_875761.execute\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -291, y: 177) is_even_f53d27 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 1, name: \"input\") property(Number) input_9f8a0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_5c2d6b\n\n        out(x: 1234, y: -113, name: \"continue\") trigger() continue_1b3c8e\n        out(x: 1227, y: 127, name: \"output\") property(Bool) output_ea9f9f\n\n        instance(x: 1056, y: 123) ifexpression_b2d0ac root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9f8a0e -> ifexpression_b2d0ac.gen_0\n        ifexpression_b2d0ac.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_b2d0ac.else -> continue_1b3c8e\n        getter_9cceb3.value -> output_ea9f9f\n        execute_5c2d6b -> ifexpression_b2d0ac.execute\n        setter_1cedb2.continue -> continue_1b3c8e\n    }\n\n    \n\n    instance(x: -291, y: 10) is_even_7c7a5f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 2, name: \"input\") property(Number) input_1a0f3e\n        in(x: -452, y: -111, name: \"execute\") trigger() execute_eb9d6c\n\n        out(x: 558, y: 79, name: \"output\") property(Bool) output_f4f7ef\n        out(x: 512, y: -111, name: \"continue\") trigger() continue_5e8a1f\n\n        instance(x: -93, y: 78) ifexpression_eb6d0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a0f3e -> ifexpression_eb6d0c.gen_0\n        2 -> ifexpression_eb6d0c.gen_1\n        execute_eb9d6c -> ifexpression_eb6d0c.execute\n        ifexpression_eb6d0c.value -> output_f4f7ef\n        ifexpression_eb6d0c.then -> continue_5e8a1f\n    }\n\n    \n\n    instance(x: -85, y: 179) is_even_2e9d9c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 17, name: \"input\") property(Number) input_1a9f8e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_e5b2d7\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_f6c3ee\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_9e1a4f\n\n        instance(x: -105, y: -110) ifexpression_7b2d8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_1a9f8e -> ifexpression_7b2d8c.gen_0\n        execute_e5b2d7 -> ifexpression_7b2d8c.execute\n        getter_9cceb3.value -> output_f6c3ee\n        ifexpression_7b2d8c.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        false -> setter_1cedb2.new_value\n        ifexpression_7b2d8c.else -> setter_1cedb2.execute\n        setter_1cedb2.continue -> continue_9e1a4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f3c0ec root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 10, name: \"input\") property(Number) input_1a0f3e\n        in(x: -451, y: -116, name: \"execute\") trigger() execute_7b2c9d\n\n        out(x: 547, y: 11, name: \"output\") property(Bool) output_8a5a8e\n        out(x: 512, y: -116, name: \"continue\") trigger() continue_1f3c6e\n\n        instance(x: -92, y: 10) modulo_c7d9b4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 148, y: 11) equal_f5a8ab root.Std_k98ojb.Logic.Equal {}\n        input_1a0f3e -> modulo_c7d9b4.value\n        2 -> modulo_c7d9b4.divisor\n        modulo_c7d9b4.result -> equal_f5a8ab.left\n        0 -> equal_f5a8ab.right\n        equal_f5a8ab.result -> output_8a5a8e\n        execute_7b2c9d -> equal_f5a8ab.execute\n        equal_f5a8ab.continue -> continue_1f3c6e\n    }\n\n    \n\n    instance(x: -56, y: 210) is_even_0e7d4c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 166, name: \"input\") property(Number) input_1e8a3f\n        in(x: -485, y: 30, name: \"execute\") trigger() execute_90aaec\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        ifexpression_875761.value -> output_5bbcd7\n        execute_90aaec -> ifexpression_875761.execute\n        ifexpression_875761.then -> continue_a96db6\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_fc79d5 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 12, name: \"input\") property(Number) input_9e8a0f\n        in(x: -452, y: -112, name: \"execute\") trigger() execute_eb2c7d\n\n        out(x: 1224, y: 5, name: \"continue\") trigger() continue_6f1f3b\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_0e9a1f\n\n        instance(x: -92, y: -97) modulo_c7c7e6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 146, y: -96) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 360, y: -95) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n\n        input_9e8a0f -> modulo_c7c7e6.value\n        2 -> modulo_c7c7e6.divisor\n        modulo_c7c7e6.result -> equal_f89569.left\n        0 -> equal_f89569.right\n        equal_f89569.result -> ifexpression_875761.gen_1\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        true -> setter_9d4f1c.new_value\n        ifexpression_875761.else -> continue_6f1f3b\n        ifexpression_875761.value -> output_0e9a1f\n        execute_eb2c7d -> ifexpression_875761.execute\n        setter_9d4f1c.continue -> continue_6f1f3b\n    }\n\n    \n\n    instance(x: -80, y: 56) is_even_5a8f2e root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_3f9c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``second occurrence`` root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.contains\n            input_0 -> contains_d42dce.input\n            ``second occurrence``.contains -> ``first occurrence_0b1361``.contains\n            find_3f9c8d.item -> ``second occurrence``.input\n            notequal_a54bdc.right -> contains_d42dce.result\n            notequal_a54bdc.left -> ``second occurrence``.result\n            ``second occurrence``.result -> bool_1eb6e9\n        } -> find_3f9c8d.predicate\n        input_0 -> ``first occurrence_0b1361``.input\n        find_3f9c8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 551, y: -105) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_1e5b3c root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_0d9f2f root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> slice_1e5b3c.list\n            elem_9f6850 -> slice_1e5b3c.start\n            -1 -> slice_1e5b3c.end\n            slice_1e5b3c.slice -> contains_807ffd.input\n            elem_9f6850 -> contains_807ffd.contains\n            contains_807ffd.result -> notequal_0d9f2f.left\n            true -> notequal_0d9f2f.right\n            notequal_0d9f2f.result -> bool_af09a7\n        } -> find_1088d5.predicate\n        find_1088d5.item -> if_7c284f.execute\n        input_0 -> characters_6d05b0.input\n        find_1088d5.item -> output_0\n        if_7c284f.else -> output_0\n    }\n\n    \n\n    instance(x: 777, y: 760) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d42ce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -75) ifexpression_807ffd root.Std_k98ojb.Std.IfExpression {\n            expression: \"a in b\"\n        }\n        characters_2e1444.output -> find_7d42ce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> ifexpression_807ffd.gen_0\n            find_7d42ce.items -> ifexpression_807ffd.gen_1\n            ifexpression_807ffd.then -> bool_1eb6e9\n            ifexpression_807ffd.else -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7d42ce.predicate\n        input_0 -> characters_2e1444.input\n        find_7d42ce.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5a6c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"index\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"indexOf(it, characters)\"\n        }\n        instance(x: 62, y: -226, name: \"is repeated\") greaterthan_2d44da root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: 1) tolist_3e4b7f root.Std_k98ojb.List.GenerateRange {\n            from: 0\n            to: -1\n        }\n        characters_3e4b7f.output -> find_5a6c8d.items\n        expression_634b7e.gen_0 -> index\n        characters_3e4b7f.output -> expression_634b7e.gen_1\n        expression_634b7e.result -> greaterthan_2d44da.left\n        0 -> greaterthan_2d44da.right\n        find_5a6c8d.item -> output_0\n        tolist_3e4b7f.list -> index\n        characters_3e4b7f.output -> expression_634b7e.gen_1\n        input_1 -> characters_3e4b7f.input\n        find_5a6c8d.predicate -> greaterthan_2d44da.execute\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_d42dce root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"unique\") filter_0b1361 root.Std_k98ojb.Query.Filter {\n            where: \"!contains(unique, it)\"\n        }\n        input_09fcba -> characters_d42dce.input\n        characters_d42dce.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            filter_0b1361.result -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_d42dce.characters -> filter_0b1361.list\n        find_7e1ce0.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 1) characters_5e4d9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7c6a3c root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: 394, y: -339) data_2c8d1e  = [seen]\n        instance(x: 46, y: -383, name: \"contains\") contains_5f0d7f root.Std_k98ojb.List.Contains {}\n        characters_5e4d9f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            contains_5f0d7f.list -> data_2c8d1e.seen\n            current_1 -> contains_5f0d7f.item\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2\n\n            contains_5f0d7f.list -> data_2c8d1e.seen\n            current_1 -> contains_5f0d7f.item\n        } -> find_6d05b0.predicate\n        instance(x: 62, y: -226, name: \"add\") add_4a9b3a root.Std_k98ojb.List.Add {}\n        data_2c8d1e -> output_1\n        input_1 -> characters_5e4d9f.input\n        find_6d05b0.item -> output_1\n        find_6d05b0.onItem -> add_4a9b3a.execute\n        current_1 -> add_4a9b3a.item\n        data_2c8d1e.seen -> add_4a9b3a.list\n        add_4a9b3a.listWithItem -> data_2c8d1e.seen\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_7f5d0f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7c284f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") ``first occurrence_634b7e`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``second occurrence_d42dce`` root.Std_k98ojb.Iteration.Find {}\n        characters_2e1444.output -> find_7c284f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            ``first occurrence_634b7e``.item -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            true -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7c284f.predicate\n        characters_2e1444.output -> ``first occurrence_634b7e``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_148aeb root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.input\n            ``first occurrence_634b7e``.item -> contains_45e806.contains\n            contains_45e806.result -> equal_148aeb.left\n            true -> equal_148aeb.right\n            equal_148aeb.result -> bool_1eb6e9\n        } -> ``second occurrence_d42dce``.predicate\n        characters_2e1444.output -> ``second occurrence_d42dce``.items\n        find_7c284f.item -> output_0\n        input_0 -> characters_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 1) characters_5e4d7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_9a3c8c root.Std_k98ojb.Iteration.Find {}\n        data_instance(x: 394, y: -339) data_1  = [seen]\n        instance(x: 46, y: -383, name: \"contains\") contains_5e4d7f root.Std_k98ojb.List.Contains {}\n        characters_5e4d7f.characters -> find_9a3c8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1\n\n            contains_5e4d7f.list -> data_1.seen\n            current_1 -> contains_5e4d7f.item\n            contains_5e4d7f.result -> bool_1\n        } -> find_9a3c8c.predicate\n        characters_5e4d7f.characters -> data_1.seen\n        find_9a3c8c.item -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_2 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3c8d7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5e6a9c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"count\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"length(list) - length(unique(list))\"\n        }\n        instance(x: 62, y: -226, name: \"unique list\") unique_2d44da root.Std_k98ojb.List.Flatten {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_3c8d7f.output -> find_1.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_1.list -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            true -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_1.predicate\n        characters_3c8d7f.output -> unique_2d44da.items\n        instance(x: 532, y: 147) list_7e1ce0 root.Std_k98ojb.List.Flatten {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            list_7e1ce0.list -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            true -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> list_7e1ce0.predicate\n        characters_3c8d7f.output -> list_7e1ce0.items\n        find_1.item -> output_0\n        input_1 -> characters_3c8d7f.input\n        expression_634b7e.gen_0 -> count.list\n        unique_2d44da.flattened -> expression_634b7e.gen_1\n        list_7e1ce0.list -> expression_634b7e.gen_2\n        find_1.onItem -> if_7c284f.execute\n        count.count -> if_7c284f.predicate\n        if_7c284f.else -> continue_075eef\n        if_7c284f.then -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_edc2e3\n\n        instance(x: 532, y: 147) find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 26, name: \"characters\") characters_d42dce root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 257, name: \"unique\") filter_0b1361 root.Std_k98ojb.Query.Filter {\n            where: \"!contains(unique, it)\"\n        }\n        input_09fcba -> characters_d42dce.input\n        characters_d42dce.characters -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            filter_0b1361.result -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        characters_d42dce.characters -> filter_0b1361.list\n        find_7e1ce0.item -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_8a1f9e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_5c7d3b\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            list_remove_node.listWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> equal_aabb6e.left\n            min_node.min -> equal_aabb6e.right\n            equal_aabb6e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8a1b5c -> min_node.items\n        min_node.min -> list_remove_node.index\n        list_8a1f9e -> list_remove_node.list\n        list_remove_node.listWithoutItem -> second_smallest\n        find_6d05b0.item -> second_min_5c7d3b\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_3e7c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> first_min_1e8c6d\n\n        data_instance(x: -609, y: -363) data_9a9c70  = [first_min, second_min]\n        instance(x: -341, y: -301) min_c3e343 root.Std_k98ojb.List.Min {}\n        first_min_1e8c6d -> data_9a9c70.first\n        a_f37c19 -> data_9a9c70.second\n        data_9a9c70 -> min_c3e343.items\n        min_c3e343.min -> second_min_3e7c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        a_f37c19 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> min_c3e343.items\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_f37c19 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 0, name: \"list\") property(List) list_9e6f1a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_8b7c4d\n\n        instance(x: -105, y: -110) find_5c2b0c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_1f9e8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7c2d4b\n\n            instance(x: 89, y: 29) min_5b0b6f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_8e1a9c root.Std_k98ojb.Logic.NotEqual {}\n            list_9e6f1a -> min_5b0b6f.list\n            elem_1f9e8a -> min_5b0b6f.list\n            min_5b0b6f.min -> notequal_8e1a9c.left\n            0 -> notequal_8e1a9c.right\n            notequal_8e1a9c.result -> bool_7c2d4b\n        } -> find_5c2b0c.predicate\n        list_9e6f1a -> find_5c2b0c.items\n        instance(x: -105, y: 120) find_3e9f1f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -144, y: 112, name: \"elem\") property(Number) elem_8d7a2c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1e3f0b\n\n            instance(x: 89, y: 29) min_5b0b6f root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_8e1a9c root.Std_k98ojb.Logic.NotEqual {}\n            find_5c2b0c.item -> min_5b0b6f.list\n            elem_8d7a2c -> min_5b0b6f.list\n            min_5b0b6f.min -> notequal_8e1a9c.left\n            0 -> notequal_8e1a9c.right\n            notequal_8e1a9c.result -> bool_1e3f0b\n        } -> find_3e9f1f.predicate\n        list_9e6f1a -> find_3e9f1f.items\n        find_3e9f1f.item -> second_min_8b7c4d\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8a5e\n\n        out(x: 593, y: 1, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 115, name: \"index\") property(Number) index_7c3a8e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            instance(x: 310, y: 114) greaterthan_7a1b6c root.Std_k98ojb.Math.GreaterThan {}\n            index_7c3a8e -> greaterthan_7a1b6c.left\n            0 -> greaterthan_7a1b6c.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8a5e -> find_6d05b0.items\n        instance(x: -61, y: 528) filter_2e1c4f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_2e1c4f.handler\n        list_9f8a5e -> filter_2e1c4f.items\n        find_6d05b0.item -> number_3bc2ae\n        filter_2e1c4f.output_list -> find_6d05b0.items\n    }\n\n    \n\n    instance(x: -67, y: 529) second_smallest_f21f44 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 46, y: 357, name: \"second_min\") property(Number) second_min_1c7d5b\n\n        instance(x: -105, y: 112) min_c6a4ee root.Std_k98ojb.List.Min {}\n        instance(x: -104, y: 232) remove_3f9e2f root.Std_k98ojb.List.Remove {}\n        instance(x: -103, y: 352) min_1d7c8e root.Std_k98ojb.List.Min {}\n        list_9e3f8a -> min_c6a4ee.items\n        min_c6a4ee.min -> remove_3f9e2f.index\n        list_9e3f8a -> remove_3f9e2f.list\n        remove_3f9e2f.listWithoutItem -> min_1d7c8e.items\n        min_1d7c8e.min -> second_min_1c7d5b\n    }\n\n    \n\n    instance(x: -174, y: 268) second_smallest_4a6b5c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9f2a5e\n\n        out(x: 158, y: 159, name: \"second_min\") property(Number) second_min_a8b3d7\n\n        instance(x: -105, y: -110) min_4c6a1f root.Std_k98ojb.List.Min {}\n        instance(x: -103, y: 112) filter_5e2b9f root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        instance(x: -105, y: 0) min_7c1a4d root.Std_k98ojb.List.Min {}\n        list_9f2a5e -> min_4c6a1f.items\n        min_4c6a1f.min -> filter_5e2b9f.list\n        filter_5e2b9f.result -> min_7c1a4d.items\n        min_7c1a4d.min -> second_min_a8b3d7\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7c1f9e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> getter_9cceb3.value\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        list_min_node.listWithItem -> list_remove_node.list\n        list_min_node.min -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node.items\n        getter_9cceb3.value -> ifexpression_e38995.gen_0\n        setter_1cedb2.new_value -> ifexpression_e38995.gen_1\n        items_ai -> ifexpression_e38995.gen_2\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        getter_9cceb3.value -> second_min_7c1f9e\n        ifexpression_e38995.else -> list_remove_node.reset\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 1, name: \"list\") property(List) list_9f6a2e\n\n        out(x: 159, y: 80, name: \"second_min\") property(Number) second_min_7c3b5d\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a2e -> min_node.items\n        min_node.min -> list_remove_node.index\n        list_9f6a2e -> list_remove_node.list\n        list_remove_node.listWithoutItem -> find_6d05b0.items\n        find_6d05b0.item -> second_min_7c3b5d\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f5e4a\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: -1, name: \"index\") property(Number) index_8e3a7c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) min_2b0f9d root.Std_k98ojb.Math.Min {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -5, y: 36) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            min_2b0f9d -> notequal_808000.left\n            list_9f5e4a -> min_2b0f9d.list\n            index_8e3a7c -> min_2b0f9d.index\n            elem_9f6850 -> equal_a54bdc.right\n            min_2b0f9d.result -> equal_a54bdc.left\n            1 -> notequal_808000.right\n            index_8e3a7c -> notequal_808000.left\n            notequal_808000.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f5e4a -> find_6d05b0.items\n        find_6d05b0.item -> number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_2c856f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -281, y: 158, name: \"list\") property(List) list_9f7759\n\n        out(x: 46, y: 358, name: \"second_min\") property(Number) second_min_f9110a\n\n        instance(x: -105, y: 137) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 247, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 257, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 231) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 241) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -24, y: 261) min_c3e343 root.Std_k98ojb.List.Min {}\n            list_9f7759 -> min_c3e343.items\n            0 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            modulo_1088d5.result -> notequal_807ffd.left\n            min_c3e343.min -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.item -> second_min_f9110a\n    }\n\n    \n\n    instance(x: -174, y: 568) second_smallest_d6e930 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 12101,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -277, y: 164, name: \"list1\") property(List) list1_0a8f9e\n        in(x: -278, y: -3, name: \"list2\") property(List) list2_eb7d5c\n\n        out(x: 801, y: 145, name: \"output\") property(Bool) output_d6c4ba\n\n        instance(x: 532, y: 147) intersection_9a8e0f root.Std_k98ojb.Sets.Intersection {}\n        list1_0a8f9e -> intersection_9a8e0f.left\n        list2_eb7d5c -> intersection_9a8e0f.right\n        instance(x: 698, y: 145) notempty_4a3b6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a8e0f.intersect -> notempty_4a3b6f.list\n        notempty_4a3b6f.isEmpty -> output_d6c4ba\n    }\n\n    \n\n    instance(x: -291, y: 177) intersection_1d5d7c root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 17, name: \"list1\") property(List) list1_3e8b9a\n        in(x: -163, y: -120, name: \"list2\") property(List) list2_7c6d5f\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3e8b9a -> intersection_c7c7e6.left\n        list2_7c6d5f -> intersection_c7c7e6.right\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_1a9d5f root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -178, y: 20, name: \"list1\") property(List) list1_3e8f0a\n        in(x: -180, y: -110, name: \"list2\") property(List) list2_7b4c5d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3e8f0a -> intersection_c7c7e6.left\n        list2_7b4c5d -> intersection_c7c7e6.right\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        length_8166b0.list -> intersection_c7c7e6.intersection\n        length_8166b0.length -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_1a8d9f root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -173, y: 20, name: \"list1\") property(List) list1_2e9f0a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_7b8d5c\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_e6b1dc\n\n        instance(x: 133, y: -131) intersection_3e4a9f root.Std_k98ojb.Sets.Intersection {}\n        list1_2e9f0a -> intersection_3e4a9f.left\n        list2_7b8d5c -> intersection_3e4a9f.right\n        instance(x: 360, y: -95) notempty_6e5f2f root.Std_k98ojb.List.NotEmpty {}\n        intersection_3e4a9f.intersect -> notempty_6e5f2f.list\n        notempty_6e5f2f.isEmpty -> output_e6b1dc\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_b8d7c0 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -179, y: 19, name: \"list1\") property(List) list1_9a2b6f\n        in(x: -178, y: -111, name: \"list2\") property(List) list2_8e7d3c\n\n        out(x: 584, y: -97, name: \"output\") property(Bool) output_5f1b4a\n\n        instance(x: 145, y: -99, name: \"intersection\") intersection_e6f0ad root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2b6f -> intersection_e6f0ad.left\n        list2_8e7d3c -> intersection_e6f0ad.right\n        instance(x: 444, y: -97) notempty_c4b5da root.Std_k98ojb.List.NotEmpty {}\n        intersection_e6f0ad.intersection -> notempty_c4b5da.list\n        notempty_c4b5da.isEmpty -> output_5f1b4a\n    }\n\n    \n\n    instance(x: 11, y: -67) has_common_element_7e9d2c root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -178, y: 12, name: \"list1\") property(List) list1_9e3f0a\n        in(x: -182, y: -125, name: \"list2\") property(List) list2_eb7c8d\n\n        out(x: 562, y: -105, name: \"output\") property(Bool) output_4a5f6f\n\n        instance(x: 140, y: -114) intersection_9e1f3f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f0a -> intersection_9e1f3f.left\n        list2_eb7c8d -> intersection_9e1f3f.right\n        instance(x: 420, y: -104) notempty_5e6a4f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9e1f3f.intersect -> notempty_5e6a4f.list\n        notempty_5e6a4f.isEmpty -> output_4a5f6f\n    }\n\n    \n\n    instance(x: -88, y: 60) intersection_7c0d2b root.main.intersection {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) intersection_7e1ce0 root.Std_k98ojb.Sets.Intersection {}\n        list_09fcba -> intersection_7e1ce0.left\n        list2_c62075 -> intersection_7e1ce0.right\n        intersection_7e1ce0.intersect -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) intersection_f53d27 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 19, name: \"list1\") property(List) list1_9e3f8a\n        in(x: -163, y: -120, name: \"list2\") property(List) list2_7b0d4c\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_6c5b9e\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_3a1f8c root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f8a -> intersection_3a1f8c.left\n        list2_7b0d4c -> intersection_3a1f8c.right\n        instance(x: 188, y: -50) notempty_5b6b4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_3a1f8c.intersect -> notempty_5b6b4c.list\n        notempty_5b6b4c.isEmpty -> output_6c5b9e\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_a7d2d0 root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 10, name: \"list1\") property(List) list1_3e8b5a\n        in(x: -181, y: -123, name: \"list2\") property(List) list2_9c0f7d\n\n        out(x: 782, y: -110, name: \"output\") property(Bool) output_4f1f6e\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_3e8b5a -> zip_201051.left\n        list2_9c0f7d -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) item1_4c6a9f\n            in(x: -223, y: 18, name: \"item2\") property(Number) item2_eb7d5e\n\n            out(x: 245, y: -54, name: \"result\") property(Bool) result_3e0b1f\n\n            instance(x: -8, y: -53) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            item1_4c6a9f -> equal_f89569.left\n            item2_eb7d5e -> equal_f89569.right\n            equal_f89569.result -> result_3e0b1f\n        } -> zip_201051.handler\n        instance(x: 360, y: -95) find_8c9a4c root.Std_k98ojb.Iteration.Find {}\n        zip_201051.zipped -> find_8c9a4c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_1f7d6e\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_3b0a5f\n\n            instance(x: 112, y: 80) not_75283f root.Std_k98ojb.Logic.Not {}\n            current_1f7d6e -> find_8c9a4c.predicate\n            not_75283f.result -> bool_3b0a5f\n        } -> find_8c9a4c.predicate\n        find_8c9a4c.item -> output_4f1f6e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -177, y: 10, name: \"list1\") property(List) list1_3e9f0a\n        in(x: -181, y: -12, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_6b7c5d\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 246, y: -97) contains_32727d root.Std_k98ojb.List.Contains {}\n        list1_3e9f0a -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        zip_201051.zipped -> contains_32727d.list\n        0 -> contains_32727d.item\n        contains_32727d.is_contained -> output_6b7c5d\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 438, y: 25, name: \"getter_8a3f9d\") getter_8a3f9d = previous\n        setter(x: 882, y: -312, name: \"setter_7c0b4e\") setter_7c0b4e = previous\n        instance(x: 416, y: -19) for_1e5b2e root.Std_k98ojb.Std.For {}\n        setter(x: -3, y: -121, name: \"setter_7c0b4e\") setter_9f6d3a = previous\n        instance(x: -276, y: -35) getat_1b8b2c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b2c.else -> continue_8b5e7f\n        ifexpression_7e7b2c.value -> output_eb7d1c\n        ifexpression_7e7b2c.then -> setter_7c0b4e.execute\n        list_0a8f9e -> for_1e5b2e.items\n        for_1e5b2e.item -> ifexpression_7e7b2c.gen_2\n        for_1e5b2e.index -> ifexpression_7e7b2c.gen_0\n        getter_8a3f9d.value -> ifexpression_7e7b2c.gen_1\n        for_1e5b2e.onItem -> ifexpression_7e7b2c.execute\n        for_1e5b2e.done -> continue_8b5e7f\n        for_1e5b2e.item -> setter_7c0b4e.new_value\n        list_0a8f9e -> getat_1b8b2c.list\n        0 -> getat_1b8b2c.index\n        getat_1b8b2c.itemAtIndex -> setter_9f6d3a.new_value\n        execute_5f7c4e -> setter_9f6d3a.execute\n        setter_9f6d3a.continue -> for_1e5b2e.reset\n        setter_7c0b4e.continue -> for_1e5b2e.next\n    }\n\n    \n\n    instance(x: -64, y: 60) is_consecutive_8b0b4e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_1f8a0e\n\n        out(x: 1056, y: 4, name: \"output\") property(Bool) output_7c2d9b\n\n        instance(x: 1045, y: -15) ifexpression_3f9f2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 327, y: 20, name: \"getter_ea6d8c\") getter_ea6d8c = previous\n        setter(x: 662, y: -255, name: \"setter_7e3b5f\") setter_7e3b5f = previous\n        instance(x: 321, y: -63) for_9b2f1 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -166, name: \"setter_7e3b5f\") setter_4c6a8d = previous\n        instance(x: -275, y: -79) getat_8b9c1f root.Std_k98ojb.List.GetAt {}\n        ifexpression_3f9f2.else -> continue_0c8e7f\n        ifexpression_3f9f2.value -> output_7c2d9b\n        ifexpression_3f9f2.then -> setter_7e3b5f.execute\n        list_1f8a0e -> for_9b2f1.items\n        for_9b2f1.item -> ifexpression_3f9f2.gen_2\n        for_9b2f1.index -> ifexpression_3f9f2.gen_0\n        getter_ea6d8c.value -> ifexpression_3f9f2.gen_1\n        for_9b2f1.onItem -> ifexpression_3f9f2.execute\n        for_9b2f1.done -> continue_0c8e7f\n        for_9b2f1.item -> setter_7e3b5f.new_value\n        list_1f8a0e -> getat_8b9c1f.list\n        0 -> getat_8b9c1f.index\n        getat_8b9c1f.itemAtIndex -> setter_4c6a8d.new_value\n        execute_2f3f7c -> setter_4c6a8d.execute\n        setter_4c6a8d.continue -> for_9b2f1.reset\n        setter_7e3b5f.continue -> for_9b2f1.next\n    }\n\n    \n\n    instance(x: -83, y: 61) is_consecutive_e0a6a root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 5, name: \"list\") property(List) list_9e1d8f\n\n        out(x: 1123, y: 10, name: \"output\") property(Bool) output_7b0c2a\n\n        instance(x: 104, y: -12) sort_6f5f1c root.Std_k98ojb.List.Sort {}\n        instance(x: 448, y: 9) for_8d4e9c root.Std_k98ojb.Std.For {}\n        instance(x: 1050, y: 7) sub_3a2b9f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1306, y: -1) lessthanorequal_eb5d4e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1520, y: 7) if_8c2a9f root.Std_k98ojb.Std.If {}\n        list_9e1d8f -> sort_6f5f1c.list\n        sort_6f5f1c.sortedList -> for_8d4e9c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> for_8d4e9c.handler\n        for_8d4e9c.item -> sub_3a2b9f.first\n        for_8d4e9c.index -> sub_3a2b9f.second\n        1 -> lessthanorequal_eb5d4e.right\n        sub_3a2b9f.result -> lessthanorequal_eb5d4e.left\n        lessthanorequal_eb5d4e.result -> if_8c2a9f.predicate\n        for_8d4e9c.onItem -> if_8c2a9f.execute\n        if_8c2a9f.else -> output_7b0c2a\n        true -> if_8c2a9f.then\n        for_8d4e9c.done -> output_7b0c2a\n    }\n\n    \n\n    instance(x: -55, y: 529) is_consecutive_1f3b6c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9a8f3e\n\n        out(x: 1025, y: 19, name: \"output\") property(Bool) output_7c1d6b\n\n        instance(x: 107, y: -2) sort_ba4f9c root.Std_k98ojb.List.Sort {}\n        instance(x: 408, y: 18) for_5e8b1f root.Std_k98ojb.Std.For {}\n        instance(x: 750, y: 19) sub_3d0b7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1022, y: -4) if_6a9f3f root.Std_k98ojb.Std.If {}\n        sort_ba4f9c.list -> for_5e8b1f.items\n        func() {\n            in(x: -121, y: 47, name: \"current\") property(Number) current_2d0b7f\n\n            out(x: 702, y: 49, name: \"\") property(Bool) _6a3c9e\n\n            instance(x: 91, y: 42) sub_1e5f1c root.Std_k98ojb.Math.Sub {}\n            for_5e8b1f.index -> sub_1e5f1c.first\n            1 -> sub_1e5f1c.second\n            current_2d0b7f -> sub_1e5f1c.right\n            sub_1e5f1c.result -> if_6a9f3f.predicate\n            for_5e8b1f.item -> sub_1e5f1c.left\n        } -> for_5e8b1f.handler\n        list_9a8f3e -> sort_ba4f9c.list\n        for_5e8b1f.onItem -> if_6a9f3f.execute\n        sub_3d0b7c.result -> output_7c1d6b\n        if_6a9f3f.else -> output_7c1d6b\n        1 -> sub_3d0b7c.second\n        for_5e8b1f.index -> sub_3d0b7c.first\n        for_5e8b1f.item -> sub_3d0b7c.left\n    }\n\n    \n\n    instance(x: -63, y: 119) is_consecutive_2a6f4c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 1, name: \"list\") property(List) list_9e6f3a\n\n        out(x: 1060, y: 2, name: \"output\") property(Bool) output_8b7d4c\n\n        instance(x: 107, y: -5) sort_1e3c7f root.Std_k98ojb.List.Sort {}\n        instance(x: 426, y: 11) for_9a2c8f root.Std_k98ojb.Std.For {}\n        instance(x: 728, y: 13) sub_4d0f6f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1011, y: -5) if_7e3a4c root.Std_k98ojb.Std.If {}\n        sort_1e3c7f.list -> for_9a2c8f.items\n        func() {\n            in(x: -113, y: 37, name: \"current\") property(Number) current_e6d5ad\n\n            out(x: 698, y: 47, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 32) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 38) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_e6d5ad -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> for_9a2c8f.handler\n        for_9a2c8f.item -> sub_4d0f6f.first\n        for_9a2c8f.index -> sub_4d0f6f.second\n        1 -> sub_4d0f6f.second\n        sub_4d0f6f.result -> if_7e3a4c.predicate\n        for_9a2c8f.onItem -> if_7e3a4c.execute\n        if_7e3a4c.else -> output_8b7d4c\n        true -> if_7e3a4c.then\n        list_9e6f3a -> sort_1e3c7f.list\n    }\n\n    \n\n    instance(x: -67, y: 179) is_consecutive_2f0f5f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 1, name: \"list\") property(List) list_8e9f0a\n\n        out(x: 1115, y: 3, name: \"output\") property(Bool) output_eb7c6d\n\n        instance(x: 1062, y: -12) ifexpression_4a1f9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 333, y: 20, name: \"getter_8e7d5c\") getter_8e7d5c = previous\n        setter(x: 680, y: -308, name: \"setter_9f4a6b\") setter_9f4a6b = previous\n        instance(x: 320, y: -16) for_d2c0e3 root.Std_k98ojb.Std.For {}\n        setter(x: -1, y: -120, name: \"setter_9f4a6b\") setter_8d7b9e = previous\n        instance(x: -275, y: -31) getat_e5a2c0 root.Std_k98ojb.List.GetAt {}\n        ifexpression_4a1f9.else -> continue_3c8c9c\n        ifexpression_4a1f9.value -> output_eb7c6d\n        ifexpression_4a1f9.then -> setter_9f4a6b.execute\n        list_8e9f0a -> for_d2c0e3.items\n        for_d2c0e3.item -> ifexpression_4a1f9.gen_2\n        for_d2c0e3.index -> ifexpression_4a1f9.gen_0\n        getter_8e7d5c.value -> ifexpression_4a1f9.gen_1\n        for_d2c0e3.onItem -> ifexpression_4a1f9.execute\n        for_d2c0e3.done -> continue_3c8c9c\n        for_d2c0e3.item -> setter_9f4a6b.new_value\n        list_8e9f0a -> getat_e5a2c0.list\n        0 -> getat_e5a2c0.index\n        getat_e5a2c0.itemAtIndex -> setter_8d7b9e.new_value\n        execute_3e6c1e -> setter_8d7b9e.execute\n        setter_8d7b9e.continue -> for_d2c0e3.reset\n        setter_9f4a6b.continue -> for_d2c0e3.next\n    }\n\n    \n\n    instance(x: -83, y: 54) is_consecutive_5a1c6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 4, name: \"list\") property(List) list_1a9f3e\n\n        out(x: 1066, y: 13, name: \"output\") property(Bool) output_7c8d5b\n\n        instance(x: 1050, y: -2) ifexpression_c9b7c4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 331, y: 28, name: \"getter_3e6f5d\") getter_3e6f5d = previous\n        setter(x: 674, y: -240, name: \"setter_9b7a4c\") setter_9b7a4c = previous\n        instance(x: 321, y: -18) for_d1b2da root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -119, name: \"setter_9b7a4c\") setter_3f8e6d = previous\n        instance(x: -275, y: -35) getat_c5a1aa root.Std_k98ojb.List.GetAt {}\n        ifexpression_c9b7c4.else -> continue_a96db6\n        ifexpression_c9b7c4.value -> output_7c8d5b\n        ifexpression_c9b7c4.then -> setter_9b7a4c.execute\n        list_1a9f3e -> for_d1b2da.items\n        for_d1b2da.item -> ifexpression_c9b7c4.gen_2\n        for_d1b2da.index -> ifexpression_c9b7c4.gen_0\n        getter_3e6f5d.value -> ifexpression_c9b7c4.gen_1\n        for_d1b2da.onItem -> ifexpression_c9b7c4.execute\n        for_d1b2da.done -> continue_a96db6\n        for_d1b2da.item -> setter_9b7a4c.new_value\n        list_1a9f3e -> getat_c5a1aa.list\n        0 -> getat_c5a1aa.index\n        getat_c5a1aa.itemAtIndex -> setter_3f8e6d.new_value\n        execute_90aaec -> setter_3f8e6d.execute\n        setter_3f8e6d.continue -> for_d1b2da.reset\n        setter_9b7a4c.continue -> for_d1b2da.next\n    }\n\n    \n\n    instance(x: -83, y: 59) is_consecutive_f5e0d root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 3, name: \"list\") property(List) list_1a9d8f\n\n        out(x: 1050, y: 2, name: \"output\") property(Bool) output_7e6b7c\n\n        instance(x: 0, y: -11) sort_4b5b3c root.Std_k98ojb.List.Sort {}\n        instance(x: 330, y: 1) for_9a8f1d root.Std_k98ojb.Std.For {}\n        instance(x: 660, y: 2) if_e7e0cd root.Std_k98ojb.Std.If {}\n        instance(x: 890, y: -10) sub_3c5f6f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1119, y: 1) lessthanorequal_8a2d4e root.Std_k98ojb.Math.LessThanOrEqual {}\n        sort_4b5b3c.list -> for_9a8f1d.items\n        func() {\n            in(x: -121, y: 40, name: \"current\") property(Number) current_6c2e0f\n\n            out(x: 706, y: 49, name: \"bool\") property(Bool) bool_4b7a8f\n\n            instance(x: 106, y: 46) sub_e9d3ed root.Std_k98ojb.Math.Sub {}\n            instance(x: 333, y: 50) lessthanorequal_b2e1c6 root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_9a8f1d.index -> sub_e9d3ed.first\n            current_6c2e0f -> sub_e9d3ed.second\n            sub_e9d3ed.result -> lessthanorequal_b2e1c6.left\n            1 -> lessthanorequal_b2e1c6.right\n            lessthanorequal_b2e1c6.result -> bool_4b7a8f\n        } -> for_9a8f1d.handler\n        for_9a8f1d.onItem -> if_e7e0cd.execute\n        for_9a8f1d.done -> output_7e6b7c\n        func() {\n            in(x: -121, y: 40, name: \"current\") property(Number) current_6c2e0f\n\n            out(x: 706, y: 49, name: \"bool\") property(Bool) bool_4b7a8f\n\n            instance(x: 106, y: 46) sub_e9d3ed root.Std_k98ojb.Math.Sub {}\n            instance(x: 333, y: 50) lessthanorequal_b2e1c6 root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_9a8f1d.index -> sub_e9d3ed.first\n            current_6c2e0f -> sub_e9d3ed.second\n            sub_e9d3ed.result -> lessthanorequal_b2e1c6.left\n            1 -> lessthanorequal_b2e1c6.right\n            lessthanorequal_b2e1c6.result -> bool_4b7a8f\n        } -> if_e7e0cd.predicate\n        for_9a8f1d.item -> sub_3c5f6f.first\n        for_9a8f1d.index -> sub_3c5f6f.second\n        sub_3c5f6f.result -> lessthanorequal_8a2d4e.left\n        0 -> lessthanorequal_8a2d4e.right\n        lessthanorequal_8a2d4e.result -> if_e7e0cd.then\n        list_1a9d8f -> sort_4b5b3c.list\n    }\n\n    \n\n    instance(x: -83, y: 179) is_consecutive_6f7b4f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 5, name: \"list\") property(List) list_3a9d6f\n\n        out(x: 1000, y: 1, name: \"output\") property(Bool) output_7c2e8b\n\n        instance(x: 0, y: -12) sort_4a5f8c root.Std_k98ojb.List.Sort {}\n        instance(x: 0, y: 93) for_9e3d1c root.Std_k98ojb.Std.For {}\n        instance(x: 357, y: 92) sub_6e7b1f root.Std_k98ojb.Math.Sub {}\n        instance(x: 649, y: -2) if_5a4a8c root.Std_k98ojb.Std.If {}\n        sort_4a5f8c.list -> for_9e3d1c.items\n        func() {\n            in(x: -112, y: 41, name: \"current\") property(Number) current_e2b6aa\n\n            out(x: 513, y: 32, name: \"bool\") property(Bool) bool_5f0a7e\n\n            instance(x: 89, y: 27) modulo_1d9c3f root.Std_k98ojb.Math.Modulo {}\n            instance(x: 314, y: 34) equal_8a4d9f root.Std_k98ojb.Logic.Equal {}\n            current_e2b6aa -> modulo_1d9c3f.value\n            2 -> modulo_1d9c3f.divisor\n            modulo_1d9c3f.result -> equal_8a4d9f.left\n            0 -> equal_8a4d9f.right\n            equal_8a4d9f.result -> bool_5f0a7e\n        } -> for_9e3d1c.handler\n        for_9e3d1c.onItem -> if_5a4a8c.execute\n        for_9e3d1c.index -> sub_6e7b1f.first\n        1 -> sub_6e7b1f.second\n        sort_4a5f8c.list -> sub_6e7b1f.left\n        list_3a9d6f -> sort_4a5f8c.list\n        for_9e3d1c.item -> sub_6e7b1f.right\n        sub_6e7b1f.result -> if_5a4a8c.predicate\n        0 -> if_5a4a8c.else\n        true -> if_5a4a8c.then\n        for_9e3d1c.done -> output_7c2e8b\n        if_5a4a8c.value -> output_7c2e8b\n    }\n\n    \n\n    instance(x: -55, y: 229) is_consecutive_6f0d8f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -277, y: 2, name: \"list\") property(List) list_9a8f0e\n\n        out(x: 1056, y: 11, name: \"output\") property(Bool) output_eb1d7c\n\n        instance(x: 106, y: 26) sort_5f3c4c root.Std_k98ojb.List.Sort {}\n        instance(x: 430, y: -12) for_9e8a2c root.Std_k98ojb.Std.For {}\n        instance(x: 780, y: 23) lessthanorequal_1d0a6f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1034, y: -10) if_9e8a2c root.Std_k98ojb.Std.If {}\n        sort_5f3c4c.list -> for_9e8a2c.items\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_1d7c0c\n\n            out(x: 705, y: -10, name: \"bool\") property(Bool) bool_3f6b8e\n\n            instance(x: 226, y: -12) add_5a9c2f root.Std_k98ojb.Math.Add {}\n            current_1d7c0c -> add_5a9c2f.first\n            1 -> add_5a9c2f.second\n            for_9e8a2c.index -> lessthanorequal_1d0a6f.left\n            add_5a9c2f.result -> lessthanorequal_1d0a6f.right\n            lessthanorequal_1d0a6f.result -> bool_3f6b8e\n        } -> if_9e8a2c.predicate\n        for_9e8a2c.onItem -> if_9e8a2c.execute\n        list_9a8f0e -> sort_5f3c4c.list\n        if_9e8a2c.value -> output_eb1d7c\n        for_9e8a2c.done -> if_9e8a2c.else\n    }\n\n    \n\n    instance(x: -67, y: 59) is_consecutive_3f6b5f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"sublist\") property(List) sublist_3f9a8e\n        in(x: -285, y: -160, name: \"list\") property(List) list_1c7b4d\n\n        out(x: 1265, y: -95, name: \"output\") property(Bool) output_2e0c1e\n\n        instance(x: -85, y: -96, name: \"find sublist in list\") find_3a9f8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_1e7d6\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2c9a0\n\n            instance(x: 112, y: 80) contains_3b5f4 root.Std_k98ojb.List.Contains {}\n            current_1e7d6 -> contains_3b5f4.list\n            sublist_3f9a8e -> contains_3b5f4.item\n            contains_3b5f4.is_contained -> bool_2c9a0\n        } -> find_3a9f8c.predicate\n        list_1c7b4d -> find_3a9f8c.items\n        find_3a9f8c.item -> output_2e0c1e\n    }\n\n    \n\n    instance(x: -83, y: 59) is_sublist_f5a6c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 15, name: \"sublist\") property(List) sublist_1f8a0e\n        in(x: -292, y: -166, name: \"list\") property(List) list_3c9d5b\n\n        out(x: 1067, y: -105, name: \"output\") property(Bool) output_6a2f7f\n\n        instance(x: -82, y: -165) length_1e0a8c root.Std_k98ojb.List.Length {}\n        instance(x: 202, y: -106) greaterthan_b9d5cd root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 202, y: -37) lessthan_7f3a2e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 426, y: -105) for_1c0d9f root.Std_k98ojb.Std.For {}\n        greaterthan_b9d5cd.result -> output_6a2f7f\n        sublist_1f8a0e -> length_1e0a8c.list\n        list_3c9d5b -> length_1e0a8c.list\n        length_1e0a8c.length -> greaterthan_b9d5cd.left\n        length_1e0a8c.length -> lessthan_7f3a2e.right\n        sublist_1f8a0e -> for_1c0d9f.items\n        list_3c9d5b -> for_1c0d9f.items\n        func() {\n            in(x: -231, y: 12, name: \"sublist\") property(List) sublist_7a4d8e\n            in(x: -223, y: -122, name: \"list\") property(List) list_3b2c6f\n\n            out(x: 245, y: -105, name: \"output\") property(Bool) output_5a9b1e\n\n            instance(x: 133, y: -131) zip_7d0a4e root.Std_k98ojb.Iteration.Zip {}\n            sublist_7a4d8e -> zip_7d0a4e.left\n            list_3b2c6f -> zip_7d0a4e.right\n            func() {\n                in(x: -231, y: -69, name: \"item1\") property(Any) item1_5a9b1e\n                in(x: -223, y: 18, name: \"item2\") property(Any) item2_7d0a4e\n\n                out(x: 245, y: -54, name: \"result\") property(Bool) result_3b2c6f\n\n                instance(x: -8, y: -53) equal_1e0a8c root.Std_k98ojb.Logic.Equal {}\n                item1_5a9b1e -> equal_1e0a8c.left\n                item2_7d0a4e -> equal_1e0a8c.right\n                equal_1e0a8c.result -> result_3b2c6f\n            } -> zip_7d0a4e.handler\n            zip_7d0a4e.zipped -> output_5a9b1e\n        } -> for_1c0d9f.handler\n        lessthan_7f3a2e.result -> for_1c0d9f.count\n        0 -> for_1c0d9f.index\n        sublist_1f8a0e -> for_1c0d9f.start\n    }\n\n    \n\n    instance(x: -82, y: -165) is_sublist_a5b2e6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 0, name: \"sublist\") property(List) sublist_1f9d8a\n        in(x: -297, y: 145, name: \"list\") property(List) list_3b7e5c\n\n        out(x: 1042, y: 74, name: \"output\") property(Bool) output_6e0b4f\n\n        instance(x: 105, y: -11, name: \"find sublist in list\") find_1d8a1c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -191, y: 54, name: \"current\") property(List) current_7e9f0f\n\n            out(x: 701, y: 55, name: \"\") property(Bool) _6a1d3c\n\n            instance(x: 110, y: 50) contains_4b8c5c root.Std_k98ojb.List.Contains {}\n            sublist_1f9d8a -> contains_4b8c5c.list\n            current_7e9f0f -> contains_4b8c5c.item\n            contains_4b8c5c.is_contained -> _6a1d3c\n        } -> find_1d8a1c.predicate\n        list_3b7e5c -> find_1d8a1c.items\n        find_1d8a1c.item -> output_6e0b4f\n    }\n\n    \n\n    instance(x: -291, y: 75) is_sublist_f9e9b2 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 5, name: \"sublist\") property(List) sublist_3f8a1e\n        in(x: -283, y: -155, name: \"list\") property(List) list_7c9d6b\n\n        out(x: 1060, y: -120, name: \"output\") property(Bool) output_e5b4ba\n\n        instance(x: -3, y: -125, name: \"sublist length\") length_8e1a2f root.Std_k98ojb.List.Length {}\n        instance(x: 246, y: -122) contains_7d9c6c root.Std_k98ojb.List.Contains {}\n        instance(x: 539, y: -123) greaterthan_c4f3e5 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 732, y: -124) sub_8a1c2c root.Std_k98ojb.Math.Sub {}\n        instance(x: 924, y: -125) slice_9d7b1c root.Std_k98ojb.List.Slice {}\n        instance(x: 1116, y: -126) contains_3f5e9f root.Std_k98ojb.List.Contains {}\n        sublist_3f8a1e -> length_8e1a2f.list\n        list_7c9d6b -> slice_9d7b1c.list\n        0 -> slice_9d7b1c.start\n        greaterthan_c4f3e5.result -> sub_8a1c2c.first\n        length_8e1a2f.length -> greaterthan_c4f3e5.left\n        sublist_3f8a1e -> contains_7d9c6c.list\n        list_7c9d6b -> contains_7d9c6c.item\n        sub_8a1c2c.result -> slice_9d7b1c.end\n        sublist_3f8a1e -> contains_3f5e9f.list\n        slice_9d7b1c.slice -> contains_3f5e9f.item\n        contains_3f5e9f.is_contained -> output_e5b4ba\n    }\n\n    \n\n    instance(x: 111, y: -6) is_sublist_8a0d2c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_1f9a0e\n        in(x: -280, y: -169, name: \"list\") property(List) list_7c6b3d\n\n        out(x: 1045, y: -145, name: \"output\") property(Bool) output_e2f8ec\n\n        instance(x: -90, y: -165, name: \"sublist length\") length_9a0e4f root.Std_k98ojb.List.Length {}\n        instance(x: 224, y: -152) contains_1d3c5f root.Std_k98ojb.List.Contains {}\n        sublist_1f9a0e -> length_9a0e4f.list\n        list_7c6b3d -> contains_1d3c5f.list\n        func() {\n            in(x: -192, y: 19, name: \"current\") property(List) current_8e2c8\n\n            out(x: 704, y: 20, name: \"\") property(Bool) _7dd980\n\n            instance(x: 74, y: 24) slice_c1f3a9 root.Std_k98ojb.List.Slice {}\n            instance(x: 375, y: 21) equal_8c2e5d root.Std_k98ojb.Logic.Equal {}\n            current_8e2c8 -> slice_c1f3a9.list\n            length_9a0e4f.length -> slice_c1f3a9.end\n            0 -> slice_c1f3a9.start\n            slice_c1f3a9.slice -> equal_8c2e5d.left\n            sublist_1f9a0e -> equal_8c2e5d.right\n            equal_8c2e5d.result -> _7dd980\n        } -> contains_1d3c5f.handler\n        contains_1d3c5f.is_contained -> output_e2f8ec\n    }\n\n    \n\n    instance(x: -92, y: 59) is_sublist_9a0e4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 10, name: \"sublist\") property(List) sublist_2f1a8e\n        in(x: -303, y: -166, name: \"list\") property(List) list_3c7b9d\n\n        out(x: 1015, y: -91, name: \"output\") property(Bool) output_e0a6ea\n\n        instance(x: -93, y: -92) contains_2e8f0c root.Std_k98ojb.List.Contains {}\n        list_3c7b9d -> contains_2e8f0c.list\n        sublist_2f1a8e -> contains_2e8f0c.item\n        contains_2e8f0c.is_contained -> output_e0a6ea\n    }\n\n    \n\n    instance(x: -291, y: 29) is_sublist_9d7b4f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_1a0f2e\n        in(x: -294, y: -145, name: \"list\") property(List) list_5c7d8b\n\n        out(x: 1069, y: -122, name: \"output\") property(Bool) output_e6c4ee\n\n        instance(x: -91, y: -147, name: \"find sublist in list\") find_f0e3a1 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 15, name: \"current\") property(List) current_9c7f2d\n\n            out(x: 704, y: 26, name: \"\") property(Bool) _0e6a8a1\n\n            instance(x: 226, y: 23) contains_5b3c7f root.Std_k98ojb.List.Contains {}\n            sublist_1a0f2e -> contains_5b3c7f.list\n            current_9c7f2d -> contains_5b3c7f.item\n            contains_5b3c7f.is_contained -> _0e6a8a1\n        } -> find_f0e3a1.predicate\n        list_5c7d8b -> find_f0e3a1.items\n        find_f0e3a1.item -> output_e6c4ee\n    }\n\n    \n\n    instance(x: -83, y: 49) is_sublist_2f1c8e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 15, name: \"sublist\") property(List) sublist_1f8d9a\n        in(x: -297, y: -166, name: \"list\") property(List) list_7e6c4b\n\n        out(x: 1050, y: -147, name: \"output\") property(Bool) output_3f5a8c\n\n        instance(x: -93, y: -146) contains_9d1f9 root.Std_k98ojb.List.Contains {}\n        list_7e6c4b -> contains_9d1f9.list\n        sublist_1f8d9a -> contains_9d1f9.item\n        contains_9d1f9.is_contained -> output_3f5a8c\n    }\n\n    \n\n    instance(x: -83, y: 11) is_sublist_2e6b7 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 15, name: \"sublist\") property(List) sublist_2a0d9f\n        in(x: -279, y: -150, name: \"list\") property(List) list_1b3e8c\n\n        out(x: 1007, y: -120, name: \"output\") property(Bool) output_5a4f6f\n\n        instance(x: -78, y: -149, name: \"sublist length\") length_9e0d2 root.Std_k98ojb.List.Length {}\n        instance(x: 210, y: -119) contains_1c8f7f root.Std_k98ojb.List.Contains {}\n        instance(x: 410, y: -120) greaterthan_5a4d3f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 616, y: -121) not_9e6c0f root.Std_k98ojb.Logic.Not {}\n        sublist_2a0d9f -> length_9e0d2.list\n        list_1b3e8c -> contains_1c8f7f.list\n        greaterthan_5a4d3f.result -> not_9e6c0f.input\n        length_9e0d2.length -> greaterthan_5a4d3f.left\n        list_1b3e8c -> length_9e0d2.list\n        sublist_2a0d9f -> contains_1c8f7f.item\n        not_9e6c0f.result -> output_5a4f6f\n        contains_1c8f7f.is_contained -> greaterthan_5a4d3f.right\n    }\n\n    \n\n    instance(x: -71, y: 35) is_sublist_ae2b0c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 30, name: \"sublist\") property(List) sublist_0f9a1e\n        in(x: -285, y: -150, name: \"list\") property(List) list_5b8d6c\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sublist_0f9a1e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_5b8d6c -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        sublist_0f9a1e -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_a5d3c8 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1226, y: 29, name: \"continue\") trigger() continue_e2c4ee\n        out(x: 1213, y: 148, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: -5, y: -120) for_9b7d8f root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_4c6c3d\") getter_4c6c3d = index\n        setter(x: 780, y: -125, name: \"setter_e9a7e1\") setter_e9a7e1 = index\n        instance(x: 465, y: 5) ifexpression_8f0b9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_9b7d8f.items\n        execute_5c7d8b -> setter_e9a7e1.execute\n        0 -> setter_e9a7e1.new_value\n        getter_4c6c3d.value -> output_1e0a1f\n        for_9b7d8f.done -> continue_e2c4ee\n        setter_e9a7e1.continue -> for_9b7d8f.reset\n        for_9b7d8f.onItem -> ifexpression_8f0b9f.execute\n        for_9b7d8f.index -> ifexpression_8f0b9f.gen_0\n        for_9b7d8f.item -> ifexpression_8f0b9f.gen_1\n        ifexpression_8f0b9f.then -> setter_e9a7e1.execute\n        for_9b7d8f.index -> setter_e9a7e1.new_value\n        ifexpression_8f0b9f.else -> continue_e2c4ee\n    }\n\n    \n\n    instance(x: -207, y: 3) find_missing_5c6f4f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 1, name: \"list\") property(List) list_9e3f6a\n        in(x: -292, y: -223, name: \"execute\") trigger() execute_5b8d4c\n\n        out(x: 1020, y: -224, name: \"continue\") trigger() continue_7f1b2e\n        out(x: 1013, y: 63, name: \"output\") property(Number) output_6a7c1e\n\n        instance(x: 0, y: 0) for_5d8a4c root.Std_k98ojb.Std.For {}\n        getter(x: -144, y: 110, name: \"getter_e9f3af\") getter_e9f3af = index\n        setter(x: 115, y: -269, name: \"setter_1e2d5a\") setter_1e2d5a = index\n        instance(x: 309, y: 35) add_7b8c0c root.Std_k98ojb.Math.Add {}\n        instance(x: 310, y: -36) ifexpression_6f3c4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        setter(x: 118, y: -56, name: \"setter_2a9e5d\") setter_2a9e5d = index\n        instance(x: 89, y: 29) if_3b8c7f root.Std_k98ojb.Std.If {}\n        list_",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_3e8b9f\n        in(x: -316, y: -241, name: \"execute\") trigger() execute_ea7d4c\n\n        out(x: 1040, y: -242, name: \"continue\") trigger() continue_5c1b6f\n        out(x: 1032, y: 57, name: \"output\") property(Number) output_3e8b9f\n\n        instance(x: 0, y: 0) for_4d9a9d root.Std_k98ojb.Std.For {}\n        getter(x: -1, y: 116, name: \"getter_7c6c5e\") getter_7c6c5e = index\n        setter(x: 648, y: -244, name: \"setter_8a9d3f\") setter_8a9d3f = index\n        instance(x: 428, y: -1) ifexpression_4b2c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_3e8b9f -> for_4d9a9d.items\n        execute_ea7d4c -> setter_8a9d3f.execute\n        1 -> setter_8a9d3f.new_value\n        getter_7c6c5e.value -> output_3e8b9f\n        for_4d9a9d.done -> continue_5c1b6f\n        setter_8a9d3f.continue -> for_4d9a9d.reset\n        for_4d9a9d.onItem -> ifexpression_4b2c0f.execute\n        for_4d9a9d.index -> ifexpression_4b2c0f.gen_1\n        ifexpression_4b2c0f.then -> continue_5c1b6f\n        ifexpression_4b2c0f.else -> setter_8a9d3f.execute\n        for_4d9a9d.item -> ifexpression_4b2c0f.gen_0\n    }\n\n    \n\n    instance(x: -65, y: 71) find_missing_1e7c6f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_1a3f8e\n        in(x: -293, y: -225, name: \"execute\") trigger() execute_9b2c5d\n\n        out(x: 1016, y: -223, name: \"continue\") trigger() continue_4a0b3e\n        out(x: 1021, y: 47, name: \"output\") property(Number) output_8f7c3f\n\n        instance(x: 0, y: 0) for_9d6e2f root.Std_k98ojb.Std.For {}\n        getter(x: -133, y: 64, name: \"getter_1a5c4e\") getter_1a5c4e = index\n        setter(x: 755, y: -154, name: \"setter_e8d3f7\") setter_e8d3f7 = index\n        instance(x: 0, y: 0) ifexpression_6b2c7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != current\"\n        }\n        list_1a3f8e -> for_9d6e2f.items\n        execute_9b2c5d -> setter_e8d3f7.execute\n        0 -> setter_e8d3f7.new_value\n        getter_1a5c4e.value -> output_8f7c3f\n        ifexpression_6b2c7e.then -> continue_4a0b3e\n        for_9d6e2f.onItem -> ifexpression_6b2c7e.execute\n        for_9d6e2f.index -> ifexpression_6b2c7e.gen_0\n        for_9d6e2f.item -> ifexpression_6b2c7e.gen_1\n        setter_e8d3f7.continue -> continue_4a0b3e\n        ifexpression_6b2c7e.else -> setter_e8d3f7.execute\n        for_9d6e2f.index -> setter_e8d3f7.new_value\n        for_9d6e2f.done -> continue_4a0b3e\n    }\n\n    \n\n    instance(x: 13, y: -53) find_missing_5c1c8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 2, name: \"list\") property(List) list_9f8b3e\n        in(x: -286, y: -239, name: \"execute\") trigger() execute_1c7a0d\n\n        out(x: 513, y: 2, name: \"continue\") trigger() continue_5f6a9e\n        out(x: 515, y: -234, name: \"output\") property(Number) output_eb3b7e\n\n        instance(x: 0, y: 0) for_1d4c8e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_9f6a2f\") getter_9f6a2f = index\n        setter(x: -0, y: -0, name: \"setter_7d5c1e\") setter_7d5c1e = index\n        instance(x: 339, y: 57) ifexpression_3b4c8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        getter(x: 0, y: 0, name: \"getter_ea7f2d\") getter_ea7f2d = index\n        instance(x: -0, y: -0) add_1e5c9b root.Std_k98ojb.Math.Add {}\n        list_9f8b3e -> for_1d4c8e.items\n        execute_1c7a0d -> setter_7d5c1e.execute\n        0 -> setter_7d5c1e.new_value\n        getter_ea7f2d.value -> output_eb3b7e\n        for_1d4c8e.done -> continue_5f6a9e\n        setter_7d5c1e.continue -> for_1d4c8e.reset\n        for_1d4c8e.onItem -> ifexpression_3b4c8e.execute\n        getter_9f6a2f.value -> ifexpression_3b4c8e.gen_0\n        for_1d4c8e.item -> ifexpression_3b4c8e.gen_1\n        ifexpression_3b4c8e.then -> add_1e5c9b.execute\n        getter_ea7f2d.value -> add_1e5c9b.first\n        1 -> add_1e5c9b.second\n        add_1e5c9b.result -> setter_7d5c1e.new_value\n        ifexpression_3b4c8e.else -> for_1d4c8e.next\n        add_1e5c9b.continue -> for_1d4c8e.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_f7f6a2 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 1, name: \"list\") property(List) list_2e9f8d\n        in(x: -274, y: -225, name: \"execute\") trigger() execute_ea7c6b\n\n        out(x: 1015, y: -231, name: \"continue\") trigger() continue_3a1b4e\n        out(x: 1008, y: 160, name: \"output\") property(Number) output_9d2f8f\n\n        instance(x: 0, y: 0) for_5c7b7c root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_3e1a6d\") getter_3e1a6d = index\n        setter(x: -0, y: -0, name: \"setter_9f4c8c\") setter_9f4c8c = index\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 679, y: -313) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        setter(x: 679, y: -313) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 679, y: -313) math_add_node root.Std_k98ojb.Math.Add {}\n        list_2e9f8d -> for_5c7b7c.items\n        execute_ea7c6b -> setter_9f4c8c.execute\n        0 -> setter_9f4c8c.new_value\n        getter_3e1a6d.value -> output_9d2f8f\n        for_5c7b7c.done -> continue_3a1b4e\n        setter_9f4c8c.continue -> for_5c7b7c.reset\n        for_5c7b7c.onItem -> ifexpression_875761.execute\n        for_5c7b7c.index -> ifexpression_875761.gen_0\n        getter_3e1a6d.value -> ifexpression_875761.gen_1\n        list_2e9f8d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9f4c8c.new_value\n        for_5c7b7c.item -> ifexpression_875761.gen_2\n        ifexpression_875761.then -> math_add_node.execute\n        getter_3e1a6d.value -> math_add_node.first\n        1 -> math_add_node.second\n        math_add_node.result -> setter_9f4c8c.new_value\n        ifexpression_875761.else -> for_5c7b7c.next\n        ifexpression_875761.then -> if_7c284f.execute\n        ifexpression_875761.value -> if_7c284f.predicate\n        if_7c284f.then -> setter_9f4c8c.execute\n        math_add_node.result -> getter_3e1a6d.new_value\n        if_7c284f.else -> for_5c7b7c.next\n        setter_9f4c8c.continue -> continue_3a1b4e\n    }\n\n    \n\n    instance(x: -27, y: 160) find_missing_2a6d0e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 2, name: \"list\") property(List) list_9f6b1e\n        in(x: -302, y: -228, name: \"execute\") trigger() execute_ea7d8c\n\n        out(x: 1060, y: -230, name: \"continue\") trigger() continue_3f5e4e\n        out(x: 1051, y: 147, name: \"output\") property(Number) output_6b2b5f\n\n        instance(x: 0, y: 0) for_7c8a9d root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_e4e3ec\") getter_e4e3ec = index\n        setter(x: -0, y: -0, name: \"setter_1f2c6a\") setter_1f2c6a = index\n        instance(x: 0, y: 0) ifexpression_a9b8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_6c7a4f\") getter_6c7a4f = previous\n        setter(x: -0, y: -0, name: \"setter_e9b8d5\") setter_e9b8d5 = previous\n        instance(x: 0, y: 0) getat_1e2b3c root.Std_k98ojb.List.GetAt {}\n        list_9f6b1e -> for_7c8a9d.items\n        execute_ea7d8c -> setter_1f2c6a.execute\n        -1 -> setter_1f2c6a.new_value\n        getter_e4e3ec.value -> output_6b2b5f\n        for_7c8a9d.done -> continue_3f5e4e\n        setter_1f2c6a.continue -> for_7c8a9d.reset\n        for_7c8a9d.onItem -> ifexpression_a9b8d5.execute\n        list_9f6b1e -> getat_1e2b3c.list\n        0 -> getat_1e2b3c.index\n        getat_1e2b3c.itemAtIndex -> setter_e9b8d5.new_value\n        for_7c8a9d.item -> ifexpression_a9b8d5.gen_2\n        for_7c8a9d.index -> ifexpression_a9b8d5.gen_0\n        getter_6c7a4f.value -> ifexpression_a9b8d5.gen_1\n        ifexpression_a9b8d5.then -> setter_e9b8d5.execute\n        for_7c8a9d.index -> setter_e9b8d5.new_value\n        ifexpression_a9b8d5.else -> continue_3f5e4e\n        setter_e9b8d5.continue -> for_7c8a9d.next\n    }\n\n    \n\n    instance(x: -34, y: 127) find_missing_6e6bfd root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 1, name: \"list\") property(List) list_9e3b8f\n        in(x: -320, y: -223, name: \"execute\") trigger() execute_7a2c5d\n\n        out(x: 1116, y: -225, name: \"continue\") trigger() continue_1a0c9f\n        out(x: 1123, y: 65, name: \"output\") property(Number) output_8e9b4e\n\n        instance(x: 0, y: 0) for_7d6c2e root.Std_k98ojb.Std.For {}\n        getter(x: -150, y: 66, name: \"getter_1f3a5f\") getter_1f3a5f = index\n        setter(x: 680, y: -158, name: \"setter_8c7e4d\") setter_8c7e4d = index\n        instance(x: 450, y: -20) ifexpression_e9b6ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 333, y: 160, name: \"getter_7e8c2f\") getter_7e8c2f = previous\n        setter(x: 679, y: -313, name: \"setter_5a9b4d\") setter_5a9b4d = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        ifexpression_e9b6ed.else -> continue_1a0c9f\n        ifexpression_e9b6ed.then -> setter_5a9b4d.execute\n        list_9e3b8f -> for_d26972.items\n        for_d26972.item -> ifexpression_e9b6ed.gen_2\n        for_d26972.index -> ifexpression_e9b6ed.gen_0\n        getter_7e8c2f.value -> ifexpression_e9b6ed.gen_1\n        for_d26972.onItem -> ifexpression_e9b6ed.execute\n        for_d26972.done -> continue_1a0c9f\n        for_d26972.item -> setter_5a9b4d.new_value\n        list_9e3b8f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_8c7e4d.new_value\n        execute_7a2c5d -> setter_8c7e4d.execute\n        getter_1f3a5f.value -> output_8e9b4e\n        for_d26972.index -> getter_1f3a5f.value\n        ifexpression_e9b6ed.value -> output_8e9b4e\n        setter_8c7e4d.continue -> for_7d6c2e.reset\n        for_d26972.onItem -> for_7d6c2e.trigger\n        setter_5a9b4d.continue -> for_7d6c2e.next\n    }\n\n    \n\n    instance(x: -12, y: 123) find_missing_8f1c3f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 1, name: \"list\") property(List) list_5f3e8a\n        in(x: -306, y: -240, name: \"execute\") trigger() execute_9c2d7b\n\n        out(x: 1016, y: -244, name: \"continue\") trigger() continue_1f0f4e\n        out(x: 1008, y: 20, name: \"output\") property(Number) output_3a5c5e\n\n        instance(x: 0, y: 0) for_7b9d6e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_1f8b9e\") getter_1f8b9e = index\n        setter(x: -0, y: -0, name: \"setter_7a3d6c\") setter_7a3d6c = index\n        instance(x: 341, y: -21) ifexpression_2b4f2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == current\"\n        }\n        getter(x: 0, y: 0, name: \"getter_1f8b9e\") getter_a3d7a6 = index\n        instance(x: 679, y: -11) if_5c2f4f root.Std_k98ojb.Std.If {}\n        setter(x: 1021, y: -240, name: \"setter_7a3d6c\") setter_8e9f7f = index\n        list_5f3e8a -> for_7b9d6e.items\n        execute_9c2d7b -> setter_7a3d6c.execute\n        0 -> setter_7a3d6c.new_value\n        getter_a3d7a6.value -> ifexpression_2b4f2c.gen_0\n        for_7b9d6e.item -> ifexpression_2b4f2c.gen_1\n        for_7b9d6e.onItem -> ifexpression_2b4f2c.execute\n        ifexpression_2b4f2c.then -> for_7b9d6e.next\n        ifexpression_2b4f2c.else -> if_5c2f4f.execute\n        getter_1f8b9e.value -> output_3a5c5e\n        1 -> setter_8e9f7f.new_value\n        for_7b9d6e.index -> setter_8e9f7f.new_value\n        if_5c2f4f.predicate -> true\n        if_5c2f4f.then -> setter_8e9f7f.execute\n        for_7b9d6e.done -> continue_1f0f4e\n        setter_7a3d6c.continue -> for_7b9d6e.reset\n        setter_8e9f7f.continue -> continue_1f0f4e\n    }\n\n    \n\n    instance(x: -10, y: 11) find_missing_2e5d7f root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1a3b9e\n        in(x: -282, y: -246, name: \"execute\") trigger() execute_7c2f6d\n\n        out(x: 595, y: 0, name: \"continue\") trigger() continue_8a5f8f\n        out(x: 594, y: 150, name: \"output\") property(Number) output_eb1e9f\n\n        instance(x: -0, y: -120, name: \"previous\") setter_3c2d6f = previous\n        instance(x: 321, y: -20, name: \"loop\") for_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        list_1a3b9e -> for_d26972.items\n        execute_7c2f6d -> setter_3c2d6f.execute\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        0 -> setter_3c2d6f.new_value\n        for_d26972.onItem -> ifexpression_875761.execute\n        ifexpression_875761.value -> output_eb1e9f\n        ifexpression_875761.else -> continue_8a5f8f\n        for_d26972.done -> continue_8a5f8f\n        setter_3c2d6f.continue -> for_d26972.reset\n        for_d26972.item -> setter_9d4f1c.new_value\n        ifexpression_875761.then -> output_eb1e9f\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -33, y: 128) find_missing_8a2f7f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -228, y: 1, name: \"input\") property(String) input_9e3f8a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7b4c5d\n\n        instance(x: 0, y: 0) replace_6e8f0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -1) replace_3a9c8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -2) replace_7d5f4f root.Std_k98ojb.Strings.Replace {}\n        input_9e3f8a -> replace_6e8f0f.input\n        \" \" -> replace_6e8f0f.search\n        \":\" -> replace_6e8f0f.replace\n        replace_6e8f0f.output -> replace_3a9c8e.input\n        \",\" -> replace_3a9c8e.search\n        \":\" -> replace_3a9c8e.replace\n        replace_3a9c8e.output -> replace_7d5f4f.input\n        \".\" -> replace_7d5f4f.search\n        \":\" -> replace_7d5f4f.replace\n        replace_7d5f4f.output -> output_7b4c5d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9e8a6f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1a9b8f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_5c3d6e\n\n        instance(x: 94, y: -105) replace_7f4f0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) replace_9a1b2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 9) replace_5d3e8f root.Std_k98ojb.Strings.Replace {}\n        input_1a9b8f -> replace_7f4f0e.input\n        \" \" -> replace_7f4f0e.search\n        \":\" -> replace_7f4f0e.replace\n        replace_7f4f0e.output -> replace_9a1b2c.input\n        \",\" -> replace_9a1b2c.search\n        \":\" -> replace_9a1b2c.replace\n        replace_9a1b2c.output -> replace_5d3e8f.input\n        \".\" -> replace_5d3e8f.search\n        \":\" -> replace_5d3e8f.replace\n        replace_5d3e8f.output -> output_5c3d6e\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_7b2a9f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1a9f2e\n\n        out(x: 500, y: -4, name: \"output\") property(String) output_7c3d5b\n\n        instance(x: 0, y: 0) replace_8c6c1e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_2a9f2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d3d5b7 root.Std_k98ojb.Strings.Replace {}\n        input_1a9f2e -> replace_8c6c1e.input\n        \" \" -> replace_8c6c1e.search\n        \":\" -> replace_8c6c1e.replace\n        replace_8c6c1e.output -> replace_2a9f2e.input\n        \",\" -> replace_2a9f2e.search\n        \":\" -> replace_2a9f2e.replace\n        replace_2a9f2e.output -> replace_d3d5b7.input\n        \".\" -> replace_d3d5b7.search\n        \":\" -> replace_d3d5b7.replace\n        replace_d3d5b7.output -> output_7c3d5b\n    }\n\n    \n\n    instance(x: 81, y: -4) replace_spaces_commas_dots_2a9f2e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4a3c8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5f9d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2c9c8f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4a3c8e.input\n        \" \" -> replace_4a3c8e.search\n        \":\" -> replace_4a3c8e.replace\n        replace_4a3c8e.output -> replace_5f9d7f.input\n        \",\" -> replace_5f9d7f.search\n        \":\" -> replace_5f9d7f.replace\n        replace_5f9d7f.output -> replace_2c9c8f.input\n        \".\" -> replace_2c9c8f.search\n        \":\" -> replace_2c9c8f.replace\n        replace_2c9c8f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1d8a6f\n\n        out(x: 500, y: 2, name: \"output\") property(String) output_7c9b4e\n\n        instance(x: 92, y: -5) replace_3c2b8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_6f1a3d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_b9f4f5 root.Std_k98ojb.Strings.Replace {}\n        input_1d8a6f -> replace_3c2b8e.input\n        \" \" -> replace_3c2b8e.search\n        \":\" -> replace_3c2b8e.replace\n        replace_3c2b8e.output -> replace_6f1a3d.input\n        \",\" -> replace_6f1a3d.search\n        \":\" -> replace_6f1a3d.replace\n        replace_6f1a3d.output -> replace_b9f4f5.input\n        \".\" -> replace_b9f4f5.search\n        \":\" -> replace_b9f4f5.replace\n        replace_b9f4f5.output -> output_7c9b4e\n    }\n\n    \n\n    instance(x: -85, y: 30) replace_c1a8d2 root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -232, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_3c8f4e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a7d5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c1a6c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3c8f4e.input\n        \" \" -> replace_3c8f4e.search\n        \":\" -> replace_3c8f4e.replace\n        replace_3c8f4e.output -> replace_9a7d5f.input\n        \",\" -> replace_9a7d5f.search\n        \":\" -> replace_9a7d5f.replace\n        replace_9a7d5f.output -> replace_c1a6c1.input\n        \".\" -> replace_c1a6c1.search\n        \":\" -> replace_c1a6c1.replace\n        replace_c1a6c1.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9e7f8d root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -228, y: 0, name: \"input\") property(String) input_8f1a9d\n\n        out(x: 532, y: -2, name: \"output\") property(String) output_5e7b3c\n\n        instance(x: 0, y: 1) replace_6a1f0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8d4c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d9e7ed root.Std_k98ojb.Strings.Replace {}\n        input_8f1a9d -> replace_6a1f0e.input\n        \" \" -> replace_6a1f0e.search\n        \":\" -> replace_6a1f0e.replace\n        replace_6a1f0e.output -> replace_8d4c2f.input\n        \",\" -> replace_8d4c2f.search\n        \":\" -> replace_8d4c2f.replace\n        replace_8d4c2f.output -> replace_d9e7ed.input\n        \".\" -> replace_d9e7ed.search\n        \":\" -> replace_d9e7ed.replace\n        replace_d9e7ed.output -> output_5e7b3c\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_spaces_commas_dots_2a1d4f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1f3a8e\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7c9b4d\n\n        instance(x: 94, y: -19) replace_5f6a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_1e8a3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_4c9f7c root.Std_k98ojb.Strings.Replace {}\n        input_1f3a8e -> replace_5f6a2d.input\n        \" \" -> replace_5f6a2d.search\n        \":\" -> replace_5f6a2d.replace\n        replace_5f6a2d.output -> replace_1e8a3f.input\n        \",\" -> replace_1e8a3f.search\n        \":\" -> replace_1e8a3f.replace\n        replace_1e8a3f.output -> replace_4c9f7c.input\n        \".\" -> replace_4c9f7c.search\n        \":\" -> replace_4c9f7c.replace\n        replace_4c9f7c.output -> output_7c9b4d\n    }\n\n    \n\n    instance(x: -93, y: 30) replace_spaces_commas_dots_5a1c8e root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -156, y: 2, name: \"input\") property(String) input_1a8d6f\n\n        out(x: 656, y: 0, name: \"output\") property(String) output_7c3e9b\n\n        instance(x: 94, y: -19) replace_4a5c2e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: 23) replace_1f8d7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 93, y: 65) replace_9c3b6f root.Std_k98ojb.Strings.Replace {}\n        input_1a8d6f -> replace_4a5c2e.input\n        \" \" -> replace_4a5c2e.search\n        \":\" -> replace_4a5c2e.replace\n        replace_4a5c2e.output -> replace_1f8d7c.input\n        \",\" -> replace_1f8d7c.search\n        \":\" -> replace_1f8d7c.replace\n        replace_1f8d7c.output -> replace_9c3b6f.input\n        \".\" -> replace_9c3b6f.search\n        \":\" -> replace_9c3b6f.replace\n        replace_9c3b6f.output -> output_7c3e9b\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_ba1d0f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 2, name: \"input\") property(String) input_1d9f0e\n\n        out(x: 505, y: 77, name: \"output\") property(String) output_5c8b7a\n\n        instance(x: 94, y: -105) replace_3f4b2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) replace_1d0e6c root.Std_k98ojb.Strings.Replace {}\n        input_1d9f0e -> replace_3f4b2c.input\n        \" \" -> replace_3f4b2c.search\n        \":\" -> replace_3f4b2c.replace\n        replace_3f4b2c.output -> replace_1d0e6c.input\n        \",\" -> replace_1d0e6c.search\n        \":\" -> replace_1d0e6c.replace\n        \".\" -> replace_1d0e6c.search\n        \":\" -> replace_1d0e6c.replace\n        replace_1d0e6c.output -> output_5c8b7a\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_9f3d2c root.main.replace {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 555, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_4b1e7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: -3) length_8f9a4f root.Std_k98ojb.List.Length {}\n        instance(x: 479, y: 5) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 702, y: 1) equal_7c7e3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 926, y: -4) reduce_9a5b8f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        characters_4b1e7c.characters -> length_8f9a4f.list\n        string_3f8a9e -> characters_4b1e7c.input\n        0 -> getat_6d0f2f.index\n        characters_4b1e7c.characters -> getat_6d0f2f.list\n        length_8f9a4f.length -> reduce_9a5b8f.count\n        equal_7c7e3c.left -> reduce_9a5b8f.previous\n        equal_7c7e3c.right -> reduce_9a5b8f.current\n        getat_6d0f2f.itemAtIndex -> equal_7c7e3c.left\n        1 -> equal_7c7e3c.index\n        equal_7c7e3c.result -> reduce_9a5b8f.new_value\n        true -> reduce_9a5b8f.initial\n        reduce_9a5b8f.output -> output_5c7d6b\n    }\n\n    \n\n    instance(x: -16, y: 18) check_same_f3e1f4 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_c5e9d4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: -3) reduce_8a7c6f root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -76, y: 46, name: \"current\") property(String) current_1\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_1\n\n                out(x: 382, y: 19, name: \"out\") property(String) out_1\n\n                instance(x: 106, y: 17) equal_2e3b5c root.Std_k98ojb.Logic.Equal {}\n                current_1 -> equal_2e3b5c.left\n                accumulator -> equal_2e3b5c.right\n                equal_2e3b5c.result -> out_1\n            }\n        }\n        instance(x: 0, y: -6) getat_c7a9d8 root.Std_k98ojb.List.GetAt {}\n        characters_c5e9d4.characters -> reduce_8a7c6f.items\n        string_1 -> characters_c5e9d4.input\n        reduce_8a7c6f.result -> output_1\n        getat_c7a9d8.list -> reduce_8a7c6f.initialValue\n        0 -> getat_c7a9d8.index\n    }\n\n    \n\n    instance(x: -11, y: 12) check_same_5b2e4e root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 555, y: 0, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3a8c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 280, y: -1) length_5e6d7c root.Std_k98ojb.List.Length {}\n        instance(x: 500, y: 0) getat_4f3f1c root.Std_k98ojb.List.GetAt {}\n        instance(x: 750, y: 0) equal_9a2b1c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1000, y: -1) reduce_7e8d5f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        string_1 -> characters_3a8c9f.input\n        characters_3a8c9f.characters -> length_5e6d7c.list\n        0 -> getat_4f3f1c.index\n        characters_3a8c9f.characters -> getat_4f3f1c.list\n        characters_3a8c9f.characters -> reduce_7e8d5f.items\n        length_5e6d7c.length -> equal_9a2b1c.left\n        1 -> equal_9a2b1c.right\n        getat_4f3f1c.itemAtIndex -> reduce_7e8d5f.initialValue\n        equal_9a2b1c.result -> output_1\n        reduce_7e8d5f.output -> output_1\n    }\n\n    \n\n    instance(x: -6, y: 11) check_same_3e0b1c root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_3f9a6e\n\n        out(x: 557, y: -1, name: \"output\") property(Bool) output_7c8d4b\n\n        instance(x: 0, y: 0) characters_c5a2f9 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -318, y: 0) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 188, y: 0) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        characters_c5a2f9.characters -> length_6e87f2.list\n        string_3f9a6e -> characters_c5a2f9.input\n        length_6e87f2.length -> getat_ce2a48.index\n        1 -> equal_f89569.right\n        characters_c5a2f9.characters -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> equal_f89569.left\n        equal_f89569.result -> output_7c8d4b\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_5e3f1f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -290, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 593, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_7b9c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        characters_7b9c8f.characters -> contains_d42dce.list\n        input_1 -> characters_7b9c8f.input\n        \"z\" -> contains_d42dce.contains\n        characters_7b9c8f.characters -> firstitem_870503.list\n        firstitem_870503.item -> contains_d42dce.contains\n        contains_d42dce.result -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_2e4a3 root.main.is_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -290, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_5e7f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) setintersection_9a4d3f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 500, y: -2) length_1a6f7e root.Std_k98ojb.List.Length {}\n        characters_5e7f8c.characters -> setintersection_9a4d3f.left\n        characters_5e7f8c.characters -> setintersection_9a4d3f.right\n        1 -> length_1a6f7e.list\n        setintersection_9a4d3f.intersect -> length_1a6f7e.list\n        length_1a6f7e.length -> result_0\n        string_0 -> characters_5e7f8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_2b3d9f root.main.check_same {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_3a9d8e\n\n        out(x: 560, y: 1, name: \"output\") property(Bool) output_eb7f6c\n\n        instance(x: 0, y: 0) characters_2f4f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -1) length_5e3d7a root.Std_k98ojb.List.Length {}\n        instance(x: 489, y: 0) getat_6c7f9f root.Std_k98ojb.List.GetAt {}\n        instance(x: 706, y: 2) equal_4b1f8f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 923, y: -3) for_d5a8d0 root.Std_k98ojb.Std.For {}\n        instance(x: 1149, y: 1) ifexpression_7e2c1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 633, y: 28, name: \"getter_ea3f8d\") getter_ea3f8d = previous\n        setter(x: 1069, y: -32, name: \"setter_7c1b6e\") setter_7c1b6e = previous\n        instance(x: 1295, y: 0) getat_4f2b7a root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e2c1c.else -> out(1269, y: -3, name: \"continue\") trigger() continue_c6d8ec\n        ifexpression_7e2c1c.value -> output_eb7f6c\n        ifexpression_7e2c1c.then -> setter_7c1b6e.execute\n        characters_2f4f8c.characters -> for_d5a8d0.items\n        for_d5a8d0.item -> ifexpression_7e2c1c.gen_2\n        for_d5a8d0.index -> ifexpression_7e2c1c.gen_0\n        getter_ea3f8d.value -> ifexpression_7e2c1c.gen_1\n        for_d5a8d0.onItem -> ifexpression_7e2c1c.execute\n        for_d5a8d0.done -> continue_c6d8ec\n        for_d5a8d0.item -> setter_7c1b6e.new_value\n        characters_2f4f8c.characters -> getat_4f2b7a.list\n        0 -> getat_4f2b7a.index\n        getat_4f2b7a.itemAtIndex -> setter_e9f3c5.new_value\n        in(x: -286, y: -214, name: \"execute\") trigger() execute_8e6d1f\n        instance(x: -0, y: -122, name: \"setter_e9f3c5\") setter_e9f3c5 = previous\n        execute_8e6d1f -> setter_e9f3c5.execute\n        setter_e9f3c5.continue -> for_d5a8d0.reset\n        setter_7c1b6e.continue -> for_d5a8d0.next\n        string_3a9d8e -> characters_2f4f8c.input\n        length_5e3d7a.list -> getat_6c7f9f.list\n        length_5e3d7a.length -> for_d5a8d0.count\n        equal_4b1f8f.result -> ifexpression_7e2c1c.predicate\n        getat_6c7f9f.itemAtIndex -> equal_4b1f8f.left\n        0 -> getat_6c7f9f.index\n        for_d5a8d0.item -> equal_4b1f8f.right\n    }\n\n    \n\n    instance(x: -3, y: -13) check_same_2e8c6f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -283, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3c9d8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) setintersection_5e6a4f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 490, y: 2) length_0c7c7f root.Std_k98ojb.List.Length {}\n        characters_3c9d8f.characters -> setintersection_5e6a4f.left\n        characters_3c9d8f.characters -> setintersection_5e6a4f.right\n        1 -> length_0c7c7f.list\n        setintersection_5e6a4f.intersect -> length_0c7c7f.list\n        length_0c7c7f.length -> output_1\n        string_1 -> characters_3c9d8f.input\n    }\n\n    \n\n    instance(x: -11, y: 10) check_same_f6a4e2 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 1, name: \"string\") property(String) string_3f8d5a\n\n        out(x: 593, y: 0, name: \"output\") property(Bool) output_7c2e9b\n\n        instance(x: 0, y: 0) characters_4a1f6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) length_5d3a9f root.Std_k98ojb.List.Length {}\n        instance(x: 479, y: 0) getat_7c8e2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 693, y: 0) equal_4f1b5c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 907, y: -1) reduce_3a6d9c root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        characters_4a1f6f.characters -> length_5d3a9f.list\n        string_3f8d5a -> characters_4a1f6f.input\n        0 -> getat_7c8e2f.index\n        characters_4a1f6f.characters -> getat_7c8e2f.list\n        length_5d3a9f.length -> reduce_3a6d9c.count\n        equal_4f1b5c.result -> reduce_3a6d9c.continue\n        characters_4a1f6f.characters -> reduce_3a6d9c.items\n        getat_7c8e2f.itemAtIndex -> equal_4f1b5c.left\n        reduce_3a6d9c.accumulatedValue -> equal_4f1b5c.right\n        true -> reduce_3a6d9c.initialValue\n        reduce_3a6d9c.result -> output_7c2e9b\n    }\n\n    \n\n    instance(x: -52, y: 54) is_same_0c7d7c root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 554, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: 530, y: -1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_2e1444.output -> contains_d42dce.list\n        \"a\" -> contains_d42dce.item\n        characters_2e1444.input -> input_0\n        characters_2e1444.output -> length_6e87f2.list\n        length_6e87f2.length -> contains_d42dce.count\n        contains_d42dce.result -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) is_same_e54b7f root.main.is_same {}\n\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e8d0c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4c9e7f.gen_0\n        pow_4c9e7f.result -> sum_365f7b\n        data_cde0dc -> pow_4c9e7f.second\n        expression_2d6da6.result -> pow_4c9e7f.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2d4e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9c2d4e.second\n        expression_2d6da6.result -> pow_9c2d4e.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9c2d4e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4e8d0c root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4e8d0c.second\n        expression_2d6da6.result -> pow_4e8d0c.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_4e8d0c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9e6a1f\n\n        out(x: 50, y: 0, name: \"surface_area\") property(Number) surface_area_7c2b3d\n\n        instance(x: 20, y: -10) mul_f8a4e5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 20, y: 40) mul_1f0c6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 70, y: 30) mul_7d9f3f root.Std_k98ojb.Math.Mul {}\n        size_9e6a1f -> mul_f8a4e5.first\n        size_9e6a1f -> mul_f8a4e5.second\n        mul_f8a4e5.result -> mul_7d9f3f.first\n        6 -> mul_7d9f3f.second\n        mul_7d9f3f.result -> surface_area_7c2b3d\n        size_9e6a1f -> mul_1f0c6c.first\n        size_9e6a1f -> mul_1f0c6c.second\n    }\n\n    \n\n    instance(x: 50, y: -10, name: \"surface_area_cube\") surface_area_cube_7b8d5f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"size\") property(Number) size_1a9f5e\n\n        out(x: 400, y: 0, name: \"surface_area\") property(Number) surface_area_2b8d6c\n\n        instance(x: 100, y: -50) mul_4a7c1 root.Std_k98ojb.Math.Mul {}\n        size_1a9f5e -> mul_4a7c1.first\n        size_1a9f5e -> mul_4a7c1.second\n        instance(x: 200, y: -50) mul_2d3c8 root.Std_k98ojb.Math.Mul {}\n        mul_4a7c1.result -> mul_2d3c8.first\n        6 -> mul_2d3c8.second\n        mul_2d3c8.result -> surface_area_2b8d6c\n    }\n\n    \n\n    instance(x: -100, y: -50) surface_area_cube_ae7f9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -333, y: 11, name: \"size\") property(Number) size_9f5e8a\n\n        out(x: 1073, y: 14, name: \"surface_area\") property(Number) surface_area_1b2c4d\n\n        instance(x: 15, y: -12) mul_7a0f1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 18, y: 56) pow_3e8c5e root.Std_k98ojb.Math.Pow {}\n        instance(x: 20, y: 123) mul_9d4b6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 22, y: 192) mul_f0a1f2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 24, y: 261) mul_7e8c5f root.Std_k98ojb.Math.Mul {}\n        size_9f5e8a -> pow_3e8c5e.x\n        2 -> pow_3e8c5e.y\n        pow_3e8c5e.result -> mul_f0a1f2.first\n        6 -> mul_f0a1f2.second\n        mul_f0a1f2.result -> mul_7e8c5f.first\n        size_9f5e8a -> mul_7e8c5f.second\n        mul_7e8c5f.result -> mul_9d4b6c.first\n        mul_3e8c5e.result -> mul_9d4b6c.second\n        mul_9d4b6c.result -> mul_7a0f1f.first\n        size_9f5e8a -> mul_7a0f1f.second\n        mul_7a0f1f.result -> surface_area_1b2c4d\n    }\n\n    \n\n    instance(x: 48, y: -28) surface_area_cube_3a7d1f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"size\") property(Number) size_9e6f1a\n\n        out(x: 100, y: 0, name: \"surface_area\") property(Number) surface_area_7c8d3b\n\n        instance(x: -120, y: 0) mul_4a5b1 root.Std_k98ojb.Math.Mul {}\n        instance(x: -30, y: 0) mul_6f9e2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 60, y: 0) add_7c8d3 root.Std_k98ojb.Math.Add {}\n        size_9e6f1a -> mul_4a5b1.first\n        size_9e6f1a -> mul_4a5b1.second\n        mul_4a5b1.result -> mul_6f9e2.first\n        6 -> mul_6f9e2.second\n        mul_6f9e2.result -> add_7c8d3.first\n        mul_4a5b1.result -> add_7c8d3.second\n        add_7c8d3.result -> surface_area_7c8d3b\n    }\n\n    \n\n    instance(x: -120, y: 0) surface_area_cube_9e6f1a root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_1f9d6e\n\n        out(x: 156, y: 63, name: \"surface_area\") property(Number) surface_area_7a8c5b\n\n        instance(x: 10, y: -3) mul_2f0e1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 9, y: 55) pow_e4d6b9 root.Std_k98ojb.Math.Pow {}\n        instance(x: 8, y: 115) mul_5a7c7f root.Std_k98ojb.Math.Mul {}\n        size_1f9d6e -> pow_e4d6b9.x\n        2 -> pow_e4d6b9.y\n        pow_e4d6b9.result -> mul_2f0e1c.first\n        6 -> mul_2f0e1c.second\n        mul_2f0e1c.result -> mul_5a7c7f.first\n        size_1f9d6e -> mul_5a7c7f.second\n        mul_5a7c7f.result -> surface_area_7a8c5b\n    }\n\n    \n\n    instance(x: 10, y: -3) surface_area_cube_2a0d9c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 11, name: \"size\") property(Number) size_8f1e9a\n\n        out(x: 1076, y: 14, name: \"surface_area\") property(Number) surface_area_b3c7d4\n\n        instance(x: 16, y: -10) mul_2b0b5c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 333, y: 63) data_e9f8a1  = 6\n        instance(x: 17, y: 68) pow_7e3d2e root.Std_k98ojb.Math.Pow {}\n        size_8f1e9a -> mul_2b0b5c.first\n        data_e9f8a1 -> mul_2b0b5c.second\n        size_8f1e9a -> pow_7e3d2e.x\n        2 -> pow_7e3d2e.y\n        mul_2b0b5c.result -> surface_area_b3c7d4\n        pow_7e3d2e.result -> mul_2b0b5c.first\n    }\n\n    \n\n    instance(x: -10, y: 26) surface_area_cube_1a9f6c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 20, name: \"size\") property(Number) size_1a8f5e\n\n        out(x: 1160, y: 22, name: \"surface_area\") property(Number) surface_area_7b9d6c\n\n        instance(x: 18, y: -2) mul_f4e8f3 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 306, y: 76) data_ea0b5d  = 6\n        instance(x: 16, y: 74) pow_1c7c7f root.Std_k98ojb.Math.Pow {}\n        mul_f4e8f3.result -> surface_area_7b9d6c\n        size_1a8f5e -> mul_f4e8f3.first\n        data_ea0b5d -> mul_f4e8f3.second\n        size_1a8f5e -> pow_1c7c7f.x\n        2 -> pow_1c7c7f.y\n        pow_1c7c7f.result -> mul_f4e8f3.first\n    }\n\n    \n\n    instance(x: -12, y: -10) surface_area_cube_5b9d0a root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -333, y: 15, name: \"size\") property(Number) size_1f0d9e\n\n        out(x: 1046, y: 14, name: \"surface_area\") property(Number) surface_area_7c8b5a\n\n        instance(x: 12, y: -3) mul_4b2b2e root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 331, y: 66) data_1d9f6c  = 6\n        instance(x: 10, y: 69) pow_5a8b0c root.Std_k98ojb.Math.Pow {}\n        size_1f0d9e -> mul_4b2b2e.first\n        data_1d9f6c -> mul_4b2b2e.second\n        size_1f0d9e -> pow_5a8b0c.x\n        2 -> pow_5a8b0c.y\n        mul_4b2b2e.result -> surface_area_7c8b5a\n        pow_5a8b0c.result -> mul_4b2b2e.first\n    }\n\n    \n\n    instance(x: -12, y: 22) surface_area_cube_1d9f6c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0d1e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_a6cea7\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_9f1e8c root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_2d7a6f root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_2d7a6f.first\n        side_length_a6cea7 -> mul_2d7a6f.second\n        mul_2d7a6f.result -> add_88bb8a.first\n        1 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_9f0d1e -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_9f1e8c.execute_9f0d1e\n        surface_area_cube_9f1e8c.continue_d9efd7 -> setter_375321.execute\n        surface_area_cube_9f1e8c.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        side_length_a6cea7 -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_9f1e8c root.main.surface_area_cube {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_9f0d8e\n        in(x: -436, y: -213, name: \"side_length\") property(Number) side_length_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_7c1a4e\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"side_length <= 0\"\n        }\n        instance(x: 395, y: -378) surface_area_cube_96023e root.main.surface_area_cube {}\n        instance(x: 97, y: -127) mul_adfa16 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) mul_547f34 root.Std_k98ojb.Math.Mul {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        6 -> mul_adfa16.second\n        side_length_6b655b -> mul_adfa16.first\n        mul_adfa16.result -> add_88bb8a.first\n        2 -> mul_547f34.second\n        side_length_6b655b -> mul_547f34.first\n        mul_547f34.result -> surface_area_cube_96023e.side_length_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_7c1a4e\n        execute_9f0d8e -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> surface_area_cube_96023e.execute_9f0d8e\n        surface_area_cube_96023e.continue_7c1a4e -> setter_375321.execute\n        surface_area_cube_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_7c1a4e\n        getter_38583a.value -> output_732a8a\n        side_length_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> mul_547f34.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) surface_area_cube_86117a root.main.surface_area_cube {}\n\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 157, name: \"list\") property(List) list_9a3b5f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7e8d1c\n\n        instance(x: 201, y: 126) sub_4a6b0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 157) max_9f5b3c root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358) min_f7d8c1 root.Std_k98ojb.List.Min {}\n        list_9a3b5f -> max_9f5b3c.list\n        list_9a3b5f -> min_f7d8c1.list\n        max_9f5b3c.max -> sub_4a6b0e.first\n        min_f7d8c1.min -> sub_4a6b0e.second\n        sub_4a6b0e.result -> output_7e8d1c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5f9f2c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 154, name: \"list\") property(List) list_1a8f3e\n\n        out(x: 544, y: 145, name: \"output\") property(Number) output_7c2d5b\n\n        instance(x: 532, y: 147) sub_6a9b4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f8f1aa root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_7a2d3c root.Std_k98ojb.List.Min {}\n        list_1a8f3e -> max_f8f1aa.list\n        list_1a8f3e -> min_7a2d3c.list\n        max_f8f1aa.max -> sub_6a9b4e.first\n        min_7a2d3c.min -> sub_6a9b4e.second\n        sub_6a9b4e.result -> output_7c2d5b\n    }\n\n    \n\n    instance(x: -290, y: 177) diff_max_min_e8f0c1 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 158, name: \"list\") property(List) list_0f3e9d\n\n        out(x: 543, y: 137, name: \"output\") property(Number) output_eb7a6c\n\n        instance(x: 186, y: 135) sub_1b8b4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 155) max_9d3e5c root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -75) min_d6a2ea root.Std_k98ojb.List.Min {}\n        list_0f3e9d -> max_9d3e5c.list\n        list_0f3e9d -> min_d6a2ea.list\n        max_9d3e5c.max -> sub_1b8b4f.first\n        min_d6a2ea.min -> sub_1b8b4f.second\n        sub_1b8b4f.result -> output_eb7a6c\n    }\n\n    \n\n    instance(x: 49, y: -64) diff_max_min_5e3d9e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9a2f1e\n\n        out(x: 554, y: 5, name: \"output\") property(Number) output_7b3c4d\n\n        instance(x: 0, y: 0) sub_8e7b1f root.Std_k98ojb.Math.Sub {}\n        instance(x: -246, y: 99) max_f9a6da root.Std_k98ojb.List.Max {}\n        instance(x: -247, y: -101) min_d5c3d2 root.Std_k98ojb.List.Min {}\n        list_9a2f1e -> max_f9a6da.list\n        list_9a2f1e -> min_d5c3d2.list\n        max_f9a6da.max -> sub_8e7b1f.first\n        min_d5c3d2.min -> sub_8e7b1f.second\n        sub_8e7b1f.result -> output_7b3c4d\n    }\n\n    \n\n    instance(x: -53, y: 6) diff_max_min_0a9f6c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 156, name: \"list\") property(List) list_0d9b3f\n\n        out(x: 443, y: 127, name: \"difference\") property(Number) difference_5e1c7a\n\n        instance(x: 188, y: 125) sub_4b8c6e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f9d0f2 root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_5e1a7c root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_9d0f8f root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_ea1c6e root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1049, y: -375) length_7d8f0f root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_5c2c3c root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) max_1a9e6c root.Std_k98ojb.List.Max {}\n        instance(x: -1191, y: -492) min_7f8d0f root.Std_k98ojb.List.Min {}\n        list_0d9b3f -> firstitem_5e1a7c.list\n        maxlist_f9d0f2.result -> firstitem_5e1a7c.list\n        list_0d9b3f -> firstitem_ea1c6e.list\n        minlist_9d0f8f.result -> firstitem_ea1c6e.list\n        list_0d9b3f -> slice_5c2c3c.list\n        1 -> slice_5c2c3c.start\n        slice_5c2c3c.slice -> maxlist_f9d0f2.list\n        length_7d8f0f.length -> slice_5c2c3c.end\n        list_0d9b3f -> minlist_9d0f8f.list\n        slice_5c2c3c.slice -> minlist_9d0f8f.list\n        firstitem_ea1c6e.item -> sub_4b8c6e.first\n        firstitem_5e1a7c.item -> sub_4b8c6e.second\n        list_0d9b3f -> max_1a9e6c.items\n        list_0d9b3f -> min_7f8d0f.items\n        max_1a9e6c.max -> maxlist_f9d0f2.max\n        min_7f8d0f.min -> minlist_9d0f8f.min\n        sub_4b8c6e.result -> difference_5e1c7a\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -318, y: 521, name: \"Max list\") max_f9f1d8 root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_7a2e4f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_f9f1d8.max -> sub_852f2e.first\n        min_7a2e4f.min -> sub_852f2e.second\n        list_0b075e -> max_f9f1d8.list\n        list_0b075e -> min_7a2e4f.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 157, name: \"list\") property(List) list_1a9f3e\n\n        out(x: 800, y: 147, name: \"output\") property(Number) output_eb0d7c\n\n        instance(x: 532, y: 149) sub_2f5f4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f3a1da root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_7c8d0f root.Std_k98ojb.List.Min {}\n        list_1a9f3e -> max_f3a1da.list\n        list_1a9f3e -> min_7c8d0f.list\n        max_f3a1da.max -> sub_2f5f4e.first\n        min_7c8d0f.min -> sub_2f5f4e.second\n        sub_2f5f4e.result -> output_eb0d7c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_9a3d1f root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 154, name: \"list\") property(List) list_1a8b9f\n\n        out(x: 542, y: 145, name: \"output\") property(Number) output_5e7c0d\n\n        instance(x: 452, y: 147) sub_6f3a8c root.Std_k98ojb.Math.Sub {}\n        instance(x: -38, y: 26, name: \"Max value\") max_9b1bc3 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_d831ca root.Std_k98ojb.List.Min {}\n        list_1a8b9f -> max_9b1bc3.list\n        list_1a8b9f -> min_d831ca.list\n        max_9b1bc3.max -> sub_6f3a8c.first\n        min_d831ca.min -> sub_6f3a8c.second\n        sub_6f3a8c.result -> output_5e7c0d\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 158, name: \"list\") property(List) list_9a3b8f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_1c2d7e\n\n        instance(x: 188, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it == max\"\n        }\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == min\"\n        }\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1049, y: -375) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: -566) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -1405, y: -438) max_4b8927 root.Std_k98ojb.List.Max {}\n        instance(x: -1191, y: -492) min_f133b2 root.Std_k98ojb.List.Min {}\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        list_9a3b8f -> maxlist_f3b46d.list\n        max_4b8927.max -> maxlist_f3b46d.where\n        maxlist_f3b46d.result -> firstitem_870503.list\n        list_9a3b8f -> minlist_4d4556.list\n        min_f133b2.min -> minlist_4d4556.where\n        minlist_4d4556.result -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_1c2d7e\n        list_9a3b8f -> length_4b8927.list\n        length_4b8927.length -> slice_3f3ee6.end\n        1 -> slice_3f3ee6.start\n        slice_3f3ee6.slice -> data_cc1b1b.middle\n        list_9a3b8f -> max_4b8927.list\n        list_9a3b8f -> min_f133b2.list\n        firstitem_870503.item -> data_cc1b1b.first\n        firstitem_3078c6.item -> data_cc1b1b.last\n        flatten_c31c7c.flattened -> output_1c2d7e\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -284, y: 0, name: \"list\") property(List) list_6a3f8e\n\n        out(x: 594, y: 1, name: \"output\") property(Number) output_e5b9d7\n\n        instance(x: 0, y: 0) sub_2c4a3c root.Std_k98ojb.Math.Sub {}\n        instance(x: -284, y: -115, name: \"Max\") max_1f6e1f root.Std_k98ojb.List.Max {}\n        instance(x: -283, y: 116, name: \"Min\") min_2d8c7a root.Std_k98ojb.List.Min {}\n        list_6a3f8e -> max_1f6e1f.list\n        list_6a3f8e -> min_2d8c7a.list\n        max_1f6e1f.max -> sub_2c4a3c.first\n        min_2d8c7a.min -> sub_2c4a3c.second\n        sub_2c4a3c.result -> output_e5b9d7\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_6f0e1e root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 20, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1217, y: 20, name: \"output\") property(Bool) output_eb1e5a\n\n        instance(x: 1052, y: 17) ifexpression_c0d9bc root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_12bf99 -> ifexpression_c0d9bc.execute\n        input_5e8f1d -> ifexpression_c0d9bc.gen_0\n        ifexpression_c0d9bc.value -> output_eb1e5a\n        ifexpression_c0d9bc.then -> continue_685c8f\n        ifexpression_c0d9bc.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -175, y: 21) is_even_2e7f3f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 10, name: \"input\") property(Number) input_1f0a5e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_9c8d6b\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_4a7c2f\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_1e0e5c\n\n        instance(x: -92, y: 62) modulo_6b8d8c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 201, y: 62) equal_f7a3f9 root.Std_k98ojb.Logic.Equal {}\n        input_1f0a5e -> modulo_6b8d8c.value\n        2 -> modulo_6b8d8c.divisor\n        modulo_6b8d8c.result -> equal_f7a3f9.left\n        0 -> equal_f7a3f9.right\n        equal_f7a3f9.result -> output_1e0e5c\n        execute_9c8d6b -> continue_4a7c2f\n    }\n\n    \n\n    instance(x: -55, y: 529) is_even_7c1c8f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 10, name: \"input\") property(Number) input_9e6a8f\n        in(x: -460, y: -116, name: \"execute\") trigger() execute_eb7d5c\n\n        out(x: 1182, y: -115, name: \"continue\") trigger() continue_3f1c0f\n        out(x: 1194, y: 77, name: \"output\") property(Bool) output_f9a6e8\n\n        instance(x: 1087, y: 73) ifexpression_eb2d5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_9e6a8f -> ifexpression_eb2d5f.gen_0\n        execute_eb7d5c -> ifexpression_eb2d5f.execute\n        ifexpression_eb2d5f.value -> output_f9a9e8\n        ifexpression_eb2d5f.then -> continue_3f1c0f\n        ifexpression_eb2d5f.else -> continue_3f1c0f\n    }\n\n    \n\n    instance(x: -173, y: 11) is_even_7a4d6e root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_9f1e6d\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        execute_90aaec -> setter_9d4f1c.execute\n        getter_b280eb.value -> output_5bbcd7\n        input_9f1e6d -> ifexpression_875761.gen_0\n        setter_9d4f1c.continue -> continue_a96db6\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f3b8a2 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_1f9a5e\n        in(x: -454, y: -120, name: \"execute\") trigger() execute_7c8b6d\n\n        out(x: 800, y: -119, name: \"output\") property(Bool) output_4f3a0e\n        out(x: 1222, y: -121, name: \"continue\") trigger() continue_e9b1ee\n\n        instance(x: 1066, y: -120) ifexpression_8d7c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 1033, y: -4, name: \"getter_9e1a0d\") getter_9e1a0d = output\n        setter(x: 1168, y: -274, name: \"setter_e5f6b7\") setter_e5f6b7 = output\n\n        input_1f9a5e -> ifexpression_8d7c5f.gen_0\n        2 -> ifexpression_8d7c5f.gen_1\n        getter_9e1a0d.value -> output_4f3a0e\n        ifexpression_8d7c5f.then -> setter_e5f6b7.execute\n        true -> setter_e5f6b7.new_value\n        execute_7c8b6d -> ifexpression_8d7c5f.execute\n        setter_e5f6b7.continue -> continue_e9b1ee\n    }\n\n    \n\n    instance(x: -291, y: 11) is_even_3a2e4f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 1, name: \"input\") property(Number) input_3a9f8e\n        in(x: -454, y: -111, name: \"execute\") trigger() execute_e5b7c0\n\n        out(x: 549, y: -112, name: \"continue\") trigger() continue_f6d1ef\n        out(x: 545, y: 63, name: \"output\") property(Bool) output_9e3a4f\n\n        instance(x: 5, y: 60) modulo_7c2b8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 232, y: 65) equal_f1d6da root.Std_k98ojb.Logic.Equal {}\n        input_3a9f8e -> modulo_7c2b8f.value\n        2 -> modulo_7c2b8f.divisor\n        modulo_7c2b8f.result -> equal_f1d6da.left\n        0 -> equal_f1d6da.right\n        equal_f1d6da.result -> output_9e3a4f\n        execute_e5b7c0 -> continue_f6d1ef\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_2c856f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 20, name: \"input\") property(Number) input_1a9f2e\n        in(x: -451, y: -116, name: \"execute\") trigger() execute_eb0d7c\n\n        out(x: 1208, y: 12, name: \"output\") property(Bool) output_3c4b6e\n        out(x: 1199, y: -104, name: \"continue\") trigger() continue_5a1f1e\n\n        instance(x: 1097, y: -2) ifexpression_8d0c4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 1056, y: 99, name: \"getter_1e9a3d\") getter_1e9a3d = output\n        setter(x: 1198, y: -265, name: \"setter_eb7f4c\") setter_eb7f4c = output\n\n        input_1a9f2e -> ifexpression_8d0c4f.gen_0\n        getter_1e9a3d.value -> output_3c4b6e\n        ifexpression_8d0c4f.then -> setter_eb7f4c.execute\n        true -> setter_eb7f4c.new_value\n        ifexpression_8d0c4f.else -> continue_5a1f1e\n        false -> setter_eb7f4c.new_value\n        execute_eb0d7c -> ifexpression_8d0c4f.execute\n        setter_eb7f4c.continue -> continue_5a1f1e\n    }\n\n    \n\n    instance(x: -64, y: 9) is_even_2f6f3f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 11, name: \"input\") property(Number) input_1f0e9d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_7a9d5e\n\n        instance(x: -104, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_1f0e9d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_7a9d5e\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f9e3d6 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 1, name: \"input\") property(Number) input_8a9d3f\n        in(x: -451, y: -113, name: \"execute\") trigger() execute_7b0e6c\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_1a4f2f\n        out(x: 461, y: 63, name: \"output\") property(Bool) output_9d8b3e\n\n        instance(x: -103, y: 62, name: \"ifexpression\") ifexpression_e0c7aa root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -142, y: 114, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_8a9d3f -> ifexpression_e0c7aa.gen_0\n        execute_7b0e6c -> ifexpression_e0c7aa.execute\n        getter_9cceb3.value -> output_9d8b3e\n        ifexpression_e0c7aa.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e0c7aa.else -> continue_1a4f2f\n        false -> setter_1cedb2.new_value\n        setter_1cedb2.continue -> continue_1a4f2f\n    }\n\n    \n\n    instance(x: -175, y: 11) is_even_8c7d0e root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 17, name: \"input\") property(Number) input_8a9f0e\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_1c7d3b\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_6f5f4f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_e9e8a0\n\n        instance(x: -105, y: -110) ifexpression_7b3d2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_8a9f0e -> ifexpression_7b3d2c.gen_0\n        execute_1c7d3b -> ifexpression_7b3d2c.execute\n        ifexpression_7b3d2c.value -> output_e9e8a0\n        ifexpression_7b3d2c.then -> continue_6f5f4f\n        ifexpression_7b3d2c.else -> continue_6f5f4f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_9e1a9c root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_3f9c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``second occurrence`` root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.contains\n            input_0 -> contains_d42dce.input\n            ``second occurrence``.contains -> ``first occurrence_0b1361``.contains\n            find_3f9c8d.item -> ``second occurrence``.input\n            notequal_a54bdc.right -> contains_d42dce.result\n            notequal_a54bdc.left -> ``second occurrence``.result\n            ``second occurrence``.result -> bool_1eb6e9\n        } -> find_3f9c8d.predicate\n        input_0 -> ``first occurrence_0b1361``.input\n        find_3f9c8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3a7d4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -50) contains_6f1b9c root.Std_k98ojb.List.Contains {}\n        characters_5e9b8c.output -> find_3a7d4f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) list_0a7c8f root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            characters_5e9b8c.output -> list_0a7c8f.list\n            current_afd5b1 -> list_0a7c8f.start\n            -1 -> list_0a7c8f.end\n            list_0a7c8f.slice -> contains_6f1b9c.list\n            current_afd5b1 -> contains_6f1b9c.item\n            contains_6f1b9c.contains -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_3a7d4f.predicate\n        find_3a7d4f.item -> output_0\n        input_0 -> characters_5e9b8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_1c2a6f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7f6d3a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") set_1e4b9c root.Std_k98ojb.Sets.Set {}\n        characters_5e9b8c.output -> find_7f6do3.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2c7f0a root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2c7f0a.input\n            set_1e4b9c.set -> contains_2c7f0a.contains\n            contains_2c7f0a.result -> bool_1eb6e9\n        } -> find_7f6do3.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2c7f0a root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2c7f0a.input\n            set_1e4b9c.set -> contains_2c7f0a.contains\n            contains_2c7f0a.result -> bool_1eb6e9\n        } -> set_1e4b9c.add\n        find_7f6do3.item -> output_0\n        input_0 -> characters_5e9b8c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b8f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e4a3d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") filter_2f1e9c root.Std_k98ojb.Query.Filter {\n            where: \"!contains(set, it)\"\n        }\n        characters_5b8f9c.output -> find_7e4a3d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_4f0c3a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_5d8f7a root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_4f0c3a.input\n            find_7e4a3d.items -> contains_4f0c3a.contains\n            contains_4f0c3a.result -> notequal_5d8f7a.left\n            0 -> notequal_5d8f7a.right\n            notequal_5d8f7a.result -> bool_1eb6e9\n        } -> find_7e4a3d.predicate\n        characters_5b8f9c.output -> filter_2f1e9c.list\n        find_7e4a3d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 551, y: -105) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_2d42b5 root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_3f9e4c root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> slice_2d42b5.list\n            elem_9f6850 -> slice_2d42b5.start\n            -1 -> slice_2d42b5.end\n            slice_2d42b5.slice -> contains_807ffd.input\n            elem_9f6850 -> contains_807ffd.contains\n            contains_807ffd.result -> notequal_3f9e4c.left\n            0 -> notequal_3f9e4c.right\n            notequal_3f9e4c.result -> bool_af09a7\n        } -> find_1088d5.predicate\n        find_1088d5.item -> if_7c284f.execute\n        input_0 -> characters_6d05b0.input\n        find_1088d5.item -> output_0\n        if_7c284f.else -> output_0\n    }\n\n    \n\n    instance(x: 777, y: 760) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 531, y: -2, name: \"output\") property(Any) output_1\n\n        instance(x: 0, y: 1) characters_3e9c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d5a8f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first\") filter_1e3c6f root.Std_k98ojb.Query.Filter {\n            where: \"it == first\"\n        }\n        instance(x: 62, y: -226, name: \"second\") ``first_0`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e9c4f.characters -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            filter_1e3c6f.result -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7d5a8f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            ``first_0``.items -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> ``second``.predicate\n        find_7d5a8f.item -> filter_1e3c6f.list\n        characters_3e9c4f.characters -> ``second``.items\n        filter_1e3c6f.result -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4a9d6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"count\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"list.count(it)\"\n        }\n        instance(x: 62, y: -226, name: \"is repeated\") greaterthan_2d44da root.Std_k98ojb.Math.GreaterThan {}\n        characters_5e3c8f.characters -> find_4a9d6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            expression_634b7e.gen_0 -> characters_5e3c8f.characters\n            current_afd5b1 -> expression_634b7e.gen_1\n            expression_634b7e.result -> greaterthan_2d44da.left\n            1 -> greaterthan_2d44da.right\n            greaterthan_2d44da.result -> bool_1eb6e9\n        } -> find_4a9d6f.predicate\n        input_0 -> characters_5e3c8f.input\n        find_4a9d6f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4b5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7c9a8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") ``first occurrence_1`` root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_2`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e4b5f.characters -> find_7c9a8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 112, y: 80) contains_2a3c5d root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_1``.item -> contains_2a3c5d.input\n            current_a -> contains_2a3c5d.contains\n            contains_2a3c5d.result -> bool_1\n        } -> find_7c9a8d.predicate\n        characters_3e4b5f.characters -> ``first occurrence_1``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_a\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 112, y: 80) contains_2a3c5d root.Std_k98ojb.Strings.Contains {}\n            ``first occurrence_2``.item -> contains_2a3c5d.input\n            current_a -> contains_2a3c5d.contains\n            contains_2a3c5d.result -> bool_1\n        } -> ``first occurrence_2``.predicate\n        characters_3e4b5f.characters -> ``first occurrence_2``.items\n        find_7c9a8d.item -> output_0\n        input_0 -> characters_3e4b5f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 515, y: 44) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.List.Contains {}\n        instance(x: 89, y: 29) slice_9f6850 root.Std_k98ojb.List.Slice {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            slice_9f6850.slice -> contains_807ffd.list\n            characters_6d05b0.characters -> slice_9f6850.list\n            elem_9f6850 -> slice_9f6850.start\n            1 -> slice_9f6850.end\n            elem_9f6850 -> contains_807ffd.item\n            contains_807ffd.contains -> bool_af09a7\n        } -> find_1088d5.predicate\n        find_1088d5.item -> output_0\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3d8f7c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -1) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_3d8f7c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``output_0_0`` root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_2e1444.output -> ``output_0_0``.items\n            find_3d8f7c.item -> ``output_0_0``.predicate\n            notequal_148aeb.result -> bool_1eb6e9\n            contains_d42dce.contains -> notequal_148aeb.right\n            contains_d42dce.result -> notequal_148aeb.left\n        } -> find_3d8f7c.predicate\n        input_0 -> characters_2e1444.input\n        find_3d8f7c.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_8a1f9e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_5c7d3b\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            list_remove_node.listWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> equal_aabb6e.left\n            min_node.min -> equal_aabb6e.right\n            equal_aabb6e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8a1b5c -> min_node.items\n        min_node.min -> list_remove_node.index\n        list_8a1f9e -> list_remove_node.list\n        list_remove_node.listWithoutItem -> second_smallest\n        find_6d05b0.item -> second_min_5c7d3b\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 1, name: \"list\") property(List) list_9e3f6a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_8b2d5c\n\n        instance(x: -105, y: -110) min_7f1f0c root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_3a9e6e root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min_c3e343 root.Std_k98ojb.List.Min {}\n        list_9e3f6a -> min_7f1f0c.items\n        min_7f1f0c.min -> list_remove_3a9e6e.index\n        list_9e3f6a -> list_remove_3a9e6e.list\n        list_remove_3a9e6e.listWithoutItem -> min_c3e343.items\n        min_c3e343.min -> second_min_8b2d5c\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 0, name: \"list\") property(List) list_1e8a9f\n\n        out(x: 159, y: 81, name: \"second_min\") property(Number) second_min_a5c3b7\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 60) ifexpression_8e3c0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 172, name: \"getter_e5d1f7\") getter_e5d1f7 = min\n        setter(x: 116, y: -42, name: \"setter_3c0e8b\") setter_3c0e8b = min\n        setter(x: 118, y: 92, name: \"setter_b9a4ef\") setter_b9a4ef = min\n        instance(x: -105, y: 220) ifexpression_7f2d1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 332, name: \"getter_e9c3af\") getter_e9c3af = min\n        setter(x: 116, y: 158, name: \"setter_7f2b5e\") setter_7f2b5e = min\n        setter(x: 118, y: 268, name: \"setter_8a1d4f\") setter_8a1d4f = min\n        instance(x: -105, y: 380) ifexpression_e3c9ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 492, name: \"getter_8e5d1f\") getter_8e5d1f = min\n        setter(x: 116, y: 324, name: \"setter_e3c9ea\") setter_e3c9ea = min\n        setter(x: 118, y: 424, name: \"setter_7b2a4f\") setter_7b2a4f = min\n        instance(x: -105, y: 532) ifexpression_8e5d1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 644, name: \"getter_e3c9ea\") getter_e3c9ea = min\n        setter(x: 116, y: 476, name: \"setter_8e5d1f\") setter_8e5d1f = min\n        setter(x: 118, y: 564, name: \"setter_7b2a4f\") setter_7b2a4f = min\n        instance(x: -105, y: 692) list_min_node root.Std_k98ojb.List.Min {}\n        getter_e5d1f7.value -> second_min_a5c3b7\n        list_1e8a9f -> ifexpression_e38995.gen_0\n        list_1e8a9f -> ifexpression_e38995.gen_1\n        list_1e8a9f -> ifexpression_8e3c0a.gen_0\n        getter_9cceb3.value -> ifexpression_8e3c0a.gen_1\n        list_1e8a9f -> ifexpression_7f2d1e.gen_0\n        getter_e5d1f7.value -> ifexpression_7f2d1e.gen_1\n        list_1e8a9f -> ifexpression_e3c9ea.gen_0\n        getter_e9c3af.value -> ifexpression_e3c9ea.gen_1\n        list_1e8a9f -> ifexpression_8e5d1f.gen_0\n        getter_8e5d1f.value -> ifexpression_8e5d1f.gen_1\n        list_1e8a9f -> list_min_node.items\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        getter_9cceb3.value -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_1e8a9f -> setter_37db7f.new_value\n        ifexpression_8e3c0a.then -> setter_3c0e8b.execute\n        getter_e5d1f7.value -> setter_3c0e8b.new_value\n        ifexpression_8e3c0a.else -> setter_b9a4ef.execute\n        getter_37db7f.value -> setter_b9a4ef.new_value\n        ifexpression_7f2d1e.then -> setter_7f2b5e.execute\n        getter_e9c3af.value -> setter_7f2b5e.new_value\n        ifexpression_7f2d1e.else -> setter_8a1d4f.execute\n        getter_b9a4ef.value -> setter_8a1d4f.new_value\n        ifexpression_e3c9ea.then -> setter_e3c9ea.execute\n        getter_8e5d1f.value -> setter_e3c9ea.new_value\n        ifexpression_e3c9ea.else -> setter_7b2a4f.execute\n        getter_7f2b5e.value -> setter_7b2a4f.new_value\n        ifexpression_8e5d1f.then -> setter_8e5d1f.execute\n        getter_e3c9ea.value -> setter_8e5d1f.new_value\n        ifexpression_8e5d1f.else -> setter_7b2a4f.execute\n        getter_7b2a4f.value -> setter_7b2a4f.new_value\n        list_min_node.min -> getter_e3c9ea.value\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_d6e930 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1a3f8e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_7c2b4d\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_1e6f9a root.Std_k98ojb.List.Remove {}\n        instance(x: 426, y: -303) min_node_0c3d2f root.Std_k98ojb.List.Min {}\n        list_1a3f8e -> min_node.items\n        min_node.min -> list_remove_1e6f9a.index\n        list_1a3f8e -> list_remove_1e6f9a.list\n        list_remove_1e6f9a.listWithoutItem -> min_node_0c3d2f.items\n        min_node_0c3d2f.min -> second_min_7c2b4d\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_8a5a1e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8d6a\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_a7e3b1\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 160, y: 159, name: \"second_min\") property(Number) second_min_a5c3d7\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 2, name: \"list\") property(List) list_9f0a3e\n\n        out(x: 160, y: 7, name: \"second_min\") property(Number) second_min_a8c6d1\n\n        instance(x: -103, y: -111) min_c3e343 root.Std_k98ojb.List.Min {}\n        instance(x: 0, y: 0) filter_2a5f4c root.Std_k98ojb.Query.Filter {\n            where: \"it != min\"\n        }\n        instance(x: 226, y: -114) min_d1e7d8 root.Std_k98ojb.List.Min {}\n        list_9f0a3e -> min_c3e343.items\n        min_c3e343.min -> filter_2a5f4c.gen_0\n        list_9f0a3e -> filter_2a5f4c.list\n        filter_2a5f4c.result -> min_d1e7d8.items\n        min_d1e7d8.min -> second_min_a8c6d1\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_9e3a8f\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_7c2b4d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -305, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        data_instance(x: -105, y: -110) data_9a9c70  = [min, second_min]\n        instance(x: -105, y: -110) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: -305, y: -303) list_min_node2 root.Std_k98ojb.List.Min {}\n        list_9e3a8f -> list_min_node.items\n        list_9e3a8f -> list_remove_node.list\n        list_min_node.min -> list_remove_node.index\n        list_remove_node.listWithoutItem -> list_min_node2.items\n        list_min_node.min -> getter_9cceb3.a\n        0 -> setter_1cedb2.new_value\n        list_min_node2.min -> setter_37db7f.new_value\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        ifexpression_e38995.else -> setter_37db7f.execute\n        getter_9cceb3.value -> second_min_7c2b4d\n        list_min_node.min -> ifexpression_e38995.gen_0\n        list_min_node2.min -> ifexpression_e38995.gen_1\n        data_9a9c70 -> list_remove_node.list\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7f3b9e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        instance(x: 426, y: -303) list_min_node_0 root.Std_k98ojb.List.Min {}\n        items_ai -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        items_ai -> list_min_node.items\n        list_min_node.min -> setter_1cedb2.new_value\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        items_ai -> list_min_node_0.items\n        getter_9cceb3.value -> list_min_node_0.items\n        list_min_node_0.min -> second_min_7f3b9e\n        ifexpression_e38995.else -> list_min_node_0.reset\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7f3b8e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        instance(x: 426, y: -303) list_min_node_0 root.Std_k98ojb.List.Min {}\n        items_ai -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        items_ai -> list_min_node.items\n        list_min_node.min -> setter_1cedb2.new_value\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        items_ai -> list_min_node_.items\n        getter_9cceb3.value -> list_min_node_.min\n        list_min_node_.min -> second_min_7f3b8e\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 12101,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -277, y: 164, name: \"list1\") property(List) list1_0a8f9e\n        in(x: -278, y: -3, name: \"list2\") property(List) list2_eb7d5c\n\n        out(x: 801, y: 145, name: \"output\") property(Bool) output_d6c4ba\n\n        instance(x: 532, y: 147) intersection_9a8e0f root.Std_k98ojb.Sets.Intersection {}\n        list1_0a8f9e -> intersection_9a8e0f.left\n        list2_eb7d5c -> intersection_9a8e0f.right\n        instance(x: 698, y: 145) notempty_4a3b6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a8e0f.intersect -> notempty_4a3b6f.list\n        notempty_4a3b6f.isEmpty -> output_d6c4ba\n    }\n\n    \n\n    instance(x: -291, y: 177) intersection_1d5d7c root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -171, y: 17, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -161, y: -124, name: \"list2\") property(List) list2_eb7c0d\n\n        out(x: 560, y: -111, name: \"output\") property(Bool) output_4e6a5f\n\n        instance(x: 134, y: -131) intersection_9a8f9 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f2a -> intersection_9a8f9.left\n        list2_eb7c0d -> intersection_9a8f9.right\n        instance(x: 360, y: -111) notempty_4b3b1 root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a8f9.intersection -> notempty_4b3b1.list\n        notempty_4b3b1.isEmpty -> output_4e6a5f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_b2d0c7 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -177, y: 16, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -179, y: -121, name: \"list2\") property(List) list2_7c6d5b\n\n        out(x: 525, y: -50, name: \"output\") property(Bool) output_3e1b4f\n\n        instance(x: 222, y: -48, name: \"intersection\") intersection_9a0c8e root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f2a -> intersection_9a0c8e.left\n        list2_7c6d5b -> intersection_9a0c8e.right\n        instance(x: 487, y: -50) notempty_3a4a8c root.Std_k98ojb.List.NotEmpty {}\n        intersection_9a0c8e.intersect -> notempty_3a4a8c.list\n        notempty_3a4a8c.isEmpty -> output_3e1b4f\n    }\n\n    \n\n    instance(x: -138, y: 43) intersection_e6d7cc root.main.intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: 15, name: \"list1\") property(List) list1_3a0b5f\n        in(x: -163, y: -125, name: \"list2\") property(List) list2_9e7c8d\n\n        out(x: 558, y: -104, name: \"output\") property(Bool) output_6e4f3a\n\n        instance(x: 134, y: -131) intersection_c5b0d1 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0b5f -> intersection_c5b0d1.left\n        list2_9e7c8d -> intersection_c5b0d1.right\n        instance(x: 360, y: -103) notempty_4e6a2f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c5b0d1.intersection -> notempty_4e6a2f.list\n        notempty_4e6a2f.isEmpty -> output_6e4f3a\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_9c7f8f root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -277, y: 166, name: \"list1\") property(List) list_09fcba\n        in(x: -277, y: 10, name: \"list2\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) intersection_7e1ce0 root.Std_k98ojb.Sets.Intersection {}\n        list_09fcba -> intersection_7e1ce0.left\n        list_09fcba -> intersection_7e1ce0.right\n        intersection_7e1ce0.intersect -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) intersection_f53d27 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -178, y: 11, name: \"list1\") property(List) list1_3e8f0a\n        in(x: -182, y: -125, name: \"list2\") property(List) list2_e5b9d7\n\n        out(x: 786, y: -107, name: \"output\") property(Bool) output_c4c6aa\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 246, y: -109) contains_32727d root.Std_k98ojb.List.Contains {}\n        list1_3e8f0a -> zip_201051.left\n        list2_e5b9d7 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(List) result_e245cb\n\n            instance(x: -8, y: -53) concat_c5f7a6 root.Std_k98ojb.List.Concat {}\n            list1_42bc6f -> concat_c5f7a6.left\n            list2_1d86d4 -> concat_c5f7a6.right\n            concat_c5f7a6.listWithItem -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> contains_32727d.list\n        0 -> contains_32727d.item\n        contains_32727d.is_contained -> output_c4c6aa\n    }\n\n    \n\n    instance(x: -92, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -174, y: 19, name: \"list1\") property(List) list1_8e6f9a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_4c0b5d\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_3a7f8e\n\n        instance(x: 133, y: -131) intersection_9b1c6f root.Std_k98ojb.Sets.Intersection {}\n        list1_8e6f9a -> intersection_9b1c6f.left\n        list2_4c0b5d -> intersection_9b1c6f.right\n        instance(x: 360, y: -95) notempty_7a8f8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9b1c6f.intersect -> notempty_7a8f8f.list\n        notempty_7a8f8f.isEmpty -> output_3a7f8e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -177, y: 16, name: \"list1\") property(List) list1_8e9f2a\n        in(x: -165, y: -121, name: \"list2\") property(List) list2_7c6d5b\n\n        out(x: 501, y: -50, name: \"output\") property(Bool) output_4f1f8e\n\n        instance(x: 220, y: -48, name: \"intersection\") intersection_ea3b9 root.Std_k98ojb.Sets.Intersection {}\n        list1_8e9f2a -> intersection_ea3b9.left\n        list2_7c6d5b -> intersection_ea3b9.right\n        instance(x: 681, y: -50) notempty_0e9c9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_ea3b9.intersection -> notempty_0e9c9.list\n        notempty_0e9c9.isEmpty -> output_4f1f8e\n    }\n\n    \n\n    instance(x: -137, y: -63) has_common_element_c5d7c2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -277, y: 168, name: \"list1\") property(List) list1_9e3b8a\n        in(x: -267, y: -2, name: \"list2\") property(List) list2_6c0d7f\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) intersection_c5b9a8 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8a -> intersection_c5b9a8.left\n        list2_6c0d7f -> intersection_c5b9a8.right\n        instance(x: 698, y: 85) notempty_4a2c0e root.Std_k98ojb.List.NotEmpty {}\n        intersection_c5b9a8.intersection -> notempty_4a2c0e.list\n        notempty_4a2c0e.isEmpty -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) intersection_f53d27 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -173, y: 18, name: \"list1\") property(List) list1_3e6f9a\n        in(x: -156, y: -121, name: \"list2\") property(List) list2_e5c8d7\n\n        out(x: 505, y: -50, name: \"output\") property(Bool) output_4b0a1f\n\n        instance(x: 221, y: -48, name: \"intersection\") intersection_9e3b6c root.Std_k98ojb.Sets.Intersection {}\n        list1_3e6f9a -> intersection_9e3b6c.left\n        list2_e5c8d7 -> intersection_9e3b6c.right\n        instance(x: 188, y: -50) notempty_4a0a3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_9e3b6c.intersect -> notempty_4a0a3f.list\n        notempty_4a0a3f.isEmpty -> output_4b0a1f\n    }\n\n    \n\n    instance(x: -138, y: -63) intersection_e2d7ed root.main.intersection {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -293, y: 3, name: \"list\") property(List) list_0a8f9e\n\n        out(x: 1225, y: 4, name: \"output\") property(Bool) output_eb7d1c\n\n        instance(x: 1056, y: -2) ifexpression_7e7b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 438, y: 25, name: \"getter_8a3f9d\") getter_8a3f9d = previous\n        setter(x: 882, y: -312, name: \"setter_7c0b4e\") setter_7c0b4e = previous\n        instance(x: 416, y: -19) for_1e5b2e root.Std_k98ojb.Std.For {}\n        setter(x: -3, y: -121, name: \"setter_7c0b4e\") setter_9f6d3a = previous\n        instance(x: -276, y: -35) getat_1b8b2c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e7b2c.else -> continue_8b5e7f\n        ifexpression_7e7b2c.value -> output_eb7d1c\n        ifexpression_7e7b2c.then -> setter_7c0b4e.execute\n        list_0a8f9e -> for_1e5b2e.items\n        for_1e5b2e.item -> ifexpression_7e7b2c.gen_2\n        for_1e5b2e.index -> ifexpression_7e7b2c.gen_0\n        getter_8a3f9d.value -> ifexpression_7e7b2c.gen_1\n        for_1e5b2e.onItem -> ifexpression_7e7b2c.execute\n        for_1e5b2e.done -> continue_8b5e7f\n        for_1e5b2e.item -> setter_7c0b4e.new_value\n        list_0a8f9e -> getat_1b8b2c.list\n        0 -> getat_1b8b2c.index\n        getat_1b8b2c.itemAtIndex -> setter_9f6d3a.new_value\n        execute_5f7c4e -> setter_9f6d3a.execute\n        setter_9f6d3a.continue -> for_1e5b2e.reset\n        setter_7c0b4e.continue -> for_1e5b2e.next\n    }\n\n    \n\n    instance(x: -64, y: 60) is_consecutive_8b0b4e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 4, name: \"list\") property(List) list_9a3f1e\n\n        out(x: 1225, y: 11, name: \"output\") property(Bool) output_eb7c8d\n\n        instance(x: 0, y: 6) sort_1b2a3c root.Std_k98ojb.List.Sort {}\n        instance(x: -32, y: -12) for_5e4f9c root.Std_k98ojb.Std.For {}\n        instance(x: 1008, y: 10) if_0d6a9f root.Std_k98ojb.Std.If {}\n        instance(x: 1102, y: -13) sub_7a3c1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1314, y: -14) equal_5e8f2c root.Std_k98ojb.Logic.Equal {}\n        list_9a3f1e -> sort_1b2a3c.list\n        sort_1b2a3c.sortedList -> for_5e4f9c.items\n        func() {\n            in(x: -121, y: 39, name: \"current\") property(Number) current_7d8b6e\n\n            out(x: 515, y: 29, name: \"bool\") property(Bool) bool_ea2c0f\n\n            instance(x: 106, y: 24) sub_9a5c4c root.Std_k98ojb.Math.Sub {}\n            current_7d8b6e -> sub_9a5c4c.first\n            for_5e4f9c.index -> sub_9a5c4c.second\n            sub_9a5c4c.result -> equal_5e8f2c.left\n            1 -> equal_5e8f2c.right\n            equal_5e8f2c.result -> bool_ea2c0f\n        } -> for_5e4f9c.handler\n        for_5e4f9c.onItem -> if_0d6a9f.execute\n        for_5e4f9c.done -> output_eb7c8d\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(Number) current_a3a2ba\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9f0e5b\n\n            instance(x: 89, y: 29) sub_7d1c4c root.Std_k98ojb.Math.Sub {}\n            current_a3a2ba -> sub_7d1c4c.first\n            for_5e4f9c.index -> sub_7d1c4c.second\n            sub_7d1c4c.result -> bool_9f0e5b\n        } -> if_0d6a9f.predicate\n        if_0d6a9f.else -> output_eb7c8d\n        for_5e4f9c.item -> sub_7a3c1c.first\n        for_5e4f9c.index -> sub_7a3c1c.second\n        sub_7a3c1c.result -> if_0d6a9f.then\n    }\n\n    \n\n    instance(x: -56, y: 129) is_consecutive_f8b9ed root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 2, name: \"list\") property(List) list_3a0f9e\n\n        out(x: 1066, y: 5, name: \"output\") property(Bool) output_7b8d1c\n\n        instance(x: 778, y: -4) ifexpression_2b1c6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 360, y: 117, name: \"getter_9a3d7e\") getter_9a3d7e = previous\n        setter(x: 704, y: -313, name: \"setter_8c4f2b\") setter_8c4f2b = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8c4f2b\") setter_1e7d3a = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_2b1c6f.else -> output_7b8d1c\n        ifexpression_2b1c6f.value -> output_7b8d1c\n        ifexpression_2b1c6f.then -> setter_8c4f2b.execute\n        list_3a0f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_2b1c6f.gen_2\n        for_d26972.index -> ifexpression_2b1c6f.gen_0\n        getter_9a3d7e.value -> ifexpression_2b1c6f.gen_1\n        for_d26972.onItem -> ifexpression_2b1c6f.execute\n        for_d26972.done -> output_7b8d1c\n        for_d26972.item -> setter_8c4f2b.new_value\n        list_3a0f9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_1e7d3a.new_value\n        setter_1e7d3a.continue -> for_d26972.reset\n        setter_8c4f2b.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -82, y: 57) is_consecutive_9f6c5e root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -283, y: 3, name: \"list\") property(List) list_8a1f2e\n\n        out(x: 1119, y: 6, name: \"output\") property(Bool) output_5b7c0d\n\n        instance(x: 1064, y: -13) ifexpression_c3b9ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 546, y: 28, name: \"getter_8c2f7d\") getter_8c2f7d = previous\n        setter(x: 1023, y: -299, name: \"setter_9e0b5a\") setter_9e0b5a = previous\n        instance(x: 514, y: -20) for_1f4b9f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9e0b5a\") setter_2c8d7d = previous\n        instance(x: -277, y: -35) getat_6f3b1f root.Std_k98ojb.List.GetAt {}\n        ifexpression_c3b9ed.else -> continue_4e1f0f\n        ifexpression_c3b9ed.value -> output_5b7c0d\n        ifexpression_c3b9ed.then -> setter_9e0b5a.execute\n        list_8a1f2e -> for_1f4b9f.items\n        for_1f4b9f.item -> ifexpression_c3b9ed.gen_2\n        for_1f4b9f.index -> ifexpression_c3b9ed.gen_0\n        getter_8c2f7d.value -> ifexpression_c3b9ed.gen_1\n        for_1f4b9f.onItem -> ifexpression_c3b9ed.execute\n        for_1f4b9f.done -> continue_4e1f0f\n        for_1f4b9f.item -> setter_9e0b5a.new_value\n        list_8a1f2e -> getat_6f3b1f.list\n        0 -> getat_6f3b1f.index\n        getat_6f3b1f.itemAtIndex -> setter_2c8d7d.new_value\n        execute_4a9c7e -> setter_2c8d7d.execute\n        setter_2c8d7d.continue -> for_1f4b9f.reset\n        setter_9e0b5a.continue -> for_1f4b9f.next\n    }\n\n    \n\n    instance(x: -34, y: 119) is_consecutive_3b6f9f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -280, y: 3, name: \"list\") property(List) list_1a0d9f\n\n        out(x: 1125, y: 2, name: \"output\") property(Bool) output_8b7c6e\n\n        instance(x: 0, y: -11) sort_b4d3da root.Std_k98ojb.List.Sort {}\n        instance(x: 332, y: 14) for_1f5a2c root.Std_k98ojb.Std.For {}\n        instance(x: 674, y: 13) sub_9e8c7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1006, y: -12) lessthanorequal_e3d1f4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1335, y: 14) if_2e8a0c root.Std_k98ojb.Std.If {}\n        sort_b4d3da.list -> for_1f5a2c.items\n        func() {\n            in(x: -113, y: 44, name: \"current\") property(Number) current_9f6c0f\n\n            out(x: 515, y: 55, name: \"bool\") property(Bool) bool_ae8d1b\n\n            instance(x: 89, y: 40) sub_7a3f4a root.Std_k98ojb.Math.Sub {}\n            instance(x: 312, y: 46) lessthanorequal_9c6e2f root.Std_k98ojb.Math.LessThanOrEqual {}\n            for_1f5a2c.index -> sub_7a3f4a.first\n            1 -> sub_7a3f4a.second\n            sub_7a3f4a.result -> lessthanorequal_9c6e2f.left\n            current_9f6c0f -> lessthanorequal_9c6e2f.right\n            lessthanorequal_9c6e2f.result -> bool_ae8d1b\n        } -> if_2e8a0c.predicate\n        for_1f5a2c.item -> sub_9e8c7c.first\n        for_1f5a2c.index -> sub_9e8c7c.second\n        sub_9e8c7c.result -> lessthanorequal_e3d1f4.left\n        1 -> lessthanorequal_e3d1f4.right\n        lessthanorequal_e3d1f4.result -> if_2e8a0c.value\n        for_1f5a2c.onItem -> if_2e8a0c.execute\n        list_1a0d9f -> sort_b4d3da.list\n        if_2e8a0c.else -> output_8b7c6e\n        if_2e8a0c.then -> for_1f5a2c.next\n        for_1f5a2c.done -> output_8b7c6e\n    }\n\n    \n\n    instance(x: -54, y: 129) is_consecutive_f3f9d4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 5, name: \"list\") property(List) list_9a1f0e\n\n        out(x: 1056, y: 8, name: \"output\") property(Bool) output_e7b3d4\n\n        instance(x: 100, y: -12) sort_b2c1ed root.Std_k98ojb.List.Sort {}\n        instance(x: 427, y: 9) map_5f0e8a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 726, y: 6) filter_7d4c3c root.Std_k98ojb.Query.Filter {\n            where: \"it[1] - it[0] == 1\"\n        }\n        instance(x: 1012, y: 9) length_5a8f9e root.Std_k98ojb.List.Length {}\n        list_9a1f0e -> sort_b2c1ed.list\n        sort_b2c1ed.sortedList -> map_5f0e8a.items\n        func() {\n            in(x: -114, y: 38, name: \"item\") property(Any) item_7d3b6e\n\n            out(x: 514, y: 49, name: \"\") property(List) _1c9c5f\n\n            instance(x: 112, y: 44) slice_8a2d4c root.Std_k98ojb.List.Slice {}\n            item_7d3b6e -> slice_8a2d4c.list\n            0 -> slice_8a2d4c.start\n            2 -> slice_8a2d4c.end\n            slice_8a2d4c.slice -> _1c9c5f\n        } -> map_5f0e8a.handler\n        map_5f0e8a.output_list -> filter_7d4c3c.list\n        length_5a8f9e.length -> filter_7d4c3c.result\n        1 -> length_5a8f9e.list\n        filter_7d4c3c.is_contained -> output_e7b3d4\n    }\n\n    \n\n    instance(x: -57, y: 169) is_consecutive_2c0d6c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -284, y: 3, name: \"list\") property(List) list_1a9d8f\n\n        out(x: 1000, y: 5, name: \"output\") property(Bool) output_6b2c4e\n\n        instance(x: 1057, y: -15) ifexpression_3e1c9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_3e1c9e.else -> output_6b2c4e\n        ifexpression_3e1c9e.value -> output_6b2c4e\n        ifexpression_3e1c9e.then -> setter_9d4f1c.execute\n        list_1a9d8f -> for_d26972.items\n        for_d26972.item -> ifexpression_3e1c9e.gen_2\n        for_d26972.index -> ifexpression_3e1c9e.gen_0\n        getter_b280eb.value -> ifexpression_3e1c9e.gen_1\n        for_d26972.onItem -> ifexpression_3e1c9e.execute\n        for_d26972.done -> output_6b2c4e\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a9d8f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_7a5b6f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 2, name: \"list\") property(List) list_3f0e9d\n\n        out(x: 1005, y: 1, name: \"output\") property(Bool) output_7b4a8c\n\n        instance(x: 110, y: -10) sort_6e2c5c root.Std_k98ojb.List.Sort {}\n        instance(x: 450, y: 11) for_3f0d9f root.Std_k98ojb.Std.For {}\n        instance(x: 778, y: 12) sub_7a8c4c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1012, y: -10) if_5e1d1f root.Std_k98ojb.Std.If {}\n        sort_6e2c5c.list -> for_3f0d9f.items\n        func() {\n            in(x: -112, y: 46, name: \"current\") property(Number) current_8a7c1f\n\n            out(x: 698, y: 57, name: \"bool\") property(Bool) bool_5e3b4d\n\n            instance(x: 111, y: 52) sub_2f9d09 root.Std_k98ojb.Math.Sub {}\n            current_8a7c1f -> sub_2f9d09.first\n            for_3f0d9f.index -> sub_2f9d09.second\n            sub_2f9d09.result -> bool_5e3b4d\n        } -> if_5e1d1f.predicate\n        for_3f0d9f.onItem -> if_5e1d1f.execute\n        list_3f0e9d -> sort_6e2c5c.list\n        if_5e1d1f.else -> output_7b4a8c\n        1 -> sub_7a8c4c.second\n        for_3f0d9f.index -> sub_7a8c4c.first\n        sub_7a8c4c.result -> if_5e1d1f.then\n        for_3f0d9f.done -> output_7b4a8c\n    }\n\n    \n\n    instance(x: -55, y: 527) is_consecutive_2c856f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -287, y: 3, name: \"list\") property(List) list_8e1d6f\n\n        out(x: 1225, y: 2, name: \"output\") property(Bool) output_7b0a9c\n\n        instance(x: 772, y: -12) ifexpression_3a4f2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 15, name: \"getter_9e7d6c\") getter_9e7d6c = previous\n        setter(x: 679, y: -147, name: \"setter_3b4f8a\") setter_3b4f8a = previous\n        instance(x: 321, y: -33) for_1a2a8f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -134, name: \"setter_3b4f8a\") setter_d9e7c6 = previous\n        instance(x: -275, y: -49) getat_5d1b8c root.Std_k98ojb.List.GetAt {}\n        ifexpression_3a4f2f.else -> continue_0c7b9f\n        ifexpression_3a4f2f.value -> output_7b0a9c\n        ifexpression_3a4f2f.then -> setter_3b4f8a.execute\n        list_8e1d6f -> for_1a2a8f.items\n        for_1a2a8f.item -> ifexpression_3a4f2f.gen_2\n        for_1a2a8f.index -> ifexpression_3a4f2f.gen_0\n        getter_9e7d6c.value -> ifexpression_3a4f2f.gen_1\n        for_1a2a8f.onItem -> ifexpression_3a4f2f.execute\n        for_1a2a8f.done -> continue_0c7b9f\n        for_1a2a8f.item -> setter_3b4f8a.new_value\n        list_8e1d6f -> getat_5d1b8c.list\n        0 -> getat_5d1b8c.index\n        getat_5d1b8c.itemAtIndex -> setter_d9e7c6.new_value\n        execute_3a4b7e -> setter_d9e7c6.execute\n        setter_d9e7c6.continue -> for_1a2a8f.reset\n        setter_3b4f8a.continue -> for_1a2a8f.next\n    }\n\n    \n\n    instance(x: -83, y: 60) is_consecutive_f0d5e9 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -279, y: 0, name: \"list\") property(List) list_1a3e8f\n\n        out(x: 1059, y: 19, name: \"output\") property(Bool) output_eb7c5d\n\n        instance(x: 110, y: -6) sort_2e4b0f root.Std_k98ojb.List.Sort {}\n        instance(x: 442, y: 17) for_9a3a1f root.Std_k98ojb.Std.For {}\n        instance(x: 786, y: 16) sub_8c7d5c root.Std_k98ojb.Math.Sub {}\n        instance(x: 1030, y: -4) lessthanorequal_2e6c1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1283, y: 15) and_7d8f5c root.Std_k98ojb.Logic.And {}\n        list_1a3e8f -> sort_2e4b0f.list\n        sort_2e4b0f.sortedList -> for_9a3a1f.items\n        func() {\n            in(x: -192, y: 42, name: \"current\") property(Number) current_7d5c8c\n\n            out(x: 708, y: 49, name: \"bool\") property(Bool) bool_eb9e6a\n\n            instance(x: 225, y: 46) sub_3f1a2f root.Std_k98ojb.Math.Sub {}\n            instance(x: 465, y: 47) lessthanorequal_b8d0c4 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_7d5c8c -> sub_3f1a2f.first\n            for_9a3a1f.index -> sub_3f1a2f.second\n            sub_3f1a2f.result -> lessthanorequal_b8d0c4.left\n            1 -> lessthanorequal_b8d0c4.right\n            lessthanorequal_b8d0c4.result -> bool_eb9e6a\n        } -> for_9a3a1f.handler\n        for_9a3a1f.onItem -> sub_8c7d7c.execute\n        for_9a3a1f.item -> sub_8c7d7c.first\n        for_9a3a1f.index -> sub_8c7d7c.second\n        sub_8c7d7c.result -> lessthanorequal_2e6c1a.left\n        1 -> lessthanorequal_2e6c1a.right\n        lessthanorequal_2e6c1a.result -> and_7d8f5c.left\n        for_9a3a1f.index -> and_7d8f5c.right\n        and_7d8f5c.result -> output_eb7c5d\n        for_9a3a1f.done -> output_eb7c5d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_6e0d4f root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 0, name: \"sublist\") property(List) sublist_3f9a8e\n        in(x: -285, y: -160, name: \"list\") property(List) list_1c7b4d\n\n        out(x: 1265, y: -95, name: \"output\") property(Bool) output_2e0c1e\n\n        instance(x: -85, y: -96, name: \"find sublist in list\") find_3a9f8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(List) current_1e7d6\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_2c9a0\n\n            instance(x: 112, y: 80) contains_3b5f4 root.Std_k98ojb.List.Contains {}\n            current_1e7d6 -> contains_3b5f4.list\n            sublist_3f9a8e -> contains_3b5f4.item\n            contains_3b5f4.is_contained -> bool_2c9a0\n        } -> find_3a9f8c.predicate\n        list_1c7b4d -> find_3a9f8c.items\n        find_3a9f8c.item -> output_2e0c1e\n    }\n\n    \n\n    instance(x: -83, y: 59) is_sublist_f5a6c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 35, name: \"sublist\") property(List) sublist_3f1a8e\n        in(x: -283, y: -133, name: \"list\") property(List) list_0c7b9d\n\n        out(x: 1015, y: -11, name: \"output\") property(Bool) output_e2c6aa\n\n        instance(x: -62, y: -131) contains_1a3f4e root.Std_k98ojb.List.Contains {}\n        list_0c7b9d -> contains_1a3f4e.list\n        sublist_3f1a8e -> contains_1a3f4e.item\n        contains_1a3f4e.is_contained -> output_e2c6aa\n    }\n\n    \n\n    instance(x: -62, y: 7) is_sublist_a9d5a0 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 30, name: \"sublist\") property(List) sublist_0a8f9e\n        in(x: -294, y: -135, name: \"list\") property(List) list_1b7d3c\n\n        out(x: 1056, y: -110, name: \"output\") property(Bool) output_e5f4aa\n\n        instance(x: -82, y: -137) length_9e8a0f root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -112) greaterthan_1c7d3f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 201, y: -5) sub_4a6c2e root.Std_k98ojb.Iteration.Sub {}\n        instance(x: 200, y: 100) contains_8b9f0c root.Std_k98ojb.List.Contains {}\n        greaterthan_1c7d3f.result -> output_e5f4aa\n        sublist_0a8f9e -> length_9e8a0f.list\n        list_1b7d3c -> length_9e8a0f.list\n        length_9e8a0f.length -> greaterthan_1c7d3f.right\n        length_9e8a0f.length -> greaterthan_1c7d3f.left\n        sublist_0a8f9e -> sub_4a6c2e.sublist\n        list_1b7d3c -> sub_4a6c2e.list\n        sub_4a6c2e.sublists -> contains_8b9f0c.list\n        sublist_0a8f9e -> contains_8b9f0c.item\n    }\n\n    \n\n    instance(x: 101, y: -68) is_sublist_f3d1e5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -293, y: 20, name: \"sublist\") property(List) sublist_0f1a3e\n        in(x: -285, y: -160, name: \"list\") property(List) list_5c9b7d\n\n        out(x: 1066, y: -110, name: \"output\") property(Bool) output_e8f4ea\n\n        instance(x: -93, y: -111) contains_3e1a0f root.Std_k98ojb.List.Contains {}\n        list_5c9b7d -> contains_3e1a0f.list\n        sublist_0f1a3e -> contains_3e1a0f.item\n        contains_3e1a0f.is_contained -> output_e8f4ea\n    }\n\n    \n\n    instance(x: -82, y: 11) is_sublist_9b7d5c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -299, y: 20, name: \"sublist\") property(List) sublist_1f9d5a\n        in(x: -301, y: -150, name: \"list\") property(List) list_7e6b3c\n\n        out(x: 1050, y: -95, name: \"output\") property(Bool) output_8a2a4d\n\n        instance(x: -91, y: -147, name: \"is sublist\") filter_1f5b3f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 246, y: -95) contains_9c7e6f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -31, y: -23, name: \"current\") property(List) current_8d0a1f\n\n            out(x: 701, y: -3, name: \"output\") property(Bool) output_e5c7e9\n\n            instance(x: 226, y: 4) contains_6b2e5c root.Std_k98ojb.List.Contains {}\n            sublist_1f9d5a -> contains_6b2e5c.list\n            current_8d0a1f -> contains_6b2e5c.item\n            contains_6b2e5c.is_contained -> output_e5c7e9\n        } -> filter_1f5b3f.handler\n        list_7e6b3c -> filter_1f5b3f.items\n        func() {\n            in(x: -31, y: -23, name: \"current\") property(List) current_8d0a1f\n\n            out(x: 701, y: -3, name: \"output\") property(Bool) output_e5c7e9\n\n            instance(x: 226, y: 4) contains_6b2e5c root.Std_k98ojb.List.Contains {}\n            sublist_1f9d5a -> contains_6b2e5c.list\n            current_8d0a1f -> contains_6b2e5c.item\n            contains_6b2e5c.is_contained -> output_e5c7e9\n        } -> contains_9c7e6f.handler\n        filter_1f5b3f.output_list -> contains_9c7e6f.list\n        contains_9c7e6f.is_contained -> output_8a2a4d\n    }\n\n    \n\n    instance(x: -92, y: 59) is_sublist_0c0d1f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 20, name: \"sublist\") property(List) sublist_3f0a9e\n        in(x: -278, y: -150, name: \"list\") property(List) list_7c8b2d\n\n        out(x: 1066, y: -70, name: \"output\") property(Bool) output_5f1a4d\n\n        instance(x: 10, y: -69) contains_9e0b8f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -29, y: -24, name: \"current\") property(List) current_7c3b2\n            in(x: -23, y: 76, name: \"_index\") property(Number) _index_6a8f9\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_e1e0f4\n\n            instance(x: 226, y: 56) slice_3b7c5d root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) contains_9e0b8f_2 root.Std_k98ojb.List.Contains {}\n            list_7c8b2d -> slice_3b7c5d.list\n            _index_6a8f9 -> slice_3b7c5d.start\n            -1 -> slice_3b7c5d.end\n            slice_3b7c5d.slice -> contains_9e0b8f_2.list\n            sublist_3f0a9e -> contains_9e0b8f_2.item\n            contains_9e0b8f_2.is_contained -> output_e1e0f4\n        } -> contains_9e0b8f.handler\n        list_7c8b2d -> contains_9e0b8f.items\n        contains_9e0b8f.is_contained -> output_5f1a4d\n    }\n\n    \n\n    instance(x: -293, y: 59) is_sublist_3e7c0 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -278, y: 0, name: \"sublist\") property(List) sublist_1a8d9f\n        in(x: -277, y: 166, name: \"list\") property(List) list_09fcba\n\n        out(x: 800, y: 145, name: \"output\") property(Bool) output_edc2e3\n\n        instance(x: 532, y: 147) mul_7e1ce0 root.Std_k98ojb.Math.Mul {}\n        instance(x: -39, y: 26, name: \"First even number\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: -39, y: 257, name: \"First odd number\") ``First even number_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        list_09fcba -> find_de624f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(Number) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 421, y: 79) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> modulo_45e806.value\n            2 -> modulo_45e806.divisor\n            modulo_45e806.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> ``First even number_0b1361``.predicate\n        list_09fcba -> ``First even number_0b1361``.items\n        find_de624f.item -> mul_7e1ce0.first\n        ``First even number_0b1361``.item -> mul_7e1ce0.second\n        mul_7e1ce0.result -> output_edc2e3\n    }\n\n    \n\n    instance(x: -291, y: 177) is_sublist_f53d27 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 5, name: \"sublist\") property(List) sublist_0f1a8e\n        in(x: -277, y: -175, name: \"list\") property(List) list_7c9d4b\n\n        out(x: 1263, y: -110, name: \"output\") property(Bool) output_e5a2ec\n\n        instance(x: -0, y: -122, name: \"sublist length\") length_8e1f9f root.Std_k98ojb.List.Length {}\n        instance(x: 186, y: -121) contains_3c6d7c root.Std_k98ojb.List.Contains {}\n        instance(x: 423, y: -120) greaterthan_c5a4a2 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 648, y: -119) sub_9e1f0f root.Std_k98ojb.Math.Sub {}\n        instance(x: 864, y: -118) generateRange_7d3c8f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1092, y: -117) slice_5a4a9e root.Std_k98ojb.List.Slice {}\n        instance(x: 1316, y: -116) contains_1c7f0d root.Std_k98ojb.List.Contains {}\n        sublist_0f1a8e -> length_8e1f9f.list\n        list_7c9d4b -> contains_3c6d7c.list\n        sublist_0f1a8e -> contains_3c6d7c.item\n        greaterthan_c5a4a2.result -> sub_9e1f0f.first\n        length_8e1f9f.length -> greaterthan_c5a4a2.left\n        list_7c9d4b -> length_8e1f9f.list\n        0 -> greaterthan_c5a4a2.right\n        sub_9e1f0f.result -> generateRange_7d3c8f.to\n        0 -> generateRange_7d3c8f.from\n        list_7c9d4b -> slice_5a4a9e.list\n        generateRange_7d3c8f.range -> slice_5a4a9e.start\n        -1 -> slice_5a4a9e.end\n        sublist_0f1a8e -> contains_1c7f0d.item\n        slice_5a4a9e.slice -> contains_1c7f0d.list\n        contains_1c7f0d.is_contained -> output_e5a2ec\n    }\n\n    \n\n    instance(x: 93, y: -37) is_sublist_f3b8d6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 20, name: \"sublist\") property(List) sublist_2f8d1a\n        in(x: -304, y: -140, name: \"list\") property(List) list_7c0e3b\n\n        out(x: 1065, y: -10, name: \"output\") property(Bool) output_4f9f1f\n\n        instance(x: -44, y: -143, name: \"is sublist\") filter_2d6a8f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n            in(x: -30, y: 80, name: \"_index\") property(Number) _index_8a0f2\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        list_7c0e3b -> filter_2d6a8f.items\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728, y: 43, name: \"output\") property(Bool) output_7d6b3\n\n            instance(x: 223, y: 50) contains_1e5c4 root.Std_k98ojb.List.Contains {}\n            sublist_2f8d1a -> contains_1e5c4.list\n            current_9e1c5 -> contains_1e5c4.item\n            contains_1e5c4.is_contained -> output_7d6b3\n        } -> filter_2d6a8f.handler\n        func() {\n            in(x: -31, y: 7, name: \"current\") property(List) current_9e1c5\n\n            out(x: 728",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -284, y: 5, name: \"sublist\") property(List) sublist_1a9d6f\n        in(x: -285, y: -166, name: \"list\") property(List) list_3c7b2e\n\n        out(x: 1020, y: -121, name: \"output\") property(Bool) output_5c8c4f\n\n        instance(x: -105, y: -164, name: \"is sublist\") filter_1a6d8f root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: 15, name: \"current\") property(List) current_9c7e5\n            in(x: -23, y: 80, name: \"_index\") property(Number) _index_1f0d8\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_2b6a3\n\n            instance(x: 226, y: 56) contains_7c5e4 root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_8f1d9 root.Std_k98ojb.Logic.NotEqual {}\n            sublist_1a9d6f -> contains_7c5e4.list\n            list_3c7b2e.slice(_index_1f0d8, _index_1f0d8 + sublist_1a9d6f.length) -> contains_7c5e4.item\n            contains_7c5e4.is_contained -> notequal_8f1d9.left\n            0 -> notequal_8f1d9.right\n            notequal_8f1d9.result -> output_2b6a3\n        } -> filter_1a6d8f.handler\n        list_3c7b2e.slice(0, list_3c7b2e.length - sublist_1a9d6f.length + 1) -> filter_1a6d8f.items\n        filter_1a6d8f.output_list.notEmpty -> output_5c8c4f\n    }\n\n    \n\n    instance(x: -83, y: -7) is_sublist_2b0e9 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 2, name: \"list\") property(List) list_3a1f9e\n        in(x: -281, y: -225, name: \"execute\") trigger() execute_5c7d8b\n\n        out(x: 1226, y: 29, name: \"continue\") trigger() continue_e2c4ee\n        out(x: 1213, y: 148, name: \"output\") property(Number) output_1e0a1f\n\n        instance(x: -5, y: -120) for_9b7d8f root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_4c6c3d\") getter_4c6c3d = index\n        setter(x: 780, y: -125, name: \"setter_e9a7e1\") setter_e9a7e1 = index\n        instance(x: 465, y: 5) ifexpression_8f0b9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        list_3a1f9e -> for_9b7d8f.items\n        execute_5c7d8b -> setter_e9a7e1.execute\n        0 -> setter_e9a7e1.new_value\n        getter_4c6c3d.value -> output_1e0a1f\n        for_9b7d8f.done -> continue_e2c4ee\n        setter_e9a7e1.continue -> for_9b7d8f.reset\n        for_9b7d8f.onItem -> ifexpression_8f0b9f.execute\n        for_9b7d8f.index -> ifexpression_8f0b9f.gen_0\n        for_9b7d8f.item -> ifexpression_8f0b9f.gen_1\n        ifexpression_8f0b9f.then -> setter_e9a7e1.execute\n        for_9b7d8f.index -> setter_e9a7e1.new_value\n        ifexpression_8f0b9f.else -> continue_e2c4ee\n    }\n\n    \n\n    instance(x: -207, y: 3) find_missing_5c6f4f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 2, name: \"list\") property(List) list_1a9f8e\n        in(x: -306, y: -226, name: \"execute\") trigger() execute_e5b7c0\n\n        out(x: 1043, y: -228, name: \"continue\") trigger() continue_4d2f7e\n        out(x: 1036, y: 154, name: \"output\") property(Number) output_1a8f7e\n\n        instance(x: 0, y: 0) for_3c9b9f root.Std_k98ojb.Std.For {}\n        getter(x: -140, y: 170, name: \"getter_e4d6f5\") getter_e4d6f5 = index\n        setter(x: 750, y: -150, name: \"setter_1e8a7c\") setter_1e8a7c = index\n        instance(x: 451, y: -226) ifexpression_a9b3ea root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_1a9f8e -> for_3c9b9f.items\n        execute_e5b7c0 -> for_3c9b9f.trigger\n        getter_e4d6f5.value -> output_1a8f7e\n        for_3c9b9f.done -> continue_4d2f7e\n        setter_1e8a7c.continue -> continue_4d2f7e\n        ifexpression_a9b3ea.then -> setter_1e8a7c.execute\n        for_3c9b9f.onItem -> ifexpression_a9b3ea.execute\n        for_3c9b9f.index -> ifexpression_a9b3ea.gen_0\n        for_3c9b9f.item -> ifexpression_a9b3ea.gen_1\n        setter_1e8a7c.new_value -> output_1a8f7e\n        1 -> setter_1e8a7c.new_value\n        ifexpression_a9b3ea.else -> for_3c9b9f.next\n    }\n\n    \n\n    instance(x: -4, y: 120) find_missing_5d6c2f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 0, name: \"list\") property(List) list_3e9f8a\n        in(x: -281, y: -221, name: \"execute\") trigger() execute_1b2d5c\n\n        out(x: 1024, y: -219, name: \"continue\") trigger() continue_7a0f7e\n        out(x: 1016, y: 40, name: \"output\") property(Number) output_9b8c3f\n\n        instance(x: 0, y: 0) for_1d5c2f root.Std_k98ojb.Std.For {}\n        getter(x: -133, y: 41, name: \"getter_e6e4a7\") getter_e6e4a7 = index\n        setter(x: 776, y: -152, name: \"setter_1d5c2f\") setter_1d5c2f = index\n        instance(x: 0, y: 0) ifexpression_8b3c7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index != current\"\n        }\n        getter(x: -0, y: -121, name: \"getter_e6e4a7\") getter_a9d1f2 = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_5b3b8e = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -275, y: -35, name: \"setter_9d4f1c\") setter_a6a7eb = index\n        list_3e9f8a -> for_1d5c2f.items\n        execute_1b2d5c -> setter_a6a7eb.execute\n        0 -> setter_a6a7eb.new_value\n        getter_e6e4a7.value -> output_9b8c3f\n        for_1d5c2f.done -> continue_7a0f7e\n        ifexpression_8b3c7e.then -> setter_5b3b8e.execute\n        for_1d5c2f.onItem -> ifexpression_8b3c7e.execute\n        getter_a9d1f2.value -> ifexpression_8b3c7e.gen_0\n        for_1d5c2f.item -> ifexpression_8b3c7e.gen_1\n        setter_5b3b8e.continue -> continue_7a0f7e\n        for_1d5c2f.index -> setter_5b3b8e.new_value\n        ifexpression_8b3c7e.else -> for_1d5c2f.next\n    }\n\n    \n\n    instance(x: -17, y: 119) find_missing_9a4c6c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -278, y: 1, name: \"list\") property(List) list_2f3b5e\n        in(x: -287, y: -225, name: \"execute\") trigger() execute_ea9c8d\n\n        out(x: 1020, y: -229, name: \"continue\") trigger() continue_1c7e6e\n        out(x: 1014, y: 195, name: \"output\") property(Number) output_3b2f8f\n\n        instance(x: 341, y: 60) for_9a0d5e root.Std_k98ojb.Std.For {}\n        getter(x: 502, y: 166, name: \"getter_e7c1ec\") getter_e7c1ec = index\n        setter(x: 780, y: -125, name: \"setter_6f3a8d\") setter_6f3a8d = index\n        instance(x: 465, y: 5) ifexpression_9e2b4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        getter(x: -186, y: -246, name: \"getter_7f1d8c\") getter_7f1d8c = index\n        setter(x: -187, y: -246, name: \"setter_9e5b3a\") setter_9e5b3a = index\n        list_2f3b5e -> for_9a0d5e.items\n        execute_ea9c8d -> setter_9e5b3a.execute\n        1 -> setter_9e5b3a.new_value\n        getter_7f1d8c.value -> ifexpression_9e2b4e.gen_0\n        for_9a0d5e.item -> ifexpression_9e2b4e.gen_1\n        for_9a0d5e.onItem -> ifexpression_9e2b4e.execute\n        ifexpression_9e2b4e.then -> setter_6f3a8d.execute\n        getter_e7f1ec.value -> output_3b2f8f\n        for_9a0d5e.index -> setter_6f3a8d.new_value\n        for_9a0d5e.done -> continue_1c7e6e\n        ifexpression_9e2b4e.else -> for_9a0d5e.next\n        setter_9e5b3a.continue -> for_9a0d5e.reset\n        setter_6f3a8d.continue -> for_9a0d5e.next\n    }\n\n    \n\n    instance(x: -203, y: -53) find_missing_1c7f2e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -305, y: 2, name: \"list\") property(List) list_9e6b5f\n        in(x: -322, y: -224, name: \"execute\") trigger() execute_1c8a3d\n\n        out(x: 1040, y: -223, name: \"continue\") trigger() continue_4b2c9f\n        out(x: 1027, y: 57, name: \"output\") property(Number) output_e6e9ae\n\n        instance(x: 0, y: 0) for_1d3a8f root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 160, name: \"getter_5c2c4e\") getter_5c2c4e = index\n        setter(x: 677, y: -157, name: \"setter_e1a8f9\") setter_e1a8f9 = index\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 0, y: 0) if_7c284f root.Std_k98ojb.Std.If {}\n        getter(x: 0, y: 0, name: \"getter_5c2c4e\") getter_8d3a6e = index\n        setter(x: -0, y: -121, name: \"setter_e1a8f9\") setter_7b7b2e = index\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        list_9e6b5f -> for_1d3a8f.items\n        execute_1c8a3d -> setter_7b7b2e.execute\n        0 -> setter_7b7b2e.new_value\n        getter_8d3a6e.value -> output_e6e9ae\n        for_1d3a8f.onItem -> if_7c284f.execute\n        for_1d3a8f.index -> if_7c284f.predicate\n        list_9e6b5f -> getat_ce2a48.list\n        getter_5c2c4e.value -> getat_ce2a48.index\n        0 -> if_7c284f.then\n        for_1d3a8f.item -> getat_ce2a48.itemAtIndex\n        getat_ce2a48.itemAtIndex -> if_7c284f.else\n        if_7c284f.then -> setter_e1a8f9.execute\n        for_1d3a8f.index -> setter_e1a8f9.new_value\n        if_7c284f.else -> for_1d3a8f.next\n        setter_e1a8f9.continue -> continue_4b2c9f\n        for_1d3a8f.done -> continue_4b2c9f\n        setter_7b7b2e.continue -> for_1d3a8f.reset\n    }\n\n    \n\n    instance(x: -50, y: 127) find_missing_6c5f8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 1, name: \"list\") property(List) list_3a8f5e\n        in(x: -308, y: -221, name: \"execute\") trigger() execute_e9c7b0\n\n        out(x: 1046, y: -225, name: \"continue\") trigger() continue_4d1b8f\n        out(x: 1035, y: 155, name: \"output\") property(Number) output_3e7a2e\n\n        instance(x: 0, y: 0) for_6c7a9d root.Std_k98ojb.Std.For {}\n        getter(x: -144, y: 160, name: \"getter_8f4d5f\") getter_8f4d5f = index\n        setter(x: 679, y: -313, name: \"setter_1c9a3e\") setter_1c9a3e = index\n        instance(x: 0, y: 0) ifexpression_eb7f2f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: -277, y: -20, name: \"getter_8d9a4c\") getter_8d9a4c = previous\n        setter(x: -276, y: -121, name: \"setter_6f7b2e\") setter_6f7b2e = previous\n        instance(x: -277, y: -35) getat_3b1b0e root.Std_k98ojb.List.GetAt {}\n        ifexpression_eb7f2f.else -> continue_4d1b8f\n        getter_8f4d5f.value -> output_3e7a2e\n        ifexpression_eb7f2f.then -> setter_1c9a3e.execute\n        list_3a8f5e -> for_6c7a9d.items\n        for_6c7a9d.item -> ifexpression_eb7f2f.gen_2\n        for_6c7a9d.index -> ifexpression_eb7f2f.gen_0\n        getter_8d9a4c.value -> ifexpression_eb7f2f.gen_1\n        for_6c7a9d.onItem -> ifexpression_eb7f2f.execute\n        for_6c7a9d.done -> continue_4d1b8f\n        for_6c7a9d.item -> setter_1c9a3e.new_value\n        list_3a8f5e -> getat_3b1b0e.list\n        0 -> getat_3b1b0e.index\n        getat_3b1b0e.itemAtIndex -> setter_6f7b2e.new_value\n        execute_e9c7b0 -> setter_6f7b2e.execute\n        setter_6f7b2e.continue -> for_6c7a9d.reset\n        setter_1c9a3e.continue -> for_6c7a9d.next\n    }\n\n    \n\n    instance(x: -63, y: 119) find_missing_5e4a1e root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 2, name: \"list\") property(List) list_9f6a8e\n        in(x: -306, y: -228, name: \"execute\") trigger() execute_7b3c5d\n\n        out(x: 1040, y: -225, name: \"continue\") trigger() continue_1f4b9f\n        out(x: 1032, y: 147, name: \"output\") property(Number) output_8e6a5e\n\n        instance(x: 0, y: 0) for_3c9d7e root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 0, name: \"getter_1f4a2f\") getter_1f4a2f = index\n        setter(x: -186, y: -247, name: \"setter_9d8e7c\") setter_9d8e7c = index\n        instance(x: 339, y: 61) ifexpression_6b3a0c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x != y\"\n        }\n        list_9f6a8e -> for_3c9d7e.items\n        execute_7b3c5d -> setter_9d8e7c.execute\n        1 -> setter_9d8e7c.new_value\n        getter_1f4a2f.value -> output_8e6a5e\n        for_3c9d7e.done -> continue_1f4b9f\n        setter_9d8e7c.continue -> for_3c9d7e.reset\n        for_3c9d7e.onItem -> ifexpression_6b3a0c.execute\n        for_3c9d7e.index -> ifexpression_6b3a0c.gen_0\n        1 + getter_1f4a2f.value -> ifexpression_6b3a0c.gen_1\n        for_3c9d7e.item -> ifexpression_6b3a0c.gen_2\n        ifexpression_6b3a0c.then -> continue_1f4b9f\n        ifexpression_6b3a0c.else -> for_3c9d7e.next\n    }\n\n    \n\n    instance(x: -175, y: 5) find_missing_8c9c2e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_3a9f8e\n        in(x: -286, y: -240, name: \"execute\") trigger() execute_1b2d5c\n\n        out(x: 593, y: -242, name: \"continue\") trigger() continue_7f0f4e\n        out(x: 595, y: 17, name: \"output\") property(Number) output_9a8a6f\n\n        instance(x: 0, y: 0) for_3b2c5d root.Std_k98ojb.Std.For {}\n        getter(x: -143, y: 111, name: \"getter_1e7b4e\") getter_1e7b4e = index\n        setter(x: 117, y: -268, name: \"setter_9f8a5c\") setter_9f8a5c = index\n        instance(x: 309, y: 35) ifexpression_e6d3ed root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_9f7c8e\") getter_9f7c8e = previous\n        setter(x: 679, y: -313, name: \"setter_6a5b4d\") setter_6a5b4d = previous\n        instance(x: -275, y: -35) getat_3f0b1e root.Std_k98ojb.List.GetAt {}\n        ifexpression_e6d3ed.else -> continue_7f0f4e\n        ifexpression_e6d3ed.then -> setter_9f8a5c.execute\n        list_3a9f8e -> for_3b2c5d.items\n        for_3b2c5d.item -> ifexpression_e6d3ed.gen_2\n        for_3b2c5d.index -> ifexpression_e6d3ed.gen_0\n        getter_1e7b4e.value -> output_9a8a6f\n        getter_9f7c8e.value -> ifexpression_e6d3ed.gen_1\n        for_3b2c5d.onItem -> ifexpression_e6d3ed.execute\n        for_3b2c5d.done -> continue_7f0f4e\n        for_3b2c5d.item -> setter_9f8a5c.new_value\n        list_3a9f8e -> getat_3f0b1e.list\n        0 -> getat_3f0b1e.index\n        getat_3f0b1e.itemAtIndex -> setter_6a5b4d.new_value\n        execute_1b2d5c -> setter_6a5b4d.execute\n        setter_6a5b4d.continue -> for_3b2c5d.reset\n        setter_9f8a5c.continue -> for_3b2c5d.next\n    }\n\n    \n\n    instance(x: -50, y: 127) find_missing_1e0f8e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -271, y: 2, name: \"list\") property(List) list_3e8b1f\n        in(x: -270, y: -226, name: \"execute\") trigger() execute_9c6d4a\n\n        out(x: 1017, y: -227, name: \"continue\") trigger() continue_e2f5ec\n        out(x: 1008, y: 73, name: \"output\") property(Number) output_3b0e9e\n\n        instance(x: 0, y: 0) for_1c4d6a root.Std_k98ojb.Std.For {}\n        getter(x: -150, y: 119, name: \"getter_e5f8ea\") getter_e5f8ea = index\n        setter(x: 750, y: -121, name: \"setter_7e9c1d\") setter_7e9c1d = index\n        instance(x: 0, y: 0) ifexpression_a6a3b4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -0, y: -121, name: \"getter_9d4f1c\") getter_9d4f1c = previous\n        setter(x: -275, y: -35, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_a6a3b4.then -> continue_e2f5ec\n        list_3e8b1f -> for_1c4d6a.items\n        execute_9c6d4a -> setter_38e107.execute\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        getter_e5f8ea.value -> ifexpression_a6a3b4.gen_0\n        for_1c4d6a.onItem -> ifexpression_a6a3b4.execute\n        for_1c4d6a.index -> ifexpression_a6a3b4.gen_2\n        getter_9d4f1c.value -> ifexpression_a6a3b4.gen_1\n        list_3e8b1f -> getat_ce2a48.list\n        for_1c4d6a.done -> continue_e2f5ec\n        setter_38e107.continue -> for_1c4d6a.reset\n        ifexpression_a6a3b4.else -> setter_7e9c1d.execute\n        for_1c4d6a.item -> setter_7e9c1d.new_value\n        for_1c4d6a.index -> setter_7e9c1d.new_value\n        ifexpression_a6a3b4.value -> output_3b0e9e\n        setter_7e9c1d.continue -> continue_e2f5ec\n    }\n\n    \n\n    instance(x: -35, y: 129) find_missing_8e8f4f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_9f8d1e\n        in(x: -300, y: -220, name: \"execute\") trigger() execute_ea7c5b\n\n        out(x: 1066, y: -217, name: \"continue\") trigger() continue_3b2f4f\n        out(x: 1058, y: 77, name: \"output\") property(Number) output_9e0d1e\n\n        instance(x: 0, y: 0) for_7a6c1e root.Std_k98ojb.Std.For {}\n        getter(x: -0, y: 0, name: \"getter_3f8c2e\") getter_3f8c2e = index\n        setter(x: 0, y: 0, name: \"setter_7d5a1e\") setter_7d5a1e = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -0, y: -121, name: \"getter_9d4f1c\") getter_8e5a7e = previous\n        instance(x: 321, y: -20) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        list_9f8d1e -> for_7a6c1e.items\n        execute_ea7c5b -> getter_3f8c2e.execute\n        -1 -> getter_3f8c2e.new_value\n        for_7a6c1e.onItem -> ifexpression_875761.execute\n        list_9f8d1e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_b280eb.new_value\n        for_7a6c1e.done -> continue_3b2f4f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        for_7a6c1e.index -> setter_9d4f1c.new_value\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_7a6c1e.item -> ifexpression_875761.gen_2\n        for_7a6c1e.index -> ifexpression_875761.gen_0\n        setter_9d4f1c.continue -> continue_3b2f4f\n        getter_8e5a7e.value -> output_9e0d1e\n        ifexpression_875761.else -> for_7a6c1e.next\n        ifexpression_875761.then -> setter_7d5a1e.execute\n        for_7a6c1e.index -> setter_7d5a1e.new_value\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_7a6c1e.item -> ifexpression_875761.gen_2\n        for_7a6c1e.index -> ifexpression_875761.gen_0\n        setter_7d5a1e.continue -> for_7a6c1e.next\n    }\n\n    \n\n    instance(x: -53, y: 159) find_missing_9f8d1e root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -228, y: 1, name: \"input\") property(String) input_9e3f8a\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7b4c5d\n\n        instance(x: 0, y: 0) replace_6e8f0f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -1) replace_3a9c8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: -2) replace_7d5f4f root.Std_k98ojb.Strings.Replace {}\n        input_9e3f8a -> replace_6e8f0f.input\n        \" \" -> replace_6e8f0f.search\n        \":\" -> replace_6e8f0f.replace\n        replace_6e8f0f.output -> replace_3a9c8e.input\n        \",\" -> replace_3a9c8e.search\n        \":\" -> replace_3a9c8e.replace\n        replace_3a9c8e.output -> replace_7d5f4f.input\n        \".\" -> replace_7d5f4f.search\n        \":\" -> replace_7d5f4f.replace\n        replace_7d5f4f.output -> output_7b4c5d\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9e8a6f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 0, name: \"input\") property(String) input_9f1a3d\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_8c7b4e\n\n        instance(x: 94, y: -105) replace_5f1e0e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: -22) replace_3a9d6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 92, y: 12) replace_4e7b2d root.Std_k98ojb.Strings.Replace {}\n        input_9f1a3d -> replace_spaces_commas_dots.input\n        \" \" -> replace_5f1e0e.search\n        \":\" -> replace_5f1e0e.replace\n        replace_5f1e0e.output -> replace_3a9d6c.input\n        \",\" -> replace_3a9d6c.search\n        \":\" -> replace_3a9d6c.replace\n        replace_3a9d6c.output -> replace_4e7b2d.input\n        \".\" -> replace_4e7b2d.search\n        \":\" -> replace_4e7b2d.replace\n        replace_4e7b2d.output -> output_8c7b4e\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_e5a3f1 root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -227, y: 44, name: \"input\") property(String) input_1f0a8e\n\n        out(x: 744, y: 146, name: \"output\") property(String) output_9b7c6d\n\n        instance(x: 52, y: 47, name: \"replace_spaces\") replace_spaces_c5e2a4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replace_commas\") replace_commas_9f3c7d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replace_dots_1a0e2a root.Std_k98ojb.Strings.Replace {}\n        input_1f0a8e -> replace_spaces_c5e2a4.input\n        \" \" -> replace_spaces_c5e2a4.search\n        \":\" -> replace_spaces_c5e2a4.replace\n        replace_spaces_c5e2a4.output -> replace_commas_9f3c7d.input\n        \",\" -> replace_commas_9f3c7d.search\n        \":\" -> replace_commas_9f3c7d.replace\n        replace_commas_9f3c7d.output -> replace_dots_1a0e2a.input\n        \".\" -> replace_dots_1a0e2a.search\n        \":\" -> replace_dots_1a0e2a.replace\n        replace_dots_1a0e2a.output -> output_9b7c6d\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_spaces_commas_dots_8f3d5f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -228, y: 1, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_3f7c6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d5a8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2b4d1d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3f7c6e.input\n        \" \" -> replace_3f7c6e.search\n        \":\" -> replace_3f7c6e.replace\n        replace_3f7c6e.output -> replace_9d5a8f.input\n        \",\" -> replace_9d5a8f.search\n        \":\" -> replace_9d5a8f.replace\n        replace_9d5a8f.output -> replace_2b4d1d.input\n        \".\" -> replace_2b4d1d.search\n        \":\" -> replace_2b4d1d.replace\n        replace_2b4d1d.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7c9a8f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -228, y: 0, name: \"input\") property(String) input_1a3b2f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c7e8d\n\n        instance(x: 0, y: 1) replace_4e9b8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a3f2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_5d9f2a root.Std_k98ojb.Strings.Replace {}\n        input_1a3b2f -> replace_4e9b8f.input\n        \" \" -> replace_4e9b8f.search\n        \":\" -> replace_4e9b8f.replace\n        replace_4e9b8f.output -> replace_6a3f2c.input\n        \",\" -> replace_6a3f2c.search\n        \":\" -> replace_6a3f2c.replace\n        replace_6a3f2c.output -> replace_5d9f2a.input\n        \".\" -> replace_5d9f2a.search\n        \":\" -> replace_5d9f2a.replace\n        replace_5d9f2a.output -> output_5c7e8d\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_spaces_commas_dots_1b4f6f root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -232, y: 0, name: \"string\") property(String) input_1d8f2a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c9b6e\n\n        instance(x: 0, y: 1) replace_4a3a7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_1d8b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_c9e5c6 root.Std_k98ojb.Strings.Replace {}\n        input_1d8f2a -> replace_4a3a7f.input\n        \" \" -> replace_4a3a7f.search\n        \":\" -> replace_4a3a7f.replace\n        replace_4a3a7f.output -> replace_1d8b2f.input\n        \",\" -> replace_1d8b2f.search\n        \":\" -> replace_1d8b2f.replace\n        replace_1d8b2f.output -> replace_c9e5c6.input\n        \".\" -> replace_c9e5c6.search\n        \":\" -> replace_c9e5c6.replace\n        replace_c9e5c6.output -> output_5c9b6e\n    }\n\n    \n\n    instance(x: 81, y: 52) Replace_e54b7f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -227, y: 44, name: \"input\") property(String) input_0\n        out(x: 744, y: 146, name: \"output\") property(String) output_1\n\n        instance(x: 52, y: 47, name: \"replace_comma\") replace_node root.Std_k98ojb.Strings.Replace {}\n        instance(x: 69, y: 185, name: \"replace_dot\") replace_node_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 279, y: 73) replace_space root.Std_k98ojb.Strings.Replace {}\n        instance(x: 516, y: 144) replace_colon root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_comma.input\n        \",\" -> replace_comma.search\n        \":\" -> replace_comma.replace\n        replace_comma.output -> replace_dot.input\n        \".\" -> replace_dot.search\n        \":\" -> replace_dot.replace\n        replace_dot.output -> replace_space.input\n        \" \" -> replace_space.search\n        \":\" -> replace_space.replace\n        replace_space.output -> replace_colon.input\n        \":\" -> replace_colon.search\n        \"\" -> replace_colon.replace\n        replace_colon.output -> output_1\n    }\n\n    \n\n    instance(x: -280, y: 136) replace_all_2c9d8f root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace {\n        in(x: -199, y: 2, name: \"input\") property(String) input_0\n        out(x: 505, y: 77, name: \"output\") property(String) output_1\n\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_63c248 -> map_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            x_8ee839 -> pow_584bfd.x\n            3 -> pow_584bfd.y\n            pow_584bfd.result -> _7dd980\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> result_cbb7bd\n\n        instance(x: 94, y: -105) replace_2f1a8e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_2f1a8e.input\n        \" ,.\" -> replace_2f1a8e.search\n        \":\" -> replace_2f1a8e.replace\n        replace_2f1a8e.output -> output_1\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_b9ff6b root.main.replace {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -228, y: 1, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 0) replace_5e9f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_7d3a1f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 0) replace_d6f2ea root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e9f8c.input\n        \" \" -> replace_5e9f8c.search\n        \":\" -> replace_5e9f8c.replace\n        replace_5e9f8c.output -> replace_7d3a1f.input\n        \",\" -> replace_7d3a1f.search\n        \":\" -> replace_7d3a1f.replace\n        replace_7d3a1f.output -> replace_d6f2ea.input\n        \".\" -> replace_d6f2ea.search\n        \":\" -> replace_d6f2ea.replace\n        replace_d6f2ea.output -> output_0\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_spaces_commas_dots_9e3d8c root.main.replace_spaces_commas_dots {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3f7b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a5d6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2b1f4f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3f7b8c.input\n        \" \" -> replace_3f7b8c.search\n        \":\" -> replace_3f7b8c.replace\n        replace_3f7b8c.output -> replace_9a5d6e.input\n        \",\" -> replace_9a5d6e.search\n        \":\" -> replace_9a5d6e.replace\n        replace_9a5d6e.output -> replace_2b1f4f.input\n        \".\" -> replace_2b1f4f.search\n        \":\" -> replace_2b1f4f.replace\n        replace_2b1f4f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9c7a8e root.main.replace_spaces_commas_dots {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_3f8a9e\n\n        out(x: 555, y: 0, name: \"output\") property(Bool) output_5c7d6b\n\n        instance(x: 0, y: 2) characters_4b1e7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 263, y: -3) length_8f9a4f root.Std_k98ojb.List.Length {}\n        instance(x: 479, y: 5) getat_6d0f2f root.Std_k98ojb.List.GetAt {}\n        instance(x: 702, y: 1) equal_7c7e3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 926, y: -4) reduce_9a5b8f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        characters_4b1e7c.characters -> length_8f9a4f.list\n        string_3f8a9e -> characters_4b1e7c.input\n        0 -> getat_6d0f2f.index\n        characters_4b1e7c.characters -> getat_6d0f2f.list\n        length_8f9a4f.length -> reduce_9a5b8f.count\n        equal_7c7e3c.left -> reduce_9a5b8f.previous\n        equal_7c7e3c.right -> reduce_9a5b8f.current\n        getat_6d0f2f.itemAtIndex -> equal_7c7e3c.left\n        1 -> equal_7c7e3c.index\n        equal_7c7e3c.result -> reduce_9a5b8f.new_value\n        true -> reduce_9a5b8f.initial\n        reduce_9a5b8f.output -> output_5c7d6b\n    }\n\n    \n\n    instance(x: -16, y: 18) check_same_f3e1f4 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -288, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 530, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3c8a9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: -1) setintersection_7e5d6a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 530, y: 2) length_0a4c3f root.Std_k98ojb.List.Length {}\n        characters_3c8a9f.characters -> setintersection_7e5d6a.left\n        characters_3c8a9f.characters -> setintersection_7e5d6a.right\n        1 -> length_0a4c3f.list\n        setintersection_7e5d6a.intersect -> length_0a4c3f.list\n        length_0a4c3f.length -> output_1\n        string_1 -> characters_3c8a9f.input\n    }\n\n    \n\n    instance(x: -10, y: 40) check_same_2e5b7d root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 540, y: 2, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_3a4c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 270, y: -1) length_5d7e6c root.Std_k98ojb.List.Length {}\n        instance(x: 480, y: 2) ifexpression_c8b7f0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 160, y: 30, name: \"getter_1\") getter_1 = previous\n        setter(x: 495, y: -29, name: \"setter_1\") setter_1 = previous\n        instance(x: 140, y: -19) for_9e7f2c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -119, name: \"setter_1\") setter_2 = previous\n        instance(x: -265, y: -34) getat_8d5a4f root.Std_k98ojb.List.GetAt {}\n        ifexpression_c8b7f0.else -> output_1\n        ifexpression_c8b7f0.value -> output_1\n        ifexpression_c8b7f0.then -> setter_1.execute\n        characters_3a4c9f.characters -> for_9e7f2c.items\n        for_9e7f2c.item -> ifexpression_c8b7f0.gen_2\n        for_9e7f2c.index -> ifexpression_c8b7f0.gen_0\n        getter_1.value -> ifexpression_c8b7f0.gen_1\n        for_9e7f2c.onItem -> ifexpression_c8b7f0.execute\n        for_9e7f2c.done -> output_1\n        for_9e7f2c.item -> setter_1.new_value\n        characters_3a4c9f.characters -> getat_8d5a4f.list\n        0 -> getat_8d5a4f.index\n        getat_8d5a4f.itemAtIndex -> setter_2.new_value\n        input_1 -> characters_3a4c9f.input\n        length_5d7e6c.length -> ifexpression_c8b7f0.gen_1\n        characters_3a4c9f.characters -> length_5d7e6c.list\n        setter_2.continue -> for_9e7f2c.reset\n        setter_1.continue -> for_9e7f2c.next\n    }\n\n    \n\n    instance(x: 44, y: -19) check_same_3b8a4c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -283, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 593, y: 2, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 3) characters_5f8b9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 1) all_equal_7e4a6d root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -114, y: 34, name: \"current\") property(String) current_0\n                in(x: -113, y: 78, name: \"_index\") property(Number) _index_0\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 89, y: 29) equal_2a9c8f root.Std_k98ojb.Logic.Equal {}\n                current_0 -> equal_2a9c8f.left\n                characters_5f8b9c.characters[_index_0] -> equal_2a9c8f.right\n                equal_2a9c8f.result -> bool_0\n            }\n        }\n        string_0 -> characters_5f8b9c.input\n        characters_5f8b9c.characters -> all_equal_7e4a6d.items\n        all_equal_7e4a6d.output_list.length == characters_5f8b9c.characters.length -> output_0\n    }\n\n    \n\n    instance(x: -55, y: 529) check_same_2c856f root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 560, y: 3, name: \"output\") property(Bool) output_1\n\n        instance(x: 0, y: 0) characters_5a9c6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -2) length_7e8d4c root.Std_k98ojb.List.Length {}\n        instance(x: 496, y: 1) getat_3a7f2c root.Std_k98ojb.List.GetAt {}\n        instance(x: 719, y: 0) equal_5b9c5c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 943, y: -4) reduce_6e1d7f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        string_1 -> characters_5a9c6f.input\n        characters_5a9c6f.characters -> length_7e8d4c.list\n        0 -> getat_3a7f2c.index\n        characters_5a9c6f.characters -> getat_3a7f2c.list\n        getat_3a7f2c.itemAtIndex -> equal_5b9c5c.left\n        string_1 -> equal_5b9c5c.right\n        equal_5b9c5c.result -> reduce_6e1d7f.accumulatedValue\n        characters_5a9c6f.characters -> reduce_6e1d7f.items\n        0 -> reduce_6e1d7f.initialValue\n        length_7e8d4c.length -> reduce_6e1d7f.listLength\n        reduce_6e1d7f.result -> output_1\n    }\n\n    \n\n    instance(x: -5, y: 9) check_same_f0a2b3 root.main.check_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 553, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 0) characters_7e8f4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: 0) length_6a3d5f root.Std_k98ojb.List.Length {}\n        instance(x: 481, y: -1) ifexpression_2e9b8f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 153, y: 29, name: \"getter_5a7d3c\") getter_5a7d3c = previous\n        setter(x: 399, y: -33, name: \"setter_9b1e4f\") setter_9b1e4f = previous\n        instance(x: 152, y: -35) for_0a8c6e root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -56, name: \"setter_9b1e4f\") setter_7d5b2f = previous\n        instance(x: -275, y: -71) getat_3a9c6c root.Std_k98ojb.List.GetAt {}\n        ifexpression_2e9b8f.else -> output_0\n        ifexpression_2e9b8f.value -> output_0\n        ifexpression_2e9b8f.then -> setter_9b1e4f.execute\n        characters_7e8f4c.characters -> for_0a8c6e.items\n        for_0a8c6e.item -> ifexpression_2e9b8f.gen_2\n        for_0a8c6e.index -> ifexpression_2e9b8f.gen_0\n        getter_5a7d3c.value -> ifexpression_2e9b8f.gen_1\n        for_0a8c6e.onItem -> ifexpression_2e9b8f.execute\n        for_0a8c6e.done -> output_0\n        for_0a8c6e.item -> setter_9b1e4f.new_value\n        characters_7e8f4c.characters -> getat_3a9c6c.list\n        0 -> getat_3a9c6c.index\n        getat_3a9c6c.itemAtIndex -> setter_7d5b2f.new_value\n        input_0 -> characters_7e8f4c.input\n        length_6a3d5f.list -> for_0a8c6e.items\n        1 -> length_6a3d5f.list\n    }\n\n    \n\n    instance(x: -12, y: 18) is_same_2b1b9c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"string\") property(String) string_3a1f9e\n\n        out(x: 559, y: 2, name: \"output\") property(Bool) output_8b7c4d\n\n        instance(x: 0, y: 0) characters_c5e6ea root.Std_k98ojb.Strings.Characters {}\n        instance(x: 272, y: -1) length_9a3f2f root.Std_k98ojb.List.Length {}\n        instance(x: 488, y: 0) getat_8d7c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 713, y: 0) equal_5e4f1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 927, y: -2) reduce_9a3a5f root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"it == previous\"\n        }\n        characters_c5e6ea.characters -> length_9a3f2f.list\n        string_3a1f9e -> characters_c5e6ea.input\n        0 -> getat_8d7c6f.index\n        characters_c5e6ea.characters -> getat_8d7c6f.list\n        reduce_9a3a5f.items -> characters_c5e6ea.characters\n        length_9a3f2f.length -> getat_8d7c6f.index\n        1 -> equal_5e4f1f.right\n        getat_8d7c6f.itemAtIndex -> equal_5e4f1f.left\n        reduce_9a3a5f.initialValue -> equal_5e4f1f.gen_0\n        equal_5e4f1f.result -> reduce_9a3a5f.previous\n        equal_5e4f1f.result -> reduce_9a3a5f.predicate\n        characters_c5e6ea.characters -> reduce_9a3a5f.items\n        reduce_9a3a5f.output -> output_8b7c4d\n    }\n\n    \n\n    instance(x: -17, y: 30) is_same_f0e2b1 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 1) characters_3e7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.List.Contains {}\n        instance(x: -50, y: 2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        characters_3e7f9c.characters -> contains_d42dce.list\n        \"a\" -> contains_d42dce.item\n        characters_3e7f9c.characters -> length_6e87f2.list\n        instance(x: 0, y: -1) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"length == 0 || (contains && index > 0)\"\n        }\n        contains_d42dce.result -> ifexpression_875761.gen_1\n        length_6e87f2.length -> ifexpression_875761.gen_0\n        characters_3e7f9c.characters -> ifexpression_875761.gen_2\n        instance(x: -50, y: -33) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 188, y: -35) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -0, y: -61) not_75283f root.Std_k98ojb.Logic.Not {}\n        ifexpression_875761.else -> result_0\n        ifexpression_875761.value -> getat_ce2a48.index\n        input_0 -> characters_3e7f9c.input\n        contains_d42dce.is_contained -> equal_f89569.left\n        \"a\" -> equal_f89569.right\n        getat_ce2a48.itemAtIndex -> equal_f89569.gen_1\n        ifexpression_875761.then -> not_75283f.execute\n        equal_f89569.result -> not_75283f.input\n        not_75283f.result -> result_0\n    }\n\n    \n\n    instance(x: -67, y: 52) is_same_7e9c1d root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -286, y: 1, name: \"string\") property(String) string_0\n\n        out(x: 533, y: 2, name: \"result\") property(Bool) result_0\n\n        instance(x: 0, y: 3) characters_5e7f9c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 266, y: 1) all_equal_4a8d9f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_0\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n                instance(x: 89, y: 29) equal_1c9b8f root.Std_k98ojb.Logic.Equal {}\n                characters_5e7f9c.characters[0] -> equal_1c9b8f.left\n                elem_0 -> equal_1c9b8f.right\n                equal_1c9b8f.result -> bool_0\n            }\n        }\n        string_0 -> characters_5e7f9c.input\n        characters_5e7f9c.characters -> all_equal_4a8d9f.items\n        func() {\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 89, y: 29) length_1b3c2e root.Std_k98ojb.List.Length {}\n            1 -> length_1b3c2e.list\n            length_1b3c2e.length -> bool_0\n        } -> all_equal_4a8d9f.handler\n        all_equal_4a8d9f.output_list.IsEmpty -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_7b6c9f root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1\n\n        out(x: 533, y: -2, name: \"result\") property(Bool) result_1\n\n        instance(x: 0, y: 1) characters_5b9f7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) setintersection_4a8e6d root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 490, y: -2) length_1a3b5f root.Std_k98ojb.List.Length {}\n        characters_5b9f7c.characters -> setintersection_4a8e6d.left\n        characters_5b9f7c.characters -> setintersection_4a8e6d.right\n        1 -> length_1a3b5f.list\n        setintersection_4a8e6d.intersect -> length_1a3b5f.list\n        length_1a3b5f.length -> result_1\n        string_1 -> characters_5b9f7c.input\n    }\n\n    \n\n    instance(x: 81, y: 52) check_same_4e6d0c root.main.check_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count number of digits in a given string.\") CountDigits {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) isnumeric_1088d5 root.Std_k98ojb.Strings.IsNumeric {}\n            isnumeric_1088d5.result -> bool_af09a7\n            elem_9f6850 -> isnumeric_1088d5.input\n        } -> filter_7b3b7b.handler\n        input_ai -> filter_7b3b7b.items\n        filter_7b3b7b.output_list.length -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) count_digits_59bc6e root.main.CountDigits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9c2d4e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9c2d4e.second\n        expression_2d6da6.result -> pow_9c2d4e.first\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_9c2d4e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_9e5c0d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_9e5c0d.second\n        expression_2d6da6.result -> pow_9e5c0d.first\n        n_3a3116 -> mul_f892a4.first\n        pow_9e5c0d.result -> mul_f892a4.second\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_4e8c9d root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_4e8c9d.second\n        expression_2d6da6.result -> pow_4e8c9d.first\n        n_3a3116 -> mul_f892a4.first\n        pow_4e8c9d.result -> mul_f892a4.second\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_f892a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        data_cde0dc -> pow_f892a4.second\n        expression_2d6da6.result -> pow_f892a4.first\n        n_3a3116 -> pow_f892a4.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        add_64046c.result -> sum_365f7b\n        pow_f892a4.result -> add_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -100, y: 0, name: \"size\") property(Number) size_9e6a1f\n\n        out(x: 50, y: 0, name: \"surface_area\") property(Number) surface_area_7c2b3d\n\n        instance(x: 20, y: -10) mul_f8a4e5 root.Std_k98ojb.Math.Mul {}\n        instance(x: 20, y: 40) mul_1f0c6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 70, y: 30) mul_7d9f3f root.Std_k98ojb.Math.Mul {}\n        size_9e6a1f -> mul_f8a4e5.first\n        size_9e6a1f -> mul_f8a4e5.second\n        mul_f8a4e5.result -> mul_7d9f3f.first\n        6 -> mul_7d9f3f.second\n        mul_7d9f3f.result -> surface_area_7c2b3d\n        size_9e6a1f -> mul_1f0c6c.first\n        size_9e6a1f -> mul_1f0c6c.second\n    }\n\n    \n\n    instance(x: 50, y: -10, name: \"surface_area_cube\") surface_area_cube_7b8d5f root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 20, name: \"size\") property(Number) size_9e8f1a\n\n        out(x: 1166, y: 19, name: \"surface_area\") property(Number) surface_area_b0c7d2\n\n        instance(x: 16, y: -11) mul_f3b4e5 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 310, y: 71) data_1a9f6c  = 6\n        instance(x: 13, y: 68) pow_2d0a7f root.Std_k98ojb.Math.Pow {}\n        size_9e8f1a -> mul_f3b4e5.first\n        data_1a9f6c -> mul_f3b4e5.second\n        size_9e8f1a -> pow_2d0a7f.x\n        2 -> pow_2d0a7f.y\n        mul_f3b4e5.result -> surface_area_b0c7d2\n        pow_2d0a7f.result -> mul_f3b4e5.first\n    }\n\n    \n\n    instance(x: -20, y: -16) surface_area_cube_1c8c6c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        n_3a3116 -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"n*n\"\n        }\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -219, y: 56, name: \"side\") property(Number) side_3a3116\n\n        out(x: 571, y: 7, name: \"surface_area\") property(Number) surface_area_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        expression_instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        side_3a3116 -> mul_f892a4.first\n        side_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_9dcc3d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -333, y: 10, name: \"size\") property(Number) size_1f9a3d\n\n        out(x: 1056, y: 0, name: \"surface_area\") property(Number) surface_area_5c7b2e\n\n        instance(x: 12, y: -11) mul_f8c4b8 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 329, y: 53) data_e9f3a1  = 6\n        instance(x: 10, y: 54) expression_2d7e0f root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        mul_f8c4b8.result -> surface_area_5c7b2e\n        data_e9f3a1 -> mul_f8c4b8.first\n        expression_2d7e0f.result -> mul_f8c4b8.second\n        size_1f9a3d -> expression_2d7e0f.gen_0\n    }\n\n    \n\n    instance(x: 108, y: -20) surface_area_cube_6a5b6c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_9e3f1a\n\n        out(x: 656, y: 63, name: \"surface_area\") property(Number) surface_area_b2b7d4\n\n        instance(x: 94, y: 25) mul_5c6c8e root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 93, y: -101) mul_1f0d9a root.Std_k98ojb.Math.Mul {}\n        size_9e3f1a -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_5c6c8e.first\n        6 -> mul_5c6c8e.second\n        mul_5c6c8e.result -> surface_area_b2b7d4\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_a3f1a9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: 11, name: \"size\") property(Number) size_1a8d9f\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_3e5c6b\n\n        instance(x: 94, y: -105) mul_4e7f2f root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 93, y: 23) mul_1a8d9c root.Std_k98ojb.Math.Mul {}\n        size_1a8d9f -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_4e7f2f.first\n        size_1a8d9f -> mul_4e7f2f.second\n        mul_4e7f2f.result -> mul_1a8d9c.first\n        6 -> mul_1a8d9c.second\n        mul_1a8d9c.result -> surface_area_3e5c6b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_b9ff6b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -33, y: 0, name: \"side\") property(Number) side_8e9f1a\n\n        out(x: 46, y: 0, name: \"surface_area\") property(Number) surface_area_7c6d4b\n\n        instance(x: 15, y: -1) mul_3a2f5f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"side*side\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_3a2f5f.result -> div_64046c.first\n        expression_2d6da6.result -> mul_3a2f5f.second\n        side_8e9f1a -> mul_3a2f5f.first\n        side_8e9f1a -> expression_2d6da6.gen_0\n        div_64046c.result -> surface_area_7c6d4b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_3b9c0c root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -111, y: 15, name: \"size\") property(Number) size_8f9d1e\n\n        out(x: 1062, y: 7, name: \"surface_area\") property(Number) surface_area_3c6a5b\n\n        instance(x: 10, y: -12) mul_4a0f2c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 13, y: 137) expression_5e9d8f root.Std_k98ojb.Math.Expression {\n            expression: \"size * size\"\n        }\n        mul_4a0f2c.first -> expression_5e9d8f.gen_0\n        data_cde0dc -> mul_4a0f2c.second\n        expression_5e9d8f.result -> mul_4a0f2c.first\n        size_8f9d1e -> expression_5e9d8f.gen_0\n        mul_4a0f2c.result -> surface_area_3c6a5b\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_cube_a7c7e9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -300, y: 0, name: \"size\") property(Number) size_1f3d8e\n\n        out(x: 400, y: 0, name: \"surface_area\") property(Number) surface_area_f7b9c4\n\n        instance(x: 20, y: 0) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"6 * size * size\"\n        }\n        size_1f3d8e -> math_expr_node.gen_0\n        math_expr_node.result -> surface_area_f7b9c4\n    }\n\n    \n\n    instance(x: -176, y: 10) surface_area_cube_5a2f2 root.main.surface_area_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 157, name: \"list\") property(List) list_9a3b5f\n\n        out(x: 546, y: 127, name: \"output\") property(Number) output_7e8d1c\n\n        instance(x: 201, y: 126) sub_4a6b0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 157) max_9f5b3c root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358) min_f7d8c1 root.Std_k98ojb.List.Min {}\n        list_9a3b5f -> max_9f5b3c.list\n        list_9a3b5f -> min_f7d8c1.list\n        max_9f5b3c.max -> sub_4a6b0e.first\n        min_f7d8c1.min -> sub_4a6b0e.second\n        sub_4a6b0e.result -> output_7e8d1c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5f9f2c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 165, name: \"list\") property(List) list_1f0b9e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_7c8a3d\n\n        instance(x: 532, y: 147) sub_6a2a5f root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f1e9ee root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_7c0a8f root.Std_k98ojb.List.Min {}\n        list_1f0b9e -> max_f1e9ee.list\n        list_1f0b9e -> min_7c0a8f.list\n        max_f1e9ee.max -> sub_6a2a5f.first\n        min_7c0a8f.min -> sub_6a2a5f.second\n        sub_6a2a5f.result -> output_7c8a3d\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f1b4e9 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 155, name: \"list\") property(List) list_9e1f8a\n\n        out(x: 544, y: 146, name: \"output\") property(Number) output_7b4d6c\n\n        instance(x: 0, y: 0) sub_2b3b7f root.Std_k98ojb.Math.Sub {}\n        instance(x: -299, y: -20) max_1e9a5f root.Std_k98ojb.List.Max {}\n        instance(x: -298, y: 226) min_4c8d0f root.Std_k98ojb.List.Min {}\n        list_9e1f8a -> max_1e9a5f.list\n        list_9e1f8a -> min_4c8d0f.list\n        max_1e9a5f.max -> sub_2b3b7f.first\n        min_4c8d0f.min -> sub_2b3b7f.second\n        sub_2b3b7f.result -> output_7b4d6c\n    }\n\n    \n\n    instance(x: 51, y: 135) diff_max_min_ea9e5e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -280, y: 154, name: \"list\") property(List) list_9a1f3e\n\n        out(x: 600, y: 145, name: \"output\") property(Number) output_eb2c8d\n\n        instance(x: 0, y: 0) sub_7f5f9f root.Std_k98ojb.Math.Sub {}\n        instance(x: -107, y: 26, name: \"Max value\") max_3e1a6f root.Std_k98ojb.List.Max {}\n        instance(x: -106, y: 257, name: \"Min value\") min_7c9d0f root.Std_k98ojb.List.Min {}\n        list_9a1f3e -> max_3e1a6f.list\n        list_9a1f3e -> min_7c9d0f.list\n        sub_7f5f9f.first -> max_3e1a6f.max\n        sub_7f5f9f.second -> min_7c9d0f.min\n        sub_7f5f9f.result -> output_eb2c8d\n    }\n\n    \n\n    instance(x: -293, y: 165) diff_max_min_1a3e4f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -282, y: 157, name: \"list\") property(List) list_0d9f8e\n\n        out(x: 547, y: 145, name: \"output\") property(Number) output_1b2c7a\n\n        instance(x: 533, y: 147) sub_6a5b1e root.Std_k98ojb.Math.Sub {}\n        instance(x: -41, y: 26, name: \"Max value\") max_3f9d4f root.Std_k98ojb.List.Max {}\n        instance(x: -40, y: 257, name: \"Min value\") min_f1a8e6 root.Std_k98ojb.List.Min {}\n        list_0d9f8e -> max_3f9d4f.list\n        list_0d9f8e -> min_f1a8e6.list\n        sub_6a5b1e.first -> output_1b2c7a\n        max_3f9d4f.max -> sub_6a5b1e.first\n        min_f1a8e6.min -> sub_6a5b1e.second\n    }\n\n    \n\n    instance(x: -55, y: 177) diff_max_min_2c856f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 157, name: \"list\") property(List) list_1a8b5f\n\n        out(x: 542, y: 146, name: \"output\") property(Number) output_e2d7e6\n\n        instance(x: 0, y: 0) sub_3a9c4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -105, y: 26, name: \"Max value\") max_1e8b7f root.Std_k98ojb.List.Max {}\n        instance(x: -104, y: 255, name: \"Min value\") min_f3c9a6 root.Std_k98ojb.List.Min {}\n        list_1a8b5f -> max_1e8b7f.list\n        list_1a8b5f -> min_f3c9a6.list\n        sub_3a9c4f.first -> max_1e8b7f.max\n        sub_3a9c4f.second -> min_f3c9a6.min\n        sub_3a9c4f.result -> output_e2d7e6\n    }\n\n    \n\n    instance(x: -55, y: 529) diff_max_min_1e5b1f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -278, y: 165, name: \"list\") property(List) list_0d4f9e\n\n        out(x: 800, y: 145, name: \"output\") property(Number) output_ea1b8c\n\n        instance(x: 532, y: 147) sub_7e1ce0 root.Std_k98ojb.Math.Sub {}\n        instance(x: -39, y: 26, name: \"Max value\") max_f2d5f9 root.Std_k98ojb.List.Max {}\n        instance(x: -39, y: 257, name: \"Min value\") min_1a0e8c root.Std_k98ojb.List.Min {}\n        list_0d4f9e -> max_f2d5f9.list\n        list_0d4f9e -> min_1a0e8c.list\n        max_f2d5f9.max -> sub_7e1ce0.first\n        min_1a0e8c.min -> sub_7e1ce0.second\n        sub_7e1ce0.result -> output_ea1b8c\n    }\n\n    \n\n    instance(x: -291, y: 177) diff_max_min_f53d27 root.main.diff_max_min {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 156, name: \"list\") property(List) list_9a1f8e\n\n        out(x: 442, y: 147, name: \"output\") property(Number) output_7b4d6c\n\n        instance(x: 188, y: 144) sub_3f0f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -320, y: 52, name: \"Max value\") max_1a8c5f root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: -116, name: \"Min value\") min_9e6d3c root.Std_k98ojb.List.Min {}\n        list_9a1f8e -> max_1a8c5f.list\n        list_9a1f8e -> min_9e6d3c.list\n        max_1a8c5f.max -> sub_3f0f2e.first\n        min_9e6d3c.min -> sub_3f0f2e.second\n        sub_3f0f2e.result -> output_7b4d6c\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_5a8d8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 155, name: \"list\") property(List) list_0b075e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -318, y: 521, name: \"Max list\") max_1a7d3f root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_2e9f5c root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        max_1a7d3f.max -> sub_852f2e.first\n        min_2e9f5c.min -> sub_852f2e.second\n        list_0b075e -> max_1a7d3f.list\n        list_0b075e -> min_2e9f5c.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -279, y: 0, name: \"list\") property(List) list_1f8a3e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_f3b46d.list -> firstitem_870503.list\n        min_4d4556.list -> firstitem_3078c6.list\n        list_1f8a3e -> max_f3b46d.list\n        list_1f8a3e -> min_4d4556.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> output_b1d7f8\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 20, name: \"input\") property(Number) input_5e8f1d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n        out(x: 1217, y: 20, name: \"output\") property(Bool) output_eb1e5a\n\n        instance(x: 1052, y: 17) ifexpression_c0d9bc root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        execute_12bf99 -> ifexpression_c0d9bc.execute\n        input_5e8f1d -> ifexpression_c0d9bc.gen_0\n        ifexpression_c0d9bc.value -> output_eb1e5a\n        ifexpression_c0d9bc.then -> continue_685c8f\n        ifexpression_c0d9bc.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -175, y: 21) is_even_2e7f3f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 12, name: \"input\") property(Number) input_9f6a8e\n        in(x: -451, y: -112, name: \"execute\") trigger() execute_e1b7c0\n\n        out(x: 513, y: 121, name: \"output\") property(Bool) output_f4d3aa\n        out(x: 514, y: -111, name: \"continue\") trigger() continue_9e6f2a\n\n        instance(x: -105, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_9f6a8e -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_9e6f2a\n        getter_9cceb3.value -> output_f4d3aa\n        execute_e1b99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_9e6f2a\n    }\n\n    \n\n    instance(x: -175, y: 17) is_even_8a5c0f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"input\") property(Number) input_5f9a8e\n        in(x: -465, y: -234, name: \"execute\") trigger() execute_1b2d6c\n\n        out(x: 1227, y: -10, name: \"output\") property(Bool) output_4b0c7e\n        out(x: 1218, y: 130, name: \"continue\") trigger() continue_5f3a8f\n\n        instance(x: 752, y: 75) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_5f9a8e -> ifexpression_875761.gen_0\n        execute_1b2d6c -> ifexpression_875761.execute\n        ifexpression_875761.value -> output_4b0c7e\n        ifexpression_875761.then -> continue_5f3a8f\n    }\n\n    \n\n    instance(x: -84, y: 59) is_even_f9a2d1 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 10, name: \"input\") property(Number) input_5e9f0d\n        in(x: -456, y: -114, name: \"execute\") trigger() execute_eb2c8a\n\n        out(x: 544, y: 11, name: \"output\") property(Bool) output_f6f7ea\n        out(x: 513, y: -115, name: \"continue\") trigger() continue_9d1e3e\n\n        instance(x: -82, y: 0) modulo_5a4c8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 202, y: 11) equal_f7f6ea root.Std_k98ojb.Logic.Equal {}\n        input_5e9f0d -> modulo_5a4c8b.value\n        2 -> modulo_5a4c8b.divisor\n        modulo_5a4c8b.result -> equal_f7f6ea.left\n        0 -> equal_f7f6ea.right\n        equal_f7f6ea.result -> output_f6f7ea\n        execute_eb2c8a -> equal_f7f6ea.execute\n        equal_f7f6ea.value -> continue_9d1e3e\n    }\n\n    \n\n    instance(x: -55, y: 59) is_even_5e4c0f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 17, name: \"input\") property(Number) input_1f8e0d\n        in(x: -460, y: -114, name: \"execute\") trigger() execute_9b2c6a\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_7c3a5e\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_e1d4f0\n\n        instance(x: -105, y: -110) ifexpression_c8b9ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1e3c6f\") getter_1e3c6f = output\n        setter(x: 116, y: -268, name: \"setter_ea7d8b\") setter_ea7d8b = output\n        instance(x: 118, y: -56) setter_9f5a0f root.Std_k98ojb.Logic.Setter {\n            value: true\n        }\n        input_1f8e0d -> ifexpression_c8b9ef.gen_0\n        getter_1e3c6f.value -> output_e1d4f0\n        ifexpression_c8b9ef.then -> setter_ea7d8b.execute\n        true -> setter_9f5a0f.value\n        ifexpression_c8b9ef.else -> setter_9f5a0f.execute\n        execute_9b2c6a -> ifexpression_c8b9ef.execute\n        setter_ea7d8b.continue -> continue_7c3a5e\n        setter_9f5a0f.continue -> continue_7c3a5e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_2e1e4f root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 1, name: \"input\") property(Number) input_5e8f0d\n        in(x: -451, y: -114, name: \"execute\") trigger() execute_ea9c4b\n\n        out(x: 513, y: -115, name: \"continue\") trigger() continue_1b2b3e\n        out(x: 46, y: 159, name: \"output\") property(Bool) output_7f0d6f\n\n        instance(x: -106, y: -113) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        input_5e8f0d -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> continue_1b2b3e\n        false -> setter_1cedb2.new_value\n        getter_9cceb3.value -> output_7f0d6f\n        execute_ea9c4b -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1b2b3e\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_f8f5d2 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 30, name: \"input\") property(Number) input_1a9d8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_5c2b3e\n\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_e6f7ee\n        out(x: 1269, y: 25, name: \"output\") property(Bool) output_1a8d4f\n\n        instance(x: -105, y: -110) ifexpression_c0b3c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        input_1a9d8f -> ifexpression_c0b3c2.gen_0\n        execute_5c2b3e -> ifexpression_c0b3c2.execute\n        ifexpression_c0b3c2.then -> continue_e6f7ee\n        ifexpression_c0b3c2.value -> output_1a8d4f\n        ifexpression_c0b3c2.else -> continue_e6f7ee\n    }\n\n    \n\n    instance(x: -172, y: 11) is_even_5e9f2c root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 0, name: \"input\") property(Number) input_5e9f1d\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = output\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = output\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        execute_90aaec -> setter_9d4f1c.execute\n        getter_b280eb.value -> output_5bbcd7\n        input_5e9f1d -> ifexpression_875761.gen_0\n        setter_9d4f1c.continue -> continue_a96db6\n    }\n\n    \n\n    instance(x: 10, y: -177) is_even_f3a8b2 root.main.is_even {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -280, y: 17, name: \"input\") property(Number) input_5f8e0d\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_7c1a9b\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % 2 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        input_5f8e0d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> output_7c1a9b\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        false -> setter_37db7f.new_value\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_5a9d0e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -279, y: 0, name: \"input\") property(Number) input_1a3e8f\n        in(x: -450, y: -115, name: \"execute\") trigger() execute_e9b7d2\n\n        out(x: 1264, y: -6, name: \"output\") property(Bool) output_5c0f8f\n        out(x: 1401, y: -114, name: \"continue\") trigger() continue_3a1e8e\n\n        instance(x: 1079, y: -7) modulo_2d4b6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1225, y: -10) equal_f0c7da root.Std_k98ojb.Logic.Equal {}\n        input_1a3e8f -> modulo_2d4b6f.value\n        2 -> modulo_2d4b6f.divisor\n        execute_e9b7d2 -> modulo_2d4b6f.execute\n        modulo_2d4b6f.result -> equal_f0c7da.left\n        0 -> equal_f0c7da.right\n        equal_f0c7da.result -> output_5c0f8f\n        equal_f0c7da.value -> continue_3a1e8e\n    }\n\n    \n\n    instance(x: -68, y: 9) is_even_6b4d9c root.main.is_even {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_3f9c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) ``second occurrence`` root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.contains\n            input_0 -> contains_d42dce.input\n            ``second occurrence``.contains -> ``first occurrence_0b1361``.contains\n            find_3f9c8d.item -> ``second occurrence``.input\n            notequal_a54bdc.right -> contains_d42dce.result\n            notequal_a54bdc.left -> ``second occurrence``.result\n            ``second occurrence``.result -> bool_1eb6e9\n        } -> find_3f9c8d.predicate\n        input_0 -> ``first occurrence_0b1361``.input\n        find_3f9c8d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7f9c8d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first\") ``first repeated character_2`` root.Std_k98ojb.Iteration.Find {}\n        characters_2e1444.output -> find_7f9c8d.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            find_7f9c8d.items -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7f9c8d.predicate\n        characters_2e1444.output -> ``first repeated character_2``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_d42dce.input\n            ``first repeated character_2``.items -> contains_d42dce.contains\n            contains_d42dce.result -> equal_a54bdc.left\n            0 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``first repeated character_2``.predicate\n        find_7f9c8d.item -> output_0\n        input_0 -> characters_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7d42ce root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") filter_d42dce root.Std_k98ojb.Query.Filter {\n            where: \"it.index == it.value\"\n        }\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0b1361`` root.Std_k98ojb.Iteration.Find {}\n        characters_2e1444.output -> find_7d42ce.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_45e806.input\n            characters_2e1444.output -> contains_45e806.contains\n            contains_45e806.result -> notequal_a54bdc.left\n            0 -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_7d42ce.predicate\n        characters_2e1444.output -> filter_d42dce.list\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.input\n            characters_2e1444.output -> contains_45e806.contains\n            contains_45e806.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> filter_d42dce.where\n        find_7d42ce.item -> ``first occurrence_0b1361``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_45e806 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n            current_afd5b1 -> contains_45e806.input\n            characters_2e1444.output -> contains_45e806.contains\n            contains_45e806.result -> equal_a54bdc.left\n            1 -> equal_a54bdc.right\n            equal_a54bdc.result -> bool_1eb6e9\n        } -> ``first occurrence_0b1361``.predicate\n        filter_d42dce.result -> ``first occurrence_0b1361``.index\n        ``first occurrence_0b1361``.item -> output_0\n        input_0 -> characters_2e1444.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5b8c4e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f9a7d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -105) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 515, y: 44) contains_1e6c5c root.Std_k98ojb.Strings.Contains {}\n        characters_5b8c4e.characters -> find_3f9a7d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            contains_1e6c5c.input -> notequal_807ffd.right\n            characters_5b8c4e.characters -> contains_1e6c5c.contains\n            elem_9f6850 -> contains_1e6c5c.search\n            contains_1e6c5c.result -> notequal_807ffd.left\n            2 -> notequal_807ffd.divisor\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_3f9a7d.predicate\n        input_0 -> characters_5b8c4e.input\n        find_3f9a7d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_6e6bfd root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5d7a9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -39) filter_2b1b6c root.Std_k98ojb.Query.Filter {\n            where: \"it == it\"\n        }\n        characters_3e4c8f.characters -> find_5d7a9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_0\n\n            instance(x: 112, y: 80) contains_1e9c8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_5d7a3c root.Std_k98ojb.Logic.NotEqual {}\n            current_0 -> contains_1e9c8f.input\n            find_5d7a9f.items -> contains_1e9c8f.contains\n            contains_1e9c8f.result -> notequal_5d7a3c.left\n            0 -> notequal_5d7a3c.right\n            notequal_5d7a3c.result -> bool_0\n        } -> find_5d7a9f.predicate\n        characters_3e4c8f.characters -> filter_2b1b6c.list\n        filter_2b1b6c.result -> find_5d7a9f.items\n        find_5d7a9f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 515, y: 44) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.List.Contains {}\n        instance(x: 89, y: 29) slice_9f6850 root.Std_k98ojb.List.Slice {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            slice_9f6850.slice -> contains_807ffd.list\n            characters_6d05b0.characters -> slice_9f6850.list\n            elem_9f6850 -> slice_9f6850.start\n            1 -> slice_9f6850.end\n            elem_9f6850 -> contains_807ffd.item\n            contains_807ffd.contains -> bool_af09a7\n        } -> find_1088d5.predicate\n        find_1088d5.item -> output_0\n        input_0 -> characters_6d05b0.input\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 0) characters_6d05b0 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 340, y: 60) find_1088d5 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 551, y: -105) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        characters_6d05b0.characters -> find_1088d5.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) slice_1e2b5c root.Std_k98ojb.List.Slice {}\n            instance(x: 310, y: 35) notequal_3f0d8c root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> slice_1e2b5c.list\n            elem_9f6850 -> slice_1e2b5c.start\n            -1 -> slice_1e2b5c.end\n            slice_1e2b5c.slice -> contains_807ffd.input\n            elem_9f6850 -> contains_807ffd.contains\n            contains_807ffd.result -> notequal_3f0d8c.left\n            true -> notequal_3f0d8c.right\n            notequal_3f0d8c.result -> bool_af09a7\n        } -> find_1088d5.predicate\n        find_1088d5.item -> output_0\n        if_7c284f.else -> find_1088d5.next\n        find_1088d5.done -> if_7c284f.execute\n        input_0 -> characters_6d05b0.input\n        find_1088d5.item -> if_7c284f.then\n    }\n\n    \n\n    instance(x: 777, y: 760) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -286, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a3c8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4e9d7f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"set\") set_1a2c6f root.Std_k98ojb.Sets.Set {}\n        characters_5a3c8f.output -> find_4e9d7f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 112, y: 80) contains_3a9b5f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_6c7d4e root.Std_k98ojb.Logic.NotEqual {}\n            current_0 -> contains_3a9b5f.input\n            set_1a2c6f.set -> contains_3a9b5f.contains\n            contains_3a9b5f.result -> notequal_6c7d4e.left\n            0 -> notequal_6c7d4e.right\n            notequal_6c7d4e.result -> bool_1\n        } -> find_4e9d7f.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_0\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1\n\n            instance(x: 112, y: 80) contains_3a9b5f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 421, y: 79) equal_7c8d2e root.Std_k98ojb.Logic.Equal {}\n            current_0 -> contains_3a9b5f.input\n            set_1a2c6f.set -> contains_3a9b5f.contains\n            contains_3a9b5f.result -> equal_7c8d2e.left\n            1 -> equal_7c8d2e.right\n            equal_7c8d2e.result -> bool_1\n        } -> set_1a2c6f.predicate\n        input_1 -> characters_5a3c8f.input\n        find_4e9d7f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3c7a8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5e4d9f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 310, y: -35) contains_6a2b9c root.Std_k98ojb.List.Contains {}\n        characters_3c7a8f.characters -> find_5e4d9f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) list_0a2c7f root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_4d3c5f root.Std_k98ojb.Logic.NotEqual {}\n            characters_3c7a8f.characters -> list_0a2c7f.list\n            current_afd5b1 -> list_0a2c7f.start\n            find_5e4d9f.index -> list_0a2c7f.end\n            list_0a2c7f.slice -> contains_6a2b9c.list\n            current_afd5b1 -> contains_6a2b9c.item\n            contains_6a2b9c.contains -> notequal_4d3c5f.left\n            false -> notequal_4d3c5f.right\n            notequal_4d3c5f.result -> bool_1eb6e9\n        } -> find_5e4d9f.predicate\n        input_0 -> characters_3c7a8f.input\n        find_5e4d9f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e3b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a4d6f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 46, y: -383, name: \"first occurrence\") find_2e1c9c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"second occurrence\") ``first occurrence_0d3a8f`` root.Std_k98ojb.Iteration.Find {}\n        characters_5e3b8c.characters -> find_7a4d6f.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a7c8f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_2d5c4c root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_3a7c8f.input\n            find_2e1c9c.item -> contains_3a7c8f.contains\n            contains_3a7c8f.result -> notequal_2d5c4c.left\n            0 -> notequal_2d5c4c.right\n            notequal_2d5c4c.result -> bool_1eb6e9\n        } -> find_7a4d6f.predicate\n        characters_5e3b8c.characters -> ``first occurrence_0d3a8f``.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a7c8f root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_3a7c8f.input\n            find_2e1c9c.item -> contains_3a7c8f.contains\n            contains_3a7c8f.result -> bool_1eb6e9\n        } -> ``first occurrence_0d3a8f``.predicate\n        characters_5e3b8c.characters -> find_2e1c9c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_3a7c8f root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_3a7c8f.input\n            find_7a4d6f.item -> contains_3a7c8f.contains\n            contains_3a7c8f.result -> bool_1eb6e9\n        } -> find_2e1c9c.predicate\n        ``first occurrence_0d3a8f``.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 2, name: \"list\") property(List) list_8a1f9e\n\n        out(x: 159, y: 158, name: \"second_min\") property(Number) second_min_5c7d3b\n\n        instance(x: -105, y: -110) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -303) list_remove_node root.Std_k98ojb.List.Remove {}\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n            list_remove_node.listWithoutItem -> find_6d05b0.items\n            elem_9f6850 -> equal_aabb6e.left\n            min_node.min -> equal_aabb6e.right\n            equal_aabb6e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_8a1b5c -> min_node.items\n        min_node.min -> list_remove_node.index\n        list_8a1f9e -> list_remove_node.list\n        list_remove_node.listWithoutItem -> second_smallest\n        find_6d05b0.item -> second_min_5c7d3b\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_cee202 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 3, name: \"list\") property(List) list_1a9f8e\n\n        out(x: 159, y: 84, name: \"second_min\") property(Number) second_min_e5c7d4\n\n        instance(x: -105, y: -110) ifexpression_6b2e3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 60) ifexpression_6e5c4d root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 172, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 8, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 100, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 210) ifexpression_6e5c4d_0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 322, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 156, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 244, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 360) ifexpression_6e5c4d_1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 472, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 284, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 372, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 510) ifexpression_6e5c4d_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 622, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 412, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 500, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 658) ifexpression_6e5c4d_3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 770, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 548, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 636, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 806) ifexpression_6e5c4d_4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 918, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 684, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 772, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 954) ifexpression_6e5c4d_5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1076, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 820, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 908, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1114) ifexpression_6e5c4d_6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1226, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 956, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1044, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1270) ifexpression_6e5c4d_7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1382, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1100, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1188, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1426) ifexpression_6e5c4d_8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1538, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1252, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1340, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1586) ifexpression_6e5c4d_9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1698, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1404, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1492, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1746) ifexpression_6e5c4d_10 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1858, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1556, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1644, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1902) ifexpression_6e5c4d_11 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 2014, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1712, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 180",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -283, y: 0, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 159, y: 81, name: \"second_min\") property(Number) second_min_7c3d4b\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 110) ifexpression_f9e3d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_d1c6aa\") getter_d1c6aa = min\n        setter(x: 116, y: 268, name: \"setter_7f9d8e\") setter_7f9d8e = min\n        setter(x: 118, y: 56, name: \"setter_3a0b5f\") setter_3a0b5f = min\n        instance(x: -105, y: 110) ifexpression_6c1e2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: -112, name: \"getter_e7d9f4\") getter_e7d9f4 = min\n        setter(x: 116, y: 268, name: \"setter_8b1c5e\") setter_8b1c5e = min\n        setter(x: 118, y: 56, name: \"setter_d0a3ae\") setter_d0a3ae = min\n        instance(x: -105, y: -110) ifexpression_9d7f6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_e5e1ef\") getter_e5e1ef = min\n        setter(x: 116, y: -268, name: \"setter_8f3b6d\") setter_8f3b6d = min\n        setter(x: 118, y: -56, name: \"setter_7c9a4c\") setter_7c9a4c = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: 303) list_min_node_0f3e8d root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: 303) list_min_node_1a7c9c root.Std_k98ojb.List.Min {}\n        data_instance(x: -609, y: -363) data_9a9c70  = [a, b, c]\n        data_instance(x: -609, y: 363) data_d0f3e8  = [a, b, c]\n        data_instance(x: -609, y: 363) data_1a7c9c  = [a, b, c]\n        list_8e9f1a -> data_9a9c70.list\n        list_8e9f1a -> data_d0f3e8.list\n        list_8e9f1a -> data_1a7c9c.list\n        a -> data_9a9c70.a\n        b -> data_9a9c70.b\n        c -> data_9a9c70.c\n        a -> data_d0f3e8.a\n        b -> data_d0f3e8.b\n        c -> data_d0f3e8.c\n        a -> data_1a7c9c.a\n        b -> data_1a7c9c.b\n        c -> data_1a7c9c.c\n        list_min_node.min -> getter_9cceb3.value\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a -> setter_1cedb2.new_value\n        b -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        list_min_node.min -> getter_d1c6aa.value\n        ifexpression_f9e3d5.then -> setter_7f9d8e.execute\n        a -> setter_7f9d8e.new_value\n        b -> setter_3a0b5f.new_value\n        ifexpression_f9e3d5.else -> setter_3a0b5f.execute\n        list_min_node.min -> getter_e7d9f4.value\n        ifexpression_6c1e2c.then -> setter_8b1c5e.execute\n        a -> setter_8b1c5e.new_value\n        b -> setter_d0a3ae.new_value\n        ifexpression_6c1e2c.else -> setter_d0a3ae.execute\n        list_min_node.min -> getter_e5e1ef.value\n        ifexpression_9d7f6c.then -> setter_8f3b6d.execute\n        a -> setter_8f3b6d.new_value\n        b -> setter_7c9a4c.new_value\n        ifexpression_9d7f6c.else -> setter_7c9a4c.execute\n        data_d0f3e8.min -> list_min_node_0f3e8d.items\n        list_min_node_0f3e8d.min -> getter_e5e1ef.value\n        data_1a7c9c.min -> list_min_node_1a7c9c.items\n        list_min_node_1a7c9c.min -> second_min_7c3d4b\n    }\n\n    \n\n    instance(x: 322, y: 568) second_smallest_c2e0f8 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -278, y: 2, name: \"list\") property(List) list_8f1a4e\n\n        out(x: 512, y: 0, name: \"second_smallest\") property(Number) second_smallest_9c6b7d\n\n        instance(x: -3, y: -11, name: \"first pass\") filter_5e2b7e root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -122, y: 34, name: \"elem\") property(Number) elem_1f8c9a\n\n                out(x: 515, y: 44, name: \"\") property(Bool) _7dd980\n\n                instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                0 -> notequal_807ffd.right\n                modulo_1088d5.result -> notequal_807ffd.left\n                2 -> modulo_1088d5.divisor\n                elem_1f8c9a -> modulo_1088d5.value\n                notequal_807ffd.result -> _7dd980\n            }\n        }\n        instance(x: -3, y: 111, name: \"second pass\") filter_4b6e0f root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -122, y: 34, name: \"elem\") property(Number) elem_1f8c9a\n\n                out(x: 515, y: 44, name: \"\") property(Bool) _7dd980\n\n                instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n                instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n                0 -> notequal_807ffd.right\n                modulo_1088d5.result -> notequal_807ffd.left\n                2 -> modulo_1088d5.divisor\n                elem_1f8c9a -> modulo_1088d5.value\n                notequal_807ffd.result -> _7dd980\n            }\n        }\n        instance(x: -3, y: 211, name: \"third pass\") min_2e4b6c root.Std_k98ojb.List.Min {}\n        list_8f1a4e -> filter_5e2b7e.items\n        filter_5e2b7e.output_list -> min_2e4b6c.items\n        list_8f1a4e -> filter_4b6e0f.items\n        func() {\n            in(x: -122, y: 34, name: \"elem\") property(Number) elem_1f8c9a\n\n            out(x: 515, y: 44, name: \"\") property(Bool) _7dd980\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            min_2e4b6c.min -> notequal_807ffd.left\n            elem_1f8c9a -> modulo_1088d5.value\n            0 -> notequal_807ffd.right\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> _7dd980\n        } -> filter_4b6e0f.handler\n        min_2e4b6c.min -> second_smallest_9c6b7d\n    }\n\n    \n\n    instance(x: -291, y: 177) second_smallest_1a8f2f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_9e6a3f\n\n        out(x: 160, y: 0, name: \"second_min\") property(Number) second_min_7b8c5d\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_3e8c0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_c4d9c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_ea4d3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_9e8a4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_ea4d3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_c4d9c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_3e8c0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_ea4d3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_c4d9c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_3e8c0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_9e8a4c root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        list_9e6a3f -> ifexpression_e38995.gen_0\n        list_9e6a3f -> ifexpression_e38995.gen_1\n        getter_9cceb",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_7f3b9e\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        instance(x: 426, y: -303) list_min_node_0 root.Std_k98ojb.List.Min {}\n        items_ai -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> ifexpression_e38995.gen_1\n        items_ai -> list_min_node.items\n        list_min_node.min -> setter_1cedb2.new_value\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        items_ai -> list_min_node_0.items\n        getter_9cceb3.value -> list_min_node_0.items\n        list_min_node_0.min -> second_min_7f3b9e\n        ifexpression_e38995.else -> list_min_node_0.reset\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_3e8c9f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_min\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_a1e8a6\n        instance(x: 426, y: -303) list_min_node_0f3d2c root.Std_k98ojb.List.Min {}\n        data_instance(x: -105, y: -110) data_7c5f9c  = [min, second_min]\n        items_ai -> list_min_node_0f3d2c.items\n        getter_9cceb3.value -> min_a1e8a6\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        min_a1e8a6 -> setter_1cedb2.new_value\n        items_ai -> data_7c5f9c.items\n        list_min_node.min -> data_7c5f9c.first\n        list_min_node_0f3d2c.min -> data_7c5f9c.second\n        getter_9cceb3.value -> min_a1e8a6\n        ifexpression_e38995.else -> setter_37db7f.execute\n        second_min_3e8c9f -> setter_37db7f.new_value\n        items_ai -> ifexpression_e38995.items\n        min_a1e8a6 -> ifexpression_e38995.gen_0\n        list_min_node_0f3d2c.min -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> second_min_3e8c9f\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9e3f8a\n\n        out(x: 593, y: 29, name: \"number\") property(Number) number_7c1b6d\n\n        instance(x: 0, y: 0) find_5f2a4f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            instance(x: -44, y: 59) min_1b3e7c root.Std_k98ojb.Math.Min {}\n            list_9e3f8a -> min_1b3e7c.list\n            min_1b3e7c.min -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5f2a4f.predicate\n        list_9e3f8a -> find_5f2a4f.items\n        find_5f2a4f.item -> number_7c1b6d\n    }\n\n    \n\n    instance(x: -55, y: 129) second_smallest_0a1b5c root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -425, y: 1, name: \"list\") property(List) list_4a8d6e\n\n        out(x: 159, y: 160, name: \"second_min\") property(Number) second_min_7c2b5f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_9a3c8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1d4f7a\") getter_1d4f7a = min\n        setter(x: 116, y: -268, name: \"setter_2c3b5e\") setter_2c3b5e = min\n        setter(x: 118, y: -56, name: \"setter_8a6d1f\") setter_8a6d1f = min\n        instance(x: -105, y: -110) ifexpression_e0f9ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8e6c2d\") getter_8e6c2d = min\n        setter(x: 116, y: -268, name: \"setter_7b9f3c\") setter_7b9f3c = min\n        setter(x: 118, y: -56, name: \"setter_1a4b5e\") setter_1a4b5e = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e0f9ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8e6c2d\") getter_8e6c2d = min\n        setter(x: 116, y: -268, name: \"setter_7b9f3c\") setter_7b9f3c = min\n        setter(x: 118, y: -56, name: \"setter_1a4b5e\") setter_1a4b5e = min\n        instance(x: -105, y: -110) ifexpression_9a3c8e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_1d4f7a\") getter_1d4f7a = min\n        setter(x: 116, y: -268, name: \"setter_2c3b5e\") setter_2c3b5e = min\n        setter(x: 118, y: -56, name: \"setter_8a6d1f\") setter_8a6d1f = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e0f9ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8e6c2d\") getter_8e6c2d = min\n        setter(x: 116, y: -268, name: \"setter_7b9f3c\") setter_7b9f3c = min\n        setter(x: 118, y: -56, name: \"setter_1a4b5e\") setter_1a4b5e = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e0f9ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8e6c2d\") getter_8e6c2d = min\n        setter(x: 116, y: -268, name: \"setter_7b9f3c\") setter_7b9f3c = min\n        setter(x: 118, y: -56, name: \"setter_1a4b5e\") setter_1a4b5e = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e0f9ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8e6c2d\") getter_8e6c2d = min\n        setter(x: 116, y: -268, name: \"setter_7b9f3c\") setter_7b9f3c = min\n        setter(x: 118, y: -56, name: \"setter_1a4b5e\") setter_1a4b5e = min\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: -110) ifexpression_e0f9ef root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_8e6c2d\") getter_8e6c2d = min\n        setter(x: 116, y: -268, name: \"setter_7b9f3c\") setter_7b9f3c = min",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f2e8a\n\n        out(x: 159, y: 81, name: \"second_min\") property(Number) second_min_a5c3b7\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 112) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 224, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 60, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 168, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 224) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 336, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 180, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 288, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 336) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 448, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 292, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 400, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 448) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 560, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 444, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 552, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 560) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 672, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 596, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 704, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 672) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 784, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 748, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 856, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 784) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 896, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 860, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 968, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 896) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1008, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 972, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1080, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1008) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1120, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1104, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1216, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1120) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1232, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1196, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1304, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1232) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1344, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1308, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1416, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1344) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1456, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1420, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1528, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1456) ifexpression_f3a8d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter(x: -144, y: 1568, name: \"getter_9cceb3\") getter_9cceb3 = min\n        setter(x: 116, y: 1552, name: \"setter_1cedb2\") setter_1cedb2 = min\n        setter(x: 118, y: 1664, name: \"setter_37db7f\") setter_37db7f = min\n        instance(x: -105, y: 1568) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < b\"\n        }\n        getter"
            ]
        }
    }
]