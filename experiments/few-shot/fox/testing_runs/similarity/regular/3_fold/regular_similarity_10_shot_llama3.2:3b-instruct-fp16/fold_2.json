[
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12101,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks if two lists have at least one common element.\") has_common {\n        in(x: -475, y: 3, name: \"list1\") property(List) list_2d5e8b\n        in(x: -482, y: -23, name: \"list2\") property(List) list_d6a9c7\n\n        out(x: 1010, y: 4, name: \"output\") property(Bool) output_8f1d3d\n\n        instance(x: 103, y: -27) contains_b9e5f9 root.Std_k98ojb.List.Contains {}\n        list_2d5e8b -> contains_b9e5f9.left\n        list_d6a9c7 -> contains_b9e5f9.right\n        contains_b9e5f9.result -> output_8f1d3d\n    }\n\n    \n\n    instance(x: -48, y: 64) has_common_e2bdf4 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -475, y: 4, name: \"list1\") property(List) list_5a3f44\n        in(x: -469, y: -22, name: \"list2\") property(List) list_a9c7e0\n\n        out(x: 124, y: 8, name: \"output\") property(Bool) output_4b6d35\n\n        instance(x: -28, y: 11) filter_d1a5e4 root.Std_k98ojb.Query.Filter {}\n        list_a9c7e0 -> filter_d1a5e4.list\n        func() {\n            in(x: -192, y: 3, name: \"current\") property(Number) current_8f6d74\n\n            out(x: 245, y: 11, name: \"bool\") property(Bool) bool_7c0a2e\n\n            instance(x: 93, y: -24) contains_1b5a4d root.Std_k98ojb.List.Contains {}\n            current_8f6d74 -> contains_1b5a4d.item\n            list_a9c7e0 -> contains_1b5a4d.list\n            contains_1b5a4d.is_contained -> bool_7c0a2e\n        } -> filter_d1a5e4.predicate\n    }\n\n    \n\n    instance(x: -21, y: 10) has_common_3fdd8 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if two lists contain at least one common element.\") has_common_element {\n        in(x: -493, y: 16, name: \"list1\") property(List) list_5d4e38\n        in(x: -475, y: -24, name: \"list2\") property(List) list_a7f6c8\n\n        out(x: 1039, y: 11, name: \"output\") property(Bool) output_e3a5eb\n\n        instance(x: -28, y: -22) intersection_4e1c45 root.Std_k98ojb.Sets.Intersection {}\n        list_5d4e38 -> intersection_4e1c45.left\n        list_a7f6c8 -> intersection_4e1c45.right\n        intersection_4e1c45.result -> output_e3a5eb\n    }\n\n    \n\n    instance(x: -21, y: 63) has_common_element_f9d0b root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -493, y: 19, name: \"list1\") property(List) list_5fdd9d\n        in(x: -499, y: -122, name: \"list2\") property(List) list_f6a4b8\n\n        out(x: 1037, y: -114, name: \"output\") property(Bool) output_e7b0e3\n\n        instance(x: 91, y: -115) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_5fdd9d -> contains_32727d.left\n        list_f6a4b8 -> contains_32727d.right\n        contains_32727d.is_contained -> output_e7b0e3\n    }\n\n    \n\n    instance(x: -294, y: 48) has_common_5f1c9 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -528, y: 23, name: \"list1\") property(List) list_9e3d6b\n        in(x: -526, y: 17, name: \"list2\") property(List) list_c2c4f5\n\n        out(x: 123, y: 44, name: \"output\") property(Bool) output_6a8e1b\n\n        instance(x: -92, y: 34) count_4d7d14 root.Std_k98ojb.Std.Count {}\n        list_9e3d6b -> count_4d7d14.list\n        list_c2c4f5 -> count_4d7d14.list\n        count_4d7d14.count -> output_6a8e1b\n    }\n\n    \n\n    instance(x: -69, y: 47) has_common_element_e3a9df root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common {\n        in(x: -469, y: 2, name: \"list1\") property(List) list_9c4e6b\n        in(x: -475, y: 19, name: \"list2\") property(List) list_ea4d3f\n\n        out(x: 1017, y: -49, name: \"output\") property(Bool) output_c0a1c5\n\n        instance(x: 1039, y: 77) intersection_8b6e42 root.Std_k98ojb.Sets.Intersection {}\n        list_9c4e6b -> intersection_8b6e42.left\n        list_ea4d3f -> intersection_8b6e42.right\n        intersection_8b6e42.intersect -> output_c0a1c5\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_d9f2eb root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -469, y: 23, name: \"list1\") property(List) list_4d2a3f\n        in(x: -476, y: 11, name: \"list2\") property(List) list_b0b5c7\n\n        out(x: 1028, y: 9, name: \"output\") property(Bool) output_c6e8df\n\n        instance(x: 95, y: -105) map_9d1f4a root.Std_k98ojb.Iteration.Map {}\n        list_b0b5c7 -> map_9d1f4a.items\n        func() {\n            in(x: -469, y: 23, name: \"current\") property(Number) current_e8f6e2\n\n            out(x: 1028, y: 9, name: \"output\") property(Bool) bool_a5c0d1\n\n            instance(x: 95, y: -105) contains_27b7df root.Std_k98ojb.List.Contains {}\n            current_e8f6e2 -> contains_27b7df.item\n            list_b0b5c7 -> contains_27b7df.list\n            contains_27b7df.is_contained -> bool_a5c0d1\n        } -> map_9d1f4a.handler\n        instance(x: 95, y: -105) not_6e3c21 root.Std_k98ojb.Logic.Not {}\n        list_b0b5c7 -> not_6e3c21.item\n        not_6e3c21.result -> bool_a5c0d1\n    }\n\n    \n\n    instance(x: 102, y: -67) has_common_element_fdbf2a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -509, y: 4, name: \"list1\") property(List) list_3a9c6b\n        in(x: -521, y: 2, name: \"list2\") property(List) list_c2e0f8\n\n        out(x: 1035, y: -50, name: \"output\") property(Bool) output_a7d4ec\n\n        instance(x: -292, y: -47) intersection_1a9b3c root.Std_k98ojb.Sets.Intersection {}\n        list_3a9c6b -> intersection_1a9b3c.left\n        list_c2e0f8 -> intersection_1a9b3c.right\n        intersection_1a9b3c.intersection -> output_a7d4ec\n    }\n\n    \n\n    instance(x: -47, y: 59) has_common_element_6a5df root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists contain at least one common element.\") has_common {\n        in(x: -471, y: 2, name: \"list1\") property(List) list_5e0d8b\n        in(x: -483, y: 11, name: \"list2\") property(List) list_e4c9c3\n\n        out(x: 1031, y: 6, name: \"output\") property(Bool) output_f7f2a3\n\n        instance(x: 92, y: 8) intersection_0e8d66 root.Std_k98ojb.Sets.Intersection {}\n        list_e4c9c3 -> intersection_0e8d66.left\n        list_5e0d8b -> intersection_0e8d66.right\n        intersection_0e8d66.result -> output_f7f2a3\n    }\n\n    \n\n    instance(x: -44, y: 47) has_common_e9c6df root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -493, y: 23, name: \"list1\") property(List) list_6d5f8a\n        in(x: -509, y: 44, name: \"list2\") property(List) list_eb7e4b\n\n        out(x: 1239, y: 11, name: \"output\") property(Bool) output_d4a3c1\n\n        instance(x: 246, y: 33) intersection_8f6d5d root.Std_k98ojb.Sets.Intersection {}\n        list_6d5f8a -> intersection_8f6d5d.left\n        list_eb7e4b -> intersection_8f6d5d.right\n        intersection_8f6d5d.intersection -> output_d4a3c1\n    }\n\n    \n\n    instance(x: -292, y: 55) has_common_c9a8d2 root.main.has_common {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -278, y: 2, name: \"list\") property(List) list_8a5f9d\n\n        out(x: 1213, y: 4, name: \"output\") property(Bool) output_e0e1b7\n\n        instance(x: 95, y: 11) for_6c2f45 root.Std_k98ojb.Std.For {}\n        list_8a5f9d -> for_6c2f45.items\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_f3e7e1\n\n            out(x: 1044, y: -13, name: \"\") property(Number) difference_b9a8d0\n\n            instance(x: 89, y: 20) sub_2c0b6f root.Std_k98ojb.Math.Sub {}\n            current_f3e7e1 -> sub_2c0b6f.first\n            current_f3e7e1 + 1 -> sub_2c0b6f.second\n            difference_b9a8d0.result -> sub_2c0b6f.result\n        } -> for_6c2f45.handler\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_f3e7e1\n\n            out(x: 1044, y: -13, name: \"\") property(Bool) bool_9b8f66\n\n            instance(x: 89, y: 20) modulo_0a6c5d root.Std_k98ojb.Math.Modulo {}\n            current_f3e7e1 -> modulo_0a6c5d.value\n            1 -> modulo_0a6c5d.divisor\n            modulo_0a6c5d.result -> bool_9b8f66\n        } -> for_6c2f45.predicate\n        for_6c2f45.item -> output_e0e1b7\n    }\n\n    \n\n    instance(x: -83, y: 15) has_consecutive_numbers_b9a4db root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 2, name: \"list\") property(List) list_0d4e3f\n\n        out(x: 1216, y: 15, name: \"output\") property(Bool) output_9c5a7b\n\n        instance(x: -69, y: -19) for_d8c1eb root.Std_k98ojb.Std.For {}\n        list_0d4e3f -> for_d8c1eb.items\n        func() {\n            in(x: -114, y: 46, name: \"i\") property(Number) i_5a6cd2\n\n            out(x: 1019, y: 47, name: \"\") property(Number) _7e3b0f\n\n            instance(x: 90, y: 39) less_than_e4d1c8 root.Std_k98ojb.Math.LessThan {}\n            i_5a6cd2 -> less_than_e4d1c8.i\n            list_0d4e3f[i_5a6cd2.value] -> less_than_e4d1c8.right\n            1 -> less_than_e4d1c8.left\n            less_than_e4d1c8.result -> _7e3b0f\n        } -> for_d8c1eb.handler\n        instance(x: -88, y: 34) isconsecutives_2a5cd9 root.Std_k98ojb.List.IsConsecutive {}\n        list_0d4e3f -> isconsecutives_2a5cd9.list\n    }\n\n    \n\n    instance(x: -69, y: -20) is_consecutive_b8c7d7 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: -0, name: \"list\") property(List) list_3a9d4f\n\n        out(x: 1216, y: -1, name: \"output\") property(Bool) output_e2c8b5\n\n        instance(x: 93, y: -23) filter_f0e2df root.Std_k98ojb.Query.Filter {}\n        list_3a9d4f -> filter_f0e2df.list\n        func() {\n            in(x: -121, y: 44, name: \"prev\") property(Number) prev_d1c7a5\n\n            out(x: 1048, y: 49, name: \"\") property(Number) next_6b9d45\n\n            instance(x: 90, y: 39) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n            filter_f0e2df.item -> greaterthan_cb50ae.left\n            prev_d1c7a5 -> greaterthan_cb50ae.right\n            greaterthan_cb50ae.result -> next_6b9d45\n        } -> filter_f0e2df.handler\n        instance(x: 93, y: -22) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_3a9d4f -> for_8cb3f6.items\n        for_8cb3f6.item -> filter_f0e2df.item\n        for_8cb3f6.index -> greaterthan_cb50ae.index\n        greaterthan_cb50ae.result -> next_6b9d45\n        instance(x: 105, y: -13) if_e19a62 root.Std_k98ojb.Std.If {}\n        filter_f0e2df.item -> if_e19a62.predicate\n        if_e19a62.then -> output_e2c8b5\n        greaterthan_cb50ae.result -> next_6b9d45\n        for_8cb3f6.done -> output_e2c8b5\n        filter_f0e2df.continue -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -84, y: 49) is_consecutive_4a7d34 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 0, name: \"list\") property(List) list_8f5d1d\n\n        out(x: 1059, y: -3, name: \"output\") property(Bool) output_c4a6b2\n\n        instance(x: -83, y: 15) for_e85c43 root.Std_k98ojb.Std.For {}\n        instance(x: 199, y: 63) contains_32727d root.Std_k98ojb.List.Contains {}\n        function_d8f1e7 root.Std_k98ojb.Function {\n            func() {\n                in(x: -193, y: 34, name: \"current\") property(Number) current_b0c9f6\n\n                out(x: 1062, y: 45, name: \"\") property(Bool) _3a4d14\n\n                instance(x: 94, y: 40) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n                function_d8f1e7.result -> _3a4d14\n            } -> for_e85c43.handler\n        }\n        list_8f5d1d -> for_e85c43.items\n        func() {\n            in(x: -193, y: 34, name: \"current\") property(Number) current_b0c9f6\n\n            out(x: 1062, y: 45, name: \"\") property(Bool) _3a4d14\n\n            instance(x: 94, y: 40) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            function_d8f1e7.result -> _3a4d14\n        } -> contains_32727d.predicate\n        for_e85c43.index -> function_d8f1e7.gen_0\n        2 -> function_d8f1e7.gen_1\n        current_b0c9f6 -> modulo_1088d5.value\n        function_d8f1e7.result -> contains_32727d.item\n        for_e85c43.onItem -> contains_32727d.execute\n    }\n\n    \n\n    instance(x: -68, y: 53) is_consecutive_b3a0b4 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -246, y: 2, name: \"list\") property(List) list_6d0c4e\n\n        out(x: 1039, y: 10, name: \"output\") property(Bool) output_e7b9f8\n\n        instance(x: 94, y: 11) for_c1a6f5 root.Std_k98ojb.Std.For {}\n        list_6d0c4e -> for_c1a6f5.items\n        func() {\n            in(x: -114, y: 36, name: \"current\") property(Number) current_3eb9cd\n\n            out(x: 1048, y: 47, name: \"\") property(Bool) _7c0b4d\n\n            instance(x: 92, y: 39) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n            current_3eb9cd -> greaterthan_cb50ae.left\n            current_3eb9cd + 1 -> greaterthan_cb50ae.right\n            greaterthan_cb50ae.result -> _7c0b4d\n        } -> for_c1a6f5.handler\n        for_c1a6f5.onItem -> _7c0b4d\n        for_c1a6f5.done -> output_e7b9f8\n    }\n\n    \n\n    instance(x: -83, y: 52) is_consecutive_f2e3e8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -288, y: 2, name: \"list\") property(List) list_5e4d0d\n\n        out(x: 1028, y: -7, name: \"output\") property(Bool) output_bfdd9c\n\n        instance(x: -69, y: 13) for_d3a1d2 root.Std_k98ojb.Std.For {}\n        list_5e4d0d -> for_d3a1d2.items\n        func() {\n            in(x: -120, y: 44, name: \"i\") property(Number) i_b8c9f7\n\n            out(x: 1066, y: 45, name: \"\") property(Number) diff_8e5c21\n\n            instance(x: 93, y: 41) subtract_0d2b1a root.Std_k98ojb.Math.Sub {}\n            i_b8c9f7 -> subtract_0d2b1a.first\n            list_5e4d0d[previous] -> subtract_0d2b1a.second\n            subtract_0d2b1a.result -> diff_8e5c21\n        } -> for_d3a1d2.handler\n        for_d3a1d2.item -> is_consecutive.gen_1\n        for_d3a1d2.index -> is_consecutive.gen_0\n        for_d3a1d2.onItem -> is_consecutive.execute\n        for_d3a1d2.done -> is_consecutive.output\n    }\n\n    \n\n    instance(x: -59, y: 23) is_consecutive_bf9c43 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -275, y: 2, name: \"list\") property(List) list_3a4d0f\n\n        out(x: 1015, y: -11, name: \"output\") property(Bool) output_e6e4b9\n\n        instance(x: 341, y: -21) filter_f8f7c2 root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 in list\"\n        }\n        instance(x: 1085, y: -14) count_0d3a6e root.Std_k98ojb.Std.Count {}\n        instance(x: 194, y: -25) ifexpression_eb9c4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == list.length\"\n        }\n        filter_f8f7c2.result -> output_e6e4b9\n        count_0d3a6e.count -> output_e6e4b9\n        list_3a4d0f -> filter_f8f7c2.items\n    }\n\n    \n\n    instance(x: -63, y: 73) is_consecutive_5dd1e9 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -305, y: 2, name: \"list\") property(List) list_3d8f9a\n\n        out(x: 1030, y: -5, name: \"output\") property(Bool) output_6bfb45\n\n        instance(x: 104, y: -12) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        list_3d8f9a -> filter_7b3b7b.list\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_c1f4e0\n\n            out(x: 1032, y: -6, name: \"\") property(Bool) _9d5a8c\n\n            instance(x: 90, y: -20) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 314, y: -22) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_c1f4e0 -> modulo_1088d5.value\n            1 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            2 -> notequal_148aeb.right\n            notequal_148aeb.result -> _9d5a8c\n        } -> filter_7b3b7b.handler\n        list_3d8f9a -> filter_7b3b7b.items\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_c1f4e0\n\n            out(x: 1032, y: -6, name: \"\") property(Bool) _9d5a8c\n\n            instance(x: 90, y: -20) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 315, y: -22) less-thanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_c1f4e0 -> modulo_1088d5.value\n            1 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            2 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _9d5a8c\n        } -> filter_7b3b7b.handler\n        list_3d8f9a -> filter_7b3b7b.items\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_c1f4e0\n\n            out(x: 1032, y: -6, name: \"\") property(Bool) _9d5a8c\n\n            instance(x: 90, y: -20) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 314, y: -22) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_c1f4e0 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            3 -> notequal_148aeb.right\n            notequal_148aeb.result -> _9d5a8c\n        } -> filter_7b3b7b.handler\n        list_3d8f9a -> filter_7b3b7b.items\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_c1f4e0\n\n            out(x: 1032, y: -6, name: \"\") property(Bool) _9d5a8c\n\n            instance(x: 90, y: -20) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 315, y: -22) less-thanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_c1f4e0 -> modulo_1088d5.value\n            3 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            4 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _9d5a8c\n        } -> filter_7b3b7b.handler\n        list_3d8f9a -> filter_7b3b7b.items\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_c1f4e0\n\n            out(x: 1032, y: -6, name: \"\") property(Bool) _9d5a8c\n\n            instance(x: 90, y: -20) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 314, y: -22) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_c1f4e0 -> modulo_1088d5.value\n            4 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            5 -> notequal_148aeb.right\n            notequal_148aeb.result -> _9d5a8c\n        } -> filter_7b3b7b.handler\n        list_3d8f9a -> filter_7b3b7b.items\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_c1f4e0\n\n            out(x: 1032, y: -6, name: \"\") property(Bool) _9d5a8c\n\n            instance(x: 90, y: -20) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 315, y: -22) less-thanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_c1f4e0 -> modulo_1088d5.value\n            5 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> less-thanorequal_f11fda.left\n            6 -> less-thanorequal_f11fda.right\n            less-thanorequal_f11fda.result -> _9d5a8c\n        } -> filter_7b3b7b.handler\n        list_3d8f9a -> filter_7b3b7b.items\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_c1f4e0\n\n            out(x: 1032, y: -6, name: \"\") property(Bool) _9d5a8c\n\n            instance(x: 90, y: -20) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 315, y: -22) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_c1f4e0 -> modulo_1088d5.value\n            6 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            7 -> notequal_148aeb.right\n            notequal_148aeb.result -> _9d5a8c\n        } -> filter_7b3b7b.handler\n        list_3d8f9a -> filter_7b3b7b.items\n        func() {\n            in(x: -192, y: -17, name: \"current\") property(Number) current_c1f4e0\n\n            out(x: 1032, y: -6, name: \"\") property(Bool) _9d5a8c\n\n            instance(x: 90, y: -20) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 315, y: -22) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_c1f4e0 -> modulo_1088d5.value\n            7 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_148aeb.left\n            8 -> notequal_148aeb.right\n            notequal_148aeb.result -> _9d5a8c\n        } -> filter_7b3b7b.handler\n        list_3d8f9a -> filter_7b3b7b.items\n    }\n\n    \n\n    instance(x: -83, y: 23) is_consecutive_b2b4bb root.main",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -305, y: 23, name: \"list\") property(List) list_0d4e8a\n\n        out(x: 1055, y: -13, name: \"output\") property(Bool) output_c1f7b9\n\n        instance(x: 83, y: -24) ifexpression_6c4f3b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index + 1 in list\"\n        }\n        instance(x: 151, y: -15) next_b5d6e0 root.Std_k98ojb.Std.For {}\n        instance(x: 219, y: -13) contains_3c7a4f root.Std_k98ojb.List.Contains {}\n        instance(x: 278, y: 25) list_slice_f2d8c9 root.Std_k98ojb.List.Slice {}\n        list_0d4e8a -> ifexpression_6c4f3b.items\n        func() {\n            in(x: -103, y: 34, name: \"i\") property(Number) i_5f7f2c\n\n            out(x: 1081, y: -14, name: \"\") property(Bool) _2d8e9a\n\n            instance(x: 92, y: -16) modulo_e6c3d0 root.Std_k98ojb.Math.Modulo {}\n            i_5f7f2c -> modulo_e6c3d0.value\n            1 -> modulo_e6c3d0.divisor\n            modulo_e6c3d0.result -> _2d8e9a\n        } -> ifexpression_6c4f3b.handler\n        list_slice_f2d8c9.items -> next_b5d6e0.next\n        func() {\n            in(x: -103, y: 34, name: \"i\") property(Number) i_5f7f2c\n\n            out(x: 1081, y: -14, name: \"\") property(Bool) _2d8e9a\n\n            instance(x: 92, y: -16) modulo_e6c3d0 root.Std_k98ojb.Math.Modulo {}\n            i_5f7f2c -> modulo_e6c3d0.value\n            1 -> modulo_e6c3d0.divisor\n            modulo_e6c3d0.result -> _2d8e9a\n        } -> next_b5d6e0.handler\n        contains_3c7a4f.item -> list_slice_f2d8c9.list\n        ifexpression_6c4f3b.value -> output_c1f7b9\n    }\n\n    \n\n    instance(x: -86, y: 47) is_consecutive_6e5a0 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 5, name: \"list\") property(List) list_8a2e4d\n\n        out(x: 1031, y: -3, name: \"output\") property(Bool) output_c7f0b9\n\n        instance(x: -69, y: -19) for_d2b5c6 root.Std_k98ojb.Std.For {}\n        list_8a2e4d -> for_d2b5c6.items\n        func() {\n            in(x: -193, y: 28, name: \"current\") property(Number) current_b7f1d0\n\n            out(x: 1059, y: 39, name: \")\") property(Bool) done_4f8e33\n\n            instance(x: 94, y: 25) subtract_f2c6b3 root.Std_k98ojb.Math.Sub {}\n            for_d2b5c6.index -> subtract_f2c6b3.first\n            current_b7f1d0 -> subtract_f2c6b3.second\n            subtract_f2c6b3.result -> done_4f8e33\n        } -> for_d2b5c6.handler\n        for_d2b5c6.item -> is_consecutive.then\n        for_d2b5c6.done -> is_consecutive.else\n    }\n\n    \n\n    instance(x: 47, y: -23) is_consecutive_7e3a8d root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: -186, name: \"main_list\") property(List) main_list_6f4d9b\n        in(x: -292, y: 134, name: \"sublist\") property(List) sublist_e8a0c5\n\n        out(x: 1023, y: -69, name: \"output\") property(Bool) output_7a1e23\n\n        instance(x: -81, y: -186) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -112, y: -215) eq_3d8c0b root.Std_k98ojb.Logic.Equal {}\n        sublist_e8a0c5 -> eq_3d8c0b.left\n        main_list_6f4d9b -> eq_3d8c0b.right\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_1a2e43 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: -186, name: \"main_list\") property(List) main_list_0d3a9e\n        in(x: -294, y: 145, name: \"sub_list\") property(List) sub_list_4b6f1c\n\n        out(x: 546, y: -69, name: \"output\") property(Bool) output_8c2df5\n\n        instance(x: -104, y: -186) filter_f7a3d0 root.Std_k98ojb.Query.Filter {}\n        main_list_0d3a9e -> filter_f7a3d0.items\n        sub_list_4b6f1c -> filter_f7a3d0.where\n        func() {\n            in(x: -245, y: -186, name: \"it\") property(List) it_b5f2e8\n\n            out(x: 546, y: -69, name: \"output\") property(Bool) output_8c2df5\n\n            instance(x: 94, y: -105) len_9d4f1c root.Std_k98ojb.List.Length {}\n            it_b5f2e8 -> len_9d4f1c.list\n            len_9d4f1c.length -> output_8c2df5\n        } -> filter_f7a3d0.handler\n    }\n\n    \n\n    instance(x: -82, y: 11) is_sublist_0b5e6c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -246, y: 165, name: \"main_list\") property(List) main_list_1f9e3d\n        in(x: -261, y: -15, name: \"sublist\") property(List) sublist_b7a5c4\n\n        out(x: 123, y: 74, name: \"output\") property(Bool) output_d0e6b2\n\n        instance(x: 426, y: -303) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -119, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -292, y: -215) count_a7c8e0 root.Std_k98ojb.Std.Count {}\n        sublist_b7a5c4 -> length_6e87f2.list\n        main_list_1f9e3d -> for_d26972.items\n        for_d26972.index -> count_a7c8e0.reset\n        count_a7c8e0.count -> for_d26972.next\n        sublist_b7a5c4 -> for_d26972.item\n        length_6e87f2.length -> for_d26972.done\n    }\n\n    \n\n    instance(x: -292, y: -215) is_sublist_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -193, y: -104, name: \"main_list\") property(List) main_list_9e8d4f\n        in(x: -195, y: 11, name: \"sublist\") property(List) sublist_eb2c6a\n\n        out(x: 1017, y: 3, name: \"output\") property(Bool) output_f1cd5d\n\n        instance(x: 93, y: -115) iteration_filter_4f6e9 root.Std_k98ojb.Iteration.Filter {}\n        main_list_9e8d4f -> iteration_filter_4f6e9.items\n        sublist_eb2c6a -> iteration_filter_4f6e9.where\n        func() {\n            in(x: -193, y: -104, name: \"it\") property(List) it_5df0eb\n\n            out(x: 1017, y: 3, name: \"output\") property(Bool) output_f1cd5d\n\n            instance(x: 93, y: -115) length_6e87f2 root.Std_k98ojb.List.Length {}\n            sublist_eb2c6a -> length_6e87f2.list\n            length_6e87f2.length -> iteration_filter_4f6e9.count\n            iteration_filter_4f6e9.result -> output_f1cd5d\n        } -> is_sublist.handler\n    }\n\n    \n\n    instance(x: -193, y: 11, name: \"main_list\") main_list_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: -186, name: \"main_list\") property(List) main_list_d4e2d9\n        in(x: -123, y: 23, name: \"sublist\") property(List) sublist_b5a8f3\n\n        out(x: 101, y: 59, name: \"output\") property(Bool) output_c7c0b6\n\n        instance(x: 121, y: 55) filter_4e2d9 root.Std_k98ojb.Iteration.Filter {}\n        sublist_b5a8f3 -> filter_4e2d9.items\n        func() {\n            in(x: -193, y: -20, name: \"it\") property(Number) it_a1c9e7\n\n            out(x: 104, y: 61, name: \"\") property(Bool) _5b0a8f\n\n            instance(x: -23, y: 56) equal_4d2d6 root.Std_k98ojb.Logic.Equal {}\n            main_list_d4e2d9 -> equal_4d2d6.left\n            sublist_b5a8f3 -> equal_4d2d6.right\n            it_a1c9e7 -> equal_4d2d6.value\n        } -> filter_4e2d9.handler\n        output_c7c0b6.result = filter_4e2d9.is_contained\n    }\n\n    \n\n    instance(x: 105, y: -19) is_sublist_f8f5a3 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -246, y: 164, name: \"main_list\") property(List) main_list_1c0e9a\n        in(x: -294, y: -27, name: \"sublist\") property(List) sublist_c7d3f5\n\n        out(x: 444, y: -19, name: \"output\") property(Bool) output_d4c2b8\n\n        instance(x: 133, y: 162) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: -25) contains_c5f7d0 root.Std_k98ojb.List.Contains {}\n        is_sublist.output -> output_d4c2b8\n        length_6e87f2.length -> contains_c5f7d0.is_contained\n        sublist_c7d3f5 -> contains_c5f7d0.item\n        main_list_1c0e9a -> contains_c5f7d0.list\n    }\n\n    \n\n    instance(x: 48, y: -27) is_sublist_a2b4f6 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: 157, name: \"main_list\") property(List) list_4a8f2d\n        in(x: -302, y: 162, name: \"sub_list\") property(List) sub_6c9a3e\n\n        out(x: 101, y: -55, name: \"output\") property(Bool) output_b0a7d1\n\n        instance(x: -69, y: 155) filter_f8f5b2 root.Std_k98ojb.Query.Filter {}\n        list_4a8f2d -> filter_f8f5b2.items\n        sub_list -> filter_f8f5b2.where\n        filter_f8f5b2.result -> output_b0a7d1\n    }\n\n    \n\n    instance(x: 101, y: -55) is_sublist_5c4e3e root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -394, y: 145, name: \"main_list\") property(List) main_list_9f6c4b\n        in(x: -430, y: 26, name: \"sub_list\") property(List) sub_list_d8d5e1\n\n        out(x: 1043, y: 63, name: \"output\") property(Bool) output_a7d2d4\n\n        instance(x: 436, y: -246) list_slice_0f8c9a root.Std_k98ojb.List.Slice {}\n        main_list_9f6c4b -> list_slice_0f8c9a.list\n        sub_list_d8d5e1 -> list_slice_0f8c9a.slice\n        0 -> list_slice_0f8c9a.start\n        length(main_list_9f6c4b) -> list_slice_0f8c9a.end\n\n        instance(x: -292, y: 64) equal_e3d0e2 root.Std_k98ojb.Logic.Equal {}\n        main_list_9f6c4b -> equal_e3d0e2.left\n        sub_list_d8d5e1 -> equal_e3d0e2.right\n        output_a7d2d4 -> equal_e3d0e2.result\n    }\n\n    \n\n    instance(x: -294, y: 49) is_sublist_9a6c45 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 145, name: \"main_list\") property(List) main_list_1e9d8a\n        in(x: -275, y: -20, name: \"sublist\") property(List) sublist_6b0a95\n\n        out(x: 546, y: -97, name: \"output\") property(Bool) output_5f7c3f\n\n        instance(x: 201, y: 142) filter_c4d9d1 root.Std_k98ojb.Query.Filter {\n            where: \"it == sublist\"\n        }\n        list_6b0a95 -> filter_c4d9d1.items\n        main_list_1e9d8a -> filter_c4d9d1.list\n        filter_c4d9d1.result -> output_5f7c3f\n    }\n\n    \n\n    instance(x: 93, y: -122) is_sublist_f2b8c9 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 146, name: \"main_list\") property(List) main_list_0a4d5f\n        in(x: -305, y: 59, name: \"sublist\") property(List) sublist_b9cd3b\n\n        out(x: 1031, y: 67, name: \"output\") property(Bool) output_7c8f2d\n\n        instance(x: 426, y: -302) filter_4e6d0a root.Std_k98ojb.Iteration.Filter {}\n        sublist_b9cd3b -> filter_4e6d0a.items\n        func() {\n            in(x: -193, y: 67, name: \"it\") property(Any) it_4f7c43\n\n            out(x: 1001, y: 68, name: \"\") property(Bool) _7dd980\n\n            instance(x: 426, y: -302) length_6e87f2 root.Std_k98ojb.List.Length {}\n            sublist_b9cd3b -> length_6e87f2.list\n            length_6e87f2.length -> _7dd980\n        } -> filter_4e6d0a.handler\n        func() {\n            in(x: -193, y: 67, name: \"it\") property(Any) it_4f7c43\n\n            out(x: 1001, y: 68, name: \"\") property(Bool) _7dd980\n\n            instance(x: 426, y: -302) list_contains_c6d8e9 root.Std_k98ojb.List.Contains {}\n            sublist_b9cd3b -> list_contains_c6d8e9.item\n            it_4f7c43 -> list_contains_c6d8e9.value\n            list_contains_c6d8e9.is_contained -> _7dd980\n        } -> filter_4e6d0a.handler\n    }\n\n    \n\n    instance(x: 426, y: -302) is_sublist_node root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -475, y: 2, name: \"list\") property(List) list_3a5f9d\n\n        out(x: 1097, y: -1, name: \"output\") property(Number) output_e4e0b8\n\n        instance(x: 0, y: 0) for_6c2a47 root.Std_k98ojb.Std.For {}\n        getter(x: 344, y: 170, name: \"getter_3f7d9e\") getter_3f7d9e = index\n        setter(x: 1, y: -243, name: \"setter_6c2a47\") setter_6c2a47 = index\n        instance(x: 44, y: 0) ifexpression_b8dd45 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current <= previous + 1\"\n        }\n        getter(x: -246, y: 166, name: \"getter_7a3f5e\") getter_7a3f5e = previous\n        setter(x: -245, y: -234, name: \"setter_6c2a47\") setter_6c2a47 = previous\n        instance(x: 49, y: -35) getat_e9bfc0 root.Std_k98ojb.List.GetAt {}\n        ifexpression_b8dd45.then -> setter_6c2a47.execute\n        list_3a5f9d -> for_6c2a47.items\n        for_6c2a47.item -> ifexpression_b8dd45.gen_1\n        for_6c2a47.index -> ifexpression_b8dd45.gen_0\n        getter_7a3f5e.value -> ifexpression_b8dd45.gen_2\n        for_6c2a47.onItem -> ifexpression_b8dd45.execute\n        for_6c2a47.done -> continue_a9d4b1\n        for_6c2a47.item -> setter_6c2a47.new_value\n        list_3a5f9d -> getat_e9bfc0.list\n        0 -> getat_e9bfc0.index\n        getat_e9bfc0.itemAtIndex -> setter_6c2a47.new_value\n        for_6c2a47.next -> continue_a9d4b1\n    }\n\n    \n\n    instance(x: -82, y: 159) find_smallest_missing_c7f5e2 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 2, name: \"list\") property(List) list_9f6d8b\n\n        out(x: -1, y: 0, name: \"output\") property(Number) output_b4a3f7\n\n        instance(x: 16, y: -121) for_5c6e38 root.Std_k98ojb.Std.For {}\n        instance(x: 43, y: -106) ifexpression_1d4a2b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length\"\n        }\n        getter(x: 23, y: 165, name: \"getter_7f8c9e\") getter_7f8c9e = next\n        setter(x: -190, y: -246, name: \"setter_f1b3d6\") setter_f1b3d6 = next\n        instance(x: 34, y: 0) count_4d8f5a root.Std_k98ojb.Std.Count {}\n        getter(x: 22, y: -121) getter_7f8c9e.value -> list_9f6d8b.next\n        setter_f1b3d6.continue -> for_5c6e38.reset\n        list_9f6d8b -> for_5c6e38.items\n        0 -> setter_f1b3d6.execute\n        for_5c6e38.item -> ifexpression_1d4a2b.gen_1\n        0 -> count_4d8f5a.reset\n        list_9f6d8b -> count_4d8f5a.list\n        0 -> count_4d8f5a.new_value\n        count_4d8f5a.value -> ifexpression_1d4a2b.gen_0\n        for_5c6e38.done -> ifexpression_1d4a2b.execute\n        ifexpression_1d4a2b.then -> setter_f1b3d6.execute\n        next -> setter_f1b3d6.new_value\n    }\n\n    \n\n    instance(x: -194, y: 155) find_missing_d9c2f7 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: 0, y: -243, name: \"list\") property(List) list_2d5f9e\n        out(x: 123, y: -229, name: \"missing\") property(Number) missing_a8c7b1\n\n        instance(x: 340, y: -109) for_6a0c3a root.Std_k98ojb.Std.For {}\n        instance(x: 46, y: -122) ifexpression_b5d4e2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        setter(x: -187, y: -246, name: \"setter_3c9f6a\") setter_3c9f6a = missing\n        instance(x: 321, y: -20) getat_d5d7e4 root.Std_k98ojb.List.GetAt {}\n        ifexpression_b5d4e2.value -> output_a8c7b1\n        ifexpression_b5d4e2.then -> setter_3c9f6a.execute\n        list_2d5f9e[0] -> getat_d5d7e4.list\n        1 -> getat_d5d7e4.index\n        getat_d5d7e4.itemAtIndex -> setter_3c9f6a.new_value\n        for_6a0c3a.done -> output_a8c7b1\n        for_6a0c3a.item -> setter_3c9f6a.new_value\n    }\n\n    \n\n    instance(x: 777, y: -63) find_missing_f1e5d3 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -394, y: 0, name: \"list\") property(List) list_5d2d1a\n        in(x: -417, y: -243, name: \"execute\") trigger() execute_a9b3f4\n\n        out(x: 1195, y: 5, name: \"continue\") trigger() continue_7c8e38\n        out(x: 1180, y: -242, name: \"output\") property(Number) output_e2dd6d\n\n        instance(x: 51, y: -120) for_d3b1f4 root.Std_k98ojb.Std.For {}\n        instance(x: 315, y: -35) ifexpression_9c0e8a root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -27, y: -115) getter_d3d7eb = previous\n        setter(x: 649, y: -313, name: \"setter_4fba5c\") setter_4fba5c = previous\n        instance(x: 322, y: -20) getat_f9f6e root.Std_k98ojb.List.GetAt {}\n        ifexpression_9c0e8a.else -> continue_7c8e38\n        ifexpression_9c0e8a.value -> output_e2dd6d\n        ifexpression_9c0e8a.then -> setter_4fba5c.execute\n        list_5d2d1a -> for_d3b1f4.items\n        for_d3b1f4.item -> ifexpression_9c0e8a.gen_2\n        for_d3b1f4.index -> ifexpression_9c0e8a.gen_0\n        getter_d3d7eb.value -> ifexpression_9c0e8a.gen_1\n        for_d3b1f4.onItem -> ifexpression_9c0e8a.execute\n        for_d3b1f4.done -> continue_7c8e38\n        for_d3b1f4.item -> setter_4fba5c.new_value\n        list_5d2d1a -> getat_f9f6e.list\n        0 -> getat_f9f6e.index\n        getat_f9f6e.itemAtIndex -> setter_4fba5c.new_value\n        execute_a9b3f4 -> setter_4fba5c.execute\n        setter_4fba5c.continue -> for_d3b1f4.reset\n        setter_4fba5c.continue -> for_d3b1f4.next\n    }\n\n    \n\n    instance(x: -55, y: 164) find_missing_2e7d66 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 2, name: \"list\") property(List) list_8c4b9d\n\n        out(x: 1091, y: 6, name: \"min\") property(Number) min_b5f0a3\n        out(x: 1106, y: 7, name: \"continue\") trigger() continue_8f9e2b\n\n        instance(x: 55, y: -120) for_1d4c34 root.Std_k98ojb.Std.For {}\n        getter(x: 0, y: 170, name: \"getter_f5a7df\") getter_f5a7df = previous\n        setter(x: 0, y: -246, name: \"setter_c6f3eb\") setter_c6f3eb = previous\n        instance(x: 341, y: -35) ifexpression_8e4d9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length -1 || current == index + 1\"\n        }\n        getter_f5a7df.value -> ifexpression_8e4d9c.gen_0\n        for_1d4c34.item -> ifexpression_8e4d9c.gen_2\n        for_1d4c34.index -> ifexpression_8e4d9c.gen_1\n        setter_c6f3eb.continue -> for_1d4c34.reset\n        list_8c4b9d -> for_1d4c34.items\n        find_missing.min -> min_b5f0a3\n        ifexpression_8e4d9c.then -> setter_c6f3eb.execute\n        1 -> setter_c6f3eb.new_value\n        for_1d4c34.onItem -> ifexpression_8e4d9c.execute\n        for_1d4c34.done -> continue_8f9e2b\n    }\n\n    \n\n    instance(x: -19, y: 173) find_missing_f5a6d3 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: 0, y: 0, name: \"list\") property(List) list_a8f6f5\n\n        out(x: 3, y: -1, name: \"continue\") trigger() continue_4b9d2c\n        out(x: 3, y: 123, name: \"output\") property(Number) output_c0a5e7\n\n        instance(x: 34, y: 93) for_0f8d6 root.Std_k98ojb.Std.For {}\n        getter(x: -24, y: 170, name: \"getter_e9c3eb\") getter_e9c3eb = previous\n        setter(x: 83, y: -315, name: \"setter_d4e5a7\") setter_d4e5a7 = previous\n        instance(x: -14, y: -34) ifexpression_8b1d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || (previous < index && index + 1 > last)\"\n        }\n        getter(x: 56, y: 184, name: \"getter_f2e3f5\") getter_f2e3f5 = next\n        setter(x: -21, y: -46, name: \"setter_d4e5a7\") setter_d4e5a7 = next\n        instance(x: -28, y: 105) equal_c0c8d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 73, y: -13) count_9f1a43 root.Std_k98ojb.Std.Count {}\n        setter_d4e5a7.continue -> for_0f8d6.reset\n        list_a8f6f5 -> for_0f8d6.items\n        find_missing.output_c0a5e7 = last\n    }\n\n    \n\n    instance(x: -55, y: 155) find_missing_f4c3f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -442, y: 0, name: \"list\") property(List) list_b9f1d8\n        out(x: 1234, y: -2, name: \"missing\") property(Number) missing_4e3a95\n\n        instance(x: 14, y: 0) for_e7bdf5 root.Std_k98ojb.Std.For {}\n        list_b9f1d8 -> for_e7bdf5.items\n        for_e7bdf5.index -> index\n        ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous > 1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6c15d4.else -> continue_a96db6\n        for_e7bdf5.item -> ifexpression_6c15d4.gen_1\n        getter_b280eb.value -> ifexpression_6c15d4.gen_0\n        getat_ce2a48.list -> ifexpression_6c15d4.gen_2\n        1 -> getat_ce2a48.index\n        for_e7bdf5.itemAtIndex -> setter_9d4f1c.new_value\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_e7bdf5.reset\n        for_e7bdf5.onItem -> ifexpression_6c15d4.execute\n        ifexpression_6c15d4.then -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> continue_a96db6\n        getat_ce2a48.itemAtIndex -> missing_4e3a95.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_e5df34 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: 2, name: \"list\") property(List) list_4d1a5b\n\n        out(x: 1237, y: 25, name: \"min\") property(Number) min_9f8e6c\n        instance(x: 0, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        list_4d1a5b -> for_d26972.items\n        for_d26972.item -> find_missing.gen_2\n        -1 -> find_missing.gen_0.new_value\n        for_d26972.index -> find_missing.gen_0.new_value\n    }\n\n    \n\n    instance(x: 7, y: -173) find_missing_9d4c3b root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing_number {\n        in(x: -446, y: 3, name: \"list\") property(List) list_9e2b4d\n        out(x: -215, y: 0, name: \"missing\") property(Number) missing_ai\n\n        instance(x: -104, y: 0) for_7f6c5a root.Std_k98ojb.Std.For {}\n        instance(x: 336, y: 1) ifexpression_d3e4d8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == prevIndex + 1\"\n        }\n        getter(x: -187, y: 2, name: \"getter_6f9c0a\") getter_6f9c0a = prevIndex\n        setter(x: 394, y: -294, name: \"setter_a5b3d4\") setter_a5b3d4 = prevIndex\n        instance(x: 341, y: -20) getat_8a1e23 root.Std_k98ojb.List.GetAt {}\n        getter_6f9c0a.value -> getat_8a1e23.index\n        list_9e2b4d -> for_7f6c5a.items\n        for_7f6c5a.item -> ifexpression_d3e4d8.gen_2\n        for_7f6c5a.index -> ifexpression_d3e4d8.gen_0\n        getter_6f9c0a.value -> ifexpression_d3e4d8.gen_1\n        for_7f6c5a.onItem -> ifexpression_d3e4d8.execute\n        for_7f6c5a.done -> missing.execute\n        setter_a5b3d4.continue -> for_7f6c5a.reset\n        list_9e2b4d -> getat_8a1e23.list\n        0 -> getat_8a1e23.index\n        getat_8a1e23.itemAtIndex -> setter_a5b3d4.new_value\n        for_7f6c5a.index -> setter_a5b3d4.new_value\n    }\n\n    \n\n    instance(x: -83, y: 159) find_missing_number_eb9a65 root.main.find_missing_number {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -394, y: -234, name: \"list\") property(List) list_4a8f2d\n        in(x: 5, y: 0, name: \"execute\") trigger() execute_eb2c1e\n\n        out(x: 1236, y: -229, name: \"continue\") trigger() continue_9df7e3\n        out(x: 1214, y: 145, name: \"output\") property(Number) output_8d7a5a\n\n        instance(x: 0, y: 0) for_1c0f77 root.Std_k98ojb.Std.For {}\n        instance(x: 44, y: -120) ifexpression_d9f5e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 23, y: -105, name: \"getter_8a7d1c\") getter_8a7d1c = previous\n        setter(x: 69, y: -313, name: \"setter_c9e4f5\") setter_c9e4f5 = previous\n        instance(x: 35, y: -20) getat_eb2c1 root.Std_k98ojb.List.GetAt {}\n        ifexpression_d9f5e6.else -> continue_9df7e3\n        ifexpression_d9f5e6.value -> output_8d7a5a\n        ifexpression_d9f5e6.then -> setter_c9e4f5.execute\n        list_4a8f2d -> for_1c0f77.items\n        for_1c0f77.item -> ifexpression_d9f5e6.gen_2\n        for_1c0f77.index -> ifexpression_d9f5e6.gen_0\n        getter_8a7d1c.value -> ifexpression_d9f5e6.gen_1\n        for_1c0f77.onItem -> ifexpression_d9f5e6.execute\n        for_1c0f77.done -> continue_9df7e3\n        for_1c0f77.item -> setter_c9e4f5.new_value\n        list_4a8f2d -> getat_eb2c1.list\n        0 -> getat_eb2c1.index\n        getat_eb2c1.itemAtIndex -> setter_c9e4f5.new_value\n        execute_eb2c1 -> setter_c9e4f5.execute\n        setter_c9e4f5.continue -> for_1c0f77.reset\n        setter_c9e4f5.continue -> continue_9df7e3\n        for_1c0f77.index -> setter_c9e4f5.new_value\n    }\n\n    \n\n    instance(x: -83, y: 161) find_missing_fdbd6 root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -200, y: 20, name: \"input\") property(String) input_1a6f3d\n\n        out(x: 1067, y: 2, name: \"output\") property(String) output_a9e5c4\n\n        instance(x: 0, y: 0) replace_8e3b11 root.Std_k98ojb.Strings.Replace {}\n        input_1a6f3d -> replace_8e3b11.input\n        \",\" -> replace_8e3b11.search\n        \".\" -> replace_8e3b11.search\n        \" \" -> replace_8e3b11.search\n        \":\" -> replace_8e3b11.replace\n        replace_8e3b11.result -> output_a9e5c4\n    }\n\n    \n\n    instance(x: -215, y: 63) replace_special_chars_6d6a1e root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -199, y: 2, name: \"input\") property(String) input_8a6b4e\n\n        out(x: 1015, y: -67, name: \"output\") property(String) output_a1c7f0\n\n        instance(x: 74, y: -106) replace_9d7f2d root.Std_k98ojb.Strings.Replace {}\n        input_8a6b4e -> replace_9d7f2d.input\n        \":\" -> replace_9d7f2d.search\n        \".\" -> replace_9d7f2d.replace\n        \",\" -> replace_9d7f2d.replace\n        replace_9d7f2d.result -> output_a1c7f0\n    }\n\n    \n\n    instance(x: -192, y: 44) replace_with_colon_4e6b5a root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_char{\n        in(x: -201, y: 0, name: \"input\") property(String) input_4d6e1a\n\n        out(x: 1029, y: -69, name: \"output\") property(String) output_a2c7f5\n\n        instance(x: 93, y: -59) replace_d4d3f8 root.Std_k98ojb.Strings.Replace {}\n        input_4d6e1a -> replace_d4d3f8.input\n        \":\" -> replace_d4d3f8.search\n        \":\" -> replace_d4d3f8.replace\n        replace_d4d3f8.result -> output_a2c7f5\n    }\n\n    \n\n    instance(x: 246, y: -43) replace_char_6b1e9a root.main.replace_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -200, y: 0, name: \"input\") property(String) input_1c5d4f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3e8a6b\n\n        instance(x: 76, y: 47) replace_9f7e0c root.Std_k98ojb.Strings.Replace {}\n        input_1c5d4f -> replace_9f7e0c.input\n        \",. \" -> replace_9f7e0c.search\n        \":\" -> replace_9f7e0c.replace\n        replace_9f7e0c.result -> output_3e8a6b\n    }\n\n    \n\n    instance(x: -176, y: 38) replace_chars_5d2e4b root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -193, y: 2, name: \"text\") property(String) text_1d4b5f\n\n        out(x: 105, y: -47, name: \"output\") property(String) output_0e8c71\n\n        instance(x: 19, y: 0) replace_6d5a2d root.Std_k98ojb.Strings.Replace {}\n        text_1d4b5f -> replace_6d5a2d.input\n        \" \" -> replace_6d5a2d.search\n        \":\" -> replace_6d5a2d.replace\n        replace_6d5a2d.result -> output_0e8c71\n    }\n\n    \n\n    instance(x: -174, y: 45) replace_with_colon_4f9d3b root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation{\n        in(x: -198, y: 0, name: \"input\") property(String) input_3a6e2b\n\n        out(x: 1015, y: 0, name: \"output\") property(String) output_8f1c9d\n\n        instance(x: 69, y: 34) replace_4b3bdf root.Std_k98ojb.Strings.Replace {}\n        input_3a6e2b -> replace_4b3bdf.input\n        \",\" -> replace_4b3bdf.search\n        \".\" -> replace_4b3bdf.replace\n        replace_4b3bdf.result -> output_8f1c9d\n    }\n\n    \n\n    instance(x: -179, y: 0) replace_punctuation_7e8a2d root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -195, y: 15, name: \"input\") property(String) input_9d8f2a\n\n        out(x: 1054, y: 19, name: \"output\") property(String) output_6d7e3b\n\n        instance(x: 20, y: 0) tolower_c5f2c5 root.Std_k98ojb.Strings.ToLower {}\n        input_9d8f2a -> tolower_c5f2c5.input\n        tolower_c5f2c5.output -> replace_with_colon.input\n        \" \" -> replace_with_colon.search\n        \",\" -> replace_with_colon.replace\n        \".\" -> replace_with_colon.replace\n        input_9d8f2a -> replace_with_colon.input\n        replace_with_colon.result -> output_6d7e3b\n    }\n\n    \n\n    instance(x: -174, y: 43) replace_with_colon_4c5f66 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace spaces, commas, and dots with colons.\") replace_with_colon {\n        in(x: -198, y: 3, name: \"input\") property(String) input_2d0f6a\n        out(x: 734, y: -47, name: \"output\") property(String) output_4b8e5c\n\n        instance(x: 14, y: 13) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 273, y: 0) replace_d1a3d7 root.Std_k98ojb.Strings.Replace {}\n        replace_d1a3d7.search -> \" \"\n        \" \" -> replace_d1a3d7.replace\n        replace_d1a3d7.input -> tolower_2e1444.input\n        tolower_2e1444.output -> replace_d1a3d7.input\n\n        instance(x: 274, y: -48) replace_d1a3d7 {}\n        \",\" -> replace_d1a3d7.search\n        \",\" -> replace_d1a3d7.replace\n        replace_d1a3d7.input -> tolower_2e1444.output\n        tolower_2e1444.output -> replace_d1a3d7.input\n\n        instance(x: 275, y: -49) replace_d1a3d7 {}\n        \".\" -> replace_d1a3d7.search\n        \".\" -> replace_d1a3d7.replace\n        replace_d1a3d7.input -> tolower_2e1444.output\n        tolower_2e1444.output -> replace_d1a3d7.input\n\n        replace_d1a3d7.input -> output_4b8e5c\n    }\n\n    \n\n    instance(x: -200, y: 10) replace_with_colon_f6f0eb root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -198, y: 0, name: \"input\") property(String) input_2e8f4a\n\n        out(x: 1063, y: -69, name: \"output\") property(String) output_d63bfc\n\n        instance(x: 15, y: -64) replace_5c9d21 root.Std_k98ojb.Strings.Replace {}\n        input_2e8f4a -> replace_5c9d21.input\n        \",\" -> replace_5c9d21.search\n        \".\" -> replace_5c9d21.replace\n        \":\" -> replace_5c9d21.replace\n        replace_5c9d21.result -> output_d63bfc\n    }\n\n    \n\n    instance(x: -202, y: 0) tolower_7e2f1a root.Std_k98ojb.Strings.ToLower {}\n    input_2e8f4a -> tolower_7e2f1a.input\n\n    instance(x: 1005, y: -69) to_upper_8c7d3a root.Std_k98ojb.Strings.ToUpper {}\n    output_d63bfc -> to_upper_8c7d3a.output\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -201, y: 2, name: \"input\") property(String) input_ai\n        out(x: 1049, y: -64, name: \"output\") property(String) output_ai\n\n        instance(x: 83, y: 44) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 261, y: 0) replace_d42dce root.Std_k98ojb.Strings.Replace {}\n        tolower_7b3b7b.output -> replace_d42dce.input\n        input_ai -> tolower_7b3b7b.input\n        \",.\" -> replace_d42dce.search\n        \":\" -> replace_d42dce.replace\n        replace_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_chars_aad0c2 root.main.replace_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -292, y: 0, name: \"input\") property(List) list_a9f5ca\n\n        out(x: 546, y: 2, name: \"output\") property(Bool) output_6e7c43\n\n        instance(x: 0, y: 1) strings_equals_8d4a65 root.Std_k98ojb.Strings.Equals {}\n        list_a9f5ca -> strings_equals_8d4a65.input\n        strings_equals_8d4a65.output -> output_6e7c43\n    }\n\n    \n\n    instance(x: 83, y: -37) is_all_same_e2f0ec root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_1f4c6e\n\n        out(x: 555, y: -2, name: \"output\") property(Bool) output_ba9b3d\n\n        instance(x: 15, y: 0) tolower_e7f8b5 root.Std_k98ojb.Strings.ToLower {}\n        input_1f4c6e -> tolower_e7f8b5.input\n        tolower_e7f8b5.output -> is_all_same.list\n        instance(x: 264, y: -2) length_6e87f2 root.Std_k98ojb.List.Length {}\n        length_6e87f2.length -> is_all_same.count\n        input_1f4c6e -> tolower_e7f8b5.input\n        tolower_e7f8b5.output -> is_all_same.list\n        is_all_same.count -> 2\n        instance(x: -82, y: -3) count_equal_4aebd0 root.Std_k98ojb.List.CountEqual {}\n        is_all_same.list -> count_equal_4aebd0.left\n        tolower_e7f8b5.output -> count_equal_4aebd0.right\n        output_ba9b3d.result -> count_equal_4aebd0.value\n    }\n\n    \n\n    instance(x: 49, y: -23) is_all_same_1df6e2 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in a given string are same or not.\") AllSameChars {\n        in(x: -269, y: 4, name: \"string\") property(String) input_0\n        out(x: 1025, y: 3, name: \"output\") property(Bool) output_0\n\n        instance(x: 13, y: 2) tolower_d6a1c9 root.Std_k98ojb.Strings.ToLower {}\n        input_0 -> tolower_d6a1c9.input\n        tolower_d6a1c9.output -> AllSameChars.input\n        AllSameChars.output -> output_0\n\n        instance(x: 109, y: 2) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        \"a\" -> contains_d42dce.contains\n        input_0 -> contains_d42dce.input\n        contains_d42dce.result -> AllSameChars.output\n    }\n\n    \n\n    instance(x: -59, y: 5) AllSameChars_3b7c4f root.main.AllSameChars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -305, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 1021, y: 3, name: \"result\") property(Bool) result_0\n\n        instance(x: 74, y: 2) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"length(input_0) == 1 || input_0[0] == input_0[1]\"\n        }\n        getter(x: -19, y: 44, name: \"getter_b280eb\") getter_b280eb = length_8166b0\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = length_8166b0\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = length_8166b0\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> result_0\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        input_0 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        input_0 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) all_characters_same_eb8a3f root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -269, y: 0, name: \"string\") property(List) list_ba4e9f\n\n        out(x: 540, y: -2, name: \"result\") property(Bool) result_6c7b3d\n\n        instance(x: -83, y: 23) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        list_ba4e9f -> tolower_2e1444.list\n        tolower_2e1444.output -> all_same.input\n        \"x\" -> all_same.value\n        all_same.result -> result_6c7b3d\n    }\n\n    \n\n    instance(x: -55, y: 530) all_same_d0f1a5 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters in a string are same or not.\") all_characters_same {\n        in(x: -305, y: 10, name: \"string\") property(String) input_a3d4a\n        out(x: 509, y: -7, name: \"output\") property(Bool) output_a3d4a\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_a3d4a -> tolower_2e1444.input\n        tolower_2e1444.output -> output_a3d4a\n        instance(x: -82, y: 17) isnumeric_d1f0f6 root.Std_k98ojb.Strings.IsNumeric {}\n        input_a3d4a -> isnumeric_d1f0f6.input\n        isnumeric_d1f0f6.result -> output_a3d4a\n        instance(x: 201, y: -5) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == previous\"\n        }\n        input_a3d4a -> filter_4d4556.list\n        filter_4d4556.result -> output_a3d4a\n    }\n\n    \n\n    instance(x: 44, y: -19) all_characters_same_b0df2e root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -394, y: 23, name: \"string\") property(String) input_0\n\n        out(x: 1031, y: 4, name: \"output\") property(Bool) output_e9e7f5\n        instance(x: 74, y: 27) tolower_d1c3a2 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -18, y: 0) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        input_0 -> tolower_d1c3a2.input\n        tolower_d1c3a2.output -> contains_32727d.input\n        \"a\" -> contains_32727d.contains\n        contains_32727d.result -> output_e9e7f5\n    }\n\n    \n\n    instance(x: 13, y: -46) all_same_8b4d6d root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -288, y: 0, name: \"input\") property(List) list_e5a8d6\n\n        out(x: 533, y: 1, name: \"output\") property(Bool) output_9e3c7f\n\n        instance(x: 15, y: 2) stringstolower_1b0b4c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 255, y: 0) contains_32727d root.Std_k98ojb.Strings.Contains {}\n        list_e5a8d6 -> stringstolower_1b0b4c.input\n        stringstolower_1b0b4c.output -> contains_32727d.input\n        \"a\" -> contains_32727d.contains\n        list_e5a8d6 -> contains_32727d.list\n        0 -> contains_32727d.index\n        contains_32727d.result -> output_9e3c7f\n    }\n\n    \n\n    instance(x: 85, y: -2) same_characters_4f1b45 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters in a string are same or not.\") is_all_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_4a2b5d\n\n        out(x: 530, y: -1, name: \"output\") property(Bool) output_c3d5f8\n\n        instance(x: 105, y: 34) tolower_7c6e9f root.Std_k98ojb.Strings.ToLower {}\n        input_4a2b5d -> tolower_7c6e9f.input\n        tolower_7c6e9f.output -> is_all_same.input\n        instance(x: 0, y: 1) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        \"a\" -> contains_d42dce.contains\n        input_4a2b5d -> contains_d42dce.input\n        contains_d42dce.result -> output_c3d5f8\n    }\n\n    \n\n    instance(x: 0, y: -1) is_all_same_f6c9e2 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -305, y: 0, name: \"string\") property(String) input_8\n        out(x: 509, y: -2, name: \"output\") property(Bool) output_d\n\n        instance(x: 0, y: 1) tolower_f7c6f9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 270, y: 0) contains_8d5a15 root.Std_k98ojb.Strings.Contains {}\n        input_8 -> tolower_f7c6f9.input\n        \"a\" -> contains_8d5a15.contains\n        tolower_f7c6f9.output -> contains_8d5a15.input\n        contains_8d5a15.result -> output_d\n    }\n\n    \n\n    instance(x: -69, y: 29) all_characters_same_f0e3c4 root.main.all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) isnumeric_a3a5c6 root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_a3a5c6.input\n        input_ai -> tolower_2e1444.input\n        isnumeric_a3a5c6.result -> count_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_d42dce.input\n        input_ai -> tolower_2e1444.input\n        isnumeric_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") CountDigits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 15, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_d42dce.input\n        \"0-9\" -> isnumeric_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        isnumeric_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) CountDigits_96023e root.main.CountDigits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 159, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 426, y: -303) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"0-9\" -> contains_d42dce.contains\n        input_ai -> tolower_2e1444.input\n        contains_d42dce.result -> result_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 159, y: -219, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.Strings.Length {}\n        length_6e87f2.length -> count_ai\n        input_ai -> length_6e87f2.input\n        length_6e87f2.result -> count_ai\n    }\n\n    \n\n    instance(x: 264, y: -464, name: \"count_digits\") countDigits_96023e root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") digit_count {\n        in(x: -426, y: 0, name: \"input\") property(String) input_ai\n        out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> length_6e87f2.list\n        length_6e87f2.length -> result_ai\n        instance(x: 0, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> isnumeric_d42dce.input\n        isnumeric_d42dce.result -> length_6e87f2.count\n    }\n\n    \n\n    instance(x: 264, y: -464, name: \"digit_count\") digitcount_96023e root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_4\n\n        out(x: 159, y: -219, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_4 -> isnumeric_d42dce.input\n        isnumeric_d42dce.result -> length_6e87f2.length\n        count_ai -> length_6e87f2.count\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") digit_count{\n        in(x: -426, y: 0, name: \"s\") property(String) s_ai\n        out(x: 159, y: -219, name: \"count\") property(Number) count_0\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        s_ai -> length_6e87f2.list\n        function(x: Number) {\n            in(x: -113, y: 34, name: \"c\") property(Number) c_9f6850\n\n            out(x: 515, y: 44, name: \"isDigit\") property(Bool) isDigit_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            10 -> modulo_1088d5.divisor\n            c_9f6850 -> modulo_1088d5.value\n            isDigit_af09a7 -> notequal_807ffd.result\n        } -> length_6e87f2.predicate\n        count_0 -> length_6e87f2.length\n    }\n\n    \n\n    instance(x: 264, y: -464, name: \"digit_count\") digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Count the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"string\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        string_0 -> length_6e87f2.list\n        function(x: -84, y: 34) isDigit_3d7de6 {\n            in(x: 0, y: 0, name: \"c\") property(String) c_ai\n            out(x: 39, y: -219, name: \"result\") property(Bool) result_ai\n\n            instance(x: 0, y: 1) isDigit_3d7de6a root.Std_k98ojb.Strings.IsNumeric {}\n            c_ai -> isDigit_3d7de6a.input\n            isDigit_3d7de6a.result -> result_ai\n        } -> length_6e87f2.predicate\n        instance(x: 0, y: 0) count_4c8d23 root.Std_k98ojb.Math.Count {}\n        function() {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_ai\n            out(x: 515, y: 44, name: \"sum\") property(Number) sum_ai\n\n            instance(x: 89, y: 29) next_7b3b7b root.Std_k98ojb.List.Next {}\n            i_ai -> next_7b3b7b.index\n            input_ai -> next_7b3b7b.item\n            isDigit_3d7de6(result_ai) -> next_7b3b7b.trigger\n            sum_ai -> count_.count\n            next_7b3b7b.reset -> count_.reset\n        } -> count_.handler\n        length_6e87f2.output -> count_ai\n    }\n\n    \n\n    instance(x: 48, y: 11) digit_count_15f9e9 root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count the number of digits in a given string.\") digit_count {\n        in(x: -294, y: 155, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 1) count_9d7a4f root.Std_k98ojb Std.Count {}\n        instance(x: 265, y: 0) characters_5c2e3d root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_5c2e3d.input\n        characters_5c2e3d.output -> count_9d7a4f.items\n        count_9d7a4f.count -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_3d1a4f\n\n        out(x: 1130, y: -369, name: \"output\") property(Number) output_d5b6c7\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"i\") property(Number) i_8a3c1d\n            in(x: -23, y: 79, name: \"result\") property(Number) result_b2cd6f\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            notequal_7836b4.result -> result_b2cd6f\n            i_8a3c1d -> modulo_c76d2b.value\n        } -> for_065883.next\n        n_3d1a4f -> for_065883.index\n        for_065883.item -> modulo_c76d2b.first\n        0 -> for_065883.reset\n        sum_4c6c9a = 0\n        instance(x: 74, y: -23) pow_5e3e8 root.Std_k98ojb.Math.Pow {}\n        pow_5e3e8.result -> sum_4c6c9a\n        i_8a3c1d -> pow_5e3e8.gen_0\n        pow_5e3e8.result -> sum_4c6c9a\n    }\n\n    \n\n    instance(x: 0, y: -37) sum_fourth_power_9f7b2 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 2, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1149, y: -647, name: \"output\") property(Number) output_ebef81\n\n        instance(x: -341, y: -301, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"sum = 0; for (i=1; i <= n; i++) sum += pow(i*2-1,4)\"\n        }\n        instance(x: 82, y: -387) div_547f34 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum, average]\n        instance(x: 46, y: -383) pow_6a2d5e root.Std_k98ojb.Math.Pow {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: 303, y: 2) count_7d3e8f root.Std_k98ojb.Std.Count {}\n        n_6b655b -> count_7d3e8f.n\n        count_7d3e8f.output -> div_547f34.first\n        pow_6a2d5e.input1 -> add_88bb8a.first\n        pow_6a2d5e.input2 -> add_88bb8a.second\n        pow_6a2d5e.exponent -> 4\n        div_547f34.result -> data_3c713b.sum\n        data_3c713b.average -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_f21f44 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_odd {\n        in(x: -567, y: 2, name: \"n\") property(Number) n_1a8f9e\n\n        out(x: 1130, y: 6, name: \"sum\") property(Number) sum_5d7c4b\n\n        instance(x: 74, y: 54) for_3df2a1 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -28, y: 24, name: \"i\") property(Number) i_d0f8f9\n            out(x: 1066, y: 34, name: \"num\") property(Number) num_5e9c2d\n\n            instance(x: 104, y: 26) pow_f7b4a1 root.Std_k98ojb.Math.Pow {}\n            instance(x: -29, y: 22) modulo_a1f3e6 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 103, y: 32) add_0d5d21 root.Std_k98ojb.Math.Add {}\n            instance(x: -28, y: 25) ifexpression_4b8f7a root.Std_k98ojb.Std.IfExpression {\n                expression: \"i % 2 == 1\"\n            }\n            instance(x: -29, y: 30) floor_e9e5c6 root.Std_k98ojb.Math.Floor {}\n            3 -> pow_f7b4a1.base\n            i_d0f8f9 -> modulo_a1f3e6.value\n        } -> for_3df2a1.handler\n        n_1a8f9e -> for_3df2a1.n\n        for_3df2a1.index -> pow_f7b4a1.base\n        1 -> pow_f7b4a1.exponent\n        pow_f7b4a1.result -> add_0d5d21.first\n        modulo_a1f3e6.divisor -> add_0d5d21.second\n        ifexpression_4b8f7a.then -> add_0d5d21.execute\n        2 -> floor_e9e5c6.exponent\n        i_d0f8f9 -> floor_e9e5c6.value\n        pow_f7b4a1.result -> add_0d5d21.second\n        add_0d5d21.result -> sum_5d7c4b\n    }\n\n    \n\n    instance(x: 103, y: 55) sum_fourth_odd_8f3c6 root.main.sum_fourth_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -527, y: 2, name: \"n\") property(Number) n_4a5e15\n\n        out(x: 1239, y: -341, name: \"output\") property(Number) output_d6f0b3\n\n        instance(x: 0, y: 0) for_7a1c21 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -29, y: -25, name: \"i\") property(Number) i_2bdf4d\n            data_instance(x: -215, y: -208) data_a3f8e6  = [i, sum]\n            instance(x: 0, y: 60) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 340, y: 55) add_88bb8a root.Std_k98ojb.Math.Add {}\n            instance(x: 99, y: -249) pow_6e1c5 root Std_k98ojb.Math.Pow {}\n            instance(x: 112, y: 136) div_547f34 root.Std_k98ojb.Math.Div {}\n            setter(x: 0, y: 0, name: \"setter_e9d0aa\") setter_e9d0aa = sum\n            instance(x: -303, y: 257) pow_a3e7a root.Std_k98ojb.Math.Pow {}\n            data_a3f8e6 -> pow_a3e7a.items\n            i_2bdf4d -> pow_a3e7a.input\n            pow_a3e7a.result -> div_547f34.first\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> add_88bb8a.first\n            2 -> pow_a3e7a.exponent\n        } -> for_7a1c21.next\n        n_4a5e15 -> for_7a1c21.n\n        for_7a1c21.item -> sum\n    }\n\n    \n\n    instance(x: -176, y: 529) sum_fourth_power_f2f8d0 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 2, name: \"n\") property(Number) n_1a6c4f\n\n        out(x: 1149, y: 5, name: \"output\") property(Number) output_b8bfb3\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -34, y: -25, name: \"_index\") property(Number) _index_170471\n            in(x: -28, y: 79, name: \"i\") property(Number) i_bf0e4d\n\n            out(x: 1032, y: 45, name: \"output\") property(Number) output_e3c9b1\n\n            instance(x: 112, y: 51) pow_5a8c6b root.Std_k98ojb.Math.Pow {}\n            instance(x: 246, y: 44) add_88bb8a root.Std_k98ojb.Math.Add {}\n            instance(x: 97, y: -127) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 656, y: -330) floor_61b38d root.Std_k98ojb.Math.Floor {}\n            data_instance(x: 394, y: -339) data_cde0dc  = [4]\n            pow_5a8c6b.result -> add_88bb8a.first\n            modulo_ad7b2a.result -> floor_61b38d.first\n            i_bf0e4d -> modulo_ad7b2a.value\n        } -> for_065883.next\n        data_cde0dc -> pow_5a8c6b.gen_0\n        1 -> pow_5a8c6b.base\n        add_88bb8a.continue_d9efd7 -> pow_5a8c6b.execute_cdac2a\n        for_065883.index -> pow_5a8c6b.second\n        n_1a6c4f -> floor_61b38d.input\n        floor_61b38d.output -> add_88bb8a.second\n    }\n\n    \n\n    instance(x: 0, y: -37) sum_fourth_power_d7e5ec root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 3, name: \"n\") property(Number) n_4f8e6a\n\n        out(x: 1099, y: 2, name: \"sum\") property(Number) sum_d1d6c5\n\n        instance(x: 0, y: 0) for_1b5c7b root.Std_k98ojb.Std.For {}\n        instance(x: -39, y: 26, name: \"i\") counter_4f2e38 root.Std_k98ojb.Counter {}\n        data_instance(x: 0, y: -341) data_6a3c8d  = [sum]\n        instance(x: 104, y: 24) modulo_f1d5f2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 346, y: 29) add_4e4f43 root.Std_k98ojb.Math.Add {}\n        instance(x: 0, y: -342) power_6a9c3d root.Std_k98ojb.Math.Pow {}\n        setter(x: 0, y: 0, name: \"setter_5d7d1f\") setter_5d7d1f = sum\n        instance(x: 104, y: 25) fourth_power_4a6df2 root.Std_k98ojb.Math.Pow {}\n        power_6a9c3d.result -> fourth_power_4a6df2.input\n        modulo_f1d5f2.divisor -> fourth_power_4a6df2.input\n        add_4e4f43.first -> sum\n        add_4e4f43.second -> fourth_power_4a6df2.result\n        power_6a9c3d.input -> i.n_4f8e6a\n        i.index -> counter_4f2e38.value\n    }\n\n    \n\n    instance(x: -41, y: 53) sum_fourth_power_7d8b5f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 2, name: \"n\") property(Number) n_8b1f0d\n\n        out(x: 1296, y: 7, name: \"sum\") property(Number) sum_c9e3c4\n        instance(x: 83, y: 64, name: \"odd_numbers\") generate_range_d5a95e root.Std_k98ojb.List.GenerateRange {\n            from: 1\n            to: n_8b1f0d\n        }\n        instance(x: -341, y: 56) map_7c6a4b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1009, y: 49) power_f3e2db root.Std_k98ojb.Math.Pow {}\n        instance(x: 1048, y: -28, name: \"addition\") add_5d0a4f root.Std_k98ojb.Math.Add {}\n        data_instance(x: 1021, y: -26) data_b6d9aa  = [2]\n        instance(x: -294, y: 63) firstitem_7c9e38 root.Std_k98ojb.List.FirstItem {}\n        data_b6d9aa -> power_f3e2db.gen_0\n        odd_numbers -> map_7c6a4b.items\n        map_7c6a4b.output_list -> add_5d0a4f.listWithItem\n        firstitem_7c9e38.item -> add_5d0a4f.first\n        power_f3e2db.result -> add_5d0a4f.second\n    }\n\n    \n\n    instance(x: -55, y: 109) sum_fourth_power_e8cd34 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_6d4a3b\n\n        out(x: 1061, y: -346, name: \"output\") property(Number) output_ae4e8f\n\n        instance(x: 0, y: 0) for_0b5c9f root.Std_k98ojb.Std.For {}\n        instance(x: 101, y: -336, name: \"fourth_power\") Math.Pow {}\n        instance(x: 106, y: -343, name: \"sum_of_powers\") Std.Count {}\n        instance(x: 105, y: -338, name: \"odd_number\") Std.IfExpression {}\n\n        data_instance(x: -341, y: -336) data_5c7e3d  = [4]\n        for_0b5c9f.reset -> sum_of_powers.reset\n        for_0b5c9f.done -> sum_of_powers.continue\n        odd_number.then -> fourth_power.input\n        2 -> odd_number.gen_0\n        Math.Pow.result -> sum_of_powers.value\n        data_5c7e3d -> sum_of_powers.items\n        Std.Count.reset -> for_0b5c9f.reset\n        Std.Count.continue -> sum_of_powers.continue\n        2 -> Std.Count.input\n        Std.Count.value -> fourth_power.result\n    }\n\n    \n\n    instance(x: -289, y: -19) sum_fourth_power_7e6a3 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_odd {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_3d5e38\n\n        out(x: 1049, y: -317, name: \"sum\") property(Number) sum_6c8f66\n\n        instance(x: -341, y: -304, name: \"first_odd_number\") for_0b4f7a root.Std_k98ojb.Std.For {}\n        instance(x: 1045, y: -299, name: \"power\") Math_expression_9d1e2c root.Std_k98ojb.Math.Expression {\n            expression: \"n * n * n * n\"\n        }\n        instance(x: 1037, y: 55) modulo_f0f6a3 root.Std_k98ojb.Math.Modulo {}\n        data_instance(x: -509, y: -305) data_1c2e5d  = [4]\n        instance(x: -336, y: 59) add_8eb9c7 root.Std_k98ojb.Math.Add {}\n        instance(x: 1046, y: -301) div_f7a0f3 root.Std_k98ojb.Math.Div {}\n        instance(x: 1052, y: -300) sum_d1d4e5 root.Std_k98ojb.List.Sum {}\n        list_07cae4 -> for_0b4f7a.items\n        data_1c2e5d -> power.gen_0\n        power.result -> add_8eb9c7.first\n        3 -> add_8eb9c7.second\n        add_8eb9c7.result -> div_f7a0f3.first\n        4 -> div_f7a0f3.second\n        div_f7a0f3.result -> sum_d1d4e5.input\n        data_1c2e5d.length -> sum_d1d4e5.n_6b655b\n    }\n\n    \n\n    instance(x: -294, y: 569) sum_fourth_odd_e9dd8c root.main.sum_fourth_odd {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -527, y: 2, name: \"n\") property(Number) n_3d1f5b\n\n        out(x: 1146, y: 7, name: \"output\") property(Number) output_4a0c23\n\n        instance(x: 80, y: -417) ifexpression_d7e9eb root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 46, y: -383) sum_fourth_power_8f1a5c root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_a3d3e0 root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 303, y: 2) pow_e8d7a4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        4 -> pow_e8d7a4.power\n        2 -> div_547f34.second\n        div_547f34.result -> add_a3d3e0.first\n        mul_f892a4.result -> div_547f34.first\n        data_cde0dc -> mul_f892a4.second\n        pow_e8d7a4.result -> sum_fourth_power_8f1a5c.n_3d1f5b\n        floor_61b38d.output -> add_a3d3e0.first\n        add_a3d3e0.result -> sum_fourth_power_8f1a5c.sum\n    }\n\n    \n\n    instance(x: -291, y: 177) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -209, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 324, y: 0, name: \"output\") property(Number) output_7c2a6e\n\n        instance(x: 12, y: -1) square_8f5d4b root.Std_k98ojb.Math.Pow {}\n        instance(x: 18, y: -3) times_9c0c21 root.Std_k98ojb.Math.Times {}\n        side_ai -> times_9c0c21.first\n        6 -> square_8f5d4b.exponent\n        square_8f5d4b.result -> times_9c0c21.second\n        times_9c0c21.result -> output_7c2a6e\n    }\n\n    \n\n    instance(x: -193, y: 3) cube_surface_area_a9f2b8 root.main_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -219, y: 0, name: \"side\") property(Number) side_6d5a1b\n        out(x: 216, y: 7, name: \"area\") property(Number) area_bf3c21\n\n        instance(x: 15, y: 0) four_times_side_node root.Std_k98ojb.Math.Expression {\n            expression: \"4 * side^2\"\n        }\n        side_6d5a1b -> four_times_side_node.gen_0\n        four_times_side_node.result -> area_bf3c21\n    }\n\n    \n\n    instance(x: 15, y: -47) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -222, y: 0, name: \"side\") property(Number) side_5f4a2b\n        out(x: 1386, y: 7, name: \"output\") property(Number) output_a8d3e1\n\n        instance(x: 13, y: -47) expression_d9c8c4 root.Std_k98ojb.Math.Expression {\n            expression: \"(6 * (side^2))\"\n        }\n        side_5f4a2b -> expression_d9c8c4.gen_0\n        expression_d9c8c4.result -> output_a8d3e1\n    }\n\n    \n\n    instance(x: 11, y: -44) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -114, y: 0, name: \"side\") property(Number) side_9e1d4f\n        out(x: 324, y: 7, name: \"output\") property(Number) output_ea6c8b\n\n        instance(x: 23, y: -16) square_2f3d5f root.Std_k98ojb.Math.Pow {}\n        side_9e1d4f -> square_2f3d5f.input\n        2 -> square_2f3d5f.exponent\n        square_2f3d5f.result -> output_ea6c8b\n        instance(x: 0, y: -11) multiply_b9e7eb root.Std_k98ojb.Math.Mul {}\n        side_9e1d4f -> multiply_b9e7eb.first\n        output_ea6c8b -> multiply_b9e7eb.second\n        multiply_b9e7eb.result -> output_ea6c8b\n    }\n\n    \n\n    instance(x: -95, y: 0) surface_area_2d5f root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -219, y: 0, name: \"side\") property(Number) side_ai\n\n        out(x: 108, y: 0, name: \"result\") property(Number) result_ai\n        out(x: 1176, y: 0, name: \"continue\") trigger() continue_8d4e5f\n        out(x: 1092, y: -11, name: \"output\") property(Number) output_d1c3df\n\n        instance(x: 22, y: 0) math_mul_node root.Std_k98ojb.Math.Mul {}\n        side_ai -> math_mul_node.first\n        6 -> math_mul_node.second\n        math_mul_node.result -> result_ai\n        instance(x: -21, y: 0) math_add_node root.Std_k98ojb.Math.Add {}\n        result_ai -> math_add_node.first\n        result_ai -> math_add_node.second\n        math_add_node.result -> output_d1c3df\n\n        continue_8d4e5f -> surface_area.execute\n    }\n\n    \n\n    instance(x: 0, y: -13) surface_area_7a9a2b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_5d8c6b\n\n        out(x: 216, y: -13, name: \"output\") property(Number) output_c4f7e3\n    }\n\n    instance(x: -42, y: -27) math_pow_node root.Std_k98ojb.Math.Pow {}\n    instance(x: -43, y: -21) math_mul_node root.Std_k98ojb.Math.Mul {}\n    instance(x: 0, y: 0) math_6e87f2 root.Std_k98ojb.List.GenerateRange {}\n    instance(x: 42, y: 27) sum_9c4d3a root.Std_k98ojb.Math.Sum {}\n\n    math_pow_node.result -> math_mul_node.first\n    side_5d8c6b -> math_mul_node.second\n    math_pow_node.y -> math_6e87f2.from\n    3 -> math_6e87f2.to\n    math_6e87f2.list -> sum_9c4d3a.items\n    sum_9c4d3a.result -> output_c4f7e3\n}\n\ninstance(x: -42, y: -27) surface_area_b5d1b8 root.main.surface_area {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -219, y: 55, name: \"side_length\") property(Number) side_length_8a3e4d\n        out(x: 2160, y: -19, name: \"area\") property(Number) area_a1c0f2\n\n        instance(x: 14, y: 62) square_6a7d35 root.Std_k98ojb.Math.Pow {}\n        side_length_8a3e4d -> square_6a7d35.first\n        2 -> square_6a7d35.second\n        square_6a7d35.result -> area_a1c0f2\n\n        instance(x: -219, y: 55) multiply_f9b5f1 root.Std_k98ojb.Math.Mul {}\n        side_length_8a3e4d -> multiply_f9b5f1.first\n        square_6a7d35.result -> multiply_f9b5f1.second\n        multiply_f9b5f1.result -> area_a1c0f2\n\n        instance(x: 14, y: 67) add_b3e8db root.Std_k98ojb.Math.Add {}\n        4 -> add_b3e8db.first\n        side_length_8a3e4d -> add_b3e8db.second\n        add_b3e8db.result -> area_a1c0f2\n\n    }\n\n    \n\n    instance(x: 48, y: 19) surface_area_f6b9e5 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -215, y: 0, name: \"side\") property(Number) side_5a3f43\n        out(x: 1086, y: 7, name: \"result\") property(Number) result_f7d4c9\n\n        instance(x: 0, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        math_pow_node.result -> side_5a3f43\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> result_f7d4c9\n        6 -> multiply_9e8a95\n        side_5a3f43 -> multiply_9e8a95.first\n        multiply_9e8a95.second -> result_f7d4c9\n    }\n\n    \n\n    instance(x: -210, y: -19, name: \"surface_area\") surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_c3a9f6 {\n        in(x: -216, y: 123, name: \"side\") property(Number) side_8f1d2e\n\n        out(x: 2160, y: -21, name: \"surface_area\") property(Number) surface_area_9c4b5f\n\n        instance(x: 201, y: 120) sum_3f7aee root.Std_k98ojb.Math.Sum {}\n        data_instance(x: 208, y: 122) data_d2d6e0  = [side, side, side, side]\n        instance(x: -82, y: -19) multiply_b9c8df root.Std_k98ojb.Math.Mul {}\n        side -> multiply_b9c8df.first\n        side -> multiply_b9c8df.second\n        data_d2d6e0 -> multiply_b9c8df.list\n        4 -> sum_3f7aee.count\n        sum_3f7aee.result -> surface_area_9c4b5f\n    }\n\n    \n\n    instance(x: 216, y: -19) surface_area_1d1e0 root.main.surface_area_c3a9f6 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -114, y: 13, name: \"side\") property(Number) side_4e3d5b\n        out(x: 2160, y: 7, name: \"area\") property(Number) area_b1e2c9\n\n        instance(x: 23, y: 16) square_8f6a66 root.Std_k98ojb.Math.Pow {}\n        side_4e3d5b -> square_8f6a66.base\n        2 -> square_8f6a66.exponent\n        square_8f6a66.result -> area_b1e2c9\n        instance(x: -69, y: 19) multiply_3d7f47 root.Std_k98ojb.Math.Mul {}\n        side_4e3d5b -> multiply_3d7f47.first\n        6 -> multiply_3d7f47.second\n        multiply_3d7f47.result -> area_b1e2c9\n    }\n\n    \n\n    instance(x: -85, y: -46, name: \"surface_area\") surface_area_node root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -469, y: 23, name: \"list\") property(List) list_8f6b3a\n\n        out(x: 1007, y: 4, name: \"result\") property(Number) result_e9c2e0\n\n        instance(x: 109, y: 64) max_5d2e43 root.Std_k98ojb.List.Max {}\n        list_8f6b3a -> max_5d2e43.items\n        instance(x: -19, y: 56) min_9c0eb4 root.Std_k98ojb.List.Min {}\n        list_8f6b3a -> min_9c0eb4.items\n        instance(x: -108, y: 55) sub_1d2dd7 root.Std_k98ojb.Math.Sub {}\n        max_5d2e43.result -> sub_1d2dd7.first\n        min_9c0eb4.result -> sub_1d2dd7.second\n        sub_1d2dd7.result -> result_e9c2e0\n    }\n\n    \n\n    instance(x: -69, y: 11) diff_max_min_6f5c8b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: 0, name: \"list\") property(List) list_5d3e9b\n\n        out(x: 1011, y: -1, name: \"difference\") property(Number) difference_a2a6f7\n\n        instance(x: 0, y: 0) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: 0) max_3e9c5d root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_6f2a2f root.Std_k98ojb.List.Min {}\n        instance(x: -19, y: 0) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 0, y: 1) ifexpression_c7d2c8 root.Std_k98ojb.Std.IfExpression {}\n\n        list_5d3e9b -> length_4b8927.list\n        length_4b8927.length -> max_3e9c5d.length\n        length_4b8927.length -> min_6f2a2f.length\n        length_4b8927.length -> sub_f133b2.first\n        0 -> sub_f133b2.second\n        list_5d3e9b -> sub_f133b2.items\n        max_3e9c5d.value -> ifexpression_c7d2c8.value\n        min_6f2a2f.value -> ifexpression_c7d2c8.value\n        ifexpression_c7d2c8.then -> sub_f133b2.execute\n        list_5d3e9b -> sub_f133b2.items\n        sub_f133b2.result -> difference_a2a6f7\n    }\n\n    \n\n    instance(x: 0, y: -1) diff_max_min_f4f2c1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -475, y: 15, name: \"list\") property(List) list_8f5d2e\n\n        out(x: 1236, y: -3, name: \"output\") property(Number) output_b7a0c4\n\n        instance(x: -109, y: 43, name: \"smallest\") find_smallest_1b9a66 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -105, y: 47, name: \"largest\") find_largest_a2d5e3 root.Std_k98ojb.Iteration.Find {}\n        list_8f5d2e -> find_smallest_1b9a66.items\n        list_8f5d2e -> find_largest_a2d5e3.items\n        func() {\n            in(x: -121, y: 33, name: \"x\") property(Number) x_4df2c7\n\n            out(x: 1236, y: -3, name: \"\") property(Number) _b8f0a9\n\n            instance(x: 92, y: 31) max_5d1e25 root.Std_k98ojb.Math.Max {}\n            find_largest_a2d5e3.item -> max_5d1e25.left\n            x_4df2c7 -> max_5d1e25.value\n            max_5d1e25.result -> _b8f0a9\n        } -> find_smallest_1b9a66.predicate\n        func() {\n            in(x: -121, y: 33, name: \"x\") property(Number) x_4df2c7\n\n            out(x: 1236, y: -3, name: \"\") property(Number) _b8f0a9\n\n            instance(x: 92, y: 31) min_1d2c5e root.Std_k98ojb.Math.Min {}\n            find_smallest_1b9a66.item -> min_1d2c5e.left\n            x_4df2c7 -> min_1d2c5e.value\n            min_1d2c5e.result -> _b8f0a9\n        } -> find_largest_a2d5e3.predicate\n        list_8f5d2e -> diff.items\n        find_smallest_1b9a66.item -> diff.new_value\n        find_largest_a2d5e3.item -> diff.second\n        output_b7a0c4.continue -> diff.execute\n    }\n\n    \n\n    instance(x: -91, y: 46) diff_6f2cd8 root.main.diff {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -446, y: 23, name: \"list\") property(List) list_5d0b4f\n\n        out(x: 1219, y: 8, name: \"difference\") property(Number) difference_ea2e3c\n\n        instance(x: 1047, y: -115, name: \"max\") property(Number) max_6c8f77\n        instance(x: -45, y: 144, name: \"min\") property(Number) min_8d4b1c\n\n        instance(x: 0, y: 0) for_d3e5ec root.Std_k98ojb.Std.For {}\n        list_5d0b4f -> for_d3e5ec.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_1a2f8c\n\n            out(x: 1239, y: -54, name: \"\") property(Number) result_b6b5d4\n\n            instance(x: 95, y: -44) max_0b2e77 root.Std_k98ojb.List.Max {}\n            item_1a2f8c -> max_0b2e77.value\n            for_d3e5ec.index -> max_0b2e77.index\n            max_0b2e77.result -> max_6c8f77\n        } -> for_d3e5ec.handler\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_1a2f8c\n\n            out(x: 1239, y: -54, name: \"\") property(Number) result_b6b5d4\n\n            instance(x: 95, y: -44) min_f7fdd0 root.Std_k98ojb.List.Min {}\n            item_1a2f8c -> min_f7fdd0.value\n            for_d3e5ec.index -> min_f7fdd0.index\n            min_f7fdd0.result -> min_8d4b1c\n        } -> for_d3e5ec.handler\n        max_6c8f77 -> diff_max_min.difference\n        min_8d4b1c -> diff_max_min.difference\n    }\n\n    \n\n    instance(x: -93, y: 145) diff_max_min_c9a2f0 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: 23, name: \"list\") property(List) list_9c4b8d\n\n        out(x: 1130, y: -2, name: \"result\") property(Number) result_c1a5f3\n\n        instance(x: 0, y: 0) max_8e7e42 root.Std_k98ojb.List.Max {}\n        instance(x: 0, y: 0) min_4c7589 root.Std_k98ojb.List.Min {}\n        list_9c4b8d -> max_8e7e42.list\n        list_9c4b8d -> min_4c7589.list\n        max_8e7e42.result -> result_c1a5f3\n        min_4c7589.result -> result_c1a5f3\n    }\n\n    \n\n    instance(x: -104, y: 43) diff_max_min_2d0e21 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -475, y: -215, name: \"list\") property(List) list_5d6d0b\n\n        out(x: 1004, y: -214, name: \"difference\") property(Number) difference_a8a2f9\n\n        instance(x: 102, y: -121) find_max_d7e3c9 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 101, y: -124) find_min_6d4e5d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 103, y: 23) sub_f2d8a1 root.Std_k98ojb.Math.Sub {}\n        list_5d6d0b -> find_max_d7e3c9.items\n        list_5d6d0b -> find_min_6d4e5d.items\n        find_max_d7e3c9.item -> sub_f2d8a1.first\n        find_min_6d4e5d.item -> sub_f2d8a1.second\n        sub_f2d8a1.result -> difference_a8a2f9\n    }\n\n    \n\n    instance(x: -95, y: 41) diff_largest_smallest_bc0bdf root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: 13, name: \"list\") property(List) list_d2d8f5\n\n        out(x: 1043, y: -47, name: \"result\") property(Number) result_7b9e34\n\n        instance(x: 0, y: 0) minmax_6e1a15 root.Std_k98ojb.List.MinMax {}\n        list_d2d8f5 -> minmax_6e1a15.list\n        minmax_6e1a15.result -> result_7b9e34\n    }\n\n    \n\n    instance(x: 0, y: -46) diff_max_min_f4c3d0 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: -234, name: \"list\") property(List) list_1f4e3a\n\n        out(x: 1238, y: -109, name: \"output\") property(Number) output_f0f5d6\n\n        instance(x: 93, y: -104) max_2bfc7d root.Std_k98ojb.List.Max {}\n        instance(x: 89, y: -38) min_9a3c8e root.Std_k98ojb.List.Min {}\n        list_1f4e3a -> max_2bfc7d.items\n        list_1f4e3a -> min_9a3c8e.items\n        max_2bfc7d.max -> output_f0f5d6\n        min_9a3c8e.min -> output_f0f5d6\n    }\n\n    \n\n    instance(x: -46, y: 45) diff_max_min_9a2c4d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -246, y: 16, name: \"list\") property(List) list_5a4b6d\n\n        out(x: 1010, y: -2, name: \"difference\") property(Number) difference_a1f2d9\n\n        instance(x: 104, y: -105) max_3e7c71 root.Std_k98ojb.List.Max {}\n        instance(x: 93, y: -22) min_d4a0df root.Std_k98ojb.List.Min {}\n        list_max_min -> max_3e7c71.items\n        list_max_min -> min_d4a0df.items\n        max_3e7c71.max -> difference_a1f2d9\n        min_d4a0df.min -> difference_a1f2d9\n    }\n\n    \n\n    instance(x: -69, y: 43) diff_max_min_f8b6e5 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -446, y: -227, name: \"list\") property(List) list_0a3d4f\n\n        out(x: 1042, y: -109, name: \"output\") property(Number) output_b5e7af\n\n        instance(x: 101, y: -121) length_e1b9c8 root.Std_k98ojb.List.Length {}\n        instance(x: -47, y: 23, name: \"max\") property(Number) max_4d2a0f\n        instance(x: 102, y: -115) min_c6e9f5 root.Std_k98ojb.Math.Min {}\n        instance(x: -49, y: -113) sub_8c1df2 root.Std_k98ojb.Math.Sub {}\n\n        list_0a3d4f -> length_e1b9c8.length\n        length_e1b9c8.length -> max_4d2a0f.max\n        list_0a3d4f -> min_c6e9f5.list\n        min_c6e9f5.min -> output_b5e7af\n        sub_8c1df2.first -> max_4d2a0f\n        sub_8c1df2.second -> output_b5e7af\n    }\n\n    \n\n    instance(x: 98, y: -67) diff_max_min_d3b5eb root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 155, name: \"n\") property(Number) n_4e9d2a\n\n        out(x: 1033, y: -1, name: \"output\") property(Bool) output_eb7c0f\n\n        instance(x: -82, y: 155) modulo_d6d5f8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -48, y: 4, name: \"check\") Std.If {\n            input: \"n % 2 == 0\"\n        }\n        n_4e9d2a -> modulo_d6d5f8.value\n        modulo_d6d5f8.divisor -> check.input\n        modulo_d6d5f8.result -> check.predicate\n        if (modulo_d6d5f8.result) then output_eb7c0f = true else output_eb7c0f = false\n    }\n\n    \n\n    instance(x: 45, y: -178) is_even_2e9df1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_6f5d3a\n\n        out(x: 1244, y: 1, name: \"output\") property(Bool) output_b2c9b7\n\n        instance(x: -108, y: 10, name: \"check\") Std_k98ojb.Std.If {\n            input: n_6f5d3a % 2 == 0\n            then: true\n            else: false\n        }\n        n_6f5d3a -> check.input\n        check.then -> output_b2c9b7\n        check.else -> output_b2c9b7\n    }\n\n    \n\n    instance(x: -47, y: 20) is_even_8f1d14 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -277, y: 23, name: \"n\") property(Number) n_1e3d4f\n\n        out(x: 1028, y: 14, name: \"output\") property(Bool) output_a2c5b6\n\n        instance(x: 0, y: 10) modulo_d2a5b7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -26, y: 17, name: \"continue\") trigger() continue_1f4d23\n        n_1e3d4f -> modulo_d2a5b7.value\n        0 -> modulo_d2a5b7.divisor\n        modulo_d2a5b7.result -> output_a2c5b6\n        modulo_d2a5b7.result -> continue_1f4d23.execute\n    }\n\n    \n\n    instance(x: -67, y: -38) is_even_f8e2b9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -285, y: 0, name: \"n\") property(Number) n_8f6a95\n\n        out(x: 1039, y: -1, name: \"output\") property(Bool) output_f3c4b5\n\n        instance(x: 0, y: 0) modulo_a1e7eb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 2, name: \"continue\") trigger() continue_e1f8d8\n        n_8f6a95 -> modulo_a1e7eb.value\n        0 -> modulo_a1e7eb.divisor\n        modulo_a1e7eb.result -> output_f3c4b5\n        modulo_a1e7eb.result == 0 -> output_f3c4b5\n    }\n\n    \n\n    instance(x: -292, y: 14) is_even_6a2f66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 155, name: \"n\") property(Number) n_8a0d9f\n\n        out(x: 1235, y: 44, name: \"output\") property(Bool) output_e4bdfc\n\n        instance(x: 0, y: 0) modulo_7e1ce2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -46, y: 45, name: \"check_even\") Std.If {\n            input: \"n % 2 == 0\"\n        }\n        n_8a0d9f -> modulo_7e1ce2.value\n        2 -> modulo_7e1ce2.divisor\n        modulo_7e1ce2.result -> check_even.input\n        check_even.then -> output_e4bdfc\n        check_even.else -> output_e4bdfc\n    }\n\n    \n\n    instance(x: -55, y: 21) is_even_c9d0f6 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") Is_Even {\n        in(x: -281, y: 18, name: \"n\") property(Number) n_5d8b1e\n\n        out(x: 1219, y: -2, name: \"output\") property(Bool) output_8f6c4a\n\n        instance(x: 0, y: 17) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 18) equal_a54bdc root.Std_k98ojb.Logic.Equal {}\n        n_5d8b1e -> modulo_c76d2b.value\n        2 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> equal_a54bdc.left\n        0 -> equal_a54bdc.right\n        equal_a54bdc.result -> output_8f6c4a\n    }\n\n    \n\n    instance(x: -67, y: 20) Is_Even_f9e5db root.main.Is_Even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 19, name: \"n\") property(Number) n_2d6e4f\n\n        out(x: 1093, y: -10, name: \"output\") property(Bool) output_d9f7c5\n        out(x: 1051, y: -22, name: \"continue\") trigger() continue_ba8c45\n\n        instance(x: -106, y: -15, name: \"modulus\") modulo_4e2d0b root.Std_k98ojb.Math.Modulo {}\n        n_2d6e4f -> modulo_4e2d0b.value\n        2 -> modulo_4e2d0b.divisor\n        modulo_4e2d0b.result -> output_d9f7c5\n        modulo_4e2d0b.result == 0 -> continue_ba8c45\n    }\n\n    \n\n    instance(x: -83, y: 73) is_even_c6e1f3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") IsEven {\n        in(x: -285, y: 23, name: \"number\") property(Number) number_5a3d35\n\n        out(x: 0, y: 25, name: \"output\") property(Bool) output_b8bdf1\n        out(x: 0, y: 55, name: \"continue\") trigger() continue_6e2c4f\n\n        instance(x: -105, y: -108) modulo_5a7d45 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 101, y: 23, name: \"IsEven_0e8dca\") Logic.And {}\n        number_5a3d35 -> modulo_5a7d45.value\n        2 -> modulo_5a7d45.divisor\n        modulo_5a7d45.result -> IsEven_0e8dca.left\n        0 -> IsEven_0e8dca.right\n        IsEven_0e8dca.result -> output_b8bdf1\n    }\n\n    \n\n    instance(x: -292, y: -4) IsEven_d6f2c7 root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") check_even {\n        in(x: -283, y: 19, name: \"number\") property(Number) number_5e3a1d\n\n        out(x: 1094, y: 7, name: \"output\") property(Bool) output_e0f8db\n\n        instance(x: -114, y: 11) modulo_a2c9b6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 292, y: 14) equal_3a4d66 root.Std_k98ojb.Logic.Equal {}\n        number_5e3a1d -> modulo_a2c9b6.value\n        0 -> modulo_a2c9b6.divisor\n        modulo_a2c9b6.result -> equal_3a4d66.left\n        2 -> equal_3a4d66.right\n        equal_3a4d66.result -> output_e0f8db\n    }\n\n    \n\n    instance(x: -109, y: 58) check_even_f1e5c7 root.main.check_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 18, name: \"n\") property(Number) n_6d0f2a\n\n        out(x: 1234, y: 5, name: \"output\") property(Bool) output_b1e7c5\n\n        instance(x: 109, y: 21) modulo_f9b3d5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 112, y: -14, name: \"continue\") trigger() continue_8a6f0f\n        is_even -> modulo_f9b3d5.execute\n        n_6d0f2a -> modulo_f9b3d5.value\n        modulo_f9b3d5.result -> output_b1e7c5\n        0 -> output_b1e7c5.input\n    }\n\n    \n\n    instance(x: -69, y: 49) is_even_8f6c21 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -34, y: 127) map_6f9c43 root.Std_k98ojb.Iteration.Map {\n            handler: function(it: Char) { return [it, input_ai.indexOf(it)] }\n        }\n        instance(x: 101, y: 55) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        instance(x: -34, y: 127) ifexpression_6f9c43 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it[1] != 0\"\n        }\n        instance(x: 101, y: 55) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        filter_7b3b7b.result -> map_6f9c43.items\n        ifexpression_6f9c43.then -> firstitem_870503.item\n        output_ai.value -> firstitem_870503.item[0]\n    }\n\n    \n\n    instance(x: -179, y: 30) FirstRepeat_ae8a5 root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -19, y: 257, name: \"map_1d6f9e\") map_1d6f9e = {}\n        instance(x: -1059, y: 521, name: \"count_3a2c4e\") count_3a2c4e root.Std_k98ojb.List.Count {}\n        instance(x: 196, y: 425) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == map_1d6f9e[it]\"\n        }\n        instance(x: -432, y: 620, name: \"first_repeated\") firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        tolower_7b3b7b.output -> map_1d6f9e.input\n        input_ai -> tolower_7b3b7b.input\n        count_3a2c4e.count -> ifexpression_a2fa90.execute\n        map_1d6f9e -> first_repeated.list\n        0 -> firstitem_3078c6.index\n        first_repeated.itemAtIndex -> output_ai\n        first_repeated.done -> ifexpression_a2fa90.else\n        count_3a2c4e.result -> ifexpression_a2fa90.predicate\n    }\n\n    \n\n    instance(x: -97, y: 127) first_repeated_eb8f7d root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeat {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) map_c4c2f9 root.Std_k98ojb.Iteration.Map {\n            handler: \"it => Std_k98ojb.List.Contains(input_ai)\"\n        }\n        instance(x: -534, y: -105) firstitem_59bc6e root.Std_k98ojb.List.FirstItem {}\n        instance(x: 340, y: 77) ifexpression_7f13b7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        output_ai -> firstitem_59bc6e.list\n        tolower_7b3b7b.output -> map_c4c2f9.items\n        map_c4c2f9.map -> firstitem_59bc6e.item\n        ifexpression_7f13b7.then -> firstitem_59bc6e.itemAtIndex\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeat_496e5e root.main.first_repeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -39, y: 26) if_7c284f root.Std_k98ojb.Std.If {}\n        instance(x: 112, y: 80) count_1c5e6a root.Std_k98ojb.Std.Count {}\n        instance(x: 196, y: 425) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        data_instance(x: 0, y: 1) data_cc1b1b = [first, middle, last]\n        lister_instance(x: -318, y: 521) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -48, y: 517) lastitem_3078c6 root.Std_k98ojb.List.LastItem {}\n        instance(x: 0, y: 1) filter_4d4556 root.Std_k98ojb.Query.Filter {\n            where: \"it == firstitem_870503.item\"\n        }\n        instance(x: -318, y: 521) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> contains_d42dce.contains\n        contains_d42dce.result -> if_7c284f.execute\n        if_7c284f.then -> count_1c5e6a.execute\n        firstitem_870503.item -> sub_9ff257.first\n        lastitem_3078c6.item -> sub_9ff257.second\n        count_1c5e6a.result -> getat_8eae56.index\n        getat_8eae56.itemAtIndex -> data_cc1b1b.last\n        filter_4d4556.result -> first_repeated_char.output\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_f21f44 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_1f5d9a\n\n        instance(x: -1049, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 772, y: 76) contains_0e4ddc root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 85) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        list_instance(x: -1049, y: 76) tolower_7b3b7b.output -> contains_0e4ddc.input\n        input_ai -> contains_0e4ddc.contains\n        find_6d05b0.item -> contains_0e4ddc.result\n        contains_0e4ddc.result -> output_1f5d9a\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_e7a8f3 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeating {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1049, y: -375) count_9b1bc3 root.Std_k98ojb.Std.Count {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first]\n        instance(x: -432, y: -620) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: -978, y: -566) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_instance(x: 0, y: 0) map_5a3d8f root.Std_k98ojb.Iteration.Map {}\n        tolower_7b3b7b.output -> count_9b1bc3.input\n        input_ai -> tolower_7b3b7b.input\n        data_cc1b1b.first -> sub_f133b2.first\n        length_4b8927.length -> sub_f133b2.second\n        map_5a3d8f.handler -> sub_f133b2.result\n        slice_3f3ee6.start -> 0\n        slice_3f3ee6.slice -> data_cc1b1b.first\n        tolower_7b3b7b.output -> count_9b1bc3.input\n        input_ai -> tolower_7b3b7b.input\n        map_5a3d8f.items -> slice_3f3ee6.flattened\n        data_cc1b1b.first -> output_ai\n    }\n\n    \n\n    instance(x: 101, y: -67) FirstRepeating_f53d27 root.main.FirstRepeating {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") find_first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: -189, y: -620, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 340, y: 77, name: \"char_count\") Std_k98ojb.Std.Count {}\n        instance(x: -432, y: 425, name: \"char_index\") Std_k98ojb.Std.Count {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first_char, count]\n        instance(x: -978, y: -566) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -1191, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_instance(x: 118, y: 540, name: \"char_list\") Std_k98ojb.List.Slice {}\n        instance(x: 1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1405, y: -492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.contains -> data_cc1b1b.first\n        list_instance.data -> sub_f133b2.slice\n        length_4b8927.length -> sub_f133b2.first\n        0 -> sub_f133b2.second\n        sub_f133b2.result -> char_index.count\n        tolower_7b3b7b.output -> data_cc1b1b.first\n        list_instance.data -> char_count.items\n        contains_d42dce.result -> char_index.result\n        char_count.result -> data_cc1b1b.count\n    }\n\n    \n\n    instance(x: -97, y: -68) find_first_repeated_496e5e root.main.find_first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") find_repeated_char {\n        in(x: -275, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"output\") property(Number) output_4f5a1b\n\n        instance(x: -1049, y: -375) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 196, y: 256) map_1a8f4e root.Std_k98ojb.Iteration.Map {}\n        instance(x: -432, y: 620) count_3c9b6a root.Std_k98ojb.Std.Count {}\n        instance(x: 771, y: 76) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.result -> equal_aabb6e.left\n        map_1a8f4e.handler -> if_7c284f.handler\n        count_3c9b6a.reset -> if_7c284f.execute\n        input_ai -> map_1a8f4e.input\n        0 -> map_1a8f4e.index\n        map_1a8f4e.output_list -> output_4f5a1b\n        count_3c9b6a.value -> equal_aabb6e.left\n        1 -> equal_aabb6e.right\n        if_7c284f.then -> map_1a8f4e.execute\n        contains_d42dce.result -> if_7c284f.predicate\n        output_4f5a1b.itemAtIndex -> equal_aabb6e.left\n    }\n\n    \n\n    instance(x: 777, y: 760) find_repeated_char_3e3c4 root.main.find_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") Find {\n        in(x: -530, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 620) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        data_instance(x: 0, y: 588) data_b1f8c4  = [first]\n        instance(x: 340, y: 76) ifexpression_634b7e root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        instance(x: -432, y: 620) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_instance(x: -34, y: 127) find_3f5d66 root.Std_k98ojb.Iteration.Find {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.result -> data_b1f8c4.first\n        ifexpression_634b7e.then -> find_3f5d66.execute\n        find_3f5d66.item -> sub_f133b2.first\n        input_ai -> sub_f133b2.second\n        sub_f133b2.result -> data_b1f8c4.first\n    }\n\n    \n\n    instance(x: -179, y: 30) Find_ae6a7 root.main.Find {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -275, y: 2, name: \"input\") property(String) input_ai\n        out(x: 530, y: 29, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) stringstolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -159, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: -1191, y: 438) count_c4a2f8 root.Std_k98ojb.Std.Count {}\n        instance(x: 340, y: 77) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {}\n        stringstolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> stringstolower_7b3b7b.input\n        contains_d42dce.contains -> output_ai\n        count_c4a2f8.reset -> ifexpression_a2fa90.execute\n        count_c4a2f8.count -> ifexpression_a2fa90.then\n        ifexpression_a2fa90.predicate -> stringstolower_7b3b7b.input\n        input_ai -> contains_d42dce.input\n        ifexpression_a2fa90.then -> count_c4a2f8.items\n    }\n\n    \n\n    instance(x: -67, y: 127) first_repeated_f21f44 root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: 23, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 101, y: -19, name: \"output\") property(Number) output_e2c0d3\n\n        instance(x: -105, y: -110) ifexpression_d2b6b5 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_smallest_value\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_smallest_value\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_smallest_value\n        list_8e9f1a -> ifexpression_d2b6b5.gen_0\n        ifexpression_d2b6b5.then -> setter_1cedb2.execute\n        list_8e9f1a[1] -> setter_37db7f.new_value\n        ifexpression_d2b6b5.else -> setter_37db7f.execute\n        instance(x: -105, y: -110) count_e2c0d3 root.Std_k98ojb.Std.Count {}\n        list_8e9f1a[0] -> count_e2c0d3.reset\n        2 -> count_e2c0d3.count\n        ifexpression_d2b6b5.then -> count_e2c0d3.execute\n        second_smallest_value.value -> output_e2c0d3\n    }\n\n    \n\n    instance(x: -67, y: -37) second_smallest_8e9f1a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: 2, name: \"list\") property(List) list_5d6a0d\n\n        out(x: 109, y: -1, name: \"min\") property(Number) min_ab9b7f\n        out(x: 114, y: 4, name: \"second_min\") property(Number) second_min_b3e8c2\n\n        instance(x: -103, y: 16, name: \"min_node\") Std_k98ojb.Std.If {}\n        list_5d6a0d -> min_node.items\n        instance(x: 113, y: 11, name: \"second_min_node\") Std_k98ojb.Std.If {}\n        second_min_b3e8c2 -> second_min_node.item\n    }\n\n    \n\n    instance(x: -92, y: 53) second_smallest_4f6f5a root.main.second_smallest {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") sec_smallest {\n        in(x: -114, y: 23, name: \"list\") property(List) list_9f4a2e\n\n        out(x: 123, y: 43, name: \"output\") property(Number) output_a8d7c5\n\n        instance(x: -102, y: 58, name: \"first_smallest\") Std_k98ojb.Std.If {}\n        in(x: -109, y: 21, name: \"execute\") trigger() execute_4a6f1e\n        in(x: -105, y: 85, name: \"second_smallest\") property(Number) second_smallest_d4c0d5\n\n        out(x: 102, y: 58, name: \"continue\") trigger() continue_7b8cd3\n        out(x: 123, y: 43, name: \"output\") property(Number) output_a8d7c5\n\n        instance(x: -95, y: -11, name: \"if_smallest\") Std_k98ojb.Std.If {}\n        list_9f4a2e -> if_smallest.list\n        if_smallest.then -> execute_4a6f1e.execute\n        0 -> execute_4a6f1e.new_value\n        list_9f4a2e -> first_smallest.items\n        first_smallest.item -> second_smallest_d4c0d5\n        if_smallest.else -> continue_7b8cd3\n        second_smallest_d4c0d5.continue -> continue_7b8cd3\n    }\n\n    \n\n    instance(x: -67, y: 93) sec_smallest_f9f5e2 root.main.sec_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: -76, name: \"list\") property(List) list_6e1d4f\n\n        out(x: -101, y: -73, name: \"output\") property(Number) output_d3a5c9\n\n        instance(x: 0, y: 0) second_min_node root.Std_k98ojb.Std.IfExpression {}\n        list_6e1d4f -> second_min_node.items\n        func() {\n            in(x: -103, y: -37, name: \"min\") property(Number) min_3eb8c9\n\n            out(x: 106, y: -73, name: \"\") property(Number) _7a5e1b\n\n            instance(x: 0, y: 0) ifexpression_a2d6f root.Std_k98ojb.Std.IfExpression {}\n            min_3eb8c9 -> ifexpression_a2d6f.gen_0\n            list_6e1d4f[1] -> ifexpression_a2d6f.gen_1\n            _7a5e1b -> ifexpression_a2d6f.value\n        } -> second_min_node.then\n        func() {\n            in(x: -103, y: 84, name: \"min\") property(Number) min_3eb8c9\n\n            out(x: -101, y: -73, name: \"\") property(Number) _7a5e1b\n\n            instance(x: 0, y: 0) ifexpression_a2d6f root.Std_k98ojb.Std.IfExpression {}\n            min_3eb8c9 -> ifexpression_a2d6f.gen_0\n            list_6e1d4f[0] -> ifexpression_a2d6f.gen_1\n            _7a5e1b -> ifexpression_a2d6f.value\n        } -> second_min_node.else\n    }\n\n    \n\n    instance(x: -59, y: 46) second_smallest_7dfc3f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -101, y: 4, name: \"list\") property(List) list_d3e5d2\n\n        out(x: 112, y: -114, name: \"output\") property(Number) output_6c7a8f\n\n        instance(x: -1049, y: 0, name: \"first_smallest\") Std.If {}\n        instance(x: -1001, y: -76, name: \"second_smallest_node\") Std.If {}\n        list_d3e5d2 -> first_smallest.items\n        instance(x: 112, y: -114) Std.Count {}\n        list_d3e5d2 -> second_smallest_node.items\n        first_smallest.then -> Std.Count.execute\n        Std.Count.reset -> Std.Count.new_value\n        1 -> Std.Count.value\n        Std.Count.continue -> Std.Count.new_value\n        list_d3e5d2 -> Std.Count.items\n        first_smallest.else -> second_smallest_node.then\n        Std.Count.length -> Std.Count.value\n        Std.Count.value -> Std.Count.new_value\n        if(Std.Count.value == 1) {\n            list_d3e5d2 -> Std.Count.items\n            Std.Count.reset -> Std.Count.new_value\n            0 -> Std.Count.value\n            Std.Count.continue -> Std.Count.new_value\n        } else {\n            second_smallest_node.then -> Std.If.execute\n            Std.If.left -> Std.If.right\n            list_d3e5d2 -> Std.If.items\n            Std.If.first -> Std.If.left\n            Std.If.second -> Std.If.right\n            Std.If.first -> Std.If.new_value\n        }\n        second_smallest_node.output_list -> output_6c7a8f\n    }\n\n    \n\n    instance(x: -100, y: 23) second_smallest_0d3e5 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -109, y: 2, name: \"list\") property(List) list_4c6a9e\n\n        out(x: 436, y: 85, name: \"second_min\") property(Number) second_min_5b1d35\n        instance(x: -106, y: 20, name: \"first_min\") property(Number) first_min_b8f2eb\n        instance(x: 0, y: 0, name: \"min_node\") Std_k98ojb.Std.If {}\n        list_4c6a9e -> min_node.items\n        instance(x: -105, y: 25, name: \"first_smallest\") Std_k98ojb.Std.IfExpression {}\n        first_smallest_expression.left -> min_node.then\n        first_smallest_expression.right -> min_node.else_\n        list_4c6a9e -> first_smallest_expression.inputs\n        instance(x: -106, y: 20, name: \"first_min_node\") Std_k98ojb.Std.If {}\n        first_min_node.left -> first_smallest_expression.then\n        first_min_node.right -> first_smallest_expression.else_\n        list_4c6a9e -> first_min_node.items\n        instance(x: -105, y: 25, name: \"second_smallest\") Std_k98ojb.Std.IfExpression {}\n        second_smallest_expression.left -> min_node.then\n        second_smallest_expression.right -> min_node.else_\n        list_4c6a9e -> second_smallest_expression.inputs\n        instance(x: -106, y: 20, name: \"second_min_node\") Std_k98ojb.Std.If {}\n        second_min_node.left -> second_smallest_expression.then\n        second_min_node.right -> second_smallest_expression.else_\n        list_4c6a9e -> second_min_node.items\n        instance(x: -105, y: 25, name: \"first_smallest_value\") Std_k98ojb.Std.If {}\n        first_smallest_value.left -> min_node.then\n        first_smallest_value.right -> min_node.else_\n        list_4c6a9e -> first_smallest_value.inputs\n        instance(x: -106, y: 20, name: \"first_min_value\") Std_k98ojb.Std.If {}\n        first_min_value.left -> first_min_node.then\n        first_min_value.right -> first_min_node.else_\n        list_4c6a9e -> first_min_value.inputs\n        instance(x: -105, y: 25, name: \"second_smallest_value\") Std_k98ojb.Std.If {}\n        second_smallest_value.left -> second_min_node.then\n        second_smallest_value.right -> second_min_node.else_\n        list_4c6a9e -> second_smallest_value.inputs\n\n        instance(x: -105, y: 25, name: \"second_smallest_node\") Std_k98ojb.Std.If {}\n        second_smallest_node.left -> first_smallest_expression.then\n        second_smallest_node.right -> first_smallest_expression.else_\n        list_4c6a9e -> second_smallest_node.items\n        instance(x: -105, y: 20, name: \"first_min_value_node\") Std_k98ojb.Std.If {}\n        first_min_value_node.left -> first_min_node.then\n        first_min_value_node.right -> first_min_node.else_\n        list_4c6a9e -> first_min_value_node.items\n        second_smallest_value.left -> first_smallest_value.then\n        second_smallest_value.right -> first_smallest_value.else_\n        list_4c6a9e -> second_smallest_value.inputs\n        instance(x: -105, y: 25, name: \"second_min_value\") Std_k98ojb.Std.If {}\n        second_min_value.left -> second_min_node.then\n        second_min_value.right -> second_min_node.else_\n        list_4c6a9e -> second_min_value.inputs\n\n        first_smallest_expression.gen_0.value -> first_min_b8f2eb\n        instance(x: -105, y: 25, name: \"second_smallest_value_node\") Std_k98ojb.Std.If {}\n        second_smallest_value_node.left -> second_smallest_expression.then\n        second_smallest_value_node.right -> second_smallest_expression.else_\n        list_4c6a9e -> second_smallest_value_node.items\n        instance(x: -105, y: 25, name: \"second_min_value_node\") Std_k98ojb.Std.If {}\n        second_min_value_node.left -> second_min_value.then\n        second_min_value_node.right -> second_min_value.else_\n        list_4c6a9e -> second_min_value_node.inputs\n\n    }\n\n    \n\n    instance(x: -105, y: 25) second_smallest_3c1f2b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1049, y: -527, name: \"list\") property(List) list_4e5d8f\n\n        out(x: 509, y: -49, name: \"min1\") property(Number) min1_e2a5c7\n        out(x: 508, y: -51, name: \"min2\") property(Number) min2_0c6d35\n\n        instance(x: 94, y: 70) Std.If() if_3e8f4 {}\n        instance(x: 92, y: 85) Std.IfExpression() ifexpr_1c7b5 {}\n        list_4e5d8f -> if_3e8f4.items\n        min1_e2a5c7 -> ifexpr_1c7b5.value\n        if_3e8f4.then -> ifexpr_1c7b5.else\n        Std.Count() count_9cd6f0 {}\n        list_4e5d8f -> count_9cd6f0.items\n        2 -> count_9cd6f0.reset\n        count_9cd6f0.count -> min1_e2a5c7\n    }\n\n    \n\n    instance(x: -34, y: 118) second_smallest_5c8d4e root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a sorted list.\") second_smallest {\n        in(x: -108, y: 2, name: \"list\") property(List) list_9e8f43\n\n        out(x: 439, y: 34, name: \"second\") property(Number) second_5c7b1d\n\n        instance(x: 0, y: 0) firstitem_a8a2b6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -44, y: 23, name: \"output\") property(Number) output_bfdd4e\n        instance(x: 93, y: 35) count_3d7c9d root.Std_k98ojb.Std.Count {}\n        instance(x: -43, y: 19, name: \"index\") property(Number) index_a2a1d0\n\n        list_9e8f43 -> firstitem_a8a2b6.list\n        count_3d7c9d.reset -> true\n        output_bfdd4e.continue -> firstitem_a8a2b6.reset\n        firstitem_a8a2b6.item -> second_smallest_node.second\n        list_9e8f43 -> second_smallest_node.items\n        count_3d7c9d.count -> index_a2a1d0\n        index_a2a1d0.continue -> firstitem_a8a2b6.reset\n    }\n\n    \n\n    instance(x: -38, y: 45) second_smallest_d5f2e4 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a given list.\") second_smallest {\n        in(x: -114, y: -83, name: \"list\") property(List) list_6a9d5e\n\n        out(x: 439, y: -67, name: \"min\") property(Number) min_e0b7f1\n        out(x: 528, y: -82, name: \"second_min\") property(Number) second_min_f4c2f3\n\n        instance(x: 95, y: -102) firstitem_6e8df9 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 103, y: -72, name: \"min_node\") node_k7a1d0 root.Std_k98ojb Std.IfExpression {}\n        instance(x: 105, y: -55) seconditem_5fdd33 root.Std_k98ojb.List.SecondItem {}\n        instance(x: 108, y: -47) ifexpression_a9c8e2 root.Std_k98ojb.Std.IfExpression {}\n        list_6a9d5e -> firstitem_6e8df9.list\n        min_node.then -> seconditem_5fdd33.list\n        list_6a9d5e -> node_k7a1d0.items\n        ifexpression_a9c8e2.then -> min_node.then\n        list_6a9d5e -> seconditem_5fdd33.list\n        ifexpression_a9c8e2.else -> min_node.else\n    }\n\n    \n\n    instance(x: 104, y: -73) second_smallest_e2ff3b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -114, y: 2, name: \"list\") property(List) list_9f8d4a\n\n        out(x: -112, y: 1, name: \"min\") property(Number) min_3e7c0b\n        out(x: 509, y: 1, name: \"second_min\") property(Number) second_min_6d6e5e\n\n        instance(x: 0, y: 0) firstitem_7f8a43 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -108, y: 2) min_num_9d3c4d root.Std_k98ojb.Std.IfExpression {}\n        list_9f8d4a -> min_num_9d3c4d.items\n        firstitem_7f8a43.item -> min_num_9d3c4d.x\n        0 -> min_num_9d3c4d.y\n        min_num_9d3c4d.value -> min_3e7c0b\n        second_min_6d6e5e -> min_num_9d3c4d.second\n\n        instance(x: -109, y: 1) ifexpression_bf8a2 root.Std_k98ojb.Std.IfExpression {}\n        list_9f8d4a -> ifexpression_bf8a2.items\n        firstitem_7f8a43.item -> ifexpression_bf8a2.x\n        0 -> ifexpression_bf8a2.y\n        ifexpression_bf8a2.value -> min_3e7c0b\n        second_min_6d6e5e -> ifexpression_bf8a2.second\n\n        instance(x: -108, y: 2) count_d2d4df root.Std_k98ojb.Std.Count {}\n        list_9f8d4a -> count_d2d4df.items\n        firstitem_7f8a43.item -> count_d2d4df.reset\n        min_num_9d3c4d.value -> count_d2d4df.count\n\n    }\n\n    \n\n    instance(x: -109, y: 1) second_smallest_6e5b0 root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12101,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks if two lists have at least one common element.\") has_common {\n        in(x: -475, y: 3, name: \"list1\") property(List) list_2d5e8b\n        in(x: -482, y: -23, name: \"list2\") property(List) list_d6a9c7\n\n        out(x: 1010, y: 4, name: \"output\") property(Bool) output_8f1d3d\n\n        instance(x: 103, y: -27) contains_b9e5f9 root.Std_k98ojb.List.Contains {}\n        list_2d5e8b -> contains_b9e5f9.left\n        list_d6a9c7 -> contains_b9e5f9.right\n        contains_b9e5f9.result -> output_8f1d3d\n    }\n\n    \n\n    instance(x: -48, y: 64) has_common_e2bdf4 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") has_common {\n        in(x: -475, y: 18, name: \"list1\") property(List) list_9a8f5d\n        in(x: -484, y: 23, name: \"list2\") property(List) list_e0c6e3\n\n        out(x: 1029, y: 12, name: \"output\") property(Bool) output_b2b4ea\n\n        instance(x: -8, y: 16) intersection_5a1f7d root.Std_k98ojb.Sets.Intersection {}\n        list_9a8f5d -> intersection_5a1f7d.left\n        list_e0c6e3 -> intersection_5a1f7d.right\n        intersection_5a1f7d.result -> output_b2b4ea\n    }\n\n    \n\n    instance(x: -91, y: 46) has_common_8e9d7 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if two lists have at least one common element.\") has_common_element {\n        in(x: -499, y: 15, name: \"list1\") property(List) list_0f3a9d\n        in(x: -505, y: 19, name: \"list2\") property(List) list_a8c6b7\n\n        out(x: 123, y: 10, name: \"output\") property(Bool) output_c1e4d5\n\n        instance(x: 92, y: 13, name: \"filter_common_0f3a9d\") filter_f3b46d root.Std_k98ojb.Query.Filter {}\n        list_0f3a9d -> filter_common_0f3a9d.items\n        filter_common_0f3a9d.result -> output_c1e4d5\n        instance(x: 92, y: 13) contains_f7c9d6 root.Std_k98ojb.List.Contains {}\n        list_a8c6b7 -> contains_f7c9d6.list\n        contains_f7c9d6.item -> output_c1e4d5\n    }\n\n    \n\n    instance(x: -292, y: 11) has_common_element_2f3a root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -475, y: 18, name: \"list1\") property(List) list_5d3a0f\n        in(x: -464, y: -113, name: \"list2\") property(List) list_e6e9c7\n\n        out(x: 1244, y: -97, name: \"output\") property(Bool) output_d1b4eb\n\n        instance(x: 94, y: -115) has_5a9f8d root.Std_k98ojb.List.Contains {}\n        list_e6e9c7 -> has_5a9f8d.list\n        list_5d3a0f -> has_5a9f8d.item\n        has_5a9f8d.is_contained -> output_d1b4eb\n    }\n\n    \n\n    instance(x: -293, y: 55) has_common_element_f7e3a2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if two lists have at least one common element.\") intersect_lists {\n        in(x: -499, y: 2, name: \"list1\") property(List) list_8d3e38\n        in(x: -494, y: 4, name: \"list2\") property(List) list_7b6c0f\n\n        out(x: 1009, y: 5, name: \"output\") property(Bool) output_e1c0a1\n\n        instance(x: -44, y: 8) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list_8d3e38 -> intersection_c7c7e6.left\n        list_7b6c0f -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> output_e1c0a1\n    }\n\n    \n\n    instance(x: -34, y: 123) intersect_lists_d4d2d3 root.main.intersect_lists {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -493, y: 3, name: \"list1\") property(List) list_5e0a8d\n        in(x: -499, y: -24, name: \"list2\") property(List) list_d7f6b4\n\n        out(x: 1039, y: -31, name: \"output\") property(Bool) output_b3c9ab\n\n        instance(x: 92, y: -28) set_intersection_4d5a8e root.Std_k98ojb.Sets.Intersection {}\n        list_d7f6b4 -> set_intersection_4d5a8e.left\n        list_5e0a8d -> set_intersection_4d5a8e.right\n        if (set_intersection_4d5a8e.intersect) {\n            output_b3c9ab = true\n        } else {\n            output_b3c9ab = false\n        }\n    }\n\n    \n\n    instance(x: -43, y: 47) has_common_a1d0f2 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -484, y: 3, name: \"list1\") property(List) list_4d9f0a\n        in(x: -488, y: -13, name: \"list2\") property(List) list_b8bfc3\n\n        out(x: 555, y: -24, name: \"output\") property(Bool) output_c7c5e6\n\n        instance(x: -319, y: 47) contains_27f1a9 root.Std_k98ojb.List.Contains {}\n        list_b8bfc3 -> contains_27f1a9.list\n        contains_27f1a9.item -> output_c7c5e6\n    }\n\n    \n\n    instance(x: -290, y: 59) has_common_element_d4d2b root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -509, y: -215, name: \"list1\") property(List) list_9e4f5b\n        in(x: -519, y: 24, name: \"list2\") property(List) list_e3b8d6\n\n        out(x: 1010, y: -69, name: \"output\") property(Bool) output_d7a2f1\n\n        instance(x: 94, y: -104) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_e3b8d6 -> contains_32727d.list\n        contains_32727d.item -> has_common_element.output_list\n        has_common_element.output_list = false\n        list_9e4f5b -> contains_32727d.items\n        func() {\n            in(x: -192, y: 83, name: \"current\") property(Number) current_b2c8a6\n\n            out(x: 121, y: -49, name: \"\") property(Bool) bool_e3f7b1\n\n            instance(x: 92, y: 78) contains_32727d root.Std_k98ojb.List.Contains {}\n            list_9e4f5b -> contains_32727d.list\n            current_b2c8a6 -> contains_32727d.item\n            has_common_element.output_list = bool_e3f7b1\n            contains_32727d.is_contained = true\n        } -> list_9e4f5b.onItem\n    }\n\n    \n\n    instance(x: -104, y: 49) has_common_element_f6a0c2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -471, y: 19, name: \"list1\") property(List) list_3f8e38\n        in(x: -478, y: 23, name: \"list2\") property(List) list_eb9d7a\n\n        out(x: 1230, y: 4, name: \"output\") property(Bool) output_bf5c1e\n\n        instance(x: 101, y: 21) filter_3d6cd1 root.Std_k98ojb.Query.Filter {}\n        instance(x: -48, y: 44) contains_f2d9c4 root.Std_k98ojb.List.Contains {}\n        list_eb9d7a -> filter_3d6cd1.list\n        filter_3d6cd1.result -> contains_f2d9c4.list\n        contains_f2d9c4.item -> output_bf5c1e\n    }\n\n    \n\n    instance(x: -45, y: 53) has_common_7a0df4 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -509, y: 4, name: \"list1\") property(List) list_0e9f5b\n        in(x: -514, y: 7, name: \"list2\") property(List) list_e3d6c8\n\n        out(x: 1029, y: 11, name: \"output\") property(Bool) output_4d3c43\n\n        instance(x: 94, y: 23) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_e3d6c8 -> contains_32727d.list\n        contains_32727d.item -> has_common_element.output_list\n        false -> has_common_element.output_list\n    }\n\n    \n\n    instance(x: -289, y: 13) has_common_element_b7a2f5 root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -278, y: 2, name: \"list\") property(List) list_8a5f9d\n\n        out(x: 1213, y: 4, name: \"output\") property(Bool) output_e0e1b7\n\n        instance(x: 95, y: 11) for_6c2f45 root.Std_k98ojb.Std.For {}\n        list_8a5f9d -> for_6c2f45.items\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_f3e7e1\n\n            out(x: 1044, y: -13, name: \"\") property(Number) difference_b9a8d0\n\n            instance(x: 89, y: 20) sub_2c0b6f root.Std_k98ojb.Math.Sub {}\n            current_f3e7e1 -> sub_2c0b6f.first\n            current_f3e7e1 + 1 -> sub_2c0b6f.second\n            difference_b9a8d0.result -> sub_2c0b6f.result\n        } -> for_6c2f45.handler\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_f3e7e1\n\n            out(x: 1044, y: -13, name: \"\") property(Bool) bool_9b8f66\n\n            instance(x: 89, y: 20) modulo_0a6c5d root.Std_k98ojb.Math.Modulo {}\n            current_f3e7e1 -> modulo_0a6c5d.value\n            1 -> modulo_0a6c5d.divisor\n            modulo_0a6c5d.result -> bool_9b8f66\n        } -> for_6c2f45.predicate\n        for_6c2f45.item -> output_e0e1b7\n    }\n\n    \n\n    instance(x: -83, y: 15) has_consecutive_numbers_b9a4db root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 3, name: \"list\") property(List) list_0d8e1a\n\n        out(x: 1239, y: -5, name: \"output\") property(Bool) output_b7c4f6\n\n        instance(x: 94, y: 15) isempty_1b2dd9 root.Std_k98ojb.List.IsEmpty {}\n        list_0d8e1a -> isempty_1b2dd9.list\n        isempty_1b2dd9.isEmpty -> output_b7c4f6\n        instance(x: -33, y: 44) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        list_0d8e1a -> firstitem_870503.list\n        firstitem_870503.item -> is_consecutive.gen_2\n        instance(x: 201, y: 39) lastitem_5c7f44 root.Std_k98ojb.List.LastItem {}\n        list_0d8e1a -> lastitem_5c7f44.list\n        lastitem_5c7f44.item -> is_consecutive.gen_1\n        instance(x: -23, y: 59) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: 0, y: 47) greaterthan_f9d3a4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1, y: 49) expression_d5c7c6 root.Std_k98ojb.Math.Expression {\n            expression: \"n == i + 1\"\n        }\n        instance(x: 0, y: -16) if_07b8c7 root.Std_k98ojb.Std.If {}\n        is_consecutive.output_list -> if_07b8c7.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(Number) current_a2d0e1\n\n            out(x: 515, y: 44, name: \"\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            current_a2d0e1 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            1 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> is_consecutive.predicate\n        instance(x: -33, y: 44) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"bool_af09a7 && (i + 1 == last)\"\n        }\n        firstitem_870503.item -> ifexpression_875761.gen_2\n        lastitem_5c7f44.item -> ifexpression_875761.gen_1\n        is_consecutive.then -> if_07b8c7.execute\n        func() {\n            in(x: -76, y: 46, name: \"current\") property(Number) current_a2d0e1\n\n            out(x: 382, y: 19, name: \"\") property(Bool) bool_af09a7\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            current_a2d0e1 -> mul_2f9d09.first\n            current_a2d0e1 -> mul_2f9d09.second\n            mul_2f9d09.result -> bool_af09a7\n        } -> is_consecutive.handler\n    }\n\n    \n\n    instance(x: -84, y: 59) is_consecutive_d4c6b5 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 1, name: \"list\") property(List) list_3a4f44\n\n        out(x: 1085, y: 10, name: \"output\") property(Bool) output_d2c6d7\n\n        instance(x: 93, y: 11) filter_f0b5e9 root.Std_k98ojb.Query.Filter {}\n        list_3a4f44 -> filter_f0b5e9.list\n        filter_f0b5e9.result -> output_d2c6d7\n        instance(x: -26, y: -23, name: \"diff\") sub_c8dd1a root.Std_k98ojb.Math.Sub {}\n        list_3a4f44 -> diff.left\n        1 -> diff.right\n        diff.result -> filter_f0b5e9.predicate\n        for_8cb3f6 -> filter_f0b5e9.items\n    }\n\n    \n\n    instance(x: -67, y: 53) is_consecutive_b9d7c2 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -246, y: 2, name: \"list\") property(List) list_5d3f44\n\n        out(x: 1028, y: -4, name: \"output\") property(Bool) output_f6a7eb\n\n        instance(x: -83, y: 0) for_e1e9b2 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -121, y: 28, name: \"index\") property(Number) index_8c4f45\n\n            out(x: 1043, y: -5, name: \"\") property(Number) _d1a0c2\n\n            instance(x: -92, y: 24) next_a7cd34 root.Std_k98ojb.Std.For {}\n            instance(x: 1028, y: -9) lessThanOrEqual_6f8e4c root.Std_k98ojb.Math.LessThanOrEqual {}\n            list_5d3f44 -> for_e1e9b2.items\n            for_e1e9b2.item -> next_a7cd34.item\n            index_8c4f45 -> lessThanOrEqual_6f8e4c.left\n            1 -> lessThanOrEqual_6f8e4c.right\n            lessThanOrEqual_6f8e4c.result -> _d1a0c2\n        } -> for_e1e9b2.handler\n        for_e1e9b2.done -> output_f6a7eb\n    }\n\n    \n\n    instance(x: -63, y: 35) is_consecutive_6dd5f3 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 3, name: \"lst\") property(List) lst_6f8e4d\n\n        out(x: 1210, y: -10, name: \"output\") property(Bool) output_ba9b2c\n\n        instance(x: -84, y: 5) filter_e1d3e7 root.Std_k98ojb.Query.Filter {}\n        lst_6f8b4d -> filter_e1d3e7.list\n        filter_e1d3e7.result -> output_ba9b2c\n        instance(x: -85, y: 11) for_f5e8df root.Std_k98ojb.Std.For {}\n        lst_6f8b4d -> for_f5e8df.items\n        func() {\n            in(x: -114, y: 44, name: \"i\") property(Number) i_d1c7a9\n\n            out(x: 123, y: 45, name: \"\") property(Number) diff_6f2d4b\n\n            instance(x: 97, y: 41) sub_5b3a8e root.Std_k98ojb.Math.Sub {}\n            i_d1c7a9 -> sub_5b3a8e.first\n            1 -> sub_5b3a8e.second\n            sub_5b3a8e.result -> diff_6f2d4b\n        } -> for_f5e8df.handler\n        func() {\n            in(x: -113, y: 44, name: \"prev\") property(Number) prev_a1c9ca\n\n            out(x: 123, y: 45, name: \"\") property(Number) num_6f2d4b\n\n            instance(x: 98, y: 40) add_b4554f root.Std_k98ojb.Math.Add {}\n            prev_a1c9ca -> add_b4554f.first\n            i_d1c7a9 -> add_b4554f.second\n            add_b4554f.result -> num_6f2d4b\n        } -> for_f5e8df.handler\n        for_f5e8df.item -> filter_e1d3e7.predicate\n        if(output_ba9b2c.value) {\n            for_f5e8df.index -> diff_6f2d4b\n            num_6f2d4b > prev_a1c9ca + 1 -> output_ba9b2c\n        }\n    }\n\n    \n\n    instance(x: -91, y: 10) is_consecutive_e7dd3e root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -294, y: 2, name: \"list\") property(List) list_6a8d5f\n\n        out(x: 1099, y: 7, name: \"output\") property(Bool) output_b3c8e1\n        out(x: 1120, y: -11, name: \"continue\") trigger() continue_c4b2f9\n\n        instance(x: 83, y: 5) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 201, y: 64) isnumeric_e7d0a2 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -33, y: 78) subtract_4c9e5a root.Std_k98ojb.Math.Sub {}\n        instance(x: 102, y: 73) greaterthan_3f8e21 root.Std_k98ojb.Math.GreaterThan {}\n        list_6a8d5f -> for_8cb3f6.items\n        func() {\n            in(x: -112, y: 44, name: \"i\") property(Number) i_9d0f2c\n\n            out(x: 1021, y: 45, name: \"\") property(Bool) _b0a8e4\n\n            instance(x: 100, y: 42) isnumeric_e7d0a2 root.Std_k98ojb.Strings.IsNumeric {}\n            i_9d0f2c -> isnumeric_e7d0a2.input\n            isnumeric_e7d0a2.result -> _b0a8e4\n        } -> for_8cb3f6.handler\n        func() {\n            in(x: -113, y: 43, name: \"i\") property(Number) i_9d0f2c\n\n            out(x: 1021, y: 44, name: \"\") property(Bool) _b0a8e4\n\n            instance(x: 100, y: 42) isnumeric_e7d0a2 root.Std_k98ojb.Strings.IsNumeric {}\n            i_9d0f2c -> isnumeric_e7d0a2.input\n            subtract_4c9e5a.result -> greaterthan_3f8e21.left\n            list_6a8d5f[subtract_4c9e5a.value] -> greaterthan_3f8e21.right\n            greaterthan_3f8e21.result -> _b0a8e4\n        } -> for_8cb3f6.handler\n        isnumeric_e7d0a2.result -> output_b3c8e1\n    }\n\n    \n\n    instance(x: -85, y: 70) contains_consecutive_f5c5e9 root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -288, y: 2, name: \"list\") property(List) list_1a8d6f\n\n        out(x: 1013, y: 5, name: \"output\") property(Bool) output_f4e7b3\n\n        instance(x: -55, y: 15) filter_c91965 root.Std_k98ojb.Query.Filter {}\n        list_1a8d6f -> filter_c91965.list\n        func() {\n            in(x: -28, y: 43, name: \"current\") property(Number) current_5d8c9e\n\n            out(x: 1034, y: 53, name: \"\") property(Bool) _3a0b7f\n\n            instance(x: 93, y: 48) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 311, y: 54) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_5d8c9f -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> _3a0b7f\n        } -> filter_c91965.handler\n    }\n\n    \n\n    instance(x: -28, y: 17) is_consecutive_b8d7c1 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -269, y: 4, name: \"list\") property(List) list_0a2f8d\n\n        out(x: 1236, y: -13, name: \"output\") property(Bool) output_e3b1e5\n\n        instance(x: -93, y: -21) count_7c9cd4 root.Std_k98ojb.Std.Count {}\n        list_0a2f8d -> count_7c9cd4.items\n        func() {\n            in(x: -121, y: 73, name: \"current\") property(Number) current_6e5d3b\n\n            out(x: 1236, y: 15, name: \"output\") property(Bool) output_f2f8f1\n\n            instance(x: 92, y: 70) ifexpression_9c4d23 root.Std_k98ojb.Std.IfExpression {}\n            list_0a2f8d -> ifexpression_9c4d23.items\n            current_6e5d3b -> ifexpression_9c4d23.gen_1\n            count_7c9cd4.value -> ifexpression_9c4d23.gen_0\n        } -> count_7c9cd4.handler\n        count_7c9cd4.count -> output_f2f8f1\n    }\n\n    \n\n    instance(x: -67, y: 24) is_consecutive_ea5dfb root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -288, y: 4, name: \"list\") property(List) list_1d3a42\n\n        out(x: 1015, y: -9, name: \"output\") property(Bool) output_8f2c45\n\n        instance(x: 0, y: 13) filter_c91965 root.Std_k98ojb.Query.Filter {}\n        instance(x: 201, y: 63) isnumeric_a3d0a1 root.Std_k98ojb.Strings.IsNumeric {}\n        function_5e7f6b root.Std_k98ojb.Math.Expression {\n            expression: \"it == it + 1\"\n        }\n        list_1d3a42 -> filter_c91965.list\n        isnumeric_a3d0a1.input -> filter_c91965.item\n        function_5e7f6b.result -> output_8f2c45\n    }\n\n    \n\n    instance(x: -92, y: 73) is_consecutive_e4f6eb root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -246, y: 2, name: \"list\") property(List) list_5a9f0e\n\n        out(x: 1238, y: 10, name: \"output\") property(Bool) output_d1c7b4\n\n        instance(x: -29, y: 11) for_a6c3d2 root.Std_k98ojb.Std.For {}\n        instance(x: -23, y: 28) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 191, y: 24) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 104, y: 35) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it + 1 == it + 2\"\n        }\n        instance(x: 103, y: 40) if_e19a62 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(Number) current_5e7f4d\n\n            out(x: 505, y: 42, name: \"\") property(Bool) bool_e3f6a4\n\n            instance(x: 90, y: 37) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 43) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            current_5e7f4d -> modulo_1088d5.value\n            1 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_e3f6a4\n        } -> for_a6c3d2.handler\n        list_5a9f0e -> for_a6c3d2.items\n        for_a6c3d2.item -> is_consecutive.gen_1\n        for_a6c3d2.index -> is_consecutive.gen_0\n        if_e19a62.then -> output_d1c7b4\n        contains_32727d.is_contained -> bool_e3f6a4\n    }\n\n    \n\n    instance(x: -69, y: 13) is_consecutive_9e2f66 root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: -186, name: \"main_list\") property(List) main_list_6f4d9b\n        in(x: -292, y: 134, name: \"sublist\") property(List) sublist_e8a0c5\n\n        out(x: 1023, y: -69, name: \"output\") property(Bool) output_7a1e23\n\n        instance(x: -81, y: -186) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -112, y: -215) eq_3d8c0b root.Std_k98ojb.Logic.Equal {}\n        sublist_e8a0c5 -> eq_3d8c0b.left\n        main_list_6f4d9b -> eq_3d8c0b.right\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_1a2e43 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 166, name: \"main_list\") property(List) main_list_9a8d6e\n        in(x: -292, y: -13, name: \"sub_list\") property(List) sub_list_1f7bdf\n\n        out(x: 509, y: 64, name: \"output\") property(Bool) output_f4c6e3\n\n        instance(x: -81, y: 166) contains_c9d0a5 root.Std_k98ojb.List.Contains {}\n        main_list_9a8d6e -> contains_c9d0a5.list\n        sub_list_1f7bdf -> contains_c9d0a5.item\n        contains_c9d0a5.is_contained -> output_f4c6e3\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_d8fdd2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 157, name: \"main_list\") property(List) main_list_3e5a2d\n        in(x: -269, y: -20, name: \"sublist\") property(List) sublist_a0b9c6\n\n        out(x: 444, y: -19, name: \"output\") property(Bool) output_e1f8eb\n\n        instance(x: -82, y: -26) filter_3a7d43 root.Std_k98ojb.Query.Filter {}\n        sublist_a0b9c6 -> filter_3a7d43.items\n        func() {\n            in(x: -192, y: 63, name: \"it\") property(Number) it_e5f1e4\n\n            out(x: 546, y: 64, name: \"\") property(Bool) bool_8c0f9b\n\n            instance(x: 246, y: 61) equal_c7a6d2 root.Std_k98ojb.Logic.Equal {}\n            it_e5f1e4 -> equal_c7a6d2.left\n            sublist_a0b9c6 -> equal_c7a6d2.right\n            equal_c7a6d2.result -> bool_8c0f9b\n        } -> filter_3a7d43.predicate\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_d5c1d4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -194, y: 157, name: \"main_list\") property(List) main_list_2a1d9b\n        in(x: -191, y: 164, name: \"sublist_list\") property(List) sublist_list_f0c5e8\n\n        out(x: 439, y: -109, name: \"output\") property(Bool) output_b7f8db\n\n        instance(x: -76, y: -110) length_6e87f2 root.Std_k98ojb.List.Length {}\n        sublist_list_f0c5e8 -> length_6e87f2.list\n        length_6e87f2.length -> is_sublist.sublist\n        main_list_2a1d9b -> is_sublist.main\n        is_sublist.result -> output_b7f8db\n    }\n\n    \n\n    instance(x: -68, y: 11) is_sublist_node root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 164, name: \"mainList\") property(List) mainList_a2f9a5\n        in(x: -484, y: 23, name: \"subList\") property(List) subList_7c4b6d\n\n        out(x: 1011, y: 59, name: \"output\") property(Bool) output_e0e3ac\n\n        instance(x: 426, y: -303) contains_32727d root.Std_k98ojb.List.Contains {}\n        mainList_a2f9a5 -> contains_32727d.list\n        subList_7c4b6d -> contains_32727d.item\n        contains_32727d.is_contained -> output_e0e3ac\n    }\n\n    \n\n    instance(x: -67, y: 12) is_sublist_f1f5a2 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 165, name: \"mainList\") property(List) mainList_0a1e9d\n        in(x: -273, y: -13, name: \"subList\") property(List) subList_f2fdd6\n\n        out(x: 444, y: 5, name: \"output\") property(Bool) output_a8c7b4\n\n        instance(x: 133, y: 165) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -23, y: 20, name: \"index\") property(Number) index_0a2d3c\n        function_0a8d4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index >= length_6e87f2.length || mainList_0a1e9d[index] != subList_f2fdd6[index]\"\n        }\n        instance(x: 201, y: -27) count_a8c7b4 root.Std_k98ojb.Std.Count {}\n        function_0a8d4f.then -> count_a8c7b4.reset\n        mainList_0a1e9d -> function_0a8d4f.index\n        subList_f2fdd6 -> function_0a8d4f.index\n    }\n\n    \n\n    instance(x: -67, y: 11) is_sublist_4c7b5a root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: -201, name: \"main_list\") property(List) main_list_4d2a1b\n        in(x: -278, y: 145, name: \"sub_list\") property(List) sub_list_a7e2c8\n\n        out(x: 1025, y: 63, name: \"output\") property(Bool) output_6f2f0d\n\n        instance(x: -208, y: -193) length_9b4a3f root.Std_k98ojb.List.Length {}\n        instance(x: 246, y: -194) is_equal_d7c5e1 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 394, y: 63) contains_f6d0df root.Std_k98ojb.List.Contains {}\n        list_4d2a1b -> contains_f6d0df.list\n        length_9b4a3f.length -> contains_f6d0df.index\n        sub_list_a7e2c8 -> is_equal_d7c5e1.left\n        main_list_4d2a1b -> is_equal_d7c5e1.right\n        is_equal_d7c5e1.result -> output_6f2f0d\n    }\n\n    \n\n    instance(x: 103, y: -25) is_sublist_8c9e3a root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 155, name: \"main_list\") property(List) main_list_0d3a8e\n        in(x: -273, y: 93, name: \"sub_list\") property(List) sub_list_eb7b9f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_5df2c1\n\n        instance(x: -208, y: 155) contains_32727d root.Std_k98ojb.List.Contains {}\n        main_list_0d3a8e -> contains_32727d.list\n        sub_list_eb7b9f -> contains_32727d.item\n        contains_32727d.is_contained -> output_5df2c1\n    }\n\n    \n\n    instance(x: 93, y: 11) is_sublist_f3f5a4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -394, y: 166, name: \"main_list\") property(List) main_list_3a8d5b\n        in(x: -294, y: -23, name: \"sublist\") property(List) sublist_d1f6db\n\n        out(x: 1012, y: -69, name: \"output\") property(Bool) output_4c9e42\n\n        instance(x: -82, y: 167) length_3d0b7a root.Std_k98ojb.List.Length {}\n        instance(x: -19, y: 73) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        sublist_d1f6db -> length_3d0b7a.list\n        length_3d0b7a.length -> greaterthan_cb50ae.right\n        main_list_3a8d5b -> greaterthan_cb50ae.left\n        list_3d0b7a.length -> greaterthan_cb50ae.value\n    }\n\n    \n\n    instance(x: 48, y: -67) is_sublist_e9f2e4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -394, y: 165, name: \"main_list\") property(List) main_list_9e4f3d\n        in(x: -409, y: -21, name: \"sublist\") property(List) sublist_e5a8c6\n\n        out(x: 1050, y: 55, name: \"output\") property(Bool) output_b7a1b4\n\n        instance(x: -394, y: 165) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -409, y: -21) slice_f3d9c8 root.Std_k98ojb.List.Slice {}\n        sublist_e5a8c6 -> slice_f3d9c8.list\n        0 -> slice_f3d9c8.start\n        length_6e87f2.length -> slice_f3d9c8.end\n        slice_f3d9c8.slice -> output_b7a1b4\n        main_list_9e4f3d -> length_6e87f2.list\n        length_6e87f2.length -> slice_f3d9c8.start\n    }\n\n    \n\n    instance(x: -394, y: 165) is_sublist_node root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -475, y: 2, name: \"list\") property(List) list_3a5f9d\n\n        out(x: 1097, y: -1, name: \"output\") property(Number) output_e4e0b8\n\n        instance(x: 0, y: 0) for_6c2a47 root.Std_k98ojb.Std.For {}\n        getter(x: 344, y: 170, name: \"getter_3f7d9e\") getter_3f7d9e = index\n        setter(x: 1, y: -243, name: \"setter_6c2a47\") setter_6c2a47 = index\n        instance(x: 44, y: 0) ifexpression_b8dd45 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current <= previous + 1\"\n        }\n        getter(x: -246, y: 166, name: \"getter_7a3f5e\") getter_7a3f5e = previous\n        setter(x: -245, y: -234, name: \"setter_6c2a47\") setter_6c2a47 = previous\n        instance(x: 49, y: -35) getat_e9bfc0 root.Std_k98ojb.List.GetAt {}\n        ifexpression_b8dd45.then -> setter_6c2a47.execute\n        list_3a5f9d -> for_6c2a47.items\n        for_6c2a47.item -> ifexpression_b8dd45.gen_1\n        for_6c2a47.index -> ifexpression_b8dd45.gen_0\n        getter_7a3f5e.value -> ifexpression_b8dd45.gen_2\n        for_6c2a47.onItem -> ifexpression_b8dd45.execute\n        for_6c2a47.done -> continue_a9d4b1\n        for_6c2a47.item -> setter_6c2a47.new_value\n        list_3a5f9d -> getat_e9bfc0.list\n        0 -> getat_e9bfc0.index\n        getat_e9bfc0.itemAtIndex -> setter_6c2a47.new_value\n        for_6c2a47.next -> continue_a9d4b1\n    }\n\n    \n\n    instance(x: -82, y: 159) find_smallest_missing_c7f5e2 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -0, y: 0, name: \"list\") property(List) list_8f4a6d\n        out(x: 1237, y: 5, name: \"output\") property(Number) output_3c6e5b\n\n        instance(x: -234, y: 74) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: -122) ifexpression_8a9d7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 335, y: -105, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 678, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_8a9d7f.else -> for_d26972.reset\n        for_d26972.item -> ifexpression_8a9d7f.gen_1\n        for_d26972.index -> ifexpression_8a9d7f.gen_0\n        getter_b280eb.value -> ifexpression_8a9d7f.gen_2\n        for_d26972.onItem -> ifexpression_8a9d7f.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_8f4a6d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        for_d26972.index -> setter_9d4f1c.new_value\n        continue_a96db6 -> for_d26972.reset\n    }\n\n    \n\n    instance(x: 13, y: -177) find_missing_b8e5a3 root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -446, y: 0, name: \"list\") property(List) list_d1d9d8\n\n        out(x: 1207, y: 4, name: \"output\") property(Number) output_6e2f3b\n\n        instance(x: 13, y: 0) for_5c5a25 root.Std_k98ojb.Std.For {}\n        instance(x: 43, y: -104) find_1d7f8b root.Std_k98ojb.Iteration.Find {}\n        instance(x: 56, y: -75) ifexpression_8e3f4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: 26, y: -115, name: \"getter_e2c6d7\") getter_e2c6d7 = previous\n        setter(x: 64, y: 4, name: \"setter_8f3b95\") setter_8f3b95 = previous\n        instance(x: 32, y: -105) math_modulo_node root.Std_k98ojb.Math.Modulo {}\n        list_d1d9d8 -> for_5c5a25.items\n        find_1d7f8b.predicate -> ifexpression_8e3f4e.execute\n        ifexpression_8e3f4e.value -> output_6e2f3b\n        ifexpression_8e3f4e.then -> setter_8f3b95.execute\n        for_5c5a25.item -> ifexpression_8e3f4e.gen_1\n        -1 -> setter_8f3b95.new_value\n        find_1d7f8b.itemAtIndex -> setter_e2c6d7.new_value\n        math_modulo_node.divisor -> 1\n        list_d1d9d8 -> math_modulo_node.value\n        for_5c5a25.index -> setter_e2c6d7.value\n        find_1d7f8b.itemAtIndex -> setter_e2c6d7.value\n        ifexpression_8e3f4e.then -> setter_8f3b95.execute\n        find_1d7f8b.done -> continue_a96db6\n        for_5c5a25.onItem -> ifexpression_8e3f4e.execute\n        for_5c5a25.index -> setter_e2c6d7.value\n        list_d1d9d8 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_e2c6d7.new_value\n        continue_a96db6 -> for_5c5a25.reset\n    }\n\n    \n\n    instance(x: -85, y: 157) find_missing_f1b0f4 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: 0, y: -243, name: \"list\") property(List) list_5f3e1d\n\n        out(x: 1192, y: -229, name: \"output\") property(Number) output_d6c7b9\n\n        instance(x: 341, y: 64) for_c8a8aa root.Std_k98ojb.Std.For {}\n        instance(x: 468, y: -20) ifexpression_1e5d4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == list_gen_0 + i\"\n        }\n        getter(x: 509, y: 169, name: \"getter_1a2c7a\") getter_1a2c7a = previous\n        setter(x: -16, y: -242, name: \"setter_1e5d4f\") setter_1e5d4f = previous\n        instance(x: 475, y: -123) count_0a3c45 root.Std_k98ojb.Std.Count {}\n        getter(x: 643, y: 173, name: \"getter_7a8f6e\") getter_7a8f6e = index\n        setter(x: -18, y: -241, name: \"setter_d1d0ca\") setter_d1d0ca = previous\n        instance(x: 528, y: -109) getat_9b1c85 root.Std_k98ojb.List.GetAt {}\n        instance(x: 644, y: -23) next_node root.Std_k98ojb.Std.For {}\n        list_5f3e1d -> for_c8a8aa.items\n        for_c8a8aa.item -> ifexpression_1e5d4f.gen_2\n        0 -> setter_d1d0ca.new_value\n        next_node.index -> ifexpression_1e5d4f.gen_0\n        getat_9b1c85.indexAtIndex -> getter_7a8f6e.new_value\n        for_c8a8aa.onItem -> ifexpression_1e5d4f.execute\n        for_c8a8aa.done -> next_node.reset\n        ifexpression_1e5d4f.then -> setter_1e5d4f.execute\n        list_5f3e1d -> getat_9b1c85.list\n        0 -> getat_9b1c85.index\n        getat_9b1c85.itemAtIndex -> setter_1e5d4f.new_value\n        for_c8a8aa.item -> ifexpression_1e5d4f.gen_3\n    }\n\n    \n\n    instance(x: 10, y: -176) find_missing_2df7d3 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -0, y: -233, name: \"execute\") trigger() execute_5e8d1a\n        in(x: 0, y: 0, name: \"list\") property(List) list_e3c6b2\n\n        out(x: 1237, y: 28, name: \"continue\") trigger() continue_4fdd9a\n        out(x: 1218, y: -1, name: \"output\") property(Number) output_dff0d5\n\n        instance(x: 74, y: -245) for_2b3c43 root.Std_k98ojb.Std.For {}\n        getter(x: 341, y: 170, name: \"getter_e6e4f1\") getter_e6e4f1 = previous\n        setter(x: 0, y: -246, name: \"setter_d7f8a5\") setter_d7f8a5 = previous\n        instance(x: 456, y: 15) ifexpression_2b9e77 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current - previous > 1\"\n        }\n        getter_e6e4f1.value -> ifexpression_2b9e77.gen_2\n        list_e3c6b2 -> for_2b3c43.items\n        for_2b3c43.item -> ifexpression_2b9e77.gen_0\n        for_2b3c43.index -> ifexpression_2b9e77.gen_1\n        setter_d7f8a5.continue -> for_2b3c43.reset\n        list_e3c6b2 -> for_2b3c43.items\n        ifexpression_2b9e77.then -> setter_d7f8a5.execute\n        0 -> setter_d7f8a5.new_value\n        for_2b3c43.item -> setter_d7f8a5.new_value\n        execute_5e8d1a -> setter_d7f8a5.execute\n        getter_e6e4f1.value -> output_dff0d5\n        ifexpression_2b9e77.else -> continue_4fdd9a\n    }\n\n    \n\n    instance(x: 777, y: -464) find_missing_c2e3a8 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -456, y: 2, name: \"list\") property(List) list_0b1d3f\n        out(x: 1237, y: 5, name: \"output\") property(Number) output_f9e9a8\n\n        instance(x: 0, y: 0) for_4c6df2 root.Std_k98ojb.Std.For {}\n        list_0b1d3f -> for_4c6df2.items\n        instance(x: -341, y: -235, name: \"previous\") property(Number) previous_a9a4e5\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)/2\"\n        }\n        getter(x: 502, y: 166, name: \"getter_cc0721\") getter_cc0721 = previous\n        instance(x: 62, y: -226, name: \"average\") div_2d44da root.Std_k98ojb.Math.Div {}\n        data_instance(x: 394, y: -339) data_3c713b  = [sum, average]\n        getter_cc0721.value -> expression_634b7e.gen_0\n        expression_634b7e.result -> div_2d44da.first\n        div_2d44da.result -> data_3c713b.sum\n        div_2d44da.result -> average_a9a4e5\n        div_2d44da.result -> for_4c6df2.index\n        instance(x: 151, y: -120) ifexpression_6c15d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == y\"\n        }\n        getter_cc0721.value -> ifexpression_6c15d4.gen_0\n        for_4c6df2.item -> ifexpression_6c15d4.gen_1\n        -1 -> for_4c6df2.new_value\n        expression_634b7e.result -> data_3c713b.sum\n        div_2d44da.result -> data_3c713b.average\n        for_4c6df2.item -> ifexpression_6c15d4.execute\n        instance(x: 772, y: -76) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_slice_node.startIndex -> average_a9a4e5\n        list_slice_node.endIndex -> for_4c6df2.index\n        list_slice_node.slice -> data_3c713b.sum\n        instance(x: 0, y: -110) count_node root.Std_k98ojb.Std.Count {}\n        count_node.resetTrigger -> ifexpression_6c15d4.then\n        count_node.countTrigger -> for_4c6df2.done\n        list_slice_node.result -> output_f9e9a8\n    }\n\n    \n\n    instance(x: -81, y: 159) find_smallest_missing_1fddfa root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -456, y: -227, name: \"list\") property(List) list_4f6d1a\n        out(x: 1182, y: -225, name: \"output\") property(Number) output_d2df8c\n\n        instance(x: 0, y: 0) for_9e7c5b root.Std_k98ojb.Std.For {}\n        instance(x: 44, y: 4) ifexpression_bf6a1d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -123, y: -247, name: \"getter_8c5e7f\") getter_8c5e7f = previous\n        setter(x: 678, y: -312, name: \"setter_2d5dd4\") setter_2d5dd4 = previous\n        instance(x: 54, y: 3) next_node root.Std_k98ojb.Std.For {}\n        list_4f6d1a -> for_9e7c5b.items\n        for_9e7c5b.item -> ifexpression_bf6a1d.gen_2\n        -1 -> setter_2d5dd4.new_value\n        for_9e7c5b.index -> ifexpression_bf6a1d.gen_0\n        getter_8c5e7f.value -> ifexpression_bf6a1d.gen_1\n        for_9e7c5b.onItem -> ifexpression_bf6a1d.execute\n        for_9e7c5b.done -> next_node.reset\n        next_node.item -> setter_2d5dd4.new_value\n        list_4f6d1a -> next_node.list\n        0 -> next_node.index\n        next_node.next -> ifexpression_bf6a1d.execute\n    }\n\n    \n\n    instance(x: -83, y: -179) find_missing_9e7c5b root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -475, y: 2, name: \"list\") property(List) list_5f8e1b\n        out(x: 1014, y: 6, name: \"output\") property(Number) output_eb3d7a\n\n        instance(x: 0, y: 0) for_a9c2e8 root.Std_k98ojb.Std.For {}\n        instance(x: -234, y: -105, name: \"index\") property(Number) index_4f2cd5\n        getter(x: -141, y: -20, name: \"getter_9d3a1f\") getter_9d3a1f = previous\n        setter(x: 0, y: -120, name: \"setter_a9c2e8\") setter_a9c2e8 = previous\n        instance(x: 341, y: 5) ifexpression_d4b7df root.Std_k98ojb.Std.IfExpression {\n            expression: \"index > 0 && index < list.length\"\n        }\n        getter_9d3a1f.value -> output_eb3d7a\n        setter_a9c2e8.continue -> for_a9c2e8.reset\n        list_5f8e1b -> for_a9c2e8.items\n        index -> ifexpression_d4b7df.gen_0\n        getter_9d3a1f.value -> ifexpression_d4b7df.gen_1\n        for_a9c2e8.item -> ifexpression_d4b7df.execute\n        for_a9c2e8.index -> setter_a9c2e8.new_value\n        list_5f8e1b -> ifexpression_d4b7df.list\n        0 -> ifexpression_d4b7df.index\n        for_a9c2e8.onItem -> ifexpression_d4b7df.execute\n        ifexpression_d4b7df.then -> setter_a9c2e8.execute\n        index -> setter_a9c2e8.new_value\n    }\n\n    \n\n    instance(x: -83, y: 161) find_missing_5f3d14 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -475, y: 0, name: \"list\") property(List) list_3d2d6a\n\n        out(x: 1217, y: 5, name: \"continue\") trigger() continue_1f8c63\n        out(x: 1189, y: 144, name: \"output\") property(Number) output_d4e0b3\n\n        instance(x: 342, y: 64) for_8d4a6f root.Std_k98ojb.Std.For {}\n        instance(x: 499, y: -105) ifexpression_b9c2ec root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == list.length-1 || current != (number+1)\"\n        }\n        getter(x: 654, y: 170, name: \"getter_7d4f8a\") getter_7d4f8a = next\n        setter(x: -0, y: -124, name: \"setter_c3c2b6\") setter_c3c2b6 = next\n        instance(x: 439, y: -120) count_node root.Std_k98ojb.Std.Count {}\n        list_3d2d6a -> for_8d4a6f.items\n        for_8d4a6f.item -> ifexpression_b9c2ec.gen_1\n        ifexpression_b9c2ec.value -> output_d4e0b3\n        ifexpression_b9c2ec.then -> setter_c3c2b6.execute\n        list_3d2d6a[0] -> for_8d4a6f.item\n        1 -> for_8d4a6f.index\n        next_item -> setter_c3c2b6.new_value\n        for_8d4a6f.next -> continue_1f8c63\n        ifexpression_b9c2ec.else -> for_8d4a6f.next\n    }\n\n    \n\n    instance(x: -43, y: 164) find_smallest_missing_f3d0e5 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -475, y: 0, name: \"list\") property(List) list_6a3e2d\n        in(x: -493, y: 34, name: \"execute\") trigger() execute_e8c5f1\n\n        out(x: 1187, y: 4, name: \"continue\") trigger() continue_c0b5c9\n        out(x: 1176, y: 147, name: \"output\") property(Number) output_2eef23\n\n        instance(x: -109, y: -121) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 334, y: 5) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -184, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_c0b5c9\n        ifexpression_875761.value -> output_2eef23\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_6a3e2d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_c0b5c9\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_6a3e2d -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        execute_e8c5f1 -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> continue_c0b5c9\n    }\n\n    \n\n    instance(x: 10, y: -177) find_smallest_missing_e6a3f8 root.main.find_smallest_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -200, y: 20, name: \"input\") property(String) input_1a6f3d\n\n        out(x: 1067, y: 2, name: \"output\") property(String) output_a9e5c4\n\n        instance(x: 0, y: 0) replace_8e3b11 root.Std_k98ojb.Strings.Replace {}\n        input_1a6f3d -> replace_8e3b11.input\n        \",\" -> replace_8e3b11.search\n        \".\" -> replace_8e3b11.search\n        \" \" -> replace_8e3b11.search\n        \":\" -> replace_8e3b11.replace\n        replace_8e3b11.result -> output_a9e5c4\n    }\n\n    \n\n    instance(x: -215, y: 63) replace_special_chars_6d6a1e root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -201, y: 2, name: \"input\") property(String) input_ai\n        out(x: 1033, y: -55, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) tolower_7e6d9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 273, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7e6d9.output -> contains_d42dce.input\n        \", \".\" -> contains_d42dce.contains\n        input_ai -> tolower_7e6d9.input\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: -173, y: 45) replace_special_chars_4f0c2a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars{\n        in(x: -194, y: 20, name: \"input\") property(String) input_3f6e8b\n\n        out(x: 1035, y: -59, name: \"output\") property(String) output_e0d9a1\n\n        instance(x: 19, y: 10) replace_4c2d15 root.Std_k98ojb.Strings.Replace {}\n        input_3f6e8b -> replace_4c2d15.input\n        \":\" -> replace_4c2d15.search\n        \".\" -> replace_4c2d15.replace\n        \",\" -> replace_4c2d15.replace\n        replace_4c2d15.result -> output_e0d9a1\n    }\n\n    \n\n    instance(x: -201, y: 59) replace_chars_6f8e5b root.main.replace_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -198, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1042, y: -59, name: \"output\") property(String) output_6f3e7d\n\n        instance(x: 73, y: -44) replace_d1a8b5 root.Std_k98ojb.Strings.Replace {}\n        replace_with_colon.input -> replace_d1a8b5.search\n        \",\" -> replace_d1a8b5.replace\n        \".\" -> replace_d1a8b5.replace\n        \" \" -> replace_d1a8b5.replace\n        replace_d1a8b5.result -> output_6f3e7d\n    }\n\n    \n\n    instance(x: -201, y: 28) replace_with_colon_4c5f66 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special {\n        in(x: -195, y: 0, name: \"input\") property(String) input_ai\n        out(x: 656, y: 39, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -19) strings_replace_node root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_node.input\n        \",\" -> strings_replace_node.search\n        \".\" -> strings_replace_node.replace\n        strings_replace_node.result -> output_ai\n   }\n   \n\n    instance(x: 264, y: -464, name: \"replace_special\") replace_9d2f8a root.main.replace_special {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -200, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1015, y: -50, name: \"output\") property(String) output_3f2d8a\n\n        instance(x: 69, y: 44, name: \"replace_with_colon\") replace_strings root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_with_colon.input\n        \",\" -> replace_with_colon.search\n        \".\" -> replace_with_colon.replace\n        \" \" -> replace_with_colon.replace\n        replace_with_colon.result -> output_3f2d8a\n    }\n\n    \n\n    instance(x: -176, y: 30) replace_with_colon_a5e7b4 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -215, y: 2, name: \"input\") property(String) input_9d0f3b\n        out(x: 1036, y: -68, name: \"output\") property(String) output_c0a7e1\n\n        instance(x: 93, y: 0) replace_5c6d4b root.Std_k98ojb.Strings.Replace {}\n        input_9d0f3b -> replace_5c6d4b.input\n        \",\" -> replace_5c6d4b.search\n        \":\" -> replace_5c6d4b.replace\n        input_9d0f3b -> replace_5c6d4b.input\n        replace_5c6d4b.result -> output_c0a7e1\n    }\n\n    \n\n    instance(x: -201, y: 45) replace_with_colon_a8d7af root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars{\n        in(x: -199, y: 0, name: \"input\") property(String) input_ai\n        out(x: 1026, y: -63, name: \"output\") property(String) output_ai\n\n        instance(x: 95, y: -69) replace_1a8d4e root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1a8d4e.input\n        \",\" -> replace_1a8d4e.search\n        \".\" -> replace_1a8d4e.replace\n        \" \" -> replace_1a8d4e.replace\n        replace_1a8d4e.result -> output_ai\n    }\n\n    \n\n    instance(x: -142, y: 40) replace_special_chars_9c7f6b root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -201, y: 0, name: \"input\") property(String) input_e3d4b1\n\n        out(x: 1015, y: -59, name: \"output\") property(String) output_8c2a6e\n\n        instance(x: 74, y: 0) replace_9f5f7e root.Std_k98ojb.Strings.Replace {}\n        input_e3d4b1 -> replace_9f5f7e.input\n        \" \" -> replace_9f5f7e.search\n        \":\" -> replace_9f5f7e.replace\n        replace_9f5f7e.result -> output_8c2a6e\n    }\n\n    \n\n    instance(x: 0, y: -69) replace_special_chars_b1d5f3 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -215, y: 2, name: \"input\") property(String) input_ai\n        out(x: 0, y: 4, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) tolower_7f8c3d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 264, y: -11) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        replace_9e4d5a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> tolower_7f8c3d.input\n        \" \" -> contains_d42dce.contains\n        \",\" -> contains_d42dce.contains\n        \".\" -> contains_d42dce.contains\n        tolower_7f8c3d.output -> contains_d42dce.input\n        replace_9e4d5a.search -> contains_d42dce.contains\n        \":\" -> replace_9e4d5a.replace\n        input_ai -> replace_9e4d5a.input\n        contains_d42dce.result -> replace_9e4d5a.output\n    }\n\n    \n\n    instance(x: -201, y: 0) replace_special_chars_8f7c34 root.main.replace_special_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -292, y: 0, name: \"input\") property(List) list_a9f5ca\n\n        out(x: 546, y: 2, name: \"output\") property(Bool) output_6e7c43\n\n        instance(x: 0, y: 1) strings_equals_8d4a65 root.Std_k98ojb.Strings.Equals {}\n        list_a9f5ca -> strings_equals_8d4a65.input\n        strings_equals_8d4a65.output -> output_6e7c43\n    }\n\n    \n\n    instance(x: 83, y: -37) is_all_same_e2f0ec root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_6d3f2a\n\n        out(x: 1219, y: -1, name: \"output\") property(Bool) output_e7f5b8\n\n        instance(x: 19, y: 15) ifexpression_4c6e0d root.Std_k98ojb.Std.If {}\n        getter(x: 14, y: 21, name: \"getter_b2a9c1\") getter_b2a9c1 = previous\n        setter(x: -24, y: 25, name: \"setter_8f2e5d\") setter_8f2e5d = previous\n        instance(x: 0, y: 19) length_6e87f2 root.Std_k98ojb.List.Length {}\n        ifexpression_4c6e0d.else -> output_e7f5b8\n        ifexpression_4c6e0d.value -> output_e7f5b8\n        length_6e87f2.length -> setter_8f2e5d.execute\n        input_6d3f2a -> setter_8f2e5d.new_value\n        getter_b2a9c1.value -> ifexpression_4c6e0d.gen_1\n        ifexpression_4c6e0d.then -> setter_8f2e5d.continue\n        input_6d3f2a -> ifexpression_4c6e0d.execute\n    }\n\n    \n\n    instance(x: 23, y: -16) is_all_same_2b3c9f root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same{\n        in(x: 0, y: -5, name: \"s\") property(String) s_ai\n        out(x: 1093, y: 2, name: \"output\") property(Bool) output_ai\n\n        instance(x: 201, y: 4) tolower_7e1c8b root.Std_k98ojb.Strings.ToLower {}\n        s_ai -> tolower_7e1c8b.input\n        tolower_7e1c8b.output -> output_ai\n        instance(x: 0, y: 0) unique_element_a2d0f4 root.Std_k98ojb.List.UniqueElement {}\n        s_ai -> unique_element_a2d0f4.list\n        output_ai -> unique_element_a2d0f4.unique\n    }\n\n    \n\n    instance(x: -44, y: 23) is_all_same_3c9e6b root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") AllSame {\n        in(x: -292, y: 0, name: \"string\") property(String) input_2\n        out(x: 533, y: -1, name: \"output\") property(Bool) output_3\n\n        instance(x: -47, y: 0) tolower_7b5d6a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 233, y: 2) same_c8f2c9 root.Std_k98ojb.Logic.Equal {}\n        input_2 -> tolower_7b5d6a.input\n        tolower_7b5d6a.output -> same_c8f2c9.left\n        input_2 -> same_c8f2c9.right\n        same_c8f2c9.result -> output_3\n    }\n\n    \n\n    instance(x: -23, y: 0) AllSame_d4e38b root.main.AllSame {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: 0, y: 0, name: \"string\") property(String) input_6e\n\n        out(x: -1, y: 2, name: \"output\") property(Bool) output_a8f3b4\n\n        instance(x: 23, y: 5) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 104, y: 0) tolower_c1c9a4 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -21, y: 3) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        same_characters_7e -> length_6e87f2.list\n        input_6e -> tolower_c1c9a4.input\n        length_6e87f2.length -> contains_d42dce.input\n        1 -> contains_d42dce.contains\n        tolower_c1c9a4.output -> same_characters_7e\n        same_characters_7e -> contains_d42dce.item\n        output_a8f3b4.result = length_6e87f2.length == 1 && contains_d42dce.is_contained \n    }\n\n    \n\n    instance(x: -55, y: 0) same_characters_f0e8a5 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 0, y: -1, name: \"string\") property(String) input_ai\n        out(x: 1035, y: -2, name: \"output\") property(Bool) output_ai\n\n        instance(x: 19, y: 3) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 0, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_2e1444.input\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        is_all_same.result -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: -1) is_all_same_8a6f3b root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -394, y: 2, name: \"string\") property(String) input_1\n        out(x: 1098, y: 6, name: \"output\") property(Bool) output_9\n\n        instance(x: -91, y: 0) tolower_7c4f5b root.Std_k98ojb.Strings.ToLower {}\n        input_1 -> tolower_7c4f5b.input\n        tolower_7c4f5b.output -> all_same.input\n        instance(x: 0, y: 3) contains_6e2d8a root.Std_k98ojb.Strings.Contains {}\n        instance(x: -31, y: 0) not_equal_9e1d45 root.Std_k98ojb.Logic.NotEqual {}\n        \"a\" -> not_equal_9e1d45.right\n        all_same.input -> not_equal_9e1d45.left\n        contains_6e2d8a.result -> output_9\n        not_equal_9e1d45.result -> output_9\n   }\n    \n\n    instance(x: -47, y: 0) all_same_a7b3f4 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"checks whether all the characters are same or not.\") all_same_chars{\n        in(x: -294, y: 0, name: \"string\") property(String) input_6a9e8f\n\n        out(x: 555, y: 1, name: \"output\") property(Bool) output_3d5c4c\n\n        instance(x: 13, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_6a9e8f -> tolower_2e1444.input\n        tolower_2e1444.output -> all_same_chars.input\n        instance(x: 0, y: 2) characters_root root.Std_k98ojb.Strings.Characters {}\n        input_6a9e8f -> characters_root.input\n        characters_root.characters -> all_same_chars.input\n        function(x: -113, y: 4, name: \"is_equal\") property(Number) is_equal_e0d3c1 {\n            in(x: -114, y: 5, name: \"current\") property(Number) current_8e7a2b\n\n            out(x: 522, y: 6, name: \"result\") property(Bool) result_e8f9df\n\n            instance(x: 0, y: 7) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n            is_equal.current -> equal_f89569.left\n            current_8e7a2b -> equal_f89569.right\n            equal_f89569.result -> result_e8f9df\n        } -> characters_root.handler\n        all_same_chars.input_list -> is_equal.items\n        is_equal.item -> is_equal.execute\n        all_same_chars.output_list -> is_equal.output_list\n    }\n\n    \n\n    instance(x: -53, y: 44) all_same_chars_7d1c0e root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_same {\n        in(x: -295, y: 0, name: \"string\") property(String) input_5d8f4a\n\n        out(x: 540, y: -1, name: \"result\") property(Bool) result_6e5b3c\n\n        instance(x: 15, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        input_5d8f4a -> tolower_2e1444.input\n        tolower_2e1444.output -> result_6e5b3c\n        instance(x: -19, y: 0) contains_c7b1af root.Std_k98ojb.Strings.Contains {}\n        input_5d8f4a -> contains_c7b1af.input\n        \"a\" -> contains_c7b1af.contains\n        result_6e5b3c.result -> is_same.predicate\n        instance(x: 0, y: -1) not_equal_f2d9e0 root.Std_k98ojb.Logic.NotEqual {}\n        contains_c7b1af.is_contained -> not_equal_f2d9e0.left\n        \"a\" -> not_equal_f2d9e0.right\n        not_equal_f2d9e0.result -> is_same.then\n    }\n\n    \n\n    instance(x: 0, y: -3) is_same_7f8c45 root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_characters {\n        in(x: -269, y: 0, name: \"input\") property(List) list_6d3e8a\n\n        out(x: 509, y: -1, name: \"output\") property(Bool) output_e2c5f4\n\n        instance(x: -84, y: -10, name: \"isSame_\") filter_0b9d7c root.Std_k98ojb.Query.Filter {\n            where: \"it == first(it)\"\n        }\n        getter(x: 0, y: 0) firstitem_8e4a5f root.Std_k98ojb.List.FirstItem {}\n        instance(x: -85, y: -9) not_1d5c7b root.Std_k98ojbj.Logic.Not {}\n        list_6d3e8a -> filter_0b9d7c.items\n        filter_0b9d7c.result -> firstitem_8e4a5f.list\n        firstitem_8e4a5f.item -> not_1d5c7b.input\n        isSame_() {\n            in(x: -10, y: 15, name: \"elem\") property(Number) elem_c6f3f2\n\n            out(x: 0, y: -9, name: \"output\") property(Bool) output_e2c5f4\n\n            instance(x: 16, y: 17) equal_8a7e34 root.Std_k98ojbj.Logic.Equal {}\n            elem_c6f3f2 -> equal_8a7e34.left\n            firstitem_8e4a5f.item -> equal_8a7e34.right\n            equal_8a7e34.result -> output_e2c5f4\n        } -> filter_0b9d7c.handler\n    }\n\n    \n\n    instance(x: 0, y: -1) same_characters_6c4f8f root.main.same_characters {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) isnumeric_a3a5c6 root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_a3a5c6.input\n        input_ai -> tolower_2e1444.input\n        isnumeric_a3a5c6.result -> count_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"s\") property(String) s_ai\n        out(x: 159, y: -219, name: \"count\") property(Number) count_ai\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        s_ai -> isnumeric_d42dce.input\n        isnumeric_d42dce.result -> length_6e87f2.list\n        length_6e87f2.length -> count_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 530, y: -2, name: \"output\") property(Number) output_9b6c8a\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_5d7f4a root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.list\n        isnumeric_5d7f4a.result -> length_6e87f2.length\n        output_9b6c8a -> length_6e87f2.length\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_0bf3df root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) characters_9c8f66 root.Std_k98ojb.Strings.Characters {}\n        input_ai -> tolower_2e1444.input\n        tolower_2e1444.output -> characters_9c8f66.input\n        characters_9c8f66.characters -> count_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -231, y: 2, name: \"str\") property(String) str_ai\n\n        out(x: 340, y: 77, name: \"num\") property(Number) num_3b5a6e\n\n        instance(x: 23, y: 0) length_7d87f4 root.Std_k98ojb.List.Length {}\n        instance(x: 12, y: 136) isnumeric_9c2f1b root.Std_k98ojb.Strings.IsNumeric {}\n        num -> length_7d87f4.length\n        str_ai -> isnumeric_9c2f1b.input\n        isnumeric_9c2f1b.result -> length_7d87f4.length\n        length_7d87f4.list -> num\n    }\n\n    \n\n    instance(x: 118, y: -26) count_digits_8e6f0a root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 53, y: -1, name: \"result\") property(Number) result_3f4e2d\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_8a9c7d root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> isnumeric_8a9c7d.input\n        isnumeric_8a9c7d.result -> length_6e87f2.length\n        length_6e87f2.list -> result_3f4e2d\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_5b1a35 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"s\") property(String) s_6d3e4f\n\n        out(x: 39, y: 0, name: \"result\") property(Number) result_1c9bdf\n    }\n\n    instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n    instance(x: 265, y: 0) count_4d7a43 root.Std_k98ojb.String.Count {}\n    s_6d3e4f -> count_4d7a43.input\n    count_4d7a43.result -> length_6e87f2.length\n    length_6e87f2.length -> result_1c9bdf\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> length_6e87f2.list\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: -34, y: 127) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: 0, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_0 -> length_6e87f2.list\n        isnumeric_d42dce.input -> length_6e87f2.value\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 39, y: 0, name: \"count\") property(Number) count_6a5c8e\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_7e9d14 root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.list\n        isnumeric_7e9d14.input -> length_6e87f2.value\n        length_6e87f2.length -> count_6a5c8e\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_2c856f root.main.count_digits {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_3d1a4f\n\n        out(x: 1130, y: -369, name: \"output\") property(Number) output_d5b6c7\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"i\") property(Number) i_8a3c1d\n            in(x: -23, y: 79, name: \"result\") property(Number) result_b2cd6f\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            notequal_7836b4.result -> result_b2cd6f\n            i_8a3c1d -> modulo_c76d2b.value\n        } -> for_065883.next\n        n_3d1a4f -> for_065883.index\n        for_065883.item -> modulo_c76d2b.first\n        0 -> for_065883.reset\n        sum_4c6c9a = 0\n        instance(x: 74, y: -23) pow_5e3e8 root.Std_k98ojb.Math.Pow {}\n        pow_5e3e8.result -> sum_4c6c9a\n        i_8a3c1d -> pow_5e3e8.gen_0\n        pow_5e3e8.result -> sum_4c6c9a\n    }\n\n    \n\n    instance(x: 0, y: -37) sum_fourth_power_9f7b2 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -542, y: 2, name: \"n\") property(Number) n_3e5a9d\n\n        out(x: 1097, y: 19, name: \"sum\") property(Number) sum_4c8f0f\n\n        instance(x: 83, y: 24) count_f1bdf6 root.Std_k98ojb.Std.Count {}\n        instance(x: -43, y: 35) for_5a2d3e root.Std_k98ojb.Std.For {}\n        instance(x: 97, y: 28) power_8cd7f0 root.Std_k98ojb.Math.Pow {}\n        instance(x: 96, y: 29) sum_6c9da1 root.Std_k98ojb.Math.Sum {}\n        instance(x: -39, y: 25) modulo_e2a5d4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 97, y: 26) add_4fdd3e root.Std_k98ojb.Math.Add {}\n        instance(x: 105, y: 29) div_6c7e8c root.Std_k98ojb.Math.Div {}\n\n        data_instance(x: -409, y: -336) data_2a5d23  = [sum]\n        instance(x: 88, y: 33) ifexpression_b9f4a4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        n_3e5a9d -> power_8cd7f0.n\n        data_2a5d23 -> sum_6c9da1.items\n        count_f1bdf6.input -> for_5a2d3e.index\n        ifexpression_b9f4a4.then -> sum_6c9da1.execute_cdac2a\n        0 -> sum_6c9da1.new_value\n        for_5a2d3e.done -> data_2a5d23.isEmpty\n        count_f1bdf6.output -> power_8cd7f0.first\n        power_8cd7f0.result -> add_4fdd3e.first\n        modulo_e2a5d4.divisor -> 2\n        div_6c7e8c.second -> n_3e5a9d\n    }\n\n    \n\n    instance(x: -43, y: 29) sum_fourth_power_0b1d14 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f8b21\n\n        out(x: 1095, y: -305, name: \"output\") property(Number) output_b7c6e1\n\n        instance(x: 0, y: 0) for_4a3d2b root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -193, y: -27, name: \"i\") property(Number) i_8f5cd9\n            out(x: 1095, y: -305, name: \"sum\") property(Number) sum_e0c7e4\n\n            instance(x: -194, y: -23, name: \"result\") expression_2d6da6 root.Std_k98ojb.Math.Expression {\n                expression: \"i * i * i * i\"\n            }\n            instance(x: 1025, y: -28) add_a3e9f7 root.Std_k98ojb.Math.Add {}\n            instance(x: 1050, y: -23) div_64046c root.Std_k98ojb.Math.Div {}\n            instance(x: 1049, y: -305) sum_e0c7e4 result_2d6da6 \n            i_8f5cd9 -> div_64046c.first\n            expression_2d6da6.result -> add_a3e9f7.first\n            add_a3e9f7.result -> sum_e0c7e4.result\n        } -> for_4a3d2b.next\n        n_9f8b21 -> div_64046c.second\n        expression_2d6da6.input -> i_8f5cd9\n    }\n\n    \n\n    instance(x: -292, y: -7) sum_fourth_power_0e4f44 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 2, name: \"n\") property(Number) n_3d8f9b\n\n        out(x: 1156, y: 7, name: \"output\") property(Number) output_e4c869\n\n        instance(x: 0, y: 0) for_1c5a83 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -215, y: -23, name: \"i\") property(Number) i_f7d6e9\n            in(x: -217, y: 2, name: \"sum\") property(Number) sum_1a3c0b\n\n            out(x: 1034, y: 8, name: \"continue\") trigger() continue_a5bdaa\n            out(x: 1006, y: -15, name: \"output\") property(Number) output_b2e9f8\n\n            instance(x: 88, y: -25) pow_0c7e43 root.Std_k98ojb.Math.Pow {}\n            instance(x: 104, y: -21) add_3a5d6f root.Std_k98ojb.Math.Add {}\n            instance(x: 103, y: -15) sub_4df7ac root.Std_k98ojb.Math.Sub {}\n            instance(x: 97, y: 8, name: \"fourth_power\") modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            setter(x: -215, y: -23, name: \"setter_3d4fdd\") setter_3d4fdd = sum\n            instance(x: 0, y: 0) pow_c1e5af root.Std_k98ojb.Math.Pow {}\n            pow_c1e5af.result -> modulo_ad7b2a.first\n            4 -> modulo_ad7b2a.power\n            i_f7d6e9 -> modulo_ad7b2a.value\n        } -> for_1c5a83.handler\n        n_3d8f9b -> pow_c1e5af.gen_0\n        pow_c1e5af.result -> sum_1a3c0b\n        sum_1a3c0b.continue_a5bdaa -> setter_3d4fdd.execute\n        -1 -> setter_3d4fdd.new_value\n        for_1c5a83.done -> continue_a5bdaa\n        pow_c1e5af.result -> output_b2e9f8\n    }\n\n    \n\n    instance(x: 0, y: 0) sum_fourth_power_3c6a95 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -542, y: -217, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1234, y: -649, name: \"sum\") property(Number) sum_3d8a9f\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            3 -> modulo_c76d2b.pow\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            current_170471 -> modulo_c76d2b.value\n        } -> for_065883.handler\n        n_6b655b -> for_065883.items\n        for_065883.index -> sum_3d8a9f\n    }\n\n    \n\n    instance(x: 777, y: 760) sum_fourth_power_6e6bfd root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -542, y: 2, name: \"n\") property(Number) n_9e3d5b\n\n        out(x: 1237, y: 6, name: \"output\") property(Number) output_8f5c1f\n\n        instance(x: 0, y: 0) for_4a2f66 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -192, y: 34, name: \"i\") property(Number) i_7e9d6c\n\n            out(x: 1237, y: 6, name: \"sum\") property(Number) sum_a0f8a2\n\n            instance(x: 112, y: 29) pow_c4b3e5 root.Std_k98ojb.Math.Pow {}\n            data_instance(x: -609, y: -363) data_2c7d9a  = [i]\n            instance(x: 46, y: 35) add_f0f8d1 root.Std_k98ojb.Math.Add {}\n            instance(x: 97, y: -127) div_a3a5e6 root.Std_k98ojb.Math.Div {}\n            instance(x: 656, y: -330) modulo_2c4d7c root.Std_k98ojb.Math.Modulo {}\n            data_2c7d9a -> for_4a2f66.items\n            pow_c4b3e5.result -> add_f0f8d1.first\n            div_a3a5e6.second -> modulo_2c4d7c.divisor\n            2 -> modulo_2c4d7c.value\n        } -> for_4a2f66.next\n        sum_a0f8a2.result -> output_8f5c1f\n    }\n\n    \n\n    instance(x: -81, y: 529) sum_odd_power_6e9bdf root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_1a4e5d\n\n        out(x: 1059, y: -247, name: \"sum\") property(Number) sum_e7bdf4\n\n        instance(x: 0, y: 0) for_0c6fdd root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_a1a9e5\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_7c8f2d\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_4b0d6f\n\n            instance(x: 226, y: 56) ifexpression_f9a1db root.Std_k98ojb.Std.IfExpression {\n                expression: \"it % 2 == 0\"\n            }\n            instance(x: 463, y: 51) power_b5e3c7 root.Std_k98ojb.Math.Pow {}\n            instance(x: 97, y: -127) sub_8f4d1a root.Std_k98ojb.Math.Sub {}\n            instance(x: 655, y: -330) add_e2f6f9 root.Std_k98ojb.Math.Add {}\n            instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n            setter(x: -215, y: -463, name: \"setter_4a2d3c\") setter_4a2d3c = sum\n            setter(x: 875, y: -518, name: \"setter_b0e6ac\") setter_b0e6ac = sum\n            getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n            instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n            4 -> power_b5e3c7.exponent\n            current_a1a9e5 -> power_b5e3c7.input\n            power_b5e3c7.result -> sub_8f4d1a.first\n            div_547f34.result -> add_e2f6f9.first\n            1 -> add_e2f6f9.second\n            add_e2f6f9.result -> setter_4a2d3c.new_value\n            setter_4a2d3c.continue -> ifexpression_f9a1db.execute\n            ifexpression_f9a1db.then -> setter_b0e6ac.execute\n            execute_cdac2a -> setter_4a2d3c.execute\n            ifexpression_f9a1db.else -> sum_digits_96023e.execute_cdac2a\n            sum_digits_96023e.continue_d9efd7 -> setter_b0e6ac.execute\n            sum_digits_96023e.output_732a8a -> add_e2f6f9.second\n            add_e2f6f9.result -> setter_b0e6ac.new_value\n            setter_b0e6ac.continue -> continue_d9efd7\n            getter_38583a.value -> output_4b0d6f\n            current_a1a9e5 -> floor_61b38d.input\n            floor_61b38d.output -> div_547f34.first\n            floor_61b38d.output -> ifexpression_f9a1db.gen_0\n        } -> for_0c6fdd.handler\n        list_07cae4 -> for_0c6fdd.items\n        for_0c6fdd.index -> setter_b0e6ac.new_value\n    }\n\n    \n\n    instance(x: -67, y: 529) sum_fourth_power_1bfc94 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -569, y: 2, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1146, y: -371, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 0, y: 0) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 394, y: -339) data_3c713b  = [n, 9]\n        instance(x: 46, y: -383, name: \"fourth_power\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"4**it\"\n        }\n        instance(x: 62, y: -226, name: \"sum_of_powers\") div_2d44da root.Std_k98ojb.Math.Div {}\n        instance(x: 97, y: -127) sum_7c3e6a root.Std_k98ojb.List.Sum {}\n        instance(x: 99, y: -249) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 112, y: 80) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) power_c0c3d5 root.Std_k98ojb.Math.Pow {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        data_3c713b -> div_2d44da.second\n        mul_f892a4.result -> div_2d44da.first\n        expression_634b7e.result -> mul_f892a4.second\n        modulo_ad7b2a.divisor -> power_c0c3d5.base\n        power_c0c3d5.result -> add_88bb8a.first\n        9 -> div_2d44da.count\n        data_3c713b -> sum_7c3e6a.items\n        expression_634b7e.result -> sum_7c3e6a.value\n        power_c0c3d5.result -> add_88bb8a.second\n        add_88bb8a.result -> setter_41e4ad.new_value\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_f53d27 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -567, y: 2, name: \"n\") property(Number) n_3a8b4d\n\n        out(x: 1146, y: -647, name: \"output\") property(Number) output_7fdd9c\n\n        instance(x: -319, y: -305, name: \"odd_numbers\") for_065883 root.Std_k98ojb.Std.For {}\n        instance(x: 340, y: -301, name: \"sum_fourth_power\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"(4*n*n*n*n)\"\n        }\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 112, y: -225) div_64046c root.Std_k98ojb.Math.Div {}\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 551, y: -105) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 758, y: -75) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n        setter(x: 0, y: 0, name: \"setter_6e7b4e\") setter_6e7b4e = index\n        instance(x: -341, y: -301) for_065883.index -> setter_6e7b4e.new_value\n        instance(x: -303, y: -305) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index % 2 == 0\"\n        }\n        instance(x: 246, y: -209) not_75283f root.Std_k98ojb.Logic.Not {}\n        instance(x: 463, y: 51) equal_aabb6e root.Std_k98ojb.Logic.Equal {}\n        data_instance(x: -609, y: -363) data_e5c8a9  = [sum_fourth_power]\n        sum_fourth_power -> data_e5c8a9.sum\n        n_3a8b4d -> expression_634b7e.gen_0\n        expression_634b7e.result -> data_e5c8a9.sum\n        for_065883.index -> floor_61b38d.input\n        1 -> floor_61b38d.value\n        div_64046c.first -> sum_fourth_power.numerator\n        modulo_1088d5.divisor -> div_64046c.second\n        div_64046c.result -> mul_f892a4.first\n        mul_f892a4.result -> expression_634b7e.gen_0\n        add_88bb8a.first -> sum_fourth_power.result\n        modulo_1088d5.result -> add_88bb8a.second\n    }\n\n    \n\n    instance(x: -81, y: 529) sum_fourth_power_f15bad root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_6d8e1f\n\n        out(x: 1146, y: 7, name: \"output\") property(Number) output_9c0b4a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 0\"\n        }\n        instance(x: 395, y: -378) sum_fourth_power_2f8c4a root.main.sum_fourth_power {}\n        instance(x: 97, y: -127) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) pow_d2d3e5 root.Std_k98ojb.Math.Pow {}\n        instance(x: 112, y: 80) div_64046c root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        4 -> pow_d2d3e5.exponent\n        1 -> mul_f892a4.first\n        pow_d2d3e5.result -> add_88bb8a.first\n        div_64046c.result -> sum_digits_96023e.n_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> sum_fourth_power_2f8c4a.execute_cdac2a\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> sum_fourth_power_2f8c4a.execute_cdac2a\n    }\n\n    \n\n    instance(x: -176, y: -38) sum_fourth_power_0a1b11 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -209, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 324, y: 0, name: \"output\") property(Number) output_7c2a6e\n\n        instance(x: 12, y: -1) square_8f5d4b root.Std_k98ojb.Math.Pow {}\n        instance(x: 18, y: -3) times_9c0c21 root.Std_k98ojb.Math.Times {}\n        side_ai -> times_9c0c21.first\n        6 -> square_8f5d4b.exponent\n        square_8f5d4b.result -> times_9c0c21.second\n        times_9c0c21.result -> output_7c2a6e\n    }\n\n    \n\n    instance(x: -193, y: 3) cube_surface_area_a9f2b8 root.main_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -209, y: -242, name: \"side\") property(Number) side_6e2d5a\n\n        out(x: 216, y: -10, name: \"area\") property(Number) area_e1c4a9\n\n        instance(x: 0, y: -11) four_7b8f66 root.Std_k98ojb.Math.Four {}\n        side_6e2d5a -> four_7b8f66.side\n        four_7b8f66.result -> area_e1c4a9\n    }\n\n    \n\n    instance(x: 0, y: -12) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -213, y: 123, name: \"size\") property(Number) size_5e1d6b\n        out(x: 216, y: -19, name: \"output\") property(Number) output_a4a2f3\n\n        instance(x: 15, y: -13) square_9c8f0a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 23, y: -44) times_5d7e6b root.Std_k98ojb.Math.Times {}\n        instance(x: 28, y: -21) add_4eb2db root.Std_k98ojb.Math.Add {}\n        instance(x: 19, y: 11) square_9c8f0a.from\n        size_5e1d6b -> square_9c8f0a.to\n        square_9c8f0a.list -> times_5d7e6b.items\n        times_5d7e6b.first -> add_4eb2db.first\n        6 -> add_4eb2db.second\n        add_4eb2db.result -> output_a4a2f3\n    }\n\n    \n\n    instance(x: -44, y: -22) surface_area_6a5c9d root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: 0, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 324, y: -11, name: \"area\") property(Number) area_4b7c8e\n\n        instance(x: 24, y: -14) sum_5a3d1f root.Std_k98ojb.Math.Sum {}\n        sum_5a3d1f.result -> area_4b7c8e\n        side_ai -> sum_5a3d1f.items\n        for_0a6e45 = 6\n        instance(x: -215, y: 14) times_0a6e45 root.Std_k98ojb.List.Times {}\n        times_0a6d43.item -> sum_5a3d1f.new_value\n        side_ai -> times_0a6d43.first\n        for_0a6d43.index -> times_0a6d43.second\n        times_0a6e45.handler -> sum_5a3d1f.handler\n        instance(x: -213, y: 10) square_root_2b9c4f root.Std_k98ojb.Math.Sqrt {}\n        side_ai -> square_root_2b9c4f.input\n        square_root_2b9c4f.result -> times_0a6d43.first\n        for_0a6e45.item -> area_4b7c8e\n    }\n\n    \n\n    instance(x: 0, y: 12) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -209, y: -247, name: \"size\") property(Number) size_9a3f4e\n\n        out(x: 216, y: -19, name: \"area\") property(Number) area_a0c2b6\n\n        instance(x: 20, y: -292) pow_5d1d7 root.Std_k98ojb.Math.Pow {}\n        size_9a3f4e -> pow_5d1d7.x\n        2 -> pow_5d1d7.y\n        pow_5d1d7.result -> area_a0c2b6\n        6 -> area_a0c2b6\n    }\n\n    \n\n    instance(x: -208, y: -18) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -209, y: 13, name: \"side_length\") property(Number) side_length_6d3f9e\n\n        out(x: 216, y: 11, name: \"surface_area\") property(Number) surface_area_d1a0b5\n\n        instance(x: 12, y: -23) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_length_6d3f9e -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> surface_area_d1a0b5\n    }\n\n    \n\n    instance(x: 12, y: -24) cube_surface_area_f8c4af root.main_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -215, y: -247, name: \"side\") property(Number) side_6e4a3b\n\n        out(x: 648, y: -11, name: \"area\") property(Number) area_f5a9d8\n\n        instance(x: 216, y: -302) math_pow_node root.Std_k98ojb.Math.Pow {}\n        math_pow_node.result -> side_6e4a3b\n        2 -> math_pow_node.exponent\n        result_1c7f44 = math_pow_node.value\n        side_6e4a3b * 6 -> area_f5a9d8\n    }\n\n    \n\n    instance(x: -191, y: -13) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: -219, y: 0, name: \"side\") property(Number) side_5d8a3b\n\n        out(x: 648, y: -24, name: \"area\") property(Number) area_9cd7f1\n    }\n\n    instance(x: 15, y: -22) for_node root.Std_k98ojb.Std.For {}\n    for_node.trigger -> surface_area.execute\n    side_5d8a3b -> for_node.index\n    for_node.reset -> surface_area.continue\n    instance(x: 0, y: -23) expression_e6c2e7 root.Std_k98ojb.Math.Expression {\n        expression: \"6 * (side^2)\"\n    }\n    side_5d8a3b -> expression_e6c2e7.gen_0\n    expression_e6c2e7.result -> area_9cd7f1\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -222, y: 0, name: \"side\") property(Number) side_4f6d5a\n\n        out(x: 216, y: 0, name: \"output\") property(Number) output_d1c9d8\n\n        instance(x: 12, y: 15) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_4f6d5a -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> output_d1c9d8\n        side_4f6d5a * 6 -> output_d1c9d8\n    }\n\n    \n\n    instance(x: -194, y: 12) surface_area_f3b7d0 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -213, y: 11, name: \"side\") property(Number) side_ai\n        out(x: 162, y: 13, name: \"surface_area\") property(Number) surface_area_9e2c7d\n\n        instance(x: 0, y: 0) sum_6a5e1f root.Std_k98ojb.Math.Sum {}\n        6 -> sum_6a5e1f.count\n        side_ai -> sum_6a5e1f.items\n        instance(x: -210, y: 10) multiplication_9c7d0b root.Std_k98ojb.Math.Multiplication {}\n        side_ai -> multiplication_9c7d0b.first\n        side_ai -> multiplication_9c7d0b.second\n        multiplication_9c7d0b.result -> sum_6a5e1f.value\n        surface_area_9e2c7d -> sum_6a5e1f.value\n    }\n\n    \n\n    instance(x: 210, y: -44, name: \"surface_area\") surface_area_node root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -469, y: 23, name: \"list\") property(List) list_8f6b3a\n\n        out(x: 1007, y: 4, name: \"result\") property(Number) result_e9c2e0\n\n        instance(x: 109, y: 64) max_5d2e43 root.Std_k98ojb.List.Max {}\n        list_8f6b3a -> max_5d2e43.items\n        instance(x: -19, y: 56) min_9c0eb4 root.Std_k98ojb.List.Min {}\n        list_8f6b3a -> min_9c0eb4.items\n        instance(x: -108, y: 55) sub_1d2dd7 root.Std_k98ojb.Math.Sub {}\n        max_5d2e43.result -> sub_1d2dd7.first\n        min_9c0eb4.result -> sub_1d2dd7.second\n        sub_1d2dd7.result -> result_e9c2e0\n    }\n\n    \n\n    instance(x: -69, y: 11) diff_max_min_6f5c8b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: -193, name: \"list\") property(List) list_4f9e2d\n\n        out(x: 1005, y: -194, name: \"output\") property(Number) output_a8a3c7\n\n        instance(x: 109, y: -121) max_7d1bdf root.Std_k98ojb.List.Max {}\n        list_4f9e2d -> max_7d1bdf.items\n        func() {\n            in(x: -234, y: -64, name: \"min\") property(Number) min_a8c0a3\n\n            out(x: 1005, y: -194, name: \"\") property(Number) _9f2e42\n\n            instance(x: 92, y: 20) min_7d1bdf root.Std_k98ojb.List.Min {}\n            list_4f9e2d -> min_7d1bdf.items\n            max_7d1bdf.result -> output_a8a3c7\n        } -> min_7d1bdf.handler\n        list_4f9e2d -> max_7d1bdf.list\n    }\n\n    \n\n    instance(x: -55, y: 11) diff_max_min_6d6c21 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -294, y: 0, name: \"list\") property(List) list_d2f3eb\n\n        out(x: 1048, y: 5, name: \"output\") property(Number) output_4c9a66\n\n        instance(x: 105, y: 15) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -0, y: 20, name: \"maxmin_node\") maxmin_node Std_k98ojb.Std.IfExpression {}\n        instance(x: -0, y: 10) min_3d4d7a root.Std_k98ojb.Std.For {}\n        instance(x: 105, y: 30) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_d2f3eb -> length_6e87f2.list\n        length_6e87f2.length -> maxmin_node.gen_0\n        min_3d4d7a.item -> maxmin_node.then\n        list_d2f3eb -> sub_852f2e.items\n        0 -> sub_852f2e.index\n        sub_852f2e.result -> maxmin_node.else\n    }\n\n    \n\n    instance(x: -45, y: -35) diff_max_min_a4b8a6 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -475, y: 15, name: \"list\") property(List) list_5f3e1d\n\n        out(x: 1020, y: 13, name: \"output\") property(Number) output_f6b9c8\n\n        instance(x: 1044, y: 34, name: \"smallest\") std.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: -119, y: 23, name: \"getter_1e2f3a\") getter_1e2f3a = min\n        setter(x: 1055, y: -312, name: \"setter_6d2b7c\") setter_6d2b7c = min\n        instance(x: -114, y: -17) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 1049, y: 21, name: \"setter_6d2b7c\") setter_37db7f = max\n        instance(x: 1025, y: 35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        smallest.result -> output_f6b9c8\n        for_d26972.item -> setter_6d2b7c.execute\n        list_5f3e1d -> for_d26972.items\n        for_d26972.index -> std.Std.IfExpression.gen_0\n        list_5f3e1d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_37db7f.new_value\n    }\n\n    \n\n    instance(x: -94, y: 19) diff_largest_smallest_e4e9d5 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -469, y: -230, name: \"list\") property(List) list_5e8f9b\n\n        out(x: 1217, y: -1, name: \"output\") property(Number) output_d3c0a6\n\n        instance(x: 109, y: -123) length_4d5d2a root.Std_k98ojb.List.Length {}\n        instance(x: 444, y: -142) max_7e9f45 root.Std_k98ojb.List.Max {}\n        instance(x: 439, y: -145) min_8c3d0f root.Std_k98ojb.List.Min {}\n        instance(x: 110, y: 5) sub_4a2df1 root.Std_k98ojb.Math.Sub {}\n        instance(x: 121, y: 7) not_equal_8e2d6a root.Std_k98ojb.Logic.NotEqual {}\n        list_5e8f9b -> max_7e9f45.list\n        length_4d5d2a.length -> sub_4a2df1.first\n        list_5e8f9b -> min_8c3d0f.list\n        length_4d5d2a.length -> not_equal_8e2d6a.left\n        max_7e9f45.value -> not_equal_8e2d6a.right\n        not_equal_8e2d6a.result -> sub_4a2df1.first\n        list_5e8f9b -> sub_4a2df1.list\n        0 -> sub_4a2df1.second\n        sub_4a2df1.result -> max_7e9f45.value\n        max_7e9f45.value -> min_8c3d0f.value\n        not_equal_8e2d6a.result -> output_d3c0a6\n    }\n\n    \n\n    instance(x: -96, y: 5) diff_max_min_f1b4a1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: 145, name: \"list\") property(List) list_d0d5f1\n\n        out(x: 1214, y: -109, name: \"output\") property(Number) output_9a8e15\n\n        instance(x: 103, y: 151) max_6c8b2e root.Std_k98ojb.List.Max {}\n        list_d0d5f1 -> max_6c8b2e.items\n        max_6c8b2e.result -> output_9a8e15\n        instance(x: -104, y: 162) min_a4fdd3 root.Std_k98ojb.List.Min {}\n        list_d0d5f1 -> min_a4fdd3.items\n        min_a4fdd3.result -> output_9a8e15\n    }\n\n    \n\n    instance(x: 93, y: -122) diff_max_min_f8c8d6 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -471, y: -234, name: \"list\") property(List) list_5d2f9a\n\n        out(x: 1218, y: 145, name: \"difference\") property(Number) difference_e7b0ac\n\n        instance(x: 103, y: 93) max_4e1d3c root.Std_k98ojb.List.Max {}\n        list_5d2f9a -> max_4e1d3c.items\n        max_4e1d3c.value -> difference_e7b0ac\n        instance(x: -109, y: 146) min_d8d6ec root.Std_k98ojb.List.Min {}\n        list_5d2f9a -> min_d8d6ec.items\n        min_d8d6ec.value -> difference_e7b0ac\n    }\n\n    \n\n    instance(x: -67, y: 19) diff_max_min_f1c4e3 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -456, y: 23, name: \"list\") property(List) list_5f8e9b\n\n        out(x: 1046, y: 123, name: \"difference\") property(Number) difference_e2c5d4\n\n        instance(x: -109, y: 93, name: \"maxmin_node\") node root.Std_k98ojb.Std.IfExpression {}\n        list_5f8e9b -> maxmin_node.gen_0\n        func() {\n            in(x: -231, y: 44, name: \"smallest\") property(Number) smallest_d6c3a7\n\n            out(x: 1111, y: 45, name: \"max\") property(Number) max_5f9e2d\n\n            instance(x: 91, y: -24) max_0b8a95 root.Std_k98ojb.List.Max {}\n            list_5f8e9b -> max_0b8a95.items\n            max_0b8a95.max -> max_5f9e2d\n        } -> maxmin_node.then\n        func() {\n            in(x: -231, y: 44, name: \"largest\") property(Number) largest_b4c7df\n\n            out(x: 1111, y: 45, name: \"min\") property(Number) min_5f9e2d\n\n            instance(x: 91, y: -24) min_4a8c6b root.Std_k98ojb.List.Min {}\n            list_5f8e9b -> min_4a8c6b.items\n            min_4a8c6b.min -> min_5f9e2d\n        } -> maxmin_node.else\n        smallest_d6c3a7 -> diff_max_min.difference\n        max_5f9e2d -> diff_max_min.difference\n    }\n\n    \n\n    instance(x: -92, y: 121) diff_max_min_1cd8d4 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -456, y: -233, name: \"list\") property(List) list_0f3a8d\n\n        out(x: 1137, y: -234, name: \"output\") property(Number) output_b1b9e5\n\n        instance(x: 102, y: -104) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 415, y: 147, name: \"max\") property(Number) max_a1d0a8\n        instance(x: 321, y: -20) min_3c7a4e root.Std_k98ojb.List.Min {}\n        instance(x: -273, y: 162) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -104, y: 147) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n\n        list_0f3a8d -> length_6e87f2.list\n        length_6e87f2.length -> max_a1d0a8\n        min_3c7a4e.list -> sub_852f2e.items\n        sub_852f2e.itemAtIndex -> greaterthan_cb50ae.left\n        greaterthan_cb50ae.right -> sub_852f2e.itemAtIndex\n        length_6e87f2.length -> sub_852f2e.itemAtIndex\n        sub_852f2e.result -> max_a1d0a8\n        min_3c7a4e.min -> output_b1b9e5\n    }\n\n    \n\n    instance(x: -55, y: 530) diff_max_min_6aebd4 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -292, y: 13, name: \"list\") property(List) list_8f4a3d\n\n        out(x: 1096, y: -23, name: \"output\") property(Number) output_e7e9c5\n\n        instance(x: -106, y: 28, name: \"max_node\") node Std_k98ojb.Std.IfExpression {}\n        instance(x: -105, y: 34, name: \"min_node\") node Std_k98ojb.Std.IfExpression {}\n        instance(x: 94, y: 43) max_5c6e1f root.Std_k98ojb.List.Max {}\n        instance(x: 92, y: 47) min_9d8a2d root.Std_k98ojb.List.Min {}\n        instance(x: -101, y: 55) sub_f4dfdb root.Std_k98ojb.Math.Sub {}\n        list_8f4a3d -> max_node.gen_0\n        list_8f4a3d -> min_node.gen_1\n        max_node.then -> max_5c6e1f.execute\n        min_node.then -> min_9d8a2d.execute\n        max_node.else -> sub_f4dfdb.execute\n        min_node.else -> sub_f4dfdb.execute\n        list_8f4a3d -> sub_f4dfdb.list\n        0 -> sub_f4dfdb.first\n        sub_f4dfdb.result -> output_e7e9c5\n    }\n\n    \n\n    instance(x: -95, y: 63) diff_max_min_d1cd6b root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 155, name: \"n\") property(Number) n_4e9d2a\n\n        out(x: 1033, y: -1, name: \"output\") property(Bool) output_eb7c0f\n\n        instance(x: -82, y: 155) modulo_d6d5f8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -48, y: 4, name: \"check\") Std.If {\n            input: \"n % 2 == 0\"\n        }\n        n_4e9d2a -> modulo_d6d5f8.value\n        modulo_d6d5f8.divisor -> check.input\n        modulo_d6d5f8.result -> check.predicate\n        if (modulo_d6d5f8.result) then output_eb7c0f = true else output_eb7c0f = false\n    }\n\n    \n\n    instance(x: 45, y: -178) is_even_2e9df1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -275, y: 20, name: \"n\") property(Number) n_9d6a2f\n\n        out(x: 1035, y: 21, name: \"output\") property(Bool) output_7c0e1b\n        out(x: 1063, y: -22, name: \"continue\") trigger() continue_4eb5d8\n\n        instance(x: 105, y: 23) modulo_d9f2a6 root.Std_k98ojb.Math.Modulo {}\n        n_9d6a2f -> modulo_d9f2a6.value\n        0 -> modulo_d9f2a6.divisor\n        modulo_d9f2a6.result -> output_7c0e1b\n        modulo_d9f2a6.result == 0 -> continue_4eb5d8\n    }\n\n    \n\n    instance(x: -292, y: 29) is_even_f3e2f2 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -275, y: 19, name: \"n\") property(Number) n_1f8a95\n\n        out(x: 1094, y: -21, name: \"output\") property(Bool) output_3d5e6c\n\n        instance(x: 0, y: 0) modulo_eb9d7b root.Std_k98ojb.Math.Modulo {}\n        n_1f8a95 -> modulo_eb9d7b.value\n        2 -> modulo_eb9d7b.divisor\n        modulo_eb9d7b.result -> output_3d5e6c\n    }\n\n    \n\n    instance(x: -274, y: -20) is_even_c1f0a3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 155, name: \"n\") property(Number) n_9f6e3a\n\n        out(x: 123, y: 59, name: \"output\") property(Bool) output_e1b7c4\n\n        instance(x: 0, y: 60) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -19, y: 55) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n        n_9f6e3a -> modulo_c76d2b.value\n        0 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_7836b4.left\n        1 -> notequal_7836b4.right\n        notequal_7836b4.result -> output_e1b7c4\n    }\n\n    \n\n    instance(x: -67, y: 25) is_even_bf3d2e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 2, name: \"number\") property(Number) number_9a3d6e\n\n        out(x: 1031, y: -4, name: \"output\") property(Bool) output_a7c5b0\n\n        instance(x: 104, y: -11) modulo_e8f1d2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 105, y: -14) equal_6a4e9c root.Std_k98ojb.Logic.Equal {}\n        number_9a3d6e -> modulo_e8f1d2.value\n        0 -> equal_6a4e9c.right\n        modulo_e8f1d2.result -> equal_6a4e9c.left\n        equal_6a4e9c.result -> output_a7c5b0\n    }\n\n    \n\n    instance(x: -193, y: -13) is_even_7d3d14 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not\") is_even {\n        in(x: -285, y: 155, name: \"n\") property(Number) n_2a8f6d\n\n        out(x: 1094, y: -96, name: \"output\") property(Bool) output_7c8e0c\n\n        instance(x: 105, y: 140) modulo_1b3df9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 103, y: 145) equal_d4d2ec root.Std_k98ojb.Logic.Equal {}\n        n_2a8f6d -> modulo_1b3df9.value\n        0 -> equal_d4d2ec.right\n        modulo_1b3df9.result -> equal_d4d2ec.left\n        equal_d4d2ec.result -> output_7c8e0c\n    }\n\n    \n\n    instance(x: -289, y: 164) is_even_b1f5a8 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 0, name: \"input\") property(Number) input_1e4d6a\n\n        out(x: 547, y: -2, name: \"output\") property(Bool) output_d8c5f7\n        instance(x: 112, y: -3) modulo_9b3aeb root.Std_k98ojb.Math.Modulo {}\n        input_1e4d6a -> modulo_9b3aeb.value\n        2 -> modulo_9b3aeb.divisor\n        modulo_9b3aeb.result -> output_d8c5f7\n    }\n\n    \n\n    instance(x: -83, y: 49) is_even_a0e1d4 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -283, y: 0, name: \"n\") property(Number) n_8f2d3a\n\n        out(x: 1049, y: 1, name: \"output\") property(Bool) output_c5e4b8\n\n        instance(x: 0, y: 0) modulo_7b6c8 root.Std_k98ojb.Math.Modulo {}\n        n_8f2d3a -> modulo_7b6c8.value\n        2 -> modulo_7b6c8.divisor\n        modulo_7b6c8.result -> output_c5e4b8\n    }\n\n    \n\n    instance(x: -84, y: 1) is_even_0f9d3a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 4, name: \"n\") property(Number) n_9f1f2d\n\n        out(x: 1235, y: 3, name: \"output\") property(Bool) output_8c9e7b\n\n        instance(x: 0, y: -13, name: \"is_multiple_of_two\") filter_d4a6f7 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -47, y: -12, name: \"get_remainder\") get_remainder_3c9e8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 13, name: \"is_even_number\") not_7fdd4a root.Std_k98ojb.Logic.Not {}\n        n_9f1f2d -> is_multiple_of_two.predicate\n        get_remainder_3c9e8d.value -> is_even_number.input\n        get_remainder_3c9e8d.result -> output_8c9e7b\n        is_even_number.result -> output_8c9e7b\n    }\n\n    \n\n    instance(x: -46, y: 17) is_even_b5a6f1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 23, name: \"number\") property(Number) number_6d0e5a\n\n        out(x: 1051, y: 4, name: \"output\") property(Bool) output_7c2f8b\n\n        instance(x: -69, y: 25) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        modulo_c76d2b.divisor -> 2\n        number_6d0e5a -> modulo_c76d2b.value\n        modulo_c76d2b.result -> output_7c2f8b\n    }\n\n    \n\n    instance(x: -55, y: 49) is_even_3f9a95 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -34, y: 127) map_6f9c43 root.Std_k98ojb.Iteration.Map {\n            handler: function(it: Char) { return [it, input_ai.indexOf(it)] }\n        }\n        instance(x: 101, y: 55) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        instance(x: -34, y: 127) ifexpression_6f9c43 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it[1] != 0\"\n        }\n        instance(x: 101, y: 55) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        filter_7b3b7b.result -> map_6f9c43.items\n        ifexpression_6f9c43.then -> firstitem_870503.item\n        output_ai.value -> firstitem_870503.item[0]\n    }\n\n    \n\n    instance(x: -179, y: 30) FirstRepeat_ae8a5 root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -343, y: 2, name: \"string\") property(String) input_0\n        out(x: 530, y: -1, name: \"continue\") trigger() continue_c9f8c4\n        out(x: 966, y: 219, name: \"output\") property(Char) output_d6d8b2\n\n        instance(x: -38, y: 0) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -109, y: 34) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_0 -> tolower_2e1444.input\n        contains_d42dce.result -> continue_c9f8c4.bool\n        instance(x: 89, y: 29) if_7c284f root.Std_k98ojb.Std.If {}\n        tolower_2e1444.output -> if_7c284f.input\n        input_0 -> if_7c284f.input\n        contains_d42dce.result -> if_7c284f.predicate\n        continue_c9f8c4.then -> if_7c284f.execute\n        tolower_2e1444.output -> continue_c9f8c4.bool\n        input_0 -> if_7c284f.input\n        contains_d42dce.result -> if_7c284f.predicate\n        if_7c284f.else -> continue_c9f8c4.next\n        instance(x: 112, y: 80) find_6d05b root.Std_k98ojb.Iteration.Find {}\n        lister_0 -> find_6d05b.items\n        lister_0.index -> if_7c284f.index\n        tolower_2e1444.output -> output_d6d8b2.char\n    }\n\n    \n\n    instance(x: -81, y: 159) first_repeated_f15bad root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Any) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 620) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 196, y: 425) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 118, y: 540, name: \"char\") getter_44a047 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1405, y: -438) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 551, y: 170, name: \"index\") getter_84fbbe root.Std_k98ojb.List.GetAt {}\n        instance(x: 758, y: -75) if_7c284f root.Std_k98ojb.Std.If {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> tolower_7b3b7b.input\n        sub_f133b2.result -> contains_d42dce.contains\n        contains_d42dce.result -> if_7c284f.predicate\n        char.itemAtIndex -> if_7c284f.index\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> if_7c284f.then\n        if_7c284f.else -> getter_84fbbe.value\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_49c6ac root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_f59bc6 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 0) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n        instance(x: 215, y: 100) map_84fbbe root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1059, y: -696) count_c831ca root.Std_k98ojb.Count {}\n        instance(x: -432, y: -620) ifexpression_aabb6e root.Std_k98ojb.Std.If {}\n        tolower_7b3b7b.output -> contains_f59bc6.input\n        input_ai -> contains_f59bc6.contains\n        map_84fbbe.handler -> getat_8eae56\n        instance(x: -48, y: 517) isnumeric_3078c6 root.Std_k98ojb.Strings.IsNumeric {}\n        count_c831ca.count -> ifexpression_aabb6e.execute\n        getat_8eae56.itemAtIndex -> map_84fbbe.output_list\n        contains_f59bc6.result -> isnumeric_3078c6.value\n        first_repeated_char.output -> getat_8eae56.itemAtIndex\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_char_496e5e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -569, y: 0, name: \"input\") property(String) input_ai\n        out(x: 531, y: 73, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 74) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 87) contains_a2f1e4 root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_a2f1e4.input\n        \"a\" -> contains_a2f1e4.contains\n        input_ai -> tolower_7b3b7b.input\n        contains_a2f1e4.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_59bc6e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -530, y: 2, name: \"string\") property(String) input_ai\n        out(x: -190, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: -1037, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1027, y: 2) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: -191, y: 30) first_repeated_59bc6e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) filter_59bc6e root.Std_k98ojb.Query.Filter {}\n        instance(x: 118, y: 425) map_f5c0f9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 196, y: 540) count_e1d4a7 root.Std_k98ojb.Count {}\n        instance(x: -978, y: -566) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_instance(x: 340, y: 53) find_c8c9e3 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 118, y: 425) notequal_e0d5a6 root.Std_k98ojb.Logic.NotEqual {}\n        tolower_7b3b7b.output -> filter_59bc6e.input\n        input_ai -> tolower_7b3b7b.input\n        map_f5c0f9.handler = sub_852f2e\n        count_e1d4a7.value -> map_f5c0f9.handler\n        1 -> count_e1d4a7.reset\n        filter_59bc6e.result -> find_c8c9e3.items\n        map_f5c0f9.output_list -> output_ai\n        sub_852f2e.first -> notequal_e0d5a6.left\n        input_ai -> notequal_e0d5a6.right\n        count_e1d4a7.value -> find_c8c9e3.item\n        notequal_e0d5a6.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_59b2af root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -530, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 620) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        list_instance(x: 340, y: 77) count_0a8d6e root.Std_k98ojb.Count {}\n        instance(x: 215, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == 1\"\n        }\n        instance(x: -1049, y: 375) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.contains -> \"a\"\n        count_0a8d6e.reset -> ifexpression_a2fa90.execute\n        list_instance(x: 340, y: 77) -> count_0a8d6e.list\n        1 -> sub_9ff257.second\n        input_ai -> sub_9ff257.first\n        sub_9ff257.result -> ifexpression_a2fa90.predicate\n        contains_d42dce.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_f21f44 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 265, y: 60) ifexpression_a2fa90 root.Std_k98ojb.Std.If {}\n        tolower_7b3b7b.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.result -> output_ai\n        ifexpression_a2fa90.then -> FirstRepeat.next\n        1 -> FirstRepeat.index\n        ifexpression_a2fa90.execute -> FirstRepeat.continue\n    }\n\n    \n\n    instance(x: -97, y: -68) FirstRepeat_59bc6e root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -159, y: 30) contains_59bc6e root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 77) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        tolower_7b3b7b.output -> contains_59bc6e.input\n        input_ai -> tolower_7b3b7b.input\n        first_repeated_char.result = ifexpression_a2fa90.then\n    }\n\n    \n\n    instance(x: -34, y: 127) first_repeated_char_496e5e root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: 23, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 101, y: -19, name: \"output\") property(Number) output_e2c0d3\n\n        instance(x: -105, y: -110) ifexpression_d2b6b5 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_smallest_value\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_smallest_value\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_smallest_value\n        list_8e9f1a -> ifexpression_d2b6b5.gen_0\n        ifexpression_d2b6b5.then -> setter_1cedb2.execute\n        list_8e9f1a[1] -> setter_37db7f.new_value\n        ifexpression_d2b6b5.else -> setter_37db7f.execute\n        instance(x: -105, y: -110) count_e2c0d3 root.Std_k98ojb.Std.Count {}\n        list_8e9f1a[0] -> count_e2c0d3.reset\n        2 -> count_e2c0d3.count\n        ifexpression_d2b6b5.then -> count_e2c0d3.execute\n        second_smallest_value.value -> output_e2c0d3\n    }\n\n    \n\n    instance(x: -67, y: -37) second_smallest_8e9f1a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -100, y: -44, name: \"list\") property(List) list_8a9f6d\n\n        out(x: 0, y: -23, name: \"min\") property(Number) min_1bdf7e\n        out(x: 0, y: 18, name: \"second_min\") property(Number) second_min_ea2c5d\n\n        instance(x: -44, y: -13, name: \"first_min_node\") Std_k98ojb.Std.If {}\n        instance(x: -100, y: -26, name: \"second_min_node\") Std_k98ojb.Std.If {}\n        instance(x: 0, y: 4, name: \"compare_nodes\") Std_k98ojb.Std.IfExpression {}\n        list_8a9f6d -> first_min_node.items\n        compare_nodes.expression = \"it < min\"\n        list_8a9f6d -> second_min_node.items\n        compare_nodes.expression = \"it > min\"\n\n        instance(x: -104, y: 5, name: \"first_min\") Std_k98ojb.Std.If {}\n        first_min_node.then -> first_min.execute\n        list_8a9f6d.first -> first_min.new_value\n\n        second_min_node.then -> second_min.execute\n        list_8a9f6d[1] -> second_min.new_value\n\n        compare_nodes.then -> first_min.execute\n        first_min_node.then -> second_min.execute\n        list_8a9f6d.first -> min_1bdf7e\n        list_8a9f6d[1] -> second_min_ea2c5d\n    }\n\n    \n\n    instance(x: -67, y: 53) second_smallest_f0ddfa root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: 18, name: \"list\") property(List) list_5e1f4d\n\n        out(x: 0, y: 21, name: \"min\") property(Number) min_a8b9a2\n        out(x: 0, y: 21, name: \"second_min\") property(Number) second_min_e3c7eb\n\n        instance(x: -1049, y: -73, name: \"first_smallest\") first_smallest_node root.Std_k98ojb.Std.If {}\n        instance(x: -103, y: -74, name: \"second_smallest_node\") second_smallest_node root.Std_k98ojb.Std.If {}\n        list_5e1f4d -> first_smallest_node.items\n        func() {\n            in(x: -102, y: 18, name: \"x\") property(Number) x_d2a6c9\n\n            out(x: 0, y: 21, name: \"\") property(Number) _8b7e1f\n\n            instance(x: -103, y: -67) less_than_5d3b65 root.Std_k98ojb.Math.LessThanOrEqual {}\n            instance(x: -105, y: 19, name: \"min_node\") min_node root.Std_k98ojb.Std.If {}\n            first_smallest_node.then -> min_node.execute\n            x_d2a6c9 -> less_than_5d3b65.left\n            0 -> less_than_5d3b65.right\n            less_than_5d3b65.result -> min_node.predicate\n        } -> first_smallest_node.handler\n        func() {\n            in(x: -103, y: 18, name: \"x\") property(Number) x_d2a6c9\n\n            out(x: 0, y: 21, name: \"\") property(Number) _8b7e1f\n\n            instance(x: -105, y: 19, name: \"min_node\") min_node root.Std_k98ojb.Std.If {}\n            second_smallest_node.then -> min_node.execute\n            x_d2a6c9 -> less_than_5d3b65.left\n            0 -> less_than_5d3b65.right\n            less_than_5d3b65.result -> min_node.predicate\n        } -> second_smallest_node.handler\n        list_5e1f4d -> min_node.items\n        min_node.min -> _8b7e1f\n        first_smallest_node.done -> second_smallest_node.execute\n        second_smallest_node.item -> min_node.list[2]\n    }\n\n    \n\n    instance(x: -67, y: 21) second_smallest_4c9a6d root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1049, y: -509, name: \"list\") property(List) list_6e5a3f\n\n        out(x: 512, y: -106, name: \"min1\") property(Number) min1_f4d8b2\n        out(x: 522, y: -107, name: \"min2\") property(Number) min2_c9e0c1\n        instance(x: 95, y: -104, name: \"second_smallest_node\") second_smallest_node root.Std_k98ojb.Std.IfExpression {}\n        list_6e5a3f -> second_smallest_node.items\n        func() {\n            in(x: -1092, y: 22, name: \"x\") property(Number) x_f7d8c0\n\n            out(x: 523, y: -107, name: \"\") property(Number) _1e8b9a\n\n            instance(x: 96, y: -104, name: \"smallest_node\") smallest_node root.Std_k98ojb.Std.If {}\n            x_f7d8c0 -> smallest_node.x\n            0 -> smallest_node.then\n            list_6e5a3f[1] -> smallest_node.x\n            smallest_node.else -> _1e8b9a.execute\n        } -> second_smallest_node.gen_0\n        func() {\n            in(x: -1092, y: 22, name: \"x\") property(Number) x_f7d8c0\n\n            out(x: 523, y: -107, name: \"\") property(Number) _1e8b9a\n\n            instance(x: 96, y: -104, name: \"smallest_node\") smallest_node root.Std_k98ojb.Std.If {}\n            x_f7d8c0 -> smallest_node.x\n            0 -> smallest_node.then\n            list_6e5a3f[1] -> smallest_node.x\n            smallest_node.else -> _1e8b9a.execute\n        } -> smallest_node.gen_1\n        func() {\n            in(x: -1092, y: 22, name: \"x\") property(Number) x_f7d8c0\n\n            out(x: 523, y: -107, name: \"\") property(Number) _1e8b9a\n\n            instance(x: 96, y: -104, name: \"second_smallest_node\") second_smallest_node root.Std_k98ojb.Std.If {}\n            x_f7d8c0 -> second_smallest_node.x\n            0 -> second_smallest_node.then\n            list_6e5a3f[1] -> second_smallest_node.x\n            smallest_node.x -> second_smallest_node.right\n            0 -> second_smallest_node.left\n            second_smallest_node.right -> _1e8b9a.execute\n        } -> second_smallest_node.gen_2\n        smallest_node.x -> min1_f4d8b2\n        smallest_node.right -> min2_c9e0c1\n    }\n\n    \n\n    instance(x: -68, y: 43) second_smallest_3e6f47 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1001, y: 2, name: \"list\") property(List) list_0d3a9e\n\n        out(x: 101, y: 27, name: \"output\") property(Number) output_a6c5f8\n        instance(x: 95, y: -109, name: \"second_smallest_node\") second_smallest_node root.Std_k98ojb.Std.IfExpression {}\n        list_0d3a9e -> second_smallest_node.items\n        func() {\n            in(x: -1017, y: -26, name: \"x\") property(Number) x_d2f5c6\n\n            out(x: 1001, y: -27, name: \"\") property(Number) _8d4b45\n\n            instance(x: 93, y: -109) less_3e7a0a root.Std_k98ojb.Logic.LessThanOrEqual {}\n            instance(x: 95, y: -109) if_5f6f9d root.Std_k98ojb.Std.If {}\n            second_smallest_node.then -> if_5f6f9d.execute\n            x_d2f5c6 -> less_3e7a0a.left\n            list_0d3a9e[1] -> less_3e7a0a.right\n            less_3e7a0a.result -> if_5f6f9d.predicate\n            if_5f6f9d.else -> second_smallest_node.else\n            x_d2f5c6 -> if_5f6f9d.then\n            list_0d3a9e[1] -> if_5f6f9d.then\n            less_3e7a0a.result -> _8d4b45\n        } -> second_smallest_node.expression\n        output_a6c5f8 -> second_smallest_node.value\n    }\n\n    \n\n    instance(x: 105, y: -69) second_smallest_1d9d34 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a given list.\") second_smallest {\n        in(x: -101, y: 18, name: \"list\") property(List) list_8f5d1b\n\n        out(x: -105, y: 27, name: \"min\") property(Number) min_6d0e9c\n        out(x: -102, y: 29, name: \"second_min\") property(Number) second_min_2a7dd4\n\n        instance(x: 0, y: 0) Std.If() if_a5f3b {\n            in(x: -108, y: 34, name: \"input\") property(Number) input_1d6c8e\n            out(x: 0, y: 41, name: \"then\") trigger() then_e4ddfa\n\n            instance(x: -104, y: -11, name: \"else\") Std.If() else_a3f9a {\n                in(x: -109, y: 34, name: \"input\") property(Number) input_1d6c8e\n                out(x: 0, y: 41, name: \"else\") trigger() else_f2cd7b\n\n                instance(x: -105, y: 27, name: \"second_min_node\") Std_k98ojb.List.Min {}\n                list_8f5d1b -> second_min_node.items\n                min_6d0e9c -> second_min_node.min\n                input_1d6c8e -> second_min_node.item\n                second_min_node.min -> second_min_2a7dd4\n            }\n        } -> if_a5f3b.predicate\n        list_8f5d1b -> Std.If().items\n        min_6d0e9c -> Std.If().then.value\n        Std.If().else -> second_min_2a7dd4\n    }\n\n    \n\n    instance(x: -69, y: 44) second_smallest_d6f9e9 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1035, y: 2, name: \"list\") property(List) list_6f3d9a\n\n        out(x: -1074, y: -104, name: \"output\") property(Number) output_c8e7b1\n\n        instance(x: 0, y: 0) ifexpression_d4f2c5 root.Std_k98ojb.Std.IfExpression {}\n        in(x: 3, y: 19, name: \"a\") property(Number) a_6d9d35\n        in(x: -1028, y: -104, name: \"b\") property(Number) b_e7f0c1\n\n        instance(x: 5, y: 21) Std.IfExpression_2a3eb2 {\n            expression: \"a < b\"\n        }\n        getter(x: 0, y: 24, name: \"getter_6e8d4b\") getter_6e8d4b = output\n        setter(x: -1045, y: -98, name: \"setter_a3e2f9\") setter_a3e2f9 = output\n        instance(x: 0, y: 24) Std.Count {}\n        a_6d9d35 -> ifexpression_d4f2c5.gen_0\n        b_e7f0c1 -> ifexpression_d4f2c5.gen_1\n        getter_6e8d4b.value -> output_c8e7b1\n        ifexpression_d4f2c5.then -> setter_a3e2f9.execute\n        a_6d9d35 -> setter_a3e2f9.new_value\n        b_e7f0c1 -> setter_a3e2f9.second\n        ifexpression_d4f2c5.else -> setter_a3e2f9.continue\n    }\n\n    \n\n    instance(x: -104, y: 44) second_smallest_ba6d14 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -101, y: 2, name: \"list\") property(List) list_9d3e6f\n\n        out(x: 439, y: -108, name: \"min\") property(Number) min_1ebc7a\n        out(x: 444, y: -109, name: \"second_min\") property(Number) second_min_9b2df0\n\n        instance(x: 91, y: -115) firstitem_8f6d3a root.Std_k98ojb.List.FirstItem {}\n        instance(x: 96, y: -103) seconditem_e1f7c5 root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -59, y: -110) data_4e0cd8  = [first, second]\n        instance(x: -433, y: -104) sort_d3a3d6 root.Std_k98ojb.List.Sort {}\n        list_9d3e6f -> sort_d3a3d6.items\n        firstitem_8f6d3a.item -> data_4e0cd8.first\n        seconditem_e1f7c5.item -> data_4e0cd8.second\n        sort_d3a3d6.sorted_list -> data_4e0cd8\n        data_4e0cd8.first -> min_1ebc7a\n        if Std_k98ojb.Std.IfExpression(\"data_4e0cd8.first == min_1ebc7a\") {\n            seconditem_e1f7c5.item -> second_min_9b2df0\n        } else {\n            seconditem_e1f7c5.item = null\n        }\n    }\n\n    \n\n    instance(x: -69, y: 46) second_smallest_f3e4f6 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -109, y: -0, name: \"list\") property(List) list_6a5f8d\n\n        out(x: 439, y: -1, name: \"min\") property(Number) min_e4c7f3\n        out(x: 538, y: -1, name: \"second_min\") property(Number) second_min_d2e9b0\n\n        instance(x: 0, y: 0) sort_5d2a43 root.Std_k98ojb.List.Sort {}\n        list_6a5f8d -> sort_5d2a43.list\n        sort_5d2a43.result -> min_e4c7f3\n        instance(x: -106, y: 26) count_b1f5eb root.Std_k98ojb.Std.Count {}\n        list_6a5f8d -> count_b1f5eb.items\n        2 -> count_b1f5eb.count\n        min_e4c7f3 -> count_b1f5eb.value\n        instance(x: -105, y: 28) sub_9e0baf root.Std_k98ojb.Math.Sub {}\n        list_6a5f8d -> sub_9e0baf.items\n        sort_5d2a43.result -> sub_9e0baf.first\n        min_e4c7f3 -> sub_9e0baf.second\n        instance(x: -103, y: 30) ifexpression_4b6a1 root.Std_k98ojb.Std.IfExpression {}\n        sort_5d2a43.result -> ifexpression_4b6a.left\n        min_e4c7f3 -> ifexpression_4b6a.right\n        sub_9e0baf.first -> ifexpression_4b6a.then\n        instance(x: -102, y: 32) ifexpression_4b6a else {\n            sub_9e0baf.second -> second_min_d2e9b0\n        } -> ifexpression_4b6a.else\n    }\n\n    \n\n    instance(x: 104, y: -64) second_smallest_f5d1c3 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1048, y: -536, name: \"list\") property(List) list_6a0f1e\n\n        out(x: 439, y: -219, name: \"min\") property(Number) min_b7c9d2\n        out(x: 535, y: -216, name: \"second_min\") property(Number) second_min_e3df4b\n\n        instance(x: -1048, y: -536) firstitem_6a0f20 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1057, y: -697) seconditem_1c2d5e root.Std_k98ojb.List.SecondItem {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        instance(x: -432, y: -620) flatten_c31c7c root.Std_k98ojb.List.Flatten {}\n        instance(x: -978, y: -566) sort_5f2e9a root.Std_k98ojb.List.Sort {}\n        instance(x: 189, y: -438) ifexpression_1d6df3 root.Std_k98ojb.Std.IfExpression {}\n        data_instance(x: -753, y: -588) data_cc1b1b  = [first, middle, last]\n        list_6a0f1e -> sort_5f2e9a.list\n        firstitem_6a0f20.item -> sort_5f2e9a.items\n        seconditem_1c2d5e.item -> sort_5f2e9a.items\n        flatten_c31c7c.flattened -> data_cc1b1b\n        min_b7c9d2 -> data_cc1b1b.first\n        ifexpression_1d6df3.then -> seconditem_1c2d5e.execute\n        sort_5f2e9a.result[0] -> ifexpression_1d6df3.left\n        sort_5f2e9a.result[1] -> ifexpression_1d6df3.right\n        ifexpression_1d6df3.then.value -> second_min_e3df4b\n        data_cc1b1b.first -> min_b7c9d2\n    }\n\n    \n\n    instance(x: 101, y: -67) second_smallest_6a0f5e root.main.second_smallest {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_10_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12101,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks if two lists have at least one common element.\") has_common {\n        in(x: -475, y: 3, name: \"list1\") property(List) list_2d5e8b\n        in(x: -482, y: -23, name: \"list2\") property(List) list_d6a9c7\n\n        out(x: 1010, y: 4, name: \"output\") property(Bool) output_8f1d3d\n\n        instance(x: 103, y: -27) contains_b9e5f9 root.Std_k98ojb.List.Contains {}\n        list_2d5e8b -> contains_b9e5f9.left\n        list_d6a9c7 -> contains_b9e5f9.right\n        contains_b9e5f9.result -> output_8f1d3d\n    }\n\n    \n\n    instance(x: -48, y: 64) has_common_e2bdf4 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"checks whether two lists have at least one common element.\") has_common_element {\n        in(x: -484, y: 19, name: \"list1\") property(List) list_0d6e8f\n        in(x: -488, y: -11, name: \"list2\") property(List) list_ea8c3b\n\n        out(x: -5, y: 47, name: \"output\") property(Bool) output_c1a7e4\n\n        instance(x: 92, y: 45) contains_32727d root.Std_k98ojb.List.Contains {}\n        has_common_element -> contains_32727d.list\n        list_ea8c3b -> contains_32727d.item\n        if (contains_32727d.is_contained) {\n            output_c1a7e4 = true\n        } else {\n            output_c1a7e4 = false\n        }\n    }\n\n    \n\n    instance(x: 9, y: -26) has_common_element_bf3b6c root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common {\n        in(x: -493, y: 15, name: \"list1\") property(List) list_0a6e9d\n        in(x: -487, y: 23, name: \"list2\") property(List) list_a1f4b5\n\n        out(x: 1213, y: 17, name: \"output\") property(Bool) output_e7c8d4\n\n        instance(x: 1029, y: -28) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_a1f4b5 -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_e7c8d4\n    }\n\n    \n\n    instance(x: -43, y: 69) has_common_f3e9eb root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds whether two lists contain common elements.\") has_common_element {\n        in(x: -475, y: 4, name: \"list1\") property(List) list_0a3e2d\n        in(x: -483, y: 21, name: \"list2\") property(List) list_b8c9b5\n\n        out(x: 1047, y: 14, name: \"output\") property(Bool) output_e4f2ca\n\n        instance(x: 93, y: 11) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_0a3e2d -> contains_32727d.list\n        list_b8c9b5 -> contains_32727d.item\n        contains_32727d.is_contained -> output_e4f2ca\n    }\n\n    \n\n    instance(x: -293, y: 59) has_common_element_6a3bb7 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether two lists have any common elements.\") has_common_element {\n        in(x: -145, y: 19, name: \"list1\") property(List) list_5d3e2f\n        in(x: -156, y: -121, name: \"list2\") property(List) list_d4b0a3\n\n        out(x: 123, y: 59, name: \"output\") property(Bool) output_e1d9df\n\n        instance(x: -8, y: 69) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 246, y: 57) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 85) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_d4b0a3 -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_5d3e2f -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_e1d9df\n    }\n\n    \n\n    instance(x: -84, y: 46) has_common_element_f4a5f2 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"takes two lists and returns true if they have at least one common element.\") has_common {\n        in(x: -493, y: 18, name: \"list1\") property(List) list_5e0f6b\n        in(x: -484, y: -121, name: \"list2\") property(List) list_d7d9c8\n\n        out(x: 1013, y: 47, name: \"output\") property(Bool) output_b7c8db\n\n        instance(x: 1045, y: 50) intersection_1e4f6a root.Std_k98ojb.Sets.Intersection {}\n        list_5e0f6b -> intersection_1e4f6a.left\n        list_d7d9c8 -> intersection_1e4f6a.right\n        intersection_1e4f6a.intersect -> output_b7c8db\n    }\n\n    \n\n    instance(x: 101, y: -67) has_common_5bdf3b root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists contain at least one common element.\") has_common_element {\n        in(x: -509, y: 23, name: \"list1\") property(List) list_8d3a0b\n        in(x: -515, y: 14, name: \"list2\") property(List) list_a4f7c9\n\n        out(x: 123, y: -46, name: \"output\") property(Bool) output_f6c5df\n\n        instance(x: 93, y: -53) contains_32727d root.Std_k98ojb.List.Contains {}\n        list_8d3a0b -> contains_32727d.list\n        list_a4f7c9 -> contains_32727d.item\n        contains_32727d.is_contained -> output_f6c5df\n    }\n\n    \n\n    instance(x: -293, y: 55) has_common_element_d2e1f root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether two lists have at least one common element.\") has_common {\n        in(x: -484, y: 2, name: \"list1\") property(List) list_0d6e9a\n        in(x: -491, y: 5, name: \"list2\") property(List) list_8c4b35\n\n        out(x: 1213, y: 7, name: \"output\") property(Bool) output_1d4f43\n\n        instance(x: 1055, y: -13) contains_0a6e15 root.Std_k98ojb.List.Contains {}\n        list_0d6e9a -> contains_0a6e15.list\n        list_8c4b35 -> contains_0a6e15.right\n        contains_0a6e15.is_contained -> output_1d4f43\n    }\n\n    \n\n    instance(x: -34, y: 127) has_common_5bb2d4 root.main.has_common {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -528, y: -235, name: \"list1\") property(List) list_0e6a5d\n        in(x: -523, y: 11, name: \"list2\") property(List) list_9f8c3b\n\n        out(x: 1027, y: 13, name: \"output\") property(Bool) output_c8e1ac\n\n        instance(x: 103, y: 15) intersection_fdbf6d root.Std_k98ojb.Sets.Intersection {}\n        list_0e6a5d -> intersection_fdbf6d.left\n        list_9f8c3b -> intersection_fdbf6d.right\n        instance(x: -19, y: 16) not_75283f root.Std_k98ojb.Logic.Not {}\n        output_c8e1ac -> not_75283f.input\n        intersection_fdbf6d.intersect -> not_75283f.result\n    }\n\n    \n\n    instance(x: -44, y: 54) has_common_element_e4c5c3 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether two lists contain at least one common element.\") has_common_element {\n        in(x: -527, y: 18, name: \"list1\") property(List) list_9a6f2d\n        in(x: -156, y: -121, name: \"list2\") property(List) list_a0e5b3\n\n        out(x: 1017, y: -48, name: \"output\") property(Bool) output_4c4f1f\n\n        instance(x: -292, y: -105) filter_e8a6d9 root.Std_k98ojb.Query.Filter {}\n        list_a0e5b3 -> filter_e8a6d9.items\n        func() {\n            in(x: -527, y: 18, name: \"current\") property(Number) current_4cd7c1\n\n            out(x: 1017, y: -48, name: \"bool\") property(Bool) bool_0e3f2d\n\n            instance(x: 93, y: -121) contains_b9a8eb root.Std_k98ojb.List.Contains {}\n            current_4cd7c1 -> contains_b9a8eb.item\n            list_a0e5b3 -> contains_b9a8eb.list\n            bool_0e3f2d.result -> contains_b9a8eb.is_contained\n        } -> filter_e8a6d9.predicate\n        func() {\n            in(x: -527, y: 18, name: \"current\") property(Number) current_4cd7c1\n\n            out(x: 1017, y: -48, name: \"bool\") property(Bool) bool_0e3f2d\n\n            instance(x: -292, y: -105) contains_b9a8eb root.Std_k98ojb.List.Contains {}\n            current_4cd7c1 -> contains_b9a8eb.item\n            list_a0e5b3 -> contains_b9a8eb.list\n            bool_0e3f2d.result -> contains_b9a8eb.is_contained\n        } -> filter_e8a6d9.predicate\n        instance(x: 772, y: -48) not_equal_dfef1 root.Std_k98ojb.Logic.NotEqual {}\n        list_a0e5b3 -> not_equal_dfef1.left\n        list_9a6f2d -> not_equal_dfef1.right\n        not_equal_dfef1.result -> bool_0e3f2d\n    }\n\n    \n\n    instance(x: -34, y: 127) has_common_element_b8c7b root.main.has_common_element {}\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -278, y: 2, name: \"list\") property(List) list_8a5f9d\n\n        out(x: 1213, y: 4, name: \"output\") property(Bool) output_e0e1b7\n\n        instance(x: 95, y: 11) for_6c2f45 root.Std_k98ojb.Std.For {}\n        list_8a5f9d -> for_6c2f45.items\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_f3e7e1\n\n            out(x: 1044, y: -13, name: \"\") property(Number) difference_b9a8d0\n\n            instance(x: 89, y: 20) sub_2c0b6f root.Std_k98ojb.Math.Sub {}\n            current_f3e7e1 -> sub_2c0b6f.first\n            current_f3e7e1 + 1 -> sub_2c0b6f.second\n            difference_b9a8d0.result -> sub_2c0b6f.result\n        } -> for_6c2f45.handler\n        func() {\n            in(x: -121, y: -17, name: \"current\") property(Number) current_f3e7e1\n\n            out(x: 1044, y: -13, name: \"\") property(Bool) bool_9b8f66\n\n            instance(x: 89, y: 20) modulo_0a6c5d root.Std_k98ojb.Math.Modulo {}\n            current_f3e7e1 -> modulo_0a6c5d.value\n            1 -> modulo_0a6c5d.divisor\n            modulo_0a6c5d.result -> bool_9b8f66\n        } -> for_6c2f45.predicate\n        for_6c2f45.item -> output_e0e1b7\n    }\n\n    \n\n    instance(x: -83, y: 15) has_consecutive_numbers_b9a4db root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -278, y: 2, name: \"list\") property(List) list_4a6f5d\n\n        out(x: 1031, y: 74, name: \"output\") property(Bool) output_b0b9e3\n\n        instance(x: -82, y: 73) iteration_map_7c4bdf root.Std_k98ojb.Iteration.Map {}\n        list_4a6f5d -> iteration_map_7c4bdf.items\n        instance(x: 1028, y: 69) for_c9dd55 root.Std_k98ojb.Std.For {}\n        iteration_map_7c4bdf.output_list -> for_c9dd55.items\n        func() {\n            in(x: -121, y: -22, name: \"i\") property(Number) i_8e6d1a\n\n            out(x: 1095, y: 33, name: \"\") property(Bool) _3f4b2c\n\n            instance(x: 104, y: -16) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n            i_8e6d1a -> greaterthan_cb50ae.left\n            list_4a6f5d[i_8e6d1a] -> greaterthan_cb50ae.right\n            greaterthan_cb50ae.result -> _3f4b2c\n        } -> for_c9dd55.handler\n        func() {\n            in(x: -123, y: 29, name: \"i\") property(Number) i_8e6d1a\n\n            out(x: 1095, y: 33, name: \"\") property(Bool) _3f4b2c\n\n            instance(x: 104, y: -16) less than_7b8e21 root.Std_k98ojb.Math.LessThan {}\n            i_8e6d1a -> less_than_7b8e21.left\n            list_4a6f5d[i_8e6d1a] -> less_than_7b8e21.right\n            less_than_7b8e21.result -> _3f4b2c\n        } -> for_c9dd55.handler\n        for_c9dd55.done -> output_b0b9e3\n        is_consecutive.continue -> for_c9dd55.reset\n    }\n\n    \n\n    instance(x: 44, y: -13) is_consecutive_5d5c2a root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -294, y: 2, name: \"list\") property(List) list_d1d5e0\n\n        out(x: 1048, y: 6, name: \"output\") property(Bool) output_8f3b7c\n\n        instance(x: 83, y: -16, name: \"first\") filter_c91965 root.Std_k98ojb.Query.Filter {}\n        list_d1d5e0 -> filter_c91965.list\n        func() {\n            in(x: -17, y: 63, name: \"current\") property(Number) current_4c3a8f\n\n            out(x: 1016, y: 64, name: \"bool\") property(Bool) bool_7b9e34\n\n            instance(x: 95, y: 58) modulo_f5d1df root.Std_k98ojb.Math.Modulo {}\n            instance(x: 311, y: 65) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_4c3a8f -> modulo_f5d1df.value\n            1 -> modulo_f5d1df.divisor\n            modulo_f5d1df.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> bool_7b9e34\n        } -> filter_c91965.handler\n        func() {\n            in(x: -17, y: 63, name: \"current\") property(Number) current_4c3a8f\n\n            out(x: 1016, y: 64, name: \"\") property(Bool) bool_7b9e34\n\n            instance(x: 95, y: 58) modulo_f5d1df root.Std_k98ojb.Math.Modulo {}\n            current_4c3a8f -> modulo_f5d1df.value\n            1 -> modulo_f5d1df.divisor\n            modulo_f5d1df.result -> bool_7b9e34\n        } -> filter_c91965.handler\n        list_d1d5e0 -> first.item\n        filter_c91965.result -> output_8f3b7c\n    }\n\n    \n\n    instance(x: -23, y: 49) conseq_nums_e2a4f6 root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") contains_consecutive {\n        in(x: -292, y: 23, name: \"list\") property(List) list_3d6f8a\n\n        out(x: 1232, y: 5, name: \"output\") property(Bool) output_b7e0b9\n\n        instance(x: 59, y: 25) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -28, y: 34) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 201, y: 43) less_than_cb50ae root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -23, y: 48) filter_8f2c5d root.Std_k98ojb.Query.Filter {}\n        list_3d6f8a -> for_d26972.items\n        func() {\n            in(x: -123, y: 17, name: \"i\") property(Number) i_0df7e9\n\n            out(x: 1011, y: -10, name: \"\") property(Bool) _3c7d5b\n\n            instance(x: 90, y: 14) less_than_cb50ae root.Std_k98ojb.Math.LessThanOrEqual {}\n            i_0df7e9 -> less_than_cb50ae.left\n            list_3d6f8a[i_0df7e9] -> less_than_cb50ae.right\n            less_than_cb50ae.result -> _3c7d5b\n        } -> for_d26972.handler\n        filter_8f2c5d.items -> for_d26972.item\n        for_d26972.index -> filter_8f2c5d.predicate\n        list_3d6f8a -> less_than_cb50ae.left\n        1 -> less_than_cb50ae.right\n        less_than_cb50ae.result -> output_b7e0b9\n    }\n\n    \n\n    instance(x: -23, y: -37) contains_consecutive_d4c2d5 root.main.contains_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -294, y: 30, name: \"list\") property(List) list_a8d4ec\n\n        out(x: 1051, y: -13, name: \"output\") property(Bool) output_3c0f7b\n\n        instance(x: -83, y: -16, name: \"filter_numbers\") filter_c91965 root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        instance(x: -28, y: -10) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: -27, y: -11) count_9a4d14 root.Std_k98ojb.Std.Count {}\n        list_a8d4ec -> filter_numbers.list\n        func() {\n            in(x: -114, y: 43, name: \"current\") property(Number) current_1c3f6e\n\n            out(x: 1092, y: -15, name: \"\") property(Bool) _5d7b9a\n\n            instance(x: 94, y: 40) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            current_1c3f6e -> modulo_1088d5.value\n            1 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> _5d7b9a\n        } -> for_8cb3f6.handler\n        instance(x: -28, y: -10) is_equal_e2c9ec root.Std_k98ojb.Logic.Equal {}\n        list_a8d4ec -> for_8cb3f6.items\n        count_9a4d14.count -> is_equal_e2c9ec.left\n        1 -> is_equal_e2c9ec.right\n        is_equal_e2c9ec.result -> output_3c0f7b\n    }\n\n    \n\n    instance(x: -67, y: -27) is_consecutive_f4d5b8 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -246, y: 4, name: \"list\") property(List) list_8e6a5f\n\n        out(x: 1053, y: -14, name: \"output\") property(Bool) output_e0d9c7\n\n        instance(x: -69, y: 24) ifexpression_c2b4f1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 == current\"\n        }\n        getter(x: 334, y: 155, name: \"getter_0a9e8c\") getter_0a9e8c = previous\n        setter(x: 679, y: -313, name: \"setter_b5f6d7\") setter_b5f6d7 = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_b5f6d7\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_c2b4f1.else -> output_e0d9c7\n        ifexpression_c2b4f1.value -> output_e0d9c7\n        ifexpression_c2b4f1.then -> setter_b5f6d7.execute\n        list_8e6a5f -> for_d26972.items\n        for_d26972.item -> ifexpression_c2b4f1.gen_2\n        for_d26972.index -> ifexpression_c2b4f1.gen_0\n        getter_0a9e8c.value -> ifexpression_c2b4f1.gen_1\n        for_d26972.onItem -> ifexpression_c2b4f1.execute\n        for_d26972.done -> output_e0d9c7\n        for_d26972.item -> setter_b5f6d7.new_value\n        list_8e6a5f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        for_d26972.reset -> setter_b5f6d7.execute\n        for_d26972.next -> output_e0d9c7.continue\n    }\n\n    \n\n    instance(x: 11, y: -26) is_consecutive_ac4a8b root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -275, y: 23, name: \"list\") property(List) list_2d6a1f\n\n        out(x: 1238, y: 5, name: \"output\") property(Bool) output_b4e9c3\n\n        instance(x: 0, y: 0) for_7a5c43 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -275, y: 23, name: \"current\") property(Number) current_1d6f44\n            out(x: 1184, y: 11, name: \"\") property(Number) _a7c5db\n\n            instance(x: 96, y: 8) modulo_2e0b45 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 104, y: 9) less-than_3d6f1f root.Std_k98ojb.Math.LessThan {}\n            current_1d6f44 -> modulo_2e0b45.value\n            1 -> modulo_2e0b45.divisor\n            modulo_2e0b45.result -> less-than_3d6f1f.left\n            1 -> less-than_3d6f1f.right\n            less-than_3d6f1f.result -> _a7c5db\n        } -> for_7a5c43.handler\n        list_2d6a1f -> for_7a5c43.items\n        for_7a5c43.item -> is_consecutive.input_list\n        less-than_3d6f1f.value -> is_consecutive.output_list\n        _a7c5db == 1 -> output_b4e9c3\n    }\n\n    \n\n    instance(x: -64, y: 34) is_consecutive_8f0c21 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") conseq_nums {\n        in(x: -292, y: 2, name: \"list\") property(List) list_0a8e6f\n\n        out(x: 1233, y: -1, name: \"output\") property(Bool) output_b9c4db\n\n        instance(x: 94, y: -109) for_d5d5b2 root.Std_k98ojb.Std.For {}\n        instance(x: -23, y: 47) contains_cbf6a0 root.Std_k98ojb.List.Contains {}\n        instance(x: 191, y: 55) isnumeric_9c8a4e root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 104, y: 42) ifexpression_2d6f5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"it + 1 == next\"\n        }\n        function_0f9c45 root.Std_k98ojb.List.Function {}\n        list_0a8e6f -> for_d5d5b2.items\n        for_d5d5b2.item -> isnumeric_9c8a4e.new_value\n        ifexpression_2d6f5d.value -> function_0f9c45.predicate\n        function_0f9c45.result -> contains_cbf6a0.predicate\n        for_d5d5b2.index -> contains_cbf6a0.item\n        1 -> isnumeric_9c8a4e.input\n        list_0a8e6f -> contains_cbf6a0.list\n    }\n\n    \n\n    instance(x: -68, y: 19) conseq_nums_f3d2b4 root.main.conseq_nums {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -245, y: 23, name: \"list\") property(List) list_5f9a4e\n\n        out(x: 1033, y: 6, name: \"output\") property(Bool) output_b2d8b1\n\n        instance(x: 94, y: 24) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: -13) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: -16) count_b3d7c1 root.Std_k98ojb.Std.Count {}\n        instance(x: 123, y: 15) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 93, y: 6) less_than_cb50ae root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -23, y: -16) not_equal_c4a1e9 root.Std_k98ojb.Logic.NotEqual {}\n        list_5f9a4e -> for_d26972.items\n        func() {\n            in(x: -193, y: 34, name: \"current\") property(Number) current_2d4c6b\n\n            out(x: 1011, y: -10, name: \"\") property(Bool) bool_5f8e7a\n\n            instance(x: 92, y: -16) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            current_2d4c6b -> modulo_1088d5.value\n            1 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> not_equal_c4a1e9.left\n            0 -> not_equal_c4a1e9.right\n            not_equal_c4a1e9.result -> bool_5f8e7a\n        } -> for_d26972.handler\n        length_6e87f2.length -> count_b3d7c1.reset\n        list_5f9a4e -> count_b3d7c1.list\n        0 -> count_b3d7c1.index\n        count_b3d7c1.result -> for_d26972.next\n    }\n\n    \n\n    instance(x: -92, y: 45) has_consecutive_2b5fdd root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -288, y: 5, name: \"list\") property(List) list_1a6d4f\n\n        out(x: 1010, y: -10, name: \"output\") property(Bool) output_8c9e21\n\n        instance(x: 94, y: -105) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 361, y: 35) count_a5a3f8 root.Std_k98ojb.Std.Count {}\n        instance(x: -19, y: -20) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 92, y: -22) less_than_2d6c43 root.Std_k98ojb.Math.LessThan {}\n        instance(x: -18, y: -23) ifexpression_b1e9f7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it + 1 == n\"\n        }\n        instance(x: 109, y: -24) isnumber_5c4d6a root.Std_k98ojb.Logic.IsNumber {}\n        instance(x: 93, y: -16) list_slice_c7f2f9 root.Std_k98ojb.List.Slice {}\n        instance(x: 201, y: 62) filter_f3b46d root.Std_k98ojb.Query.Filter {\n            where: \"it % 1 == 0\"\n        }\n        function_8c4a5e root.Std_k98ojb.Function {}\n\n        list_1a6d4f -> length_6e87f2.list\n        for_d26972.trigger -> count_a5a3f8.execute\n        count_a5a3f8.result -> output_8c9e21\n        length_6e87f2.length -> greaterthan_cb50ae.right\n        n_a6cea7 -> greaterthan_cb50ae.left\n        list_1a6d4f -> greaterthan_cb50ae.list\n        for_d26972.item -> less_than_2d6c43.gen_0\n        length_6e87f2.length -> less_than_2d6c43.right\n        n_a6cea7 -> less_than_2d6c43.left\n        list_1a6d4f -> less_than_2d6c43.list\n        less_than_2d6c43.result -> ifexpression_b1e9f7.value\n        isnumber_5c4d6a.input -> ifexpression_b1e9f7.item\n        ifexpression_b1e9f7.value -> is_consecutive.value\n        filter_f3b46d.output_list -> function_8c4a5e.items\n        list_slice_c7f2f9.startIndex -> function_8c4a5e.index\n        function_8c4a5e.result -> function_8c4a5e.value\n    }\n\n    \n\n    instance(x: -88, y: 13) is_consecutive_0d3dfb root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: -186, name: \"main_list\") property(List) main_list_6f4d9b\n        in(x: -292, y: 134, name: \"sublist\") property(List) sublist_e8a0c5\n\n        out(x: 1023, y: -69, name: \"output\") property(Bool) output_7a1e23\n\n        instance(x: -81, y: -186) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -112, y: -215) eq_3d8c0b root.Std_k98ojb.Logic.Equal {}\n        sublist_e8a0c5 -> eq_3d8c0b.left\n        main_list_6f4d9b -> eq_3d8c0b.right\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_1a2e43 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: -186, name: \"main_list\") property(List) main_list_1f8a6e\n        in(x: -306, y: -217, name: \"sublist\") property(List) sublist_a5f4b9\n\n        out(x: 105, y: -210, name: \"output\") property(Bool) output_c3d2cd\n\n        instance(x: -104, y: -213) length_7c869a root.Std_k98ojb.List.Length {}\n        main_list_1f8a6e -> length_7c869a.list\n        sublist_a5f4b9 -> length_7c869a.length\n        ifexpression_0d3b95 root.Std_k98ojb.Std.If {\n            expression: \"length_7c869a.length > 0 && main_list_1f8a6e.length >= sublist_a5f4b9.length\"\n        }\n    }\n\n    \n\n    instance(x: -104, y: -213) length_7c869a root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: 155, name: \"main\") property(List) main_0f9a3e\n        in(x: -294, y: 157, name: \"sub\") property(List) sub_8c4d5b\n\n        out(x: 544, y: 63, name: \"output\") property(Bool) output_6f2f7b\n\n        instance(x: 109, y: 162) length_0d9e3a root.Std_k98ojb.List.Length {}\n        list_0f9a3e -> length_0d9e3a.list\n        sub_8c4d5b -> length_0d9e3a.length\n        length_0d9e3a.length == sub_8c4d5b -> output_6f2f7b\n    }\n\n    \n\n    instance(x: 104, y: -23) is_sublist_b9ff6b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -292, y: 166, name: \"main_list\") property(List) main_list_0d6e8b\n        in(x: -295, y: -19, name: \"sublist\") property(List) sublist_e2a3c4\n\n        out(x: 1217, y: -104, name: \"output\") property(Bool) output_f5f1eb\n\n        instance(x: -83, y: -105) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) contains_32727d root.Std_k98ojb.List.Contains {}\n        is_sublist.output_list -> contains_32727d.list\n        sublist_e2a3c4 -> length_6e87f2.list\n        length_6e87f2.length -> contains_32727d.index\n    }\n\n    \n\n    instance(x: 48, y: 11) is_sublist_d2b1a5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -246, y: -164, name: \"main_list\") property(List) main_list_b3f6d4\n        in(x: -245, y: 13, name: \"sub_list\") property(List) sub_list_8c1a9e\n\n        out(x: 1212, y: -169, name: \"result\") property(Bool) result_d5b7a0\n\n        instance(x: 93, y: -194) filter_f6f4d3 root.Std_k98ojb.Query.Filter {}\n        instance(x: -44, y: -176) equal_1c9e2e root.Std_k98ojb.Logic.Equal {}\n        sub_list_8c1a9e -> filter_f6f4d3.items\n        main_list_b3f6d4 -> filter_f6f4d3.list\n        filter_f6f4d3.result -> equal_1c9e2e.left\n        sub_list_8c1a9e -> equal_1c9e2e.right\n        equal_1c9e2e.result -> result_d5b7a0\n    }\n\n    \n\n    instance(x: -245, y: 13, name: \"sub_list\") is_sublist_6f4d3 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -245, y: 157, name: \"main_list\") property(List) list_3f4a6d\n        in(x: -275, y: -20, name: \"sub_list\") property(List) sub_list_5bfc9d\n\n        out(x: 544, y: 55, name: \"output\") property(Bool) output_a1c8e2\n\n        instance(x: 234, y: 160) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: -43, y: 58, name: \"index\") property(Number) index_d7d3a0\n        instance(x: -44, y: 59) lessThanOrEqual_cb50ae root.Std_k98ojb.Math.LessThanOrEqual {}\n        list_3f4a6d -> length_6e87f2.list\n        sub_list_5bfc9d -> lessThanOrEqual_cb50ae.left\n        sub_list_5bfc9d.length -> lessThanOrEqual_cb50ae.right\n        index_d7d3a0.value -> lessThanOrEqual_cb50ae.left\n        0 -> lessThanOrEqual_cb50ae.right\n        lessThanOrEqual_cb50ae.result -> output_a1c8e2\n    }\n\n    \n\n    instance(x: -44, y: 59) is_sublist_9f5d6b root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -294, y: 155, name: \"main\") property(List) main_9a3f5e\n        in(x: -173, y: -26, name: \"sublist\") property(List) sublist_b7d0c1\n\n        out(x: 546, y: -209, name: \"output\") property(Bool) output_e6b3eb\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        main_9a3f5e -> zip_201051.left\n        sublist_b7d0c1 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"current\") property(Number) current_a4dd35\n\n            out(x: 245, y: -54, name: \"\") property(Bool) _7f9b2d\n\n            instance(x: 226, y: 56) equal_7e3a5c root.Std_k98ojb.Logic.Equal {}\n            sublist_b7d0c1 -> equal_7e3a5c.left\n            main_9a3f5e -> equal_7e3a5c.right\n            equal_7e3a5c.result -> _7f9b2d\n        } -> zip_201051.handler\n        is_sublist.output -> output_e6b3eb\n    }\n\n    \n\n    instance(x: 48, y: -67) is_sublist_f4a5e1 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -193, y: 156, name: \"main_list\") property(List) main_list_9a5d1b\n        in(x: -195, y: -13, name: \"sublist\") property(List) sublist_c3c6e4\n\n        out(x: 1037, y: -110, name: \"output\") property(Bool) output_d2f2e8\n\n        instance(x: 1049, y: -102) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        sublist_c3c6e4 -> zip_201051.left\n        main_list_9a5d1b -> zip_201051.right\n        func() {\n            in(x: -191, y: 73, name: \"index\") property(Number) index_8f7f2c\n\n            out(x: 1013, y: 74, name: \"\") property(Bool) _0a5b9d\n\n            instance(x: 92, y: 69) eq_6e4f77 root.Std_k98ojb.Logic.Equal {}\n            sublist_c3c6e4 -> eq_6e4f77.left\n            main_list_9a5d1b -> eq_6e4f77.right\n            eq_6e4f77.result -> _0a5b9d\n        } -> zip_201051.handler\n    }\n\n    \n\n    instance(x: 1043, y: -110) is_sublist_d2c7ec root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"check whether a list is a sublist of another list.\") is_sublist {\n        in(x: -269, y: -194, name: \"main_list\") property(List) main_list_a8f2e9\n        in(x: -278, y: -13, name: \"sub_list\") property(List) sub_list_0b1a5c\n\n        out(x: 444, y: -105, name: \"output\") property(Bool) output_b3a7cd\n\n        instance(x: -82, y: -106) length_9e4f43 root.Std_k98ojb.List.Length {}\n        list_0b1a5c -> length_9e4f43.list\n        length_9e4f43.length -> sub_list_0b1a5c\n        func() {\n            in(x: -192, y: 18, name: \"index\") property(Number) index_6e8e7d\n\n            out(x: 439, y: 47, name: \"\") property(Bool) bool_4f1d2b\n\n            instance(x: -109, y: 23) contains_5f9a3f root.Std_k98ojb.List.Contains {}\n            main_list_a8f2e9 -> contains_5f9a3f.list\n            sub_list_0b1a5c -> contains_5f9a3f.item\n            index_6e8e7d -> contains_5f9a3f.index\n        } -> length_9e4f43.handler\n        func() {\n            in(x: -192, y: 18, name: \"index\") property(Number) index_6e8e7d\n\n            out(x: 439, y: 47, name: \"\") property(Bool) bool_4f1d2b\n\n            instance(x: 93, y: 22) not_equal_3c9a42 root.Std_k98ojb.Logic.NotEqual {}\n            main_list_a8f2e9 -> not_equal_3c9a42.left\n            sub_list_0b1a5c -> not_equal_3c9a42.right\n            not_equal_3c9a42.result -> bool_4f1d2b\n        } -> contains_5f9a3f.handler\n        length_9e4f43.output_list -> output_b3a7cd\n    }\n\n    \n\n    instance(x: -83, y: 34) is_sublist_8c6e0d root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 157, name: \"main_list\") property(List) main_list_1d0e3b\n        in(x: -494, y: 23, name: \"sublist\") property(List) sublist_e4f7c8\n\n        out(x: 1059, y: -98, name: \"output\") property(Bool) output_b5a4f2\n\n        instance(x: 434, y: -103) list_slice_6b0e42 root.Std_k98ojb.List.Slice {}\n        sublist_e4f7c8 -> list_slice_6b0e42.list\n        main_list_1d0e3b -> list_slice_6b0e42.start\n        0 -> list_slice_6b0e42.end\n        instance(x: -294, y: -96) length_b9f2eb root.Std_k98ojb.List.Length {}\n        sublist_e4f7c8 -> length_b9f2eb.list\n        main_list_1d0e3b -> length_b9f2eb.length\n        list_slice_6b0e42.slice -> output_b5a4f2\n    }\n\n    \n\n    instance(x: 101, y: -67) is_sublist_f9c9d9 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -475, y: 2, name: \"list\") property(List) list_3a5f9d\n\n        out(x: 1097, y: -1, name: \"output\") property(Number) output_e4e0b8\n\n        instance(x: 0, y: 0) for_6c2a47 root.Std_k98ojb.Std.For {}\n        getter(x: 344, y: 170, name: \"getter_3f7d9e\") getter_3f7d9e = index\n        setter(x: 1, y: -243, name: \"setter_6c2a47\") setter_6c2a47 = index\n        instance(x: 44, y: 0) ifexpression_b8dd45 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current <= previous + 1\"\n        }\n        getter(x: -246, y: 166, name: \"getter_7a3f5e\") getter_7a3f5e = previous\n        setter(x: -245, y: -234, name: \"setter_6c2a47\") setter_6c2a47 = previous\n        instance(x: 49, y: -35) getat_e9bfc0 root.Std_k98ojb.List.GetAt {}\n        ifexpression_b8dd45.then -> setter_6c2a47.execute\n        list_3a5f9d -> for_6c2a47.items\n        for_6c2a47.item -> ifexpression_b8dd45.gen_1\n        for_6c2a47.index -> ifexpression_b8dd45.gen_0\n        getter_7a3f5e.value -> ifexpression_b8dd45.gen_2\n        for_6c2a47.onItem -> ifexpression_b8dd45.execute\n        for_6c2a47.done -> continue_a9d4b1\n        for_6c2a47.item -> setter_6c2a47.new_value\n        list_3a5f9d -> getat_e9bfc0.list\n        0 -> getat_e9bfc0.index\n        getat_e9bfc0.itemAtIndex -> setter_6c2a47.new_value\n        for_6c2a47.next -> continue_a9d4b1\n    }\n\n    \n\n    instance(x: -82, y: 159) find_smallest_missing_c7f5e2 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") smallest_missing {\n        in(x: -444, y: 2, name: \"list\") property(List) list_4a9d3f\n\n        out(x: 0, y: -1, name: \"output\") property(Number) output_d1e8c9\n\n        instance(x: 34, y: -123) for_e6f7ec root.Std_k98ojb.Std.For {}\n        instance(x: 51, y: 4) ifexpression_6a2d3e root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -21, y: -117) getter_e8c5f9 = previous\n        setter(x: 64, y: -294, name: \"setter_2d6a3e\") setter_2d6a3e = previous\n        instance(x: 58, y: -101) count_bfdd4b root.Std_k98ojb.Std.Count {}\n        for_e6f7ec.index -> count_bfdd4b.reset\n        list_4a9d3f -> for_e6f7ec.items\n        for_e6f7ec.item -> ifexpression_6a2d3e.gen_1\n        -1 -> setter_2d6a3e.new_value\n        for_e6f7ec.done -> count_bfdd4b.execute\n        getter_e8c5f9.value -> ifexpression_6a2d3e.gen_0\n        for_e6f7ec.item -> ifexpression_6a2d3e.gen_2\n        1 -> setter_2d6a3e.new_value\n        ifexpression_6a2d3e.then -> setter_2d6a3e.execute\n        list_4a9d3f -> count_bfdd4b.list\n        0 -> count_bfdd4b.reset\n        for_e6f7ec.onItem -> ifexpression_6a2d3e.execute\n    }\n\n    \n\n    instance(x: -34, y: -52) smallest_missing_5c1d8f root.main.smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -456, y: 2, name: \"list\") property(List) list_f9d5e0\n        out(x: 1217, y: 35, name: \"output\") property(Number) output_6c4a8b\n\n        instance(x: 15, y: -120) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 464, y: 0) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 != current\"\n        }\n        getter(x: -187, y: -246, name: \"getter_6a6081\") getter_6a6081 = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e38995.else -> for_d26972.next\n        ifexpression_e38995.value -> output_6c4a8b\n        ifexpression_e38995.then -> setter_9d4f1c.execute\n        list_f9d5e0 -> for_d26972.items\n        for_d26972.item -> ifexpression_e38995.gen_2\n        for_d26972.index -> ifexpression_e38995.gen_0\n        getter_6a6081.value -> ifexpression_e38995.gen_1\n        for_d26972.onItem -> ifexpression_e38995.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_f9d5e0 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 777, y: -53) find_smallest_missing_3a8b6e root.main.find_smallest_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -442, y: 1, name: \"execute\") trigger() execute_2d6f8e\n        in(x: -465, y: -235, name: \"list\") property(List) list_c4a7b5\n\n        out(x: 1213, y: 10, name: \"continue\") trigger() continue_0c9d35\n        out(x: 1196, y: 145, name: \"output\") property(Number) output_8f2e42\n\n        instance(x: 753, y: -113) for_1b5a85 root.Std_k98ojb.Std.For {}\n        instance(x: 342, y: 4) ifexpression_e9d0c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 == current\"\n        }\n        getter(x: 215, y: -117, name: \"getter_1f8e5a\") getter_1f8e5a = previous\n        setter(x: 697, y: -312, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 322, y: -20) getat_0bdf34 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e9d0c7.else -> continue_0c9d35\n        ifexpression_e9d0c7.value -> output_8f2e42\n        ifexpression_e9d0c7.then -> setter_9d4f1c.execute\n        list_c4a7b5 -> for_1b5a85.items\n        for_1b5a85.item -> ifexpression_e9d0c7.gen_3\n        for_1b5a85.index -> ifexpression_e9d0c7.gen_2\n        getter_1f8e5a.value -> ifexpression_e9d0c7.gen_4\n        for_1b5a85.onItem -> ifexpression_e9d0c7.execute\n        for_1b5a85.done -> continue_0c9d35\n        for_1b5a85.item -> setter_9d4f1c.new_value\n        list_c4a7b5 -> getat_0bdf34.list\n        1 -> getat_0bdf34.index\n        getat_0bdf34.itemAtIndex -> setter_9d4f1c.new_value\n        execute_2d6f8e -> setter_9d4f1c.execute\n        setter_9d4f1c.continue -> for_1b5a85.reset\n        setter_9d4f1c.continue -> for_1b5a85.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_smallest_missing_3e7cd2 root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -0, y: 5, name: \"list\") property(List) list_9a2f1d\n        out(x: 1213, y: 10, name: \"output\") property(Number) output_f7b3e3\n\n        instance(x: 0, y: 0) for_8a5a66 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -15, name: \"previous\") property(Number) previous_ai\n        instance(x: 0, y: -120) getat_a7c6d4 root.Std_k98ojb.List.GetAt {}\n        instance(x: -343, y: 5) ifexpression_8f3e77 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        instance(x: 46, y: -383, name: \"sum\") expression_634b7e root.Std_k98ojb.Math.Expression {\n            expression: \"n * (n+1)/2\"\n        }\n        instance(x: 62, y: -226, name: \"average\") div_2d44da root.Std_k98ojb.Math.Div {}\n        instance(x: 0, y: -121, name: \"sum_first\") property(Number) sum_first_ai\n        list_9a2f1d -> for_8a5a66.items\n        for_8a5a66.item -> ifexpression_8f3e77.gen_2\n        for_8a5a66.index -> ifexpression_8f3e77.gen_0\n        previous_ai -> ifexpression_8f3e77.gen_1\n        getat_a7c6d4.list -> sum_first\n        0 -> getat_a7c6d4.index\n        getat_a7c6d4.itemAtIndex -> previous_ai.new_value\n        sum_first -> expression_634b7e.execute\n        n_c88d35 -> div_2d44da.first\n        expression_634b7e.result -> div_2d44da.second\n        div_2d44da.result -> sum_first\n        ifexpression_8f3e77.then -> for_8a5a66.reset\n        previous_ai.new_value + 1 -> output_f7b3e3.execute\n        getat_a7c6d4.itemAtIndex -> previous_ai.new_value\n    }\n\n    \n\n    instance(x: -0, y: 0) find_missing_8f9e2a root.main.find_missing {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -444, y: 0, name: \"list\") property(List) list_b8a2b5\n        out(x: 1234, y: -1, name: \"output\") property(Number) output_3c9e5d\n\n        instance(x: 55, y: -342) for_4f6c7 root.Std_k98ojb.Std.For {}\n        instance(x: 315, y: 23) ifexpression_e2a8df root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 == current\"\n        }\n        getter(x: 0, y: -123, name: \"getter_5d9e4c\") getter_5d9e4c = previous\n        setter(x: 0, y: -114, name: \"setter_b3b6a2\") setter_b3b6a2 = previous\n        instance(x: -141, y: -38) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_e2a8df.else -> for_4f6c7.reset\n        list_b8a2b5 -> for_4f6c7.items\n        for_4f6c7.item -> ifexpression_e2a8df.gen_1\n        for_4f6c7.index -> ifexpression_e2a8df.gen_0\n        getter_5d9e4c.value -> ifexpression_e2a8df.gen_2\n        for_4f6c7.onItem -> ifexpression_e2a8df.execute\n        for_4f6c7.done -> continue_9b8d35\n        for_4f6c7.item -> setter_b3b6a2.new_value\n        getat_ce2a48.index -> setter_b3b6a2.new_value\n        ifexpression_e2a8df.then -> setter_b3b6a2.execute\n        continue_9b8d35 -> for_4f6c7.reset\n        output_3c9e5d.continue -> for_4f6c7.next\n    }\n\n    \n\n    instance(x: -23, y: 0) find_missing_e1c9df root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -446, y: 2, name: \"execute\") trigger() execute_5a6f4d\n        in(x: -462, y: 30, name: \"list\") property(List) list_a1e9c8\n\n        out(x: 1217, y: 5, name: \"continue\") trigger() continue_d2cd0f\n        out(x: 1218, y: 147, name: \"output\") property(Number) output_ebfefb\n\n        instance(x: 754, y: -113) ifexpression_8e4c43 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 <= current\"\n        }\n        getter(x: 327, y: 170, name: \"getter_5f3d35\") getter_5f3d35 = previous\n        setter(x: -0, y: -121, name: \"setter_d9a4b7\") setter_d9a4b7 = previous\n        instance(x: 321, y: -20) for_1c8e2b root.Std_k98ojb.Std.For {}\n        setter(x: -187, y: -246, name: \"setter_d9a4b7\") setter_a1d0d5 = previous\n        instance(x: -275, y: -35) getat_c3df6f root.Std_k98ojb.List.GetAt {}\n        ifexpression_8e4c43.else -> continue_d2cd0f\n        ifexpression_8e4c43.value -> output_ebfefb\n        ifexpression_8e4c43.then -> setter_a1d0d5.execute\n        list_a1e9c8 -> for_1c8e2b.items\n        for_1c8e2b.item -> ifexpression_8e4c43.gen_2\n        for_1c8e2b.index -> ifexpression_8e4c43.gen_0\n        getter_5f3d35.value -> ifexpression_8e4c43.gen_1\n        for_1c8e2b.onItem -> ifexpression_8e4c43.execute\n        for_1c8e2b.done -> continue_d2cd0f\n        setter_a1d0d5.continue -> for_1c8e2b.reset\n        setter_d9a4b7.continue -> for_1c8e2b.next\n    }\n\n    \n\n    instance(x: 10, y: -177) find_missing_e6f5d2 root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -442, y: 2, name: \"list\") property(List) list_9d3a1e\n        in(x: -455, y: 34, name: \"execute\") trigger() execute_e0b8f6\n\n        out(x: 1187, y: 4, name: \"continue\") trigger() continue_a5cdd6\n        out(x: 1173, y: 147, name: \"output\") property(Number) output_d9d4a1\n\n        instance(x: 0, y: -121) for_2f8d7b root.Std_k98ojb.Std.For {}\n        instance(x: 342, y: 5) ifexpression_f3e6c1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"previous + 1 == current\"\n        }\n        getter(x: -105, y: 170, name: \"getter_2d3f8a\") getter_2d3f8a = previous\n        setter(x: 0, y: 0, name: \"setter_4c6e5b\") setter_4c6e5b = previous\n        instance(x: 336, y: -123) getat_a7f1f9 root.Std_k98ojb.List.GetAt {}\n        ifexpression_f3e6c1.else -> continue_a5cdd6\n        ifexpression_f3e6c1.value -> output_d9d4a1\n        ifexpression_f3e6c1.then -> setter_4c6e5b.execute\n        list_9d3a1e -> for_2f8d7b.items\n        for_2f8d7b.item -> ifexpression_f3e6c1.gen_0\n        for_2f8d7b.index -> ifexpression_f3e6c1.gen_1\n        getter_2d3f8a.value -> ifexpression_f3e6c1.gen_1\n        for_2f8d7b.onItem -> ifexpression_f3e6c1.execute\n        for_2f8d7b.done -> continue_a5cdd6\n        for_2f8d7b.item -> setter_4c6e5b.new_value\n        list_9d3a1e -> getat_a7f1f9.list\n        0 -> getat_a7f1f9.index\n        getat_a7f1f9.itemAtIndex -> setter_4c6e5b.new_value\n        execute_e0b8f6 -> setter_4c6e5b.execute\n        setter_4c6e5b.continue -> for_2f8d7b.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) find_smallest_missing_f1a9d root.main.find_smallest_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -475, y: 2, name: \"list\") property(List) list_9e1f0d\n        out(x: 1217, y: 5, name: \"output\") property(Number) output_a8b4a3\n\n        instance(x: 344, y: -245, name: \"find_first_occurrence\") root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: -118, name: \"previous\") property(Number) previous_ai\n        instance(x: 0, y: -120, name: \"current\") property(Number) current_ai\n        instance(x: 0, y: -122, name: \"index\") property(Number) index_ai\n        instance(x: 0, y: -123, name: \"previous_index\") property(Number) previous_index_ai\n\n        setter(x: -0, y: -117, name: \"setter_5e1c4f\") setter_5e1c4f = previous\n        getter(x: 349, y: -246, name: \"getter_2d5a7b\") getter_2d5a7b = previous\n        instance(x: 0, y: -121) getat_e9f6df root.Std_k98ojb.List.GetAt {}\n        setter(x: 351, y: -245, name: \"setter_8e4c3b\") setter_8e4c3b = previous_index\n        instance(x: 0, y: -122) getat_d7f1d9 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761 -> find_first_occurrence.predicate\n        list_9e1f0d -> find_first_occurrence.items\n        for find_first_occurrence.onItem in list_9e1f0d {\n            getat_e9f6df.index = find_first_occurrence.index\n            getat_d7f1d9.index = find_first_occurrence.index + 1\n            if getat_e9f6df.item == (find_first_occurrence.index + 1) {\n                previous_index_ai = find_first_occurrence.index\n                setter_5e1c4f.value = current_ai\n                find_first_occurrence.done -> continue_f1b7d2\n            }\n            else if getat_d7f1d9.item > (find_first_occurrence.index + 1) {\n                previous_index_ai = find_first_occurrence.index\n                setter_5e1c4f.value = current_ai\n                break\n            }\n            current_ai = getat_e9f6df.item\n        }\n        if expression_634b7e.gen_0 == (previous_index_ai + 1) {\n            output_a8b4a3 -> data_instance.sum\n            data_instance.average = ((previous_index_ai + 2) * (expression_634b7e.result - previous_index_ai)) / 2\n        } else if expression_634b7e.gen_0 == getat_e9f6df.item {\n            output_a8b4a3 -> current_ai\n            data_instance.average = ((previous_index_ai + 1) * (current_ai - previous_index_ai)) / 2\n        }\n        find_first_occurrence.continue -> continue_f1b7d2\n    }\n\n    \n\n    instance(x: -83, y: 158) find_missing_9c5fdd root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the smallest missing number from a sorted list of natural numbers.\") find_missing {\n        in(x: -446, y: 2, name: \"list\") property(List) list_6f8a1b\n        out(x: 0, y: 0, name: \"missing\") property(Number) missing_9d3e5c\n\n        instance(x: 13, y: 0) for_a4a7e2 root.Std_k98ojb.Std.For {}\n        instance(x: 35, y: -105) count_b1f8ad root.Std_k98ojb.Std.Count {}\n        list_6f8a1b -> for_a4a7e2.items\n        for_a4a7e2.item -> count_b1f8ad.new_value\n        instance(x: 0, y: -123) if_9c5a3d root.Std_k98ojb.Std.If {}\n        missing_9d3e5c -> for_a4a7e2.index\n        list_6f8a1b -> if_9c5a3d.list\n        0 -> if_9c5a3d.new_value\n        for_a4a7e2.item -> if_9c5a3d.right\n        count_b1f8ad.count -> missing_9d3e5c\n        if_9c5a3d.predicate -> true\n        for_a4a7e2.item -> if_9c5a3d.left\n        list_6f8a1b -> for_a4a7e2.next\n        count_b1f8ad.reset -> for_a4a7e2.reset\n    }\n\n    \n\n    instance(x: -43, y: 165) find_missing_f0f9f5 root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -200, y: 20, name: \"input\") property(String) input_1a6f3d\n\n        out(x: 1067, y: 2, name: \"output\") property(String) output_a9e5c4\n\n        instance(x: 0, y: 0) replace_8e3b11 root.Std_k98ojb.Strings.Replace {}\n        input_1a6f3d -> replace_8e3b11.input\n        \",\" -> replace_8e3b11.search\n        \".\" -> replace_8e3b11.search\n        \" \" -> replace_8e3b11.search\n        \":\" -> replace_8e3b11.replace\n        replace_8e3b11.result -> output_a9e5c4\n    }\n\n    \n\n    instance(x: -215, y: 63) replace_special_chars_6d6a1e root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -201, y: 2, name: \"input\") property(String) input_6d4f0e\n\n        out(x: 1048, y: 77, name: \"output\") property(String) output_e1f7b9\n        instance(x: 93, y: 70) replace_d1c3eb root.Std_k98ojb.Strings.Replace {}\n        input_6d4f0e -> replace_d1c3eb.input\n        \":\" -> replace_d1c3eb.search\n        \".\" -> replace_d1c3eb.replace\n        \",\" -> replace_d1c3eb.replace\n        replace_d1c3eb.result -> output_e1f7b9\n    }\n\n    \n\n    instance(x: 83, y: -43) replace_with_colon_0a5d4e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -201, y: 15, name: \"input\") property(String) input_4f3e5a\n\n        out(x: 0, y: -1, name: \"output\") property(String) output_e9c8d6\n\n        instance(x: 0, y: 0) replace_7b2dfb root.Std_k98ojb.Strings.Replace {}\n        input_4f3e5a -> replace_7b2dfb.input\n        \":\" -> replace_7b2dfb.search\n        \":\" -> replace_7b2dfb.replace\n        replace_7b2dfb.result -> output_e9c8d6\n    }\n\n    \n\n    instance(x: -199, y: 1) replace_with_colon_a9a3f5 root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -230, y: 2, name: \"input\") property(String) input_9d4e3f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7b6a8c\n\n        instance(x: 772, y: 76) replace_d1b0eb root.Std_k98ojb.Strings.Replace {}\n        input_9d4e3f -> replace_d1b0eb.input\n        \",.\" -> replace_d1b0eb.search\n        \":\" -> replace_d1b0eb.replace\n        replace_d1b0eb.result -> output_7b6a8c\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_with_colon_f9d4e root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation{\n        in(x: 0, y: 0, name: \"text\") property(String) text_ai\n        out(x: -189, y: -64, name: \"output\") property(String) output_1d5f9a\n\n        instance(x: 74, y: -47) replace_2b8e4a root.Std_k98ojb.Strings.Replace {}\n        text_ai -> replace_2b8e4a.input\n        \":\" -> replace_2b8e4a.search\n        \"\" -> replace_2b8e4a.replace\n        replace_2b8e4a.result -> output_1d5f9a\n    }\n\n    \n\n    instance(x: -242, y: 26) replace_punctuation_e7c6b3 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -191, y: 18, name: \"input\") property(String) input_1e2d9a\n\n        out(x: 0, y: 0, name: \"output\") property(String) output_3b5e6f\n\n        instance(x: 94, y: -19) replace_8e4c7 root.Std_k98ojb.Strings.Replace {}\n        input_1e2d9a -> replace_8e4c7.input\n        \":\" -> replace_8e4c7.search\n        \":\" -> replace_8e4c7.replace\n        replace_8e4c7.result -> output_3b5e6f\n    }\n\n    \n\n    instance(x: -186, y: 45) replace_special_chars_9d2f1a root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_punctuation {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: -108, y: 0, name: \"output\") property(String) output_ai\n\n        instance(x: 14, y: 0) replace_9f8a6b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9f8a6b.input\n        \" \" -> replace_9f8a6b.search\n        \":\" -> replace_9f8a6b.replace\n        replace_9f8a6b.result -> output_ai\n   }\n   \n\n    instance(x: -192, y: 0) replace_punctuation_a2c5e3 root.main.replace_punctuation {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_with_colon {\n        in(x: -199, y: 0, name: \"input\") property(String) input_1e8d9b\n\n        out(x: 1047, y: 18, name: \"output\") property(String) output_f4f6c2\n\n        instance(x: 0, y: 0) replace_node root.Std_k98ojb.Strings.Replace {}\n        instance(x: -10, y: 15) tolower_3e9d1a root.Std_k98ojb.Strings.ToLower {}\n        input_1e8d9b -> tolower_3e9d1a.input\n        \" \" -> replace_node.search\n        \",\" -> replace_node.search\n        \".\" -> replace_node.search\n        \":\" -> replace_node.replace\n        tolower_3e9d1a.output -> replace_node.input\n        replace_node.result -> output_f4f6c2\n    }\n\n    \n\n    instance(x: 0, y: -64) replace_with_colon_5a8f7b root.main.replace_with_colon {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -194, y: 0, name: \"input\") property(String) input_ai\n        out(x: 656, y: -69, name: \"output\") property(String) output_7f8a3c\n\n        instance(x: 73, y: -67) replace_d1d9b6 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_d1d9b6.input\n        \".\" -> replace_d1d9b6.search\n        \":\" -> replace_d1d9b6.replace\n        replace_d1d9b6.result -> output_7f8a3c\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_special_chars_4eb7e5 root.main.replace_special_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -215, y: 2, name: \"input\") property(String) input_0\n        out(x: 509, y: -64, name: \"output\") property(String) output_0\n\n        instance(x: 73, y: 76) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 262, y: 0) replace_d3f8a9 root.Std_k98ojb.Strings.Replace {}\n        tolower_2e1444.output -> replace_d3f8a9.input\n        \" \" -> replace_d3f8a9.search\n        \":\" -> replace_d3f8a9.replace\n        input_0 -> tolower_2e1444.input\n        replace_d3f8a9.result -> output_0\n    }\n\n    \n\n    instance(x: 101, y: -66) replace_chars_a1c7b5 root.main.replace_chars {}\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -292, y: 0, name: \"input\") property(List) list_a9f5ca\n\n        out(x: 546, y: 2, name: \"output\") property(Bool) output_6e7c43\n\n        instance(x: 0, y: 1) strings_equals_8d4a65 root.Std_k98ojb.Strings.Equals {}\n        list_a9f5ca -> strings_equals_8d4a65.input\n        strings_equals_8d4a65.output -> output_6e7c43\n    }\n\n    \n\n    instance(x: 83, y: -37) is_all_same_e2f0ec root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -305, y: 0, name: \"string\") property(String) input_5d6e1a\n\n        out(x: 1092, y: -1, name: \"output\") property(Bool) output_f3b9e8\n\n        instance(x: 0, y: 0) length_4fdd55 root.Std_k98ojb.List.Length {}\n        instance(x: 255, y: -10, name: \"count\") property(Number) count_2c1d7a\n        instance(x: 341, y: -14) equal_9d5e8a root.Std_k98ojb.Logic.Equal {}\n        input_5d6e1a -> length_4fdd55.list\n        length_4fdd55.length -> count_2c1d7a\n        equal_9d5e8a.left -> input_5d6e1a\n        1 -> equal_9d5e8a.right\n        count_2c1d7a -> equal_9d5e8a.input\n        length_4fdd55.list[0] -> output_f3b9e8\n        all_same.result -> output_f3b9e8\n    }\n\n    \n\n    instance(x: 74, y: -44) all_same_b2c6a7 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: -292, y: 0, name: \"input\") property(List) list_6d4f43\n\n        out(x: 1239, y: -1, name: \"output\") property(Bool) output_2e8c5a\n\n        instance(x: 0, y: 1) tolower_f7c5b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 234, y: 0) contains_6fdd3d root.Std_k98ojb.List.Contains {}\n        list_6d4f43 -> contains_6fdd3d.list\n        contains_6fdd3d.item -> tolower_f7c5b.input\n        \"a\" -> tolower_f7c5b.value\n        tolower_f7c5b.output -> output_2e8c5a\n    }\n\n    \n\n    instance(x: -69, y: 0) all_same_chars_e9d4f1 root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"check whether all the characters are same or not.\") same_char {\n        in(x: -294, y: 0, name: \"string\") property(String) input_2\n\n        out(x: 509, y: 1, name: \"output\") property(Bool) output_7\n\n        instance(x: 15, y: 4) tolower_8c9e3a root.Std_k98ojb.Strings.ToLower {}\n        input_2 -> tolower_8c9e3a.input\n        tolower_8c9e3a.output -> same_char.input\n        instance(x: 0, y: 5) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        \"a\" -> contains_d42dce.contains\n        input_2 -> contains_d42dce.input\n        contains_d42dce.result -> same_char.output\n    }\n\n    \n\n    instance(x: -67, y: 0) sameChar_e5f1e9 root.main.same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"checks whether all the characters are same or not.\") isSameChar {\n        in(x: -313, y: 2, name: \"string\") property(String) input_0\n\n        out(x: 1028, y: -1, name: \"output\") property(Bool) output_a4a9f8\n\n        instance(x: 0, y: 5) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 261, y: 3) isequal_4c7d1f root.Std_k98ojb.Logic.Equal {}\n        input_0 -> length_6e87f2.list\n        length_6e87f2.length -> isequal_4c7d1f.left\n        input_0 -> isequal_4c7d1f.right\n        isequal_4c7d1f.result -> output_a4a9f8\n    }\n\n    \n\n    instance(x: 69, y: -26) isSameChar_1b2e3 root.main.isSameChar {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: -305, y: 5, name: \"input\") property(String) input_a2d6f8\n\n        out(x: 1044, y: 3, name: \"output\") property(Bool) output_7b1d45\n\n        instance(x: -92, y: 9) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 255, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_a2d6f8 -> tolower_2e1444.input\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        1 -> contains_d42dce.count\n        contains_d42dce.result -> output_7b1d45\n    }\n\n    \n\n    instance(x: -44, y: -26) is_all_same_9f3e6c root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_characters_same {\n        in(x: -313, y: 0, name: \"string\") property(String) input_8d6e5a\n\n        out(x: 546, y: 4, name: \"output\") property(Bool) output_7f1c9b\n\n        instance(x: 74, y: 1) tolower_c2cd0b root.Std_k98ojb.Strings.ToLower {}\n        input_8d6e5a -> tolower_c2cd0b.input\n        tolower_c2cd0b.output -> firstitem_3c9fdd\n        instance(x: 261, y: 4) same_7df2c root.Std_k98ojb.Logic.Equal {}\n        firstitem_3c9fdd.item -> same_7df2c.left\n        input_8d6e5a.length -> same_7df2c.right\n        same_7df2c.result -> output_7f1c9b\n    }\n\n    \n\n    instance(x: 0, y: -37) all_characters_same_e4cd35 root.main.all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: -294, y: 0, name: \"string\") property(String) input_3d1a5e\n\n        out(x: 1218, y: 0, name: \"result\") property(Bool) result_7c4b9f\n\n        instance(x: -83, y: 2) tolower_c5d5d root.Std_k98ojb.Strings.ToLower {}\n        input_3d1a5e -> tolower_c5d5d.input\n        tolower_c5d5d.output -> input_3d1a5e\n        instance(x: 0, y: -2) contains_a9f8c4 root.Std_k98ojb.Strings.Contains {}\n        \"a\" -> contains_a9f8c4.contains\n        input_3d1a5e -> contains_a9f8c4.input\n        contains_a9f8c4.result -> result_7c4b9f\n    }\n\n    \n\n    instance(x: -55, y: 0) all_same_2cd6b9 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n     func(doc: \"checks whether all the characters are same or not.\") same_characters{\n        in(x: -294, y: 2, name: \"input\") property(String) input_0\n        out(x: 1065, y: -1, name: \"output\") property(Bool) output_0\n\n        instance(x: 0, y: 4) tolower_e7fdd8 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 275, y: 2) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        input_0 -> tolower_e7fdd8.input\n        \"a\" -> contains_d42dce.contains\n        contains_d42dce.result -> output_0\n    }\n\n    \n\n    instance(x: -55, y: 26) same_characters_c4c6e1 root.main.same_characters {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether all the characters are same or not.\") same_chars {\n        in(x: -294, y: 2, name: \"input\") property(String) input_4f0a8d\n\n        out(x: 1211, y: -3, name: \"output\") property(Bool) output_9b5e34\n\n        instance(x: 0, y: 0) tolower_7e2c6f root.Std_k98ojb.Strings.ToLower {}\n        input_4f0a8d -> tolower_7e2c6f.input\n        tolower_7e2c6f.output -> same_chars.input\n        instance(x: -83, y: 23) contains_5d4d1d root.Std_k98ojb.Strings.Contains {}\n        input_4f0a8d -> contains_5d4d1d.contains\n        tolower_7e2c6f.output -> contains_5d4d1d.input\n        same_chars.value -> output_9b5e34\n        0 -> output_9b5e34\n        1 -> output_9b5e34\n        contains_5d4d1d.result -> output_9b5e34\n    }\n\n    \n\n    instance(x: -59, y: 11) same_chars_d7a8c6 root.main.same_chars {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") digit_count {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) isnumeric_a3a5c6 root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_a3a5c6.input\n        input_ai -> tolower_2e1444.input\n        isnumeric_a3a5c6.result -> count_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Count the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        tolower_2e1444.output -> isnumeric_d42dce.input\n        input_ai -> tolower_2e1444.input\n        isnumeric_d42dce.result -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_96023e root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444 -> contains_d42dce.input\n        \"0-9\" -> contains_d42dce.contains\n        input_ai -> length_6e87f2.list\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(Number) result_0\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_0 -> length_6e87f2.list\n        isnumeric_d42dce.input -> length_6e87f2.value\n        length_6e87f2.length -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits{\n        in(x: -230, y: 0, name: \"str\") property(String) str_ai\n        out(x: 1146, y: -647, name: \"count\") property(Number) count_ai\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_5c758a root.Std_k98ojb.Strings.IsNumeric {}\n        str_ai -> length_6e87f2.list\n        isnumeric_5c758a.input -> length_6e87f2.gen_0\n        count_ai -> length_6e87f2.length\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"input\") property(String) input_ai\n        out(x: 530, y: 77, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        input_ai -> length_6e87f2.list\n        length_6e87f2.length -> result_ai\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"count number of digits in a given string.\") count_digits {\n        in(x: -426, y: 0, name: \"input\") property(String) input_ai\n\n        out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 0) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.list\n        isnumeric_d42dce.input -> length_6e87f2.items\n        length_6e87f2.length -> result_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_96023e root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: -426, y: 0, name: \"string\") property(String) input_ai\n        out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_b8d3a9 root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.list\n        isnumeric_b8d3a9.input -> length_6e87f2.gen_0\n        length_6e87f2.length -> result_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_a7b5c4 root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -230, y: 0, name: \"string\") property(String) input_ai\n        out(x: 530, y: -2, name: \"result\") property(Number) result_ai\n\n        instance(x: 0, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_d42dce root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> length_6e87f2.list\n        isnumeric_d42dce.input -> length_6e87f2.gen_0\n        length_6e87f2.length -> result_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) count_digits_96023e root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"count the number of digits in a given string.\") digit_count{\n        in(x: -230, y: 0, name: \"s\") property(String) s_4a2f9d\n\n        out(x: 39, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: 15, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: 0) isnumeric_7d4c63 root.Std_k98ojb.Strings.IsNumeric {}\n        s_4a2f9d -> length_6e87f2.list\n        isnumeric_7d4c63.input -> length_6e87f2.value\n        length_6e87f2.length -> result_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) digit_count_node root.main.digit_count {}\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_3d1a4f\n\n        out(x: 1130, y: -369, name: \"output\") property(Number) output_d5b6c7\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"i\") property(Number) i_8a3c1d\n            in(x: -23, y: 79, name: \"result\") property(Number) result_b2cd6f\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            notequal_7836b4.result -> result_b2cd6f\n            i_8a3c1d -> modulo_c76d2b.value\n        } -> for_065883.next\n        n_3d1a4f -> for_065883.index\n        for_065883.item -> modulo_c76d2b.first\n        0 -> for_065883.reset\n        sum_4c6c9a = 0\n        instance(x: 74, y: -23) pow_5e3e8 root.Std_k98ojb.Math.Pow {}\n        pow_5e3e8.result -> sum_4c6c9a\n        i_8a3c1d -> pow_5e3e8.gen_0\n        pow_5e3e8.result -> sum_4c6c9a\n    }\n\n    \n\n    instance(x: 0, y: -37) sum_fourth_power_9f7b2 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_0e4a3b\n\n        out(x: 1139, y: 23, name: \"output\") property(Number) output_f5d8f5\n\n        instance(x: 0, y: -416) for_7d1c47 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -28, y: -22, name: \"current\") property(Number) _index_6e9a4\n            in(x: -24, y: 83, name: \"_index\") property(Number) _index_c3d1f5\n\n            out(x: 1098, y: 29, name: \"output\") property(Number) output_ebfdd7\n\n            instance(x: 0, y: 70) pow_2b9e4a root.Std_k98ojb.Math.Pow {}\n            data_instance(x: -417, y: -396) data_3c8d5f  = [1]\n            instance(x: 103, y: -394) add_6a5dd0 root.Std_k98ojb.Math.Add {}\n            instance(x: 100, y: -385) modulo_7a7fca root.Std_k98ojb.Math.Modulo {}\n            pow_2b9e4a.result -> data_3c8d5f.value\n            _index_c3d1f5 -> modulo_7a7fca.divisor\n            0 -> modulo_7a7fca.second\n            data_3c8d5f -> add_6a5dd0.first\n            _index_c3d1f5 -> add_6a5dd0.second\n            add_6a5dd0.result -> pow_2b9e4a.value\n            2 -> modulo_7a7fca.divisor\n            0 -> modulo_7a7fca.second\n            modulo_7a7fca.result -> output_ebfdd7\n        } -> for_7d1c47.handler\n        for_7d1c47.items -> pow_2b9e4a.list\n        n_0e4a3b -> for_7d1c47.index\n        1 -> pow_2b9e4a.gen_0\n    }\n\n    \n\n    instance(x: -288, y: 23) sum_fourth_power_f8f6f9 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 2, name: \"n\") property(Number) n_d1d5b0\n\n        out(x: 1296, y: 7, name: \"output\") property(Number) output_6c4a3f\n\n        instance(x: -342, y: -215, name: \"odd_numbers\") for_2c8a9b root.Std_k98ojb.Std.For {}\n        data_instance(x: 0, y: -221, name: \"fourth_power\") property(List) fourth_power_7e5d1f\n        instance(x: -326, y: -209, name: \"sum_of_fourth_powers\") sum_9c4a3e root.Std_k98ojb.Math.Sum {}\n        instance(x: 0, y: 2, name: \"fourth_power_list\") list_to_num root.Std_k98ojb.List.ListToNum {}\n        instance(x: -326, y: -208, name: \"fourth_power_func\") expression_6d8a3f root.Std_k98ojb.Math.Expression {\n            expression: \"it ** 4\"\n        }\n        instance(x: 0, y: -216) modulo_f9c5c2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: -218) add_8f6d7a root.Std_k98ojb.Math.Add {}\n        fourth_power_7e5d1f -> sum_of_fourth_powers.items\n        list_to_num.list -> fourth_power_func.items\n        four_4th_power_func -> expression_6d8a3f.gen_0\n        modulo_f9c5c2.divisor -> add_8f6d7a.first\n        1 -> add_8f6d7a.second\n        sum_of_fourth_powers.result -> output_6c4a3f\n    }\n\n    \n\n    instance(x: -294, y: 569) sum_fourth_power_c2b9e root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_of_fourth_power {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_6e4d3b\n\n        out(x: 1045, y: -7, name: \"output\") property(Number) output_a9c1f0\n\n        instance(x: 0, y: 0) for_0a8df1 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"i\") property(Number) i_5d3e2d\n\n            out(x: 1054, y: -7, name: \"sum\") property(Number) sum_d6f1c9\n\n            instance(x: 0, y: -23) ifexpression_3f8a31 root.Std_k98ojb.Std.IfExpression {\n                expression: \"i >= n\"\n            }\n            instance(x: 0, y: -21, name: \"fourth_power\") Math.Pow {}\n            instance(x: 0, y: -19) add_5d9d3f root.Std_k98ojb.Math.Add {}\n            instance(x: 0, y: -17) modulo_e1c7a8 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 0, y: -15) sub_4e2a66 root.Std_k98ojb.Math.Sub {}\n            data_instance(x: 0, y: -13) data_5d3d6f = [4]\n            fourth_power.result -> add_5d9d3f.first\n            1 -> modulo_e1c7a8.divisor\n            2 -> sub_4e2a66.second\n            i_5d3e2d -> modulo_e1c7a8.value\n        } -> for_0a8df1.handler\n        n_6e4d3b -> for_0a8df1.items\n        sum_d6f1c9 -> sum\n    }\n\n    \n\n    instance(x: 0, y: -12) sum_of_fourth_power_7a5a42 root.main.sum_of_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -567, y: 2, name: \"n\") property(Number) n_6f4e3b\n\n        out(x: 1059, y: 19, name: \"sum\") property(Number) sum_f7a5c0\n\n        data_instance(x: -509, y: -343, name: \"numbers\") List_ai = []\n        instance(x: 83, y: -336) generateRange_6d8f2e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1024, y: -338) add_5cd9f1 root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -250) pow_0aebaa root.Std_k98ojb.Math.Pow {}\n        instance(x: 1058, y: -245) sum_4d3c6e root.Std_k98ojb.Math.Sum {}\n        setter(x: 0, y: 0, name: \"setter_d2b5f7\") setter_d2b5f7 = numbers\n        getter(x: 1031, y: -246, name: \"getter_4d3c6e\") getter_4d3c6e = sum\n        instance(x: 1049, y: 20) for_0a8fdd root.Std_k98ojb.Std.For {}\n        instance(x: 1017, y: -236) add_5cd9f1.first -> pow_0aebaa.first\n        instance(x: 1002, y: -244) pow_0aebaa.second -> generateRange_6d8f2e.from\n        instance(x: 1005, y: -242) pow_0aebaa.gen_0 -> add_5cd9f1.second\n        instance(x: 1037, y: -240) sum_4d3c6e.input -> add_5cd9f1.result\n        numbers -> for_0a8fdd.items\n        getter_4d3c6e.value -> sum_f7a5c0\n    }\n\n    \n\n    instance(x: 1042, y: -227) sum_fourth_power_c6b1b5 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -542, y: 3, name: \"n\") property(Number) n_2b4f9a\n\n        out(x: 1138, y: 5, name: \"output\") property(Number) output_d1c6d0\n\n        data_instance(x: 390, y: 59) data_c7e3eb  = [sum]\n        instance(x: -41, y: 67) for_0a9fdd root.Std_k98ojb.Std.For {}\n        instance(x: 101, y: 70) pow_6d4a1b root.Std_k98ojb.Math.Pow {}\n        instance(x: 104, y: 69) mul_5c8e38 root.Std_k98ojb.Math.Mul {}\n        list_empty_a9f2df -> data_c7e3eb.items\n        n_2b4f9a -> for_0a9fdd.n\n        sum_1d6f5f -> pow_6d4a1b.result\n        pow_6d4a1b.value -> mul_5c8e38.first\n        data_c7e3eb -> mul_5c8e38.output\n    }\n\n    \n\n    instance(x: -58, y: 2) sum_fourth_power_a9f5db root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_bf6a9d\n\n        out(x: 1134, y: 7, name: \"sum\") property(Number) sum_3c5e8b\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        instance(x: -346, y: -215, name: \"power\") Math_Pow {}\n        instance(x: 95, y: -203, name: \"odd_numbers\") filter_d6c5f4 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -43, y: -208) sum_1d9e38 root.Std_k98ojb.Math.Sum {}\n        list_0a8c2b -> for_065883.items\n        func() {\n            in(x: -23, y: 34, name: \"current\") property(Number) current_7f4d3a\n\n            out(x: 1134, y: 8, name: \"continue\") trigger() continue_1e2c0b\n            out(x: 0, y: 11, name: \"output\") property(Number) output_3e9c5c\n\n            instance(x: 97, y: -21) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 287, y: 33) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_7f4d3a -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> output_3e9c5c\n        } -> for_065883.next\n        instance(x: -303, y: 58) pow_e1f2d4 root.Std_k98ojb.Math.Pow {}\n        filter_d6c5f4.result -> odd_numbers.list\n        odd_numbers.item -> pow_e1f2d4.input\n        pow_e1f2d4.result -> sum_1d9e38.first\n        3 -> sum_1d9e38.n\n        sum_1d9e38.output -> sum_3c5e8b\n    }\n\n    \n\n    instance(x: -67, y: 529) sum_fourth_power_c2fdd7 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -555, y: 3, name: \"n\") property(Number) n_6d8a1e\n\n        out(x: 1056, y: -269, name: \"output\") property(Number) output_4c2a7f\n\n        instance(x: 0, y: 0) for_065883 root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -30, y: -25, name: \"i\") property(Number) i_5d1e34\n            out(x: 1066, y: -273, name: \"sum\") property(Number) sum_f2f8c4\n\n            instance(x: 0, y: -20, name: \"fourth_power\") expression_634b7e root.Std_k98ojb.Math.Expression {\n                expression: \"(i + 1)^4\"\n            }\n            instance(x: 109, y: -27, name: \"odd_number\") expression_634b7e.rootStd_k98ojb.Math.Expression {\n                expression: \"2*i + 1\"\n            }\n            instance(x: 0, y: -19) add_88bb8a root.Std_k98ojb.Math.Add {}\n            instance(x: 109, y: -27, name: \"mul_f892a4\") mul_f892a4 root.Std_k98ojb.Math.Mul {}\n            instance(x: 0, y: -20) sub_852f2e root.Std_k98ojb.Math.Sub {}\n            instance(x: 109, y: -27, name: \"sum_f892a4\") sum_f892a4 root.Std_k98ojb.Math.Sum {}\n            instance(x: 0, y: -19) floor_61b38d root.Std_k98ojb.Math.Floor {}\n            2 -> mul_f892a4.second\n            expression_634b7e.result -> add_88bb8a.first\n            1 -> sub_852f2e.second\n            sub_852f2e.result -> sum_f892a4.n\n            floor_61b38d.output -> mul_f892a4.first\n            expression_634b7e.result -> mul_f892a4.second\n        } -> for_065883.handler\n        for_065883.items -> sum_f2f8c4.list\n    }\n\n    \n\n    instance(x: -41, y: 121) sum_fourth_power_b1d5c6 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_odd_power {\n        in(x: -567, y: 2, name: \"n\") property(Number) n_6d1b5e\n\n        out(x: 1140, y: 4, name: \"output\") property(Number) output_9f7a3d\n\n        instance(x: 83, y: -419, name: \"i\") for_loop_5c8f2a root.Std_k98ojb.Std.For {}\n        instance(x: -313, y: -394, name: \"power\") Math_Pow {}\n        instance(x: 1049, y: -385, name: \"sum\") add_ae1d4a root.Std_k98ojb.Math.Add {}\n        instance(x: -316, y: -387, name: \"odd_number\") generate_5c3a7f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 0, y: -384) modulo_f2a8df root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1051, y: -385) ifexpression_4d6e34 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i % 2 != 0\"\n        }\n        instance(x: 83, y: -419) count_a7c8a3 root.Std_k98ojb.Std.Count {}\n        data_instance(x: -527, y: -394, name: \"data_1\") data_9e5d6f  = [sum]\n        setter(x: 0, y: 0, name: \"setter_2\") setter_2 = sum\n        getter(x: 1053, y: -386, name: \"getter_3\") getter_3 = sum\n        data_9e5d6f -> sum\n        for_loop_5c8f2a.trigger -> count_a7c8a3.reset\n        n_6d1b5e -> count_a7c8a3.count\n        count_a7c8a3.done -> ifexpression_4d6e34.execute\n        for_loop_5c8f2a.index -> odd_number.gen_0\n        generate_range_5c3a7f.from -> modulo_f2a8df.divisor\n        generate_range_5c3a7f.to -> pow.value\n        Math_Pow.result -> ifexpression_4d6e34.then\n        odd_number -> Math_Pow.input\n        sum -> add_ae1d4a.first\n        Math_Pow.result -> add_ae1d4a.second\n    }\n\n    \n\n    instance(x: -294, y: 3) sum_odd_power_8c0b7 root.main.sum_odd_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -509, y: 2, name: \"n\") property(Number) n_0f5d3a\n\n        out(x: 1236, y: -317, name: \"output\") property(Number) output_4e1c9b\n\n        instance(x: 82, y: -417) for_0d6d2a root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -192, y: -15, name: \"current\") property(Number) current_e3f8ea\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_2d5e42\n\n            out(x: 706, y: 47, name: \"output\") property(Number) output_4c1a6b\n\n            instance(x: 226, y: 56) power_a0f9f3 root.Std_k98ojb.Math.Pow {}\n            instance(x: 463, y: 51) add_f2d7e5 root.Std_k98ojb.Math.Add {}\n            _index_2d5e42 -> power_a0f9f3.input\n            1 -> power_a0f9f3.base\n            current_e3f8ea -> power_a0f9f3.result\n        } -> for_0d6d2a.handler\n        n_0f5d3a -> for_0d6d2a.items\n        for_0d6d2a.onItem -> output_4c1a6b.execute\n    }\n\n    \n\n    instance(x: -293, y: 529) sum_fourth_power_8e7f9 root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -209, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 324, y: 0, name: \"output\") property(Number) output_7c2a6e\n\n        instance(x: 12, y: -1) square_8f5d4b root.Std_k98ojb.Math.Pow {}\n        instance(x: 18, y: -3) times_9c0c21 root.Std_k98ojb.Math.Times {}\n        side_ai -> times_9c0c21.first\n        6 -> square_8f5d4b.exponent\n        square_8f5d4b.result -> times_9c0c21.second\n        times_9c0c21.result -> output_7c2a6e\n    }\n\n    \n\n    instance(x: -193, y: 3) cube_surface_area_a9f2b8 root.main_cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -215, y: 0, name: \"side\") property(Number) side_ai\n        out(x: 1086, y: 4, name: \"result\") property(Number) result_ai\n\n        instance(x: 19, y: -305) math_pow_node root.Std_k98ojb.Math.Pow {}\n        instance(x: 24, y: 3) math_mul_node root.Std_k98ojb.Math.Mul {}\n        side_ai -> math_mul_node.first\n        2 -> math_mul_node.second\n        math_mul_node.result -> math_pow_node.base\n        math_pow_node.exponent -> math_mul_node.result\n        6 -> math_pow_node.power\n        math_pow_node.result -> result_ai\n    }\n\n    \n\n    instance(x: -201, y: 5) surface_area_9e7f3 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -215, y: 0, name: \"size\") property(Number) size_5d1e2f\n\n        out(x: 216, y: 16, name: \"surface_area\") property(Number) surface_area_e3c7a6\n\n        instance(x: 23, y: 13) math_pow_node root.Std_k98ojb.Math.Pow {}\n        size_5d1e2f -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> expression_4eb3c8.gen_0\n\n        instance(x: -202, y: 7) mul_node root.Std_k98ojb.Math.Mul {}\n        expression_4eb3c8.result -> mul_node.first\n        6 -> mul_node.second\n        mul_node.result -> surface_area_e3c7a6\n\n        instance(x: -205, y: 12) math_add_node root.Std_k98ojb.Math.Add {}\n        math_add_node.first -> expression_4eb3c8.result\n        3 -> math_add_node.second\n        math_add_node.result -> surface_area_e3c7a6\n    }\n\n    \n\n    instance(x: -196, y: 14) cube_surface_area_1d2f0a root.main.circle_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") cube_surface_area{\n        in(x: -215, y: 55, name: \"side_length\") property(Number) side_length_0a4d5e\n        out(x: 2166, y: 10, name: \"surface_area\") property(Number) surface_area_a8f9c3\n\n        instance(x: 15, y: -21) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_length_0a4d5e -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> surface_area_a8f9c3\n        instance(x: 15, y: -21) mul_node root.Std_k98ojb.Math.Mul {}\n        side_length_0a4d5e -> mul_node.first\n        6 -> mul_node.second\n        mul_node.result -> surface_area_a8f9c3\n    }\n\n    \n\n    instance(x: -176, y: -23) cube_surface_area_7cd1d root.main(cube_surface_area {})\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: -26, name: \"side\") property(Number) side_f6f5e4\n\n        out(x: 216, y: -14, name: \"output\") property(Number) output_ba7b8a\n    }\n\n    \n    instance(x: -44, y: -15) math_2s1d0 root.Std_k98ojb.Math.Pow {}\n    side_f6f5e4 -> math_2s1d0.first\n    3 -> math_2s1d0.second\n    math_2s1d0.result -> surface_area.side\n    instance(x: -69, y: -13) multiply_c9a8b7 root.Std_k98ojb.Math.Mul {}\n    side_f6f5e4 -> multiply_c9a8b7.first\n    6 -> multiply_c9a8b7.second\n    multiply_c9a8b7.result -> surface_area.output\n    instance(x: -71, y: -10) add_b0d2c1 root.Std_k98ojb.Math.Add {}\n    output_ba7b8a -> add_b0d2c1.first\n    4 -> add_b0d2c1.second\n    add_b0d2c1.result -> surface_area.output\n    instance(x: -64, y: -6) div_547f34 root.Std_k98ojb.Math.Div {}\n    output_ba7b8a -> div_547f34.first\n    4 -> div_547f34.second\n    div_547f34.result -> surface_area.output\n   }\n    \n\n    instance(x: -59, y: -5) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -222, y: 15, name: \"side_length\") property(Number) side_length_a0f9e3\n\n        out(x: 648, y: 12, name: \"result\") property(Number) result_5d7a95\n\n        instance(x: -19, y: -22) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_length_a0f9e3 -> math_pow_node.base\n        2 -> math_pow_node.exponent\n        math_pow_node.result -> result_5d7a95\n    }\n\n    \n\n    instance(x: 222, y: -11, name: \"surface_area\") surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -436, y: 0, name: \"size\") property(Number) size_4d2f6e\n        out(x: 216, y: 8, name: \"result\") property(Number) result_a9c7a3\n\n        instance(x: 23, y: -16) math_mul_node root.Std_k98ojb.Math.Mul {}\n        math_mul_node.result -> result_a9c7a3\n        size_4d2f6e -> math_mul_node.first\n        6 -> math_mul_node.second\n        instance(x: 12, y: -44) pow_node root.Std_k98ojb.Math.Pow {}\n        pow_node.y -> math_mul_node.result\n        size_4d2f6e -> pow_node.x\n        2 -> pow_node.y\n        pow_node.result -> math_mul_node.first\n        instance(x: 13, y: -24) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"pow_node.result > 0\"\n        }\n        getter(x: -34, y: -11, name: \"getter_1c6d8a\") getter_1c6d8a = result_a9c7a3\n        setter(x: 18, y: -49, name: \"setter_2e5f0b\") setter_2e5f0b = result_a9c7a3\n        instance(x: 17, y: 11) ifexpression_e38995.then -> setter_2e5f0b.execute\n        pow_node.result -> getter_1c6d8a.new_value\n        ifexpression_e38995.else -> surface_area.execute_cdac2a\n    }\n\n    \n\n    instance(x: -34, y: 12) surface_area_3c7e4c root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: -215, y: 13, name: \"side\") property(Number) side_6e9d4b\n\n        out(x: 216, y: 7, name: \"area\") property(Number) area_f8f1a3\n\n        instance(x: 0, y: 0) math_pow_node root.Std_k98ojb.Math.Pow {}\n        side_6e9d4b -> math_pow_node.base\n        2 -> math_pow_node.exp\n        math_pow_node.result -> area_f8f1a3\n    }\n\n    \n\n    instance(x: -217, y: -13, name: \"surface_area\") surface_area_0b5c94 root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the surface area of a cube of a given size.\") surface_area {\n        in(x: 0, y: 0, name: \"side\") property(Number) side_3e9d5f\n\n        out(x: 216, y: -64, name: \"area\") property(Number) area_7a2c8f\n\n        instance(x: 12, y: 4) list_generate_range_node root.Std_k98ojb.List.GenerateRange {}\n        side_3e9d5f -> list_generate_range_node.from\n        6 -> list_generate_range_node.to\n        list_generate_range_node.list -> area_7a2c8f\n        instance(x: -28, y: 0) sum_1c4dfb root.Std_k98ojb.Math.Sum {}\n        instance(x: -26, y: -56) mul_6fdd9d root.Std_k98ojb.Math.Mul {}\n        side_3e9d5f -> mul_6fdd9d.first\n        6 -> mul_6fdd9d.second\n        area_7a2c8f.result -> sum_1c4dfb.value\n   }\n\n    \n\n    instance(x: -69, y: 0) surface_area_node root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area{\n        in(x: 0, y: 0, name: \"side_length\") property(Number) side_length_1a4e9f\n        out(x: 108, y: -13, name: \"surface_area\") property(Number) surface_area_3d6b5c\n\n        instance(x: 24, y: -19) math_times_node root.Std_k98ojb.Math.Mul {}\n        side_length_1a4e9f -> math_times_node.first\n        6 -> math_times_node.second\n        math_times_node.result -> surface_area_3d6b5c\n    }\n\n    \n\n    instance(x: -85, y: 22) surface_area_node root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -469, y: 23, name: \"list\") property(List) list_8f6b3a\n\n        out(x: 1007, y: 4, name: \"result\") property(Number) result_e9c2e0\n\n        instance(x: 109, y: 64) max_5d2e43 root.Std_k98ojb.List.Max {}\n        list_8f6b3a -> max_5d2e43.items\n        instance(x: -19, y: 56) min_9c0eb4 root.Std_k98ojb.List.Min {}\n        list_8f6b3a -> min_9c0eb4.items\n        instance(x: -108, y: 55) sub_1d2dd7 root.Std_k98ojb.Math.Sub {}\n        max_5d2e43.result -> sub_1d2dd7.first\n        min_9c0eb4.result -> sub_1d2dd7.second\n        sub_1d2dd7.result -> result_e9c2e0\n    }\n\n    \n\n    instance(x: -69, y: 11) diff_max_min_6f5c8b root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -475, y: 19, name: \"list\") property(List) list_9f5d4b\n\n        out(x: 1018, y: -109, name: \"result\") property(Number) result_0e4c3a\n\n        instance(x: -319, y: 142) for_f7a5f2 root.Std_k98ojb.Std.For {}\n        list_9f5d4b -> for_f7a5f2.items\n        func() {\n            in(x: -231, y: 63, name: \"smallest\") property(Number) smallest_d0c6c8\n\n            out(x: 1018, y: -109, name: \"\") property(Number) max_b3e1d4\n\n            instance(x: -9, y: -24) getat_7b2a47 root.Std_k98ojb.List.GetAt {}\n            for_f7a5f2.item -> getat_7b2a47.new_value\n            getat_7b2a47.index -> for_f7a5f2.index\n            if(getat_7b2a47.item < smallest_d0c6c8) {\n                smallest_d0c6c8 -> getat_7b2a47.item\n            } else {\n                max_b3e1d4 -> getat_7b2a47.item\n            }\n        } -> for_f7a5f2.onItem\n        func() {\n            in(x: -231, y: 63, name: \"largest\") property(Number) largest_d0c6c8\n\n            out(x: 1018, y: -109, name: \"\") property(Number) result_0e4c3a\n\n            instance(x: -9, y: -24) getat_7b2a47 root.Std_k98ojb.List.GetAt {}\n            for_f7a5f2.item -> getat_7b2a47.new_value\n            getat_7b2a47.index -> for_f7a5f2.index\n            if(getat_7b2a47.item > largest_d0c6c8) {\n                largest_d0c6c8 -> getat_7b2a47.item\n            } else {\n                result_0e4c3a -> max_b3e1d4 - smallest_d0c6c8\n            }\n        } -> for_f7a5f2.done\n    }\n\n    \n\n    instance(x: 93, y: 121) diff_max_min_c7b8c9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -471, y: 19, name: \"execute\") trigger() execute_0d1b4f\n        in(x: -482, y: -234, name: \"list\") property(List) list_f5c6a8\n\n        out(x: 1049, y: -235, name: \"output\") property(Number) output_7e3f2d\n\n        instance(x: 93, y: -131) length_a0b4ec root.Std_k98ojb.List.Length {}\n        instance(x: -319, y: 143, name: \"max\") property(Number) max_e5a1c6\n        instance(x: 97, y: -237) min_3d9e7f root.Std_k98ojb.List.Min {}\n        instance(x: -318, y: -236) sub_b4d8db root.Std_k98ojb.Math.Sub {}\n        instance(x: -317, y: 145, name: \"min\") property(Number) min_1a5c21\n\n        list_f5c6a8 -> length_a0b4ec.length\n        length_a0b4ec.length -> sub_b4d8db.first\n        list_f5c6a8 -> max_e5a1c6.list\n        0 -> sub_b4d8db.second\n        sub_b4d8db.result -> min_3d9e7f.item\n        length_a0b4ec.length -> sub_b4d8db.first\n        max_e5a1c6.list -> sub_b4d8db.second\n        0 -> sub_b4d8db.second\n        sub_b4d8db.result -> min_1a5c21.item\n        max_e5a1c6.list -> sub_b4d8db.second\n        length_a0b4ec.length -> sub_b4d8db.first\n        sub_b4d8db.result -> output_7e3f2d\n    }\n\n    \n\n    instance(x: -292, y: 151) diff_max_min_5a1c9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -471, y: -215, name: \"list\") property(List) list_0f2d5a\n\n        out(x: 1096, y: -114, name: \"output\") property(Number) output_a3b4e8\n\n        instance(x: -104, y: -123) max_9c9f1d root.Std_k98ojb.List.Max {}\n        instance(x: -105, y: -117) min_0a5e21 root.Std_k98ojb.List.Min {}\n        list_0f2d5a -> max_9c9f1d.items\n        list_0f2d5a -> min_0a5e21.items\n        max_9c9f1d.result -> output_a3b4e8\n        diff_max_min.output -> output_a3b4e8\n    }\n\n    \n\n    instance(x: -92, y: 44) diff_max_min_f7e2e1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -246, y: 21, name: \"list\") property(List) list_0b9d3f\n\n        out(x: 1018, y: -114, name: \"output\") property(Number) output_e1a4c2\n\n        instance(x: 121, y: 63, name: \"min_node\") Std_k98ojb.Std.Count {}\n        list_0b9d3f -> min_node.items\n        min_node.reset -> diff_largest_smallest.continue\n        min_node.count -> diff_largest_smallest.output\n        instance(x: -119, y: 93, name: \"max_node\") Std_k98ojb.Std.Count {}\n        list_0b9d3f -> max_node.items\n        max_node.reset -> diff_largest_smallest.continue\n        max_node.count -> diff_largest_smallest.output\n    }\n\n    \n\n    instance(x: -69, y: 15) diff_largest_smallest_f4c5e6 root.main.diff_largest_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -469, y: 21, name: \"list\") property(List) list_d6e9b8\n\n        out(x: 1235, y: -2, name: \"result\") property(Number) result_1c4d45\n\n        instance(x: 106, y: -110) max_7f3a42 root.Std_k98ojb.List.Max {}\n        list_d6e9b8 -> max_7f3a42.items\n        func() {\n            in(x: -232, y: -64, name: \"min\") property(Number) min_0d1c2d\n\n            out(x: 1235, y: -2, name: \"result\") property(Number) result_1c4d45\n\n            instance(x: 109, y: -104) min_9e6b3f root.Std_k98ojb.List.Min {}\n            list_d6e9b8 -> min_9e6b3f.items\n            max_7f3a42.result -> result_1c4d45\n        } -> min_0d1c2d.handler\n    }\n\n    \n\n    instance(x: 97, y: -117) diff_max_min_a2e7c8 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -246, y: 23, name: \"list\") property(List) list_1e3f2d\n\n        out(x: 1029, y: -21, name: \"difference\") property(Number) difference_4a8c7b\n\n        instance(x: -108, y: 45) find_max_e6d5e0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -108, y: 43) find_min_d63f9c root.Std_k98ojb.Iteration.Find {}\n        list_1e3f2d -> find_max_e6d5e0.items\n        list_1e3f2d -> find_min_d63f9c.items\n        func() {\n            in(x: -109, y: 43, name: \"max\") property(Number) max_b5b4a8\n\n            out(x: 1029, y: -21, name: \"\") property(Number) _0e7d23\n\n            instance(x: 94, y: 39) ifexpression_6f3c1 root.Std_k98ojb.Std.IfExpression {\n                expression: \"max <= min\"\n            }\n            getter(x: 91, y: 48, name: \"getter_c1a8c4\") getter_c1a8c4 = max\n            setter(x: -0, y: -120, name: \"setter_9d4f1c\") setter_9d4f1c = max\n            instance(x: 92, y: 39) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_37db7f = max\n            instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_6f3c1.else -> for_d26972.reset\n            ifexpression_6f3c1.value -> _0e7d23\n            ifexpression_6f3c1.then -> setter_9d4f1c.execute\n            list_1e3f2d -> for_d26972.items\n            for_d26972.item -> ifexpression_6f3c1.gen_2\n            for_d26972.index -> ifexpression_6f3c1.gen_0\n            getter_c1a8c4.value -> ifexpression_6f3c1.gen_1\n            for_d26972.onItem -> ifexpression_6f3c1.execute\n            for_d26972.done -> for_d26972.reset\n            for_d26972.item -> setter_9d4f1c.new_value\n        } -> find_max_e6d5e0.predicate\n        func() {\n            in(x: -109, y: 43, name: \"min\") property(Number) min_b5b4a8\n\n            out(x: 1029, y: -21, name: \"\") property(Number) _0e7d23\n\n            instance(x: 94, y: 39) ifexpression_6f3c1 root.Std_k98ojb.Std.IfExpression {\n                expression: \"max <= min\"\n            }\n            getter(x: 91, y: 48, name: \"getter_c1a8c4\") getter_c1a8c4 = min\n            setter(x: -0, y: -120, name: \"setter_9d4f1c\") setter_9d4f1c = min\n            instance(x: 92, y: 39) for_d26972 root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_37db7f = min\n            instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n            ifexpression_6f3c1.else -> for_d26972.reset\n            ifexpression_6f3c1.value -> _0e7d23\n            ifexpression_6f3c1.then -> setter_9d4f1c.execute\n            list_1e3f2d -> for_d26972.items\n            for_d26972.item -> ifexpression_6f3c1.gen_2\n            for_d26972.index -> ifexpression_6f3c1.gen_0\n            getter_c1a8c4.value -> ifexpression_6f3c1.gen_1\n            for_d26972.onItem -> ifexpression_6f3c1.execute\n            for_d26972.done -> for_d26972.reset\n            for_d26972.item -> setter_9d4f1c.new_value\n        } -> find_min_d63f9c.predicate\n        find_max_e6d5e0.item -> difference_4a8c7b\n        find_min_d63f9c.item -> difference_4a8c7b\n    }\n\n    \n\n    instance(x: 101, y: -67) diff_max_min_c8cd34 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -471, y: 13, name: \"list\") property(List) list_0e2a6d\n\n        out(x: 1237, y: -1, name: \"output\") property(Number) output_e9b5f8\n\n        instance(x: -104, y: 24, name: \"max_node\") Std_k98ojb.List.Max {}\n        list_0e2a6d -> max_node.items\n        max_node.max -> output_e9b5f8\n\n        instance(x: -103, y: -33, name: \"min_node\") Std_k98ojb.List.Min {}\n        list_0e2a6d -> min_node.items\n        min_node.min -> output_e9b5f8\n    }\n\n    \n\n    instance(x: 91, y: -120) diff_max_min_b7c4e1 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -456, y: -235, name: \"list\") property(List) list_0f3e1d\n\n        out(x: 1214, y: -110, name: \"output\") property(Number) output_eb7a8d\n\n        instance(x: 94, y: -131) for_6c4aeb root.Std_k98ojb.Std.For {}\n        list_0f3e1d -> for_6c4aeb.items\n        func() {\n            in(x: -231, y: -69, name: \"current\") property(Number) current_c7d5ea\n\n            out(x: 245, y: -54, name: \"bool\") property(Bool) bool_eb9f0e\n\n            instance(x: 89, y: 29) greaterthan_4d3e1a root.Std_k98ojb.Math.GreaterThan {}\n            current_c7d5ea -> greaterthan_4d3e1a.left\n            list_0f3e1d.list[0] -> greaterthan_4d3e1a.right\n            greaterthan_4d3e1a.result -> bool_eb9f0e\n        } -> for_6c4aeb.handler\n        func() {\n            in(x: -231, y: -69, name: \"current\") property(Number) current_c7d5ea\n\n            out(x: 245, y: -54, name: \"bool\") property(Bool) bool_eb9f0e\n\n            instance(x: 89, y: 29) lessThanOrEqual_4a1b3c root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_c7d5ea -> lessThanOrEqual_4a1b3c.left\n            list_0f3e1d.list[0] -> lessThanOrEqual_4a1b3c.right\n            lessThanOrEqual_4a1b3c.result -> bool_eb9f0e\n        } -> for_6c4aeb.handler\n        func() {\n            in(x: -231, y: -69, name: \"current\") property(Number) current_c7d5ea\n\n            out(x: 245, y: -54, name: \"bool\") property(Bool) bool_eb9f0e\n\n            instance(x: 89, y: 29) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n            current_c7d5ea -> modulo_4e8c54.value\n            list_0f3e1d.list[0] -> modulo_4e8c54.divisor\n            modulo_4e8c54.result -> bool_eb9f0e\n        } -> for_6c4aeb.handler\n        for_6c4aeb.item -> max_min_node.current\n        list_0f3e1d.list[0] -> min_max_node.current\n        if(bool_eb9f0e) {\n            output_eb7a8d = greaterthan_4d3e1a.result - lessThanOrEqual_4a1b3c.result\n        } else {\n            output_eb7a8d = list_0f3e1d.list[0] - greaterthan_4d3e1a.result\n        }\n    }\n\n    \n\n    instance(x: 10, y: -177) diff_max_min_f2a5df root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -246, y: 0, name: \"list\") property(List) list_3f8e2b\n\n        out(x: 1027, y: -1, name: \"output\") property(Number) output_6c5a4d\n\n        instance(x: -105, y: -120) length_9f7f44 root.Std_k98ojb.List.Length {}\n        instance(x: -0, y: -124) min_d2c3e8 root.Std_k98ojb.List.Min {}\n        instance(x: 104, y: -114) max_1d6a4b root.Std_k98ojb.List.Max {}\n        func() {\n            in(x: -105, y: -120) length_9f7f44.length -> max_1d6a4b.reset\n            list_3f8e2b -> min_d2c3e8.items\n            min_d2c3e8.item -> max_1d6a4b.first\n            list_3f8e2b -> max_1d6a4b.items\n            max_1d6a4b.item -> output_6c5a4d\n        } -> diff_largest_smallest.execute\n        min_d2c3e8.result -> output_6c5a4d\n    }\n\n    \n\n    instance(x: -91, y: 45) diff_largest_smallest_8f9b0d root.main.diff_largest_smallest {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -294, y: 155, name: \"n\") property(Number) n_4e9d2a\n\n        out(x: 1033, y: -1, name: \"output\") property(Bool) output_eb7c0f\n\n        instance(x: -82, y: 155) modulo_d6d5f8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -48, y: 4, name: \"check\") Std.If {\n            input: \"n % 2 == 0\"\n        }\n        n_4e9d2a -> modulo_d6d5f8.value\n        modulo_d6d5f8.divisor -> check.input\n        modulo_d6d5f8.result -> check.predicate\n        if (modulo_d6d5f8.result) then output_eb7c0f = true else output_eb7c0f = false\n    }\n\n    \n\n    instance(x: 45, y: -178) is_even_2e9df1 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -278, y: 23, name: \"n\") property(Number) n_6e5f8d\n\n        out(x: 1023, y: 24, name: \"output\") property(Bool) output_d9b4c4\n\n        instance(x: 0, y: 26) modulo_e1e3a7 root.Std_k98ojb.Math.Modulo {}\n        n_6e5f8d -> modulo_e1e3a7.value\n        2 -> modulo_e1e3a7.divisor\n        modulo_e1e3a7.result -> output_d9b4c4\n    }\n\n    \n\n    instance(x: -274, y: -14) is_even_6b0b45 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not\") is_even {\n        in(x: -285, y: 0, name: \"n\") property(Number) n_c4f5a2\n\n        out(x: 1091, y: 3, name: \"output\") property(Bool) output_5d9c7e\n\n        instance(x: 114, y: 6) modulo_8b0e31 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 115, y: 11, name: \"continue\") trigger() continue_5a3f4e\n        n_c4f5a2 -> modulo_8b0e31.value\n        0 -> modulo_8b0e31.divisor\n        modulo_8b0e31.result -> output_5d9c7e\n    }\n\n    \n\n    instance(x: -294, y: 16) is_even_4c7f3a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not\") is_even {\n        in(x: -281, y: 18, name: \"input\") property(Number) input_1f4d5a\n\n        out(x: 0, y: -11, name: \"output\") property(Bool) output_f7e2b8\n        out(x: 3, y: 23, name: \"continue\") trigger() continue_a6c9d2\n\n        instance(x: -105, y: -110) modulo_45e806 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 114, y: 20) equal_d0f3a5 root.Std_k98ojb.Logic.Equal {}\n        input_1f4d5a -> modulo_45e806.value\n        2 -> modulo_45e806.divisor\n        modulo_45e806.result -> equal_d0f3a5.left\n        0 -> equal_d0f3a5.right\n        equal_d0f3a5.result -> output_f7e2b8\n        modulo_45e806.result -> continue_a6c9d2.input\n    }\n\n    \n\n    instance(x: -174, y: -63) is_even_4e8f43 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -284, y: 34, name: \"input\") property(Number) input_9f0a4d\n\n        out(x: 546, y: -35, name: \"output\") property(Bool) output_6c5e42\n\n        instance(x: -108, y: -36) modulo_1a7b8b root.Std_k98ojb.Math.Modulo {}\n        is_even_result -> modulo_1a7b8b.result\n        input_9f0a4d -> modulo_1a7b8b.value\n        0 -> modulo_1a7b8b.divisor\n        modulo_1a7b8b.result -> output_6c5e42\n    }\n\n    \n\n    instance(x: -67, y: 53) is_even_f3d4f9 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -269, y: 19, name: \"number\") property(Number) number_a0e2a8\n\n        out(x: 1043, y: 4, name: \"output\") property(Bool) output_5c9f1b\n\n        instance(x: -106, y: -15, name: \"even check\") filter_c7d2e6 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -14) modulo_d4a3d5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1, y: -17) equal_9f8d25 root.Std_k98ojb.Logic.Equal {}\n        number_a0e2a8 -> filter_c7d2e6.items\n        modulo_d4a3d5.result -> equal_9f8d25.left\n        0 -> equal_9f8d25.right\n        equal_9f8d25.result -> output_5c9f1b\n    }\n\n    \n\n    instance(x: -102, y: 73) is_even_2dfc3 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -281, y: 0, name: \"n\") property(Number) n_e4f6a1\n\n        out(x: 1099, y: 5, name: \"output\") property(Bool) output_8e2c3d\n\n        instance(x: 0, y: 0) modulo_f7a8ad root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1, y: -11, name: \"continue\") trigger() continue_9f6df5\n        n_e4f6a1 -> modulo_f7a8ad.value\n        2 -> modulo_f7a8ad.divisor\n        modulo_f7a8ad.result -> output_8e2c3d\n    }\n\n    \n\n    instance(x: -69, y: -11) is_even_0f9b5b root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given number is even or not.\") is_even {\n        in(x: -285, y: 155, name: \"number\") property(Number) number_5d0e9f\n\n        out(x: 1051, y: -156, name: \"output\") property(Bool) output_6a2c4b\n\n        instance(x: -92, y: 162) modulo_e8a5aa root.Std_k98ojb.Math.Modulo {}\n        instance(x: 0, y: 158) equal_c9d1f1 root.Std_k98ojb.Logic.Equal {}\n        number_5d0e9f -> modulo_e8a5aa.value\n        2 -> modulo_e8a5aa.divisor\n        modulo_e8a5aa.result -> equal_c9d1f1.left\n        0 -> equal_c9d1f1.right\n        equal_c9d1f1.result -> output_6a2c4b\n    }\n\n    \n\n    instance(x: -67, y: -37) is_even_7e5d42 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is even or not.\") IsEven {\n        in(x: -283, y: 4, name: \"n\") property(Number) n_5f3a6e\n\n        out(x: 1212, y: -1, name: \"output\") property(Bool) output_a8c0d3\n\n        instance(x: -109, y: 15) modulo_c9b9d4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 246, y: 19) equal_7a3f2e root.Std_k98ojb.Logic.Equal {}\n        n_5f3a6e -> modulo_c9b9d4.value\n        0 -> modulo_c9b9d4.divisor\n        modulo_c9b9d4.result -> equal_7a3f2e.left\n        2 -> equal_7a3f2e.right\n        equal_7a3f2e.result -> output_a8c0d3\n    }\n\n    \n\n    instance(x: -83, y: 69) IsEven_9df5c6 root.main.IsEven {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: -275, y: 34, name: \"n\") property(Number) n_6a8f4d\n\n        out(x: 1055, y: -1, name: \"output\") property(Bool) output_b2c3e9\n\n        instance(x: 0, y: 0) modulo_eb7f66 root.Std_k98ojb.Math.Modulo {}\n        n_6a8f4d -> modulo_eb7f66.value\n        2 -> modulo_eb7f66.divisor\n        modulo_eb7f66.result -> output_b2c3e9\n    }\n\n    \n\n    instance(x: -69, y: 49) is_even_f0dd45 root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeat {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -34, y: 127) map_6f9c43 root.Std_k98ojb.Iteration.Map {\n            handler: function(it: Char) { return [it, input_ai.indexOf(it)] }\n        }\n        instance(x: 101, y: 55) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        instance(x: -34, y: 127) ifexpression_6f9c43 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it[1] != 0\"\n        }\n        instance(x: 101, y: 55) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        filter_7b3b7b.result -> map_6f9c43.items\n        ifexpression_6f9c43.then -> firstitem_870503.item\n        output_ai.value -> firstitem_870503.item[0]\n    }\n\n    \n\n    instance(x: -179, y: 30) FirstRepeat_ae8a5 root.main.FirstRepeat {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Char) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -34, y: 256) count_4e2f8c root.Std_k98ojb.Std.Count {}\n        instance(x: 105, y: 0) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 1\"\n        }\n        instance(x: -109, y: 275) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> count_4e2f8c.input\n        1 -> count_4e2f8c.reset\n        find_6d05b0.predicate -> ifexpression_a2fa90.execute\n        count_4e2f8c.count -> find_6d05b0.index\n        firstitem_870503 -> find_6d05b0.item\n        find_6d05b0.done -> ifexpression_a2fa90.then\n        tolower_7b3b7b.value -> ifexpression_a2fa90.predicate\n        ifexpression_a2fa90.else -> count_4e2f8c.count\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_59bc6e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"result\") property(Char) result_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) count_59bc6e root.Std_k98ojb.Std.Count {}\n        instance(x: -978, y: -566) filter_3f3ee6 root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        instance(x: -1405, y: -438) map_4b8927 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -1191, y: -492) getat_f133b2 root.Std_k98ojb.List.GetAt {}\n        instance(x: 118, y: 540, name: \"map_handler\") handler_aabb6e root.Std_k98ojb.Iteration.Map {\n            handler: function(item, index) { return item; }\n        }\n        instance(x: -432, y: -620) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> count_59bc6e.input\n        filter_3f3ee6.result -> map_4b8927.items\n        map_handler.item -> getat_f133b2.index\n        sub_852f2e.first -> result_ai\n        count_59bc6e.count -> sub_852f2e.second\n        tolower_7b3b7b.value -> result_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_f21f44 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"string\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) map_59bc6e root.Std_k98ojb.Iteration.Map {\n            handler: (item: String) -> \"it\"\n        }\n        instance(x: 340, y: 77) filter_aabb6e root.Std_k98ojb.Query.Filter {}\n        instance(x: -34, y: 127) count_7c284f root.Std_k98ojb.List.Count {}\n        instance(x: 772, y: 76) firstitem_44a047 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -179, y: 30) ifexpression_807ffd root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == map_59bc6e.value\"\n        }\n        instance(x: -34, y: 127) next_075eef root.Std_k98ojb.List.Next {}\n        tolower_7b3b7b.output -> map_59bc6e.input\n        input_ai -> map_59bc6e.input\n        filter_aabb6e.result -> count_7c284f.list\n        1 -> next_075eef.index\n        ifexpression_807ffd.then -> first_repeated.item\n        count_7c284f.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> filter_aabb6e.next\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_496e5e root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -289, y: 0, name: \"input\") property(String) input_ai\n        out(x: 533, y: 55, name: \"output\") property(Char) output_ai\n\n        instance(x: -1049, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -1051, y: -588) strings_contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 771, y: 75) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == it+1\"\n        }\n        instance(x: 196, y: -105) strings_isnumeric_3f5c8f root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: -432, y: 620) index_84fbbe root.Std_k98ojb.List.Index {}\n        instance(x: -1409, y: -438) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        tolower_7b3b7b.output -> strings_contains_d42dce.input\n        input_ai -> strings_contains_d42dce.contains\n        ifexpression_a2fa90.then -> index_84fbbe.index\n        strings_contains_d42dce.result -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> output_ai\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_char_bf3e4c root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -530, y: 2, name: \"string\") property(String) input_ai\n        out(x: -188, y: 76, name: \"output\") property(Number) output_ai\n\n        instance(x: 0, y: 1) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 265, y: 0) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        data_instance(x: -753, y: 76) data_c3f7c5  = [first, middle, last]\n        instance(x: -432, y: 620) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -978, y: 566) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_instance(x: 0, y: 1) map_6e9c63 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 772, y: 76) firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -1059, y: 696) lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        list_instance(x: -753, y: 76) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        contains_d42dce.result -> data_c3f7c5.first\n        tolower_2e1444.input -> data_c3f7c5.middle\n        input_ai -> map_6e9c63.handler\n        length_4b8927.length -> sub_f133b2.first\n        1 -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.start\n    }\n\n    \n\n    instance(x: -97, y: -68) first_repeated_49c6ac root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -289, y: 0, name: \"string\") property(String) input_ab\n        out(x: 1064, y: 28, name: \"output\") property(Char) output_ab\n\n        instance(x: 436, y: 34) tolower_2e1444 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -44, y: 219) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        tolower_2e1444.output -> contains_d42dce.input\n        \"a\" -> contains_d42dce.contains\n        input_ab -> tolower_2e1444.input\n        contains_d42dce.result -> output_ab\n    }\n\n    \n\n    instance(x: 77, y: -38) first_repeated_b9f0c5 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -179, y: 30) contains_a59bc6 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 340, y: 76) index_e1c8e2 root.Std_k98ojb.List.Index {}\n        instance(x: -34, y: 127) firstitem_59f6c9 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 118, y: 425) sub_0d3a4b root.Std_k98ojb.Math.Sub {}\n        list_instance(x: 340, y: 76) map_d2e4b1 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -34, y: 127) filter_7c284f root.Std_k98ojb.Query.Filter {}\n\n        tolower_7b3b7b.output -> contains_a59bc6.input\n        input_ai -> contains_a59bc6.contains\n        contains_a59bc6.result -> index_e1c8e2.value\n        0 -> sub_0d3a4b.first\n        map_d2e4b1.handler -> sub_0d3a4b\n        index_e1c8e2.itemAtIndex -> filter_7c284f.execute\n        filter_7c284f.predicate -> contains_a59bc6.result\n        contains_a59bc6.contains -> firstitem_59f6c9.input\n        map_d2e4b1.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) first_repeated_5d0a3 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the first repeated character in a given string.\") first_repeated {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 620) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        instance(x: 196, y: 425) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == b\"\n        }\n        tolower_7b3b7b.output -> contains_d42dce.input\n        input_ai -> tolower_7b3b7b.input\n        contains_d42dce.contains -> 'a'\n        ifexpression_a2fa90.then -> output_ai\n        firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        lastitem_d831ca root.Std_k98ojb.List.LastItem {}\n        data_instance(x: -753, y: 588) data_cc1b1b = [first, middle, last]\n        instance(x: -978, y: 566) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: -1191, y: 492) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        list_ai -> firstitem_870503.list\n        input_ai -> lastitem_d831ca.list\n        data_cc1b1b -> length_4b8927.list\n        sub_f133b2.result -> length_4b8927.length\n        0 -> sub_f133b2.second\n        ifexpression_a2fa90.predicate -> sub_f133b2.first\n    }\n\n    \n\n    instance(x: -67, y: -37) first_repeated_bf8c9 root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the first repeated character in a given string.\") FirstRepeated {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -432, y: 620) contains_4d4556 root.Std_k98ojb.Strings.Contains {}\n        instance(x: -1191, y: -492) ifexpression_aabb6e root.Std_k98ojb.Std.If {}\n        instance(x: 118, y: 540, name: \"count\") count_0b1361 root.Std_k98ojb.Count {}\n        tolower_7b3b7b.output -> contains_4d4556.input\n        input_ai -> tolower_7b3b7b.input\n        ifexpression_aabb6e.then -> count_0b1361.execute\n        1 -> count_0b1361.reset\n        contains_4d4556.result -> output_ai\n        count_0b1361.count -> ifexpression_aabb6e.predicate\n    }\n\n    \n\n    instance(x: -179, y: 30) FirstRepeated_59bc6e root.main.FirstRepeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: 23, name: \"list\") property(List) list_8e9f1a\n\n        out(x: 101, y: -19, name: \"output\") property(Number) output_e2c0d3\n\n        instance(x: -105, y: -110) ifexpression_d2b6b5 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = second_smallest_value\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = second_smallest_value\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = second_smallest_value\n        list_8e9f1a -> ifexpression_d2b6b5.gen_0\n        ifexpression_d2b6b5.then -> setter_1cedb2.execute\n        list_8e9f1a[1] -> setter_37db7f.new_value\n        ifexpression_d2b6b5.else -> setter_37db7f.execute\n        instance(x: -105, y: -110) count_e2c0d3 root.Std_k98ojb.Std.Count {}\n        list_8e9f1a[0] -> count_e2c0d3.reset\n        2 -> count_e2c0d3.count\n        ifexpression_d2b6b5.then -> count_e2c0d3.execute\n        second_smallest_value.value -> output_e2c0d3\n    }\n\n    \n\n    instance(x: -67, y: -37) second_smallest_8e9f1a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: 4, name: \"list\") property(List) list_8f2e0a\n\n        out(x: -104, y: -69, name: \"min\") property(Number) min_f1d5a6\n        out(x: -101, y: -64, name: \"second_min\") property(Number) second_min_b7bdf4\n\n        instance(x: 0, y: 0) ifexpression_4e2f8b root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -104, y: 10, name: \"getter_1a6c43\") getter_1a6c43 = min\n        setter(x: 103, y: 11, name: \"setter_d7e2f3\") setter_d7e2f3 = min\n        instance(x: -105, y: 16) ifexpression_4e2f8b.gen_0 {}\n        list_8f2e0a -> ifexpression_4e2f8b.items\n        getter_1a6c43.value -> min_f1d5a6\n        ifexpression_4e2f8b.then -> setter_d7e2f3.execute\n        list_8f2e0a[1] -> setter_d7e2f3.new_value\n        ifexpression_4e2f8b.else -> second_min_b7bdf4.execute\n        2 -> ifexpression_4e2f8b.index\n        ifexpression_4e2f8b.gen_0.item[1] -> min_f1d5a6\n        list_8f2e0a -> ifexpression_4e2f8b.next\n    }\n\n    \n\n    instance(x: -105, y: 19) second_smallest_d7c9df root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -103, y: 2, name: \"list\") property(List) list_5a1d4e\n\n        out(x: 439, y: -109, name: \"output\") property(Number) output_e3f7c0\n\n        instance(x: 94, y: -105) firstitem_9b1bc3 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -46, y: 76, name: \"second_smallest_node\") second_smallest_node root.Std_k98ojb.Iteration.Find {}\n        instance(x: 0, y: 0) ifexpression_4e7d6c root.Std_k98ojb.Std.IfExpression {}\n        list_5a1d4e -> second_smallest_node.items\n        firstitem_9b1bc3.item -> output_e3f7c0\n        ifexpression_4e7d6c.then -> second_smallest_node.predicate\n        2 -> ifexpression_4e7d6c.expression.gen_0\n        list_5a1d4e -> ifexpression_4e7d6c.gen_0\n        firstitem_9b1bc3.item -> ifexpression_4e7d6c.gen_1\n        ifexpression_4e7d6c.else -> second_smallest_node.predicate\n    }\n\n    \n\n    instance(x: 777, y: -63) second_smallest_fdbf8a root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"finds the second smallest number in a given list.\") second_smallest {\n        in(x: -1088, y: -444, name: \"list\") property(List) list_0d4f1b\n\n        out(x: 103, y: -439, name: \"output\") property(Number) output_e5e2a3\n\n        instance(x: -1029, y: -342) Std.If expression_6c7d8 root.Std_k98ojb.Std.IfExpression {}\n        list_0d4f1b -> expression_6c7d8.items\n        func() {\n            in(x: -1065, y: -227, name: \"a\") property(Number) a_b9dd3e\n\n            out(x: 103, y: -439, name: \"\") property(Number) _4f1b7d\n\n            instance(x: -1008, y: -221) Std.If expression_6c7d8 then_2d5eef root.Std_k98ojb.Std.IfExpression {}\n            a_b9dd3e -> expression_6c7d8.then\n            0 -> expression_6c7d8.then_value\n            _4f1b7d.value -> output_e5e2a3\n        } -> expression_6c7d8.gen_0\n        func() {\n            in(x: -1065, y: -227, name: \"a\") property(Number) a_b9dd3e\n\n            out(x: 103, y: -439, name: \"\") property(Number) _4f1b7d\n\n            instance(x: -1008, y: -221) Std.If expression_6c7d8 else_2d5eef root.Std_k98ojb.Std.IfExpression {}\n            a_b9dd3e -> expression_6c7d8.else\n            0 -> expression_6c7d8.else_value\n            _4f1b7d.value -> output_e5e2a3\n        } -> expression_6c7d8.gen_1\n        Std.IfExpression.then_value -> output_e5e2a3\n        Std.IfExpression.else_value -> output_e5e2a3\n    }\n\n    \n\n    instance(x: 103, y: -439) second_smallest_b9f6a4 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1148, y: 2, name: \"list\") property(List) list_3e4f1d\n\n        out(x: 103, y: -104, name: \"min\") property(Number) min_7b5df6\n        out(x: 105, y: 23, name: \"second_min\") property(Number) second_min_8c8c71\n\n        instance(x: -1001, y: 18, name: \"first_min_node\") Std_k98ojb.Std.If {}\n        list_3e4f1d -> first_min_node.items\n        instance(x: 1017, y: 24) second_smallest_node root.Std_k98ojb.Std.If {}\n        min_7b5df6 -> second_smallest_node.items\n        instance(x: -1050, y: -19, name: \"second_smallest_node\") Std_k98ojb.Std.IfExpression {}\n        expression: \"min < second_min\"\n        first_min_node.then -> second_smallest_node.then\n        list_3e4f1d[0] -> second_smallest_node.items\n        min_7b5df6 -> second_smallest_node.left\n        instance(x: -1002, y: 20) ifexpression_4c8a9a root.Std_k98ojb Std.IfExpression {}\n        expression: \"min == first_min\"\n        second_smallest_node.then -> ifexpression_4c8a9a.then\n        list_3e4f1d[0] -> ifexpression_4c8a9a.items\n        min_7b5df6 -> ifexpression_4c8a9a.left\n        instance(x: -1022, y: 25) sub_5aeb77 root.Std_k98ojb.Math.Sub {}\n        list_3e4f1d[0] -> sub_5aeb77.first\n        min_7b5df6 -> sub_5aeb77.second\n        sub_5aeb77.result -> second_min_8c8c71\n    }\n\n    \n\n    instance(x: -105, y: 28) second_smallest_4e9d0f root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1025, y: -446, name: \"list\") property(List) list_1d9a4f\n\n        out(x: 439, y: 155, name: \"min\") property(Number) min_a0f8af\n        out(x: 451, y: 156, name: \"second_min\") property(Number) second_min_e5c6b7\n\n        instance(x: -1031, y: -468, name: \"first_smallest\") find_first_smallest_9d3a4 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -1010, y: 157, name: \"second_smallest_node\") find_second_smallest_7f2c8 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 440, y: 166, name: \"std_if\") std_if(root.Std_k98ojb.Std.If) {}\n        list_1d9a4f -> find_first_smallest_9d3a4.items\n        func() {\n            in(x: -1032, y: -470, name: \"current\") property(Number) current_e5e8e6\n\n            out(x: 438, y: 159, name: \"\") property(Number) _e7dd95\n\n            instance(x: 1011, y: -465) less_than_0a4f1 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_e5e8e6 -> less_than_0a4f1.left\n            min_a0f8af -> less_than_0a4f1.right\n            less_than_0a4f1.result -> _e7dd95\n        } -> find_first_smallest_9d3a4.predicate\n        func() {\n            in(x: -1032, y: -470, name: \"current\") property(Number) current_e5e8e6\n\n            out(x: 438, y: 159, name: \"\") property(Number) _e7dd95\n\n            instance(x: 1011, y: -465) less_than_0a4f1 root.Std_k98ojb.Math.LessThanOrEqual {}\n            current_e5e8e6 -> less_than_0a4f1.left\n            second_min_e5c6b7 -> less_than_0a4f1.right\n            less_than_0a4f1.result -> _e7dd95\n        } -> find_second_smallest_7f2c8.predicate\n        list_1d9a4f -> std_if.list\n        min_a0f8af -> std_if.then\n        second_min_e5c6b7 -> std_if.else\n        find_first_smallest_9d3a4.item -> std_if.item\n        find_second_smallest_7f2c8.item -> std_if.item\n        _e7dd95.value -> second_min_e5c6b7\n    }\n\n    \n\n    instance(x: -98, y: 173) second_smallest_f0c1d9 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1022, y: 23, name: \"list\") property(List) list_4f1d9a\n\n        out(x: 0, y: -219, name: \"min\") property(Number) min_ae3c8b\n        out(x: 0, y: -217, name: \"second_min\") property(Number) second_min_eb5dd7\n\n        instance(x: 0, y: 0) ifexpression_9a2f45 root.Std_k98ojb.Std.IfExpression {}\n        list_4f1d9a -> ifexpression_9a2f45.gen_0\n        instance(x: -105, y: -113) min_ae3c8b_node Std_k98ojb.Std.If {}\n        min_ae3c8b_node.then -> ifexpression_9a2f45.then\n        list_4f1d9a[1] -> ifexpression_9a2f45.gen_1\n        instance(x: -105, y: -113) second_min_eb5dd7_node Std_k98ojb.Std.If {}\n        second_min_eb5dd7_node.then -> ifexpression_9a2f45.else\n        list_4f1d9a[0] -> ifexpression_9a2f45.gen_1\n        instance(x: -105, y: -113) sub_c9e8e3 root.Std_k98ojb.Math.Sub {}\n        min_ae3c8b_node.left -> second_min_eb5dd7_node.left\n        0 -> second_min_eb5dd7_node.right\n        sub_c9e8e3.first -> second_min_eb5dd7_node.result\n        ifexpression_9a2f45.value[1] -> min_ae3c8b.value\n        ifexpression_9a2f45.value[0] -> second_min_eb5dd7.value\n    }\n\n    \n\n    instance(x: 105, y: -108) second_smallest_4d3dfb root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -1039, y: -475, name: \"list\") property(List) list_8a6f5e\n\n        out(x: 0, y: -1, name: \"output\") property(Number) output_c4c3d7\n\n        instance(x: 91, y: -108) firstitem_a2b9c2 root.Std_k98ojb.List.FirstItem {}\n        data_instance(x: -1025, y: -487) data_0f8a1e  = [first, second]\n        instance(x: -1046, y: -621) ifexpression_b4e3d7 root.Std_k98ojb.Std.IfExpression {}\n        firstitem_a2b9c2.item -> data_0f8a1e.first\n        list_8a6f5e -> ifexpression_b4e3d7.items\n        instance(x: -1025, y: -487) sort_d2e3eb root.Std_k98ojb.List.Sort {}\n        firstitem_a2b9c2.item -> sort_d2e3eb.list[0]\n        list_8a6f5e -> sort_d2e3eb.list\n        seconditem_b7d5c4 root.Std_k98ojb.List.SecondItem {}\n        instance(x: -1039, y: -475) ifexpression_b4e3d7 else_1bfcf2 root.Std_k98ojb.Std.IfElse {}\n        output_c4c3d7 -> seconditem_b7d5c4.item\n    }\n\n    \n\n    instance(x: 0, y: 53) second_smallest_9a8e43 root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a given list.\") second_smallest {\n        in(x: -108, y: 2, name: \"list\") property(List) list_6a5e4d\n\n        out(x: 0, y: 3, name: \"min\") property(Number) min_7c1f8f\n        out(x: 0, y: 3, name: \"second_min\") property(Number) second_min_c9c2b1\n\n        instance(x: -341, y: 59) ifexpression_4d5a6 root.Std_k98ojb.Std.IfExpression {}\n        getter(x: -114, y: 74, name: \"getter_a3df0f\") getter_a3df0f = min\n        setter(x: 113, y: 68, name: \"setter_bf2c1d\") setter_bf2c1d = min\n        instance(x: 103, y: -16) count_6e4d7 root.Std_k98ojb.Std.Count {}\n        instance(x: 102, y: 72) list_slice_8a9dd0 root.Std_k98ojb.List.Slice {}\n        instance(x: 104, y: 78) ifexpression_2e5f1 root.Std_k98ojb.Std.IfExpression {}\n        getter_a3df0f.value -> min_7c1f8f\n        list_6a5e4d -> count_6e4d7.items\n        setter_bf2c1d.continue -> ifexpression_2e5f1.execute\n        1 -> setter_bf2c1d.new_value\n        count_6e4d7.reset -> ifexpression_4d5a6.execute\n        list_6a5e4d[0] -> ifexpression_4d5a6.gen_0\n        ifexpression_4d5a6.then -> setter_bf2c1d.execute\n        1 -> setter_bf2c1d.new_value\n        list_6a5e4d[0] -> setter_bf2c1d.value\n        count_6e4d7.count -> ifexpression_4d5a6.gen_1\n        1 -> ifexpression_4d5a6.gen_1\n        ifexpression_4d5a6.else -> list_slice_8a9dd0.execute\n        list_6a5e4d[1] -> list_slice_8a9dd0.start\n        2 -> list_slice_8a9dd0.end\n        list_slice_8a9dd0.slice -> ifexpression_2e5f1.gen_0\n        ifexpression_2e5f1.then -> setter_bf2c1d.execute\n        list_slice_8a9dd0.item[0] -> setter_bf2c1d.value\n        ifexpression_2e5f1.else -> min_7c1f8f\n    }\n\n    \n\n    instance(x: -43, y: 63) second_smallest_6b8d3b root.main.second_smallest {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n  func(doc: \"Finds the second smallest number in a list.\") second_smallest {\n        in(x: -102, y: 4, name: \"list\") property(List) list_5f6e0d\n\n        out(x: 123, y: 2, name: \"output\") property(Number) output_e7c3a8\n        instance(x: 93, y: -105) sort_a9b1c4 root.Std_k98ojb.List.Sort {}\n        list_5f6e0d -> sort_a9b1c4.items\n        sort_a9b1c4.result -> output_e7c3a8\n    }\n\n    \n\n    instance(x: 104, y: -69) second_smallest_d2e4d4 root.main.second_smallest {}\n}"
            ]
        }
    }
]