[
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 4982,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_intersection {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_b5c9d8\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty: instance(x: -8, y: -53) not_empty_a5c4d9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty.list\n        not_empty.isEmpty -> has_common_element_b5c9d8\n    }\n\n    \n\n    instance(x: 93, y: -122) list_intersection_cbc0b6 root.main.list_intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> has_common_element_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_5a9c3d\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        instance(x: 133, y: -189) not_empty_6d8e3a root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty_6d8e3a.list\n        not_empty_6d8e3a.isEmpty -> has_common_element_5a9c3d\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7c0e8d\n\n        instance(x: 133, y: -131) intersection_3f9a5b root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_3f9a5b.left\n        list2_c62075 -> intersection_3f9a5b.right\n        instance(x: 133, y: -131) not_e0d7e4 root.Std_k98ojb.Logic.Not {}\n        intersection_3f9a5b.intersect -> not_e0d7e4.input\n        not_e0d7e4.output -> has_common_element_7c0e8d\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_b2e6e1 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_f7d8c3\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_f7d8c3.NotEmpty()\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -172, y: -154, name: \"list1\") property(List) list1_2b5f6a\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_b7e3c9\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_1d0b4f\n\n        instance(x: 132, y: -131) intersection_5a6f8d root.Std_k98ojb.Sets.Intersection {}\n        list1_2b5f6a -> intersection_5a6f8d.left\n        list2_b7e3c9 -> intersection_5a6f8d.right\n        instance(x: 132, y: -131) not_empty_4c0d2f root.Std_k98ojb.List.NotEmpty {}\n        intersection_5a6f8d.intersect -> not_empty_4c0d2f.list\n        not_empty_4c0d2f.isEmpty -> has_common_element_1d0b4f\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_f3e9e7 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_f5a7e4\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_f5a7e4\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") is_consecutive {\n        in(x: -526, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_ae4d9c\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c9f1c4 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_ae4d9c -> sub_c9f1c4.first\n            _index_769593 -> sub_c9f1c4.second\n            sub_c9f1c4.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_7c1a9d root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> sub_7c1a9d.first\n            1 -> sub_7c1a9d.second\n            list_07cae4.GetAt(sub_7c1a9d.result) -> sub_7c1a9d.first\n            current_81298e -> sub_7c1a9d.second\n            sub_7c1a9d.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4.Slice(0, -1) -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_ba1b2e root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_next\") property(Number) _next_f7c5d3\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_d9b8a1 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) equal_f0e5c7 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> sub_d9b8a1.first\n            _next_f7c5d3 -> sub_d9b8a1.second\n            sub_d9b8a1.result -> equal_f0e5c7.left\n            1 -> equal_f0e5c7.right\n            equal_f0e5c7.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: -303, y: -205, name: \"slice list\") slice_ea8d9f root.Std_k98ojb.List.Slice {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> slice_ea8d9f.index\n        list_07cae4 -> slice_ea8d9f.list\n        -1 -> slice_ea8d9f.end\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_f9b7e2 root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -23, name: \"_next\") property(Number) _next_e9f8d4\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_2a5c0e root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7f8d4b root.Std_k98ojb.Logic.Equal {}\n            1 -> sub_2a5c0e.second\n            current_81298e -> sub_2a5c0e.first\n            sub_2a5c0e.result -> equal_7f8d4b.left\n            _next_e9f8d4 -> equal_7f8d4b.right\n            equal_7f8d4b.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"index\") property(Number) index_1f0d4c\n\n            instance(x: 74, y: -23) add_9b7a3a root.Std_k98ojb.Math.Add {}\n            current_81298e -> add_9b7a3a.first\n            1 -> add_9b7a3a.second\n            add_9b7a3a.result -> index_1f0d4c\n        } -> map_c73e3b.index_handler\n        list_07cae4 -> map_c73e3b.index_items\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_c7f1a9 root.Std_k98ojb.List.Contains {}\n            list_07cae4 -> contains_c7f1a9.list\n            current_81298e -> contains_c7f1a9.item\n            contains_c7f1a9.is_contained -> output_efbc78\n        } -> map_c73e3b.index_handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: -303, y: -205, name: \"check for 1 in differences\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_b3b9c4 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) item_2a8f1d List.GetAt {}\n\n            current_81298e -> sub_b3b9c4.first\n            item_2a8f1d.item -> sub_b3b9c4.second\n            list_07cae4 -> item_2a8f1d.list\n            _index_769593 + 1 -> item_2a8f1d.index\n            sub_b3b9c4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_d6f8d2\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_5b7e1c root.Std_k98ojb.Logic.Equal {}\n            current_d6f8d2 -> equal_5b7e1c.left\n            1 -> equal_5b7e1c.right\n            equal_5b7e1c.result -> bool_4524be\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        contains_32727d.is_contained -> output_8d07dc\n        false -> contains_32727d.item\n        filter_c91965.output_list -> contains_32727d.list\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_f4b7a3 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_prev\") property(Number) _prev_e5d1c8\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_7e3f4a root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_7e3f4a.first\n            _prev_e5d1c8 -> sub_7e3f4a.second\n            sub_7e3f4a.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: 0, name: \"current\") property(Number) current_e5d1c8\n            in(x: -23, y: 79, name: \"_prev\") property(Number) _prev_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) list_add_c76d2b root.Std_k98ojb.List.Add {}\n            current_e5d1c8 -> list_add_c76d2b.item\n            _prev_81298e -> list_add_c76d2b.list\n            list_add_c76d2b.listWithItem -> output_efbc78\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        1 -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_f7e6c2\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_7c8a4d root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> sub_7c8a4d.second\n            current_f7e6c2 -> sub_7c8a4d.first\n            sub_7c8a4d.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_c1e7c3 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_a6a7f9 root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -25, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_d5e8c1 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> sub_d5e8c1.second\n            current_81298e -> sub_d5e8c1.first\n            sub_d5e8c1.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: 1058, y: -203) and_ea7f6d root.Std_k98ojb.Logic.And {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) not_75283f root.Std_k98ojb.Logic.Not {}\n            instance(x: 463, y: 51) contains_2a8d5c root.Std_k98ojb.List.Contains {}\n            current_81298e -> not_75283f.input\n            map_c73e3b.output_list -> contains_2a8d5c.list\n            false -> contains_2a8d5c.item\n            not_75283f.result -> output_efbc78\n        } -> and_ea7f6d.left\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) not_75283f root.Std_k98ojb.Logic.Not {}\n            instance(x: 463, y: 51) contains_2a8d5c root.Std_k98ojb.List.Contains {}\n            current_81298e -> not_75283f.input\n            map_c73e3b.output_list -> contains_2a8d5c.list\n            true -> contains_2a8d5c.item\n            not_75283f.result -> output_efbc78\n        } -> and_ea7f6d.right\n        and_ea7f6d.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_f1b2e9 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -26, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_bf0c8a\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_bf0c8a -> modulo_ad7b2a.value\n            list_07cae4 -> modulo_ad7b2a.list\n            _index_769593 -> modulo_ad7b2a.index\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if 'sublist' is a sublist of 'main_list'.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_5bbcd7\n        ifexpression_875761.else -> continue_a96db6\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_1\n        sublist_ec88cd -> ifexpression_875761.gen_0\n\n        0 -> ifexpression_875761.gen_2\n        ifexpression_875761.value -> output_5bbcd7\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> getat_ce2a48.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sub_for_d26972.items\n\n        instance(x: 321, y: -20) sub_for_d26972 root.Std_k98ojb.Std.For {}\n        sub_ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_index == 0 || sub_previous == sublist_item\"\n        }\n        sub_getter_b280eb = sub_previous\n        sub_setter_9d4f1c = sub_previous\n\n        sub_for_d26972.item -> sub_ifexpression_875761.gen_2\n        sub_for_d26972.index -> sub_ifexpression_875761.gen_0\n        sub_getter_b280eb.value -> sub_ifexpression_875761.gen_1\n        sub_ifexpression_875761.else -> sub_continue_a96db6\n        sub_ifexpression_875761.value -> sub_output_5bbcd7\n        sub_ifexpression_875761.then -> sub_setter_9d4f1c.execute\n\n        for_d26972.item -> sub_ifexpression_875761.gen_3\n        sub_for_d26972.onItem -> sub_ifexpression_875761.execute\n        sub_for_d26972.done -> sub_continue_a96db6\n        sub_for_d26972.item -> sub_setter_9d4f1c.new_value\n\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        sub_setter_9d4f1c.continue -> sub_for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.next\n\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sub_continue_a96db6 -> continue_a96db6\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == sublist[index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        sublist_ec88cd -> getat_ce2a48.list\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> sublist_check_instance.ifexpression_2.expression.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.index -> sublist_check_instance.for.sublist_index\n        for_d26972.onItem -> sublist_check_instance.for.reset\n        for_d26972.done -> continue_a96db6\n\n        instance(x: 500, y: -200) ifexpression_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1 || sublist[sublist_index] == item\"\n        }\n        instance(x: 300, y: -250) for_sublist_check root.Std_k98ojb.Std.For {}\n        getter(x: 150, y: -320, name: \"getter_3\") getter_3 = sublist_index\n        setter(x: 450, y: -420, name: \"setter_4\") setter_4 = sublist_index\n\n        ifexpression_2.then -> for_sublist_check.next\n        ifexpression_2.else -> setter_4.execute\n        sublist_ec88cd -> for_sublist_check.items\n        getter_3.value -> ifexpression_2.expression.gen_0\n        for_sublist_check.item -> ifexpression_2.expression.gen_1\n        for_sublist_check.index -> ifexpression_2.expression.gen_2\n        for_sublist_check.onItem -> ifexpression_2.execute\n        for_sublist_check.done -> setter_4.continue\n\n        execute_90aaec -> getter_3.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_5bbcd7.set(true)\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n\n        for_d26972.items -> main_list_ec88cd\n        for_d26972.onItem -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        for_d26972.item -> getat_ce2a48.new_value\n        getat_ce2a48.itemAtIndex -> sublist_1st_index.set\n\n        instance(x: -275, y: 160) find_sublist_index root.Std_k98ojb.Iteration.Find {\n            predicate: \"item == sublist[0]\"\n        }\n\n        sublist_1st_index.value -> find_sublist_index.index\n        main_list_ec88cd -> find_sublist_index.items\n\n        instance(x: -275, y: 285) sublist_check root.Std_k98ojb.Iteration.ForEach {\n            handler: func(index: Int, item: Any, context: List) Bool {\n                let start_index = index + 1\n                if start_index >= len(context) {\n                    return false\n                }\n                let sublist_item = context[start_index]\n                let main_list_item = getat_ce2a48.itemAtIndex\n                return main_list_item == sublist_item\n            }\n        }\n\n        find_sublist_index.item -> sublist_check.starting_index.set\n        for_d26972.onItem -> sublist_check.main_list_item.set\n\n        sublist_check.result -> ifexpression_875761.gen_0\n        sublist_ec88cd[0] -> ifexpression_875761.gen_1\n        sublist_check.index -> ifexpression_875761.gen_2\n\n        execute_90aaec -> for_d26972.reset\n        continue_a96db6 -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        instance(x: 850, y: -120) for_sublist root.Std_k98ojb.Std.For {}\n        setter(x: 1020, y: -313, name: \"sublist_index\") sublist_index = -1\n        instance(x: 1015, y: -35) getat_ce2a48_1 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.value -> for_sublist.reset\n        getter_b280eb.value -> for_sublist.index\n        ifexpression_875761.then -> for_sublist.next\n        ifexpression_875761.else -> for_sublist.execute\n\n        instance(x: 850, y: -270) ifexpression_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"main_item == sublist_item\"\n        }\n        getter(x: 1020, y: 160, name: \"getter_b280eb\") getter_b280eb_1 = sublist_index\n        setter(x: 1275, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c_1 = sublist_index\n        instance(x: 1210, y: -20) for_d26972_1 root.Std_k98ojb.Std.For {}\n        ifexpression_2.else -> continue_a96db6\n        getter_b280eb.value -> ifexpression_2.gen_1\n        ifexpression_2.then -> setter_9d4f1c_1.execute\n        sublist_ec88cd -> for_d26972_1.items\n        for_d26972_1.item -> ifexpression_2.gen_2\n        getter_b280eb_1.value -> ifexpression_2.gen_0\n        for_d26972_1.onItem -> ifexpression_2.execute\n        for_d26972_1.done -> continue_a96db6\n\n        instance(x: 850, y: -420) ifexpression_3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == sublist_length\"\n        }\n        getter(x: 1020, y: 160, name: \"getter_b280eb\") getter_b280eb_2 = sublist_index\n        setter(x: 1275, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c_2 = sublist_index\n        instance(x: 1210, y: -20) for_d26972_2 root.Std_k98ojb.Std.For {}\n        ifexpression_3.else -> continue_a96db6\n        getter_b280eb.value -> ifexpression_3.gen_1\n        ifexpression_3.then -> setter_9d4f1c_2.execute\n        sublist_ec88cd -> for_d26972_2.items\n        for_d26972_2.item -> ifexpression_3.gen_2\n        getter_b280eb_2.value -> ifexpression_3.gen_0\n        for_d26972_2.onItem -> ifexpression_3.execute\n        for_d26972_2.done -> continue_a96db6\n\n        instance(x: 850, y: -570) ifexpression_4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == sublist_length\"\n        }\n        getter(x: 1020, y: 160, name: \"getter_b280eb\") getter_b280eb_3 = sublist_index\n        setter(x: 1275, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c_3 = sublist_index\n        instance(x: 1210, y: -20) for_d26972_3 root.Std_k98ojb.Std.For {}\n        ifexpression_4.else -> continue_a96db6\n        getter_b280eb.value -> ifexpression_4.gen_1\n        ifexpression_4.then -> setter_9d4f1c_3.execute\n        sublist_ec88cd -> for_d26972_3.items\n        for_d26972_3.item -> ifexpression_4.gen_2\n        getter_b280eb_3.value -> ifexpression_4.gen_0\n        for_d26972_3.onItem -> ifexpression_4.execute\n        for_d26972_3.done -> continue_a96db6\n\n        instance(x: 850, y: -720) list_length root.Std_k98ojb.List.Length {}\n        sublist_ec88cd -> list_length.list\n        list_length.length -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        instance(x: 850, y: -870) ifexpression_5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == sublist_length\"\n        }\n        getter(x: 1020, y: 160, name: \"getter_b280eb\") getter_b280eb_4 = sublist_index\n        setter(x: 1275, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c_4 = sublist_index\n        instance(x: 1210, y: -20) for_d26972_4 root.Std_k98ojb.Std.For {}\n        ifexpression_5.else -> continue_a96db6\n        getter_b280eb.value -> ifexpression_5.gen_1\n        ifexpression_5.then -> setter_9d4f1c_4.execute\n        sublist_ec88cd -> for_d26972_4.items\n        for_d26972_4.item -> ifexpression_5.gen_2\n        getter_b280eb_4.value -> ifexpression_5.gen_0\n        for_d26972_4.onItem -> ifexpression_5.execute\n        for_d26972_4.done -> continue_a96db6\n\n        instance(x: 850, y: -1020) list_length_1 root.Std_k98ojb.List.Length {}\n        sublist_ec88cd -> list_length_1.list\n        list_length_1.length -> setter_9d4f1c.new_value\n        ifexpression_2.value -> for_sublist.reset\n        getter_b280eb.value -> for_sublist.index\n        ifexpression_2.then -> for_sublist.next\n        ifexpression_2.else -> for_sublist.execute\n\n        instance(x: 850, y: -1170) list_length_2 root.Std_k98ojb.List.Length {}\n        sublist_ec88cd -> list_length_2.list\n        list_length_2.length -> setter_9d4f1c.new_value\n        ifexpression_3.value -> for_d26972_1.reset\n        getter_b280eb.value -> for_d26972_1.index\n        ifexpression_3.then -> for_d26972_1.next\n        ifexpression_3.else -> for_d26972_1.execute\n\n        instance(x: 850, y: -1320) list_length_",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -275, y: 160) getat_sublist_9d4f1c root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> getat_sublist_9d4f1c.list\n        0 -> getat_sublist_9d4f1c.index\n\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_3\n        getat_sublist_9d4f1c.itemAtIndex -> ifexpression_875761.gen_1\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        execute_90aaec -> getat_ce2a48.execute\n        0 -> getat_ce2a48.index\n        for_d26972.item -> getat_ce2a48.list\n\n        ifexpression_875761.else -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        sublist_ec88cd -> getat_ce2a48.index\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_1\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_1a2b3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -275, y: 160) getat_sublist_3d4f5e root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_5bbcd7.set(true)\n        ifexpression_875761.else -> for_d26972.trigger\n        sublist_1a2b3c -> getat_sublist_3d4f5e.list\n        0 -> getat_sublist_3d4f5e.index\n        getat_sublist_3d4f5e.itemAtIndex -> is_sublist.subitem\n\n        for_d26972.items -> main_list_ec88cd\n        for_d26972.onItem -> check_item_abc123.execute\n        for_d26972.done -> continue_a96db6\n\n        instance(x: 400, y: -50) ifexpression_check root.Std_k98ojb.Std.IfExpression {\n            expression: \"subitem == item\"\n        }\n\n        ifexpression_check.then -> update_index_efg456.execute\n        ifexpression_check.else -> reset_sublist_789hij.execute\n\n        instance(x: 400, y: -180) setindex_efg456 root.Std_k98ojb.Set {\n            value: index + 1\n        }\n        instance(x: 400, y: -210) setindex_reset root.Std_k98ojb.Set {\n            value: -1\n        }\n\n        update_index_efg456.value -> ifexpression_875761.gen_0\n        reset_sublist_789hij.value -> ifexpression_875761.gen_0\n\n        instance(x: 400, y: -240) setindex root.Std_k98ojb.Set {\n            value: index\n        }\n        setindex.value -> ifexpression_875761.gen_0\n\n        for_d26972.index -> check_item_abc123.gen_0\n        main_list_ec88cd.for_d26972.item -> check_item_abc123.gen_1\n        getat_sublist_3d4f5e.itemAtIndex -> check_item_abc123.subitem\n\n        execute_90aaec -> setindex_reset.execute\n        continue_a96db6 -> output_5bbcd7.set(false)\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_f7a3b4\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || main_list[index:index + len(sublist)] == sublist\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        main_list_ec88cd.Length - sublist_f7a3b4.Length + 1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_numbers_ai -> find_missing_node.sorted_numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(sorted_numbers: -426, y: -248) property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop Std_k98ojb.Std.For {}\n        instance(x: 426, y: -403) if_missing Std_k98ojb.Std.If {}\n\n        sorted_numbers_ai -> loop.items\n        loop.on_item -> if_missing.input\n\n        instance(x: 426, y: -503) index_counter Std_k98ojb.Std.Count {}\n        index_counter.reset -> loop.reset\n        loop.next -> index_counter.count\n\n        index_counter.count -> if_missing.expression {\n            expression: \"it != sorted_numbers[0] + it\"\n        }\n\n        if_missing.then -> missing_number_ai.value {\n            value: \"sorted_numbers[0] + it\"\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        sorted_list_ai -> find_missing_node.items\n        instance(x: 426, y: -453) predicate_node root.Std_k98ojb.Logic.NotEqual {}\n        find_missing_node.predicate <- predicate_node\n\n        instance(x: 426, y: -588) index_calc_node root.Std_k98ojb.Math.Expression {}\n        index_calc_node.expression <- \"it + 1\"\n        find_missing_node.item -> index_calc_node.it\n        instance(x: 426, y: -723) list_get_node root.Std_k98ojb.List.GetAt {}\n        index_calc_node.result -> list_get_node.index\n        sorted_list_ai -> list_get_node.list\n\n        predicate_node.left <- index_calc_node.result\n        predicate_node.right <- list_get_node.item\n\n        find_missing_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.main.find_smallest_missing {}\n        numbers_ai -> find_smallest_missing_node.numbers\n        find_smallest_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) std_iterate_node Std_k98ojb.Iteration.Filter {}\n        numbers_ai -> std_iterate_node.items\n\n        func(doc: \"checks if the difference between consecutive elements is greater than 1.\") check_missing {\n            in(x: -426, y: -248, name: \"current\", index: true) property(Number) current_ai\n            in(x: -426, y: -303, name: \"next\") property(Number) next_ai\n\n            instance(x: 159, y: -219) std_sub_node Std_k98ojb.Math.Sub {}\n            current_ai -> std_sub_node.first\n            next_ai -> std_sub_node.second\n\n            instance(x: 426, y: -303) std_gt_node Std_k98ojb.Math.GreaterThan {}\n            std_sub_node.result -> std_gt_node.left\n            number(1) -> std_gt_node.right\n\n            out(x: 159, y: -219, name: \"missing\") property(Boolean) missing_ai\n            std_gt_node.output -> missing_ai\n        }\n\n        instance(x: 426, y: -303) check_missing_node root.main.check_missing {}\n        std_iterate_node.index -> check_missing_node.index\n        std_iterate_node.items -> check_missing_node.current\n        std_iterate_node.next_item -> check_missing_node.next\n\n        instance(x: 426, y: -303) find_first_missing_node Std_k98ojb.Iteration.Find {}\n        std_iterate_node.items -> find_first_missing_node.items\n        check_missing_node.missing -> find_first_missing_node.predicate\n\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n        number(1) -> find_first_missing_node.default_value\n        find_first_missing_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) std_for_node Std_k98ojb.Std.For {}\n        numbers_ai -> std_for_node.items\n        std_for_node.trigger -> trigger_ai\n\n        instance(x: 426, y: -453) if_expression_node Std_k98ojb.Std.IfExpression {}\n        std_for_node.item -> if_expression_node.expression.a\n        std_for_node.index -> if_expression_node.expression.b\n        if_expression_node.value -> index_check_value_ai\n\n        instance(x: 426, y: -588) std_if_node Std_k98ojb.Std.If {}\n        index_check_value_ai -> std_if_node.input\n        std_if_node.then -> return_missing_number_trigger_ai\n\n        instance(x: 426, y: -723) math_add_node Std_k98ojb.Math.Add {}\n        std_for_node.index -> math_add_node.first\n        number_1 -> math_add_node.second\n        math_add_node.result -> missing_number_value_ai\n\n        instance(x: 426, y: -858) return_missing_number_node root.main.return_missing_number {}\n        missing_number_value_ai -> return_missing_number_node.missing_number\n        return_missing_number_trigger_ai -> return_missing_number_node.trigger\n\n        number_1 = 1\n    }\n\n    func(doc: \"returns the missing number.\") return_missing_number {\n        in(x: -426, y: -248, name: \"missing_number\") property(Number) missing_number_ai\n        out(x: 159, y: -219, name: \"\") property() trigger_ai\n\n        instance(x: 426, y: -303) set_output_node root.std.SetOutput {}\n        missing_number_ai -> set_output_node.value\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        sorted_list_ai -> for_node.items\n        for_node.trigger -> trigger_ai\n        \n        instance(x: 426, y: -450) std_if_node root.Std_k98ojb.If {}\n        for_node.item -> std_if_node.input\n        std_if_node.then -> continue_node.trigger\n\n        instance(x: 426, y: -576) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"index + 1\"\n        }\n        for_node.index -> math_expr_node.index\n        math_expr_node.result -> expected_value_ai\n        \n        instance(x: 426, y: -702) std_if_node root.Std_k98ojb.If {}\n        std_if_node.input <- Logic.Equal(expected_value_ai, for_node.item)\n        std_if_node.then -> continue_node.trigger\n\n        instance(x: 426, y: -828) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"index + 1\"\n        }\n        for_node.index -> math_expr_node.index\n        math_expr_node.result -> missing_number_ai\n        \n        instance(x: 426, y: -954) std_if_node root.Std_k98ojb.If {}\n        for_node.done -> std_if_node.input\n        std_if_node.then -> end_trigger\n\n        instance(x: 426, y: -1080) continue_node root.Std_k98ojb.If {\n            then: trigger_ai\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n    instance(x: 426, y: -1206) trigger_ai root.Std_k98ojb.Trigger {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.main.find_smallest_missing {}\n        numbers_ai -> find_smallest_missing_node.numbers\n        find_smallest_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_for_node root.Std_k98ojb.Iteration.For {}\n        numbers_ai -> iteration_for_node.items\n        iteration_for_node.trigger -> trigger_ai\n\n        instance(x: 426, y: -423) std_if_node root.Std_k98ojb.If {}\n        iteration_for_node.on_item -> std_if_node.input\n        iteration_for_node.index -> index_ai\n        iteration_for_node.item -> item_ai\n\n        instance(x: 426, y: -519) math_sub_node root.Std_k98ojb.Math.Sub {}\n        index_ai + 1 -> math_sub_node.first\n        item_ai -> math_sub_node.second\n        math_sub_node.result -> expected_ai\n\n        instance(x: 426, y: -615) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        expected_ai -> logic_not_equal_node.left\n        item_ai -> logic_not_equal_node.right\n\n        std_if_node.then -> then_trigger_ai\n        std_if_node.else -> else_trigger_ai\n\n        instance(x: 426, y: -711) std_count_node root.Std_k98ojb.Count {}\n        then_trigger_ai -> std_count_node.count\n        std_count_node.reset -> reset_ai\n\n        instance(x: 426, y: -807) math_expression_node root.Std_k98ojb.Math.Expression {}\n        index_ai + 1 -> math_expression_node.expression\n        math_expression_node.result -> missing_number_ai\n\n        iteration_for_node.done -> done_trigger_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) list_length_node root.Std_k98ojb.List.Length {}\n        numbers_ai -> list_length_node.list\n        list_length_node.length -> length_ai\n\n        instance(x: 426, y: -403) range_generator_node root.Std_k98ojb.List.GenerateRange {\n            from: 1\n            to: length_ai + 1\n        }\n        \n        instance(x: 426, y: -503) zip_node root.Std_k98ojb.Iteration.Zip {\n            handler: func(a: Number, b: Number) -> Bool {\n                out(value: a != b)\n            }\n        }\n\n        numbers_ai -> zip_node.left\n        range_generator_node.list -> zip_node.right\n\n        instance(x: 426, y: -603) find_first_false_node root.Std_k98ojb.Iteration.Find {\n            predicate: func(item: Bool) -> Bool {\n                out(value: item)\n            }\n        }\n\n        zip_node.zipped -> find_first_false_node.items\n\n        instance(x: 426, y: -703) map_index_node root.Std_k98ojb.Iteration.Map {\n            handler: func(index: Number) -> Number {\n                out(value: index)\n            }\n        }\n\n        range_generator_node.list -> map_index_node.items\n        find_first_false_node.index -> map_index_node.index\n\n        map_index_node.output_list -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.main.find_smallest_missing {}\n        numbers_ai -> find_smallest_missing_node.numbers\n        find_smallest_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> Std_k98ojb.Trigger {}\n\n        instance(x: 426, y: -450) if_node root.Std_k98ojb.If {}\n        for_node.index -> if_node.input\n        for_node.item -> if_node.value\n\n        instance(x: 426, y: -585) std_math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"it + 1\"\n        }\n        for_node.index -> std_math_expr_node.it\n        std_math_expr_node.result -> if_node.expression\n\n        instance(x: 426, y: -720) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        for_node.item -> not_equal_node.left\n        std_math_expr_node.result -> not_equal_node.right\n\n        instance(x: 426, y: -855) trigger_missing_number_node root.Std_k98ojb.Trigger {}\n        if_node.expression -> trigger_missing_number_node.trigger\n        std_math_expr_node.result -> missing_number_ai\n\n        instance(x: 426, y: -990) add_one_node root.Std_k98ojb.Math.Add {\n            first: for_node.index,\n            second: 1\n        }\n        add_one_node.result -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) list_length_node root.Std_k98ojb.List.Length {}\n        numbers_ai -> list_length_node.list\n        list_length_node.length -> list_length_node.length\n\n        instance(x: 426, y: -423) for_loop_node root.Std_k98ojb.For {}\n        list_length_node.length -> for_loop_node.items\n        for_loop_node.trigger -> for_loop_node.trigger\n        for_loop_node.reset -> for_loop_node.reset\n\n        instance(x: 426, y: -518) std_if_node root.Std_k98ojb.If {}\n        for_loop_node.index -> std_if_node.input\n        std_if_node.then -> std_if_node.then\n        std_if_node.else_ -> std_if_node.else_\n\n        instance(x: 426, y: -613) math_sub_node root.Std_k98ojb.Math.Sub {}\n        for_loop_node.index -> math_sub_node.first\n        for_loop_node.item -> math_sub_node.second\n\n        instance(x: 426, y: -708) math_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        math_sub_node.result -> math_not_equal_node.left\n        numbers_ai -> math_not_equal_node.right\n\n        std_if_node.input -> std_if_node.input\n        std_if_node.then -> math_not_equal_node.output\n        std_if_node.else_ -> for_loop_node.next\n\n        instance(x: 426, y: -803) math_add_node root.Std_k98ojb.Math.Add {}\n        for_loop_node.index -> math_add_node.first\n        number(1) -> math_add_node.second\n\n        math_not_equal_node.output -> math_add_node.input\n        math_add_node.result -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        \n        list_length := instance(x: 426, y: -378) Std_k98ojb.List.Length {}\n        sorted_list_ai -> list_length.list\n        list_length.length -> find_missing_node.index\n\n        index_check := instance(x: 426, y: -453) Math.Expression {}\n        index_check.expression = \"it + 1\"\n        find_missing_node.index -> index_check.it\n        index_check.result -> find_missing_node.predicate.index\n        \n        value_check := instance(x: 426, y: -528) Std_k98ojb.List.GetAt {}\n        sorted_list_ai -> value_check.list\n        find_missing_node.index -> value_check.index\n\n        compare := instance(x: 426, y: -603) Math.NotEqual {}\n        index_check.result -> compare.left\n        value_check.item -> compare.right\n        \n        missing_number := instance(x: 426, y: -678) Iteration.Map {}\n        sorted_list_ai -> missing_number.items\n        find_missing_node.handler -> missing_number.handler\n\n        map_handler := func(item: Number, index: Number) {\n            if (compare.result) {\n                return item + 1\n            }\n            return Null\n        }\n\n        instance(x: 426, y: -753) Iteration.Filter {}\n        missing_number.output_list -> filter_node.items\n        filter_node.handler := func(value: Number) {\n            return value != Null\n        }\n\n        filter_node.output_list -> missing_number_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f7c5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8e3f9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_b6d2c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f7c5d.input\n        \" \" -> replace_4f7c5d.search\n        \":\" -> replace_4f7c5d.replace\n        replace_4f7c5d.output -> replace_8e3f9a.input\n        \",\" -> replace_8e3f9a.search\n        \":\" -> replace_8e3f9a.replace\n        replace_8e3f9a.output -> replace_b6d2c1.input\n        \".\" -> replace_b6d2c1.search\n        \":\" -> replace_b6d2c1.replace\n        replace_b6d2c1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3f9b7a root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3c9b8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6d4e7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c5a2a1 root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_3c9b8a.search\n        \":\" -> replace_3c9b8a.replace\n        input_0 -> replace_3c9b8a.input\n        replace_3c9b8a.output -> replace_6d4e7f.input\n        \",\" -> replace_6d4e7f.search\n        \":\" -> replace_6d4e7f.replace\n        replace_6d4e7f.output -> replace_c5a2a1.input\n        \".\" -> replace_c5a2a1.search\n        \":\" -> replace_c5a2a1.replace\n        replace_c5a2a1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_f3b7d9 root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_5b9c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas_b3a4d7 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_dots_1e6f5a root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_spaces_5b9c8f.input\n        \" \" -> replace_spaces_5b9c8f.search\n        \":\" -> replace_spaces_5b9c8f.replace\n\n        replace_spaces_5b9c8f.output -> replace_commas_b3a4d7.input\n        \",\" -> replace_commas_b3a4d7.search\n        \":\" -> replace_commas_b3a4d7.replace\n\n        replace_commas_b3a4d7.output -> replace_dots_1e6f5a.input\n        \".\" -> replace_dots_1e6f5a.search\n        \":\" -> replace_dots_1e6f5a.replace\n\n        replace_dots_1e6f5a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7d3c9f root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_bf3d4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_c7c8e6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_5a2d9f root.Std_k98ojb.Strings.Replace {}\n        replace_bf3d4a.output -> replace_c7c8e6.input\n        replace_c7c8e6.output -> replace_5a2d9f.input\n        input_0 -> replace_bf3d4a.input\n        \" \" -> replace_bf3d4a.search\n        \":\" -> replace_bf3d4a.replace\n        \",\" -> replace_c7c8e6.search\n        \":\" -> replace_c7c8e6.replace\n        \".\" -> replace_5a2d9f.search\n        \":\" -> replace_5a2d9f.replace\n        replace_5a2d9f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3e4b7f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4c6b7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_f8a9d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c3f8b1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4c6b7e.input\n        \" \" -> replace_4c6b7e.search\n        \":\" -> replace_4c6b7e.replace\n        replace_4c6b7e.output -> replace_f8a9d5.input\n        \",\" -> replace_f8a9d5.search\n        \":\" -> replace_f8a9d5.replace\n        replace_f8a9d5.output -> replace_c3f8b1.input\n        \".\" -> replace_c3f8b1.search\n        \":\" -> replace_c3f8b1.replace\n        replace_c3f8b1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_2a7c9d root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_b3c5f8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_d9e7a4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3d6e9f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_b3c5f8.input\n        \" \" -> replace_b3c5f8.search\n        \":\" -> replace_b3c5f8.replace\n        replace_b3c5f8.output -> replace_d9e7a4.input\n        \",\" -> replace_d9e7a4.search\n        \":\" -> replace_d9e7a4.replace\n        replace_d9e7a4.output -> replace_3d6e9f.input\n        \".\" -> replace_3d6e9f.search\n        \":\" -> replace_3d6e9f.replace\n        replace_3d6e9f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_8b4a1c root.main.text_replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5e7d4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8c9f3d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_ba2c1b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e7d4a.input\n        \" \" -> replace_5e7d4a.search\n        \":\" -> replace_5e7d4a.replace\n        replace_5e7d4a.output -> replace_8c9f3d.input\n        \",\" -> replace_8c9f3d.search\n        \":\" -> replace_8c9f3d.replace\n        replace_8c9f3d.output -> replace_ba2c1b.input\n        \".\" -> replace_ba2c1b.search\n        \":\" -> replace_ba2c1b.replace\n        replace_ba2c1b.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_e54b7f root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_ba8f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7f5d4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d6c3a1 root.Std_k98ojb.Strings.Replace {}\n        replace_ba8f9e.output -> replace_7f5d4c.input\n        replace_7f5d4c.output -> replace_d6c3a1.input\n        input_0 -> replace_ba8f9e.input\n        \" \" -> replace_ba8f9e.search\n        \":\" -> replace_ba8f9e.replace\n        \",\" -> replace_7f5d4c.search\n        \":\" -> replace_7f5d4c.replace\n        \".\" -> replace_d6c3a1.search\n        \":\" -> replace_d6c3a1.replace\n        replace_d6c3a1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_8f7d9b root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_ba4d8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5c3e7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6b9c5c root.Std_k98ojb.Strings.Replace {}\n        replace_ba4d8f.output -> replace_5c3e7c.input\n        \":\" -> replace_5c3e7c.replace\n        \",\" -> replace_5c3e7c.search\n        replace_5c3e7c.output -> replace_6b9c5c.input\n        \":\" -> replace_6b9c5c.replace\n        \".\" -> replace_6b9c5c.search\n        replace_6b9c5c.output -> result_0\n        \" \" -> replace_ba4d8f.search\n        \":\" -> replace_ba4d8f.replace\n        input_0 -> replace_ba4d8f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_9b7c1e root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of space, comma and dot with colon\") string_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f8c9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 21) replace_d5e6d4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 41) replace_b3c2a1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7f8c9a.input\n        \" \" -> replace_7f8c9a.search\n        \":\" -> replace_7f8c9a.replace\n        replace_7f8c9a.output -> replace_d5e6d4.input\n        \",\" -> replace_d5e6d4.search\n        \":\" -> replace_d5e6d4.replace\n        replace_d5e6d4.output -> replace_b3c2a1.input\n        \".\" -> replace_b3c2a1.search\n        \":\" -> replace_b3c2a1.replace\n        replace_b3c2a1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_f8b7f root.main.string_replace_space_comma_dot_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7f5a4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_7f5a4d.input\n        characters_7f5a4d.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f8e3b9 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_f8e3b9.left\n            characters_7f5a4d.characters[0] -> equal_f8e3b9.right\n            equal_f8e3b9.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        characters_7f5a4d.characters[0] -> expression_b720d7.gen_0\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> and_80a119.left\n        1 -> and_80a119.right\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_7e4d1c root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_2c0e7a.input\n        strings_characters_2c0e7a.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) getat_a3e4c9 root.Std_k98ojb.List.GetAt {}\n            element_5f51f7 -> getat_a3e4c9.list\n            map_6030c9.index -> getat_a3e4c9.index\n            getat_a3e4c9.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        and_80a119.left -> if_e19a62.predicate\n        if_07b8c7.value -> and_80a119.right\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        if_e19a62.then -> continue_8ba06b\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_d1b2e0 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_1e3d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == first_char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_1e3d4f.input\n        characters_1e3d4f.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_3c8a1d root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_3c8a1d.left\n            input_f5c03d.characters[0] -> equal_3c8a1d.right\n            equal_3c8a1d.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.characters.length() -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n\n        input_f5c03d.characters[0] -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        Strings_k9q7yj.Characters(input_f5c03d) -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        Strings_k9q7yj.FirstItem(input_f5c03d) -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_9fba8c.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.next\n\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_5d7e1f root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == first)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"i > 0\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_9fba8c.gen_0\n        expression_9fba8c.result -> for_8cb3f6.reset\n        generaterange_038fce.to -> for_8cb3f6.items\n        map_6030c9.output_list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) firstitem_ea1b2c root.Std_k98ojb.List.FirstItem {}\n            element_5f51f7 -> firstitem_ea1b2c.list\n            firstitem_ea1b2c.item -> out_d0fd24\n        } -> map_6030c9.handler\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> map_6030c9.execute\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_c7e4c1 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_6a7d5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(c == first_char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {}\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_6a7d5f.input\n        characters_6a7d5f.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_c1b6a8 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_c1b6a8.left\n            expression_9fba8c.result -> equal_c1b6a8.right\n            equal_c1b6a8.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n\n        instance(x: 128, y: -20) firstitem_1d0a2e root.Std_k98ojb.List.FirstItem {}\n        characters_6a7d5f.characters -> firstitem_1d0a2e.list\n        firstitem_1d0a2e.item -> expression_9fba8c.gen_0\n\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> expression_b720d7.execute\n        for_8cb3f6.item -> expression_b720d7.gen_1\n\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        add_b4554f.result -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        for_8cb3f6.index -> add_b4554f.second\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == input[0])\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_3e6e9c.input\n        strings_characters_3e6e9c.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) getat_3c9a1b root.Std_k98ojb.List.GetAt {}\n            input_f5c03d -> getat_3c9a1b.list\n            element_5f51f7 -> getat_3c9a1b.index\n            getat_3c9a1b.item -> expression_b720d7.gen_0\n            expression_b720d7.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        expression_9fba8c.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_8ba06b\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_char_4a0e2d root.main.is_all_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_3f5e2a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_3f5e2a.input\n        characters_3f5e2a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_f1a9d6 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> eq_f1a9d6.left\n            input_f5c03d -> eq_f1a9d6.right\n            eq_f1a9d6.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        characters_3f5e2a.characters[0] -> expression_9fba8c.gen_0\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_e19a62.then -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.then -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_f0be66 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_5e3a8d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_9c1b7f\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_b2d6a4\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_0e5d3b\n\n        instance(x: 352, y: -493) map_8f7c9a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_d4b2a1 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_e6d8f3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_7e9c2a root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_4b5a1d root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_3f8b6c root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_9e7f2d root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 2136, y: -356) if_c8a1f3 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_7c9e4d root.Std_k98ojb.Math.Add {}\n\n        1 -> characters_d4b2a1.input\n        input_5e3a8d -> characters_d4b2a1.input\n        characters_d4b2a1.characters -> map_8f7c9a.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_6a2f5b\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_1d8e7c\n\n            instance(x: 106, y: 17) firstitem_9b3f4a root.Std_k98ojb.List.FirstItem {}\n            characters_d4b2a1.characters -> firstitem_9b3f4a.list\n            firstitem_9b3f4a.item -> out_1d8e7c\n\n            element_6a2f5b -> if_3f8b6c.predicate\n            1 -> if_3f8b6c.execute\n            if_3f8b6c.then -> continue_0e5d3b\n        } -> map_8f7c9a.handler\n\n        map_8f7c9a.output_list -> for_7e9c2a.items\n        for_7e9c2a.item -> expression_9e7f2d.gen_1\n        input_5e3a8d -> expression_9e7f2d.gen_0\n        expression_9e7f2d.result -> if_c8a1f3.predicate\n        for_7e9c2a.onItem -> if_c8a1f3.execute\n        if_c8a1f3.else -> continue_0e5d3b\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_f4a6c9\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_c8f2b7\n\n            instance(x: 106, y: 17) not_1d3e5a root.Std_k98ojb.Logic.Not {}\n            expression_9e7f2d.result -> not_1d3e5a.input\n            not_1d3e5a.output -> out_c8f2b7\n        } -> map_8f7c9a.handler\n\n        map_8f7c9a.output_list -> for_7e9c2a.items\n        for_7e9c2a.item -> lessthanorequal_e6d8f3.left\n        1 -> lessthanorequal_e6d8f3.right\n        lessthanorequal_e6d8f3.result -> if_3f8b6c.predicate\n        for_7e9c2a.onItem -> if_3f8b6c.execute\n        if_3f8b6c.else -> continue_0e5d3b\n\n        expression_9e7f2d.result -> and_4b5a1d.left\n        lessthanorequal_e6d8f3.result -> and_4b5a1d.right\n        and_4b5a1d.result -> if_c8a1f3.predicate\n\n        if_c8a1f3.then -> continue_0e5d3b\n        for_7e9c2a.done -> continue_0e5d3b\n        execute_9c1b7f -> for_7e9c2a.reset\n        if_c8a1f3.else -> for_7e9c2a.next\n\n        if_3f8b6c.value -> out_b2d6a4\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_char_5d0f2e root.main.is_all_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_c5e3a1 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_c5e3a1.input\n        characters_c5e3a1.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) notEqual_8b3a1c root.Std_k98ojb.Logic.NotEqual {}\n            element_5f51f7 -> notEqual_8b3a1c.left\n            characters_c5e3a1.characters[0] -> notEqual_8b3a1c.right\n            notEqual_8b3a1c.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.index -> expression_b720d7.gen_0\n        characters_c5e3a1.characters[0] -> expression_b720d7.gen_1\n        if_07b8c7.then -> if_e19a62.execute\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_f0be66 root.main.is_same_char {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 99, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> characters_547f34.input\n        characters_547f34.characters -> add_88bb8a.second\n        is_numeric_adfa16.value -> add_88bb8a.first\n        1 -> setter_375321.new_value\n        characters_547f34.characters -> count_digits_96023e.s_6b655b\n        is_numeric_adfa16.input -> characters_547f34.item\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -369) characters_61b38d root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        input_string_6b655b -> characters_61b38d.input\n        characters_61b38d.characters -> slice_547f34.list\n        0 -> slice_547f34.start\n        -1 -> slice_547f34.end\n        slice_547f34.slice -> count_digits_96023e.input_string_6b655b\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        is_numeric_adfa16.value -> add_88bb8a.condition\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter(count) -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_8a5f3c root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_1e7d2a root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -249) characters_9f4c3b root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        isnumeric_8a5f3c.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> slice_1e7d2a.execute\n        slice_1e7d2a.start -> 1\n        -1 -> slice_1e7d2a.end\n        s_6b655b -> slice_1e7d2a.input\n        slice_1e7d2a.output -> count_digits_96023e.s_6b655b\n        characters_9f4c3b.input -> count_digits_96023e.s_6b655b\n        characters_9f4c3b.characters -> isnumeric_8a5f3c.input\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) map_digits_96023e root.main.map_digits {}\n        instance(x: 656, y: -330) count_88bb8a root.Std_k98ojb.Iteration.Count {}\n        instance(x: 99, y: -249) is_numeric_f7f34 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        s_6b655b -> map_digits_96023e.s_6b655b\n        execute_cdac2a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> map_digits_96023e.execute_cdac2a\n        map_digits_96023e.continue_d9efd7 -> count_88bb8a.execute\n        map_digits_96023e.output_list -> count_88bb8a.items\n        count_88bb8a.count -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        instance(x: 97, y: -127) character_adfa16 root.Std_k98ojb.Strings.Characters {}\n        s_6b655b -> character_adfa16.input\n        character_adfa16.characters -> is_numeric_f7f34.input\n        is_numeric_f7f34.value -> map_digits_96023e.item\n    }\n\n    func(doc: \"maps each character to true if it's a digit, false otherwise.\") map_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output_list\") property(List) output_list_732a8a\n\n        instance(x: 80, y: -417) for_loop_3d7de6 root.Std_k98ojb.Std.For {\n            items: s_6b655b\n        }\n        instance(x: 656, y: -330) map_handler_88bb8a {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = append\n\n        for_loop_3d7de6.trigger -> execute_cdac2a\n        execute_cdac2a -> for_loop_3d7de6.reset\n        for_loop_3d7de6.done -> continue_d9efd7\n        for_loop_3d7de6.item -> map_handler_88bb8a.character\n        map_handler_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> for_loop_3d7de6.next\n        setter_375321.list_with_item -> output_list_732a8a\n\n        instance(x: 97, y: -249) is_numeric_f7f34 root.Std_k98ojb.Strings.IsNumeric {}\n        map_handler_88bb8a.character -> is_numeric_f7f34.input\n        is_numeric_f7f34.value -> map_handler_88bb8a.result\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) length_c4d2f9 root.Std_k98ojb.List.Length {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        input_string_6b655b -> length_c4d2f9.list\n        length_c4d2f9.length -> add_88bb8a.first\n        0 -> add_88bb8a.second\n\n        instance(x: -100, y: -500) filter_digits_f7c3e5 root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) bool {\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        filter_digits_f7c3e5.output_list -> length_c4d2f9.list\n\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> slice_547f34.start\n        1 -> slice_547f34.end\n        s_6b655b -> slice_547f34.list\n        slice_547f34.output -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        slice_547f34.output -> count_digits_96023e.s_6b655b\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        input_string_6b655b -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n\n        count_digits_96023e.input_string -> count_digits_96023e.next_char_1\n        is_numeric_adfa16.value -> count_digits_96023e.condition_2\n        count_digits_96023e.condition_2 -> ifexpression_3d7de6.else_2\n        ifexpression_3d7de6.else_2 -> add_88bb8a.execute\n\n        count_digits_96023e.next_char_1 -> is_numeric_adfa16.input\n        count_digits_96023e.continue_d9efd7 -> continue_d9efd7\n\n        setter_375321.continue -> count_digits_96023e.next_char_1\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n        1 -> add_88bb8a.second\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        slice_547f34.start -> 0\n        slice_547f34.end -> -1\n        s_6b655b -> slice_547f34.input\n        slice_547f34.output -> count_digits_96023e.s_6b655b\n        length_61b38d.list -> slice_547f34.output\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -370) characters_cde123 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        input_string_6b655b -> characters_cde123.input\n        characters_cde123.characters -> slice_547f34.list\n        -1 -> slice_547f34.start\n        0 -> slice_547f34.end\n        slice_547f34.slice -> is_numeric_adfa16.input\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        is_numeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        slice_547f34.slice -> count_digits_96023e.input_string_6b655b\n\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) map_96023e root.Std_k98ojb.Iteration.Map {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        s_6b655b -> map_96023e.items\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        map_96023e.handler -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> add_88bb8a.first\n\n        instance(x: 99, y: -249) constant_547f34 root.Std_k98ojb.Math.Constant {\n            value: 0\n        }\n        constant_547f34.result -> add_88bb8a.second\n        map_96023e.output_list -> add_88bb8a.input_list\n\n        instance(x: -202, y: -236) reduce_61b38d root.Std_k98ojb.Iteration.Reduce {}\n        reduce_61b38d.items -> add_88bb8a.result\n        0 -> reduce_61b38d.initial_value\n        add_88bb8a.result -> reduce_61b38d.accumulated_value\n\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.else -> map_96023e.execute_cdac2a\n        map_96023e.continue_d9efd7 -> reduce_61b38d.execute\n        reduce_61b38d.output_value -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n    }\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -20) div_7b1f9c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -17) data_cde0dc2  = 3\n        mul_f892a4.result -> div_7b1f9c.first\n        data_cde0dc2 -> div_7b1f9c.second\n        instance(x: 303, y: -42) pow_8e6d5c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_8e6d5c.x\n        data_instance(x: 330, y: -39) data_cde0dc3  = 2\n        pow_8e6d5c.y -> data_cde0dc3\n        instance(x: 303, y: -64) div_9f4b3a root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -61) data_cde0dc4  = 3\n        pow_8e6d5c.result -> div_9f4b3a.first\n        data_cde0dc4 -> div_9f4b3a.second\n        instance(x: 303, y: -86) mul_1a7c2d root.Std_k98ojb.Math.Mul {}\n        div_7b1f9c.result -> mul_1a7c2d.first\n        div_9f4b3a.result -> mul_1a7c2d.second\n        instance(x: 303, y: -109) pow_b0e5b root.Std_k98ojb.Math.Pow {}\n        mul_1a7c2d.result -> pow_b0e5b.x\n        data_instance(x: 330, y: -106) data_cde0dc5  = 2\n        pow_b0e5b.y -> data_cde0dc5\n        instance(x: 303, y: -132) div_e6a1c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -129) data_cde0dc6  = 3\n        pow_b0e5b.result -> div_e6a1c.first\n        data_cde0dc6 -> div_e6a1c.second\n        instance(x: 303, y: -155) add_9d2d8 root.Std_k98ojb.Math.Add {}\n        div_e6a1c.result -> add_9d2d8.gen_0\n        div_64046c.result -> add_9d2d8.gen_1\n        instance(x: 303, y: -179) count_4f5a3 root.Std_k98ojb.Math.Count {}\n        n_3a3116 -> count_4f5a3.count\n        instance(x: 303, y: -203) reduce_f9c2e root.Std_k98ojb.Math.Reduce {\n            reducer: \"acc+val\"\n        }\n        add_9d2d8.result -> reduce_f9c2e.gen_1\n        count_4f5a3.count -> reduce_f9c2e.gen_0\n        instance(x: 303, y: -227) for_6b7e2 root.Std_k98ojb.Math.For {\n            items: \"List.GenerateRange(1,n)\"\n        }\n        n_3a3116 -> for_6b7e2.items\n        reduce_f9c2e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_8d5f4 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) pow_9f8e5c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9f8e5c.x\n        data_instance(x: 330, y: -2) data_b3a7d6  = 4\n        data_b3a7d6 -> pow_9f8e5c.y\n\n        instance(x: 23, y: -2) mul_1b3e0c root.Std_k98ojb.Math.Mul {}\n        n_3a3116 -> mul_1b3e0c.first\n        data_instance(x: 330, y: -3) data_8f9d4e  = 1\n        data_8f9d4e -> mul_1b3e0c.second\n\n        instance(x: 303, y: -2) for_d6a7e5 root.Std_k98ojb.Std.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116 + 1)\n        }\n        for_d6a7e5.index -> mul_f892a4.first\n        for_d6a7e5.item -> expression_2d6da6.gen_0\n        for_d6a7e5.done -> sum_365f7b\n\n        instance(x: 23, y: -3) add_e9c8b1 root.Std_k98ojb.Math.Add {}\n        pow_9f8e5c.result -> add_e9c8b1.first\n        mul_f892a4.result -> add_e9c8b1.second\n\n        instance(x: 303, y: -3) if_7f6d2b root.Std_k98ojb.Std.If {\n            input: for_d6a7e5.index == n_3a3116\n        }\n        add_e9c8b1.result -> if_7f6d2b.then\n        sum_365f7b -> if_7f6d2b.else_\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_ba4e3f root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -24) pow_1b5c7e root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_1b5c7e.x\n        data_instance(x: 330, y: 133) data_8f2a4d  = 4\n        data_8f2a4d -> pow_1b5c7e.y\n        pow_1b5c7e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) pow_9f5e7b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9f5e7b.x\n        data_instance(x: 330, y: 2) data_b8d4a0 = 4\n        data_b8d4a0 -> pow_9f5e7b.y\n\n        instance(x: 303, y: -1) sum_f892a4 root.Std_k98ojb.Math.Add {}\n        sum_f892a4.first -> sum_fourth_power.reset\n        pow_9f5e7b.result -> sum_f892a4.second\n        sum_f892a4.result -> sum_365f7b\n\n        instance(x: 303, y: -1) for_loop_a3c6b root.Std_k98ojb.For {}\n        n_3a3116 -> for_loop_a3c6b.items.length\n        for_loop_a3c6b.index -> n_3a3116\n        sum_f892a4.result -> for_loop_a3c6b.on_item\n        for_loop_a3c6b.next -> sum_f892a4.first\n\n        instance(x: 303, y: -1) count_2d6da6 root.Std_k98ojb.Count {}\n        n_3a3116 -> count_2d6djf.items.length\n        count_2d6djf.count -> for_loop_a3c6b.trigger\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -22) pow_a5b9f8 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a5b9f8.x\n        data_instance(x: 330, y: -23) data_cde0dc2 = 4\n\n        data_cde0dc2 -> pow_a5b9f8.y\n        pow_a5b9f8.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        data_instance(x: 330, y: 133) data_e4f9d5  = 16\n        instance(x: 23, y: -1) mul_6b8c7e root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_3a0e3c root.Std_k98ojb.Math.Div {}\n        data_e4f9d5 -> div_3a0e3c.second\n        mul_6b8c7e.result -> div_3a0e3c.first\n        expression_2d6da6.result -> mul_6b8c7e.second\n        n_3a3116 -> mul_6b8c7e.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n\n        instance(x: 12, y: 136) expression_b1a9a4 root.Std_k98ojb.Math.Expression {\n            expression: \"n*n\"\n        }\n        n_3a3116 -> expression_b1a9a4.gen_0\n        div_64046c.first -> mul_f892a4.second\n        expression_b1a9a4.result -> mul_f892a4.first\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_5c0f8e  = 3\n        div_64046c.second -> div_3d6e2a.first\n        mul_f892a4.result -> div_3d6e2a.second\n        data_5c0f8e -> div_3d6e2a.second\n\n        instance(x: 303, y: 2) div_3d6e2a root.Std_k98ojb.Math.Div {}\n        n_3a3116 -> div_64046c.first\n        data_cde0dc -> div_64046c.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_a7c5f9 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_b8d3a0 = 4\n        pow_a7c5f9.y -> data_b8d3a0\n        expression_2d6da6.result -> pow_a7c5f9.x\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_a7c5f9.result -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_ae5c3a root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        pow_ae5c3a.second -> data_cde0dc\n        expression_2d6da6.result -> pow_ae5c3a.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 23, y: -1) for_loop_f892a4 root.Std_k98ojb.For {\n            items: \"range(1,n+1)\"\n        }\n        instance(x: 303, y: 2) add_b3f8e9 root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 133) data_5c0a4d  = 0\n        add_b3f8e9.second -> data_5c0a4d\n        pow_ae5c3a.result -> add_b3f8e9.first\n\n        for_loop_f892a4.items -> n_3a3116\n        for_loop_f892a4.on_item -> expression_2d6da6.trigger\n        for_loop_f892a4.done -> sum_365f7b\n        pow_ae5c3a.result -> add_b3f8e9.first\n        add_b3f8e9.result -> data_5c0a4d\n\n        instance(x: 303, y: 2) set_result_d1f6a2 root.Std_k98ojb.Set {\n            value: \"data_5c0a4d\"\n        }\n        set_result_d1f6a2.value -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_instance_f892a4 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: 100) pow_1b5e8f root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_1b5e8f.x\n        data_instance(x: 450, y: 120) data_pow = 4\n\n        data_pow -> pow_1b5e8f.y\n        pow_1b5e8f.result -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) mul_7a5f9c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_b0e6d8  = 3\n        instance(x: 12, y: 136) expression_1e4a7c root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_9f5d8c root.Std_k98ojb.Math.Div {}\n        data_b0e6d8 -> div_9f5d8c.second\n        mul_f892a4.result -> div_9f5d8c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_9f5d8c.result -> mul_7a5f9c.first\n        expression_1e4a7c.result -> mul_7a5f9c.second\n        n_3a3116 -> expression_1e4a7c.gen_0\n        mul_7a5f9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_a2d8f5 root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5a8f7d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_b9c1e3\n\n        instance(x: 94, y: -105) mul_6b0a4d root.Std_k98ojb.Math.Mul {}\n        size_5a8f7d -> mul_6b0a4d.first\n        6 -> mul_6b0a4d.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_f9c3e2\n\n            out(x: 333, y: -50, name: \"\") property(Number) _8f7a1b\n\n            instance(x: 92, y: -22) mul_4d5a8f root.Std_k98ojb.Math.Mul {}\n            x_f9c3e2 -> mul_4d5a8f.first\n            x_f9c3e2 -> mul_4d5a8f.second\n            mul_4d5a8d.result -> _8f7a1b\n        } -> mul_6b0a4d.handler\n        mul_6b0a4d.result -> surfaceArea_b9c1e3\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e9c7f\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_cbb7bd\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_8e9c7f -> mul_f2330d.first\n        size_8e9c7f -> mul_f2330d.second\n        mul_f2330d.result -> surfaceArea_cbb7bd\n\n        instance(x: 94, y: -135) mul_1b6a3f root.Std_k98ojb.Math.Mul {}\n        surfaceArea_cbb7bd -> mul_1b6a3f.first\n        6 -> mul_1b6a3f.second\n        mul_1b6a3f.result -> surfaceArea_cbb7bd\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3e1f9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_d4b7c0\n\n        instance(x: 94, y: -105) mul_8a2c5e root.Std_k98ojb.Math.Mul {}\n        size_3e1f9d -> mul_8a2c5e.first\n        size_3e1f9d -> mul_8a2c5e.second\n        mul_8a2c5e.result -> surface_area_d4b7c0\n\n        instance(x: 94, y: -140) mul_b6f9ed root.Std_k98ojb.Math.Mul {}\n        mul_8a2c5e.result -> mul_b6f9ed.first\n        6 -> mul_b6f9ed.second\n        mul_b6f9ed.result -> surface_area_d4b7c0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1f0a2d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_5b3c7e\n\n        instance(x: 94, y: -105) mul_a9f6e8 root.Std_k98ojb.Math.Mul {}\n        size_1f0a2d -> mul_a9f6e8.first\n        size_1f0a2d -> mul_a9f6e8.second\n        mul_a9f6e8.result -> surfaceArea_5c4b7f\n\n        instance(x: 94, y: -140) mul_b3f7a1 root.Std_k98ojb.Math.Mul {}\n        6 -> mul_b3f7a1.first\n        surfaceArea_5c4b7f -> mul_b3f7a1.second\n        mul_b3f7a1.result -> surfaceArea_5b3c7e\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5f2a1d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_b9e3c4\n\n        instance(x: 94, y: -105) mul_7f6b8c root.Std_k98ojb.Math.Mul {}\n        size_5f2a1d -> mul_7f6b8c.first\n        6 -> mul_7f6b8c.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_9e4a3f\n\n            out(x: 333, y: -50, name: \"\") property(Number) _2d1a8f\n\n            instance(x: 92, y: -22) mul_7b6c9d root.Std_k98ojb.Math.Mul {}\n            x_9e4a3f -> mul_7b6c9d.first\n            x_9e4a3f -> mul_7b6c9d.second\n            mul_7b6c9d.result -> _2d1a8f\n        } -> mul_7f6b8c.handler\n        mul_7f6b8c.result -> surfaceArea_b9e3c4\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a9f2c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1d7b8e\n\n        instance(x: 94, y: -105) mul_a0f5e4 root.Std_k98ojb.Math.Mul {}\n        size_3a9f2c -> mul_a0f5e4.first\n        size_3a9f2c -> mul_a0f5e4.second\n        func() {\n            in(x: -121, y: -37, name: \"result\") property(Number) result_7d8b1c\n\n            out(x: 333, y: -50, name: \"\") property(Number) _6a2b9f\n\n            instance(x: 92, y: -22) mul_b4e3c5 root.Std_k98ojb.Math.Mul {}\n            result_7d8b1c -> mul_b4e3c5.first\n            6 -> mul_b4e3c5.second\n            mul_b4e3c5.result -> _6a2b9f\n        } -> mul_a0f5e4.handler\n        mul_a0f5e4.result -> surface_area_1d7b8e\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1f9d7c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_e6b8e5\n\n        instance(x: 94, y: -105) mul_f3a4b2 root.Std_k98ojb.Math.Mul {}\n        size_1f9d7c -> mul_f3a4b2.first\n        6 -> mul_f3a4b2.second\n        mul_f3a4b2.result -> surface_area_e6b8e5\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_1d9c7f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a8f6d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_1c9b0e root.Std_k98ojb.Math.Mul {}\n        size_3a8f6d -> mul_1c9b0e.first\n        6 -> mul_1c9b0e.second\n        mul_1c9b0e.result -> result_cbb7bd\n\n        instance(x: -4, y: -45) mul_2f5e3a root.Std_k98ojb.Math.Mul {}\n        size_3a8f6d -> mul_2f5e3a.first\n        mul_1c9b0e.result -> mul_2f5e3a.second\n        mul_2f5e3a.result -> result_cbb7bd\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3e1c5d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_8f2b6a\n\n        instance(x: 94, y: -105) mul_a7b4b9 root.Std_k98ojb.Math.Mul {}\n        size_3e1c5d -> mul_a7b4b9.first\n        size_3e1c5d -> mul_a7b4b9.second\n        mul_a7b4b9.result -> surface_area_8f2b6a\n\n        instance(x: 94, y: -135) mul_b0d4ea root.Std_k98ojb.Math.Mul {}\n        6 -> mul_b0d4ea.first\n        mul_a7b4b9.result -> mul_b0d4ea.second\n        mul_b0d4ea.result -> surface_area_8f2b6a\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5e8f6c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7b2d9a\n\n        instance(x: 94, y: -105) mul_1a0f4e root.Std_k98ojb.Math.Mul {}\n        size_5e8f6c -> mul_1a0f4e.first\n        size_5e8f6c -> mul_1a0f4e.second\n        mul_1a0f4e.result -> surface_area_7b2d9a\n\n        instance(x: 94, y: -145) mul_3d8b7a root.Std_k98ojb.Math.Mul {}\n        mul_1a0f4e.result -> mul_3d8b7a.first\n        6 -> mul_3d8b7a.second\n        mul_3d8b7a.result -> surface_area_7b2d9a\n    }\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.diff_largest_smallest.list_max_node {}\n    instance(x: 426, y: -423) min_node root.main.diff_largest_smallest.list_min_node {}\n    instance(x: 426, y: -543) sub_node root.main.diff_largest_smallest.sub_node {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 726, y: -353) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -378) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -453) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.diff_max_min {}\n    instance(x: 426, y: -378) min_node root.main.diff_max_min {}\n    instance(x: 426, y: -453) sub_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        \n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -378) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -453) sub_node root.Std_k98ojb.Math.Sub {}\n\n        items_ai -> min_node.items\n        items_ai -> max_node.items\n\n        min_node.min -> sub_node.first\n        max_node.max -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -503) sub_diff_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_diff_node.first\n        list_min_node.min -> sub_diff_node.second\n        sub_diff_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) max_node root.Std_k98ojb.List.Max {}\n\n        items_ai -> min_node.items\n        items_ai -> max_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        min_node.min -> sub_node.first\n        max_node.max -> sub_node.second\n        \n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_val_ai\n\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_val_ai\n\n        instance(x: 426, y: -519) sub_node root.Std_k98ojb.Math.Sub {}\n        max_val_ai -> sub_node.first\n        min_val_ai -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_val_ai property(Number)\n    instance(x: 426, y: -423) min_val_ai property(Number)\n\n    instance(x: 426, y: -519) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -383) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 726, y: -303) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) check_even_7b3b7b Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        instance(x: 1000, y: 76) compare_evenness root.Std_k98ojb.Logic.Equal {\n            left: check_even_even.result\n            right: 0\n        }\n        check_even_7b3b7b.result -> compare_evenness.left\n        compare_evenness.result -> is_even_ai\n    }\n\n}\n\ninstance(x: -34, y: 127) split_node root.main.CheckEven {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n            then: true\n            else: false\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.value -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_1e5f3a root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_1e5f3a.input\n        if_1e5f3a.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) and_7b3b7b root.Std_k98ojb.Logic.And {\n            left: \"number % 2 == 0\"\n            right: \"true\"\n        }\n        number_ai -> and_7b3b7b.left\n        and_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_5d3f2a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_7b8c4e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            in(x: -113, y: 54, name: \"index\") property(Number) index_d4e8a1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3f2b9d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_1c8e4b root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            elem_9f6850 -> contains_3f2b9d.input\n            input_5d3f2a -> contains_3f2b9d.contains\n\n            slice_1c8e4b.start -> index_d4e8a1\n            0 -> slice_1c8e4b.end\n            input_5d3f2a -> slice_1c8e4b.list\n\n            notequal_807ffd.right -> contains_3f2b9d.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -55, y: 529) characters_c1e8d5 root.Std_k98ojb.Strings.Characters {}\n        input_5d3f2a -> characters_c1e8d5.input\n        characters_c1e8d5.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_7b8c4e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(Char) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3n4o5p\n\n            instance(x: 89, y: 29) contains_qr6s7t root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_uv8w9x root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) characters_yz0a1b root.Std_k98ojb.Strings.Characters {}\n\n            char_jk1l2m -> contains_qr6s7t.contains\n            slice_uv8w9x.start -> -1\n            slice_uv8w9x.end -> List.Length(characters_yz0a1b.characters) + 1\n            characters_yz0a1b.input -> input_string_1a2b3c\n            slice_uv8w9x.list -> characters_yz0a1b.characters\n            contains_qr6s7t.result -> bool_3n4o5p\n        } -> find_repeated_7g8h9i.predicate\n\n        instance(x: 100, y: -50) map_chars_cde2f3 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_g4h5i6\n            out(x: 515, y: 44, name: \"index\") property(Number) index_j7k8l9\n\n            map_chars_cde2f3.handler -> find_repeated_7g8h9i\n            characters_yz0a1b.characters -> map_chars_cde2f3.items\n        } -> find_repeated_7g8h9i.items\n\n        find_repeated_7g8h9i.item -> repeated_char_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_8f4a3d\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_7b9c2e\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_a1f5c2\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3d9a7e\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            chars -> contains_1088d5.input\n            char_a1f5c2 -> contains_1088d5.contains\n\n            contains_1088d5.result -> notequal_807ffd.left\n            false -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_3d9a7e\n        } -> find_repeated_char_6d05b0.predicate\n        chars -> find_repeated_char_6d05b0.items\n\n        instance(x: -150, y: 50) characters_5c8f2b root.Std_k98ojb.Strings.Characters {}\n        string_8f4a3d -> characters_5c8f2b.input\n        characters_5c8f2b.characters -> chars\n\n        find_repeated_char_6d05b0.item -> char_7b9c2e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_3c2d7a\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_f4b8e6\n\n        instance(x: 0, y: 0) find_5f08d9 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_b1c3a2\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8f7d9e\n\n            instance(x: 89, y: 29) contains_6b4d5a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_empty_1c2b3d root.Std_k98ojb.List.NotEmpty {}\n\n            List -> contains_6b4d5a.list\n            char_b1c3a2 -> contains_6b4d5a.contains\n\n            List -> not_empty_1c2b3d.list\n            bool_8f7d9e -> not_empty_1c2b3d.isEmpty\n\n            and_2b8f4d root.Std_k98ojb.Logic.And {}\n            contains_6b4d5a.result -> and_2b8f4d.left\n            not_empty_1c2b3d.result -> and_2b8f4d.right\n            and_2b8f4d.result -> bool_8f7d9e\n\n        } -> find_5f08d9.predicate\n\n        instance(x: 0, y: -50) characters_7a6c1e root.Std_k98ojb.Strings.Characters {}\n        input_string_3c2d7a -> characters_7a6c1e.input\n        List -> find_5f08d9.items\n        characters_7a6c1e.characters -> List\n\n        find_5f08d9.item -> char_f4b8e6\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) find_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_a1b2c3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d4e5f6\n\n            instance(x: 89, y: 29) contains_10j11k root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) and_12l13m root.Std_k98ojb.Logic.And {}\n\n            instance(x: 150, y: 50) characters_14n15o root.Std_k98ojb.Strings.Characters {}\n            characters_14n15o.input -> contains_10j11k.contains\n            char_a1b2c3 -> contains_10j11k.input\n\n            instance(x: 200, y: 60) index_of_16p17q root.Std_k98ojb.List.IndexOf {}\n            characters_14n15o.output -> index_of_16p17q.list\n            char_a1b2c3 -> index_of_16p17q.item\n\n            and_12l13m.left -> contains_10j11k.result\n            0 -> index_of_16p17q.index\n            index_of_16p17q.index > 0 -> and_12l13m.right\n\n            and_12l13m.result -> bool_d4e5f6\n        } -> find_7g8h9i.predicate\n        characters_14n15o.input -> find_7g8h9i.items\n        find_7g8h9i.item -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_5a3d7f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_8b2c4e\n\n        instance(x: 0, y: 0) find_first_repeat_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"character\") property(Char) character_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) characters_1088d5 root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n            instance(x: 150, y: 50) slice_1a2c3e root.Std_k98ojb.List.Slice {}\n\n            input_string_5a3d7f -> characters_1088d5.input\n            characters_1088d5.characters -> slice_1a2c3e.list\n\n            character_9f6850 -> contains_807ffd.contains\n            slice_1a2c3e.start -> 0\n            slice_1a2c3e.end -> -1\n            slice_1a2c3e.result -> contains_807ffd.input\n\n            contains_807ffd.result -> bool_af09a7\n        } -> find_first_repeat_6d05b0.predicate\n        characters_1088d5.characters -> find_first_repeat_6d05b0.items\n        find_first_repeat_6d05b0.item -> char_8b2c4e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_d4e5f6\n\n        instance(x: 0, y: 0) find_first_repeat_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_n3o4p5\n\n            instance(x: 89, y: 29) contains_6q7r8s root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_t9u0v1 root.Std_k98ojb.Logic.NotEqual {}\n\n            chars_ab12cd <- input_1a2b3c -> root.Std_k98ojb.Strings.Characters {}\n            find_first_repeat_7g8h9i.index -> contains_6q7r8s.contains\n            chars_ab12cd -> contains_6q7r8s.input\n\n            0 -> notequal_t9u0v1.right\n            contains_6q7r8s.result -> notequal_t9u0v1.left\n            notequal_t9u0v1.result -> bool_n3o4p5\n        } -> find_first_repeat_7g8h9i.predicate\n\n        chars_ab12cd -> find_first_repeat_7g8h9i.items\n        find_first_repeat_7g8h9i.item -> char_d4e5f6\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_3a2d1e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_7f4b6c\n\n        instance(x: 0, y: 0) find_repeated_char_9b5f8 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1d2a3c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4e5f6b\n\n            instance(x: 89, y: 29) contains_7f8b9c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_1a2b3d root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) notempty_6e5f4d root.Std_k98ojb.List.NotEmpty {}\n\n            input_string_3a2d1e -> contains_7f8b9c.input\n            char_1d2a3c -> contains_7f8b9c.contains\n\n            contains_7f8b9c.result -> notempty_6e5f4d.list\n            slice_1a2b3d.start -> 0\n            slice_1a2b3d.end -> -1\n            input_string_3a2d1e -> slice_1a2b3d.list\n\n            notempty_6e5f4d.isEmpty -> bool_4e5f6b\n        } -> find_repeated_char_9b5f8.predicate\n\n        instance(x: 0, y: -50) characters_8c7f6 root.Std_k98ojb.Strings.Characters {}\n        input_string_3a2d1e -> characters_8c7f6.input\n\n        characters_8c7f6.characters -> find_repeated_char_9b5f8.items\n        find_repeated_char_9b5f8.item -> char_7f4b6c\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_5d8f2a\n\n        out(x: 593, y: -1, name: \"character\") property(String) char_b4c3de\n\n        instance(x: 0, y: 0) find_repeated_char_6e05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_a9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) characters_1088d5 root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n            instance(x: 410, y: 45) filter_907fff root.Std_k98ojb.Iteration.Filter {}\n\n            input_5d8f2a -> characters_1088d5.input\n            characters_1088d5.characters -> filter_907fff.items\n\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(String) item_9f6850\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_b8a7c3\n\n                instance(x: 89, y: 29) slice_1088d5 root.Std_k98ojb.List.Slice {}\n                instance(x: 310, y: 35) contains_check_807ffd root.Std_k98ojb.Strings.Contains {}\n\n                item_9f6850 -> slice_1088d5.item\n                filter_907fff.output_list -> slice_1088d5.list\n\n                func() {\n                    in(x: -113, y: 34, name: \"item\") property(String) item_a9f6850\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_c7a9b3\n\n                    instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n\n                    item_a9f6850 -> contains_1088d5.item\n                    slice_1088d5.output_list -> contains_1088d5.list\n\n                    contains_1088d5.result -> bool_c7a9b3\n                } -> contains_check_807ffd.handler\n                contains_check_807ffd.output_list -> bool_b8a7c3\n            } -> filter_907fff.handler\n            filter_907fff.output_list -> characters_1088d5.characters\n\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(String) item_d9f6850\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e7a9b3\n\n                instance(x: 89, y: 29) contains_2088d5 root.Std_k98ojb.List.Contains {}\n\n                item_d9f6850 -> contains_2088d5.item\n                filter_907fff.output_list -> contains_2088d5.list\n\n                contains_2088d5.result -> bool_e7a9b3\n            } -> contains_807ffd.handler\n            contains_807ffd.input -> char_a9f6850\n            contains_807ffd.contains -> bool_af09a7\n        } -> find_repeated_char_6e05b0.predicate\n        characters_1088d5.characters -> find_repeated_char_6e05b0.items\n        find_repeated_char_6e05b0.item -> char_b4c3de\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_abed4a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_807ffd root.Std_k98ojb.List {}\n            instance(x: 400, y: 45) add_9c2f6a root.Std_k98ojb.List.Add {}\n\n            string_abed4a -> contains_1088d5.input\n            char_9f6850 -> contains_1088d5.contains\n\n            list_807ffd.listWithItem -> add_9c2f6a.list\n            char_9f6850 -> add_9c2f6a.item\n\n            contains_1088d5.result -> bool_af09a7\n\n            find_6d05b0.predicate <- bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 100, y: -10) characters_1a2b3c root.Std_k98ojb.Strings.Characters {}\n        string_abed4a -> characters_1a2b3c.input\n\n        list_807ffd <- add_9c2f6a.listWithItem\n        characters_1a2b3c.characters -> find_6d05b0.items\n\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> slice_input.items\n\n        instance(x: 426, y: -423) list_slice_node Std_k98ojb.List.Slice {\n            start: 1,\n            end: 2\n        }\n        slice_input.items -> list_slice_node.list\n        list_slice_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -453) handler_node root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 426, y: -603) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_filter_node.items\n        list_filter_node.output_list -> min_node.items\n\n        min_node.min -> second_min_ai\n        \n        handler_node.left -> min_node.min\n        handler_node.right -> list_filter_node.item\n        list_filter_node.handler -> handler_node\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.listWithItem -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        instance(x: 426, y: -519) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.listWithoutItem -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithoutItem -> slice_start_node.list\n\n        instance(x: 426, y: -403) list_slice_node root.Std_k98ojb.List.Slice {\n            start: 1,\n            end: -1\n        }\n        slice_start_node.list -> list_slice_node.list\n        list_slice_node.listWithoutItem -> min_second_node.items\n\n        instance(x: 426, y: -493) list_min_node root.Std_k98ojb.List.Min {}\n        min_second_node.items -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_and_slice_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -453) handler_node root.Std_k98ojb.Logic.NotEqual {}\n        items_ai -> list_filter_node.items\n        func(handler: handler_node) {\n            in(x: -248, y: -348, name: \"item\") property(Number) item_ai\n            out(x: 159, y: -318, name: \"result\") property(Boolean) result_ai\n\n            instance(x: -426, y: -483) min_node root.Std_k98ojb.List.Min {}\n            items_ai -> min_node.items\n            min_node.min -> handler.left\n\n            item_ai -> handler.right\n            handler.result -> result_ai\n        }\n\n        list_filter_node.output_list -> temp_list_ai\n\n        instance(x: 426, y: -603) list_min_node root.Std_k98ojb.List.Min {}\n        temp_list_ai -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) slice_node Std_k98ojb.List.Slice {}\n        list_sort_node.list -> slice_node.list\n        instance(x: 426, y: -588) get_item_node Std_k98ojb.List.GetAt {}\n        slice_node.slice -> get_item_node.list\n        instance(x: 426, y: -723) second_min_finder Node {\n            trigger() {\n                if (List.Length(get_item_node.item) > 1) {\n                    get_item_node.index = 1\n                }\n            }\n        }\n        slice_node.start -> second_min_finder.start\n        slice_node.end -> second_min_finder.end\n        get_item_node.item -> second_min_finder.item\n        instance(x: 426, y: -858) final_output Node {\n            trigger() {\n                if (List.Length(get_item_node.item) > 1) {\n                    second_min_finder.item -> final_output.output\n                }\n            }\n        }\n        second_min_finder.item -> final_output.input\n        final_output.output -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -423) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        slice_node.start = 1\n        slice_node.end = -1\n        slice_node.slice -> property(List) sorted_items_ai\n\n        instance(x: 426, y: -519) min_node root.Std_k98ojb.List.Min {}\n        sorted_items_ai -> min_node.items\n        min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -403) list_slice_node Std_k98ojb.List.Slice {}\n        list_sort_node.listWithItem -> list_slice_node.list\n        instance(x: 426, y: -503) first_item_node Std_k98ojb.List.FirstItem {}\n        list_slice_node.listWithoutItem -> first_item_node.list\n        instance(x: 426, y: -603) second_item_node Std_k98ojb.List.FirstItem {}\n        list_slice_node.listWithItem -> second_item_node.list\n\n        second_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -403) slice_list_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.list -> slice_list_node.list\n        property(Number) start { value: 1 }\n        property(Number) end { value: -1 }\n        slice_list_node.slice -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -453) handler_instance root.Std_k98ojb.Handler {}\n        \n        items_ai -> list_filter_node.items\n        list_filter_node.output_list -> slice_input\n\n        instance(x: 426, y: -603) slice_node root.Std_k98ojb.List.Slice {}\n        slice_input -> slice_node.list\n        \n        instance(x: 426, y: -753) min_node root.Std_k98ojb.List.Min {}\n        slice_node.slice -> min_node.list\n        min_node.min -> second_min_ai\n\n        handler_instance.handler(list_filter_node.handler)\n        \n        func(doc: \"filter out numbers greater than or equal to the minimum.\") filter_handler {\n            in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n            in(x: 159, y: -219, name: \"min_value\") property(Number) min_value_ai\n            out(x: 159, y: -219, name: \"result\") property(Boolean) result_ai\n\n            instance(x: 426, y: -303) less_than_node root.Std_k98ojb.Math.LessThan {}\n            item_ai -> less_than_node.left\n            min_value_ai -> less_than_node.right\n            less_than_node.result -> result_ai\n        }\n\n        instance(x: 426, y: -453) filter_handler_instance root.main.filter_handler {}\n\n        func(doc: \"find the minimum value in the list.\") find_min {\n            in(x: -426, y: -248, name: \"items\") property(List) items_ai\n            out(x: 159, y: -219, name: \"min_value\") property(Number) min_value_ai\n\n            instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n            items_ai -> list_min_node.items\n            list_min_node.min -> min_value_ai\n        }\n\n        instance(x: 426, y: -603) find_min_instance root.main.find_min {}\n\n        find_min_instance.items -> slice_input\n        find_min_instance.min_value -> handler_instance.context\n\n        filter_handler_instance.item -> handler_instance.item\n        filter_handler_instance.min_value -> handler_instance.context\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 4982,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_intersection {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_b5c9d8\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty: instance(x: -8, y: -53) not_empty_a5c4d9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty.list\n        not_empty.isEmpty -> has_common_element_b5c9d8\n    }\n\n    \n\n    instance(x: 93, y: -122) list_intersection_cbc0b6 root.main.list_intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_9e5d3a\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty_7e5d3a := instance(x: 133, y: -131) NotEmpty_e4c9b8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty_7e5d3a.list\n        not_empty_7e5d3a.isEmpty -> has_common_element_9e5d3a\n   }\n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7d4e5c\n\n        instance(x: 133, y: -131) intersection_a9b8f3 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_a9b8f3.left\n        list2_c62075 -> intersection_a9b8f3.right\n        intersection_a9b8f3.intersect -> has_common_element_7d4e5c\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_ea1b6b root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_9a5d3c\n\n        instance(x: 133, y: -131) intersection_4b1e8f root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4b1e8f.left\n        list2_c62075 -> intersection_4b1e8f.right\n        intersection_4b1e8f.intersect -> result_9a5d3c.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_b0a7f6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_f9e8d4\n\n        instance(x: 133, y: -131) intersection_1b7f5a root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1b7f5a.left\n        list2_c62075 -> intersection_1b7f5a.right\n\n        instance(x: 133, y: -181) not_empty_e8d9c4 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b7f5a.intersect -> not_empty_e8d9c4.list\n        not_empty_e8d9c4.isEmpty -> result_f9e8d4\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_b3c0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_5d3e9a\n\n        instance(x: 133, y: -131) intersection_1c8b0f root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1c8b0f.left\n        list2_c62075 -> intersection_1c8b0f.right\n\n        instance(x: 134, y: -157) notempty_a7d9e4 root.Std_k98ojb.List.NotEmpty {}\n        intersection_1c8b0f.intersect -> notempty_a7d9e4.list\n        notempty_a7d9e4.isEmpty -> result_5d3d9a\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_b2f6f9 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3a5d7e\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty_3a5d7e: instance(x: 245, y: -54) not_empty_3a5d7e root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty_3a5d7e.list\n        not_empty_3a5d7e.isEmpty -> has_common_element_3a5d7e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_5a8c6d\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> has_common_element_5a8c6d.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_7e4c8a\n\n        instance(x: 133, y: -131) intersection_e5b3f6 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_e5b3f6.left\n        list2_c62075 -> intersection_e5b3f6.right\n        not_empty_7e4c8a <- intersection_e5b3f6.intersect.NotEmpty()\n        not_empty_7e4c8a.isEmpty -> has_common_7e4c8a\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") is_consecutive {\n        in(x: -526, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_ae4d9c\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c9f1c4 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_ae4d9c -> sub_c9f1c4.first\n            _index_769593 -> sub_c9f1c4.second\n            sub_c9f1c4.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) filter_32727d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n\n            _index_769593 -> filter_32727d.items\n            current_81298e -> sub_c76d2b.first\n            List.GetAt(list_07cae4, Math.Floor(_index_769593 + 1)) -> sub_c76d2b.second\n            1 -> output_efbc78\n            sub_c76d2b.result -> equal_7836b4.left\n            List.GetAt(list_07cae4, _index_769593) -> equal_7836b4.right\n            equal_7836b4.result -> output_efbc78\n        } -> filter_32727d.handler\n\n        list_07cae4 -> filter_32727d.items\n        not_75283f.result -> output_8d07dc\n        filter_32727d.output_list.Length() -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_f9a7ed root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) any_75283f root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_a1b2c3\n            in(x: -23, y: 79, name: \"_prev\") property(Number) _prev_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_d76d2b root.Std_k98ojb.Math.Sub {}\n            current_a1b2c3 -> sub_d76d2b.first\n            _prev_769593 -> sub_d76d2b.second\n            sub_d76d2b.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_diff\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_ad7b2a root.Std_k98ojb.Logic.Equal {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_diff -> equal_ad7b2a.left\n            1 -> equal_ad7b2a.right\n            equal_ad7b2a.result -> bool_4524be\n        } -> any_75283f.handler\n\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_number\n            out(x: 521, y: -28, name: \"_prev\") property(Number) _prev_efbc78\n\n            instance(x: 74, y: -23) set_prev_abc123 {}\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(Number) current_number\n                out(x: 521, y: -28, name: \"_prev\") property(Number) _prev_efbc78\n\n                current_number -> _prev_efbc78\n            } -> set_prev_abc123.handler\n        } -> map_c73e3b.handler\n\n        map_c73e3b.output_list -> any_75283f.list\n        true -> any_75283f.item\n        any_75283f.is_contained -> output_8d07dc\n    }\n\n    instance(x: -293, y: -5) has_consecutive_fgh456 root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -528, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_a1d7a5\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_e9f5b4 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_a1d7a5 -> sub_e9f5b4.first\n            _index_769593 -> sub_e9f5b4.second\n            sub_e9f5b4.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_f7e9b6 root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"check consecutive numbers\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 71, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            sub_c76d2b.second -> _index_769593\n            current_81298e -> sub_c76d2b.first\n            sub_c76d2b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_bool_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_ad7b2a root.Std_k98ojb.Logic.Not {}\n            current_bool_81298e -> not_ad7b2a.input\n            not_ad7b2a.result -> bool_4524be\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_prev\") property(Number) _prev_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_c76d2b.first\n            _prev_769593 -> sub_c76d2b.second\n            sub_c76d2b.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            out(x: 705, y: 49, name: \"_prev\") property(Number) _prev_efbc78\n\n            instance(x: 226, y: 56) set_prev_c76d2b {}\n            current_81298e -> set_prev_c76d2b.current\n            set_prev_c76d2b.prev -> _prev_efbc78\n        } -> map_c73e3b.handler_context\n\n        list_07cae4 -> map_c73e3b.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_diff_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_ad7b2a root.Std_k98ojb.Logic.Equal {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_diff_81298e -> equal_ad7b2a.left\n            1 -> equal_ad7b2a.right\n            equal_ad7b2a.result -> bool_4524be\n        } -> contains_32727d.handler\n\n        map_c73e3b.output_list -> contains_32727d.items\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) all_true_b3a5c1 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n\n        func() {\n            in(x: -192, y: -16, name: \"accumulated value\") property(Bool) accumulated_5c1d9a\n            in(x: 0, y: 79, name: \"current value\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_a9f8b1 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            accumulated_5c1d9a -> bool_4524be\n            sub_a9f8b1.result -> notequal_cb8a55.left\n            current_81298e -> sub_a9f8b1.second\n            1 -> sub_a9f8b1.first\n            notequal_cb8a55.result -> all_true_b3a5c1.accumulated_value\n        } -> all_true_b3a5c1.reducer\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        true -> all_true_b3a5c1.initial_value\n        map_c73e3b.output_list -> all_true_b3a5c1.items\n        all_true_b3a5c1.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_f9f2e7 root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 0, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            _index_769593 + 1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) current_b1f8c0\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_75283f root.Std_k98ojb.Logic.Not {}\n            not_75283f.result -> bool_4524be\n            current_b1f8c0 -> not_75283f.input\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_c76d2b.first\n            _index_769593 -> sub_c76d2b.second\n            sub_c76d2b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -24, name: \"next\") property(Number) next_ba8d7f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_5c9e1b root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) equal_3a7f4d root.Std_k98ojb.Logic.Equal {}\n            next_ba8d7f -> add_5c9ej1.first\n            1 -> add_5c9e1b.second\n            add_5c9e1b.result -> equal_3a7f4d.left\n            current_81298e -> equal_3a7f4d.right\n            equal_3a7f4d.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: 1058, y: -203) reduce_6c9f2d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -192, y: -16, name: \"accumulated\") property(Bool) accumulated_b5e3a4\n            in(x: 79, y: -15, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) and_7f8c1d root.Std_k98ojb.Logic.And {}\n            accumulated_b5e3a4 -> and_7f8c1d.left\n            current_81298e -> and_7f8c1d.right\n            and_7f8c1d.result -> bool_4524be\n        } -> reduce_6c9f2d.reducer\n        true -> reduce_6c9f2d.initialValue\n        map_c73e3b.output_list -> reduce_6c9f2d.items\n        reduce_6c9f2d.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if 'sublist' is a sublist of 'main_list'.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_5bbcd7\n        ifexpression_875761.else -> continue_a96db6\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_1\n        sublist_ec88cd -> ifexpression_875761.gen_0\n\n        0 -> ifexpression_875761.gen_2\n        ifexpression_875761.value -> output_5bbcd7\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> getat_ce2a48.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_1a2b3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == main_list_length || not_found\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_1a2b3c -> sublist_for.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 850, y: -20) for_sublist root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: -120) ifexpression_sublist root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_item == main_list_item\"\n        }\n        getter(x: 334, y: -160, name: \"getter_b280eb_sub\") getter_b280eb_sub = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c_sub\") setter_9d4f1c_sub = previous\n        instance(x: 321, y: -240) getat_ce2a48_sub root.Std_k98ojb.List.GetAt {}\n        ifexpression_sublist.else -> continue_a96db6\n        ifexpression_sublist.value -> output_5bbcd7\n        ifexpression_sublist.then -> setter_9d4f1c_sub.execute\n        sublist_1a2b3c -> for_sublist.items\n        main_list_ec88cd -> sublist_for_main.list\n        for_sublist.item -> ifexpression_sublist.gen_2\n        for_sublist.index -> ifexpression_sublist.gen_0\n        getter_b280eb_sub.value -> ifexpression_sublist.gen_1\n        for_sublist.onItem -> ifexpression_sublist.execute\n        for_sublist.done -> continue_a96db6\n        for_sublist.item -> setter_9d4f1c_sub.new_value\n        main_list_ec88cd -> getat_ce2a48_sub.list\n        sublist_for.index -> getat_ce2a48_sub.index\n        getat_ce2a48_sub.itemAtIndex -> setter_38e107_sub.new_value\n        execute_90aaec -> setter_38e107_sub.execute\n        setter_38e107_sub.continue -> for_sublist.reset\n        setter_9d4f1c_sub.continue -> for_sublist.next\n\n        instance(x: 850, y: -120) ifexpression_not_found root.Std_k98ojb.Std.IfExpression {\n            expression: \"not_found\"\n        }\n        getter(x: 334, y: -240, name: \"getter_b280eb_not\") getter_b280eb_not = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c_not\") setter_9d4f1c_not = previous\n        instance(x: 321, y: -320) getat_ce2a48_not root.Std_k98ojb.List.GetAt {}\n        ifexpression_not_found.else -> continue_a96db6\n        ifexpression_not_found.value -> output_5bbcd7\n        ifexpression_not_found.then -> setter_9d4f1c_not.execute\n        main_list_ec88cd -> for_not_found.items\n        for_not_found.item -> ifexpression_not_found.gen_2\n        for_not_found.index -> ifexpression_not_found.gen_0\n        getter_b280eb_not.value -> ifexpression_not_found.gen_1\n        for_not_found.onItem -> ifexpression_not_found.execute\n        for_not_found.done -> continue_a96db6\n        for_not_found.item -> setter_9d4f1c_not.new_value\n        main_list_ec88cd -> getat_ce2a48_not.list\n        sublist_for.index + 1 -> getat_ce2a48_not.index\n        getat_ce2a48_not.itemAtIndex -> setter_38e107_not.new_value\n        execute_90aaec -> setter_38e107_not.execute\n        setter_38e107_not.continue -> for_not_found.reset\n        setter_9d4f1c_not.continue -> for_not_found.next\n\n        instance(x: 850, y: -220) ifexpression_reset root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == main_list_length\"\n        }\n        getter(x: 334, y: -320, name: \"getter_b280eb_reset\") getter_b280eb_reset = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c_reset\") setter_9d4f1c_reset = previous\n        instance(x: 321, y: -420) getat_ce2a48_reset root.Std_k98ojb.List.GetAt {}\n        ifexpression_reset.else -> continue_a96db6\n        ifexpression_reset.value -> output_5bbcd7\n        ifexpression_reset.then -> setter_9d4f1c_reset.execute\n        main_list_ec88cd -> for_reset.items\n        for_reset.item -> ifexpression_reset.gen_2\n        for_reset.index -> ifexpression_reset.gen_0\n        getter_b280eb_reset.value -> ifexpression_reset.gen_1\n        for_reset.onItem -> ifexpression_reset.execute\n        for_reset.done -> continue_a96db6\n        for_reset.item -> setter_9d4f1c_reset.new_value\n        main_list_ec88cd -> getat_ce2a48_reset.list\n        0 -> getat_ce2a48_reset.index\n        getat_ce2a48_reset.itemAtIndex -> setter_38e107_reset.new_value\n        execute_90aaec -> setter_38e107_reset.execute\n        setter_38e107_reset.continue -> for_reset.reset\n        setter_9d4f1c_reset.continue -> for_reset.next\n\n        instance(x: 850, y: -320) ifexpression_sublist_not_found root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == sublist_length\"\n        }\n        getter(x: 334, y: -420, name: \"getter_b280eb_sub_not\") getter_b280eb_sub_not = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c_sub_not\") setter_9d4f1c_sub_not = previous\n        instance(x: 321, y: -520) getat_ce2a48_sub_not root.Std_k98ojb.List.GetAt {}\n        ifexpression_sublist_not_found.else -> continue_a96db6\n        ifexpression_sublist_not_found.value -> output_5bbcd7\n        ifexpression_sublist_not_found.then -> setter_9d4f1c_sub_not.execute\n        sublist_1a2b3c -> for_sublist_not_found.items\n        for_sublist_not_found.item -> ifexpression_sub",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9f4d2b\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || main_list[index] == sublist[current_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = current_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = current_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_9f4d2b\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_0\n        for_d26972.index -> ifexpression_875761.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        setter_38e107.value -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_3\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_for.items\n        sublist_for.item -> sublist_ifexpression.gen_2\n        sublist_for.index -> sublist_ifexpression.gen_0\n        getter_b280eb.value -> sublist_ifexpression.gen_1\n        sublist_for.onItem -> sublist_ifexpression.execute\n        sublist_for.done -> continue_a96db6\n        sublist_for.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sublist_ifexpression.value -> output_5bbcd7\n        sublist_ifexpression.then -> continue_a96db6\n        sublist_ifexpression.else -> for_d26972.next\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 321, y: -20) sublist_for root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) sublist_ifexpression root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_d26972\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < sublist_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_d26972\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_b280eb.value\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        sublist_length -> getat_ce2a48.list.Length\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"superlist\") property(List) superlist_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || superlist[index] == sublist[previous_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        superlist_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        superlist_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sublist_ec88cd -> getat_sublist_ce2a48.list\n        getter_b280eb.value -> getat_sublist_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -275, y: 130) getat_sublist_ce2a48 root.Std_k98ojb.List.GetAt {}\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        sublist_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        ifexpression_875761.gen_1 -> getter_b280eb.value\n        for_d26972.index -> ifexpression_875761.gen_0\n        ifexpression_875761.gen_2 -> for_d26972.item\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.next\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        getat_ce2a48.itemAtIndex == for_d26972.item -> setter_9d4f1c.new_value\n        sublist_index == -1 -> getter_b280eb.value\n        setter_38e107.continue -> ifexpression_875761.then\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_b280eb\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_previous\") getter_previous = previous\n        setter(x: 679, y: -313, name: \"setter_previous\") setter_previous = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_previous\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_b280eb\n        ifexpression_875761.then -> setter_previous.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_previous.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_previous.new_value\n        sublist_5bbcd7 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        instance(x: -300, y: 150) filter_f1c7d3 root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: Any, index: Int, context: Any) {\n                in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n                out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n                out(x: 1218, y: 147, name: \"output\") property(Bool) output_b280eb\n\n                instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"sublist[index] == item\"\n                }\n                getter(x: 334, y: 160, name: \"getter_sublist_item\") getter_sublist_item = sublist[index]\n                setter(x: -0, y: -121, name: \"setter_index\") setter_index = index\n                instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n                ifexpression_875761.else -> continue_a96db6\n                ifexpression_875761.value -> output_b280eb\n                ifexpression_875761.then -> setter_index.execute\n                sublist_5bbcd7 -> for_d26972.items\n                for_d26972.item -> getter_sublist_item.value\n                for_d26972.index -> ifexpression_875761.gen_0\n                getter_sublist_item.value -> ifexpression_875761.gen_1\n                for_d26972.onItem -> ifexpression_875761.execute\n                for_d26972.done -> continue_a96db6\n\n                execute_90aaec -> setter_index.execute\n            }\n        }\n\n        filter_f1c7d3.output_list -> output_b280eb\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_f3a1c9\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == main_list_length || sublist_index >= sublist_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_f3a1c9\n        ifexpression_875761.then -> setter_9d4f1c.execute\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getter_b280eb.new_value\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_2\n        sublist_length: List.Length(sublist_5bbcd7)\n        main_list_length: List.Length(main_list_ec88cd)\n\n        instance(x: 400, y: -100) for_sub_d26972 root.Std_k98ojb.Std.For {}\n        getter_sub(x: 334, y: 160, name: \"getter_b280eb_sub\") getter_b280eb_sub = previous\n        setter_sub(x: 679, y: -313, name: \"setter_9d4f1c_sub\") setter_9d4f1c_sub = previous\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> getter_b280eb.new_value\n        ifexpression_875761.then -> for_sub_d26972.reset\n        sublist_5bbcd7 -> for_sub_d26972.items\n\n        instance(x: 600, y: -150) ifexpression_sub_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"getter_b280eb.value == getter_b280eb_sub.value\"\n        }\n        \n        getter_b280eb.value -> ifexpression_sub_875761.gen_2\n        getter_b280eb_sub.value -> ifexpression_sub_875761.gen_1\n\n        ifexpression_sub_875761.then -> setter_9d4f1c_sub.execute\n        for_sub_d26972.onItem -> ifexpression_sub_875761.execute\n        for_sub_d26972.done -> continue_a96db6\n        \n        getter_b280eb.value -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        ifexpression_sub_875761.then -> for_sub_d26972.next\n        ifexpression_sub_875761.else -> continue_a96db6\n        \n        setter_9d4f1c_sub.new_value -> getter_b280eb_sub.new_value\n        setter_9d4f1c_sub.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_b280eb\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || sublist[index] == main_list[current_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_previous\") property(Int) previous\n        setter(x: 679, y: -313, name: \"setter_current_index\") property(Int) current_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_b280eb\n        ifexpression_875761.then -> setter_current_index.execute\n\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> getter_previous.property\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        previous.value -> ifexpression_875761.gen_1\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_current_index.new_value\n\n        main_list_ec88cd -> getat_ce2a48.list\n        current_index.value -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> previous.new_value\n\n        execute_90aaec -> getter_previous.execute\n        getter_previous.continue -> for_d26972.reset\n        setter_current_index.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_numbers_ai -> find_missing_node.sorted_numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(sorted_numbers: -426, y: -248) property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop Std_k98ojb.Std.For {}\n        instance(x: 426, y: -403) if_missing Std_k98ojb.Std.If {}\n\n        sorted_numbers_ai -> loop.items\n        loop.on_item -> if_missing.input\n\n        instance(x: 426, y: -503) index_counter Std_k98ojb.Std.Count {}\n        index_counter.reset -> loop.reset\n        loop.next -> index_counter.count\n\n        index_counter.count -> if_missing.expression {\n            expression: \"it != sorted_numbers[0] + it\"\n        }\n\n        if_missing.then -> missing_number_ai.value {\n            value: \"sorted_numbers[0] + it\"\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.Filter {}\n        numbers_ai -> loop_node.items\n        loop_node.output_list -> find_missing_node.result\n\n        func(doc: \"checks if the current number is not equal to its expected position.\") check_missing {\n            in(x: -426, y: -248, name: \"number\") property(Number) number_ai\n            in(x: 159, y: -219, name: \"index\") property(Number) index_ai\n\n            instance(x: 426, y: -303) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            number_ai -> not_equal_node.left\n            (index_ai + 1) -> not_equal_node.right\n            not_equal_node.value -> check_missing.output_bool\n        }\n\n        loop_node.handler = check_missing\n\n        instance(x: 426, y: -303) find_first_missing_node root.Std_k98ojb.Iteration.Find {}\n        loop_node.output_list -> find_first_missing_node.items\n        find_first_missing_node.item -> missing_number_ai\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_loop_node root.Std_k98ojb.For {}\n        numbers_ai -> for_loop_node.items\n\n        for_loop_node.on_item -> check_missing_node.trigger\n        for_loop_node.done -> end_node.trigger\n\n        instance(x: 576, y: -303) check_missing_node root.main.check_missing {}\n        for_loop_node.item -> check_missing_node.current_number\n        check_missing_node.missing_number -> missing_number_ai\n\n        instance(x: 726, y: -303) end_node root.Std_k98ojb.If {\n            input: check_missing_node.triggered,\n            then: {},\n            else: {}\n        }\n    }\n\n    func(doc: \"checks if the current number is missing.\") check_missing {\n        in(x: -426, y: -248, name: \"current_number\") property(Number) current_number_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) if_node root.Std_k98ojb.IfExpression {\n            expression: \"index + 1 != current_number\"\n        }\n        \n        if_node.value -> check_missing_node.triggered\n        if_node.index -> index_ai\n        numbers_ai -> check_missing_node.numbers\n\n        instance(x: 576, y: -303) index_node root.Std_k98ojb.Count {\n            reset: if_node.then,\n            count: if_node.then\n        }\n        \n        index_node.count -> if_node.index\n        \n        instance(x: 726, y: -303) result_node root.Std_k98ojb.IfExpression {\n            expression: \"index + 1\"\n        }\n\n        index_ai -> result_node.index\n        result_node.value -> missing_number_ai\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.main.find_smallest_missing {}\n        numbers_ai -> find_smallest_missing_node.numbers\n        find_smallest_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n\n        instance(x: 429, y: -375) lambda_node_1 root.Std_k98ojb.Lambda {\n            func(doc: \"lambda function to find the first missing number.\") f {\n                in(x: -426, y: -248, name: \"num\") property(Number) num_ai\n                in(x: -426, y: -303, name: \"index\") property(Number) index_ai\n\n                instance(x: 426, y: -378) math_expression_node root.Std_k98ojb.Math.Expression {\n                    expression = \"index + 1 != num\"\n                }\n                math_expression_node.result -> lambda_node_1.handler\n            }\n        }\n\n        iteration_find_node.predicate <- lambda_node_1.handler\n        iteration_find_node.item -> missing_number_ai\n\n        instance(x: -75, y: -375) std_if_else_node root.Std_k98ojb.If {\n            input = List.IsEmpty(numbers_ai)\n            then = Math.Expression { expression = \"0\" }\n            else = List.FirstItem(numbers_ai)\n\n            then.result -> std_if_else_node.value\n            else.item -> std_if_else_node.value\n\n            value -> missing_number_ai\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Find {}\n        \n        iteration_find_handler := func(item: Number, index: Number) {\n            expected := index + 1\n            if item != expected {\n                return true\n            }\n            return false\n        }\n\n        instance(x: 426, y: -303) handler_node root.Std_k98ojb.Iteration.Handler {}\n        handler_node.handler := iteration_find_handler\n\n        numbers_ai -> find_smallest_missing_node.items\n        find_smallest_missing_node.predicate := handler_node.handler\n        find_smallest_missing_node.item -> missing_number_ai\n        \n        instance(x: 426, y: -303) default_value_node root.Std_k98ojb.Math.Add {}\n        default_value_node.first := 1\n        default_value_node.second := list_length - 1\n        default_value_node.result -> missing_number_ai\n\n        instance(x: 426, y: -303) list_length_node root.Std_k98ojb.List.Length {}\n        numbers_ai -> list_length_node.list\n        list_length_node.length -> length_ai\n        \n        instance(x: 426, y: -303) conditional_node root.Std_k98ojb.Logic.If {}\n        conditional_node.input := find_smallest_missing_node.item == null\n        conditional_node.then := default_value_node.result\n        conditional_node.else_ := find_smallest_missing_node.item\n        conditional_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) iteration_node root.Std_k98ojb.Iteration.Filter {}\n        numbers_ai -> iteration_node.items\n\n        func(doc: \"filter function to find the smallest missing number.\") filter {\n            in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n            in(x: 159, y: -219, name: \"index\") property(Number) index_ai\n            out(x: 0, y: 0, name: \"result\") property(Boolean) result_ai\n\n            instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Expression {}\n            math_node.expression = \"item != (index + 1)\"\n            item_ai -> math_node.item\n            index_ai -> math_node.index\n            math_node.result -> filter.result\n        }\n\n        iteration_node.handler = filter\n        instance(x: 426, y: -303) find_missing_logic root.main.find_missing_logic {}\n        iteration_node.output_list -> find_missing_logic.missing_numbers\n\n        func(doc: \"logic to determine the smallest missing number.\") find_missing_logic {\n            in(x: -426, y: -248, name: \"missing_numbers\") property(List) missing_numbers_ai\n            out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n            instance(x: 426, y: -303) list_length_node root.Std_k98ojb.List.Length {}\n            missing_numbers_ai -> list_length_node.list\n            list_length_node.length -> find_missing_logic.missing_count\n\n            instance(x: 426, y: -303) math_add_node root.Std_k98ojb.Math.Add {}\n            numbers_ai -> math_add_node.first\n            list_length_node.length -> math_add_node.second\n            math_add_node.result -> find_missing_logic.expected_first\n\n            instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n            missing_numbers_ai -> iteration_find_node.items\n\n            func(doc: \"find function to determine the smallest missing number.\") find {\n                in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n                out(x: 0, y: 0, name: \"result\") property(Boolean) result_ai\n\n                instance(x: 426, y: -303) math_node root.Std_k98ojb.Math.Expression {}\n                math_node.expression = \"item == expected_first\"\n                item_ai -> math_node.item\n                find_missing_logic.expected_first -> math_node.index\n                math_node.result -> find.result\n            }\n\n            iteration_find_node.predicate = find\n            iteration_find_node.item -> find_missing_logic.missing\n\n            instance(x: 426, y: -303) logic_if_node root.Std_k98ojb.Logic.If {}\n            list_length_node.length -> logic_if_node.input\n            logic_if_node.then {\n                instance(x: 426, y: -303) math_add_node root.Std_k98ojb.Math.Add {}\n                find_missing_logic.expected_first -> math_add_node.first\n                iteration_find_node.item -> math_add_node.second\n                math_add_node.result -> missing_ai\n            }\n            logic_if_node.else {\n                find_missing_logic.expected_first -> missing_ai\n            }\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(numbers: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 0, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -378) if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.on_item -> if_node.input\n\n        for_node.index -> if_node.expression.a\n        numbers_ai -> if_node.expression.b\n\n        Std_k98ojb.Iteration.Find {\n            in(items: 426, y: -453) property(List) items\n            out(item: 159, y: -423) property(Number) item\n\n            instance(x: 0, y: -498) handler_func root.main.handler {}\n            items -> handler_func.items\n        } -> if_node.expression.output\n\n        if_node.then {\n            Std_k98ojb.Math.Add {\n                in(first: 426, y: -573) property(Number) first\n                in(second: 159, y: -573) property(Number) second\n                out(result: 0, y: -543) property(Number) result\n\n                for_node.index -> first\n                Std_k98ojb.Math.Constant { value: 1 } -> second\n            } -> missing_ai\n        }\n\n        if_node.else {\n            Std_k98ojb.Math.Constant { value: 1 } -> missing_ai\n        }\n    }\n\n    func(doc: \"handler function for finding the smallest missing number.\") handler {\n        in(items: -426, y: -648) property(List) items_ai\n        out(result: 159, y: -618) property(Boolean) result\n\n        instance(x: 0, y: -693) if_node root.Std_k98ojb.If {}\n        instance(x: 426, y: -768) math_expr root.Std_k98ojb.Math.Expression {}\n\n        items_ai -> if_node.expression.a\n        Std_k98ojb.Iteration.Map {\n            in(items: 159, y: -843) property(List) items\n            out(output_list: 0, y: -813) property(List) output_list\n\n            instance(x: 426, y: -888) handler_func root.main.map_handler {}\n            items -> handler_expr.items\n        } -> if_node.expression.b\n\n        math_expr.expression = \"it + 1\"\n        math_expr.result -> if_node.expression.output\n\n        if_node.then {\n            Std_k98ojb.Logic.Equal {\n                in(left: 426, y: -963) property(Number) left\n                in(right: 159, y: -963) property(Number) right\n                out(result: 0, y: -933) property(Boolean) result\n\n                math_expr.result -> left\n                items_ai -> right\n            } -> if_node.output\n        }\n\n        if_node.else {\n            Std_k98ojb.Logic.Not {\n                in(input: 426, y: -1038) property(Boolean) input\n                out(result: 159, y: -1008) property(Boolean) result\n\n                if_node.expression.output -> input\n            } -> if_node.output\n        }\n\n        if_node.output -> result\n    }\n\n    func(doc: \"maps each item to its index + 1.\") map_handler {\n        in(items: -426, y: -1113) property(List) items_ai\n        out(output_list: 159, y: -1083) property(List) output_list\n\n        instance(x: 0, y: -1148) math_expr root.Std_k98ojb.Math.Expression {}\n\n        math_expr.expression = \"it + 1\"\n        math_expr.result -> output_list\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n\n        instance(x: 426, y: -423) lambda_node root.Std_k98ojb.Lambda {}\n        iteration_find_node.predicate -> lambda_node.trigger\n        lambda_node.output_bool -> iteration_find_node.handler\n\n        instance(x: 426, y: -519) std_if_node root.Std_k98ojb.If {}\n        lambda_node.output_bool -> std_if_node.input\n        std_if_node.then -> find_missing_then_node.trigger\n        std_if_node.else -> return_zero_node.trigger\n\n        instance(x: 426, y: -615) find_missing_then_node root.main.find_missing_then {}\n        iteration_find_node.index -> find_missing_then_node.index_ai\n        numbers_ai -> find_missing_then_node.numbers_ai\n\n        instance(x: 426, y: -711) return_zero_node root.main.return_zero {}\n\n        find_missing_then_node.missing_number -> missing_number_ai\n        return_zero_node.zero -> missing_number_ai\n    }\n\n    func(doc: \"returns the index plus one if the condition is met.\") find_missing_then {\n        in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n        in(x: -426, y: -323, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -399) math_add_node root.Std_k98ojb.Math.Add {}\n        index_ai -> math_add_node.first\n        std_value(1) -> math_add_node.second\n        math_add_node.result -> missing_number_ai\n\n        instance(x: 426, y: -495) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        numbers_ai.List.GetAt(index_ai) -> logic_not_equal_node.left\n        index_ai -> logic_not_equal_node.right\n\n        std_value(1) -> logic_not_equal_node.else\n        math_add_node.trigger -> logic_not_equal_node.then\n    }\n\n    func(doc: \"returns zero.\") return_zero {\n        out(x: 159, y: -219, name: \"zero\") property(Number) zero_ai\n\n        std_value(0) -> zero_ai\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -403) if_node root.Std_k98ojb.If {}\n        \n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        \n        for_node.index -> if_node.input\n        instance(x: 426, y: -503) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"it + 1\"\n        }\n        for_node.item -> math_expr_node.it\n        math_expr_node.result -> if_node.then\n\n        if_node.else -> missing_ai\n        \n        instance(x: 426, y: -603) list_get_at_node root.Std_k98ojb.List.GetAt {}\n        for_node.index -> list_get_at_node.index\n        numbers_ai -> list_get_at_node.list\n        \n        list_get_at_node.item -> if_node.expression\n        instance(x: 426, y: -703) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        math_expr_node.result -> logic_not_equal_node.left\n        list_get_at_node.item -> logic_not_equal_node.right\n\n        logic_not_equal_node.value -> if_node.value\n        \n        for_node.next -> for_node.done\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> trigger_input\n        for_node.reset -> reset_input\n        \n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n        for_node.on_item -> if_node.input\n        if_node.then -> then_trigger\n\n        instance(x: 426, y: -588) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"index + 1 != item\"\n        }\n        for_node.index -> math_expr_node.index\n        for_node.item -> math_expr_node.item\n        math_expr_node.result -> if_node.value\n\n        instance(x: 426, y: -723) math_add_node root.Std_k98ojb.Math.Add {}\n        then_trigger -> math_add_node.first\n        for_node.index -> math_add_node.second\n        math_add_node.result -> missing_number_ai\n        \n        instance(x: 426, y: -858) if_expr_node root.Std_k98ojb.IfExpression {\n            expression: \"index == length - 1\"\n        }\n        for_node.index -> if_expr_node.index\n        numbers_ai -> if_expr_node.length\n        if_expr_node.value -> if_expr_node.input\n\n        instance(x: 426, y: -993) math_add_node_2 root.Std_k98ojb.Math.Add {}\n        if_expr_node.then -> math_add_node_2.first\n        for_node.item -> math_add_node_2.second\n        math_add_node_2.result -> missing_number_ai\n        \n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f7c5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8e3f9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_b6d2c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f7c5d.input\n        \" \" -> replace_4f7c5d.search\n        \":\" -> replace_4f7c5d.replace\n        replace_4f7c5d.output -> replace_8e3f9a.input\n        \",\" -> replace_8e3f9a.search\n        \":\" -> replace_8e3f9a.replace\n        replace_8e3f9a.output -> replace_b6d2c1.input\n        \".\" -> replace_b6d2c1.search\n        \":\" -> replace_b6d2c1.replace\n        replace_b6d2c1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3f9b7a root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_6c3b7a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8f9e5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_b4c8d1 root.Std_k98ojb.Strings.Replace {}\n        replace_6c3b7a.output -> replace_8f9e5d.input\n        replace_8f9e5d.output -> replace_b4c8d1.input\n        input_0 -> replace_6c3b7a.input\n        \" \" -> replace_6c3b7a.search\n        \":\" -> replace_6c3b7a.replace\n        \",\" -> replace_8f9e5d.search\n        \".\" -> replace_b4c8d1.search\n        \":\" -> replace_8f9e5d.replace\n        \":\" -> replace_b4c8d1.replace\n        replace_b4c8d1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_2b3d7a root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_dots_commas_9f3a6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_comma_with_colon_2d7e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_dot_with_colon_f5a4d6 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_spaces_dots_commas_9f3a6c.input\n        \" ,.\" -> replace_spaces_dots_commas_9f3a6c.search\n        \":\" -> replace_spaces_dots_commas_9f3a6c.replace\n        replace_spaces_dots_commas_9f3a6c.output -> replace_comma_with_colon_2d7e8f.input\n        \",\" -> replace_comma_with_colon_2d7e8f.search\n        \":\" -> replace_comma_with_colon_2d7e8f.replace\n        replace_comma_with_colon_2d7e8f.output -> replace_dot_with_colon_f5a4d6.input\n        \".\" -> replace_dot_with_colon_f5a4d6.search\n        \":\" -> replace_dot_with_colon_f5a4d6.replace\n        replace_dot_with_colon_f5a4d6.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3b8f9c root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f8c9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_ba6e5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_3a2f7f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f8c9d.input\n        \" \" -> replace_4f8c9d.search\n        \":\" -> replace_4f8c9d.replace\n        replace_4f8c9d.output -> replace_ba6e5e.input\n        \",\" -> replace_ba6e5e.search\n        \":\" -> replace_ba6e5e.replace\n        replace_ba6e5e.output -> replace_3a2f7f.input\n        \".\" -> replace_3a2f7f.search\n        \":\" -> replace_3a2f7f.replace\n        replace_3a2f7f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_5b9d8c root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_a5b3f9 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b6c4d8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_c7d5e2 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_a5b3f9.input\n        \" \" -> replace_a5b3f9.search\n        \":\" -> replace_a5b3f9.replace\n        replace_a5b3f9.output -> replace_b6c4d8.input\n        \",\" -> replace_b6c4d8.search\n        \":\" -> replace_b6c4d8.replace\n        replace_b6c4d8.output -> replace_c7d5e2.input\n        \".\" -> replace_c7d5e2.search\n        \":\" -> replace_c7d5e2.replace\n        replace_c7d5e2.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_1f9b3c root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3b8e5a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d6c7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c4d3a8 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3b8e5a.input\n        \" \" -> replace_3b8e5a.search\n        \":\" -> replace_3b8e5a.replace\n        replace_3b8e5a.output -> replace_9d6c7f.input\n        \",\" -> replace_9d6c7f.search\n        \":\" -> replace_9d6c7f.replace\n        replace_9d6c7f.output -> replace_c4d3a8.input\n        \".\" -> replace_c4d3a8.search\n        \":\" -> replace_c4d3a8.replace\n        replace_c4d3a8.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_9f2e7b root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_6f5d8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3c4a7d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f2e1a9 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_6f5d8e.input\n        \" \" -> replace_6f5d8e.search\n        \":\" -> replace_6f5d8e.replace\n        replace_6f5d8e.output -> replace_3c4a7d.input\n        \",\" -> replace_3c4a7d.search\n        \":\" -> replace_3c4a7d.replace\n        replace_3c4a7d.output -> replace_f2e1a9.input\n        \".\" -> replace_f2e1a9.search\n        \":\" -> replace_f2e1a9.replace\n        replace_f2e1a9.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_d7b8f6 root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3f8d4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6e5c9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_c7f2d1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3f8d4a.input\n        \" \" -> replace_3f8d4a.search\n        \":\" -> replace_3f8d4a.replace\n        replace_3f8d4a.output -> replace_6e5c9d.input\n        \",\" -> replace_6e5c9d.search\n        \":\" -> replace_6e5c9d.replace\n        replace_6e5c9d.output -> replace_c7f2d1.input\n        \".\" -> replace_c7f2d1.search\n        \":\" -> replace_c7f2d1.replace\n        replace_c7f2d1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_8b9c3f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7c9b6a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4f3d5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c8b9e1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7c9b6a.input\n        \" \" -> replace_7c9b6a.search\n        \":\" -> replace_7c9b6a.replace\n        replace_7c9b6a.output -> replace_4f3d5e.input\n        \",\" -> replace_4f3d5e.search\n        \":\" -> replace_4f3d5e.replace\n        replace_4f3d5e.output -> replace_c8b9e1.input\n        \".\" -> replace_c8b9e1.search\n        \":\" -> replace_c8b9e1.replace\n        replace_c8b9e1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_d4c7f2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4b3c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9a7d6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8e2d1a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4b3c5f.input\n        \" \" -> replace_4b3c5f.search\n        \":\" -> replace_4b3c5f.replace\n        replace_4b3c5f.output -> replace_b9a7d6.input\n        \",\" -> replace_b9a7d6.search\n        \":\" -> replace_b9a7d6.replace\n        replace_b9a7d6.output -> replace_8e2d1a.input\n        \".\" -> replace_8e2d1a.search\n        \":\" -> replace_8e2d1a.replace\n        replace_8e2d1a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_a3f7b9 root.main.text_replace_special_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7f5a4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_7f5a4d.input\n        characters_7f5a4d.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f8e3b9 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_f8e3b9.left\n            characters_7f5a4d.characters[0] -> equal_f8e3b9.right\n            equal_f8e3b9.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        characters_7f5a4d.characters[0] -> expression_b720d7.gen_0\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> and_80a119.left\n        1 -> and_80a119.right\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_7e4d1c root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_5e3a2d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_5e3a2d.input\n        characters_5e3a2d.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            func() {\n                in(x: -76, y: 46, name: \"element\") property(String) element_1e4a8a\n                out(x: 382, y: 19, name: \"out\") property(Number) out_e0d9f2\n\n                instance(x: 106, y: 17) find_3c5b7a root.Std_k98ojb.Iteration.Find {}\n                characters_5e3a2d.characters -> find_3c5b7a.items\n                element_1e4a8a -> find_3c5b7a.predicate\n\n                find_3c5b7a.item -> out_e0fd9f2\n            } -> mul_2f9d09.first\n            1 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        characters_5e3a2d.characters[0] -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_2e5d0a root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        1 -> generaterange_038fce.from\n        func() {\n            in(x: -76, y: 46, name: \"length\") property(Number) length_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_c1b6a8 root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d -> eq_c1b6a8.left\n            func() {\n                in(x: -76, y: 46, name: \"index\") property(Number) index_9e7f2a\n\n                out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n                instance(x: 106, y: 17) characters_c5b1d8 root.Std_k98ojb.Strings.Characters {}\n                index_9e7f2a -> characters_c5b1d8.index\n                input_f5c03d -> characters_c5b1d8.input\n                characters_c5b1d8.characters -> out_d0fd24\n            } -> eq_c1b6a8.right\n            eq_c1b6a8.result -> out_d0fd24\n        } -> generaterange_038fce.to\n\n        map_6030c9.items -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Bool) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) not_e1c8b9 root.Std_k98ojb.Logic.Not {}\n            element_5f51f7 -> not_e1c8b9.input\n            not_e1c8b9.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        length_5f51f7 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        map_6030c9.output_list -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_9e4d7e root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_1e7f5a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_2d6f4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(char == first_char)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) firstitem_7f9d1e root.Std_k98ojb.List.FirstItem {}\n\n        input_f5c03d -> characters_1e7f5a.input\n        characters_1e7f5a.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) if_f4a8b6 root.Std_k98ojb.Std.If {}\n            func() {\n                in(x: -76, y: 46, name: \"first_char\") property(String) first_char_7f1e5d\n                element_5f51f7 -> equal_2d6f4c.left\n                first_char_7f1e5d -> equal_2d6f4c.right\n                equal_2d6f4c.result -> if_f4a8b6.predicate\n            } -> if_f4a8b6.then\n            expression_9fba8c.result -> if_f4a8b6.else\n\n            instance(x: 106, y: 17) if_b3f1d2 root.Std_k98ojb.Std.If {}\n            element_5f51f7 -> if_b3f1d2.predicate\n            expression_b720d7.result -> if_b3f1d2.then\n            false -> if_b3f1d2.else\n\n            instance(x: 106, y: 17) and_ae6a8b root.Std_k98ojb.Logic.And {}\n            if_f4a8b6.value -> and_ae6a8b.left\n            if_b3f1d2.value -> and_ae6a8b.right\n\n            and_ae6a8b.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        firstitem_7f9d1e.list -> characters_1e7f5a.input\n        firstitem_7f9d1e.item -> expression_b720d7.gen_0\n        for_8cb3f6.item -> if_f4a8b6.first_char\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) if_f4a8b6 root.Std_k98ojb.Std.If {}\n            func() {\n                in(x: -76, y: 46, name: \"first_char\") property(String) first_char_7f1e5d\n                element_5f51f7 -> equal_2d6f4c.left\n                first_char_7f1e5d -> equal_2d6f4c.right\n                equal_2d6f4c.result -> if_f4a8b6.predicate\n            } -> if_f4a8b6.then\n            expression_9fba8c.result -> if_f4a8b6.else\n\n            instance(x: 106, y: 17) if_b3f1d2 root.Std_k98ojb.Std.If {}\n            element_5f51f7 -> if_b3f1d2.predicate\n            expression_b720d7.result -> if_b3f1d2.then\n            false -> if_b3f1d2.else\n\n            instance(x: 106, y: 17) and_ae6a8b root.Std_k98ojb.Logic.And {}\n            if_f4a8b6.value -> and_ae6a8b.left\n            if_b3f1d2.value -> and_ae6a8b.right\n\n            and_ae6a8b.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n\n        if_07b8c7.else -> continue_8ba06b\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> firstitem_7f9d1e.reset\n        execute_27b8c3 -> characters_1e7f5a.reset\n        execute_27b8c3 -> map_6030c9.reset\n        execute_27b8c3 -> for_8cb3f6.reset\n\n        if_e19a62.else -> for_8cb3f6.next\n\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_d5e2d4 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_e6f7e4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n != i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_e6f7e4.input\n        characters_e6f7e4.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n            element_5f51f7 -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fde.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.gen_0 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_2\n        input_f5c03d -> expression_b720d7.gen_3\n\n        expression_b720d7.result -> and_80a119.left\n        0 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_f0be66 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1279, y: -53) equal_0c6d3e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1287, y: -186) not_5a1c8a root.Std_k98ojb.Logic.Not {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> characters_6f2b3e.input\n        characters_6f2b3e.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        instance(x: 1087, y: -53) characters_6f2b3e root.Std_k98ojb.Strings.Characters {}\n        map_6030c9.output_list -> filter_5d4a9b.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_a1b7f8\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_e3c5d2\n\n            instance(x: 106, y: 17) equal_0c6d3e root.Std_k98ojb.Logic.Equal {}\n            element_a1b7f8 -> equal_0c6d3e.left\n            characters_6f2b3e.characters[0] -> equal_0c6d3e.right\n            equal_0c6d3e.result -> out_e3c5d2\n        } -> filter_5d4a9b.handler\n        filter_5d4a9b.output_list -> not_5a1c8a.input\n        instance(x: 1287, y: -186) not_5a1c8a root.Std_k98ojb.Logic.Not {}\n        not_5a1c8a.result -> if_07b8c7.predicate\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_e9e2f6 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_3a1e5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_4d6e7c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(i == first)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) not_5c1f2d root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> characters_3a1e5f.input\n        characters_3a1e5f.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_1b9d2a root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_1b9d2a.left\n            map_6030c9.value -> equal_1b9d2a.right\n            equal_1b9d2a.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_4d6e7c.left\n        characters_3a1e5f.characters[0] -> equal_4d6e7c.right\n        equal_4d6e7c.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        equal_4d6e7c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> not_5c1f2d.input\n        not_5c1f2d.output -> if_e19a62.execute\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> expression_b720d7.gen_0\n        map_6030c9.value -> expression_b720d7.gen_1\n        not_5c1f2d.output -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_f0be66 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 2145, y: -54) not_0e6c7d root.Std_k98ojb.Logic.Not {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_2a9c8f.input\n        strings_characters_2a9c8f.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f9b2d4 root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d -> equal_f9b2d4.left\n            element_5f51f7 -> equal_f9b2d4.right\n            equal_f9b2d4.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> not_0e6c7d.input\n        not_0e6c7d.output -> out_f3db9f\n        if_07b8c7.value -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_1e7d9a root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1230, y: -320) filter_9c5d7e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1246, y: -490) not_ea3b2c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1448, y: -494) equal_1f0e4f root.Std_k98ojb.Logic.Equal {}\n\n        1 -> generaterange_038fce.from\n        func() {\n            in(x: -76, y: 46, name: \"index\") property(Number) index_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_8c1e9b root.Std_k98ojb.Strings.Substring {}\n            input_f5c03d -> substr_8c1e9b.input\n            index_5f51f7 -> substr_8c1e9b.start\n            1 -> substr_8c1e9b.length\n            substr_8c1e9b.output -> out_d0fd24\n        } -> generaterange_038fce.handler\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f8b2d4 root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d -> equal_f8b2d4.left\n            element_5f51f7 -> equal_f8b2d4.right\n            equal_f8b2d4.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> filter_9c5d7e.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Bool) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) not_8a4b3d root.Std_k98ojb.Logic.Not {}\n            element_5f51f7 -> not_8a4b3d.input\n            not_8a4b3d.result -> out_d0fd24\n        } -> filter_9c5d7e.handler\n        filter_9c5d7e.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        instance(x: 1230, y: -320) filter_9c5d7e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1246, y: -490) not_ea3b2c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1448, y: -494) equal_1f0e4f root.Std_k98ojb.Logic.Equal {}\n\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f8b2d4 root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d -> equal_f8b2d4.left\n            element_5f51f7 -> equal_f8b2d4.right\n            equal_f8b2d4.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> filter_9c5d7e.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Bool) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) not_8a4b3d root.Std_k98ojb.Logic.Not {}\n            element_5f51f7 -> not_8a4b3d.input\n            not_8a4b3d.result -> out_d0fd24\n        } -> filter_9c5d7e.handler\n        filter_9c5d7e.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n\n        1 -> generaterange_038fce.to\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> characters_a0e2b7.input\n        characters_a0e2b7.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f3b9a2 root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d -> equal_f3b9a2.left\n            element_5f51f7 -> equal_f3b9a2.right\n            equal_f3b9a2.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 99, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> characters_547f34.input\n        characters_547f34.characters -> add_88bb8a.second\n        is_numeric_adfa16.value -> add_88bb8a.first\n        1 -> setter_375321.new_value\n        characters_547f34.characters -> count_digits_96023e.s_6b655b\n        is_numeric_adfa16.input -> characters_547f34.item\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> slice_547f34.start\n        1 -> slice_547f34.end\n        s_6b655b -> characters_547f34.input\n        characters_547f34.characters -> slice_547f34.list\n        slice_547f34.slice -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> ifexpression_3d7de6.gen_1\n        0 -> ifexpression_3d7de6.gen_2\n        ifexpression_3d7de6.else -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        slice_547f34.rest -> count_digits_96023e.s_6b655b\n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> slice_547f34.start\n        -1 -> slice_547f34.end\n        slice_547f34.list -> count_digits_96023e.s_6b655b\n        isnumeric_adfa16.input -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        slice_547f34.listWithoutItem -> count_digits_96023e.s_6b655b\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 99, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 97, y: -417) firstitem_3d7de6 root.Std_k98ojb.List.FirstItem {}\n        instance(x: 656, y: -378) characters_ae1c5a root.Std_k98ojb.Strings.Characters {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_ae1c5a.input\n        characters_ae1c5a.characters -> firstitem_3d7de6.list\n        firstitem_3d7de6.item -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> characters_ae1c5a.input\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        isnumeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n\n        if(isnumeric_adfa16.value) {\n            add_88bb8a.result -> setter_375321.new_value\n        } else {\n            0 -> setter_375321.new_value\n        }\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        1 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        div_547f34.result -> ifexpression_3d7de6.gen_0\n        floor_61b38d.output -> isnumeric_adfa16.input\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n        1 -> slice_547f34.end\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        is_numeric_adfa16.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> slice_547f34.list\n        is_numeric_adfa16.input -> slice_547f34.item\n        slice_547f34.rest -> count_digits_96023e.s_6b655b\n        length_61b38d.list -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> add_88bb8a.second\n        isnumeric_adfa16.value -> add_88bb8a.first\n        slice_547f34.start -> 0\n        slice_547f34.end -> -1\n        s_6b655b -> slice_547f34.input\n        slice_547f34.list -> count_digits_96023e.s_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> isnumeric_adfa16.execute\n        isnumeric_adfa16.value -> add_88bb8a.first\n        slice_547f34.list -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        execute_cdac2a -> slice_547f34.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        input_string_6b655b -> characters_547f34.input\n        characters_547f34.characters -> count_digits_96023e.list_1\n        list_1 -> count_digits_96023e.indexed_list_1\n\n        indexed_list_1 -> count_digits_96023e.index_2\n        indexed_list_1 -> count_digits_96023e.item_2\n\n        item_2 -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n\n        ifexpression_3d7de6.then -> add_88bb8a.execute\n        ifexpression_3d7de6.else -> continue_d9efd7\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        1 -> add_88bb8a.first\n        setter_41e4ad.new_value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) characters_1f3c8e root.Std_k98ojb.Strings.Characters {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> characters_1f3c8e.input\n        characters_1f3c8e.characters -> slice_547f34.list\n        0 -> slice_547f34.start\n        -1 -> slice_547f34.end\n\n        slice_547f34.slice -> count_digits_96023e.s_6b655b\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        isnumeric_adfa16.input -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        count_digits_96023e.s_6b655b -> isnumeric_adfa16.input\n\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -20) div_7b1f9c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -17) data_cde0dc2  = 3\n        mul_f892a4.result -> div_7b1f9c.first\n        data_cde0dc2 -> div_7b1f9c.second\n        instance(x: 303, y: -42) pow_8e6d5c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_8e6d5c.x\n        data_instance(x: 330, y: -39) data_cde0dc3  = 2\n        pow_8e6d5c.y -> data_cde0dc3\n        instance(x: 303, y: -64) div_9f4b3a root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -61) data_cde0dc4  = 3\n        pow_8e6d5c.result -> div_9f4b3a.first\n        data_cde0dc4 -> div_9f4b3a.second\n        instance(x: 303, y: -86) mul_1a7c2d root.Std_k98ojb.Math.Mul {}\n        div_7b1f9c.result -> mul_1a7c2d.first\n        div_9f4b3a.result -> mul_1a7c2d.second\n        instance(x: 303, y: -109) pow_b0e5b root.Std_k98ojb.Math.Pow {}\n        mul_1a7c2d.result -> pow_b0e5b.x\n        data_instance(x: 330, y: -106) data_cde0dc5  = 2\n        pow_b0e5b.y -> data_cde0dc5\n        instance(x: 303, y: -132) div_e6a1c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -129) data_cde0dc6  = 3\n        pow_b0e5b.result -> div_e6a1c.first\n        data_cde0dc6 -> div_e6a1c.second\n        instance(x: 303, y: -155) add_9d2d8 root.Std_k98ojb.Math.Add {}\n        div_e6a1c.result -> add_9d2d8.gen_0\n        div_64046c.result -> add_9d2d8.gen_1\n        instance(x: 303, y: -179) count_4f5a3 root.Std_k98ojb.Math.Count {}\n        n_3a3116 -> count_4f5a3.count\n        instance(x: 303, y: -203) reduce_f9c2e root.Std_k98ojb.Math.Reduce {\n            reducer: \"acc+val\"\n        }\n        add_9d2d8.result -> reduce_f9c2e.gen_1\n        count_4f5a3.count -> reduce_f9c2e.gen_0\n        instance(x: 303, y: -227) for_6b7e2 root.Std_k98ojb.Math.For {\n            items: \"List.GenerateRange(1,n)\"\n        }\n        n_3a3116 -> for_6b7e2.items\n        reduce_f9c2e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_8d5f4 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) pow_5c7b9f root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5c7b9f.x\n        data_instance(x: 330, y: 2) data_3e8d6a = 4\n\n        data_3e8d6a -> pow_5c7b9f.y\n        pow_5c7b9f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_c2f3d0 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 403, y: -1) mul_bf7e5c root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_bf7e5c.first\n        div_64046c.result -> mul_bf7e5c.second\n        mul_bf7e5c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -26) div_7b9f5c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -13) data_f1b4e8  = 3\n        mul_f892a4.result -> div_7b9f5c.first\n        data_f1b4e8 -> div_7b9f5c.second\n        instance(x: 12, y: -40) expression_0d2c6e root.Std_k98ojb.Math.Expression {\n            expression: \"n*n*(16*n*n-20*n+5)\"\n        }\n        n_3a3116 -> expression_0d2c6e.gen_0\n        div_7b9f5c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_f4b8c1 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: 180) pow_7f5e1b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_7f5e1b.x\n        data_instance(x: 330, y: 193) data_8a4d2f = 4\n        data_8a4d2f -> pow_7f5e1b.y\n\n        instance(x: 303, y: 230) add_9c0b3f root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_9c0b3f.first\n        pow_7f5e1b.result -> add_9c0b3f.second\n\n        instance(x: 118, y: -26) for_4d8a2c root.Std_k98ojb.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116 + 1)\n        }\n        for_4d8a2c.on_item -> add_9c0b3f.trigger\n        add_9c0b3f.result -> sum_365f7b\n\n        instance(x: -219, y: 55) count_5e8b6d root.Std_k98ojb.Count {}\n        n_3a3116 -> count_5e8b6d.count\n        for_4d8a2c.reset -> count_5e8b6d.reset\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -26) div_64046c1 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc1  = 3\n        instance(x: 12, y: 136) expression_2d6da61 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a41 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc2  = 3\n        instance(x: 12, y: 136) expression_2d6da62 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        div_64046c.result -> mul_f892a41.first\n        expression_2d6da61.result -> mul_f892a41.second\n        n_3a3116 -> mul_f892a41.gen_0\n        n_3a3116 -> expression_2d6da61.gen_0\n        data_cde0dc1 -> div_64046c1.second\n        mul_f892a41.result -> div_64046c1.first\n\n        instance(x: 303, y: -50) div_64046c2 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc3  = 3\n        instance(x: 12, y: 136) expression_2d6da63 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a42 root.Std_k98ojb.Math.Mul {}\n        div_64046c1.result -> mul_f892a42.first\n        expression_2d6da62.result -> mul_f892a42.second\n        n_3a3116 -> mul_f892a42.gen_0\n        n_3a3116 -> expression_2d6da62.gen_0\n        data_cde0dc2 -> div_64046c2.second\n        mul_f892a42.result -> div_64046c2.first\n\n        instance(x: 303, y: -74) div_64046c3 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc4  = 3\n        instance(x: 12, y: 136) expression_2d6da64 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 23, y: -1) mul_f892a43 root.Std_k98ojb.Math.Mul {}\n        div_64046c2.result -> mul_f892a43.first\n        expression_2d6da63.result -> mul_f892a43.second\n        n_3a3116 -> mul_f892a43.gen_0\n        n_3a3116 -> expression_2d6da63.gen_0\n        data_cde0dc3 -> div_64046c3.second\n        mul_f892a43.result -> div_64046c3.first\n\n        instance(x: 303, y: -98) add_eb9e4f root.Std_k98ojb.Math.Add {}\n        add_eb9e4f.first -> sum_365f7b\n        div_64046c.result -> add_eb9e4f.second\n        div_64046c1.result -> add_eb9e4f.third\n        div_64046c2.result -> add_eb9e4f.fourth\n        div_64046c3.result -> add_eb9e4f.fifth\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_7a1d6d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -20) div_1b8f5c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 53) data_4a9e7e  = 3\n        mul_f892a4.result -> div_1b8f5c.first\n        data_4a9e7e -> div_1b8f5c.second\n        instance(x: 12, y: -21) expression_c6d2b0 root.Std_k98ojb.Math.Expression {\n            expression: \"16*n*n*n*n-8*n*n+1\"\n        }\n        n_3a3116 -> expression_c6d2b0.gen_0\n        instance(x: 303, y: -40) div_e5f7c4 root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 33) data_b9e8aa  = 3\n        mul_f892a4.result -> div_e5f7c4.first\n        data_b9e8aa -> div_e5f7c4.second\n        expression_c6d2b0.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_1a8e3b root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) div_7f9c1e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -13) data_e8c4a5  = 3\n        mul_f892a4.result -> div_7f9c1e.first\n        data_e8c4a5 -> div_7f9c1e.second\n        instance(x: 303, y: -26) pow_a6d0b5 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a6d0b5.x\n        div_7f9c1e.result -> pow_a6d0b5.y\n        instance(x: 303, y: -45) add_f4a3a2 root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_f4a3a2.first\n        pow_a6d0b5.result -> add_f4a3a2.second\n        add_f4a3a2.result -> sum_365f7b\n\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: 50) pow_instance root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_instance.base\n        data_instance(x: 450, y: 100) data_pow = 4\n        data_pow -> pow_instance.exponent\n\n        pow_instance.result -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: 50) pow_a1b2c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a1b2c.x\n        data_instance(x: 450, y: 70) data_b3d4e5 = 4\n\n        pow_a1b2c.y -> data_b3d4e5\n        pow_a1b2c.result -> sum_365f7b\n    }\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5a8f7d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_b9c1e3\n\n        instance(x: 94, y: -105) mul_6b0a4d root.Std_k98ojb.Math.Mul {}\n        size_5a8f7d -> mul_6b0a4d.first\n        6 -> mul_6b0a4d.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_f9c3e2\n\n            out(x: 333, y: -50, name: \"\") property(Number) _8f7a1b\n\n            instance(x: 92, y: -22) mul_4d5a8f root.Std_k98ojb.Math.Mul {}\n            x_f9c3e2 -> mul_4d5a8f.first\n            x_f9c3e2 -> mul_4d5a8f.second\n            mul_4d5a8d.result -> _8f7a1b\n        } -> mul_6b0a4d.handler\n        mul_6b0a4d.result -> surfaceArea_b9c1e3\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e8c3f\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f9d1a5\n\n        instance(x: 94, y: -105) mul_7b2a0f root.Std_k98ojb.Math.Mul {}\n        size_6e8c3f -> mul_7b2a0f.first\n        size_6e8c3f -> mul_7b2a0f.second\n        mul_7b2a0f.result -> surfaceArea_f9d1a5\n\n        instance(x: 94, y: -140) mul_e4d8b4 root.Std_k98ojb.Math.Mul {}\n        mul_7b2a0f.result -> mul_e4d8b4.first\n        6 -> mul_e4d8b4.second\n        mul_e4d8b4.result -> surfaceArea_f9d1a5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1e9c7d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_f5b0f4\n\n        instance(x: 94, y: -105) mul_ea6f2c root.Std_k98ojb.Math.Mul {}\n        size_1e9c7d -> mul_ea6f2c.first\n        6 -> mul_ea6f2c.second\n        mul_ea6f2c.result -> result_f5b0f4\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_3e9c7d root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7e1f5d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_3c9a2b\n\n        instance(x: 94, y: -105) mul_d0c4e8 root.Std_k98ojb.Math.Mul {}\n        size_7e1f5d -> mul_d0c4e8.first\n        size_7e1f5d -> mul_d0c4e8.second\n        mul_d0c4e8.result -> surfaceArea_3c9a2b\n\n        instance(x: 92, y: -22) mul_f9b6f9 root.Std_k98ojb.Math.Mul {}\n        mul_d0c4e8.result -> mul_f9b6f9.first\n        6 -> mul_f9b6f9.second\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_1a2d7c root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7f3d8c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_eb5e9a\n\n        instance(x: 94, y: -105) mul_a2d1f4 root.Std_k98ojb.Math.Mul {}\n        size_7f3d8c -> mul_a2d1f4.first\n        size_7f3d8c -> mul_a2d1f4.second\n        func() {\n            in(x: -121, y: -37, name: \"result\") property(Number) result_f5e6b9\n\n            out(x: 333, y: -50, name: \"\") property(Number) _a0b3c8\n\n            instance(x: 92, y: -22) mul_2f4d7b root.Std_k98ojb.Math.Mul {}\n            result_f5e6b9 -> mul_2f4d7b.first\n            6 -> mul_2f4d7b.second\n            mul_2f4d7b.result -> _a0b3c8\n        } -> mul_a2d1f4.handler\n        mul_a2d1f4.result -> surface_area_eb5e9a\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5f3e8a\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b7c9d2\n\n        instance(x: 94, y: -105) mul_d0b1e4 root.Std_k98ojb.Math.Mul {}\n        size_5f3e8a -> mul_d0b1e4.first\n        size_5f3e8a -> mul_d0b1e4.second\n        mul_d0b1e4.result -> surface_area_b7c9d2\n\n        instance(x: 94, y: -138) mul_6e4b7a root.Std_k98ojb.Math.Mul {}\n        mul_d0b1e4.result -> mul_6e4b7a.first\n        6 -> mul_6e4b7a.second\n        mul_6e4b7a.result -> surface_area_b7c9d2\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a7f6d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_5e8c2f root.Std_k98ojb.Math.Mul {}\n        size_3a7f6d -> mul_5e8c2f.first\n        6 -> mul_5e8c2f.second\n        mul_5e8c2f.result -> result_cbb7bd\n\n        instance(x: -30, y: -46) pow_e9b0cf root.Std_k98ojb.Math.Pow {}\n        size_3a7f6d -> pow_e9b0cf.x\n        2 -> pow_e9b0cf.y\n\n        instance(x: 94, y: -16) mul_f4e8c1 root.Std_k98ojb.Math.Mul {}\n        pow_e9b0cf.result -> mul_f4e8c1.first\n        mul_5e8c2f.result -> mul_f4e8c1.second\n\n        instance(x: 94, y: -16) div_7a3d1f root.Std_k98ojb.Math.Div {}\n        mul_f4e8c1.result -> div_7a3d1f.first\n        6 -> div_7a3d1f.second\n        div_7a3d1f.result -> result_cbb7bd\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e3c8f\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_7a2b9d\n\n        instance(x: 94, y: -105) mul_5b1c0a root.Std_k98ojb.Math.Mul {}\n        size_6e3c8f -> mul_5b1c0a.first\n        size_6e3c8f -> mul_5b1c0a.second\n        mul_5b1c0a.result -> surfaceArea_d4d7a9\n\n        instance(x: 94, y: -145) mul_3a2d7f root.Std_k98ojb.Math.Mul {}\n        surfaceArea_d4d7a9 -> mul_3a2d7f.first\n        6 -> mul_3a2d7f.second\n        mul_3a2d7f.result -> surfaceArea_7a2b9d\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7e1c5d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_eb8a4f\n\n        instance(x: 94, y: -105) mul_3a2f9f root.Std_k98ojb.Math.Mul {}\n        size_7e1c5d -> mul_3a2f9f.first\n        size_7e1c5d -> mul_3a2f9f.second\n        mul_3a2f9f.result -> surfaceArea_eb8a4f\n\n        instance(x: 94, y: -145) mul_6d0b9e root.Std_k98ojb.Math.Mul {}\n        mul_3a2f9f.result -> mul_6d0b9e.first\n        6 -> mul_6d0b9e.second\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_8c5d7f root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1a3d7f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_4b2c9e\n\n        instance(x: 94, y: -105) mul_5a8d6e root.Std_k98ojb.Math.Mul {}\n        size_1a3d7f -> mul_5a8d6e.first\n        6 -> mul_5a8d6e.second\n        mul_5a8d6e.result -> surface_area_4b2c9e\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_f3b7d2 root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -383) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -463) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_val_ai\n\n        instance(x: 426, y: -363) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_val_ai\n\n        instance(x: 426, y: -423) sub_node root.Std_k98ojb.Math.Sub {}\n        max_val_ai -> sub_node.first\n        min_val_ai -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_val_ai property(Number)\n    instance(x: 426, y: -363) min_val_ai property(Number)\n\n    instance(x: 426, y: -423) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -503) math_sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n        math_sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 726, y: -353) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) max_node root.Std_k98ojb.List.Max {}\n\n        items_ai -> min_node.items\n        items_ai -> max_node.items\n        \n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        min_node.min -> sub_node.first\n        max_node.max -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -383) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -463) sub_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range {}\n    instance(x: 426, y: -383) min_node root.main.range {}\n    instance(x: 426, y: -463) range_node root.main.range {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -503) math_subtract_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> math_subtract_node.first\n        list_min_node.min -> math_subtract_node.second\n\n        math_subtract_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.range {}\n    instance(x: 426, y: -403) list_min_node root.main.range {}\n    instance(x: 426, y: -503) math_subtract_node root.main.range {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"(number % 2 == 0)\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) and_3a5f4b root.Std_k98ojb.Logic.And {\n            left: \"number % 2 == 0\"\n            right: true\n        }\n        instance(x: 772, y: 176) modulo_1c9d8e root.Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        modulo_1c9d8e.result -> and_3a5f4b.left\n        and_3a5f4b.result -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"(num_ai % 2 == 0)\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n\n    instance(x: -34, y: 127) check_even_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n            then: true\n            else: false\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.value -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.IsEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_5d3f2a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_7b8c4e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            in(x: -113, y: 54, name: \"index\") property(Number) index_d4e8a1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3f2b9d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_1c8e4b root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            elem_9f6850 -> contains_3f2b9d.input\n            input_5d3f2a -> contains_3f2b9d.contains\n\n            slice_1c8e4b.start -> index_d4e8a1\n            0 -> slice_1c8e4b.end\n            input_5d3f2a -> slice_1c8e4b.list\n\n            notequal_807ffd.right -> contains_3f2b9d.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -55, y: 529) characters_c1e8d5 root.Std_k98ojb.Strings.Characters {}\n        input_5d3f2a -> characters_c1e8d5.input\n        characters_c1e8d5.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_7b8c4e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated_char root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_7g8h9i\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_jk0l1m\n\n            instance(x: 89, y: 29) characters_2n3o4p root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_qr5s6t root.Std_k98ojb.List.Contains {}\n\n            input_string_1a2b3c -> characters_2n3o4p.input\n            characters_2n3o4p.characters -> find_first_repeated_char.items\n\n            instance(x: -150, y: 70) set_seen_chars root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -180, y: 90, name: \"seen\") property(List) seen_3u4v5w\n                in(x: -120, y: 100, name: \"char\") property(Char) char_seen_x1y2z\n\n                out(x: -50, y: 110, name: \"updated_list\") property(List) updated_seen_chars\n\n                instance(x: -170, y: 95) contains_7a8b9c root.Std_k98ojb.List.Contains {}\n                instance(x: -130, y: 105) add_d1e2f3 root.Std_k98ojb.List.Add {}\n\n                seen_3u4v5w -> contains_7a8b9c.list\n                char_seen_x1y2z -> contains_7a8b9c.item\n\n                instance(x: -160, y: 100) if_expression_9g0h1i root.Std_k98ojb.Std.IfExpression {}\n                if_expression_9g0h1i.expression = \"it ? seen : add_d1e2f3(list=seen,item=char_seen_x1y2z).listWithItem\"\n                contains_7a8b9c.result -> if_expression_9g0h1i.input\n                updated_seen_chars <- if_expression_9g0h1i.value\n\n            } -> set_seen_chars.reducer\n            List.Empty() -> set_seen_chars.initialValue\n            characters_2n3o4p.characters -> set_seen_chars.items\n\n            instance(x: -200, y: 130) contains_vwxyza root.Std_k98ojb.List.Contains {}\n            seen_3u4v5w <- set_seen_chars.output_list\n            char_7g8h9i -> contains_vwxyza.item\n            seen_3u4v5w -> contains_vwxyza.list\n\n            contains_vwxyza.result -> bool_jk0l1m\n        } -> find_first_repeated_char.predicate\n        find_first_repeated_char.item -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(Char) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_7g8h9i\n\n            out(x: 515, y: 44, name: \"is_repeated\") property(Bool) is_repeated_j0k1l2\n\n            instance(x: 89, y: 29) contains_check root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_from_chars root.Std_k98ojb.List.GenerateRange {}\n            instance(x: 150, y: 50) add_char root.Std_k98ojb.List.Add {}\n\n            chars_list_3m4n5o -> contains_check.input\n            char_7g8h9i -> contains_check.contains\n\n            list_from_chars.from -> -1\n            list_from_chars.to -> -1\n            list_from_chars.step -> 1\n\n            add_char.list -> list_from_chars.output_list\n            char_7g8h9i -> add_char.item\n            add_char.listWithItem -> chars_list_3m4n5o\n\n            contains_check.result -> is_repeated_j0k1l2\n        } -> find_first_repeated.predicate\n        input_string_1a2b3c -> list_from_chars.characters\n        list_from_chars.output_list -> find_first_repeated.items\n        find_first_repeated.item -> repeated_char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_3a7f9d\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_f4b2e8\n\n        instance(x: 0, y: 0) find_repeated_6c5d9 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_1f7a3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d9c4f2\n\n            instance(x: 89, y: 29) contains_a5b8d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_7e3a1d root.Std_k98ojb.List.Slice {}\n            instance(x: 150, y: 50) characters_4f9c2d root.Std_k98ojb.Strings.Characters {}\n\n            characters_4f9c2d.input -> slice_7e3a1d.list\n            0 -> slice_7e3a1d.start\n            elem_1f7a3e -> contains_a5b8d.contains\n\n            slice_7e3a1d.rest -> find_repeated_6c5d9.items\n            contains_a5b8d.result -> bool_d9c4f2\n        } -> find_repeated_6c5d9.predicate\n        string_3a7f9d -> characters_4f9c2d.input\n        find_repeated_6c5d9.item -> char_f4b2e8\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_1d8b3e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_5f6a2c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) repeated_char_d3b7e8\n\n        instance(x: 0, y: 0) find_repeated_char_9d4f2 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) current_char_3a7c1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_8f9b2d\n\n            instance(x: 89, y: 29) contains_4e5f6 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_1a7c3 root.Std_k98ojb.List.Slice {}\n\n            current_char_3a7c1 -> find_repeated_char_9d4f2.predicate\n            input_string_5f6a2c -> slice_1a7c3.list\n\n            slice_1a7c3.start -> 0\n            slice_1a7c3.end -> -1\n\n            current_char_3a7c1 -> contains_4e5f6.item\n            slice_1a7c3.output -> contains_4e5f6.list\n\n            contains_4e5f6.result -> is_repeated_8f9b2d\n        } -> find_repeated_char_9d4f2.predicate\n        input_string_5f6a2c -> find_repeated_char_9d4f2.items\n        find_repeated_char_9d4f2.item -> repeated_char_d3b7e8\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) result_char_d4e5f6\n\n        instance(x: 0, y: 0) find_repeated_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) current_char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_n3o4p5q\n            instance(x: 89, y: 29) contains_6r7s8t root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_before_u9v0w1x root.Std_k98ojb.List.Slice {}\n            func() {\n                in(x: -113, y: 34, name: \"index\") property(Number) index_y2z3a4\n\n                out(x: 515, y: 44, name: \"list\") property(List) sliced_list_b5c6d7e\n                list_before_u9v0w1x.start -> index_y2z3a4\n                -1 -> list_before_u9v0w1x.end\n                input_string_1a2b3c.characters -> list_before_u9v0w1x.list\n            } -> list_before_u9v0w1x\n\n            contains_6r7s8t.contains -> is_repeated_n3o4p5q\n            current_char_jk1l2m -> contains_6r7s8t.search\n            list_before_u9v0w1x.listWithItem -> contains_6r7s8t.input\n        } -> find_repeated_7g8h9i.predicate\n\n        input_string_1a2b3c.characters -> find_repeated_7g8h9i.items\n        find_repeated_7g8h9i.item -> result_char_d4e5f6\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_5d3a2e\n\n        out(x: 593, y: -1, name: \"character\") property(Char) character_b4f8c9\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_d7e1a4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9f2d8b\n\n            instance(x: 89, y: 29) contains_3c6f5a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_empty_f1e4b7 root.Std_k98ojb.List.NotEmpty {}\n            char_d7e1a4 -> contains_3c6f5a.contains\n            slice_abd8f2.result -> contains_3c6f5a.input\n            not_empty_f1e4b7.isEmpty -> bool_9f2d8b\n\n            instance(x: 89, y: -50) slice_abd8f2 root.Std_k98ojb.List.Slice {}\n            func() {\n                in(x: -113, y: -34, name: \"index\") property(Number) index_c3a7e1\n                list_1b4c9d -> slice_abd8f2.list\n                index_c3a7e1 -> slice_abd8f2.start\n            }\n        } -> find_6d05b0.predicate\n\n        instance(x: -150, y: 100) characters_8e4b2c root.Std_k98ojb.Strings.Characters {}\n        input_string_5d3a2e -> characters_8e4b2c.input\n        characters_8e4b2c.characters -> list_1b4c9d\n\n        instance(x: -150, y: 200) index_generator_f7c6d2 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Char) item_3f5a8e\n            out(x: 515, y: 44, name: \"number\") property(Number) number_7d9c1b\n\n            instance(x: 89, y: 29) index_generator_helper_d4e2b6 {}\n            func() {\n                in(x: -113, y: 34, name: \"index\") property(Number) index_5a3f8d\n                out(x: 515, y: 44, name: \"number\") property(Number) number_1c9f7e\n\n                instance(x: 310, y: 35) add_e4b2f1 root.Std_k98ojb.Math.Add {}\n                index_5a3f8d -> add_e4b2f1.first\n                0 -> add_e4b2f1.second\n                add_e4b2f1.result -> number_1c9f7e\n            } -> index_generator_helper_d4e2b6.handler\n\n            item_3f5a8e -> index_generator_helper_d4e2b6.item\n        }\n        characters_8e4b2c.characters -> index_generator_f7c6d2.items\n        index_generator_f7c6d2.output_list -> list_1b4c9d\n\n        find_6d05b0.item -> character_b4f8c9\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(Char) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_n3o4p5\n\n            instance(x: 89, y: 29) contains_6q7r8s root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_t9u0v1w root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_t9u0v1w.right\n            contains_6q7r8s.result -> not_equal_t9u0v1w.left\n            list_chars -> contains_6q7r8s.input\n            char_jk1l2m -> contains_6q7r8s.contains\n            not_equal_t9u0v1w.result -> bool_n3o4p5\n        } -> find_repeated_7g8h9i.predicate\n        instance(x: -55, y: 529) characters_ab12c3 root.Std_k98ojb.Strings.Characters {}\n        input_string_1a2b3c -> characters_ab12c3.input\n        characters_ab12c3.characters -> list_chars\n        find_repeated_7g8h9i.item -> repeated_char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_7g8h9i\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_jk0l1m\n\n            instance(x: 89, y: 29) contains_2n3o4p root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_from_chars_qr5t6u root.Std_k98ojb.List.GenerateRange {}\n            instance(x: 410, y: 55) slice_vw7x8y root.Std_k98ojb.List.Slice {}\n\n            input_string_1a2b3c -> list_from_chars_qr5t6u.from\n            current_char_7g8h9i -> contains_2n3o4p.contains\n            list_from_chars_qr5t6u.listWithItem -> slice_vw7x8y.list\n\n            0 -> slice_vw7x8y.start\n            -1 -> slice_vw7x8y.end\n            slice_vw7x8y.result -> contains_2n3o4p.input\n\n            contains_2n3o4p.result -> is_repeated_jk0l1m\n        } -> find_first_repeated.predicate\n        input_string_1a2b3c -> list_from_chars_qr5t6u.to\n        list_from_chars_qr5t6u.listWithItem -> find_first_repeated.items\n\n        find_first_repeated.item -> repeated_char_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) repeated_char_d4e5f6\n\n        instance(x: 0, y: 0) find_repeated_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_n3o4p5\n\n            instance(x: 89, y: 29) contains_6q7r8s root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_t9u0v1 root.Std_k98ojb.Logic.NotEqual {}\n\n            List -> contains_6q7r8s.list\n            current_char_jk1l2m -> contains_6q7r8s.contains\n\n            characters_list_a2b3c4 -> contains_6q7r8s.list\n            0 -> notequal_t9u0v1.right\n            contains_6q7r8s.result -> notequal_t9u0v1.left\n            notequal_t9u0v1.result -> is_repeated_n3o4p5\n        } -> find_repeated_7g8h9i.predicate\n\n        instance(x: 150, y: -50) characters_list_a2b3c4 root.Std_k98ojb.Strings.Characters {}\n        input_string_1a2b3c -> characters_list_a2b3c4.input\n\n        find_repeated_7g8h9i.item -> repeated_char_d4e5f6\n        characters_list_a2b3c4.characters -> find_repeated_7g8h9i.items\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> slice_input.items\n\n        instance(x: 426, y: -423) list_slice_node Std_k98ojb.List.Slice {\n            start: 1,\n            end: 2\n        }\n        slice_input.items -> list_slice_node.list\n        list_slice_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.list -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        instance(x: 426, y: -588) list_min_node root.Std_k98ojb.List.Min {}\n        list_slice_node.slice -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -423) slice_list node.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_list.list\n        slice_list.start = 1\n        slice_list.end = -1\n\n        instance(x: 426, y: -519) list_min_node root.Std_k98ojb.List.Min {}\n        slice_list.slice -> list_min_node.items\n        \n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_items_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.list -> list_slice_node.list\n        instance(x: 426, y: -588) number_get_at_node root.Std_k98ojb.List.GetAt {}\n        list_slice_node.slice -> number_get_at_node.list\n        instance(x: 426, y: -723) min_node root.Std_k98ojb.List.Min {}\n        number_get_at_node.item -> min_node.items\n\n        min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n    second_smallest_num_node.items <- [3, 1, 4, 1, 5, 9]\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -378) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.list -> list_slice_node.list\n        instance(x: 159, y: -453) number_1 root.Std_k98ojb.Number {}\n        number_1.value = 1\n        list_slice_node.start -> number_1.input\n        instance(x: 426, y: -498) number_2 root.Std_k98ojb.Number {}\n        number_2.value = 2\n        list_slice_node.end -> number_2.input\n        list_slice_node.listWithoutSlice -> second_smallest_num_node.items\n        instance(x: 426, y: -573) list_min_node root.Std_k98ojb.List.Min {}\n        second_smallest_num_node.items -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_sort_node root.main.second_smallest_num {}\n    instance(x: 426, y: -378) list_slice_node root.main.second_smallest_num {}\n    instance(x: 159, y: -453) number_1 root.main.second_smallest_num {}\n    instance(x: 426, y: -498) number_2 root.main.second_smallest_num {}\n    instance(x: 426, y: -573) list_min_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_first_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_first_min_node.items\n        list_first_min_node.min -> first_min_ai\n\n        instance(x: 426, y: -453) filter_node root.Std_k98ojb.Iteration.Filter {\n            func(doc: \"filters out the smallest number\") handler {\n                in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n                out(x: 159, y: -219, name: \"result\") property(Boolean) result_ai\n\n                instance(x: 426, y: -303) greater_than_node root.Std_k98ojb.Math.GreaterThan {}\n                item_ai -> greater_than_node.left\n                first_min_ai -> greater_than_node.right\n                greater_than_node.result -> result_ai\n            }\n        }\n        items_ai -> filter_node.items\n        instance(x: 426, y: -588) list_second_min_node root.Std_k98ojb.List.Min {}\n        filter_node.output_list -> list_second_min_node.items\n        list_second_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) first_min_node root.main.second_smallest_num {}\n    first_min_node.first_min_ai -> instance(x: 426, y: -453) filter_node.root.main.second_smallest_num {}\n    instance(x: 426, y: -588) second_min_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 426, y: -423) list_slice_node Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        list_slice_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> slice_input.items\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {\n            start: 1,\n            end: -1\n        }\n        slice_input.items -> list_slice_node.list\n        list_slice_node.listWithoutItem -> second_min_output.items\n\n        instance(x: 426, y: -519) list_min_node root.Std_k98ojb.List.Min {}\n        second_min_output.items -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_instance root.main.second_smallest_num.list_sort_node {}\n\n    property(List) slice_input\n    property(List) second_min_output\n\n    \n    instance(x: 426, y: -423) slice_instance root.main.second_smallest_num.list_slice_node {}\n\n    \n    instance(x: 426, y: -519) min_instance root.main.second_smallest_num.list_min_node {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 426, y: -453) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        instance(x: 426, y: -483) number_1_node root.Std_k98ojb.Number(1) {}\n        number_1_node.number -> slice_node.start\n        instance(x: 426, y: -513) number_minus_1_node root.Std_k98ojb.Number(-1) {}\n        number_minus_1_node.number -> slice_node.end\n\n        instance(x: 426, y: -543) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_node.slice -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        list_slice_node.rest_of_list -> list_first_item_node.items\n\n        instance(x: 426, y: -588) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 4982,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_intersection {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_b5c9d8\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty: instance(x: -8, y: -53) not_empty_a5c4d9 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty.list\n        not_empty.isEmpty -> has_common_element_b5c9d8\n    }\n\n    \n\n    instance(x: 93, y: -122) list_intersection_cbc0b6 root.main.list_intersection {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3a8d5e\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty:instance(x: 0, y: -40) NotEmpty_4e8c54 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> NotEmpty_4e8c54.list\n        NotEmpty_4e8c54.isEmpty -> has_common_element_3a8d5e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty_0d40f1 := instance(x: 233, y: -110) Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty_0d40f1.list\n        not_empty_0d40f1.isEmpty -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_3a8d7e\n\n        instance(x: 133, y: -131) intersection_4b5c6f root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_4b5c6f.left\n        list2_c62075 -> intersection_4b5c6f.right\n\n        instance(x: 133, y: -201) if_7e8d9a root.Std_k98ojb.Std.If {}\n        intersection_4b5c6f.intersect -> if_7e8d9a.input\n        func() {\n            out(x: 245, y: -54, name: \"true\") property(Bool) true_1a2b3c\n            true_1a2b3c = true\n        } -> if_7e8d9a.then\n        func() {\n            out(x: 245, y: -54, name: \"false\") property(Bool) false_4f5g6h\n            false_4f5g6h = false\n        } -> if_7e8d9a.else\n\n        if_7e8d9a.value -> result_3a8d7e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_instance root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_e245cb\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty_4e8c54 <- intersection_201051.intersect.NotEmpty()\n        not_empty_4e8c54.isEmpty -> result_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_b3c0e5\n\n        instance(x: 133, y: -131) intersection_1b7f4a root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1b7f4a.left\n        list2_c62075 -> intersection_1b7f4a.right\n\n        instance(x: 0, y: -54) not_empty_5c8e6d root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b7f4a.intersect -> not_empty_5c8e6d.list\n        not_empty_5c8e6d.isEmpty -> has_common_element_b3c0e5\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_f9c2e1 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_ae8c5b root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_ae8c5b.left\n        list2_c62075 -> intersection_ae8c5b.right\n        intersection_ae8c5b.intersect -> result_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_instance root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7c9d5a\n\n        instance(x: 133, y: -131) intersection_3f8b4a root.Std_k98ojb.Sets.Intersection {}\n        list1_1f98e2 -> intersection_3f8b4a.left\n        list2_c62075 -> intersection_3f8b4a.right\n        instance(x: 133, y: -131) not_5c9d6a root.Std_k98ojb.Logic.Not {}\n        intersection_3f8b4a.intersect -> not_5c9d6a.input\n        not_5c9d6a.output -> has_common_element_7c9d5a\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96e7 -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty_0d40f1 := instance(x: 245, y: -54) NotEmpty_3c8e4f root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty_0d40f1.list\n        not_empty_0d40f1.isEmpty -> has_common_element_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_e245cb\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96c -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") is_consecutive {\n        in(x: -526, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_ae4d9c\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c9f1c4 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_ae4d9c -> sub_c9f1c4.first\n            _index_769593 -> sub_c9f1c4.second\n            sub_c9f1c4.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_3f8c0d root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_769593 -> sub_3f8c0d.second\n            1 -> sub_3f8c0d.first\n            list_07cae4[_index_769593] -> sub_3f8c0d.first\n            list_07cae4[sub_3f8c0d.result] -> sub_3f8c0d.second\n\n            sub_3f8c0d.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            _index_769593 -> modulo_c76d2b.value\n            2 -> modulo_c76d2b.divisor\n\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_b4b9e1 root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_result_8d07dc\n\n        instance(x: 847, y: -207) sorted_list_32727d root.Std_k98ojb.List.Sort {}\n        instance(x: 1058, y: -203) filter_consecutive_numbers_75283f root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_number_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) is_consecutive_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n\n            sub_c76d2b.first -> current_number_170471\n            sorted_list_32727d.item -> sub_c76d2b.second\n            index_769593 -> sorted_list_32727d.index\n\n            1 -> sub_c76d2b.result\n            equal_7836b4.left -> sub_c76d2b.result\n            0 -> equal_7836b4.right\n            equal_7836b4.result -> is_consecutive_efbc78\n        } -> filter_consecutive_numbers_75283f.handler\n\n        sorted_list_32727d.list -> input_list_07cae4\n        sorted_list_32727d.output_list -> filter_consecutive_numbers_75283f.items\n\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Bool) current_result_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) final_result_4524be\n\n            instance(x: 74, y: -23) or_ad7b2a root.Std_k98ojb.Logic.Or {}\n            instance(x: 285, y: -25) first_item_cb8a55 root.Std_k98ojb.List.FirstItem {}\n\n            current_result_81298e -> or_ad7b2a.left\n            filter_consecutive_numbers_75283f.index == 0 -> or_ad7b2a.right\n            or_ad7b2a.result -> final_result_4524be\n        } -> output_result_8d07dc.handler\n\n        filter_consecutive_numbers_75283f.output_list -> filter_consecutive_numbers_75283f.items\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) filter_ae2b5f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_ae2d7c\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_ae2d7c -> sub_c76d2b.first\n            _index_769593 -> sub_c76d2b.second\n            sub_c76d2b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_ae2b5f.handler\n\n        list_07cae4 -> filter_ae2b5f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_ad7b2a root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> sub_ad7b2a.first\n            _index_769593 -> sub_ad7b2a.second\n            sub_ad7b2a.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        filter_ae2b5f.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_result_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"check consecutive\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_bf5b8a root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_170471 -> sub_bf5b8a.first\n            index_769593 -> sub_bf5b8a.second\n            sub_bf5b8a.result -> notequal_7836b4.left\n\n            index_769593 + 1 -> sub_bf5b8a.second\n            current_170471 -> sub_bf5b8a.first\n            sub_bf5b8a.result -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n\n        input_list_07cae4 -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_item_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_result_4524be\n\n            instance(x: 74, y: -23) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_item_81298e -> sub_c76d2b.first\n            current_item_81298e + 1 -> sub_c76d2b.second\n            sub_c76d2b.result -> notequal_cb8a55.left\n\n            current_item_81298e - 1 -> sub_c76d2b.second\n            current_item_81298e -> sub_c76d2b.first\n            sub_c76d2b.result -> notequal_cb8a55.right\n\n            notequal_cb8a55.result -> bool_result_4524be\n        } -> map_c73e3b.handler\n\n        filter_c91965.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_result_8d07dc\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 71, y: 79, name: \"_next\") property(Number) _next_e6c0a1\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_3b8d2f root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_3b8d2f.first\n            _next_e6c0a1 -> sub_3b8d2f.second\n            sub_3b8d2f.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: -303, y: -205, name: \"zip with next item\") zip_b0d7c9 root.Std_k98ojb.Iteration.Zip {}\n        func() {\n            in(x: 71, y: 79, name: \"_next\") property(Number) _next_e6c0a1\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) slice_7f9b2d root.Std_k98ojb.List.Slice {}\n            slice_7f9b2d.start -> 1\n            list_07cae4 -> slice_7f9b2d.list\n            slice_7f9b2d.end -> -1\n            slice_7f9b2d.result -> output_efbc78\n        } -> zip_b0d7c9.right\n        list_07cae4 -> zip_b0d7c9.left\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_d5c8a9 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) getat_6e1f0d root.Std_k98ojb.List.GetAt {}\n\n            _index_769593 -> getat_6e1f0d.index\n            list_07cae4 -> getat_6e1f0d.list\n            sub_d5c8a9.second -> getat_6e1f0d.result\n            current_81298e -> sub_d5c8a9.first\n            sub_d5c8a9.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -192, y: 12, name: \"list\") property(List) list_0f1b7d\n\n            out(x: 521, y: 29, name: \"output\") property(Bool) output_5a2f8c\n\n            instance(x: 74, y: 26) filter_6e4a3c root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 285, y: 28) equal_9d7e1a root.Std_k98ojb.Logic.Equal {}\n\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                instance(x: 463, y: 51) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n\n                current_81298e -> modulo_c76d2b.value\n                1 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> output_efbc78\n            } -> filter_6e4a3c.handler\n\n            map_c73e3b.output_list -> filter_6e4a3c.items\n            filter_6e4a3c.output_list -> equal_9d7e1a.left\n            list_0f1b7d -> equal_9d7e1a.right\n            equal_9d7e1a.result -> output_5a2f8c\n        } -> contains_32727d.handler\n\n        func() {\n            in(x: -192, y: 12, name: \"list\") property(List) list_0f1b7d\n\n            out(x: 521, y: 29, name: \"output\") property(Bool) output_5a2f8c\n\n            instance(x: 74, y: 26) filter_6e4a3c root.Std_k98ojb.Iteration.Filter {}\n            instance(x: 285, y: 28) equal_9d7e1a root.Std_k98ojb.Logic.Equal {}\n\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                instance(x: 463, y: 51) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n\n                current_81298e -> modulo_c76d2b.value\n                1 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> output_efbc78\n            } -> filter_6e4a3c.handler\n\n            map_c73e3b.output_list -> filter_6e4a3c.items\n            filter_6e4a3c.output_list -> equal_9d7e1a.left\n            list_0f1b7d -> equal_9d7e1a.right\n            equal_9d7e1a.result -> output_5a2f8c\n        } -> contains_32727d.handler\n\n        map_c73e3b.items -> list_07cae4\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_b9c1a2 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 71, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            _index_769593 -> modulo_c76d2b.divisor\n            1 -> notequal_7836b4.right\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_f8a1c7\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_a6f9b2 root.Std_k98ojb.Logic.Not {}\n            not_a6f9b2.result -> bool_4524be\n            current_f8a1c7 -> not_a6f9b2.input\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_f7a4da root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) filter_1a2b3c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1058, y: -203) any_true_4f5g6h root.Std_k98ojb.List.Contains {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_abc123 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_def456 root.Std_k98ojb.Logic.Equal {}\n\n            _index_769593 -> sub_abc123.second\n            current_81298e -> sub_abc123.first\n            sub_abc123.result -> equal_def456.left\n\n            if(_index_769593 == 0) {\n                1 -> equal_def456.right\n            } else {\n                List.GetAt(list_07cae4, _index_769593 - 1) -> equal_def456.right\n            }\n\n            equal_def456.result -> output_efbc78\n        } -> filter_1a2b3c.handler\n\n        list_01cae4 -> filter_1a2b3c.items\n        filter_1a2b3c.output_list -> any_true_4f5g6h.list\n        true -> any_true_4f5g6h.item\n        any_true_4f5g6h.is_contained -> output_8d07dc\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_ba9c0b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_ba9c0b.first\n            list_07cae4[_index_769593 + 1] -> sub_ba9c0b.second\n            sub_ba9c0b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4[0..-2] -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) not_8a1f7b root.Std_k98ojb.Logic.Not {}\n            current_81298e -> not_8a1f7b.input\n            not_8a1f7b.result -> bool_4524be\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if 'sublist' is a sublist of 'main_list'.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_5bbcd7\n        ifexpression_875761.else -> continue_a96db6\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        for_d26972.index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_1\n        sublist_ec88cd -> ifexpression_875761.gen_0\n\n        0 -> ifexpression_875761.gen_2\n        ifexpression_875761.value -> output_5bbcd7\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> getat_ce2a48.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sub_for.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sub_for.done -> continue_a96db6\n        sub_for.onItem -> ifexpression_sublist.execute\n        main_list_ec88cd -> getat_main.list\n        index -> getat_main.index\n        getat_main.itemAtIndex -> compare.value_1\n        sublist_ec88cd -> getat_sub.list\n        i -> getat_sub.index\n        getat_sub.itemAtIndex -> compare.value_0\n        compare.result -> ifexpression_sublist.gen_2\n        index -> ifexpression_sublist.gen_0\n        0 -> ifexpression_sublist.gen_1\n        sub_for.onItem -> ifexpression_sublist.execute\n        ifexpression_sublist.else -> setter_9d4f1c.next\n        ifexpression_sublist.then -> sub_for.reset\n        ifexpression_sublist.value -> output_5bbcd7\n        execute_90aaec -> sub_for.trigger\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 800, y: -50) ifexpression_sublist root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous\"\n        }\n        getter(x: 500, y: 100, name: \"getter_sub\") getter_sub = i\n        setter(x: 850, y: -200, name: \"setter_sub\") setter_sub = i\n        instance(x: 700, y: -150) sub_for root.Std_k98ojb.Std.For {}\n        instance(x: 500, y: -300) compare root.Std_k98ojb.Logic.Equal {}\n        instance(x: 350, y: -450) getat_main root.Std_k98ojb.List.GetAt {}\n        instance(x: 100, y: -550) getat_sub root.Std_k98ojb.List.GetAt {}\n\n        sub_for.item -> ifexpression_sublist.gen_2\n        getter_sub.value -> ifexpression_sublist.gen_1\n        sub_for.index -> ifexpression_sublist.gen_0\n        setter_sub.new_value -> i\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || sublist_index < len(sublist)\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_element\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_element\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_ec88cd -> getat_ce2a48.list\n        sublist_index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.next\n        setter_9d4f1c.continue -> if(sublist_index < len(sublist), then: for_d26972.next, else: continue_a96db6)\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"super_list\") property(List) super_list_ec88cd\n        in(x: -485, y: 150, name: \"sub_list\") property(List) sub_list_f1c2b3\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == sub_index\"\n        }\n        instance(x: 752, y: -100) ifexpression_2c4d3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_list[index] == super_list[sub_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sub_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sub_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sub_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 321, y: 160) for_3c7b5a root.Std_k98ojb.Std.For {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_2c4d3a.then -> setter_9d4f1c.execute\n        ifexpression_2c4d3a.else -> for_d26972.next\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> for_3c7b5a.trigger\n        sub_list_f1c2b3 -> for_3c7b5a.items\n        for_3c7b5a.item -> ifexpression_875761.gen_2\n        for_3c7b5a.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_2c4d3a.execute\n        for_d26972.done -> continue_a96db6\n        super_list_ec88cd -> getat_ce2a48.list\n        sub_index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        for_d26972.item -> ifexpression_2c4d3a.gen_0\n        setter_9d4f1c.continue -> for_d26972.next\n        setter_38e107.continue -> for_d26972.reset\n        for_3c7b5a.onItem -> continue_a96db6\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_f9c3e1\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_f9c3e1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> filter_2b8a0c.items\n        filter_2b8a0c.outputList -> for_d26972.items\n        filter_2b8a0c.handler.value -> issublist_fc79d5.isInMainList\n        filter_2b8a0c.handler.index -> issublist_fc79d5.indexInSublist\n        filter_2b8a0c.handler.item -> sublist_5bbcd7.GetItem\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 750, y: -100) filter_2b8a0c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 800, y: -200) issublist_fc79d5 root.main.issublist {}\n\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_main root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == sublist_index || main_list_item == sublist_item\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_sublist_index = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_sublist_index = sublist_index\n        instance(x: 321, y: -20) for_main_list_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_main_list_item = main_list_item\n        instance(x: -275, y: -35) getat_sublist_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_sublist_index.execute\n\n        main_list_ec88cd -> for_main_list_d26972.items\n        for_main_list_d26972.item -> setter_main_list_item.new_value\n        for_main_list_d26972.index -> ifexpression_875761.gen_0\n        getter_sublist_index.value -> ifexpression_875761.gen_1\n\n        sublist_ec88cd -> getat_sublist_ce2a48.list\n        0 -> getat_sublist_ce2a48.index\n        getat_sublist_ce2a48.itemAtIndex -> setter_main_list_item.new_value\n\n        for_main_list_d26972.onItem -> ifexpression_875761.execute\n        for_main_list_d26972.done -> continue_a96db6\n\n        execute_90aaec -> setter_main_list_item.execute\n        setter_main_list_item.continue -> for_main_list_d26972.next\n        getter_sublist_index.value -> getat_sublist_ce2a48.index\n        ifexpression_875761.value -> setter_sublist_index.new_value\n        setter_sublist_index.continue -> continue_a96db6\n\n        instance(x: 321, y: -20) for_sublist_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_main_list_item = main_list_item\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_sublist_index_reset = sublist_index\n\n        for_sublist_d26972.items -> sublist_ec88cd\n        for_sublist_d26972.item -> getter_main_list_item.new_value\n        for_sublist_d26972.index -> ifexpression_875761.gen_2\n        getter_main_list_item.value -> ifexpression_875761.gen_3\n\n        setter_sublist_index_reset.new_value = 0\n        setter_sublist_index_reset.execute -> for_sublist_d26972.reset\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < main_list_length - sublist_length + 1 && sublist == slice\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) slice_3a2d7c root.Std_k98ojb.List.Slice {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> slice_3a2d7c.list\n        getter_b280eb.value -> slice_3a2d7c.start\n        index + sublist_length - 1 -> slice_3a2d7c.end\n        sublist_ec88cd -> ifexpression_875761.gen_1\n\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_2\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        slice_3a2d7c.slicedList -> ifexpression_875761.gen_0\n\n        for_d26972.item -> setter_9d4f1c.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 10, y: -177) length_main root.Std_k98ojb.List.Length {}\n        main_list_ec88cd -> length_main.list\n        length_main.length -> index_length\n\n        instance(x: 300, y: -177) length_sublist root.Std_k98ojb.List.Length {}\n        sublist_ec88cd -> length_sublist.list\n        length_sublist.length -> sublist_length\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 500, y: 50) for_sublist_f3a7d6 root.Std_k98ojb.Std.For {}\n\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        \n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> for_sublist_f3a7d6.items\n        \n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        \n        for_sublist_f3a7d6.item -> setter_9d4f1c.new_value\n        for_sublist_f3a7d6.index -> getter_b280eb.value\n\n        list_contains_check: instance(x: 700, y: -150) ifexpression_list_check root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_item == main_list_item\"\n        }\n\n        list_contains_check.else -> continue_a96db6\n        list_contains_check.then -> for_sublist_f3a7d6.next\n\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        \n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        for_sublist_f3a7d6.onItem -> list_contains_check.execute\n        for_sublist_f3a7d6.done -> continue_a96db6\n        \n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n\n        list_contains_check.value -> output_5bbcd7\n\n        for_sublist_f3a7d6.reset -> continue_a96db6\n        for_d26972.next -> for_sublist_f3a7d6.reset\n        \n        setter_9d4f1c.continue -> for_sublist_f3a7d6.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"outer_list\") property(List) outer_list_ec88cd\n        in(x: -485, y: 160, name: \"inner_list\") property(List) inner_list_1a2b3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || outer[current_outer_index] == inner[current_inner_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = current_inner_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = current_inner_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = current_outer_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        outer_list_ec88cd -> for_d26972.items\n        inner_list_1a2b3c -> for_inner.List\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        outer_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 321, y: -20) for_inner root.Std_k98ojb.Std.For {}\n        inner_list_1a2b3c -> for_inner.items\n        for_inner.item -> ifexpression_inner.gen_0\n        getter_inner.List -> ifexpression_inner.gen_1\n        setter_inner.List -> ifexpression_inner.gen_2\n        ifexpression_inner.value -> output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_inner root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || inner[index] == outer[current_outer_index]\"\n        }\n        getter_inner.List = current_outer_index\n        setter_inner.List = current_outer_index\n        for_inner.onItem -> ifexpression_inner.execute\n        for_inner.done -> continue_a96db6\n        for_inner.item -> setter_inner.new_value\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_f3a1d9\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || found\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> sublist_check.sublist_item\n        for_d26972.index -> index_check.main_index\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.onItem -> sublist_check.execute\n        for_d26972.done -> continue_a96db6\n        sublist_check.found -> ifexpression_875761.gen_1\n\n        instance(x: 500, y: -200) for_sublist root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") index_check = main_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") sublist_found = found\n\n        instance(x: 700, y: -300) ifexpression_sublist root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_item == main_list_item\"\n        }\n        ifexpression_sublist.then -> sublist_found.execute\n        for_sublist.item -> ifexpression_sublist.sublist_item\n        sublist_check.main_list_item -> ifexpression_sublist.main_list_item\n        index_check.value -> ifexpression_sublist.index\n        ifexpression_sublist.else -> for_sublist.next\n\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 500, y: -400) sublist_check root.Std_k98ojb.Iteration.Filter {\n            handler: is_sublist_handler\n        }\n        in(x: 700, y: -450, name: \"sublist_item\") property(Object) sublist_item\n        out(x: 900, y: -450, name: \"found\") property(Bool) found\n\n        instance(x: 800, y: -500) is_sublist_handler root.Std_k98ojb.Iteration.Filter {\n            handler: check_sublist\n        }\n        in(x: 700, y: -550, name: \"main_list_item\") property(Object) main_list_item\n        out(x: 900, y: -550, name: \"result\") property(Bool) result\n\n        instance(x: 800, y: -600) check_sublist root.Std_k98ojb.Iteration.Map {\n            handler: compare_items\n        }\n        in(x: 700, y: -650, name: \"index\") property(Number) index\n        out(x: 900, y: -650, name: \"result_list\") property(List) result_list\n\n        instance(x: 800, y: -700) compare_items root.Std_k98ojb.Iteration.Filter {\n            handler: item_comparison\n        }\n        in(x: 700, y: -750, name: \"sublist_item\") property(Object) sublist_item_2\n        out(x: 900, y: -750, name: \"result\") property(Bool) result_2\n\n        instance(x: 800, y: -800) item_comparison root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_item_2 == main_list_item\"\n        }\n        item_comparison.value -> compare_items.output\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_numbers\") property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_numbers_ai -> find_missing_node.sorted_numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(sorted_numbers: -426, y: -248) property(List) sorted_numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop Std_k98ojb.Std.For {}\n        instance(x: 426, y: -403) if_missing Std_k98ojb.Std.If {}\n\n        sorted_numbers_ai -> loop.items\n        loop.on_item -> if_missing.input\n\n        instance(x: 426, y: -503) index_counter Std_k98ojb.Std.Count {}\n        index_counter.reset -> loop.reset\n        loop.next -> index_counter.count\n\n        index_counter.count -> if_missing.expression {\n            expression: \"it != sorted_numbers[0] + it\"\n        }\n\n        if_missing.then -> missing_number_ai.value {\n            value: \"sorted_numbers[0] + it\"\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_numbers_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_numbers_node.items\n\n        instance(x: 426, y: -483) check_missing_node root.main.check_missing {}\n        iterate_numbers_node.output_list -> check_missing_node.numbers\n\n        check_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"checks for the smallest missing number in a sorted list.\") check_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_with_index_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_with_index_node.items\n\n        instance(x: 426, y: -483) find_missing_logic_node root.main.find_missing_logic {}\n        iterate_with_index_node.output_list -> find_missing_logic_node.numbers\n\n        find_missing_logic_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number by comparing indices and values.\") find_missing_logic {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_with_index_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_with_index_node.items\n\n        instance(x: 426, y: -483) check_missing_logic_node root.main.check_missing_logic {}\n        iterate_with_index_node.output_list -> check_missing_logic_node.numbers\n\n        check_missing_logic_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"checks each number against its index to find the missing one.\") check_missing_logic {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_with_index_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_with_index_node.items\n\n        instance(x: 426, y: -483) compare_logic_node root.main.compare_logic {}\n        iterate_with_index_node.output_list -> compare_logic_node.numbers\n\n        compare_logic_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"compares index and value to find the first mismatch.\") compare_logic {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_with_index_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_with_index_node.items\n\n        instance(x: 426, y: -483) compare_logic_node root.main.compare {}\n        iterate_with_index_node.output_list -> compare_logic_node.numbers\n\n        compare_logic_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"compares index and value to find the first mismatch.\") compare {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_with_index_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_with_index_node.items\n\n        instance(x: 426, y: -483) compare_logic_instance root.main.compare_logic_instance {}\n        iterate_with_index_node.output_list -> compare_logic_instance.numbers\n\n        compare_logic_instance.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"compares index and value to find the first mismatch.\") compare_logic_instance {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_with_index_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_with_index_node.items\n\n        instance(x: 426, y: -483) compare_instance_logic root.main.compare_instance {}\n        iterate_with_index_node.output_list -> compare_instance_logic.numbers\n\n        compare_instance_logic.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"compares index and value to find the first mismatch.\") compare_instance {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_with_index_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_with_index_node.items\n\n        instance(x: 426, y: -483) if_expression_logic root.Std_k98ojb.Std.IfExpression {}\n        iterate_with_index_node.output_list -> if_expression_logic.items\n\n        if_expression_logic.value -> compare_instance_logic.missing_number\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) iterate_numbers_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_numbers_node.items\n        iterate_numbers_node.output_list -> find_missing_node.result_list\n\n        func(doc: \"checks if the current number is as expected.\") check_expected {\n            in(x: -426, y: -248, name: \"current\") property(Number) current_ai\n            in(x: -426, y: -219, name: \"index\") property(Number) index_ai\n            out(x: 159, y: -219, name: \"expected\") property(Number) expected_ai\n\n            instance(x: 426, y: -303) add_one_node root.Std_k98ojb.Math.Add {}\n            index_ai -> add_one_node.first\n            number_1 -> add_one_node.second\n            add_one_node.result -> expected_ai\n\n            Logic_k98ojb.Compare.Equal {\n                left: current_ai\n                right: expected_ai\n                then: continue_node.trigger\n                else: missing_found_node.trigger\n            }\n        }\n\n        instance(x: 426, y: -303) check_expected_node root.main.check_expected {}\n        iterate_numbers_node.output_list.item -> check_expected_node.current\n        iterate_numbers_node.index -> check_expected_node.index\n\n        func(doc: \"continues the iteration.\") continue {\n            trigger()\n        }\n\n        instance(x: 426, y: -303) continue_node root.main.continue {}\n\n        Logic_k98ojb.Compare.Equal {\n            left: find_missing_node.result_list.length\n            right: numbers_ai.length\n            then: missing_found_node.trigger\n            else: continue_node.trigger\n        }\n\n        func(doc: \"sets the missing number.\") missing_found {\n            in(x: -426, y: -248, name: \"current\") property(Number) current_ai\n\n            instance(x: 426, y: -303) add_one_node root.Std_k98ojb.Math.Add {}\n            current_ai -> add_one_node.first\n            number_1 -> add_one_node.second\n            add_one_node.result -> missing_ai\n\n            trigger()\n        }\n\n        instance(x: 426, y: -303) missing_found_node root.main.missing_found {}\n        iterate_numbers_node.output_list.item -> missing_found_node.current\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_list_ai -> find_missing_node.sorted_list\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(sorted_list: List) property(List) sorted_list_ai\n        out(missing_number: Number) property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        sorted_list_ai -> iteration_find_node.items\n        \n        instance(x: 426, y: -453) lambda_node root.Std_k98ojb.Lambda {}\n        lambda_node.expression = \"it != index\"\n        \n        iteration_find_node.predicate <- lambda_node.handler\n        iteration_find_node.index <- true\n\n        instance(x: 426, y: -603) if_missing_node root.Std_k98ojb.If {}\n        iteration_find_node.item -> if_missing_node.input\n        \n        instance(x: 426, y: -753) math_add_node root.Std_k98ojb.Math.Add {}\n        math_add_node.first <- true\n        math_add_node.second <- false\n\n        if_missing_node.then -> math_add_node.trigger\n        iteration_find_node.index -> math_add_node.first\n        math_add_node.result -> missing_number_ai\n        \n        instance(x: 426, y: -903) list_length_node root.Std_k98ojb.List.Length {}\n        sorted_list_ai -> list_length_node.list\n\n        if_missing_node.else -> list_length_node.trigger\n        list_length_node.length -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.main.find_smallest_missing {}\n        numbers_ai -> find_smallest_missing_node.numbers\n        find_smallest_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"helper function to find the smallest missing number.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        iteration_find_node.predicate = (it: Number, index: Number) -> {\n            return it != index + 1\n        }\n        numbers_ai -> iteration_find_node.items\n\n        instance(x: 426, y: -453) if_missing_number node.Std_k98ojb.If {}\n        find_smallest_missing_node.done -> if_missing_number.input\n        iteration_find_node.item -> if_missing_number.value\n\n        if_missing_number.then {\n            out(x: 159, y: -414, name: \"value\") property(Number) value_ai\n            iteration_find_node.item -> value_ai\n        }\n\n        if_missing_number.else {\n            instance(x: 426, y: -588) math_add node.Std_k98ojb.Math.Add {}\n            List.List.GenerateRange(from: Number(1), to: List.Length(list: numbers_ai)) -> math_add.first\n            List.LastItem(list: numbers_ai) -> math_add.second\n\n            out(x: 159, y: -549, name: \"result\") property(Number) result_ai\n            math_add.result -> result_ai\n        }\n\n        if_missing_number.value -> missing_number_ai\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -403) if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n\n        for_node.item -> if_node.input\n        for_node.index -> if_node.value\n        Math_k98ojb.Math.Sub {\n            first: for_node.index\n            second: for_node.item\n            result: -1\n        } -> if_node.then\n        Math_k98ojb.Math.Add {\n            first: for_node.item\n            second: 1\n            result: -1\n        } -> if_node.else\n\n        instance(x: 426, y: -503) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        instance(x: 426, y: -603) math_expression_node root.Std_k98ojb.Math.Expression {}\n\n        for_node.item -> iteration_find_node.items\n        if_node.value -> iteration_find_node.predicate\n\n        Math_k98ojb.Math.Add {\n            first: for_node.lastItem\n            second: 1\n            result: -1\n        } -> math_expression_node.expression\n        math_expression_node.result -> missing_number_ai\n\n        iteration_find_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n        instance(x: 426, y: -603) math_sub_node root.Std_k98ojb.Math.Sub {}\n\n        sorted_list_ai -> for_node.items\n        for_node.trigger -> if_node.input\n\n        for_node.index -> math_sub_node.first\n        for_node.item -> math_sub_node.second\n        math_sub_node.result -> missing_number_ai\n\n        for_node.on_item -> if_node.then\n        if_node.else -> for_node.next\n\n        instance(x: 426, y: -753) std_if_expression_node root.Std_k98ojb.IfExpression {}\n        instance(x: 426, y: -903) math_greater_than_node root.Std_k98ojb.Math.GreaterThan {}\n\n        std_if_expression_node.expression = \"index + 1 != item\"\n        std_if_expression_node.value -> if_node.input\n\n        for_node.index -> math_greater_than_node.left\n        sorted_list_ai.FirstItem() -> math_greater_than_node.right\n\n        math_greater_than_node.result -> std_if_expression_node.a\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) std_for_node root.Std_k98ojb.For {}\n        numbers_ai -> std_for_node.items\n        std_for_node.trigger -> trigger_start\n        instance(x: 426, y: -453) start_trigger root.Std_k98ojb.Trigger {}\n        start_trigger.trigger -> std_for_node.trigger\n\n        instance(x: 426, y: -603) check_missing_node root.main.check_missing {}\n        std_for_node.index -> check_missing_node.index\n        std_for_node.item -> check_missing_node.current_num\n        check_missing_node.missing -> missing_ai\n\n        std_for_node.done -> done_trigger\n        instance(x: 426, y: -753) end_trigger root.Std_k98ojb.Trigger {}\n        end_trigger.trigger -> missing_ai.set(1)\n    }\n\n    func(doc: \"checks if the current number is missing in sequence.\") check_missing {\n        in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n        in(x: -426, y: -378, name: \"current_num\") property(Number) current_num_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -453) math_expr_node root.Std_k98ojb.Math.Expression {}\n        index_ai -> math_expr_node.expression.index\n        expression: \"index + 1\"\n        math_expr_node.result -> expected_num_ai\n\n        instance(x: 426, y: -603) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        current_num_ai -> logic_not_equal_node.left\n        expected_num_ai -> logic_not_equal_node.right\n        logic_not_equal_node.value -> check_missing_trigger\n        instance(x: 426, y: -753) missing_check_trigger root.Std_k98ojb.Trigger {}\n        missing_check_trigger.trigger -> math_expr_node.expression.index.set(1)\n        math_expr_node.expression.index -> missing_ai.set(math_expr_node.result)\n    }\n}\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_list_ai -> find_missing_node.sorted_list\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(sorted_list: -426, y: -248) property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.For {}\n        sorted_list_ai -> loop_node.items\n        loop_node.trigger -> trigger_ai\n        loop_node.reset -> reset_ai\n\n        instance(x: 426, y: -423) if_node root.Std_k98ojb.If {}\n        loop_node.index -> if_node.input\n        if_node.then -> then_trigger_ai\n        if_node.else_ -> else_trigger_ai\n\n        instance(x: 426, y: -519) math_expr_node root.Std_k98ojb.Math.Expression {}\n        if_node.value -> math_expr_node.expression\n        math_expr_node.a -> loop_node.index\n        math_expr_node.b -> List_getAt(sorted_list_ai, loop_node.index)\n        math_expr_node.result -> result_ai\n\n        instance(x: 426, y: -615) set_missing_number root.Std_k98ojb.If {}\n        result_ai -> set_missing_number.input\n        set_missing_number.then -> then_trigger_2_ai\n        set_missing_number.else_ -> else_trigger_2_ai\n\n        instance(x: 426, y: -711) math_add_node root.Std_k98ojb.Math.Add {}\n        loop_node.index -> math_add_node.first\n        List_getAt(sorted_list_ai, loop_node.index) -> math_add_node.second\n        math_add_node.result -> missing_number_ai\n\n        then_trigger_2_ai -> loop_node.next\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing {\n            in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n            out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n            instance(x: 0, y: 0) std.Std_k98ojb.Iteration.Find {}\n            numbers_ai -> std.find_smallest_missing.items\n            func(predicate: {\n                in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n                in(x: -426, y: -219, name: \"value\") property(Number) value_ai\n\n                instance(x: 0, y: 0) std.Std_k98ojb.Math.Sub {}\n                index_ai -> std.sub.first\n                value_ai -> std.sub.second\n                std.sub.result -> std.find_smallest_missing.predicate.value\n            }) -> std.find_smallest_missing.predicate.func\n\n            func(on_item: {\n                in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n                in(x: -426, y: -219, name: \"value\") property(Number) value_ai\n\n                instance(x: 0, y: 0) std.Std_k98ojb.If {}\n                std.find_smallest_missing.predicate.value -> std.if.input\n                std.if.then {\n                    out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n                    index_ai + 1 -> std.if.then.missing_number_ai\n                }\n            }) -> std.find_smallest_missing.on_item.func\n\n            std.find_smallest_missing.item -> missing_number_ai\n        }\n\n        numbers_ai -> find_smallest_missing.numbers_ai\n        find_smallest_missing.missing_number_ai -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f7c5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8e3f9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_b6d2c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f7c5d.input\n        \" \" -> replace_4f7c5d.search\n        \":\" -> replace_4f7c5d.replace\n        replace_4f7c5d.output -> replace_8e3f9a.input\n        \",\" -> replace_8e3f9a.search\n        \":\" -> replace_8e3f9a.replace\n        replace_8e3f9a.output -> replace_b6d2c1.input\n        \".\" -> replace_b6d2c1.search\n        \":\" -> replace_b6d2c1.replace\n        replace_b6d2c1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3f9b7a root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of space, comma and dot with colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7c3f8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_f4e6d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_0a3f7c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7c3f8a.input\n        \" \" -> replace_7c3f8a.search\n        \":\" -> replace_7c3f8a.replace\n        replace_7c3f8a.output -> replace_f4e6d5.input\n        \",\" -> replace_f4e6d5.search\n        \":\" -> replace_f4e6d5.replace\n        replace_f4e6d5.output -> replace_0a3f7c.input\n        \".\" -> replace_0a3f7c.search\n        \":\" -> replace_0a3f7c.replace\n        replace_0a3f7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_2b6e5d root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3f6c8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_d9e4d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2e7b1c root.Std_k98ojb.Strings.Replace {}\n        replace_3f6c8a.output -> replace_d9e4d5.input\n        replace_d9e4d5.output -> replace_2e7b1c.input\n        input_0 -> replace_3f6c8a.input\n        \" \" -> replace_3f6c8a.search\n        \":\" -> replace_3f6c8a.replace\n        \",\" -> replace_d9e4d5.search\n        \":\" -> replace_d9e4d5.replace\n        \".\" -> replace_2e7b1c.search\n        \":\" -> replace_2e7b1c.replace\n        replace_2e7b1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_9f8d3a root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_d4e3c6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas_e5f7d9 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_dots_f6g8h1 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_spaces_d4e3c6.input\n        \" \" -> replace_spaces_d4e3c6.search\n        \":\" -> replace_spaces_d4e3c6.replace\n\n        replace_spaces_d4e3c6.output -> replace_commas_e5f7d9.input\n        \",\" -> replace_commas_e5f7d9.search\n        \":\" -> replace_commas_e5f7d9.replace\n\n        replace_commas_e5f7d9.output -> replace_dots_f6g8h1.input\n        \".\" -> replace_dots_f6g8h1.search\n        \":\" -> replace_dots_f6g8h1.replace\n\n        replace_dots_f6g8h1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_abc123 root.main.replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_6c9f4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3e5f8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f7c9d4 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_6c9f4a.input\n        \" \" -> replace_6c9f4a.search\n        \":\" -> replace_6c9f4a.replace\n        replace_6c9f4a.output -> replace_3e5f8a.input\n        \",\" -> replace_3e5f8a.search\n        \":\" -> replace_3e5f8a.replace\n        replace_3e5f8a.output -> replace_f7c9d4.input\n        \".\" -> replace_f7c9d4.search\n        \":\" -> replace_f7c9d4.replace\n        replace_f7c9d4.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_c8f3b5 root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4b7e9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b8c3d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_6f2b8d root.Std_k98ojb.Strings.Replace {}\n        replace_4b7e9a.output -> replace_b8c3d5.input\n        replace_b8c3d5.output -> replace_6f2b8d.input\n        \" \" -> replace_4b7e9a.search\n        \":\" -> replace_4b7e9a.replace\n        input_0 -> replace_4b7e9a.input\n        \",\" -> replace_b8c3d5.search\n        \":\" -> replace_b8c3d5.replace\n        \".\" -> replace_6f2b8d.search\n        \":\" -> replace_6f2b8d.replace\n        replace_6f2b8d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_f3a7e1 root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_4e3b5a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas_7f8d9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_dots_a1b2c3 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_spaces_4e3b5a.input\n        \" \" -> replace_spaces_4e3b5a.search\n        \":\" -> replace_spaces_4e3b5a.replace\n\n        replace_spaces_4e3b5a.output -> replace_commas_7f8d9c.input\n        \",\" -> replace_commas_7f8d9c.search\n        \":\" -> replace_commas_7f8d9c.replace\n\n        replace_commas_7f8d9c.output -> replace_dots_a1b2c3.input\n        \".\" -> replace_dots_a1b2c3.search\n        \":\" -> replace_dots_a1b2c3.replace\n\n        replace_dots_a1b2c3.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_f7d8e9 root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1f8b7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a4d3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9b6a2d root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_1f8b7e.input\n        \" \" -> replace_1f8b7e.search\n        \":\" -> replace_1f8b7e.replace\n\n        replace_1f8b7e.output -> replace_5a4d3c.input\n        \",\" -> replace_5a4d3c.search\n        \":\" -> replace_5a4d3c.replace\n\n        replace_5a4d3c.output -> replace_9b6a2d.input\n        \".\" -> replace_9b6a2d.search\n        \":\" -> replace_9b6a2d.replace\n\n        replace_9b6a2d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_d4f3e7 root.main.replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f9c8d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 30) replace_f3e6a4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 59) replace_c5e2da root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_7f9c8d.search\n        \":\" -> replace_7f9c8d.replace\n        input_0 -> replace_7f9c8d.input\n        replace_7f9c8d.output -> replace_f3e6a4.input\n        \",\" -> replace_f3e6a4.search\n        \":\" -> replace_f3e6a4.replace\n        replace_f3e6a4.output -> replace_c5e2da.input\n        \".\" -> replace_c5e2da.search\n        \":\" -> replace_c5e2da.replace\n        replace_c5e2da.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_3b4c7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas_d42dce root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_dots_9a8e1b root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_spaces_3b4c7f.input\n        \" \" -> replace_spaces_3b4c7f.search\n        \":\" -> replace_spaces_3b4c7f.replace\n\n        replace_spaces_3b4c7f.output -> replace_commas_d42dce.input\n        \",\" -> replace_commas_d42dce.search\n        \":\" -> replace_commas_d42dce.replace\n\n        replace_commas_d42dce.output -> replace_dots_9a8e1b.input\n        \".\" -> replace_dots_9a8e1b.search\n        \":\" -> replace_dots_9a8e1b.replace\n\n        replace_dots_9a8e1b.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_e54b7f root.main.text_replace_special_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7f5a4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_7f5a4d.input\n        characters_7f5a4d.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f8e3b9 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_f8e3b9.left\n            characters_7f5a4d.characters[0] -> equal_f8e3b9.right\n            equal_f8e3b9.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        characters_7f5a4d.characters[0] -> expression_b720d7.gen_0\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> and_80a119.left\n        1 -> and_80a119.right\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_7e4d1c root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1263, y: -54) not_1e0d6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1275, y: -155) if_ea2c7f root.Std_k98ojb.Std.If {}\n        instance(x: 1254, y: -256) equal_f3c9f4 root.Std_k98ojb.Logic.Equal {}\n\n        1 -> generaterange_038fce.from\n        func() {\n            in(x: -76, y: 46, name: \"length\") property(Number) length_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) sub_eb2a4e root.Std_k98ojb.Math.Sub {}\n            length_5f51f7 -> sub_eb2a4e.first\n            1 -> sub_eb2a4e.second\n            sub_eb2a4e.result -> out_d0fd24\n        } -> generaterange_038fce.to\n\n        input_f5c03d -> strings_characters_b8b3f7.input\n        strings_characters_b8b3f7.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) strings_indexof_c8a1c2 root.Std_k98ojb.Strings.IndexOf {}\n            element_5f51f7 -> strings_indexof_c8a1c2.search\n            input_f5c03d -> strings_indexof_c8a1c2.input\n\n            instance(x: 106, y: -17) sub_eb2a4e root.Std_k98ojb.Math.Sub {}\n            strings_indexof_c8a1c2.index -> sub_eb2a4e.first\n            0 -> sub_eb2a4e.second\n            sub_eb2a4e.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) list_getat_2c1e3d root.Std_k98ojb.List.GetAt {}\n            input_f5c03d -> list_getat_2c1e3d.list\n            element_5f51f7 -> list_getat_2c1e3d.index\n            list_getat_2c1e3d.item -> out_d0fd24\n        } -> for_8cb3f6.handler\n\n        for_8cb3f6.onItem -> if_ea2c7f.execute\n        for_8cb3f6.item -> equal_f3c9f4.left\n        strings_characters_b8b3f7.characters -> list_getat_1e5d0e.list\n        0 -> list_getat_1e5d0e.index\n        list_getat_1e5d0e.item -> equal_f3c9f4.right\n\n        equal_f3c9f4.result -> if_ea2c7f.predicate\n        if_ea2c7f.else -> not_1e0d6c.input\n        not_1e0d6c.output -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        if_ea2c7f.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_c1a5d0 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_7b2e6a.input\n        strings_characters_7b2e6a.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) firstitem_8c9a2d root.Std_k98ojb.List.FirstItem {}\n            map_6030c9.output_list -> firstitem_8c9a2d.list\n            firstitem_8c9a2d.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == chars[0])\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> StringsCharacters_0e6a9f.input\n        StringsCharacters_0e6a9f.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> StringsCharacters_1e6a9f.input\n            StringsCharacters_1e6a9f.characters -> expression_b720d7.gen_1\n            expression_b720d7.result -> if_07b8c7.predicate\n            0 -> add_b4554f.first\n            element_5f51f7 -> add_b4554f.second\n            add_b4554f.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> if_e19a62.predicate\n        expression_9fba8c.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_e19a62.then -> continue_8ba06b\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_0be66 root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_8f2e1d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_c9a3b7\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_4c0b6f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_d5e2d3\n\n        instance(x: 352, y: -493) map_f7a9f8 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_1f6b0c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_c2d7a5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_9f8e6c root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_4d1f3e root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_5b7a9f root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_2c8b6e root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e9f3d7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_5e1c4a root.Std_k98ojb.Math.Add {}\n        1 -> characters_1f6b0c.input\n        input_8f2e1d -> characters_1f6b0c.input\n        characters_1f6b0c.characters -> map_f7a9f8.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_3a5f4b\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_c1d6e7\n\n            instance(x: 106, y: 17) len_2c9d0a root.Std_k98ojb.Strings.Len {}\n            element_3a5f4b -> len_2c9d0a.input\n            len_2c9d0a.length -> out_c1d6e7\n        } -> map_f7a9f8.handler\n        map_f7a9f8.output_list -> for_9f8e6c.items\n        for_9f8e6c.item -> lessthanorequal_c2d7a5.left\n        1 -> lessthanorequal_c2d7a5.right\n        lessthanorequal_c2d7a5.result -> if_5b7a9f.predicate\n        for_9f8e6c.onItem -> if_5b7a9f.execute\n        if_5b7a9f.else -> continue_d5e2d3\n        expression_2c8b6e.result -> and_4d1f3e.left\n        for_9f8e6c.item -> and_4d1f3e.right\n        input_8f2e1d -> and_4d1f3e.right\n        and_4d1f3e.result -> if_e9f3d7.predicate\n        if_5b7a9f.then -> if_e9f3d7.execute\n        for_9f8e6c.index -> add_5e1c4a.first\n        1 -> add_5e1c4a.second\n        add_5e1c4a.result -> expression_2c8b6e.gen_0\n        add_5e1c4a.result -> expression_2c8b6e.gen_1\n        if_5b7a9f.value -> out_4c0b6f\n        if_e9f3d7.then -> continue_d5e2d3\n        for_9f8e6c.done -> continue_d5e2d3\n        execute_c9a3b7 -> for_9f8e6c.reset\n        if_e9f3d7.else -> for_9f8e6c.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_4e1b2f root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> strings_3b1f0e.input\n        instance(x: 1006, y: -54) strings_3b1f0e root.Std_k98ojb.Strings.Characters {}\n        strings_3b1f0e.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) strings_2c6a3b root.Std_k98ojb.Strings.ToUpper {}\n            element_5f51f7 -> strings_2c6a3b.input\n            strings_2c6a3b.output -> out_d0fd24\n        } -> map_6030c9.handler\n\n        1 -> generaterange_038fce.from\n        map_6030c9.output_list -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        instance(x: 1845, y: -187) equal_0e4d1a root.Std_k98ojb.Logic.Equal {}\n        map_6030c9.output_list.getAt(0) -> equal_0e4d1a.left\n        for_8cb3f6.item -> equal_0e4d1a.right\n        equal_0e4d1a.result -> if_e19a62.predicate\n\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == input[0])\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> StringsCharacters_c0e7e2.input\n        StringsCharacters_c0e7e2.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_3b9c1e root.Std_k98ojb.Math.Expression {\n                expression: \"(element == input[0])\"\n            }\n            element_5f51f7 -> expression_3b9c1e.gen_0\n            input_f5c03d -> expression_3b9c1e.gen_1\n            expression_3b9c1e.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> IterationFilter_2f4a1c.items\n        func() {\n            in(x: -76, y: 46, name: \"item\") property(Bool) item_7d8e6b\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_e0f5a1\n\n            instance(x: 106, y: 17) not_b2c9a4 root.Std_k98ojb.Logic.Not {}\n            item_7d8e6b -> not_b2c9a4.input\n            not_b2c9a4.output -> out_e0f5a1\n        } -> IterationFilter_2f4a1c.handler\n        IterationFilter_2f4a1c.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> StringsCharacters_c0e7e2.input\n        StringsCharacters_c0e7e2.characters -> generaterange_038fce.to\n        1 -> generaterange_038fce.from\n        generaterange_038fce.list -> map_6030c9.items\n        for_8cb3f6.index -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_b0d1a2 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> strings_characters_1e3c0a.input\n        strings_characters_1e3c0a.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) strings_to_uppercase_e8b2d4 root.Std_k98ojb.Strings.ToUpper {}\n            element_5f51f7 -> strings_to_uppercase_e8b2d4.input\n            strings_to_uppercase_e8b2d4.value -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        strings_to_uppercase_e8b2d4.value -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        instance(x: 1910, y: -53) firstitem_c5a1e9 root.Std_k98ojb.List.FirstItem {}\n        map_6030c9.output_list -> firstitem_c5a1e9.list\n        firstitem_c5a1e9.item -> expression_b720d7.gen_0\n\n        instance(x: 1982, y: -187) strings_contains_6f8a3b root.Std_k98ojb.Strings.Contains {}\n        for_8cb3f6.item -> strings_contains_6f8a3b.input\n        firstitem_c5a1e9.item -> strings_contains_6f8a3b.contains\n\n        strings_contains_6f8a3b.result -> and_80a119.left\n        expression_b720d7.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        Strings.Characters(input_f5c03d) -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            Strings.Characters(element_5f51f7)[0] -> mul_2f9d09.first\n            Strings.Characters(input_f5c03d)[0] -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d[0] -> expression_b720d7.gen_0\n\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_7d5e2e root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_e5f6d7 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_e5f6d7.input\n        characters_e5f6d7.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) len_3b8a2c root.Std_k98ojb.Strings.Length {}\n            element_5f51f7 -> len_3b8a2c.input\n            len_3b8a2c.length -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        characters_e5f6d7.characters[0] -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 99, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> characters_547f34.input\n        characters_547f34.characters -> add_88bb8a.second\n        is_numeric_adfa16.value -> add_88bb8a.first\n        1 -> setter_375321.new_value\n        characters_547f34.characters -> count_digits_96023e.s_6b655b\n        is_numeric_adfa16.input -> characters_547f34.item\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        input_string_6b655b -> slice_547f34.input\n        0 -> slice_547f34.start\n        1 -> slice_547f34.end\n        slice_547f34.output -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        input_string_6b655b -> length_61b38d.list\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) is_numeric_bf8c3a root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 99, y: -127) characters_1e2b9f root.Std_k98ojb.Strings.Characters {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_1e2b9f.input\n        characters_1e2b9f.characters -> count_digits_96023e.s_6b655b\n        s_6b655b.first_item -> is_numeric_bf8c3a.input\n        is_numeric_bf8c3a.value -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        is_numeric_bf8c3a.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        10 -> modulo_adfa16.divisor\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        1 -> div_547f34.second\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> modulo_adfa16.value\n        modulo_adfa16.result -> add_88bb8a.first\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        add_88bb8a.second -> count_digits_96023e.count_3c5d4f\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        count_digits_96023e.count_3c5d4f -> add_88bb8a.second\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> length_61b38d.list\n        length_61b38d.length -> slice_547f34.end\n        0 -> slice_547f34.start\n        slice_547f34.slice -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> ifexpression_3d7de6.gen_1\n        s_6b655b -> slice_547f34.list\n        slice_547f34.slice -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        is_numeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        instance(x: -50, y: -100) for_characters_f3b5c6 root.Std_k98ojb.Std.For {\n            items: input_string_6b655b.characters()\n        }\n        characters_f3b5c6.item -> is_numeric_adfa16.input\n        for_characters_f3b5c6.on_item -> count_digits_96023e.execute_cdac2a\n        for_characters_f3b5c6.done -> continue_d9efd7\n\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) map_characters_547f34 root.Iteration.Map {\n            handler: func(item: String) -> Number {\n                if is_numeric_adfa16(input_string_6b655b[item]) {\n                    return 1\n                } else {\n                    return 0\n                }\n            }\n        }\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> map_characters_547f34.items\n        map_characters_547f34.output_list -> add_88bb8a.first\n        add_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        input_string_6b655b -> map_characters_547f34.items\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        1 -> add_88bb8a.first\n        s_6b655b.characters -> iteration_map_4f3d2c.items\n        count_digits_96023e.s_6b655b -> iteration_map_4f3d2c.handler.input\n        iteration_map_4f3d2c.output_list -> filter_7a8b9c.items\n        \"isnumeric\" -> query_filter_1c2b3d.where\n        filter_7a8b9c.output_list -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    instance(x: 97, y: -127) iteration_map_4f3d2c root.Std_k98ojb.Iteration.Map {\n        handler: func(doc: \"checks if a character is numeric.\") check_numeric {\n            in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n            in(x: -436, y: -213, name: \"c\") property(String) c_6b655b\n\n            out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n            out(x: 1169, y: -269, name: \"output\") property(Boolean) output_732a8a\n\n            instance(x: 80, y: -417) isnumeric_f3d2e1 root.Std_k98ojb.Strings.IsNumeric {}\n            c_6b655b -> isnumeric_f3d2e1.input\n            isnumeric_f3d2e1.value -> output_732a8a\n        }\n    }\n\n    instance(x: 656, y: -330) filter_7a8b9c root.Std_k98ojb.Iteration.Filter {\n        handler: func(doc: \"checks if a character is numeric.\") check_numeric {\n            in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n            in(x: -436, y: -213, name: \"c\") property(String) c_6b655b\n\n            out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n            out(x: 1169, y: -269, name: \"output\") property(Boolean) output_732a8a\n\n            instance(x: 80, y: -417) isnumeric_f3d2e1 root.Std_k98ojb.Strings.IsNumeric {}\n            c_6b655b -> isnumeric_f3d2e1.input\n            isnumeric_f3d2e1.value -> output_732a8a\n        }\n    }\n\n    instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        s_6b655b.characters -> iteration_map_4f3d2c.items\n        1 -> add_88bb8a.first\n        filter_7a8b9c.output_list -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        s_6b655b.slice(1, -1) -> count_digits_96023e.s_6b655b\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_f1c3f9 root.Std_k98ojb.Strings.IsNumeric {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> is_numeric_f1c3f9.input\n        is_numeric_f1c3f9.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        s_6b655b -> characters_b3c5f4.input\n        characters_b3c5f4.characters -> iteration_map_c1d2e8.items\n        0 -> iteration_map_c1d2e8.index\n        count_digits_96023e.output_list -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        instance(x: -176, y: -38) characters_b3c5f4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 395, y: -378) iteration_map_c1d2e8 root.Std_k98ojb.Iteration.Map {\n            handler: func() map_handler_9a7b6c\n        }\n    }\n\n    func(doc: \"map handler for counting digits.\") map_handler_9a7b6c {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"item\") property(String) item_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output_list\") property(List) output_list_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_numeric_f1c3f9(item)\"\n        }\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = list\n\n        ifexpression_3d7de6.then -> add_88bb8a.first\n        item_6b655b -> is_numeric_f1c3f9.input\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        execute_cdac2a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        list_empty_f5c4b1.list -> setter_375321.list\n        empty_list_e2f4a8.list -> output_list_732a8a\n\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_numeric_f1c3f9(item)\"\n        }\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = list\n        instance(x: -176, y: -38) list_empty_f5c4b1 root.Std_k98ojb.List.Empty {}\n        instance(x: -176, y: -38) empty_list_e2f4a8 root.Std_k98ojb.List.Empty {}\n\n        item_6b655b -> is_numeric_f1c3f9.input\n        0 -> add_88bb8a.second\n        ifexpression_3d7de6.then -> add_88bb8a.first\n        list_empty_f5c4b1.list -> setter_375321.list\n        empty_list_e2f4a8.list -> output_list_732a8a\n        execute_cdac2a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> add_88bb8a.first\n        characters_547f34.characters -> slice_547f34.list\n        slice_547f34.start -> slice_547f34.end\n        slice_547f34.end -> slice_547f34.end - 1\n        slice_547f34.output -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> slice_547f34.next\n        is_numeric_adfa16.value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> characters_547f34.input\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -20) div_7b1f9c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -17) data_cde0dc2  = 3\n        mul_f892a4.result -> div_7b1f9c.first\n        data_cde0dc2 -> div_7b1f9c.second\n        instance(x: 303, y: -42) pow_8e6d5c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_8e6d5c.x\n        data_instance(x: 330, y: -39) data_cde0dc3  = 2\n        pow_8e6d5c.y -> data_cde0dc3\n        instance(x: 303, y: -64) div_9f4b3a root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -61) data_cde0dc4  = 3\n        pow_8e6d5c.result -> div_9f4b3a.first\n        data_cde0dc4 -> div_9f4b3a.second\n        instance(x: 303, y: -86) mul_1a7c2d root.Std_k98ojb.Math.Mul {}\n        div_7b1f9c.result -> mul_1a7c2d.first\n        div_9f4b3a.result -> mul_1a7c2d.second\n        instance(x: 303, y: -109) pow_b0e5b root.Std_k98ojb.Math.Pow {}\n        mul_1a7c2d.result -> pow_b0e5b.x\n        data_instance(x: 330, y: -106) data_cde0dc5  = 2\n        pow_b0e5b.y -> data_cde0dc5\n        instance(x: 303, y: -132) div_e6a1c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -129) data_cde0dc6  = 3\n        pow_b0e5b.result -> div_e6a1c.first\n        data_cde0dc6 -> div_e6a1c.second\n        instance(x: 303, y: -155) add_9d2d8 root.Std_k98ojb.Math.Add {}\n        div_e6a1c.result -> add_9d2d8.gen_0\n        div_64046c.result -> add_9d2d8.gen_1\n        instance(x: 303, y: -179) count_4f5a3 root.Std_k98ojb.Math.Count {}\n        n_3a3116 -> count_4f5a3.count\n        instance(x: 303, y: -203) reduce_f9c2e root.Std_k98ojb.Math.Reduce {\n            reducer: \"acc+val\"\n        }\n        add_9d2d8.result -> reduce_f9c2e.gen_1\n        count_4f5a3.count -> reduce_f9c2e.gen_0\n        instance(x: 303, y: -227) for_6b7e2 root.Std_k98ojb.Math.For {\n            items: \"List.GenerateRange(1,n)\"\n        }\n        n_3a3116 -> for_6b7e2.items\n        reduce_f9c2e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_8d5f4 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -26) pow_ae7f1c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_ae7f1c.x\n        data_instance(x: 330, y: 2) data_ea8f3d  = 4\n\n        data_ea8f3d -> pow_ae7f1c.y\n        pow_ae7f1c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_c5a6f2 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -26) div_ae7f5b root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -1) data_f9c4d8  = 3\n        div_64046c.result -> div_ae7f5b.first\n        data_f9c4d8 -> div_ae7f5b.second\n        instance(x: 23, y: -54) mul_ba0c1f root.Std_k98ojb.Math.Mul {}\n        div_ae7f5b.result -> mul_ba0c1f.first\n        div_64046c.result -> mul_ba0c1f.second\n        mul_ba0c1f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 420, y: -1) pow_8f7b9e root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_8f7b9e.x\n        data_instance(x: 480, y: 133) data_2a3d4b = 4\n        data_2a3d4b -> pow_8f7b9e.y\n        pow_8f7b9e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_a1b2c3 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        data_instance(x: 330, y: 165) data_e5e7f4  = 1\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_64046c_1 root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c_1.second\n        expression_2d6da6.result -> mul_f892a4.first\n        div_64046c.result -> mul_f892a4.second\n        instance(x: 23, y: -1) mul_d3f8e5 root.Std_k98ojb.Math.Mul {}\n        data_e5e7f4 -> div_64046c_1.second\n        mul_f892a4.result -> div_64046c_1.first\n        mul_d3f8e5.first <- div_64046c_1.result\n        instance(x: 23, y: -1) mul_e9d2b6 root.Std_k98ojb.Math.Mul {}\n        mul_f892a4.result -> mul_e9d2b6.second\n        mul_d3f8e5.result -> mul_e9d2b6.first\n        instance(x: 23, y: -1) mul_7c1f0e root.Std_k98ojb.Math.Mul {}\n        n_3a3116 -> mul_7c1f0e.second\n        expression_2d6da6.result -> mul_7c1f0e.first\n        instance(x: 23, y: -1) mul_8f9e4b root.Std_k98ojb.Math.Mul {}\n        mul_e9d2b6.result -> mul_8f9e4b.second\n        mul_7c1f0e.result -> mul_8f9e4b.first\n        instance(x: 303, y: 2) div_5f3a3a root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 197) data_b6d5b7  = 15\n        data_b6d5b7 -> div_5f3a3a.second\n        mul_8f9e4b.result -> div_5f3a3a.first\n        div_5f3a3a.result -> sum_365f7b\n\n        n_3a3116 -> expression_2d6da6.gen_0\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_a0e4c2 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_a0e4c2.gen_1\n        expression_2d6da6.result -> pow_a0e4c2.gen_0\n        data_cde0dc -> pow_a0e4c2.gen_2\n        pow_a0e4c2.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -25) pow_5b8e7f root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5b8e7f.x\n        data_instance(x: 330, y: 133) data_cde0dc_1 = 4\n        data_cde0dc_1 -> pow_5b8e7f.y\n\n        instance(x: 303, y: -50) add_9a3c6d root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_9a3c6d.first\n        pow_5b8e7f.result -> add_9a3c6d.second\n\n        instance(x: 118, y: -26) for_d4b2c1 root.Std_k98ojb.For {\n            items: List_generate_range(1, n_3a3116)\n        }\n        for_d4b2c1.done -> add_9a3c6d.trigger\n        for_d4b2c1.item -> n_3a3116\n\n        pow_5b8e7f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -20) pow_7e8b1c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_7e8b1c.x\n        data_instance(x: 330, y: 133) data_cde0dc = 4\n        data_cde0dc -> pow_7e8b1c.y\n\n        instance(x: 303, y: -43) add_9a3d2f root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_9a3d2f.first\n        pow_7e8b1c.result -> add_9a3d2f.second\n\n        instance(x: 303, y: -66) for_loop_root Std_k98ojb.Std.For {\n            items: List.GenerateRange(from: 0, to: n_3a3116)\n        }\n        for_loop_root.done -> sum_365f7b\n        add_9a3d2f.result -> for_loop_root.on_item\n    }\n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -24) div_5b1e9c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -20) data_7f8c4c  = 3\n        div_64046c.result -> div_5b1e9c.first\n        data_7f8c4c -> div_5b1e9c.second\n        instance(x: 23, y: -26) mul_2d0a6b root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_2d0a6b.first\n        div_5b1e9c.result -> mul_2d0a6b.second\n        instance(x: 23, y: -50) pow_3f7e9f root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: -44) data_b8e4a5  = 2\n        mul_2d0a6b.result -> pow_3f7e9f.x\n        data_b8e4a5 -> pow_3f7e9f.y\n        pow_3f7e9f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_a1c2d6 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -22) pow_ae1f8b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_ae1f8b.x\n        data_instance(x: 330, y: -19) data_7a3d6f  = 4\n        data_7a3d6f -> pow_ae1f8b.y\n        instance(x: 303, y: -46) sum_9c5e0f root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(a: Number, b: Number) -> Number {\n                return a + b\n            }\n        }\n        pow_ae1f8b.result -> sum_9c5e0f.item\n        instance(x: 303, y: -69) for_loop_root Std_k98ojb.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116)\n        }\n        for_loop_root.done -> sum_9c5e0f.trigger\n        pow_ae1f8b.result -> for_loop_root.on_item\n        sum_9c5e0f.output_list -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_3d4a2f root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5a8f7d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_b9c1e3\n\n        instance(x: 94, y: -105) mul_6b0a4d root.Std_k98ojb.Math.Mul {}\n        size_5a8f7d -> mul_6b0a4d.first\n        6 -> mul_6b0a4d.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_f9c3e2\n\n            out(x: 333, y: -50, name: \"\") property(Number) _8f7a1b\n\n            instance(x: 92, y: -22) mul_4d5a8f root.Std_k98ojb.Math.Mul {}\n            x_f9c3e2 -> mul_4d5a8f.first\n            x_f9c3e2 -> mul_4d5a8f.second\n            mul_4d5a8d.result -> _8f7a1b\n        } -> mul_6b0a4d.handler\n        mul_6b0a4d.result -> surfaceArea_b9c1e3\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1a5f7d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_f9b3c8\n\n        instance(x: 94, y: -105) mul_a2e4c0 root.Std_k98ojb.Math.Mul {}\n        size_1a5f7d -> mul_a2e4c0.first\n        size_1a5f7d -> mul_a2e4c0.second\n        mul_a2e4c0.result -> surface_area_f9b3c8\n\n        instance(x: 94, y: -145) mul_c6d8d5 root.Std_k98ojb.Math.Mul {}\n        mul_a2e4c0.result -> mul_c6d8d5.first\n        6 -> mul_c6d8d5.second\n        mul_c6d8d5.result -> surface_area_f9b3c8\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8ee839\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_cbb7bd\n\n        instance(x: 94, y: -105) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_8ee839 -> mul_584bfd.first\n        size_8ee839 -> mul_584bfd.second\n        mul_584bfd.result -> surfaceArea_cbb7bd\n\n        instance(x: 94, y: -145) mul_b5a1c9 root.Std_k98ojb.Math.Mul {}\n        mul_584bfd.result -> mul_b5a1c9.first\n        6 -> mul_b5a1c9.second\n        mul_b5a1c9.result -> surfaceArea_cbb7bd\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5c8f6e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1a2b3d\n\n        instance(x: 94, y: -105) mul_4a7c9d root.Std_k98ojb.Math.Mul {}\n        size_5c8f6e -> mul_4a7c9d.first\n        size_5c8f6e -> mul_4a7c9d.second\n        func() {\n            6 -> _0\n            mul_4a7c9d.result -> _1\n            Math_k98ojb.Math_k98ojb.Expression(\"(_0 * _1) * _1\") {}\n                _0 -> Math_k98ojb.Math_k98ojb.Expression.input0\n                _1 -> Math_k98ojb.Math_k98ojb.Expression.input1\n            Math_k98ojb.Math_k98ojb.Expression.result -> surface_area_1a2b3d\n        }\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_8f7c6e root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3f0d9a\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_4e7b8c\n\n        instance(x: 94, y: -105) mul_1b5e2d root.Std_k98ojb.Math.Mul {}\n        size_3f0d9a -> mul_1b5e2d.first\n        size_3f0d9a -> mul_1b5e2d.second\n        mul_1b5e2d.result -> surfaceArea_4e7b8c\n\n        instance(x: 94, y: -145) mul_6b9c9f root.Std_k98ojb.Math.Mul {}\n        surfaceArea_4e7b8c -> mul_6b9c9f.first\n        6 -> mul_6b9c9f.second\n        mul_6b9c9f.result -> surfaceArea_4e7b8c\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_2a1d5b root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7e1c5f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_6d9b4a\n\n        instance(x: 94, y: -105) mul_3c2b0f root.Std_k98ojb.Math.Mul {}\n        size_7e1c5f -> mul_3c2b0f.first\n        size_7e1c5f -> mul_3c2b0f.second\n        mul_3c2b0f.result -> surface_area_6d9b4a\n\n        instance(x: 94, y: -150) mul_d8c5d5 root.Std_k98ojb.Math.Mul {}\n        mul_3c2b0f.result -> mul_d8c5d5.first\n        6 -> mul_d8c5d5.second\n        mul_d8c5d5.result -> surface_area_6d9b4a\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e1f3c\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_ea0d5b\n\n        instance(x: 94, y: -105) mul_7a9f2c root.Std_k98ojb.Math.Mul {}\n        size_8e1f3c -> mul_7a9f2c.first\n        size_8e1f3c -> mul_7a9f2c.second\n        mul_7a9f2c.result -> surfaceArea_ea0d5b\n\n        instance(x: 94, y: -135) mul_4f6b3d root.Std_k98ojb.Math.Mul {}\n        mul_7a9f2c.result -> mul_4f6b3d.first\n        6 -> mul_4f6b3d.second\n        mul_4f6b3d.result -> surfaceArea_ea0d5b\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_f9c7d2 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1d3f7e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9b4a5c\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_1d3f7e -> mul_f2330d.first\n        size_1d3f7e -> mul_f2330d.second\n        func() {\n            in(x: 333, y: -50, name: \"result\") property(Number) result_8ee839\n\n            out(x: 666, y: -68, name: \"\") property(Number) _a2b9c1\n\n            instance(x: 92, y: -22) mul_bf4e7d root.Std_k98ojb.Math.Mul {}\n            result_8ee839 -> mul_bf4e7d.first\n            6 -> mul_bf4e7d.second\n            mul_bf4e7d.result -> _a2b9c1\n        } -> mul_f2330d.handler\n        mul_f2330d.result -> surface_area_9b4a5c\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5f7d2a\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_1c3e8b\n\n        instance(x: 94, y: -105) mul_4a9f6e root.Std_k98ojb.Math.Mul {}\n        size_5f7d2a -> mul_4a9f6e.first\n        size_5f7d2a -> mul_4a9f6e.second\n        mul_4a9f6e.result -> surfaceArea_1c3e8b\n\n        instance(x: 94, y: -140) mul_1e9b0b root.Std_k98ojb.Math.Mul {}\n        surfaceArea_1c3e8b -> mul_1e9b0b.first\n        6 -> mul_1e9b0b.second\n        mul_1e9b0b.result -> surfaceArea_1c3e8b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a2c1d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_f8b7e9\n\n        instance(x: 94, y: -105) mul_d5f4a6 root.Std_k98ojb.Math.Mul {}\n        size_3a2c1d -> mul_d5f4a6.first\n        size_3a2c1d -> mul_d5f4a6.second\n        mul_d5f4a6.result -> surface_area_f8b7e9\n\n        instance(x: 94, y: -145) mul_bf0c3e root.Std_k98ojb.Math.Mul {}\n        mul_d5f4a6.result -> mul_bf0c3e.first\n        6 -> mul_bf0c3e.second\n        mul_bf0c3e.result -> surface_area_f8b7e9\n    }\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 626, y: -303) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -393) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 639, y: -363) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range_diff\") property(Number) range_diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -378) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -453) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        sub_node.result -> range_diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 626, y: -303) math_subtract_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> math_subtract_node.first\n        list_min_node.min -> math_subtract_node.second\n        \n        math_subtract_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n        \n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -519) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> sub_node.first\n        min_value_ai -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    property(Number) max_value_ai\n    property(Number) min_value_ai\n\n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range_diff {}\n    instance(x: 426, y: -423) min_node root.main.range_diff {}\n    instance(x: 426, y: -543) sub_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -393) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -483) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value\n\n        instance(x: 426, y: -393) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value\n\n        instance(x: 426, y: -483) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value -> sub_node.first\n        min_value -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_1a3b7f root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n            then: true\n            else: false\n        }\n        num_ai -> if_1a3b7f.input\n        if_1a3b7f.value -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_1a5b3c root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_1a5b3c.input\n        if_1a5b3c.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_1a3b8f root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_1a3b8f.input\n        if_1a3b8f.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"(number % 2 == 0)\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_1a2b3c root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_1a2b3c.input\n        if_1a2b3c.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n            then: true\n            else: false\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.value -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_5d3f2a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_7b8c4e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            in(x: -113, y: 54, name: \"index\") property(Number) index_d4e8a1\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3f2b9d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_1c8e4b root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            elem_9f6850 -> contains_3f2b9d.input\n            input_5d3f2a -> contains_3f2b9d.contains\n\n            slice_1c8e4b.start -> index_d4e8a1\n            0 -> slice_1c8e4b.end\n            input_5d3f2a -> slice_1c8e4b.list\n\n            notequal_807ffd.right -> contains_3f2b9d.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -55, y: 529) characters_c1e8d5 root.Std_k98ojb.Strings.Characters {}\n        input_5d3f2a -> characters_c1e8d5.input\n        characters_c1e8d5.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_7b8c4e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_7f3a2d\n\n        out(x: 593, y: -1, name: \"character\") property(Char) character_4b8c9e\n\n        instance(x: 0, y: 0) find_first_repeated_char_5e6b2c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_d1a7f3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2c8e9b\n\n            instance(x: 89, y: 29) contains_3d4b6a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_up_to_index_1f7b8e root.Std_k98ojb.Iteration.Map {}\n            instance(x: 150, y: -20) slice_list_a2c3d9 root.Std_k98ojb.List.Slice {}\n\n            list_up_to_index_1f7b8e.handler {\n                in(x: -10, y: 5, name: \"item\") property(Char) item_f4a6b0\n                out(x: 30, y: 15, name: \"result\") property(List) result_g9c3d2\n\n                instance(x: 0, y: 0) list_1_ae7f5b root.Std_k98ojb.List.GetAt {}\n                item_f4a6b0 -> list_1_ae7f5b.item\n                slice_list_a2c3d9.listWithoutItem -> list_1_ae7f5b.list\n\n                instance(x: 50, y: 10) list_add_h8c2b3 root.Std_k98ojb.List.Add {}\n                item_f4a6b0 -> list_add_h8c2b3.item\n                list_1_ae7f5b.result -> list_add_h8c2b3.list\n\n                list_add_h8c2b3.listWithItem -> result_g9c3d2\n            }\n            slice_list_a2c3d9.start -> 0\n            char_d1a7f3 -> slice_list_a2c3d9.end\n            input_string_7f3a2d.characters -> slice_list_a2c3d9.list\n\n            contains_3d4b6a.input -> char_d1a7f3\n            slice_list_a2c3d9.result -> contains_3d4b6a.contains\n            bool_2c8e9b <- contains_3d4b6a.result\n        } -> find_first_repeated_char_5e6b2c.predicate\n        input_string_7f3a2d.characters -> find_first_repeated_char_5e6b2c.items\n        find_first_repeated_char_5e6b2c.item -> character_4b8c9e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_8f3b7d root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated_char_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_n3o4p5\n\n            instance(x: 89, y: 29) contains_6q7r8s root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_slice_t9u0v1w root.Std_k98ojb.List.Slice {}\n\n            current_char_jk1l2m -> contains_6q7r8s.contains\n            list_slice_t9u0v1w.listWithoutItem -> contains_6q7r8s.input\n\n            list_slice_t9u0v1w.start -> 0\n            list_slice_t9u0v1w.end -> -1\n            current_char_jk1l2m -> list_slice_t9u0v1w.item\n\n            contains_6q7r8s.result -> is_repeated_n3o4p5\n        } -> find_first_repeated_char_7g8h9i.predicate\n\n        instance(x: 100, y: -50) characters_ab12c3 root.Std_k98ojb.Strings.Characters {}\n        list_slice_t9u0v1w.listWithoutItem -> characters_ab12c3.input\n        characters_ab12c3.characters -> find_first_repeated_char_7g8h9i.items\n\n        find_first_repeated_char_7g8h9i.item -> repeated_char_4d5e6f\n        input_string_1a2b3c -> list_slice_t9u0v1w.list\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance_a4b5c6 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_char root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_7g8h9i\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_jk0l1m\n\n            instance(x: 89, y: 29) contains_2n3o4p root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_qr5s6t root.Std_k98ojb.List.Slice {}\n            instance(x: 150, y: 50) characters_uvwxy root.Std_k98ojb.Strings.Characters {}\n\n            input_1a2b3c -> characters_uvwxy.input\n            characters_uvwxy.characters -> slice_qr5s6t.list\n\n            char_7g8h9i -> contains_2n3o4p.contains\n            slice_qr5s6t.start -> 0\n            slice_qr5s6t.end -> -1\n            slice_qr5s6t.rest -> contains_2n3o4p.list\n\n            contains_2n3o4p.result -> bool_jk0l1m\n        } -> find_repeated_char.predicate\n        characters_uvwxy.characters -> find_repeated_char.items\n        find_repeated_char.item -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_a1b2c3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d4e5f6\n\n            instance(x: 89, y: 29) contains_123abc root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_456def root.Std_k98ojb.List.Slice {}\n            instance(x: 150, y: 50) list_to_set_g7h8i9 root.Std_k98ojb.List.Flatten {}\n\n            char_a1b2c3 -> contains_123abc.contains\n            slice_456def.start -> -1\n            slice_456def.end -> -1\n            find_repeated_7g8h9i.index + 1 -> slice_456def.start\n            input_string_1a2b3c -> slice_456def.input_list\n            list_to_set_g7h8i9.list -> contains_123abc.input\n\n            contains_123abc.result -> bool_d4e5f6\n        } -> find_repeated_7g8h9i.predicate\n        instance(x: -100, y: 0) characters_789jkl root.Std_k98ojb.Strings.Characters {}\n        input_string_1a2b3c -> characters_789jkl.input\n        characters_789jkl.characters -> find_repeated_7g8h9i.items\n        find_repeated_7g8h9i.item -> repeated_char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_7g8h9i\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_jk0l1m\n\n            instance(x: 89, y: 29) contains_2n3o4p root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) and_qr5s6t root.Std_k98ojb.Logic.And {}\n            instance(x: 410, y: 45) slice_u7v8w9x root.Std_k98ojb.List.Slice {}\n\n            contains_2n3o4p.input -> char_7g8h9i\n            find_first_repeated.index + 1 -> slice_u7v8w9x.start\n            -1 -> slice_u7v8w9x.end\n            input_string_1a2b3c.characters -> slice_u7v8w9x.list\n\n            contains_2n3o4p.result -> and_qr5s6t.left\n            slice_u7v8w9x.output -> and_qr5s6t.right\n            and_qr5s6t.result -> bool_jk0l1m\n        } -> find_first_repeated.predicate\n        input_string_1a2b3c.characters -> find_first_repeated.items\n        find_first_repeated.item -> repeated_char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) character_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated_char_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_jk1l2m\n\n            out(x: 515, y: 44, name: \"is_repeated\") property(Bool) is_repeated_3n4o5p\n\n            instance(x: 89, y: 29) contains_9q0r1s root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) map_to_indexed_chars_2t3u4v root.Std_k98ojb.Iteration.Map {}\n            instance(x: 150, y: 50) index_of_char_5w6x7y root.Std_k98ojb.List.IndexOf {}\n\n            input_string_1a2b3c -> strings_characters_ab12cd\n            instance(x: -100, y: -20) strings_characters_ab12cd root.Std_k98ojb.Strings.Characters {}\n            \n            strings_characters_ab12cd.characters -> map_to_indexed_chars_2t3u4v.items\n\n            func() {\n                in(x: 0, y: 0, name: \"char\") property(Char) char_z9a8b7\n                in(x: 1, y: 0, name: \"index\") property(Number) index_c6d5e4\n                \n                list_add_gh5i4j root.Std_k98ojb.List.Add {}\n                func() {\n                    in(x: -10, y: 10, name: \"item\") property(Char) item_f3g2h1\n                    in(x: -20, y: 20, name: \"list\") property(List) list_i9j8k7\n\n                    char_z9a8b7 -> item_f3g2h1\n                    list_empty_l6m5n4 root.Std_k98ojb.List.Empty {} -> list_i9j8k7\n\n                    list_i9j8k7 -> list_add_gh5i4j.list\n                    list_add_gh5i4j.listWithItem -> index_of_char_5w6x7y.items\n                }\n\n                char_z9a8b7 -> map_to_indexed_chars_2t3u4v.output_list.item\n            }\n            \n            index_of_char_5w6x7y.index -> contains_9q0r1s.index\n            map_to_indexed_chars_2t3u4v.output_list -> contains_9q0r1s.list\n\n            contains_9q0r1s.contains -> is_repeated_3n4o5p\n        } -> find_first_repeated_char_7g8h9i.predicate\n        strings_characters_ab12cd.characters -> find_first_repeated_char_7g8h9i.items\n        find_first_repeated_char_7g8h9i.item -> character_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_instance root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_g7h8i9\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_j0k1l2\n\n            instance(x: 89, y: 29) contains_3m4n5o root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_from_chars_p6q7r8 root.Std_k98ojb.List.GenerateRange {}\n\n            chars_so_far_s9t0u1 := List.Empty()\n            current_char_g7h8i9 -> contains_3m4n5o.input\n            chars_so_far_s9t0u1 -> contains_3m4n5o.contains\n\n            contains_3m4n5o.result -> is_repeated_j0k1l2\n\n            list_from_chars_p6q7r8.from <- 0\n            list_from_chars_p6q7r8.to <- input_string_1a2b3c.Length() - 1\n            chars_so_far_s9t0u1 <- List.Concat(chars_so_far_s9t0u1, List.GetAt(list_from_chars_p6q7r8, Std.If(is_repeated_j0k1l2, 0, List.Length(chars_so_far_s9t0u1))))\n\n        } -> find_repeated_instance.predicate\n        input_string_1a2b3c.Characters() -> find_repeated_instance.items\n        find_repeated_instance.item -> repeated_char_4d5e6f\n    }\n}\n\ninstance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_7e9f3a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_f4d2b8\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1c8b4d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notempty_3e9f2c root.Std_k98ojb.List.NotEmpty {}\n            instance(x: 450, y: 50) slice_5a7f3c root.Std_k98ojb.List.Slice {}\n\n            contains_1c8b4d.input -> elem_9f6850\n            slice_5a7f3c.list -> contains_1c8b4d.contains\n            input_7e9f3a -> slice_5a7f3c.list\n\n            0 -> slice_5a7f3c.start\n            -1 -> slice_5a7f3c.end\n\n            notempty_3e9f2c.list -> bool_af09a7\n            contains_1c8b4d.result -> notempty_3e9f2c\n\n        } -> find_6d05b0.predicate\n        instance(x: -150, y: 100) characters_b5d8e9 root.Std_k98ojb.Strings.Characters {}\n        characters_b5d8e9.input -> input_7e9f3a\n        characters_b5d8e9.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_f4d2b8\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_a1c7d2 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_5a3f9c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_7b2d8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1a3f7c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d9e8fa\n\n            instance(x: 89, y: 29) contains_4b2d5f root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_6c3a7e root.Std_k98ojb.List.Slice {}\n            instance(x: 150, y: 50) not_empty_9f8d2b root.Std_k98ojb.List.NotEmpty {}\n\n            string_5a3f9c -> slice_6c3a7e.list\n            char_1a3f7c -> contains_4b2d5f.contains\n            slice_6c3a7e.start -> 0\n            slice_6c3a7e.end -> -1\n\n            not_empty_9f8d2b.input -> slice_6c3a7e.output\n            contains_4b2d5f.result -> bool_d9e8fa\n\n        } -> find_6d05b0.predicate\n        string_5a3f9c -> find_6d05b0.items\n        find_6d05b0.item -> char_7b2d8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> slice_input.items\n\n        instance(x: 426, y: -423) list_slice_node Std_k98ojb.List.Slice {\n            start: 1,\n            end: 2\n        }\n        slice_input.items -> list_slice_node.list\n        list_slice_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> slice_start.items\n\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        slice_start.items -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        list_slice_node.listWithoutSlice -> list_min.items\n\n        instance(x: 426, y: -588) list_min_node root.Std_k98ojb.List.Min {}\n        list_min.items -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) slice_start {}\n    instance(x: 426, y: -453) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -453) handler_node_1 root.Std_k98ojb.Handler {}\n        items_ai -> list_filter_node.items\n        instance(x: 426, y: -573) handler_instance_1 root.handler_node_1 {}\n\n        instance(x: 426, y: -693) handler_node_2 root.Std_k98ojb.Handler {}\n        list_filter_node.output_list -> handler_node_2.input_list\n\n        instance(x: 426, y: -813) min_node root.Std_k98ojb.List.Min {}\n        handler_node_2.output_list -> min_node.list\n        min_node.min -> second_min_ai\n\n        handler_instance_1.func = func(item: Number, index: Number) {\n            out(value: true)\n        }\n        list_filter_node.handler <- handler_instance_1.instance\n\n        instance(x: 426, y: -933) handler_instance_2 root.Std_k98ojb.Handler {}\n        handler_instance_2.func = func(item: Number, index: Number) {\n            in(x: 159, y: -1023, name: \"value\") property(Number) value_ai\n            instance(x: 426, y: -1143) greater_than_node root.Std_k98ojb.Math.GreaterThan {}\n            item -> greater_than_node.left\n            min_node.min -> greater_than_node.right\n\n            out(value: !greater_than_node.result)\n        }\n        handler_node_2.handler <- handler_instance_2.instance\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -423) lambda_handler_1 root.Std_k98ojb.Lambda {}\n        instance(x: 426, y: -543) list_min_node_1 root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_filter_node.items\n        list_filter_node.output_list -> list_min_node_1.items\n\n        list_min_node_1.min -> second_min_ai\n\n        lambda_handler_1.handler(list_filter_node.item, list_filter_node.index) {\n            out(x: 159, y: -219, name: \"result\") property(Boolean) result_ai\n            instance(x: 426, y: -423) math_expression_node root.Std_k98ojb.Math.Expression {}\n            instance(x: 426, y: -543) logic_not_node root.Std_k98ojb.Logic.Not {}\n\n            list_filter_node.item -> math_expression_node.a\n            math_expression_node.result -> logic_not_node.input\n\n            logic_not_node.output -> result_ai\n        }\n\n        lambda_handler_1.expression(\"it != Math.Min(items)\")\n    }\n}\n\ninstance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n        instance(x: 726, y: -303) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        slice_node.start = 1\n        slice_node.end = -1\n        instance(x: 1026, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        slice_node.slice -> list_min_node.list\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -453) slice_list_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.listWithoutItem -> slice_list_node.list\n        number_1 -> slice_list_node.start\n        number_2 -> slice_list_node.end\n\n        instance(x: 426, y: -588) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_list_node.slice -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n        \n        number_1 = 1\n        number_2 = 2\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -403) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        instance(x: 426, y: -493) constant_node_1 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 426, y: -583) constant_node_2 root.Std_k98ojb.List.GenerateRange {}\n        constant_node_1.from -> 1\n        constant_node_1.to -> 2\n        constant_node_2.from -> 0\n        constant_node_2.to -> 1\n        slice_node.start -> constant_node_2.list\n        slice_node.end -> constant_node_1.list\n        \n        instance(x: 426, y: -673) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_node.slice -> list_first_item_node.list\n\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        instance(x: 426, y: -519) number_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.slice -> number_first_item_node.list\n        number_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start <- 1\n        list_slice_node.end <- 2\n        instance(x: 426, y: -519) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.slice -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -403) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.listWithItem -> slice_node.list\n        instance(x: 0, y: -1) number_0 root.Std_k98ojb.Number {}\n        number_0.value = 1\n        number_0 -> slice_node.start\n        instance(x: 0, y: -1) number_1 root.Std_k98ojb.Number {}\n        number_1.value = 2\n        number_1 -> slice_node.end\n\n        slice_node.listWithoutItem -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    }
]