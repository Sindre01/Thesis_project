[
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Returns true if the input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3c5a8d\n\n        instance(x: 133, y: -131) intersection_4b6f1e root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_4b6f1e.left\n        list2_c62075 -> intersection_4b6f1e.right\n\n        instance(x: 133, y: -131) not_empty_3a8d7c root.Std_k98ojb.List.NotEmpty {}\n        intersection_4b6f1e.intersect -> not_empty_3a8d7c.list\n        not_empty_3a8d7c.isEmpty -> has_common_element_3c5a8d\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> has_common_element_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty()\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_e5d4a3\n\n        instance(x: 133, y: -131) intersection_6e1b9c root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96fb -> intersection_6e1b9c.left\n        list2_c62075 -> intersection_6e1b9c.right\n\n        instance(x: 133, y: -131) not_empty_3a5f8d root.Std_k98ojb.List.NotEmpty {}\n        intersection_6e1b9c.intersect -> not_empty_3a5f8d.list\n        not_empty_3a5f8d.isEmpty -> has_common_e5d4a3\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7d4e9c\n\n        instance(x: 133, y: -131) intersection_1f8a3b root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1f8a3b.left\n        list2_c62075 -> intersection_1f8a3b.right\n        instance(x: 133, y: -181) not_empty_4c5d6e root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f8a3b.intersect -> not_empty_4c5d6e.list\n        not_empty_4c5d6e.isEmpty -> has_common_element_7d4e9c\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_e0f2f1 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_f7d8c3\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        instance(x: 0, y: -40) not_empty_3e8c54 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty_3e8c54.list\n        not_empty_3e8c54.isEmpty -> result_f7d8c3\n   }\n\n   \n\n   instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -172, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -180, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7c9a5e\n\n        instance(x: 133, y: -131) intersection_a3f0b6 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_a3f0b6.left\n        list2_c62075 -> intersection_a3f0b6.right\n        intersection_a3f0b6.intersect -> has_common_element_7c9a5e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_d8b4d1 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_f3a5d9\n\n        instance(x: 133, y: -131) intersection_1b8f7c root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1b8f7c.left\n        list2_c62075 -> intersection_1b8f7c.right\n\n        instance(x: 133, y: -211) not_empty_5d4e9a root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b8f7c.intersect -> not_empty_5d4e9a.list\n        not_empty_5d4e9a.isEmpty -> result_f3a5d9\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_6f2a1b root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: -213, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -208, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_5e6b7c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5e6b7c.first\n            _index_769593 -> sub_5e6b7c.second\n            sub_5e6b7c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_5e6b7c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5e6b7c.first\n            _index_769593 -> sub_5e6b7c.second\n            sub_5e6b7c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        contains_32727d.list -> map_c73e3b.items\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_f3e4a6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -24, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_3a5b4c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_9f1e8d root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> sub_3a5b4c.first\n            list_07cae4 -> sub_3a5b4c.second\n            _index_769593 -> sub_3a5b4c.index\n            1 -> sub_3a5b4c.index\n            sub_3a5b4c.result -> equal_9f1e8d.left\n            1 -> equal_9f1e8d.right\n            equal_9f1e8d.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_d1f7d9 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) equal_c5c6e0 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> sub_d1f7d9.first\n            list_07cae4 -> sub_d1f7d9.second\n            1 -> sub_d1f7d9.index\n            sub_d1f7d9.result -> equal_c5c6e0.left\n            1 -> equal_c5c6e0.right\n            equal_c5c6e0.result -> bool_4524be\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_ea2c7f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_9a3b5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_4e7c8d root.Std_k98ojb.Logic.Equal {}\n\n            current_81298e -> sub_9a3b5f.first\n            list_07cae4[_index_769593 + 1] -> sub_9a3b5f.second\n            sub_9a3b5f.result -> equal_4e7c8d.left\n            1 -> equal_4e7c8d.right\n            equal_4e7c8d.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: 15) property(Number) _index_170471\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) less_than_or_equal_1b8c3e root.Std_k98ojb.Math.LessThanOrEqual {}\n            _index_170471 -> less_than_or_equal_1b8c3e.left\n            list_07cae4.length() - 2 -> less_than_or_equal_1b8c3e.right\n            less_than_or_equal_1b8c3e.result -> bool_4524be\n        } -> map_c73e3b.index_handler\n\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_a1b2c3 root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -23, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_e9f7e1 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_3c0d2a root.Std_k98ojb.Logic.Equal {}\n            _index_769593 -> sub_e9f7e1.second\n            current_81298e -> sub_e9f7e1.first\n            sub_e9f9ef.result -> output_efbc78\n            1 -> sub_e9f9ef.second\n            current_81298e -> sub_e9f9ef.first\n            sub_e9f9ef.result -> equal_3c0d2a.right\n            sub_e9f7e1.result -> equal_3c0d2a.left\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_bf7c0a root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -24, name: \"_next\") property(Number) _next_7a8d5f\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) add_b4b1e3 root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> add_b4b1e3.first\n            1 -> add_b4b1e3.second\n            add_b4b1e3.result -> notequal_7836b4.left\n            _next_7a8d5f -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 49, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 56) slice_5f3c8d root.Std_k98ojb.List.Slice {}\n            instance(x: 285, y: 51) find_ba1e6f root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) add_b4b1e3 root.Std_k98ojb.Math.Add {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> add_b4b1e3.first\n                1 -> add_b4b1e3.second\n                add_b4b1e3.result -> notequal_7836b4.left\n                _item_5c9a2f -> notequal_7836b4.right\n                notequal_7836b4.result -> output_efbc78\n            } -> find_ba1e6f.predicate\n            slice_5f3c8d.list -> find_ba1e6f.items\n            1 -> slice_5f3c8d.start_index\n            list_07cae4 -> slice_5f3c8d.list\n            find_ba1e6f.result -> bool_4524be\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9c6a7f root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) sorted_32727d root.Std_k98ojb.List.Sort {}\n        instance(x: 1058, y: -203) zip_75283f root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 246, y: -209, name: \"check consecutive\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n\n        sorted_32727d.list -> list_07cae4\n        sorted_32727d.sorted -> zip_75283f.left\n\n        func() {\n            in(x: 1070, y: -15, name: \"current\") property(Number) current_a1c5e3\n            in(x: 1069, y: 79, name: \"_next\") property(Number) _next_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_b76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n\n            1 -> sub_b76d2b.second\n            current_a1c5e3 -> sub_b76d2b.first\n            sub_b76d2b.result -> equal_7836b4.left\n            _next_769593 -> equal_7836b4.right\n\n            equal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        zip_75283f.zipped -> map_c73e3b.items\n\n        instance(x: 1058, y: -203) all_true_f1c5e3 root.Std_k98ojb.Iteration.Reduce {}\n        all_true_f1c5e3.initial_value = true\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n            in(x: 1070, y: -15, name: \"_accumulated\") property(Bool) _accumulated_a1c5e3\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) and_ad7b2a root.Std_k98ojb.Logic.And {}\n\n            current_81298e -> and_ad7b2a.left\n            _accumulated_a1c5e3 -> and_ad7b2a.right\n\n            and_ad7b2a.result -> bool_4524be\n        } -> all_true_f1c5e3.reducer\n\n        map_c73e3b.output_list -> all_true_f1c5e3.items\n        all_true_f1c5e3.reduced -> output_8d07dc\n\n        instance(x: 847, y: -207) copy_32727d root.Std_k98ojb.List.Copy {}\n        list_07cae4 -> copy_32727d.list\n        sorted_32727d.sorted -> zip_75283f.right\n    }\n\n    instance(x: -293, y: -5) consecutive_numbers_check_7a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -526, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_prev\") property(Number) _prev_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_9f7e3a root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_9f7e3a.first\n            _prev_769593 -> sub_9f7e3a.second\n            sub_9f7e3a.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        instance(x: -303, y: -205) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_bf6c7b root.Std_k98ojb.Logic.Equal {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> equal_bf6c7b.left\n            1 -> equal_bf6c7b.right\n            not(equal_bf6c7b.result) -> bool_4524be\n        } -> filter_c91965.handler\n\n        map_c73e3b.output_list -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_bf6c7b root.Std_k98ojb.Logic.Equal {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> equal_bf6c7b.left\n            1 -> equal_bf6c7b.right\n            not(equal_bf6c7b.result) -> bool_4524be\n        } -> map_c73e3b.handler\n\n        list_07cae4 -> map_c73e3b.items\n        instance(x: -303, y: 55) sort_e1a8d9 root.Std_k98ojb.List.Sort {}\n        list_07cae4 -> sort_e1a8d9.list\n        sort_e1a8d9.sorted_list -> map_c73e3b.items\n\n        filter_c91965.output_list -> contains_32727d.list\n        0 -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) has_consecutive_numbers_logic root.Std_k98ojb.Iteration.Filter {}\n        \n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_number\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_logic\n\n            instance(x: 226, y: 56) get_next root.Std_k98ojb.List.GetAt {}\n            instance(x: 463, y: 51) is_consecutive root.Std_k98ojb.Math.Expression {}\n\n            _index -> get_next.index\n            list_07cae4 -> get_next.list\n\n            current_number + 1 -> is_consecutive.expression\n            current_number -> is_consecutive.left\n            get_next.item -> is_consecutive.right\n\n            is_consecutive.result -> output_logic\n        } -> has_consecutive_numbers_logic.handler\n        list_07cae4 -> has_consecutive_numbers_logic.items\n\n        instance(x: 1058, y: -203) any root.Std_k98ojb.Iteration.Find {}\n        has_consecutive_numbers_logic.output_list -> any.items\n        true -> any.predicate\n        any.item -> output_8d07dc\n    }\n}\n\ninstance(x: -293, y: -5) check_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -525, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            current_81298e -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_ba1c7f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_a3d2b8 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_ba1c7f -> modulo_a3d2b8.value\n            2 -> modulo_a3d2b8.divisor\n            modulo_a3d2b8.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.items\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_c76d2b.first\n            _index_769593 -> sub_c76d2b.second\n            sub_c76d2b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_ad7b2a.value\n            list_07cae4.length -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_7a4dad root.main.is_consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"superList\") property(List) superList_ec88cd\n        in(x: -485, y: 155, name: \"subList\") property(List) subList_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == subListLength\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        superList_ec88cd -> for_d26972.items\n        for_d26972.item -> subList_check.expression\n        for_d26972.index -> getter_b280eb.x\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        subList_check.value -> ifexpression_875761.gen_2\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        list_length.expression: \"subList.length\"\n        list_length.value -> setter_9d4f1c.new_value\n        execute_90aaec -> list_length.execute\n        list_length.continue -> setter_38e107.execute\n        subList_check.expression: \"superList[index:index+subListLength] == subList\"\n        for_d26972.item -> setter_38e107.new_value\n        superList_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sub_for_d26972.items\n\n        instance(x: 800, y: -20) for_sub_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1000, y: 93) ifexpression_sub_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sub_index == 0 || sub_previous == sublist[index]\"\n        }\n        getter(x: 684, y: 160, name: \"getter_sub_b280eb\") getter_sub_b280eb = sub_previous\n        setter(x: 929, y: -313, name: \"setter_sub_9d4f1c\") setter_sub_9d4f1c = sub_previous\n\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        sublist_ec88cd -> sub_for_d26972.items\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        sub_for_d26972.item -> ifexpression_sub_875761.gen_2\n        sub_for_d26972.index -> ifexpression_sub_875761.gen_0\n        getter_sub_b280eb.value -> ifexpression_sub_875761.gen_1\n        sub_for_d26972.onItem -> ifexpression_sub_875761.execute\n        sub_for_d26972.done -> continue_a96db6\n\n        for_d26972.item -> getat_ce2a48.list\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_sub_875761.value -> output_5bbcd7\n        ifexpression_sub_875761.else -> sub_for_d26972.next\n\n        for_d26972.item -> sub_for_d26972.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_sub_38e107.new_value\n        execute_90aaec -> setter_sub_38e107.execute\n        setter_sub_38e107.continue -> sub_for_d26972.reset\n\n        ifexpression_sub_875761.then -> setter_sub_9d4f1c.execute\n        setter_sub_9d4f1c.continue -> sub_for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == sublist[index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        sublist_ec88cd -> getat_ce2a48.list\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        0 -> getat_ce2a48.index\n        sublist_ec88cd -> getat_sublist.list\n        for_d26972.index -> getat_sublist.index\n        getat_sublist.itemAtIndex -> getter_b280eb.value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -275, y: 150) getat_sublist root.Std_k98ojb.List.GetAt {}\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> sublist_matcher.input_item\n        instance(x: 500, y: -100) iteration_filter_f6a8e5 root.Std_k98ojb.Iteration.Filter {\n            handler: root.Std_k98ojb.Std.IfExpression {\n                expression: \"sublist_index == -1 || main_list_item == sublist_items[sublist_index]\"\n            }\n        }\n        iteration_filter_f6a8e5.output_list -> setter_9d4f1c.new_value\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        sublist_ec88cd -> sublist_matcher.sublist_items\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 500, y: -100) sublist_matcher root.Std_k98ojb.Iteration.Filter {\n            handler: root.Std_k98ojb.Std.IfExpression {\n                expression: \"sublist_index == -1 || main_list_item == sublist_items[sublist_index]\"\n            }\n        }\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_5bbcd7\n        sublist_ec88cd -> for_d26972.items\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_1\n        for_d26972.item -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        instance(x: 321, y: -20) for_e3f9b2 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_8c7a4e root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> for_e3f9b2.items\n        ifexpression_875761.value -> output_5bbcd7\n\n        sublist_ec88cd -> for_e3f9b2.items\n        main_list_ec88cd -> getat_8c7a4e.list\n        for_d26972.index -> getat_8c7a4e.index\n        getat_8c7a4e.itemAtIndex -> ifexpression_875761.gen_1\n        for_e3f9b2.item -> ifexpression_875761.gen_0\n        for_e3f9b2.onItem -> ifexpression_875761.execute\n        for_e3f9b2.done -> continue_a96db6\n\n        execute_90aaec -> getat_ce2a48.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        instance(x: 850, y: -20) ifexpression_2a7b3e root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index != -1 && main_item == sublist_item\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb_2 = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c_2 = sublist_index\n        instance(x: 321, y: -20) for_d26972_2 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107_2 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48_2 root.Std_k98ojb.List.GetAt {}\n        ifexpression_2a7b3e.else -> continue_a96db6\n        ifexpression_2a7b3e.value -> output_5bbcd7\n        ifexpression_2a7b3e.then -> setter_9d4f1c_2.execute\n        sublist_ec88cd -> for_d26972_2.items\n        for_d26972_2.item -> ifexpression_2a7b3e.gen_2\n        getter_b280eb_2.value -> ifexpression_2a7b3e.gen_0\n        for_d26972_2.onItem -> ifexpression_2a7b3e.execute\n        for_d26972_2.done -> continue_a96db6\n\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        ifexpression_875761.value -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_d26972.next\n        getter_b280eb.value -> getat_ce2a48.index\n        main_list_ec88cd -> getat_ce2a48_2.list\n        0 -> getat_ce2a48_2.index\n        getat_ce2a48_2.itemAtIndex -> setter_38e107_2.new_value\n        execute_90aaec -> setter_38e107_2.execute\n        setter_38e107_2.continue -> for_d26972_2.reset\n\n        ifexpression_875761.value -> setter_9d4f1c_2.new_value\n        setter_9d4f1c_2.continue -> for_d26972_2.next\n        getter_b280eb_2.value -> getat_ce2a48_2.index\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: -275, y: 160) getat_sublist_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_5bbcd7.set(true)\n        ifexpression_875761.else -> continue_a96db6\n\n        for_d26972.items -> main_list_ec88cd\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        getat_ce2a48.list -> main_list_ec88cd\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> sublist_start_index.set\n\n        instance(x: -275, y: 290) for_sublist_d26972 root.Std_k98ojb.Std.For {}\n        ifexpression_875761.value -> output_5bbcd7\n        sublist_start_index.value -> getat_sublist_ce2a48.index\n        sublist_ec88cd -> getat_sublist_ce2a48.list\n\n        for_sublist_d26972.items -> sublist_ec88cd\n        for_sublist_d26972.onItem -> sublist_check.execute\n        for_sublist_d26972.done -> continue_a96db6\n\n        instance(x: 752, y: 290) ifexpression_sublist_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1 || main_item != sublist_item\"\n        }\n\n        getat_ce2a48.itemAtIndex -> sublist_check.main_item\n        getat_sublist_ce2a48.itemAtIndex -> sublist_check.sublist_item\n        sublist_start_index.value + for_sublist_d26972.index -> ifexpression_sublist_875761.gen_0\n\n        ifexpression_sublist_875761.then -> continue_a96db6\n        ifexpression_sublist_875761.else -> for_sublist_d26972.next\n\n        execute_90aaec -> getat_ce2a48.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        sublist_ec88cd -> getat_ce2a48.index\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        getat_ce2a48.itemAtIndex -> is_sublist_check.execute\n        execute_90aaec -> is_sublist_check.execute\n        instance(x: 500, y: -200) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"current == sublist_item\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        sublist_ec88cd -> getat_ce2a48.index\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        getat_ce2a48.itemAtIndex -> is_sublist_check.execute\n        execute_90aaec -> is_sublist_check.execute\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_1a2b3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: 180) for_e2a3b4 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> output_5bbcd7.value(Bool) true\n        ifexpression_875761.else -> continue_a96db6\n\n        main_list_ec88cd -> for_d26972.items\n        sublist_1a2b3c -> for_e2a3b4.items\n\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_e2a3b4.next\n\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_e2a3b4.item -> ifexpression_875761.gen_1\n        for_e2a3b4.index -> ifexpression_875761.gen_2\n\n        for_d26972.onItem -> for_e2a3b4.reset\n        for_d26972.done -> continue_a96db6\n\n        for_e2a3b4.onItem -> ifexpression_875761.execute\n        for_e2a3b4.done -> setter_9d4f1c.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_f7a3b4\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || sublist_index != -1\"\n        }\n        \n        instance(x: 321, y: -20) for_main_list_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 321, y: 200) for_sublist_8f4d2a root.Std_k98ojb.Std.For {}\n\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        \n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_38e107.execute\n\n        main_list_ec88cd -> for_main_list_d26972.items\n        sublist_f7a3b4 -> for_sublist_8f4d2a.items\n        \n        for_main_list_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n\n        ifexpression_875761.gen_0 -> getter_b280eb.value\n        ifexpression_875761.gen_1 -> for_sublist_8f4d2a.item\n        \n        for_main_list_d26972.onItem -> ifexpression_875761.execute\n        for_main_list_d26972.done -> continue_a96db6\n\n        setter_38e107.continue -> for_sublist_8f4d2a.reset\n        for_sublist_8f4d2a.item -> ifexpression_875761.gen_2\n        \n        for_sublist_8f4d2a.onItem -> for_sublist_8f4d2a.next\n\n        execute_90aaec -> setter_38e107.execute\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.For {}\n        numbers_ai -> loop_node.items\n        loop_node.reset -> reset_trigger\n        instance(x: 426, y: -453) trigger_reset_node root.Std_k98ojb.Trigger.Once {}\n        trigger_reset_node.trigger -> reset_trigger\n\n        instance(x: 426, y: -603) index_node root.Std_k98ojb.Number.Increment {\n            start: 1\n        }\n        loop_node.index -> index_node.value\n        index_node.increment -> next_index_trigger\n        instance(x: 426, y: -753) trigger_next_index_node root.Std_k98ojb.Trigger.Once {}\n        trigger_next_index_node.trigger -> next_index_trigger\n\n        instance(x: 426, y: -903) check_missing_node root.main.check_missing {}\n        loop_node.item -> check_missing_node.current\n        index_node.value -> check_missing_node.expected\n        check_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"checks if the current number is missing.\") check_missing {\n        in(x: -426, y: -248, name: \"current\") property(Number) current_ai\n        in(x: -426, y: -378, name: \"expected\") property(Number) expected_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -453) check_missing_logic_node root.Std_k98ojb.Logic.NotEqual {}\n        current_ai -> check_missing_logic_node.left\n        expected_ai -> check_missing_logic_node.right\n        check_missing_logic_node.value -> is_missing_trigger\n        instance(x: 426, y: -603) trigger_is_missing_node root.Std_k98ojb.Trigger.Once {}\n        trigger_is_missing_node.trigger -> is_missing_trigger\n\n        instance(x: 426, y: -753) missing_number_node root.Std_k98ojb.Number.Value {\n            value: expected_ai\n        }\n        missing_number_node.value -> missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.Filter {}\n        numbers_ai -> loop_node.items\n\n        instance(x: 693, y: -303) if_missing_node root.Std_k98ojb.Logic.NotEqual {}\n        loop_node.index -> if_missing_node.left\n        loop_node.item -> if_missing_node.right\n\n        instance(x: 960, y: -303) add_one_node root.Std_k98ojb.Math.Add {}\n        loop_node.index -> add_one_node.first\n        Number(1) -> add_one_node.second\n        add_one_node.result -> missing_number_ai\n\n        loop_node.handler -> if_missing_node.if_true\n        if_missing_node.value -> add_one_node.trigger\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) list_length_node root.Std_k98ojb.List.Length {}\n        numbers_ai -> list_length_node.list\n        list_length_node.length -> length_ai\n\n        instance(x: 426, y: -378) range_node root.Std_k98ojb.List.GenerateRange {\n            from: 1\n            to: length_ai + 1\n        }\n        \n        instance(x: 426, y: -453) difference_node root.Std_k98ojb.Sets.Difference {}\n        numbers_ai -> difference_node.left\n        range_node.items -> difference_node.right\n        difference_node.difference -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n\n        instance(x: 726, y: -303) check_missing_node root.main.check_missing {}\n        iteration_find_node.index -> check_missing_node.index\n        iteration_find_node.item -> check_missing_node.current_number\n        check_missing_node.result -> iteration_find_node.predicate\n\n        instance(x: 1026, y: -303) default_missing_node root.Std_k98ojb.Math.Add {}\n        iteration_find_node.done -> default_missing_node.trigger\n        numbers_ai -> default_missing_node.first\n        list_length_node.count -> default_missing_node.second\n\n        instance(x: 1326, y: -303) list_length_node root.Std_k98ojb.List.Length {}\n        numbers_ai -> list_length_node.list\n\n        iteration_find_node.item -> missing_number_ai\n    }\n\n    func(doc: \"checks if the current number is missing.\") check_missing {\n        in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n        in(x: -426, y: -303, name: \"current_number\") property(Number) current_number_ai\n        out(x: 159, y: -219, name: \"result\") property(Bool) result_ai\n\n        instance(x: 426, y: -378) math_sub_node root.Std_k98ojb.Math.Sub {}\n        index_ai -> math_sub_node.first\n        current_number_ai -> math_sub_node.second\n\n        instance(x: 726, y: -378) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        math_sub_node.result -> logic_not_equal_node.left\n        number_one_node.value -> logic_not_equal_node.right\n\n        logic_not_equal_node.result -> result_ai\n    }\n\n    instance(x: 426, y: -303) number_one_node root.Std_k98ojb.Math.Expression {\n        expression: \"1\"\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n        instance(x: 546, y: -303) lambda_node {\n            func() {\n                in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n                in(x: -426, y: -219, name: \"number\") property(Number) number_ai\n\n                instance(x: 426, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n                index_ai -> math_sub_node.first\n                number_ai -> math_sub_node.second\n\n                instance(x: 546, y: -303) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n                math_sub_node.result -> logic_not_equal_node.left\n                0 -> logic_not_equal_node.right\n\n                logic_not_equal_node.value -> lambda_node.output\n            }\n        } -> iteration_find_node.predicate\n        instance(x: 666, y: -303) std_if_node root.Std_k98ojb.If {}\n        iteration_find_node.item -> std_if_node.input\n        instance(x: 786, y: -303) std_if_then_node {\n            func() {\n                out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n                instance(x: 426, y: -303) math_add_node root.Std_k98ojb.Math.Add {}\n                iteration_find_node.index -> math_add_node.first\n                1 -> math_add_node.second\n\n                math_add_node.result -> missing_number_ai\n            }\n        } -> std_if_then_node.then\n        instance(x: 906, y: -303) std_if_else_node {\n            func() {\n                out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n                instance(x: 426, y: -303) list_length_node root.Std_k98ojb.List.Length {}\n                numbers_ai -> list_length_node.list\n                instance(x: 546, y: -303) math_add_node root.Std_k98ojb.Math.Add {}\n                list_length_node.length -> math_add_node.first\n                1 -> math_add_node.second\n\n                math_add_node.result -> missing_number_ai\n            }\n        } -> std_if_else_node.else_\n\n        std_if_then_node.output -> std_if_node.then\n        std_if_else_node.output -> std_if_node.else_\n        std_if_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -423) if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        for_node.on_item -> if_node.input\n\n        instance(x: 426, y: -543) math_expr_node root.Std_k98ojb.Math.Expression {}\n        for_node.index -> math_expr_node.index\n        for_node.item -> math_expr_node.left\n        \"1\" -> math_expr_node.right\n\n        math_expr_node.result -> if_node.value\n        instance(x: 426, y: -663) logic_not_node root.Std_k98ojb.Logic.Not {}\n        if_node.else_ -> logic_not_node.input\n\n        logic_not_node.output -> missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop Std_k98ojb.Std.For {}\n        numbers_ai -> loop.items\n        loop.trigger -> trigger\n\n        instance(x: 426, y: -423) check_missing Std_k98ojb.Iteration.Map {}\n        loop.item -> check_missing.item\n        loop.index -> check_missing.index\n        check_missing.handler -> handler\n\n        func(doc: \"handler for checking missing numbers.\") handler {\n            in(item: -426, index: -248, name: \"\") property(Number) item_ai\n            out(x: 159, y: -219, name: \"result\") property(Boolean) result_ai\n\n            instance(x: 426, y: -303) if_missing Std_k98ojb.Std.If {}\n            Math_k98ojb.Math.Sub { first: item_ai, second: index } -> if_missing.input\n            if_missing.then -> trigger\n            if_missing.else -> continue\n\n            instance(x: 426, y: -423) return_missing Number {}\n            index + 1 -> return_missing.value\n            return_missing.value -> result_ai\n        }\n\n        instance(x: 426, y: -423) return_first Number {}\n        loop.item -> return_first.value\n        return_first.value -> missing_number_ai\n\n        loop.done -> trigger\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) iterate_numbers_node root.main.iterate_numbers {}\n        numbers_ai -> iterate_numbers_node.numbers\n\n        iterate_numbers_node.missing -> missing_ai\n    }\n\n    func(doc: \"iterates through the list to find the smallest missing number.\") iterate_numbers {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_loop_node root.Std_k98ojb.For {}\n        numbers_ai -> for_loop_node.items\n\n        instance(x: 726, y: -303) expected_number_node root.main.expected_number {}\n        \n        instance(x: 1026, y: -303) check_missing_node root.main.check_missing {}\n\n        for_loop_node.index -> expected_number_node.index\n        for_loop_node.item -> expected_number_node.current\n        expected_number_node.expected -> check_missing_node.expected\n\n        for_loop_node.on_item -> check_missing_node.current\n\n        instance(x: 726, y: -423) if_missing_node root.Std_k98ojb.If {}\n        check_missing_node.missing -> if_missing_node.input\n\n        instance(x: 1026, y: -423) return_missing_node root.main.return_missing {}\n\n        if_missing_node.then -> return_missing_node.current\n        for_loop_node.done -> return_missing_node.end\n\n        return_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"calculates the expected number at a given index.\") expected_number {\n        in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n        in(x: 159, y: -248, name: \"current\") property(Number) current_ai\n\n        instance(x: 426, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {}\n        math_expr_node.expression = \"index + 1\"\n\n        index_ai -> math_expr_node.index\n        math_expr_node.result -> expected_number.expected\n\n        out(x: 159, y: -219, name: \"expected\") property(Number) expected_ai\n    }\n\n    func(doc: \"checks if the current number is missing.\") check_missing {\n        in(x: -426, y: -248, name: \"current\") property(Number) current_ai\n        in(x: 159, y: -248, name: \"expected\") property(Number) expected_ai\n\n        instance(x: 426, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {}\n        math_expr_node.expression = \"current != expected\"\n\n        current_ai -> math_expr_node.current\n        expected_ai -> math_expr_node.expected\n\n        math_expr_node.result -> check_missing.missing\n\n        out(x: 159, y: -219, name: \"missing\") property(Bool) missing_ai\n    }\n\n    func(doc: \"returns the missing number or indicates completion.\") return_missing {\n        in(x: -426, y: -248, name: \"current\") property(Number) current_ai\n        in(x: 159, y: -248, name: \"end\") property(Bool) end_ai\n\n        instance(x: 426, y: -303) if_expr_node root.Std_k98ojb.IfExpression {}\n        if_expr_node.expression = \"end ? null : current + 1\"\n\n        current_ai -> if_expr_node.current\n        end_ai -> if_expr_node.end\n\n        if_expr_node.value -> return_missing.missing\n\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n        func() {\n            in(x: 0, y: 0, name: \"item\", index: 1, context: 2) property(Number) item_i\n            out(x: 0, y: -50, name: \"result\") property(Boolean) result_o\n\n            instance(x: 0, y: -100) math_sub_node root.Std_k98ojb.Math.Sub {}\n            item_i -> math_sub_node.first\n            iteration_find_node.index -> math_sub_node.second\n\n            instance(x: 0, y: -150) logic_greaterequal_node root.Std_k98ojb.Logic.GreaterThanOrEqual {}\n            math_sub_node.result -> logic_greaterequal_node.left\n            logic_greaterequal_node.right <- 1\n\n            result_o <- logic_greaterequal_node.result\n        } -> iteration_find_node.predicate\n\n        instance(x: 426, y: -450) std_if_node root.Std_k98ojb.Std.If {}\n        numbers_ai -> std_if_node.input\n        func() {\n            in(x: 0, y: 0, name: \"value\") property(List) value_i\n            out(x: 0, y: -50, name: \"result\") property(Number) result_o\n\n            instance(x: 0, y: -100) list_length_node root.Std_k98ojb.List.Length {}\n            value_i -> list_length_node.list\n\n            instance(x: 0, y: -150) math_add_node root.Std_k98ojb.Math.Add {}\n            list_length_node.length -> math_add_node.first\n            math_add_node.second <- 1\n\n            result_o <- math_add_node.result\n        } -> std_if_node.then\n\n        func() {\n            in(x: 0, y: 0, name: \"value\") property(Number) value_i\n            out(x: 0, y: -50, name: \"result\") property(Number) result_o\n\n            result_o <- value_i\n        } -> std_if_node.else\n\n        instance(x: 426, y: -570) std_if_expression_node root.Std_k98ojb.Std.IfExpression {}\n        iteration_find_node.item -> std_if_expression_node.expression\n        func() {\n            in(x: 0, y: 0, name: \"value\") property(Number) value_i\n            out(x: 0, y: -50, name: \"result\") property(Number) result_o\n\n            result_o <- value_i\n        } -> std_if_expression_node.then\n        func() {\n            in(x: 0, y: 0, name: \"value\") property(Number) value_i\n            out(x: 0, y: -50, name: \"result\") property(Number) result_o\n\n            instance(x: 0, y: -100) math_add_node root.Std_k98ojb.Math.Add {}\n            std_if_node.result -> math_add_node.first\n            math_add_node.second <- 1\n\n            result_o <- math_add_node.result\n        } -> std_if_expression_node.else\n\n        std_if_expression_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.For {}\n        numbers_ai -> loop_node.items\n        loop_node.trigger -> trigger_input\n        loop_node.done -> done_output\n\n        instance(x: 426, y: -453) if_missing_node root.Std_k98ojb.Logic.If {}\n        loop_node.index -> if_missing_node.input\n        loop_node.item -> if_missing_node.value\n        loop_node.next -> if_missing_node.then\n        trigger_input -> if_missing_node.reset\n\n        instance(x: 426, y: -588) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression := \"index + 1\"\n        }\n        if_missing_node.index -> math_expr_node.index\n        math_expr_node.result -> if_missing_node.value\n\n        instance(x: 426, y: -723) not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n        loop_node.item -> not_equal_node.left\n        math_expr_node.result -> not_equal_node.right\n        not_equal_node.output -> if_missing_node.input\n\n        instance(x: 426, y: -858) output_node root.Std_k98ojb.Output {}\n        if_missing_node.value -> output_node.value\n        if_missing_node.then -> trigger_output\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f7b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9d5a3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f2e6c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f7b8c.input\n        \" \" -> replace_4f7b8c.search\n        \":\" -> replace_4f7b8c.replace\n        replace_4f7b8c.output -> replace_b9d5a3.input\n        \",\" -> replace_b9d5a3.search\n        \":\" -> replace_b9d5a3.replace\n        replace_b9d5a3.output -> replace_f2e6c1.input\n        \".\" -> replace_f2e6c1.search\n        \":\" -> replace_f2e6c1.replace\n        replace_f2e6c1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3f8b7d root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3c9b8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6d4e7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c5a2b1 root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_3c9b8a.search\n        \":\" -> replace_3c9b8a.replace\n        input_0 -> replace_3c9b8a.input\n        replace_3c9b8a.output -> replace_6d4e7f.input\n        \",\" -> replace_6d4e7f.search\n        \":\" -> replace_6d4e7f.replace\n        replace_6d4e7f.output -> replace_c5a2b1.input\n        \".\" -> replace_c5a2b1.search\n        \":\" -> replace_c5a2b1.replace\n        replace_c5a2b1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_f3d7f8 root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f5d7a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6c3e9b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8b1f2d root.Std_k98ojb.Strings.Replace {}\n        replace_4f5d7a.output -> replace_6c3e9b.input\n        replace_6c3e9b.output -> replace_8b1f2d.input\n        input_0 -> replace_4f5d7a.input\n        \" \" -> replace_4f5d7a.search\n        \":\" -> replace_4f5d7a.replace\n        \",\" -> replace_6c3e9b.search\n        \":\" -> replace_6c3e9b.replace\n        \".\" -> replace_8b1f2d.search\n        \":\" -> replace_8b1f2d.replace\n        replace_8b1f2d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_a3e9c5 root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_bf3d4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_c7c8e6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_5a2d9f root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_bf3d4a.search\n        \":\" -> replace_bf3d4a.replace\n        input_0 -> replace_bf3d4a.input\n        replace_bf3d4a.output -> replace_c7c8e6.input\n        \",\" -> replace_c7c8e6.search\n        \":\" -> replace_c7c8e6.replace\n        replace_c7c8e6.output -> replace_5a2d9f.input\n        \".\" -> replace_5a2d9f.search\n        \":\" -> replace_5a2d9f.replace\n        replace_5a2d9f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_3b8e4d root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4c6b7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_f8a9d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_bf3a1c root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_4c6b7e.input\n        \" \" -> replace_4c6b7e.search\n        \":\" -> replace_4c6b7e.replace\n        replace_4c6b7e.output -> replace_f8a9d5.input\n        \",\" -> replace_f8a9d5.search\n        \":\" -> replace_f8a9d5.replace\n        replace_f8a9d5.output -> replace_bf3a1c.input\n        \".\" -> replace_bf3a1c.search\n        \":\" -> replace_bf3a1c.replace\n        replace_bf3a1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_8d9e7b root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_b3c5f8 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_d9d6a4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_9e7e7f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_b3c5f8.input\n        \" \" -> replace_b3c5f8.search\n        \":\" -> replace_b3c5f8.replace\n        replace_b3c5f8.output -> replace_d9d6a4.input\n        \",\" -> replace_d9d6a4.search\n        \":\" -> replace_d9d6a4.replace\n        replace_d9d6a4.output -> replace_9e7e7f.input\n        \".\" -> replace_9e7e7f.search\n        \":\" -> replace_9e7e7f.replace\n        replace_9e7e7f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDot_5a8c6b root.main.text_replace_space_comma_dot {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5e7d4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8c9f3d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_ba2c1b root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e7d4a.input\n        \" \" -> replace_5e7d4a.search\n        \":\" -> replace_5e7d4a.replace\n        replace_5e7d4a.output -> replace_8c9f3d.input\n        \",\" -> replace_8c9f3d.search\n        \":\" -> replace_8c9f3d.replace\n        replace_8c9f3d.output -> replace_ba2c1b.input\n        \".\" -> replace_ba2c1b.search\n        \":\" -> replace_ba2c1b.replace\n        replace_ba2c1b.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_8d5f7f root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_ba8f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7f5d4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_d6c3f1 root.Std_k98ojb.Strings.Replace {}\n        replace_ba8f9e.output -> replace_7f5d4c.input\n        replace_7f5d4c.output -> replace_d6c3f1.input\n        input_0 -> replace_ba8f9e.input\n        \" \" -> replace_ba8f9e.search\n        \":\" -> replace_ba8f9e.replace\n        \",\" -> replace_7f5d4c.search\n        \":\" -> replace_7f5d4c.replace\n        \".\" -> replace_d6c3f1.search\n        \":\" -> replace_d6c3f1.replace\n        replace_d6c3f1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_8b9e2d root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_ba4d8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5c3e7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6b9c5c root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_ba4d8f.search\n        \":\" -> replace_ba4d8f.replace\n        input_0 -> replace_ba4d8f.input\n        replace_ba4d8f.output -> replace_5c3e7c.input\n        \",\" -> replace_5c3e7c.search\n        \":\" -> replace_5c3e7c.replace\n        replace_5c3e7c.output -> replace_6b9c5c.input\n        \".\" -> replace_6b9c5c.search\n        \":\" -> replace_6b9c5c.replace\n        replace_6b9c5c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_d4f7d2 root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of space, comma and dot with colon\") string_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7c3f8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 21) replace_d5e6d4 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 41) replace_c9e2ec root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7c3f8a.input\n        \" \" -> replace_7c3f8a.search\n        \":\" -> replace_7c3f8a.replace\n        replace_7c3f8a.output -> replace_d5e6d4.input\n        \",\" -> replace_d5e6d4.search\n        \":\" -> replace_d5e6d4.replace\n        replace_d5e6d4.output -> replace_c9e2ec.input\n        \".\" -> replace_c9e2ec.search\n        \":\" -> replace_c9e2ec.replace\n        replace_c9e2ec.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_e54b7f root.main.string_replace_space_comma_dot_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7f5a4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_c8e1c6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_7f5a4d.input\n        characters_7f5a4d.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_3b8a2e root.Std_k98ojb.Math.Expression {\n                expression: \"(element == first_char)\"\n            }\n            element_5f51f7 -> expression_3b8a2e.gen_1\n            map_6030c9.firstItem -> expression_3b8a2e.gen_0\n            expression_3b8a2e.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_c8e1c6.left\n        map_6030c9.firstItem -> equal_c8e1c6.right\n        equal_c8e1c6.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> expression_b720d7.gen_1\n        map_6030c9.length -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_9d2e4f root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> StringsCharacters_d3c7e0.input\n        StringsCharacters_d3c7e0.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) substr_8a9c4e root.Std_k98ojb.Strings.Replace {}\n            element_5f51f7 -> substr_8a9c4e.input\n            input_f5c03d -> substr_8a9c4e.search\n            \"\" -> substr_8a9c4e.replace\n            substr_8a9c4e.value -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_9fba8c.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_c5e1d7 root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_1e3d4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_5f7a6b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_1e3d4f.input\n        characters_1e3d4f.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_1b6e3c root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_1b6e3c.left\n            characters_1e3d4f.characters[0] -> equal_1b6e3c.right\n            equal_1b6e3c.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        characters_1e3d4f.characters[0] -> expression_b720d7.gen_1\n        expression_b720d7.result -> equal_5f7a6b.left\n        for_8cb3f6.item -> equal_5f7a6b.right\n        equal_5f7a6b.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        equal_1b6e3c.result -> and_80a119.left\n        expression_b720d7.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_c4a2d5 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        Strings_k9q7yj.Characters(input_f5c03d) -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) ord_f3e9c8 root.Std_k98ojb.Math.Expression {\n                expression: \"(ord(element))\"\n            }\n            element_5f51f7 -> ord_f3e9c8.gen_0\n            ord_f3e9c8.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        1 -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_9fba8c.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_c4d7e2 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        1 -> generaterange_038fce.from\n        func() {\n            in(x: -76, y: 46, name: \"length\") property(Number) length_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            length_5f51f7 -> mul_2f9d09.first\n            1 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> generaterange_038fce.to\n        input_f5c03d -> strings_characters_c6b4e3.input\n        strings_characters_c6b4e3.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) strings_length_1c6b9d root.Std_k98ojb.Strings.Length {}\n            element_5f51f7 -> strings_length_1c6b9d.string\n            strings_length_1c6b9d.length -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        1 -> if_e19a62.then\n\n        instance(x: 2136, y: -356) if_7c5d9e root.Std_k98ojb.Std.If {}\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n\n        if_e19a62.then -> if_7c5d9e.execute\n        for_8cb3f6.done -> continue_8ba06b\n        if_7c5d9e.else -> for_8cb3f6.next\n        if_7c5d9e.value -> out_f3db9f\n\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_ba1b2e root.main.is_same_char {}\n    instance(x: 352, y: -493) strings_characters_c6b4e3 root.Std_k98ojb.Strings.Characters {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_6a5d1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_d4e3f8 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_6a5d1f.input\n        characters_6a5d1f.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_2b9d09 root.Std_k98ojb.Logic.Equal {}\n            characters_6a5d1f.characters -> equal_2b9d09.left\n            element_5f51f7 -> equal_2b9d09.right\n            equal_2b9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_d4e3f8.left\n        characters_6a5d1f.characters -> equal_d4e3f8.right\n        equal_d4e3f8.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        map_6030c9.output_list -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_e0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == first)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_3e6a9e.input\n        strings_characters_3e6a9e.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) getat_9a1c4b root.Std_k98ojb.List.GetAt {}\n            element_5f51f7 -> getat_9a1c4b.list\n            add_b4554f.result -> getat_9a1c4b.index\n            getat_9a1c4b.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        map_6030c9.output_list -> add_b4554f.result\n        map_6030c9.output_list -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        map_6030c9.output_list -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_char_c5b7d1 root.main.is_all_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_2e7c9a.input\n        strings_characters_2e7c9a.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) strings_getat_3e4c9a root.Std_k98ojb.Strings.GetAt {}\n            element_5f51f7 -> strings_characters_2e7c9a.input\n            strings_characters_2e7c9a.characters -> strings_getat_3e4c9a.list\n            generaterange_038fce.index -> strings_getat_3e4c9a.index\n            strings_getat_3e4c9a.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> and_80a119.left\n        if_e19a62.predicate -> and_80a119.right\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        and_80a119.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        and_80a119.result -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_d0d5e2 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_5e3a8d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_9c1b7f\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_b2d6a4\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_0e5d3b\n\n        instance(x: 352, y: -493) map_c1f9c8 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_4a2b6d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_7e3b9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        input_5e3a8d -> characters_4a2b6d.input\n        characters_4a2b6d.characters -> map_c1f9c8.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_7f5e3b\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) upper_c2a1d9 root.Std_k98ojb.Strings.ToUpper {}\n            element_7f5e3b -> upper_c2a1d9.input\n            upper_c2a1d9.output -> out_d0fd24\n        } -> map_c1f9c8.handler\n        map_c1f9c8.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_7e3b9f.left\n        map_c1f9c8.output_list -> equal_7e3b9f.right\n        equal_7e3b9f.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_0e5d3b\n        expression_b720d7.result -> and_80a119.left\n        equal_7e3b9f.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> expression_b720d7.gen_1\n        0 -> expression_b720d7.gen_0\n        input_5e3a8d -> expression_b720d7.gen_2\n        if_07b8c7.value -> out_b2d6a4\n        if_e19a62.then -> continue_0e5d3b\n        for_8cb3f6.done -> continue_0e5d3b\n        execute_9c1b7f -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_char_b4e2f0 root.main.is_all_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_3e7f0a.input\n        strings_characters_3e7f0a.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) getat_6e9c3a root.Std_k98ojb.List.GetAt {}\n            element_5f51f7 -> getat_6e9c3a.index\n            strings_characters_3e7f0a.characters -> getat_6e9c3a.list\n            getat_6e9c3a.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        map_6030c9.output_list -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_1e5d4a root.main.is_same_char {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 99, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b.Characters -> count_digits_96023e.s_6b655b\n        isnumeric_adfa16.input -> count_digits_96023e.numeric_check\n        isnumeric_adfa16.result -> count_digits_96023e.is_numeric\n        count_digits_96023e.is_numeric -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -369) characters_61b38d root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        input_string_6b655b -> characters_61b38d.input\n        characters_61b38d.characters -> slice_547f34.list\n        0 -> slice_547f34.start\n        -1 -> slice_547f34.end\n        slice_547f34.slice -> count_digits_96023e.items\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n\n        is_numeric_adfa16.input -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_8a5f3c root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_1e7d2a root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -249) characters_9f4c3b root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> slice_1e7d2a.execute\n        characters_9f4c3b.characters -> slice_1e7d2a.list\n        0 -> slice_1e7d2a.start\n        slice_1e7d2a.item -> isnumeric_8a5f3c.input\n        isnumeric_8a5f3c.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        slice_1e7d2a.rest -> count_digits_96023e.s_6b655b\n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> characters_9f4c3b.input\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> characters_123456.root.Std_k98ojb.Strings.Characters {}\n        characters_123456.characters -> iteration_map_654321.root.Iteration.Map {\n            handler: count_digits_96023e\n        }\n        is_numeric_adfa16.input -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) length_c4d2f9 root.Std_k98ojb.List.Length {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n\n        instance(x: -202, y: -236) filter_b9e3f2 root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: String) -> Boolean {\n                return Std_k98ojb.Strings.IsNumeric(item)\n            }\n        }\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> filter_b9e3f2.items\n        filter_b9e3f2.output_list -> length_c4d2f9.list\n        length_c4d2f9.length -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_a1f9a4 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_3d5e6c root.Std_k98ojb.List.Slice {}\n        instance(x: 99, y: -249) characters_c1f4a2 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> characters_c1f4a2.input\n        characters_c1f4a2.characters -> slice_3d5e6c.list\n        0 -> slice_3d5e6c.start\n        -1 -> slice_3d5e6c.end\n        slice_3d5e6c.slice -> count_digits_96023e.s_6b655b\n        characters_c1f4a2.characters -> is_numeric_a1f9a4.input\n        is_numeric_a1f9a4.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) map_digits_to_count_96023e root.main.map_digits_to_count {}\n        instance(x: 656, y: -330) count_88bb8a root.Std_k98ojb.List.Length {}\n\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        instance(x: -202, y: -236) map_digits_to_count_61b38d root.main.map_digits_to_count {}\n        \n        execute_cdac2a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> map_digits_to_count_96023e.execute_cdac2a\n\n        map_digits_to_count_96023e.continue_d9efd7 -> count_88bb8a.items\n        count_88bb8a.output -> output_732a8a\n        input_string_6b655b -> map_digits_to_count_61b38d.input_string\n    }\n\n    func(doc: \"maps each character to a boolean indicating if it's a digit.\") map_digits_to_count {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output_list\") property(List(Boolean)) output_list_732a8a\n\n        instance(x: 80, y: -417) characters_3d7de6 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 395, y: -378) map_96023e root.Std_k98ojb.Iteration.Map {}\n\n        input_string_6b655b -> characters_3d7de6.input\n        characters_3d7de6.characters -> map_96023e.items\n\n        execute_cdac2a -> characters_3d7de6.execute\n        characters_3d7de6.output -> map_96023e.items\n\n        instance(x: 656, y: -330) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n\n        map_96023e.handler {\n            in(x: -450, y: -421, name: \"character\") property(String) character\n            out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n            out(x: 1169, y: -269, name: \"output_boolean\") property(Boolean) output_boolean\n\n            execute_cdac2a -> is_numeric_adfa16.input\n            is_numeric_adfa16.value -> output_boolean\n        }\n\n        map_96023e.output_list -> output_list_732a8a\n    }\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n        1 -> add_88bb8a.second\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        slice_547f34.start -> length_61b38d.list\n        slice_547f34.end -> -1\n        length_61b38d.length -> slice_547f34.start\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        is_numeric_adfa16.value -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> slice_547f34.input\n        length_61b38d.length -> slice_547f34.end\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        input_string_6b655b -> characters_547f34.input\n        characters_547f34.characters -> count_digits_96023e.characters_list\n\n        instance(x: 300, y: -500) for_loop_abc123 root.Std_k98ojb.Std.For {\n            items: \"characters_list\"\n        }\n        for_loop_abc123.on_item -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_2efg45.root.Std_k98ojb.Std.IfExpression {\n            expression: \"true\"\n        }\n        ifexpression_2efg45.then -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        for_loop_abc123.next -> count_digits_96023e.next_item\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        characters_list -> for_loop_abc123.items\n        next_item -> for_loop_abc123.next\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        1 -> div_547f34.second\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n    }\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_a8c5d2 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_a8c5d2.gen_0\n        data_cde0dc -> pow_a8c5d2.y\n        expression_2d6da6.result -> pow_a8c5d2.x\n        pow_a8c5d2.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_instance root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) pow_ae5b7c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_ae5b7c.x\n        data_instance(x: 330, y: -3) data_f8a2f4 = 4\n        data_f8a2f4 -> pow_ae5b7c.y\n\n        instance(x: 403, y: 0) add_1d9e6b root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_1d9e6b.first\n        pow_ae5b7c.result -> add_1d9e6b.second\n\n        instance(x: 403, y: -3) count_4a2f8b root.Std_k98ojb.Std.Count {}\n        n_3a3116 -> count_4a2f8b.count\n        count_4a2f8b.done -> add_1d9e6b.trigger\n        count_4a2f8b.next -> div_64046c.trigger\n\n        add_1d9e6b.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_5b3c0e root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 403, y: -1) pow_d9f8c5 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_d9f8c5.x\n        data_instance(x: 503, y: 133) data_b7e4a3  = 4\n        data_b7e4a3 -> pow_d9f8c5.y\n        pow_d9f8c5.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_a1d2b6 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of the fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -20) pow_1f9e5b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_1f9e5b.x\n        data_instance(x: 330, y: 133) data_b4d2a7 = 4\n        data_b4d2a7 -> pow_1f9e5b.y\n\n        pow_1f9e5b.result -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -22) pow_a5b1e8 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a5b1e8.x\n        data_instance(x: 330, y: 133) data_instance_2 = 4\n        data_instance_2 -> pow_a5b1e8.y\n\n        instance(x: 303, y: -47) sum_3f6a7c root.Std_k98ojb.Iteration.Reduce {}\n        pow_a5b1e8.result -> sum_3f6a7c.item\n        n_3a3116 -> sum_3f6a7c.length\n\n        instance(x: 303, y: -72) add_b2d4f0 root.Std_k98ojb.Math.Add {}\n        data_instance(x: 330, y: 133) data_instance_3 = 0\n        add_b2d4f0.first -> sum_3f6a7c.accumulated_value\n        pow_a5b1e8.result -> add_b2d4f0.second\n        data_instance_3 -> add_b2d4f0.first\n\n        add_b2d4f0.result -> sum_3f6a7c.output_list\n        sum_3f6a7c.output_list -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        data_instance(x: 330, y: 133) data_d8f4a5  = 16\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 303, y: 2) div_64046c_3 root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        expression_2d6da6.result -> mul_f892a4.first\n        mul_f892a4.result -> div_64046c.first\n        instance(x: 23, y: -1) mul_f892a4_3 root.Std_k98ojb.Math.Mul {}\n        data_d8f4a5 -> mul_f892a4_3.second\n        div_64046c.result -> mul_f892a4_3.first\n        mul_f892a4_3.result -> sum_365f7b\n        n_3a3116 -> expression_2d6da6.gen_0\n        n_3a3116 -> mul_f892a4.second\n        div_64046c_3.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_ae9e1e root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_a7c5f9 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_b8d3a0 = 4\n        pow_a7c5f9.y -> data_b8d3a0\n        expression_2d6da6.result -> pow_a7c5f9.x\n        n_3a3116 -> expression_2d6da6.gen_0\n        pow_a7c5f9.result -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_ae5c3a root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        pow_ae5c3a.y -> expression_2d6da6.gen_1\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_ae5c3a.x\n        data_cde0dc -> pow_ae5c3a.y\n        pow_ae5c3a.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_b4d9d6 root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: 100) pow_1f8e7b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_1f8e7b.x\n        data_instance(x: 450, y: 150) data_b3a2d4 = 4\n        data_b3a2d4 -> pow_1f8e7b.y\n\n        instance(x: 500, y: 200) add_d6c5a9 root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_d6c5a9.first\n        pow_1f8e7b.result -> add_d6c5a9.second\n\n        instance(x: -100, y: 200) for_loop_f4d2e3 root.Std_k98ojb.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116 + 1)\n        }\n        for_loop_f4d2e3.on_item -> add_d6c5a9.trigger\n    }\n\n}\n\ninstance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -26) div_5f7b9c root.Std_k98ojb.Math.Div {}\n        div_64046c.result -> div_5f7b9c.first\n        data_cde0dc -> div_5f7b9c.second\n        instance(x: 12, y: -27) expression_6e8d3a root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> expression_6e8d3a.gen_0\n        instance(x: 23, y: -28) mul_2c9f7a root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_2c9f7a.first\n        expression_6e8d3a.result -> mul_2c9f7a.second\n        instance(x: 303, y: -29) div_a0b4d1 root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_a0b4d1.second\n        mul_2c9f7a.result -> div_a0b4d1.first\n        div_5f7b9c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_3e8f1a root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5a8f7d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_b9c1e4\n\n        instance(x: 94, y: -105) mul_6b2a3d root.Std_k98ojb.Math.Mul {}\n        size_5a8f7d -> mul_6b2a3d.first\n        size_5a8f7d -> mul_6b2a3d.second\n        mul_6b2a3d.result -> surfaceArea_b9c1e4\n\n        instance(x: 94, y: -140) mul_7f8a4e root.Std_k98ojb.Math.Mul {}\n        mul_6b2a3d.result -> mul_7f8a4e.first\n        6 -> mul_7f8a4e.second\n        mul_7f8a4e.result -> surfaceArea_b9c1e4\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_3d8b2a root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8ee839\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_8ee839 -> mul_584bfd.first\n        6 -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3e1f9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_d4b7c0\n\n        instance(x: 94, y: -105) mul_8a2c5e root.Std_k98ojb.Math.Mul {}\n        size_3e1f9d -> mul_8a2c5e.first\n        size_3e1f9d -> mul_8a2c5e.second\n        mul_8a2c5e.result -> surface_area_d4b7c0\n\n        instance(x: 94, y: -140) mul_b6f9ed root.Std_k98ojb.Math.Mul {}\n        mul_8a2c5e.result -> mul_b6f9ed.first\n        6 -> mul_b6f9ed.second\n        mul_b6f9ed.result -> surface_area_d4b7c0\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1f3a9d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_7b8e2c\n\n        instance(x: 94, y: -105) mul_a5f0c4 root.Std_k98ojb.Math.Mul {}\n        size_1f3a9d -> mul_a5f0c4.first\n        size_1f3a9d -> mul_a5f0c4.second\n        mul_a5f0c4.result -> surfaceArea_7b8e2c\n\n        instance(x: 94, y: -140) mul_6a8f9e root.Std_k98ojb.Math.Mul {}\n        mul_a5f0c4.result -> mul_6a8f9e.first\n        6 -> mul_6a8f9e.second\n        mul_6a8f9e.result -> surfaceArea_7b8e2c\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5f2a1d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_b9e3c4\n\n        instance(x: 94, y: -105) mul_7f6b2a root.Std_k98ojb.Math.Mul {}\n        size_5f2a1d -> mul_7f6b2a.first\n        6 -> mul_7f6b2a.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_f3e4c9\n\n            out(x: 333, y: -50, name: \"\") property(Number) _d1e5b8\n\n            instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n            x_f3e4c9 -> pow_584bfd.x\n            2 -> pow_584bfd.y\n            pow_584bfd.result -> _d1e5b8\n        } -> mul_7f6b2a.handler\n        mul_7f6b2a.result -> surfaceArea_b9e3c4\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_f4b2c7 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a9f2c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1d5b8e\n\n        instance(x: 94, y: -105) mul_a0f7e4 root.Std_k98ojb.Math.Mul {}\n        size_3a9f2c -> mul_a0f7e4.first\n        size_3a9f2c -> mul_a0f7e4.second\n        mul_a0f7e4.result -> surface_area_b5d6c1\n\n        instance(x: 94, y: -140) mul_c4b8ed root.Std_k98ojb.Math.Mul {}\n        surface_area_b5d6c1 -> mul_c4b8ed.first\n        6 -> mul_c4b8ed.second\n        mul_c4b8ed.result -> surface_area_1d5b8e\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1f9d7c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_e4b8e5\n\n        instance(x: 94, y: -105) mul_f3a6b2 root.Std_k98ojb.Math.Mul {}\n        size_1f9d7c -> mul_f3a6b2.first\n        size_1f9d7c -> mul_f3a6b2.second\n        mul_f3a6b2.result -> surface_area_e4b8e5\n\n        instance(x: 94, y: -148) mul_d0a9f5 root.Std_k98ojb.Math.Mul {}\n        mul_f3a6b2.result -> mul_d0a9f5.first\n        6 -> mul_d0a9f5.second\n        mul_d0a9f5.result -> surface_area_e4b8e5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a8f6d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_1c9b0e root.Std_k98ojb.Math.Mul {}\n        size_3a8f6d -> mul_1c9b0e.first\n        6 -> mul_1c9b0e.second\n        mul_1c9b0e.result -> result_cbb7bd\n\n        instance(x: 94, y: -105) pow_e4d5b2 root.Std_k98ojb.Math.Pow {}\n        size_3a8f6d -> pow_e4d5b2.x\n        2 -> pow_e4d5b2.y\n        mul_1c9b0e.first -> mul_1c9b0e.second\n        pow_e4d5b2.result -> mul_1c9b0e.second\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3e1a9c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_5f7b8d\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_3e1a9c -> mul_f2330d.first\n        size_3e1a9c -> mul_f2330d.second\n        mul_f2330d.result -> surface_area_temp_a8f4d7\n\n        instance(x: 94, y: -140) mul_e2b5d6 root.Std_k98ojb.Math.Mul {}\n        surface_area_temp_a8f4d7 -> mul_e2b5d6.first\n        6 -> mul_e2b5d6.second\n        mul_e2b5d6.result -> surface_area_5f7b8d\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5e7f6c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1a3b2d\n\n        instance(x: 94, y: -105) mul_9f4b2a root.Std_k98ojb.Math.Mul {}\n        size_5e7f6c -> mul_9f4b2a.first\n        size_5e7f6c -> mul_9f4b2a.second\n        mul_9f4b2a.result -> surface_area_1a3b2d\n\n        instance(x: 94, y: -130) mul_8b3c7e root.Std_k98ojb.Math.Mul {}\n        mul_9f4b2a.result -> mul_8b3c7e.first\n        6 -> mul_8b3c7e.second\n        mul_8b3c7e.result -> surface_area_1a3b2d\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_4f5b8d root.main.cube_surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -543) math_sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n        math_sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -378) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 678, y: -378) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -378) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -453) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.diff_max_min {}\n    instance(x: 426, y: -378) min_node root.main.diff_max_min {}\n    instance(x: 426, y: -453) sub_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> sub_node.first\n        list_min_node.min -> sub_node.second\n        \n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_val_ai\n\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_val_ai\n\n        instance(x: 426, y: -493) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_val_ai -> math_sub_node.first\n        min_val_ai -> math_sub_node.second\n        math_sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -503) sub_diff_node root.Std_k98ojb.Math.Sub {}\n        list_max_node.max -> sub_diff_node.first\n        list_min_node.min -> sub_diff_node.second\n        sub_diff_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -383) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 426, y: -463) math_sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n        math_sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_val_ai\n\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_val_ai\n\n        instance(x: 426, y: -519) sub_node root.Std_k98ojb.Math.Sub {}\n        max_val_ai -> sub_node.first\n        min_val_ai -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.diff_largest_smallest {}\n    instance(x: 426, y: -423) list_min_node root.main.diff_largest_smallest {}\n    instance(x: 426, y: -519) sub_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -383) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 726, y: -303) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.diff_max_min {}\n    instance(x: 426, y: -383) min_node root.main.diff_max_min {}\n    instance(x: 726, y: -303) sub_node root.main.diff_max_min {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_1e5f3a root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_1e5f3a.input\n        if_1e5f3a.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n            then: true\n            else: false\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.value -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) and_7b3b7b root.Std_k98ojb.Logic.And {\n            left: \"number % 2 == 0\"\n            right: true\n        }\n        number_ai -> and_7b3b7b.left\n        and_7b3b7b.result -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_3f2a1d\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_7b4c8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1c2d8e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_before_4f3a9b root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) not_empty_5d6f3b root.Std_k98ojb.List.NotEmpty {}\n\n            list_before_4f3a9b.start -> -1\n            list_before_4f3a9b.end -> -1\n            input_string_3f2a1d -> list_before_4f3a9b.list\n\n            not_empty_5d6f3b.list -> list_before_4f3a9b.output_list\n\n            elem_9f6850 -> contains_1c2d8e.contains\n            list_before_4f3a9b.output_list -> contains_1c2d8e.input\n\n            contains_1c2d8e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 200, y: -50) characters_8e2b4f root.Std_k98ojb.Strings.Characters {}\n        characters_8e2b4f.input -> input_string_3f2a1d\n\n        list_before_4f3a9b.output_list -> find_6d05b0.items\n        find_6d05b0.item -> char_7b4c8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_char root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"current_char\") property(Char) current_char_7g8h9i\n            in(x: -113, y: 70, name: \"seen_chars\") property(List) seen_chars_jk0l1m\n\n            out(x: 515, y: 44, name: \"is_repeated\") property(Bool) is_repeated_nm2o3p\n\n            instance(x: 89, y: 29) contains_4r5s6t root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) add_char_u7v8w9 root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(Char) item_x1y2z3\n\n                out(x: 515, y: 44, name: \"new_list\") property(List) new_list_a4b5c6\n                seen_chars_jk0l1m -> add_char_u7v8w9.items\n                item_x1y2z3 -> add_char_u7v8w9.handler.item\n                List.Empty() -> add_char_u7v8w9.handler.context\n                0 -> add_char_u7v8w9.handler.index\n\n                instance(x: -113, y: 70) concat_5d6e7f root.Std_k98ojb.List.Concat {}\n                item_x1y2z3 -> concat_5d6e7f.left\n                new_list_a4b5c6 -> concat_5d6e7f.right\n\n                concat_5d6e7f.result -> add_char_u7v8w9.output_list\n            }\n\n            current_char_7g8h9i -> contains_4r5s6t.item\n            seen_chars_jk0l1m -> contains_4r5s6t.list\n\n            contains_4r5s6t.result -> is_repeated_nm2o3p\n        } -> find_repeated_char.predicate\n        Strings.Characters(input_string_1a2b3c) -> find_repeated_char.items\n        0 -> find_repeated_char.index\n        List.Empty() -> seen_chars_jk0l1m\n\n        find_repeated_char.item -> char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_8f4a3d\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_7b9c2e\n\n        instance(x: 0, y: 0) find_repeated_char_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_a1f5c2\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3d9e7a\n\n            instance(x: 89, y: 29) characters_1088d5 root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n\n            string_8f4a3d -> characters_1088d5.input\n            func() {\n                in(x: -113, y: 34, name: \"index\") property(Number) index_f1e2c0\n\n                out(x: 515, y: 44, name: \"char\") property(Char) char_9f6850\n                characters_1088d5.characters[index_f1e2c0] -> char_9f6850\n            } -> find_repeated_char_6d05b0.items\n\n            instance(x: -113, y: 34, name: \"seen\") property(List) seen_4b3a7f\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(Char) item_1c2e8d\n\n                out(x: 515, y: 44, name: \"listWithItem\") property(List) listwithitem_6b9a7f\n                instance(x: 310, y: 35) contains_seen_807ffd root.Std_k98ojb.List.Contains {}\n                func() {\n                    in(x: -113, y: 34, name: \"item\") property(Char) item_1c2e8d\n\n                    out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3d9e7a\n                    seen_4b3a7f -> contains_seen_807ffd.list\n                    item_1c2e8d -> contains_seen_807ffd.item\n                } -> find_repeated_char_6d05b0.predicate\n\n                instance(x: 310, y: 35) add_to_seen_807ffd root.Std_k98ojb.List.Add {}\n                func() {\n                    in(x: -113, y: 34, name: \"item\") property(Char) item_1c2e8d\n\n                    out(x: 515, y: 44, name: \"listWithItem\") property(List) listwithitem_6b9a7f\n                    seen_4b3a7f -> add_to_seen_807ffd.list\n                    item_1c2e8d -> add_to_seen_807ffd.item\n                }\n\n                contains_seen_807ffd.result -> bool_3d9e7a\n\n                if(bool_3d9e7a) {\n                    char_a1f5c2 -> char_7b9c2e\n                } else {\n                    add_to_seen_807ffd.listWithItem -> seen_4b3a7f\n                }\n            }\n\n            find_repeated_char_6d05b0.item -> char_7b9c2e\n        }\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_3c2d7a\n\n        out(x: 593, y: -1, name: \"character\") property(String) character_f9b8e5\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) char_d4a7f2\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_1e9c8d\n\n            instance(x: 89, y: 29) characters_5b6f3a root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_4f2a7d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 150, y: 50) filter_9c8e1b root.Std_k98ojb.Iteration.Filter {}\n\n            input_string_3c2d7a -> characters_5b6f3a.input\n            characters_5b6f3a.characters -> filter_9c8e1b.items\n\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(String) item_4b7c2d\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_3f9a8e\n\n                instance(x: 89, y: 29) list_1a6f5b root.Std_k98ojb.List.Slice {}\n                instance(x: 310, y: 35) contains_7d2c4f root.Std_k98ojb.Strings.Contains {}\n\n                item_4b7c2d -> contains_7d2c4f.contains\n                list_1a6f5b.listWithoutItem -> contains_7d2c4f.input\n\n                func() {\n                    in(x: -113, y: 34, name: \"item\") property(String) item_8f3e9b\n\n                    out(x: 515, y: 44, name: \"list\") property(List) list_6a7d2c\n\n                    instance(x: 89, y: 29) concat_b5d4a1 root.Std_k98ojb.List.Concat {}\n                    instance(x: 310, y: 35) getat_f3a9e8 root.Std_k98ojb.List.GetAt {}\n\n                    list_6a7d2c -> concat_b5d4a1.left\n                    item_8f3e9b -> concat_b5d4a1.right\n\n                    func() {\n                        in(x: -113, y: 34, name: \"index\") property(Number) index_c8f7b6\n\n                        out(x: 515, y: 44, name: \"item\") property(String) item_9e3c5d\n\n                        getat_f3a9e8.index -> index_c8f7b6\n                        filter_9c8e1b.output_list -> getat_f3a9e8.list\n                    } -> list_1a6f5b.start\n\n                    0 -> list_1a6f5b.end\n                } -> contains_7d2c4f.input\n\n                contains_7d2c4f.result -> bool_3f9a8e\n            } -> filter_9c8e1b.handler\n\n            filter_9c8e1b.output_list -> list_1a6f5b.listWithoutItem\n\n            func() {\n                in(x: -113, y: 34, name: \"index\") property(Number) index_d3a7f2\n\n                out(x: 515, y: 44, name: \"item\") property(String) item_e9c8d1\n\n                getat_f3a9e8.index -> index_d3a7f2\n                filter_9c8e1b.output_list -> getat_f3a9e8.list\n            } -> list_1a6f5b.start\n\n            0 -> list_1a6f5b.end\n\n            list_1a6f5b.listWithoutItem -> contains_4f2a7d.input\n            char_d4a7f2 -> contains_4f2a7d.contains\n\n            contains_4f2a7d.result -> bool_1e9c8d\n        } -> find_6d05b0.predicate\n        characters_5b6f3a.characters -> find_6d05b0.items\n        find_6d05b0.item -> character_f9b8e5\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(Char) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) characters_7g8h9i root.Std_k98ojb.Strings.Characters {}\n        input_string_1a2b3c -> characters_7g8h9i.input\n        instance(x: 0, y: 100) find_first_repeat_a1b2c3 {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_d4e5f6\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_g7h8i9\n\n            instance(x: 89, y: 29) contains_1j2k3l root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) not_equal_mno123 root.Std_k98ojb.Logic.NotEqual {}\n            list_seen_pqr456 -> contains_1j2k3l.list\n            char_d4e5f6 -> contains_1j2k3l.item\n            contains_1j2k3l.result -> not_equal_mno123.left\n            false -> not_equal_mno123.right\n            not_equal_mno123.result -> bool_g7h8i9\n\n            instance(x: 89, y: 60) add_seen_xyz789 root.Std_k98ojb.List.Add {}\n            char_d4e5f6 -> add_seen_xyz789.item\n            list_seen_pqr456 -> add_seen_xyz789.list\n            add_seen_xyz789.listWithItem -> list_seen_pqr456\n        }\n        \n        instance(x: 0, y: 200) find_abc123 root.Std_k98ojb.Iteration.Find {}\n        characters_7g8h9i.characters -> find_first_repeat_a1b2c3.char\n        find_first_repeat_a1b2c3.bool -> find_abc123.predicate\n        characters_7g8h9i.characters -> find_abc123.items\n        list_seen_pqr456 = List.Empty()\n        find_abc123.item -> repeated_char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_def456 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_9f6850\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_af09a7\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_b3e8c5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_1f6d2c root.Std_k98ojb.List {}\n            instance(x: 410, y: 45) if_a4f9c7 root.Std_k98ojb.Std.If {}\n\n            input_9f6850 -> list_1f6d2c.items\n            list_1f6d2c.item -> contains_b3e8c5.input\n\n            char_9f6850 -> contains_b3e8c5.contains\n            contains_b3e8c5.result -> if_a4f9c7.input\n            1 -> if_a4f9c7.then\n            0 -> if_a4f9c7.else\n\n            if_a4f9c7.value -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_9f6850 -> find_6d05b0.items\n        find_6d05b0.item -> char_af09a7\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_d4e5f6\n\n        instance(x: 0, y: 0) find_first_repeated_char_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_a1b2c3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_x7y8z9\n\n            instance(x: 89, y: 29) contains_abc123 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) index_of_def456 root.Std_k98ojb.List.GetAt {}\n            instance(x: 410, y: 45) slice_ghi789 root.Std_k98ojb.List.Slice {}\n\n            char_a1b2c3 -> contains_abc123.contains\n            input_1a2b3c -> contains_abc123.input\n\n            contains_abc123.result -> index_of_def456.index\n            input_1a2b3c -> slice_ghi789.list\n            0 -> slice_ghi789.start\n            Std_k98ojb.List.Length(input_1a2b3c) -> slice_ghi789.end\n            slice_ghi789.output -> index_of_def456.list\n\n            index_of_def456.item -> bool_x7y8z9\n        } -> find_first_repeated_char_7g8h9i.predicate\n        Std_k98ojb.Strings.Characters(input_1a2b3c) -> find_first_repeated_char_7g8h9i.items\n        find_first_repeated_char_7g8h9i.item -> char_d4e5f6\n    }\n\n}\n\ninstance(x: -55, y: 529) first_repeated_char_0j1k2l root.main.first_repeated_char {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_abed4a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            in(x: -200, y: 100, name: \"seen\") property(List) seen_1a2b3c\n\n            list_chars -> contains_1088d5.input\n            char_9f6850 -> contains_1088d5.contains\n\n            contains_1088d5.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n\n            instance(x: -150, y: 50) add_4fgh6i root.Std_k98ojb.List.Add {}\n            char_9f6850 -> add_4fgh6i.item\n            seen_1a2b3c -> add_4fgh6i.list\n            add_4fgh6i.listWithItem -> seen_1a2b3c\n\n        } -> find_6d05b0.predicate\n        list_chars -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n\n        instance(x: -300, y: 50) characters_7jkl8m root.Std_k98ojb.Strings.Characters {}\n        input_abed4a -> characters_7jkl8m.input\n        characters_7jkl8m.characters -> list_chars\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_3c9d8a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_b4e2f6\n\n        instance(x: 0, y: 0) find_repeated_char_7b5e8a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1d9c3f\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8e4a2b\n\n            instance(x: 89, y: 29) characters_5f6d3a root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_9c7b1d root.Std_k98ojb.List.Contains {}\n\n            input_3c9d8a -> characters_5f6d3a.input\n            func() {\n                in(x: -113, y: 34, name: \"seen\") property(List) seen_2e4b7c\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_d9c8f1\n\n                instance(x: 89, y: 29) list_slice_a5b3d6 root.Std_k98ojb.List.Slice {}\n                instance(x: 310, y: 35) add_7e4b2c root.Std_k98ojb.List.Add {}\n\n                characters_5f6d3a.characters -> list_slice_a5b3d6.list\n                seen_2e4b7c -> list_slice_a5b3d6.start\n                -1 -> list_slice_a5b3d6.end\n\n                list_slice_a5b3d6.result -> contains_9c7b1d.list\n                char_1d9c3f -> add_7e4b2c.item\n                seen_2e4b7c -> add_7e4b2c.list\n\n                contains_9c7b1d.result -> bool_d9c8f1\n            } -> contains_9c7b1d.item\n            contains_9c7b1d.result -> bool_8e4a2b\n        } -> find_repeated_char_7b5e8a.predicate\n        characters_5f6d3a.characters -> find_repeated_char_7b5e8a.items\n        find_repeated_char_7b5e8a.item -> char_b4e2f6\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_abed4a\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_807ffd root.Std_k98ojb.List.Slice {}\n            list_807ffd.start -> 0\n            list_807ffd.end -> -1\n            char_9f6850 -> contains_1088d5.contains\n            string_abed4a -> contains_1088d5.input\n            contains_1088d5.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 150, y: -50) characters_bcd123 root.Std_k98ojb.Strings.Characters {}\n        string_abed4a -> characters_bcd123.input\n        characters_bcd123.characters -> list_807ffd.list\n        list_807ffd.output_list -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> list_filter_node.items\n        instance(x: 426, y: -423) filter_handler_node root.Std_k98ojb.Iteration.Handler {}\n        list_filter_node.handler -> filter_handler_node.instance\n        instance(x: 426, y: -518) handler_input_node root.Std_k98ojb.Number.Input {}\n        filter_handler_node.input_0 -> handler_input_node.number\n        instance(x: 426, y: -613) handler_output_node root.Std_k98ojb.Logic.NotEqual {}\n        handler_input_node.output -> handler_output_node.left\n        list_filter_node.items -> handler_output_node.right\n        instance(x: 426, y: -708) filter_output_node root.Std_k98ojb.List.Output {}\n        list_filter_node.output_list -> filter_output_node.list\n        instance(x: 426, y: -803) min_node root.Std_k98ojb.List.Min {}\n        filter_output_node.list -> min_node.list\n\n        instance(x: 426, y: -898) remove_min_node root.Std_k98ojb.Iteration.Filter {}\n        filter_output_node.list -> remove_min_node.items\n        instance(x: 426, y: -993) handler_input_2_node root.Std_k98ojb.Number.Input {}\n        min_node.min -> handler_input_2_node.number\n        instance(x: 426, y: -1088) handler_output_2_node root.Std_k98ojb.Logic.Equal {}\n        remove_min_node.handler -> handler_output_2_node.instance\n        handler_input_2_node.output -> handler_output_2_node.left\n        remove_min_node.items -> handler_output_2_node.right\n        instance(x: 426, y: -1183) filter_output_2_node root.Std_k98ojb.List.Output {}\n        remove_min_node.output_list -> filter_output_2_node.list\n\n        min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -898) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -453) handler_node root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 426, y: -603) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_filter_node.items\n        list_filter_node.output_list -> min_node.items\n\n        min_node.min -> second_min_ai\n        \n        handler_node.left -> min_node.min\n        handler_node.right -> list_filter_node.item\n        list_filter_node.handler -> handler_node\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.list -> slice_node.sorted_list\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        slice_node.sorted_list -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        list_slice_node.slice -> list_first_item_node.items\n\n        instance(x: 426, y: -519) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_instance root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n        instance(x: 426, y: -423) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        instance(x: 426, y: -540) number_at_index_node root.Std_k98ojb.List.GetAt {}\n        slice_node.slice -> number_at_index_node.list\n        instance(x: 639, y: -540) const_1_node root.Std_k98ojb.Math.Expression {}\n        const_1_node.expression = \"1\"\n        const_1_node.result -> number_at_index_node.index\n        number_at_index_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -453) handler_node root.Std_k98ojb.Logic.NotEqual {}\n        items_ai -> list_filter_node.items\n        func(doc: \"handler for filtering\") handler {\n            in(x: -426, y: -303, name: \"item\") property(Number) item_ai\n            in(x: 159, y: -303, name: \"index\") property(Number) index_ai\n            out(x: 426, y: -303, name: \"result\") property(Boolean) result_ai\n\n            instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n            items_ai -> min_node.items\n            min_node.min -> handler_node.left\n            item_ai -> handler_node.right\n            handler_node.result -> list_filter_node.output_list.item\n\n            in(x: -426, y: -453, name: \"item\") property(Number) item2_ai\n            out(x: 426, y: -453, name: \"result\") property(Boolean) result2_ai\n\n            instance(x: 426, y: -528) min_node2 root.Std_k98ojb.List.Min {}\n            list_filter_node.output_list -> min_node2.items\n            min_node2.min -> handler_node2.left\n            item2_ai -> handler_node2.right\n            handler_node2.result -> result2_ai\n        }\n        handler_node.handler -> handler\n\n        instance(x: 426, y: -603) first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_filter_node.output_list -> first_item_node.list\n        first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) slice_node Std_k98ojb.List.Slice {}\n        list_sort_node.list -> slice_node.list\n        instance(x: 426, y: -588) get_at_node Std_k98ojb.List.GetAt {}\n        slice_node.slice -> get_at_node.list\n        property(Number) index_1 = 1\n        index_1 -> get_at_node.index\n        get_at_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 426, y: -423) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        property(value: 1) index_start\n        property(value: -1) index_end\n        index_start -> slice_node.start\n        index_end -> slice_node.end\n\n        instance(x: 426, y: -519) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_node.slice -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 426, y: -393) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        number_1 -> list_slice_node.start\n        number_2 -> list_slice_node.end\n\n        instance(x: 426, y: -483) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.slice -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n\n        number_1 = 1\n        number_2 = 2\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 426, y: -453) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        instance(x: 426, y: -483) number_1 root.Std_k98ojb.Number { value: 1 }\n        number_1.value -> slice_node.start\n        instance(x: 426, y: -513) number_minus1 root.Std_k98ojb.Number { value: -1 }\n        number_minus1.value -> slice_node.end\n\n        slice_node.slice -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -453) lambda_node root.Std_k98ojb.Lambda {}\n        instance(x: 426, y: -603) list_sort_node root.Std_k98ojb.List.Sort {}\n        instance(x: 426, y: -753) list_getat_node root.Std_k98ojb.List.GetAt {}\n\n        items_ai -> list_filter_node.items\n        lambda_node -> list_filter_node.handler\n\n        lambda_node.func {\n            in(x: -426, y: -248, name: \"it\") property(Number) it_ai\n            out(x: 159, y: -219, name: \"\") property(Boolean) output_boolean_ai\n\n            instance(x: 426, y: -303) math_gt_node root.Std_k98ojb.Math.GreaterThan {}\n            instance(x: 426, y: -453) logic_not_node root.Std_k98ojb.Logic.Not {}\n\n            it_ai -> math_gt_node.left\n            math_min_node.min -> math_gt_node.right\n\n            math_gt_node.result -> logic_not_node.input\n            logic_not_node.output -> output_boolean_ai\n        }\n\n        list_filter_node.output_list -> list_sort_node.list\n        list_sort_node.sorted -> list_getat_node.list\n\n        instance(x: 426, y: -903) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> math_min_node.first\n\n        list_getat_node.index = 1\n        list_getat_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Returns true if the input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3c5a8d\n\n        instance(x: 133, y: -131) intersection_4b6f1e root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_4b6f1e.left\n        list2_c62075 -> intersection_4b6f1e.right\n\n        instance(x: 133, y: -131) not_empty_3a8d7c root.Std_k98ojb.List.NotEmpty {}\n        intersection_4b6f1e.intersect -> not_empty_3a8d7c.list\n        not_empty_3a8d7c.isEmpty -> has_common_element_3c5a8d\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_9e5d3a\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty_7e5d3a := instance(x: 133, y: -131) NotEmpty_e4c9a6 root.Std_k98ojb.List.NotEmpty {}\n        intersection_201051.intersect -> not_empty_7e5d3a.list\n        not_empty_7e5d3a.isEmpty -> has_common_element_9e5d3a\n   }\n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7d4e5c\n\n        instance(x: 133, y: -131) intersection_ea3f9b root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_ea3f9b.left\n        list2_c62075 -> intersection_ea3f9b.right\n        intersection_ea3f9b.intersect -> has_common_element_7d4e5c\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_1f0d8a root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_f3e8c5\n\n        instance(x: 133, y: -131) intersection_1b6a7f root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_1b6a7f.left\n        list2_c62075 -> intersection_1b6a7f.right\n\n        instance(x: 0, y: -55) not_5d9e3c root.Std_k98ojb.Logic.Not {}\n        intersection_1b6a7f.intersect -> not_5d9e3c.input\n        instance(x: 0, y: -85) is_empty_8b2d4a root.Std_k98ojb.List.IsEmpty {}\n        intersection_1b6a7f.intersect -> is_empty_8b2d4a.list\n        is_empty_8b2d4a.isEmpty -> not_5d9e3c.input\n\n        not_5d9e3c.output -> result_f3e8c5\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_d9c5e7\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> has_common_element_d9c5e7\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_5e9a6d\n\n        instance(x: 133, y: -131) intersection_a8b1c0 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_a8b1c0.left\n        list2_c62075 -> intersection_a8b1c0.right\n        instance(x: 132, y: -160) not_b5a6d4 root.Std_k98ojb.Logic.Not {}\n        intersection_a8b1c0.intersect -> not_b5a6d4.input\n        not_b5a6d4.output -> has_common_element_5e9a6d\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3a5d7e\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> has_common_element_3a5d7e.NotEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_e5a8d4\n\n        instance(x: 133, y: -131) intersection_1f9b7e root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_1f9b7e.left\n        list2_c62075 -> intersection_1f9b7e.right\n        instance(x: 0, y: -50) not_empty_5c6a8d root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f9b7e.intersect -> not_empty_5c6a8d.list\n        not_empty_5c6a8d.isEmpty -> has_common_element_e5a8d4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96c6 -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty\n\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: -213, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -208, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_5e6b7c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5e6b7c.first\n            _index_769593 -> sub_5e6b7c.second\n            sub_5e6b7c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_5e6b7c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5e6b7c.first\n            _index_769593 -> sub_5e6b7c.second\n            sub_5e6b7c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        contains_32727d.list -> map_c73e3b.items\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_f3e4a6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_1a2b3c\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_result_4d5e6f\n\n        instance(x: 847, y: -207) sort_bcd123 root.Std_k98ojb.List.Sort {}\n        instance(x: 1058, y: -203) filter_consecutive_efg456 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_1\n            in(x: -23, y: 79, name=\"next\") property(Number) next_2\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) is_consecutive\n\n            instance(x: 226, y: 56) sub_hij789 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_abc012 root.Std_k98ojb.Logic.Equal {}\n\n            sub_hij789.first -> current_1\n            next_2 -> sub_hij789.second\n            sub_hij789.result -> equal_abc012.left\n            1 -> equal_abc012.right\n            equal_abc012.result -> is_consecutive\n        } -> filter_consecutive_efg456.handler\n\n        sort_bcd123.sorted_list -> filter_consecutive_efg456.items\n        func() {\n            out(x: 1269, y: -209, name: \"output\") property(Bool) has_consecutives\n\n            instance(x: 1058, y: -203) not_789abc root.Std_k98ojb.Logic.Not {}\n\n            filter_consecutive_efg456.output_list -> not_789abc.input\n            not_789abc.result -> has_consecutives\n        } -> output_result_4d5e6f\n\n        input_list_1a2b3c -> sort_bcd123.list\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) filter_consecutive_numbers_32727d root.Std_k98ojb.Iteration.Filter {}\n        \n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n\n            current_81298e -> sub_c76d2b.first\n            list_07cae4[_index_769593 + 1] -> sub_c76d2b.second\n            sub_c76d2b.result -> equal_7836b4.left\n            1 -> equal_7836b4.right\n            equal_7836b4.result -> output_efbc78\n        } -> filter_consecutive_numbers_32727d.handler\n\n        list_07cae4 -> filter_consecutive_numbers_32727d.items\n        filter_consecutive_numbers_32727d.output_list.length > 0 -> output_8d07dc\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_7f2c0a root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_7f2c0a.first\n            list_07cae4[_index_769593 + 1] -> sub_7f2c0a.second\n            sub_7f2c0a.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: 8) property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_d0a1d6 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_c5e9c2 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_d0a1d6.first\n            list_07cae4[list.Length() - 1] -> sub_d0a1d6.second\n            sub_d0a1d6.result -> notequal_c5e9c2.left\n            1 -> notequal_c5e9c2.right\n            notequal_c5e9c2.result -> bool_4524be\n        } -> map_c73e3b.handler[list.Length() - 1]\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_ba7e3c root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 49, y: 79, name: \"_prev\") property(Number) _prev_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_c76d2b.first\n            _prev_170471 -> sub_c76d2b.second\n            sub_c76d2b.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) equal_ad7b2a root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_ad7b2a.left\n            1 -> equal_ad7b2a.right\n            equal_ad7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        instance(x: -303, y: -205, name: \"only true differences\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        map_c73e3b.output_list -> filter_c91965.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) notequal_c76d2b root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> notequal_c76d2b.left\n            false -> notequal_c76d2b.right\n            notequal_c76d2b.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) input_list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) sort_b3f7a5 root.Std_k98ojb.List.Sort {}\n        instance(x: 1058, y: -203) zip_c4e2a1 root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 1269, y: -209) map_6d8c0f root.Std_k98ojb.Iteration.Map {}\n\n        sort_b3f7a5.list -> zip_c4e2a1.left\n        input_list_07cae4 -> sort_b3f7a5.list\n\n        func() {\n            in(x: -30, y: -25, name: \"left\") property(Number) left_170471\n            in(x: 73, y: -25, name: \"right\") property(Number) right_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_d1e3b2 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_9f8c4d root.Std_k98ojb.Logic.Equal {}\n\n            left_170471 -> sub_d1e3b2.first\n            right_769593 -> sub_d1e3b2.second\n            1 -> sub_d1e3b2.result -> equal_9f8c4d.left\n            equal_9f8c4d.right -> 0\n            equal_9f8c4d.result -> output_efbc78\n        } -> zip_c4e2a1.handler\n\n        instance(x: 246, y: -209) any_true_b7f3c6 root.Std_k98ojb.Iteration.Filter {}\n        map_6d8c0f.output_list -> any_true_b7f3c6.items\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            current_81298e -> bool_4524be\n        } -> any_true_b7f3c6.handler\n\n        zip_c4e2a1.zipped -> map_6d8c0f.items\n        any_true_b7f3c6.output_list -> output_8d07dc\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) has_consecutive_numbers_logic root.Std_k98ojb.Iteration.Filter {}\n        \n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_number\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) next_item root.Std_k98ojb.List.GetAt {}\n            instance(x: 463, y: 51) sub_7836b4 root.Std_k98ojb.Math.Sub {}\n\n            _index -> next_item.index\n            list_07cae4 -> next_item.list\n\n            current_number -> sub_7836b4.first\n            next_item.item -> sub_7836b4.second\n            1 -> sub_7836b4.result\n            sub_7836b4.result -> output_efbc78\n        } -> has_consecutive_numbers_logic.handler\n\n        list_07cae4 -> has_consecutive_numbers_logic.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_number\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_number -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> has_consecutive_numbers_logic.handler\n\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) current_bool\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) length root.Std_k98ojb.List.Length {}\n            instance(x: 463, y: 51) lt_7836b4 root.Std_k98ojb.Math.LessThan {}\n\n            _index -> lt_7836b4.first\n            length.result -> lt_7836b4.second\n            lt_7836b4.result -> output_efbc78\n        } -> not_75283f.handler\n\n        has_consecutive_numbers_logic.output_list -> not_75283f.input\n        not_75283f.result -> output_8d07dc\n    }\n\n    instance(x: -293, y: -5) check_consecutive root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to differences\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_prev\") property(Number) _prev_f8d5f3\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_efbc78\n\n            instance(x: 226, y: 56) sub_4e7a6b root.Std_k98ojb.Math.Sub {}\n            current_81298e -> sub_4e7a6b.first\n            _prev_f8d5f3 -> sub_4e7a6b.second\n            sub_4e7a6b.result -> output_efbc78\n        } -> map_c73e3b.handler\n\n        func() {\n            in(x: -192, y: 15, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 1, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 10) equal_7c5a3f root.Std_k98ojb.Logic.Equal {}\n            instance(x: 285, y: 8) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> equal_7c5a3f.left\n            1 -> equal_7c5a3f.right\n            equal_7c5a3f.result -> notequal_cb8a55.input\n            not_75283f.result -> bool_4524be\n        } -> contains_32727d.handler\n\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n\n        func() {\n            in(x: -192, y: 79, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 91, name: \"_prev\") property(Number) _prev_f8d5f3\n\n            instance(x: 74, y: 86) equal_7c5a3f root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> equal_7c5a3f.left\n            _prev_f8d5f3 -> equal_7c5a3f.right\n\n            instance(x: 285, y: 84) if_6c1b2d root.Std_k98ojb.Logic.If {}\n            current_81298e -> if_6c1b2d.condition\n            equal_7c5a3f.result -> if_6c1b2d.input\n\n            instance(x: 494, y: 90) _prev_f8d5f3 root.Std_k98ojb.List.Contains {}\n            current_81298e -> _prev_f8d5f3.item\n            list_07cae4 -> _prev_f8d5f3.list\n\n            if_6c1b2d.output_true -> output_efbc78\n            _prev_f8d5f3.is_contained -> if_6c1b2d.input_false\n        } -> map_c73e3b.handler._index\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -25, name: \"_index\") property(Number) _index_769593\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) add_c76d2b root.Std_k98ojb.Math.Add {}\n            instance(x: 285, y: -25) getat_7836b4 root.Std_k98ojb.List.GetAt {}\n            current_81298e -> add_c76d2b.first\n            1 -> add_c76d2b.second\n            list_07cae4 -> getat_7836b4.list\n            _index_769593 -> getat_7836b4.index\n            bool_4524be <- Logic.Equal(left: getat_7836b4.item, right: add_c76d2b.result)\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_e9a6e4 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> sub_e9a6e4.first\n            1 -> sub_e9a6e4.second\n            list_07cae4[_index_769593 - 1] -> sub_e9a6e4.second\n            current_81298e -> sub_e9a6e4.first\n            sub_e9a6e4.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_c1b3a9 root.main.consecutive {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"superList\") property(List) superList_ec88cd\n        in(x: -485, y: 155, name: \"subList\") property(List) subList_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == subListLength\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        superList_ec88cd -> for_d26972.items\n        for_d26972.item -> subList_check.expression\n        for_d26972.index -> getter_b280eb.x\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        subList_check.value -> ifexpression_875761.gen_2\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        list_length.expression: \"subList.length\"\n        list_length.value -> setter_9d4f1c.new_value\n        execute_90aaec -> list_length.execute\n        list_length.continue -> setter_38e107.execute\n        subList_check.expression: \"superList[index:index+subListLength] == subList\"\n        for_d26972.item -> setter_38e107.new_value\n        superList_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_1a2b3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == main_list_length || sublist_index >= sublist_length\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        instance(x: 800, y: -100) ifexpression_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"main_item == sublist[sublist_index]\"\n        }\n        instance(x: 600, y: -200) getat_sublist root.Std_k98ojb.List.GetAt {}\n        getter(x: 400, y: -160, name: \"getter_2\") getter_2 = sublist_index\n        setter(x: 500, y: -300, name: \"setter_3\") setter_3 = sublist_index\n\n        ifexpression_2.then -> setter_3.execute\n        for_d26972.item -> getat_sublist.list\n        getter_2.value -> getat_sublist.index\n        getat_sublist.itemAtIndex -> ifexpression_2.gen_1\n        main_list_ec88cd -> getat_sublist.list\n        sublist_1a2b3c -> getat_sublist.list\n        for_d26972.item -> ifexpression_2.gen_0\n\n        ifexpression_2.then -> setter_3.execute\n        ifexpression_2.else -> setter_9d4f1c.next\n\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        list_length = List.Length(main_list_ec88cd)\n        sublist_length = List.Length(sublist_1a2b3c)\n        0 -> getat_sublist.index\n        0 -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9f4d2b\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || main_list[index] == sublist[current_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = current_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = current_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_9f4d2b\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> for_d26972_sublist.items\n        for_d26972.item -> ifexpression_875761.gen_0\n        for_d26972.index -> ifexpression_875761.gen_2\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_5bbcd7 -> getat_ce2a48_sublist.list\n        getter_b280eb.value -> getat_ce2a48_sublist.index\n        getat_ce2a48_sublist.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 321, y: -20) for_d26972_sublist root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb_sublist\") getter_b280eb_sublist = index_sublist\n        setter(x: 679, y: -313, name: \"setter_9d4f1c_sublist\") setter_9d4f1c_sublist = current_index_sublist\n        instance(x: -275, y: -35) getat_ce2a48_sublist root.Std_k98ojb.List.GetAt {}\n        for_d26972_sublist.item -> getter_b280eb_sublist.value\n        for_d26972_sublist.index -> setter_9d4f1c_sublist.new_value\n        sublist_5bbcd7 -> for_d26972_sublist.items\n        for_d26972_sublist.onItem -> getat_ce2a48_sublist.execute\n        for_d26972_sublist.done -> continue_a96db6\n        0 -> getat_ce2a48_sublist.index\n        main_list_ec88cd -> getat_ce2a48.list\n        setter_9d4f1c.new_value -> getat_ce2a48.index\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 165, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_for.items\n        sublist_for.item -> sublist_ifexpression.gen_2\n        sublist_for.index -> sublist_ifexpression.gen_0\n        getter_b280eb.value -> sublist_ifexpression.gen_1\n        sublist_for.onItem -> sublist_ifexpression.execute\n        sublist_for.done -> continue_a96db6\n        sublist_for.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sublist_ifexpression.value -> is_sublist_output\n        sublist_ifexpression.then -> continue_a96db6\n        main_for.onItem -> sublist_reset.trigger\n        main_for.done -> continue_a96db6\n        main_for.item -> getat_main.list\n        0 -> getat_main.index\n        getat_main.itemAtIndex -> sublist_index.new_value\n        sublist_index.continue -> sublist_for.reset\n        sublist_ifexpression.else -> is_sublist_output.set_false\n        sublist_reset.trigger -> sublist_for.next\n        setter_38e107.continue -> main_for.reset\n        setter_9d4f1c.continue -> main_for.next\n\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {\n            name: \"main_for\"\n        }\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n            name: \"sublist_ifexpression\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {\n            name: \"sublist_for\"\n        }\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {\n            name: \"getat_main\"\n        }\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == sublist_index.value\"\n            name: \"sublist_reset\"\n        }\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {\n            name: \"getat_sublist\"\n        }\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_b280eb = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {\n            name: \"sublist_check\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") sublist_index = index\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") sublist_getat_ce2a48 = previous\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_for.items\n        sublist_for.item -> sublist_ifexpression.gen_2\n        sublist_for.index -> sublist_ifexpression.gen_0\n        getter_b280eb.value -> sublist_ifexpression.gen_1\n        sublist_for.onItem -> sublist_ifexpression.execute\n        sublist_for.done -> continue_a96db6\n        sublist_for.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sublist_ifexpression.value -> is_sublist_output\n        sublist_ifexpression.then -> continue_a96db6\n        main_for.onItem -> sublist_reset.trigger\n        main_for.done -> continue_a96db6\n        main_for.item -> getat_main.list\n        0 -> getat_main.index\n        getat_main.itemAtIndex -> sublist_index.new_value\n        sublist_index.continue -> sublist_for.reset\n        sublist_ifexpression.else -> is_sublist_output.set_false\n        sublist_reset.trigger -> sublist_for.next\n        setter_38e107.continue -> main_for.reset\n        setter_9d4f1c.continue -> main_for.next\n\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_d26972\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1 || main_list_item == sublist[sublist_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_d26972\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        instance(x: 752, y: -150) ifexpression_2f9a5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == sublist_length\"\n        }\n        getter(x: 334, y: -35, name: \"getter_b280eb\") getter_4c3d7e = sublist_index\n        setter(x: 679, y: -265, name: \"setter_9d4f1c\") setter_6b8a2e = sublist_index\n\n        ifexpression_2f9a5e.then -> continue_a96db6\n        getter_4c3d7e.value -> ifexpression_2f9a5e.gen_0\n        for_d26972.done -> ifexpression_2f9a5e.execute\n\n        instance(x: -275, y: 130) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        main_list_ec88cd -> getat_ce2a48.list\n        sublist_length -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        ifexpression_875761.then -> setter_9d4f1c.new_value\n        sublist_5bbcd7 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_b280eb.value\n        ifexpression_875761.then -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"superlist\") property(List) superlist_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || superlist[index] == sublist[previous_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        superlist_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        superlist_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sublist_ec88cd -> getat_sublist_ce2a48.list\n        getter_b280eb.value -> getat_sublist_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -275, y: 130) getat_sublist_ce2a48 root.Std_k98ojb.List.GetAt {}\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == -1\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        sublist_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_2\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        getat_ce2a48.itemAtIndex == for_d26972.item -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        0 -> getter_b280eb.property\n        setter_38e107.continue -> ifexpression_875761.execute\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_b280eb\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_previous\") getter_previous = previous\n        setter(x: 679, y: -313, name: \"setter_previous\") setter_previous = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_previous\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_b280eb\n        ifexpression_875761.then -> setter_previous.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_previous.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_previous.new_value\n        sublist_5bbcd7 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_previous.continue -> for_d26972.next\n\n        instance(x: 752, y: -100) ifexpression_875761_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_sublist\") getter_sublist = sublist\n        setter(x: 679, y: -313, name: \"setter_sublist\") setter_sublist = sublist\n        instance(x: 321, y: -20) for_d26972_2 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_sublist\") setter_38e107_2 = sublist\n        instance(x: -275, y: -35) getat_ce2a48_2 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761_2.else -> continue_a96db6\n        ifexpression_875761_2.value -> output_b280eb\n        ifexpression_875761_2.then -> setter_sublist.execute\n        sublist_5bbcd7 -> for_d26972_2.items\n        for_d26972_2.item -> ifexpression_875761_2.gen_2\n        for_d26972_2.index -> ifexpression_875761_2.gen_0\n        getter_sublist.value -> ifexpression_875761_2.gen_1\n        for_d26972_2.onItem -> ifexpression_875761_2.execute\n        for_d26972_2.done -> continue_a96db6\n        for_d26972_2.item -> setter_sublist.new_value\n        main_list_ec88cd -> getat_ce2a48_2.list\n        0 -> getat_ce2a48_2.index\n        getat_ce2a48_2.itemAtIndex -> setter_38e107_2.new_value\n        execute_90aaec -> setter_38e107_2.execute\n        setter_38e107_2.continue -> for_d26972_2.reset\n        setter_sublist.continue -> for_d26972_2.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_f3b9e2\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || main_list[index:index+len(sublist)] == sublist\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_f3b9e2\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n}\n\ninstance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_b280eb\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || main_list[index] == sublist[current_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = current_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = current_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = current_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_b280eb\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n\n        sublist_5bbcd7 -> getat_ce2a48.list\n        current_index -> getat_ce2a48.index\n\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.For {}\n        numbers_ai -> loop_node.items\n        loop_node.reset -> reset_trigger\n        instance(x: 426, y: -453) trigger_reset_node root.Std_k98ojb.Trigger.Once {}\n        trigger_reset_node.trigger -> reset_trigger\n\n        instance(x: 426, y: -603) index_node root.Std_k98ojb.Number.Increment {\n            start: 1\n        }\n        loop_node.index -> index_node.value\n        index_node.increment -> next_index_trigger\n        instance(x: 426, y: -753) trigger_next_index_node root.Std_k98ojb.Trigger.Once {}\n        trigger_next_index_node.trigger -> next_index_trigger\n\n        instance(x: 426, y: -903) check_missing_node root.main.check_missing {}\n        loop_node.item -> check_missing_node.current\n        index_node.value -> check_missing_node.expected\n        check_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"checks if the current number is missing.\") check_missing {\n        in(x: -426, y: -248, name: \"current\") property(Number) current_ai\n        in(x: -426, y: -378, name: \"expected\") property(Number) expected_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -453) check_missing_logic_node root.Std_k98ojb.Logic.NotEqual {}\n        current_ai -> check_missing_logic_node.left\n        expected_ai -> check_missing_logic_node.right\n        check_missing_logic_node.value -> is_missing_trigger\n        instance(x: 426, y: -603) trigger_is_missing_node root.Std_k98ojb.Trigger.Once {}\n        trigger_is_missing_node.trigger -> is_missing_trigger\n\n        instance(x: 426, y: -753) missing_number_node root.Std_k98ojb.Number.Value {\n            value: expected_ai\n        }\n        missing_number_node.value -> missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.Filter {}\n        numbers_ai -> loop_node.items\n\n        instance(x: 426, y: -453) condition_node root.Std_k98ojb.Std.If {}\n        loop_node.item -> condition_node.input\n        condition_node.then -> check_missing.trigger\n\n        instance(x: 426, y: -579) check_missing {\n            in(x: -426, y: -501, name: \"current\") property(Number) current_ai\n            in(x: -426, y: -573, name: \"index\") property(Number) index_ai\n            out(x: 159, y: -546, name: \"missing_number\") property(Number) missing_number_ai\n\n            instance(x: 426, y: -654) condition_node root.Std_k98ojb.Math.Sub {}\n            loop_node.index -> condition_node.first\n            current_ai -> condition_node.second\n            condition_node.result -> check_missing.diff\n\n            instance(x: 426, y: -780) if_diff_not_one {\n                in(x: -426, y: -702, name: \"diff\") property(Number) diff_ai\n                out(x: 159, y: -675, name: \"missing_number\") property(Number) missing_number_ai\n\n                instance(x: 426, y: -855) condition_node root.Std_k98ojb.Math.NotEqual {}\n                diff_ai -> condition_node.left\n                number(1) -> condition_node.right\n                condition_node.value -> if_diff_not_one.trigger\n            }\n            check_missing.diff -> if_diff_not_one.diff\n\n            instance(x: 426, y: -981) return_current {\n                in(x: -426, y: -903, name: \"current\") property(Number) current_ai\n                out(x: 159, y: -876, name: \"missing_number\") property(Number) missing_number_ai\n\n                current_ai -> return_current.missing_number\n            }\n            if_diff_not_one.missing_number -> return_current.current\n            return_current.missing_number -> check_missing.missing_number\n        }\n\n        instance(x: 426, y: -1107) map_node root.Std_k98ojb.Iteration.Map {}\n        loop_node.item -> map_node.items\n\n        instance(x: 426, y: -1233) handler {\n            in(x: -426, y: -1155, name: \"item\") property(Number) item_ai\n            out(x: 159, y: -1128, name: \"output\") property(Number) output_ai\n\n            item_ai -> handler.item\n            handler.output -> map_node.handler_output\n        }\n        map_node.handler <- handler\n\n        instance(x: 426, y: -1365) find_first_missing {\n            in(x: -426, y: -1257, name: \"mapped\") property(List) mapped_ai\n            out(x: 159, y: -1239, name: \"missing_number\") property(Number) missing_number_ai\n\n            instance(x: 426, y: -1404) find_node root.Std_k98ojb.Iteration.Find {}\n            mapped_ai -> find_node.items\n\n            instance(x: 426, y: -1530) predicate {\n                in(x: -426, y: -1452, name: \"item\") property(Number) item_ai\n                out(x: 159, y: -1425, name: \"value\") property(Bool) value_ai\n\n                instance(x: 426, y: -1578) condition_node root.Std_k98ojb.Math.NotEqual {}\n                number(1) -> condition_node.left\n                item_ai -> condition_node.right\n                condition_node.value -> predicate.value\n            }\n            find_node.predicate <- predicate\n\n            find_node.item -> find_first_missing.missing_number\n        }\n        map_node.output_list -> find_first_missing.mapped\n\n        instance(x: 426, y: -1662) default_missing {\n            out(x: 159, y: -1635, name: \"missing_number\") property(Number) missing_number_ai\n\n            number(1) -> default_missing.missing_number\n        }\n\n        instance(x: 426, y: -1794) final_condition_node root.Std_k98ojb.Std.If {}\n        find_first_missing.missing_number -> final_condition_node.input\n        final_condition_node.then -> default_missing.trigger\n        final_condition_node.else -> find_first_missing.trigger\n\n        default_missing.missing_number -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.Std_k98ojb.Iteration.Map {}\n        find_smallest_missing_node.items -> numbers_ai\n        find_smallest_missing_node.handler -> handler_function\n        find_smissing_node.output_list -> check_missing_node.input_list\n\n        instance(x: 426, y: -423) check_missing_node root.Std_k98ojb.Iteration.Find {}\n        check_missing_node.predicate -> missing_predicate_function\n        check_missing_node.items -> find_smallest_missing_node.output_list\n        check_missing_node.item -> missing_number_ai\n    }\n\n    func(doc: \"handler function for map iteration.\") handler_function {\n        in(x: -426, y: -248, name: \"current\") property(Number) current_ai\n        in(x: -426, y: -303, name: \"index\") property(Number) index_ai\n        out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 426, y: -378) math_expression_node root.Std_k98ojb.Math.Expression {}\n        math_expression_node.expression -> \"current + 1\"\n        current_ai -> math_expression_node.current\n        index_ai -> math_expression_node.index\n        math_expression_node.result -> result_ai\n    }\n\n    func(doc: \"predicate function for finding missing number.\") missing_predicate_function {\n        in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n        in(x: -426, y: -303, name: \"index\") property(Number) index_ai\n        out(x: 159, y: -219, name: \"result\") property(Bool) result_ai\n\n        instance(x: 426, y: -378) math_greater_than_node root.Std_k98ojb.Math.GreaterThan {}\n        item_ai -> math_greater_than_node.left\n        index_ai -> math_greater_than_node.right\n        math_greater_than_node.result -> result_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -403) if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        for_node.index -> if_node.input\n        for_node.item -> if_node.expression.a\n\n        instance(x: 426, y: -503) math_sub_node root.Std_k98ojb.Math.Sub {}\n        instance(x: 426, y: -603) math_add_node root.Std_k98ojb.Math.Add {}\n\n        for_node.index -> math_sub_node.first\n        for_node.item -> math_sub_node.second\n\n        if_node.expression.b -> math_add_node.first\n        math_sub_node.result -> math_add_node.second\n\n        if_node.else_ -> missing_number_ai\n        if_node.then_ -> for_node.next\n\n        instance(x: 426, y: -703) list_contains_node root.Std_k98ojb.List.Contains {}\n        instance(x: 426, y: -803) list_generate_range_node root.Std_k98ojb.List.GenerateRange {}\n\n        numbers_ai -> list_contains_node.list\n        math_add_node.result -> list_contains_node.item\n\n        list_generate_range_node.from -> for_node.reset\n        list_generate_range_node.to -> math_add_node.result\n\n        list_contains_node.contains -> if_node.input\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing root.main.find_smallest_missing {}\n        numbers_ai -> find_smallest_missing.numbers\n        find_smallest_missing.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number)\n\n        instance(x: 426, y: -303) loop Std_k98ojb.Std.For {}\n        instance(x: 678, y: -303) if_missing Std_k98ojb.Std.If {}\n\n        numbers_ai -> loop.items\n        loop.trigger -> loop.reset\n\n        loop.on_item -> if_missing.input\n        loop.index -> if_missing.expression.a\n        loop.item -> if_missing.expression.b\n\n        instance(x: 930, y: -303) math_expr Std_k98ojb.Math.Expression {}\n        math_expr.expression = \"a + 1 != b\"\n\n        if_missing.then -> math_expr.first\n        loop.item -> math_expr.second\n\n        instance(x: 1176, y: -303) return_missing Std_k98ojb.Std.If {}\n        math_expr.result -> return_missing.input\n        loop.index -> return_missing.expression.a\n        loop.item -> return_missing.expression.b\n\n        return_missing.then -> return_missing.output_number\n        loop.index -> return_missing.output_number\n\n        instance(x: 1332, y: -303) final_if Std_k98ojb.Std.If {}\n        loop.done -> final_if.input\n        if_missing.else -> final_if.then\n        numbers_ai.Length() -> final_if.expression.a\n        Math.Add(a: 1, second: final_if.expression.a) -> final_if.expression.b\n\n        final_if.then -> final_if.output_number\n        final_if.expression.b -> final_if.output_number\n\n        instance(x: 1488, y: -303) output_missing Std_k98ojb.Std.If {}\n        return_missing.output_number -> output_missing.input\n        final_if.output_number -> output_missing.else\n\n        output_missing.then -> missing_number_ai\n        output_missing.else -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_list_ai -> find_missing_node.sorted_list\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.Filter {}\n        sorted_list_ai -> loop_node.items\n\n        instance(x: 438, y: -366) index_check_node root.main.index_check {}\n        loop_node.index -> index_check_node.index\n        loop_node.item -> index_check_node.current_item\n        index_check_node.is_missing -> loop_node.condition\n\n        instance(x: 438, y: -426) first_missing_node root.Std_k98ojb.Iteration.Find {}\n        loop_node.output_list -> first_missing_node.items\n        first_missing_node.item -> missing_number_ai\n    }\n\n    func(doc: \"checks if the current item is not equal to its expected index value.\") index_check {\n        in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n        in(x: -426, y: -303, name: \"current_item\") property(Number) current_item_ai\n        out(x: 159, y: -219, name: \"is_missing\") property(Bool) is_missing_ai\n\n        instance(x: 426, y: -378) check_node root.Std_k98ojb.Logic.NotEqual {}\n        index_ai -> check_node.left\n        current_item_ai -> check_node.right\n        check_node.result -> is_missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) iterate_node root.main.iterate {}\n        numbers_ai -> iterate_node.numbers\n\n        instance(x: 426, y: -483) check_missing_node root.main.check_missing {}\n        iterate_node.index -> check_missing_node.index\n        iterate_node.item -> check_missing_node.current_number\n        iterate_node.hasNext -> check_missing_node.has_next\n        check_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"iterates over the list with index.\") iterate {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"index\") property(Number) index_ai\n        out(x: 399, y: -219, name: \"item\") property(Number) item_ai\n        out(x: 639, y: -219, name: \"hasNext\") property(Boolean) hasNext_ai\n\n        instance(x: 426, y: -303) std_for_node root.Std_k98ojb.For {}\n        numbers_ai -> std_for_node.items\n        std_for_node.trigger -> std_for_node.reset\n\n        std_for_node.index -> index_ai\n        std_for_node.item -> item_ai\n        std_for_node.hasNext -> hasNext_ai\n    }\n\n    func(doc: \"checks for the smallest missing number.\") check_missing {\n        in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n        in(x: -426, y: -378, name: \"current_number\") property(Number) current_number_ai\n        in(x: -426, y: -508, name: \"has_next\") property(Boolean) has_next_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) std_if_node root.Std_k98ojb.If {}\n        index_ai -> std_if_node.input\n        std_if_node.then -> std_if_node.else_\n\n        instance(x: 426, y: -483) return_one_node root.main.return_one {}\n        std_if_node.then -> return_one_node.trigger\n\n        instance(x: 426, y: -663) check_next_node root.main.check_next {}\n        std_if_node.else_ -> check_next_node.trigger\n        current_number_ai -> check_next_node.current_number\n        has_next_ai -> check_next_node.has_next\n\n        instance(x: 426, y: -843) calculate_missing_node root.main.calculate_missing {}\n        check_next_node.missing -> calculate_missing_node.expected\n        current_number_ai -> calculate_missing_node.current_number\n\n        return_one_node.result -> missing_ai\n        calculate_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"returns 1 as the smallest missing number.\") return_one {\n        in(x: -426, y: -248, name: \"trigger\") property(Boolean) trigger_ai\n        out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 426, y: -303) std_if_expression_node root.Std_k98ojb.IfExpression {}\n        \"true\" -> std_if_expression_node.expression\n        1 -> std_if_expression_node.then_value\n        null -> std_if_expression_node.else_value\n\n        std_if_expression_node.value -> result_ai\n    }\n\n    func(doc: \"checks the next number for missing.\") check_next {\n        in(x: -426, y: -248, name: \"current_number\") property(Number) current_number_ai\n        in(x: -426, y: -378, name: \"has_next\") property(Boolean) has_next_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) std_if_node root.Std_k98ojb.If {}\n        has_next_ai -> std_if_node.input\n        std_if_node.then -> std_if_node.else_\n\n        instance(x: 426, y: -483) calculate_missing_node root.main.calculate_missing {}\n        current_number_ai -> calculate_missing_node.current_number\n        std_if_node.then -> calculate_missing_node.trigger\n\n        instance(x: 426, y: -663) return_null_node root.main.return_null {}\n        std_if_node.else_ -> return_null_node.trigger\n\n        calculate_missing_node.missing -> missing_ai\n        return_null_node.result -> missing_ai\n    }\n\n    func(doc: \"calculates the missing number.\") calculate_missing {\n        in(x: -426, y: -248, name: \"expected\") property(Number) expected_ai\n        in(x: -426, y: -378, name: \"current_number\") property(Number) current_number_ai\n        in(x: -426, y: -508, name: \"trigger\") property(Boolean) trigger_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) std_if_node root.Std_k98ojb.If {}\n        trigger_ai -> std_if_node.input\n        std_if_node.then -> std_if_node.else_\n\n        instance(x: 426, y: -483) return_expected_node root.main.return_expected {}\n        std_if_node.then -> return_expected_node.trigger\n\n        instance(x: 426, y: -663) return_null_node root.main.return_null {}\n        std_if_node.else_ -> return_null_node.trigger\n\n        expected_ai -> return_expected_node.result\n        return_expected_node.result -> missing_ai\n        return_null_node.result -> missing_ai\n    }\n\n    func(doc: \"returns null.\") return_null {\n        in(x: -426, y: -248, name: \"trigger\") property(Boolean) trigger_ai\n        out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 426, y: -303) std_if_expression_node root.Std_k98ojb.IfExpression {}\n        \"true\" -> std_if_expression_node.expression\n        null -> std_if_expression_node.then_value\n        null -> std_if_expression_node.else_value\n\n        std_if_expression_node.value -> result_ai\n    }\n\n    func(doc: \"returns the expected number.\") return_expected {\n        in(x: -426, y: -248, name: \"trigger\") property(Boolean) trigger_ai\n        out(x: 159, y: -219, name: \"result\") property(Number) result_ai\n\n        instance(x: 426, y: -303) std_if_expression_node root.Std_k98ojb.IfExpression {}\n        \"true\" -> std_if_expression_node.expression\n        in(x: -426, y: -378, name: \"expected\") property(Number) expected_ai\n        null -> std_if_expression_node.else_value\n\n        std_if_expression_node.value -> result_ai\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n\n        instance(x: 426, y: -423) predicate_func {\n            in(x: -426, y: -248, name: \"it\") property(Number) it_ai\n            out(x: 159, y: -219, name: \"result\") property(Bool) result_ai\n\n            instance(x: 426, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n            iteration_find_node.index -> math_sub_node.first\n            it_ai -> math_sub_node.second\n            math_sub_node.result -> predicate_func.sub_result\n\n            instance(x: 426, y: -423) logic_gt_node root.Std_k98ojb.Logic.GreaterThan {}\n            predicate_func.sub_result -> logic_gt_node.left\n            number_one -> logic_gt_node.right\n            logic_gt_node.result -> result_ai\n        }\n        \n        iteration_find_node.predicate <- predicate_func\n        iteration_find_node.item -> missing_number_ai\n\n        instance(x: 426, y: -543) constant_one {\n            out(x: 159, y: -519, name: \"value\") property(Number) value_ai\n            number_one -> value_ai\n        }\n        \n        constant_one.value -> number_one\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_numbers_node root.Std_k98ojb.Iteration.Filter {}\n        numbers_ai -> iterate_numbers_node.items\n\n        instance(x: 426, y: -423) check_missing_node root.main.check_missing {}\n        iterate_numbers_node.output_list -> check_missing_node.numbers\n        check_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"checks for the smallest missing number.\") check_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_check_node root.Std_k98ojb.Iteration.Map {}\n        numbers_ai -> iterate_check_node.items\n\n        instance(x: 426, y: -423) find_missing_logic_node root.main.find_missing_logic {}\n        iterate_check_node.output_list -> find_missing_logic_node.differences\n        find_missing_logic_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the first positive difference.\") find_missing_logic {\n        in(x: -426, y: -248, name: \"differences\") property(List) differences_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) filter_positive_node root.Std_k98ojb.Iteration.Filter {}\n        differences_ai -> filter_positive_node.items\n\n        instance(x: 426, y: -423) find_first_positive_node root.main.find_first_positive {}\n        filter_positive_node.output_list -> find_first_positive_node.positive_differences\n        find_first_positive_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the first positive difference.\") find_first_positive {\n        in(x: -426, y: -248, name: \"positive_differences\") property(List) positive_differences_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) first_positive_node root.Std_k98ojb.List.FirstItem {}\n        positive_differences_ai -> first_positive_node.list\n\n        instance(x: 426, y: -423) add_one_node root.Std_k98ojb.Math.Add {}\n        first_positive_node.item -> add_one_node.first\n        instance(x: 426, y: -543) number_one_node root.Std_k98ojb.Number(1) {}\n        number_one_node.value -> add_one_node.second\n\n        add_one_node.result -> missing_number_ai\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_smallest_missing_node root.main.find_smallest_missing {}\n        numbers_ai -> find_smallest_missing_node.numbers\n        find_smallest_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_node root.Std_k98ojb.Iteration.Filter {}\n        numbers_ai -> iteration_node.items\n        \n        instance(x: 426, y: -423) lambda_node root.Std_k98ojb.Lambda {}\n        iteration_node.handler -> lambda_node.function\n        lambda_node.result -> iteration_node.output_list\n\n        instance(x: 426, y: -519) find_missing_number_lambda root.Std_k98ojb.Lambda {}\n        lambda_node.function -> find_missing_number_lambda.function\n        \n        instance(x: 426, y: -615) missing_number_logic root.Std_k98ojb.Logic.Equal {}\n        find_missing_number_lambda.item -> missing_number_logic.left\n        find_missing_number_lambda.index + 1 -> missing_number_logic.right\n\n        instance(x: 426, y: -711) not_node root.Std_k98ojb.Logic.Not {}\n        missing_number_logic.result -> not_node.input\n        \n        instance(x: 426, y: -807) index_plus_one root.Std_k98ojb.Math.Add {}\n        find_missing_number_lambda.index + 1 -> index_plus_one.first\n        0 -> index_plus_one.second\n        index_plus_one.result -> iteration_node.output_list\n\n        instance(x: 426, y: -903) first_missing_number root.Std_k98ojb.Iteration.Find {}\n        iteration_node.output_list -> first_missing_number.items\n        \n        instance(x: 426, y: -999) find_first_missing_lambda root.Std_k98ojb.Lambda {}\n        first_missing_number.predicate -> find_first_missing_lambda.function\n        find_first_missing_lambda.result -> first_missing_number.item\n\n        instance(x: 426, y: -1095) final_logic root.Std_k98ojb.Logic.NotEqual {}\n        first_missing_number.item -> final_logic.left\n        List.Empty() -> final_logic.right\n        \n        instance(x: 426, y: -1191) default_zero root.Std_k98ojb.Math.Expression {}\n        \"0\" -> default_zero.expression\n\n        instance(x: 426, y: -1287) select_missing_number root.Std_k98ojb.IfExpression {}\n        final_logic.result -> select_missing_number.expression\n        first_missing_number.item -> select_missing_number.value\n        default_zero.result -> select_missing_number.otherwise\n        \n        select_missing_number.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f7b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9d5a3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f2e6c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f7b8c.input\n        \" \" -> replace_4f7b8c.search\n        \":\" -> replace_4f7b8c.replace\n        replace_4f7b8c.output -> replace_b9d5a3.input\n        \",\" -> replace_b9d5a3.search\n        \":\" -> replace_b9d5a3.replace\n        replace_b9d5a3.output -> replace_f2e6c1.input\n        \".\" -> replace_f2e6c1.search\n        \":\" -> replace_f2e6c1.replace\n        replace_f2e6c1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3f8b7d root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_6c3b7a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8f9e5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_b4c8d1 root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_6c3b7a.search\n        \":\" -> replace_6c3b7a.replace\n        input_0 -> replace_6c3b7a.input\n        replace_6c3b7a.output -> replace_8f9e5d.input\n        \",\" -> replace_8f9e5d.search\n        \":\" -> replace_8f9e5d.replace\n        replace_8f9e5d.output -> replace_b4c8d1.input\n        \".\" -> replace_b4c8d1.search\n        \":\" -> replace_b4c8d1.replace\n        replace_b4c8d1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_5a3f7e root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_dots_commas_9f3a6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_comma_with_colon_2d7e8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_dot_with_colon_f5a4d6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 795, y: 0) replace_space_with_colon_3c9e8f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_spaces_dots_commas_9f3a6c.input\n        \",\" -> replace_comma_with_colon_2d7e8f.search\n        \":\" -> replace_comma_with_colon_2d7e8f.replace\n        replace_spaces_dots_commas_9f3a6c.output -> replace_comma_with_colon_2d7e8f.input\n        \".\" -> replace_dot_with_colon_f5a4d6.search\n        \":\" -> replace_dot_with_colon_f5a4d6.replace\n        replace_comma_with_colon_2d7e8f.output -> replace_dot_with_colon_f5a4d6.input\n        \" \" -> replace_space_with_colon_3c9e8f.search\n        \":\" -> replace_space_with_colon_3c9e8f.replace\n        replace_dot_with_colon_f5a4d6.output -> replace_space_with_colon_3c9e8f.input\n        replace_space_with_colon_3c9e8f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_e54b7f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f8c9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_ba6e5a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_3a2f7e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f8c9d.input\n        \" \" -> replace_4f8c9d.search\n        \":\" -> replace_4f8c9d.replace\n        replace_4f8c9d.output -> replace_ba6e5a.input\n        \",\" -> replace_ba6e5a.search\n        \":\" -> replace_ba6e5a.replace\n        replace_ba6e5a.output -> replace_3a2f7e.input\n        \".\" -> replace_3a2f7e.search\n        \":\" -> replace_3a2f7e.replace\n        replace_3a2f7e.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_5b9d8c root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_b8e3f6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4d7c9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5c2e1a root.Std_k98ojb.Strings.Replace {}\n        \" \" -> replace_b8e3f6.search\n        \":\" -> replace_b8e3f6.replace\n        input_0 -> replace_b8e3f6.input\n        replace_b8e3f6.output -> replace_4d7c9a.input\n        \",\" -> replace_4d7c9a.search\n        \":\" -> replace_4d7c9a.replace\n        replace_4d7c9a.output -> replace_5c2e1a.input\n        \".\" -> replace_5c2e1a.search\n        \":\" -> replace_5c2e1a.replace\n        replace_5c2e1a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3e5d9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4c7a8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5b6f9g root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e5d9f.input\n        \" \" -> replace_3e5d9f.search\n        \":\" -> replace_3e5d9f.replace\n        replace_3e5d9f.output -> replace_4c7a8e.input\n        \",\" -> replace_4c7a8e.search\n        \":\" -> replace_4c7a8e.replace\n        replace_4c7a8e.output -> replace_5b6f9g.input\n        \".\" -> replace_5b6f9g.search\n        \":\" -> replace_5b6f9g.replace\n        replace_5b6f9g.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_7c8d2e root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_6f4b7e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a9c5d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_3f2d1b root.Std_k98ojb.Strings.Replace {}\n\n        \" \" -> replace_6f4b7e.search\n        \":\" -> replace_6f4b7e.replace\n        input_0 -> replace_6f4b7e.input\n\n        \",\" -> replace_8a9c5d.search\n        \":\" -> replace_8a9c5d.replace\n        replace_6f4b7e.output -> replace_8a9c5d.input\n\n        \".\" -> replace_3f2d1b.search\n        \":\" -> replace_3f2d1b.replace\n        replace_8a9c5d.output -> replace_3f2d1b.input\n\n        replace_3f2d1b.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_f4b7e root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3f8d4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6e5c9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_c7f2d1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3f8d4a.input\n        \" \" -> replace_3f8d4a.search\n        \":\" -> replace_3f8d4a.replace\n        replace_3f8d4a.output -> replace_6e5c9d.input\n        \",\" -> replace_6e5c9d.search\n        \":\" -> replace_6e5c9d.replace\n        replace_6e5c9d.output -> replace_c7f2d1.input\n        \".\" -> replace_c7f2d1.search\n        \":\" -> replace_c7f2d1.replace\n        replace_c7f2d1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_8b9c3f root.main.text_replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f8b5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4c3a9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_c6b1b9 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7f8b5e.input\n        \" \" -> replace_7f8b5e.search\n        \":\" -> replace_7f8b5e.replace\n        replace_7f8b5e.output -> replace_4c3a9d.input\n        \",\" -> replace_4c3a9d.search\n        \":\" -> replace_4c3a9d.replace\n        replace_4c3a9d.output -> replace_c6b1b9.input\n        \".\" -> replace_c6b1b9.search\n        \":\" -> replace_c6b1b9.replace\n        replace_c6b1b9.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_d4a7f8 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4b3c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_ba8e7d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2f9b6a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4b3c5f.input\n        \" \" -> replace_4b3c5f.search\n        \":\" -> replace_4b3c5f.replace\n        replace_4b3c5f.output -> replace_ba8e7d.input\n        \",\" -> replace_ba8e7d.search\n        \":\" -> replace_ba8e7d.replace\n        replace_ba8e7d.output -> replace_2f9b6a.input\n        \".\" -> replace_2f9b6a.search\n        \":\" -> replace_2f9b6a.replace\n        replace_2f9b6a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_7c4d8e root.main.text_replace_special_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7f5a4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_c8e1c6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_7f5a4d.input\n        characters_7f5a4d.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_3b8a2e root.Std_k98ojb.Math.Expression {\n                expression: \"(element == first_char)\"\n            }\n            element_5f51f7 -> expression_3b8a2e.gen_1\n            map_6030c9.firstItem -> expression_3b8a2e.gen_0\n            expression_3b8a2e.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_c8e1c6.left\n        map_6030c9.firstItem -> equal_c8e1c6.right\n        equal_c8e1c6.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> expression_b720d7.gen_1\n        map_6030c9.length -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_9d2e4f root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        func() {\n            in(x: 0, y: 0, name: \"\") property(Number) length_d6c7a9\n\n            out(x: 0, y: 0, name: \"\") property(Bool) out_e5e3b4\n\n            instance(x: -40, y: 10) lessthanorequal_2d8f1c root.Std_k98ojb.Math.LessThanOrEqual {}\n            length_d6c7a9 -> lessthanorequal_2d8f1c.left\n            generaterange_038fce.index -> lessthanorequal_2d8f1c.right\n            lessthanorequal_2d8f1c.result -> out_e5e3b4\n        } -> generaterange_038fce.to\n        input_f5c03d -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) characters_c9b2a1 root.Std_k98ojb.Strings.Characters {}\n            element_5f51f7 -> characters_c9b2a1.string\n            characters_c9b2a1.list -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.n\n        for_8cb3f6.index -> expression_b720d7.i\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_9fba8c.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        input_f5c03d -> characters_c9b2a1.string\n        characters_c9b2a1.list -> expression_9fba8c.gen_0\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        and_80a119.result -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_b0d7e4 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"True\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        Strings_k98ojb.Characters(input_f5c03d).characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) getat_f9e4a8 root.Std_k98ojb.List.GetAt {}\n            element_5f51f7 -> getat_f9e4a8.list\n            0 -> getat_f9e4a8.index\n            getat_f9e4a8.item -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_9fba8c.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_2\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> for_8cb3f6.next\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_c5a0e2 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7e3f1a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n != i)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"true\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_7e3f1a.input\n        characters_7e3f1a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_8e3b2a root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_8e3b2a.left\n            characters_7e3f1a.characters[0] -> equal_8e3b2a.right\n            equal_8e3b2a.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n\n        input_f5c03d -> characters_7e3f1a.input\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_e6f7e4 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n != i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_e6f7e4.input\n        characters_e6f7e4.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_3a2c9b root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d -> equal_3a2c9b.left\n            element_5f51f7 -> equal_3a2c9b.right\n            equal_3a2c9b.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n\n        expression_b720d7.result -> and_80a119.left\n        map_6030c9.output_list[0] -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_same_f0be66 root.main.is_all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1233, y: -400) equal_7e9d6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1233, y: -187) if_f1e0a2 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> StringsCharacters_9f4f6f.input\n        StringsCharacters_9f4f6f.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_7e9d6c.left\n        StringsCharacters_9f4f6f.characters[0] -> equal_7e9d6c.right\n        equal_7e9d6c.result -> if_f1e0a2.predicate\n        for_8cb3f6.onItem -> if_f1e0a2.execute\n        if_f1e0a2.else -> continue_8ba06b\n        if_f1e0a2.then -> out_f3db9f\n        if_f1e0a2.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_5d1e2a root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) if_2f3c7d root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        func() {\n            in(x: -76, y: 46, name: \"index\") property(Number) index_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) characters_a9d4a6 root.Std_k98ojb.Strings.Characters {}\n            input_f5c03d -> characters_a9d4a6.input\n            characters_a9d4a6.characters[index_5f51f7] -> out_d0fd24\n        } -> generaterange_038fce.handler\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_3c2b9a root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d[0] -> equal_3c2b9a.left\n            element_5f51f7 -> equal_3c2b9a.right\n            equal_3c2b9a.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d.length() -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.value -> expression_b720d7.gen_0\n        for_8cb3f6.index -> expression_b720d7.gen_1\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> if_2f3c7d.execute\n        for_8cb3f6.done -> if_2f3c7d.predicate\n        if_2f3c7d.then -> continue_8ba06b\n        if_2f3c7d.else -> out_f3db9f(0)\n        if_e19a62.then -> for_8cb3f6.next\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_b4d7a1 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_0e3a6a.input\n        strings_characters_0e3a6a.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> strings_characters_0e3a6a.input\n        strings_characters_0e3a6a.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> strings_characters_0e3a6a.input\n        strings_characters_0e3a6a.characters[0] -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_f0be66 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1260, y: -320) characters_3e9d5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 1622, y: -320) equal_d1a7e6 root.Std_k98ojb.Logic.Equal {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> characters_3e9d5c.input\n        characters_3e9d5c.characters -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) firstitem_8e9b2a root.Std_k98ojb.List.FirstItem {}\n            element_5f51f7 -> firstitem_8e9b2a.list\n            firstitem_8e9b2a.item -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_d1a7e6.left\n        input_f5c03d -> firstitem_8e9b2a.list\n        firstitem_8e9b2a.item -> equal_d1a7e6.right\n\n        equal_d1a7e6.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> StringsCharacters_3b7e6a.input\n        StringsCharacters_3b7e6a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> StringsCharacters_3b7e6a.input\n        StringsCharacters_3b7e6a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_f5c03d -> expression_9fba8c.gen_0\n        input_f5c03d -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 99, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b.Characters -> count_digits_96023e.s_6b655b\n        isnumeric_adfa16.input -> count_digits_96023e.numeric_check\n        isnumeric_adfa16.result -> count_digits_96023e.is_numeric\n        count_digits_96023e.is_numeric -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        \n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> characters_547f34.input\n        characters_547f34.characters -> slice_547f34.list\n        0 -> slice_547f34.start\n        -1 -> slice_547f34.end\n        slice_547f34.slice -> count_digits_96023e.s_6b655b\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        isnumeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.s_6b655b\n        slice_547f34.slice -> count_digits_96023e.s_6b655b\n        1 -> slice_547f34.start\n        getter_38583a.value -> output_732a8a\n        setter_375321.new_value -> add_88bb8a.first\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> slice_547f34.start\n        -1 -> slice_547f34.end\n        slice_547f34.list -> count_digits_96023e.s_6b655b\n        isnumeric_adfa16.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        slice_547f34.listWithoutItem -> count_digits_96023e.s_6b655b\n        isnumeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        characters_547f34.input -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> count_digits_96023e.characters_input\n        characters_547f34.characters -> isnumeric_adfa16.input\n        isnumeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.next_trigger\n        count_digits_96023e.item -> characters_547f34.input\n        count_digits_96023e.index -> isnumeric_adfa16.index\n        count_digits_96023e.items -> characters_547f34.characters\n        count_digits_96023e.done -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -127) characters_adfa16 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b -> characters_adfa16.input\n        characters_adfa16.characters -> count_digits_96023e.chars\n        count_digits_96023e.continue_d9efd7 -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_41e4ad.new_value\n        count_digits_96023e.output -> add_88bb8a.first\n        characters_adfa16.characters -> count_digits_96023e.list\n        count_digits_96023e.count -> setter_41e4ad.execute\n        setter_41e4ad.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n    }\n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        s_6b655b -> count_digits_96023e.s_6b655b\n        1 -> div_547f34.second\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n        1 -> slice_547f34.end\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        is_numeric_adfa16.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> length_61b38d.list\n        length_61b38d.length -> slice_547f34.start\n        slice_547f34.list -> count_digits_96023e.s_6b655b\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> add_88bb8a.second\n        isnumeric_adfa16.value -> add_88bb8a.first\n        slice_547f34.start -> 0\n        slice_547f34.end -> -1\n        s_6b655b -> slice_547f34.input\n        slice_547f34.output -> count_digits_96023e.s_6b655b\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"Counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) characters_c5d7f6 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        s_6b655b -> characters_c5d7f6.input\n        characters_c5d7f6.characters -> count_digits_96023e.s_6b655b\n\n        0 -> setter_375321.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n\n        characters_c5d7f6.characters -> count_digits_96023e.iteration_list\n        instance(x: 200, y: -150) filter_9c3b2f root.Std_k98ojb.Iteration.Filter {\n            handler: func(it: String) bool {\n                import(\"std\", Std_k98ojb)\n                return Std_k98ojb.Strings.IsNumeric(it)\n            }\n        }\n        count_digits_96023e.iteration_list -> filter_9c3b2f.items\n        filter_9c3b2f.output_list -> add_88bb8a.result\n\n        setter_375321.new_value -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        getter_38583a.value -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        s_6b655b.characters -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> count_digits_96023e.count_6b655b\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_a8c5d2 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_a8c5d2.gen_0\n        data_cde0dc -> pow_a8c5d2.y\n        expression_2d6da6.result -> pow_a8c5d2.x\n        pow_a8c5d2.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_instance root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) pow_5c7b9f root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5c7b9f.x\n        data_instance(x: 330, y: 2) data_3e8d6a = 4\n\n        data_3e8d6a -> pow_5c7b9f.y\n        pow_5c7b9f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_2d1e0c root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 403, y: -1) pow_d7f8c8 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_d7f8c8.x\n        data_instance(x: 500, y: 133) data_e5a2d3 = 4\n        data_e5a2d3 -> pow_d7f8c8.y\n        instance(x: 571, y: -1) add_6e9b0a root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_6e9b0a.first\n        pow_d7f8c8.result -> add_6e9b0a.second\n        instance(x: 12, y: -26) for_1d5a3b root.Std_k98ojb.Std.For {}\n        n_3a3116 -> for_1d5a3b.items\n        add_6e9b0a.result -> sum_365f7b\n        for_1d5a3b.on_item -> div_64046c.trigger\n        for_1d5a3b.reset -> mul_f892a4.reset\n        for_1d5a3b.next -> add_6e9b0a.trigger\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_7f8d2c root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) pow_d5e8c7 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_d5e8c7.x\n        data_instance(x: 330, y: -1) data_bf2d6a  = 4\n        data_bf2d6a -> pow_d5e8c7.y\n        pow_d5e8c7.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 12, y: 180) pow_7f5e1b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_7f5e1b.x\n        data_instance(x: 330, y: 193) data_8a4d2f = 4\n        data_8a4d2f -> pow_7f5e1b.y\n\n        instance(x: 303, y: 218) add_9c0b3f root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_9c0b3f.first\n        pow_7f5e1b.result -> add_9c0b3f.second\n\n        instance(x: 118, y: -26) for_4d8a2c root.Std_k98ojb.For {\n            items: List.GenerateRange(from: 1, to: n_3a3116 + 1)\n        }\n        for_4d8a2c.on_item -> mul_f892a4.trigger\n        for_4d8a2c.done -> add_9c0b3f.trigger\n        add_9c0b3f.result -> sum_365f7b\n\n    }\n\n    instance(x: 118, y: -26) fourth_power_sum_instance root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -26) pow_a1b7f5 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a1b7f5.x\n        data_instance(x: 330, y: 133) data_cde0dc2 = 4\n        data_cde0dc2 -> pow_a1b7f5.y\n        instance(x: 303, y: -52) add_9c3e8a root.Std_k98ojb.Math.Add {}\n        pow_a1b7f5.result -> add_9c3e8a.first\n        sum_365f7b.value -> add_9c3e8a.second\n        add_9c3e8a.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -20) div_1b9f5c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 53) data_4a8e7e  = 3\n        mul_f892a4.result -> div_1b9f5c.first\n        data_4a8e7e -> div_1b9f5c.second\n        instance(x: 12, y: -21) expression_c6d2b0 root.Std_k98ojb.Math.Expression {\n            expression: \"16*n*n*n*n-8*n*n+1\"\n        }\n        n_3a3116 -> expression_c6d2b0.gen_0\n        div_64046c.result -> sum_365f7b\n        div_1b9f5c.result -> expression_c6d2b0.gen_1\n        instance(x: 303, y: -40) mul_d3a4e8 root.Std_k98ojb.Math.Mul {}\n        div_64046c.result -> mul_d3a4e8.first\n        expression_c6d2b0.result -> mul_d3a4e8.second\n        mul_d3a4e8.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) div_7f5c1e root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -13) data_e8c4a9  = 3\n        mul_f892a4.result -> div_7f5c1e.first\n        data_e8c4a9 -> div_7f5c1e.second\n        instance(x: 303, y: -23) pow_a6d0b5 root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a6d0b5.x\n        div_7f5c1e.result -> pow_a6d0b5.y\n        instance(x: 303, y: -34) add_f8a2da root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_f8a2da.first\n        pow_a6d0b5.result -> add_f8a2da.second\n        add_f8a2da.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_a0e5d4 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_a0e5d4.gen_1\n        expression_2d6da6.result -> pow_a0e5d4.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: 2) for_loop_7f8b9c root.Std_k98ojb.Std.For {\n            items: \"List.GenerateRange(1,n)\"\n        }\n        for_loop_7f8b9c.index -> pow_a0e5d4.gen_1\n        for_loop_7f8b9c.item -> n_3a3116\n\n        instance(x: 400, y: 100) add_b3f2e9 root.Std_k98ojb.Math.Add {}\n        pow_a0e5d4.result -> add_b3f2e9.gen_1\n        for_loop_7f8b9c.on_item -> add_b3f2e9.trigger\n\n        instance(x: 450, y: 100) reduce_6d9a1e root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"add_b3f2e9\"\n        }\n        for_loop_7f8b9c.done -> reduce_6d9a1e.trigger\n        add_b3f2e9.result -> reduce_6d9a1e.gen_0\n        data_instance(x: 470, y: 100) initial_value = 0\n        initial_value -> reduce_6d9a1e.gen_1\n\n        reduce_6d9a1e.result -> sum_365f7b\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: 10) pow_a1b2c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_a1b2c.x\n        data_instance(x: 420, y: 20) data_b4e5f6 = 4\n        data_b4e5f6 -> pow_a1b2c.y\n\n        instance(x: 500, y: 30) sum_7g8h9i root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(acc, curr) { return acc + curr }\n        }\n        list_instance(x: 550, y: 50) generate_range_lkjhgf root.Std_k98ojb.List.GenerateRange {\n            from: 1\n            to: n_3a3116 + 1\n        }\n        instance(x: 600, y: 70) map_mno7p8q root.Std_k98ojb.Iteration.Map {\n            handler: func(item) { return pow_a1b2c.result }\n        }\n        generate_range_lkjhgf.items -> map_mno7p8q.items\n        map_mno7p8q.output_list -> sum_7g8h9i.item\n        0 -> sum_7g8h9i.accumulated\n\n        sum_7g8h9i.result -> sum_365f7b\n    }\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5a8f7d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_b9c1e4\n\n        instance(x: 94, y: -105) mul_6b2a3d root.Std_k98ojb.Math.Mul {}\n        size_5a8f7d -> mul_6b2a3d.first\n        size_5a8f7d -> mul_6b2a3d.second\n        mul_6b2a3d.result -> surfaceArea_b9c1e4\n\n        instance(x: 94, y: -140) mul_7f8a4e root.Std_k98ojb.Math.Mul {}\n        mul_6b2a3d.result -> mul_7f8a4e.first\n        6 -> mul_7f8a4e.second\n        mul_7f8a4e.result -> surfaceArea_b9c1e4\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_3d8b2a root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e8c3f\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f9d1a5\n\n        instance(x: 94, y: -105) mul_7b2a0f root.Std_k98ojb.Math.Mul {}\n        size_6e8c3f -> mul_7b2a0f.first\n        size_6e8c3f -> mul_7b2a0f.second\n        mul_7b2a0f.result -> surfaceArea_f9d1a5\n\n        instance(x: 94, y: -140) mul_d4c9b6 root.Std_k98ojb.Math.Mul {}\n        mul_7b2a0f.result -> mul_d4c9b6.first\n        6 -> mul_d4c9b6.second\n        mul_d4c9b6.result -> surfaceArea_f9d1a5\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1e8c7d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_f3b6f5\n\n        instance(x: 94, y: -105) mul_a0a2d4 root.Std_k98ojb.Math.Mul {}\n        size_1e8c7d -> mul_a0a2d4.first\n        6 -> mul_a0a2d4.second\n        mul_a0a2d4.result -> result_f3b6f5\n\n        instance(x: -16, y: -34) pow_b9d7c1 root.Std_k98ojb.Math.Pow {}\n        size_1e8c7d -> pow_b9d7c1.x\n        2 -> pow_b9d7c1.y\n\n        instance(x: 94, y: -58) mul_c5f3a6 root.Std_k98ojb.Math.Mul {}\n        pow_b9d7c1.result -> mul_c5f3a6.first\n        mul_a0a2d4.result -> mul_c5f3a6.second\n\n        result_f3b6f5 <- mul_c5f3a6.result\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7e1f5c\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_3d4a2b\n\n        instance(x: 94, y: -105) mul_d9a6e8 root.Std_k98ojb.Math.Mul {}\n        size_7e1f5c -> mul_d9a6e8.first\n        6 -> mul_d9a6e8.second\n        mul_d9a6e8.result -> surfaceArea_3d4a2b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_a7f1c5 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7f3d8c\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_d1e5b4\n\n        instance(x: 94, y: -105) mul_f0a2b6 root.Std_k98ojb.Math.Mul {}\n        size_7f3d8c -> mul_f0a2b6.first\n        size_7f3d8c -> mul_f0a2b6.second\n        mul_f0a2b6.result -> surface_area_d1e5b4\n\n        instance(x: 94, y: -150) mul_e9c4ad root.Std_k98ojb.Math.Mul {}\n        mul_f0a2b6.result -> mul_e9c4ad.first\n        6 -> mul_e9c4ad.second\n        mul_e9c4ad.result -> surface_area_d1e5b4\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5f3d8a\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_b7c9e2\n\n        instance(x: 94, y: -105) mul_f6b4d1 root.Std_k98ojb.Math.Mul {}\n        size_5f3d8a -> mul_f6b4d1.first\n        size_5f3d8a -> mul_f6b4d1.second\n        mul_f6b4d1.result -> surface_area_b7c9e2\n\n        instance(x: 94, y: -145) const_3c5a8f root.Std_k98ojb.Math.Expression {}\n        \"6\" -> const_3c5a8f.expression\n        const_3c5a8f.result -> mul_f6b4d1.second\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a7f1d\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_2e5c8f root.Std_k98ojb.Math.Mul {}\n        size_3a7f1d -> mul_2e5c8f.first\n        6 -> mul_2e5c8f.second\n        mul_2e5c8f.result -> result_cbb7bd\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_6e3c8f\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_7a2b9d\n\n        instance(x: 94, y: -105) mul_5b1c0a root.Std_k98ojb.Math.Mul {}\n        size_6e3c8f -> mul_5b1c0a.first\n        size_6e3c8f -> mul_5b1c0a.second\n        mul_5b1c0a.result -> surfaceArea_d4d7a9\n\n        instance(x: 94, y: -145) mul_3a2d7f root.Std_k98ojb.Math.Mul {}\n        surfaceArea_d4d7a9 -> mul_3a2d7f.first\n        6 -> mul_3a2d7f.second\n        mul_3a2d7f.result -> surfaceArea_7a2b9d\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7e4a1d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_f8b5f9\n\n        instance(x: 94, y: -105) mul_3c2b6f root.Std_k98ojb.Math.Mul {}\n        size_7e4a1d -> mul_3c2b6f.first\n        size_7e4a1d -> mul_3c2b6f.second\n        mul_3c2b6f.result -> surfaceArea_f8b5f9\n\n        instance(x: 94, y: -144) mul_1d0b9a root.Std_k98ojb.Math.Mul {}\n        mul_3c2b6f.result -> mul_1d0b9a.first\n        6 -> mul_1d0b9a.second\n        mul_1d0b9a.result -> surfaceArea_f8b5f9\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1a8d5f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7c9e3b\n\n        instance(x: 94, y: -105) mul_2d6e4a root.Std_k98ojb.Math.Mul {}\n        size_1a8d5f -> mul_2d6e4a.first\n        6 -> mul_2d6e4a.second\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_f3b7c9\n\n            out(x: 333, y: -50, name: \"\") property(Number) _5f8c1b\n\n            instance(x: 92, y: -22) mul_6a0e4d root.Std_k98ojb.Math.Mul {}\n            x_f3b7c9 -> mul_6a0e4d.first\n            x_f3b7c9 -> mul_6a0e4d.second\n            mul_6a0e4d.result -> _5f8c1b\n        } -> mul_2d6e4a.handler\n        mul_2d6e4a.result -> surface_area_7c9e3b\n    }\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) difference_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> difference_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_val_ai\n\n        instance(x: 426, y: -363) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_val_ai\n\n        instance(x: 426, y: -423) sub_node root.Std_k98ojb.Math.Sub {}\n        max_val_ai -> sub_node.first\n        min_val_ai -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_val_node root.main.diff_largest_smallest {}\n    instance(x: 426, y: -363) min_val_node root.main.diff_largest_smallest {}\n    instance(x: 426, y: -423) sub_instance root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -378) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -453) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        \n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 726, y: -353) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -383) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -463) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        \n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -383) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -463) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_node root.main.range {}\n    instance(x: 426, y: -383) min_node root.main.range {}\n    instance(x: 426, y: -463) sub_node root.main.range {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        instance(x: 426, y: -493) math_sub_node root.Std_k98ojb.Math.Sub {}\n        max_ai -> math_sub_node.first\n        min_ai -> math_sub_node.second\n        math_sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_max_node root.main.range_diff {}\n    instance(x: 426, y: -403) list_min_node root.main.range_diff {}\n    instance(x: 426, y: -493) math_sub_node root.main.range_diff {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_node root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_node.input\n        if_node.then -> is_even_ai\n        if_node.else -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_1e5f4c root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_1e5f4c.input\n        if_1e5f4c.then -> is_even_ai\n    }\n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) std.Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        instance(x: 1024, y: 76) std.Std_k98ojb.Logic.Equal {\n            left: std.Std_k98ojb.Math.Modulo.result\n            right: 0\n        }\n        std.Std_k98ojb.Math.Modulo.result -> std.Std_k98ojb.Logic.Equal.left\n        std.Std_k98ojb.Logic.Equal.value -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"(num_ai % 2 == 0)\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.value\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Bool) isEven_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> isEven_ai\n    }\n    \n\n    instance(x: -34, y: 127) even_check_node root.main.IsEven {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_3f2a1d\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_7b4c8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1c2d8e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_before_4f3a9b root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) not_empty_5d6f3b root.Std_k98ojb.List.NotEmpty {}\n\n            list_before_4f3a9b.start -> -1\n            list_before_4f3a9b.end -> -1\n            input_string_3f2a1d -> list_before_4f3a9b.list\n\n            not_empty_5d6f3b.list -> list_before_4f3a9b.output_list\n\n            elem_9f6850 -> contains_1c2d8e.contains\n            list_before_4f3a9b.output_list -> contains_1c2d8e.input\n\n            contains_1c2d8e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 200, y: -50) characters_8e2b4f root.Std_k98ojb.Strings.Characters {}\n        characters_8e2b4f.input -> input_string_3f2a1d\n\n        list_before_4f3a9b.output_list -> find_6d05b0.items\n        find_6d05b0.item -> char_7b4c8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_7f9a3c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_b4d8e2\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1a3f7c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5d8e9b\n\n            instance(x: 89, y: 29) contains_4c2d8e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            contains_4c2d8e.result -> notequal_807ffd.left\n            input_7f9a3c -> contains_4c2d8e.input\n            char_1a3f7c -> contains_4c2d8e.contains\n            notequal_807ffd.result -> bool_5d8e9b\n        } -> find_6d05b0.predicate\n        instance(x: -150, y: 100) characters_9f8b3d root.Std_k98ojb.Strings.Characters {}\n        input_7f9a3c -> characters_9f8b3d.input\n        characters_9f8b3d.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_b4d8e2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_3c7a1d root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_7e4f8c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_b5d9a2\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3d2b8e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            contains_3d2b8e.result -> notequal_807ffd.left\n            elem_9f6850 -> contains_3d2b8e.contains\n            input_7e4f8c -> contains_3d2b8e.input\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -150, y: 100) characters_1a9f5c root.Std_k98ojb.Strings.Characters {}\n        input_7e4f8c -> characters_1a9f5c.input\n        characters_1a9f5c.characters -> find_6d05b0.items\n        find_6d05b0.item -> char_b5d9a2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_a3f7e8 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_3c8d2a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_d4e7b5\n\n        instance(x: 0, y: 0) find_6f9b2e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_1a8c3d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7e9f4b\n\n            instance(x: 89, y: 29) contains_2d5f8c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_1a3b6f root.Std_k98ojb.Logic.NotEqual {}\n            list_so_far -> contains_2d5f8c.contains\n            elem_1a8c3d -> contains_2d5f8c.input\n            contains_2d5f8c.result -> notequal_1a3b6f.left\n            true -> notequal_1a3b6f.right\n            notequal_1a3b6f.result -> bool_7e9f4b\n\n            instance(x: 89, y: -10) add_to_list_b5c8d2 root.Std_k98ojb.List.Add {}\n            elem_1a8c3d -> add_to_list_b5c8d2.item\n            list_so_far -> add_to_list_b5c8d2.list\n            add_to_list_b5c8d2.listWithItem -> list_so_far\n\n        } -> find_6f9b2e.predicate\n        string_3c8d2a -> root.Std_k98ojb.Strings.Characters.characters\n        root.Std_k98ojb.Strings.Characters.characters -> find_6f9b2e.items\n        find_6f9b2e.item -> char_d4e7b5\n\n        instance(x: -55, y: 10) empty_list_f1c3d8 root.Std_k98ojb.List.Empty {}\n        empty_list_f1c3d8.list -> list_so_far\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9f4e2a root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_5f6a2c\n\n        out(x: 593, y: -1, name: \"character\") property(Char) repeated_char_d3b7e8\n\n        instance(x: 0, y: 0) find_first_repeat_9d4f8b root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) current_char_b1c2a7\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_3f8d9e\n\n            instance(x: 89, y: 29) contains_6b5c4a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_1e2f7c root.Std_k98ojb.List.Slice {}\n\n            input_string_5f6a2c -> characters_8d9f3c.input\n            characters_8d9f3c.characters -> slice_1e2f7c.list\n\n            slice_1e2f7c.start -> index_a1b2c3\n            current_char_b1c2a7 -> slice_1e2f7c.end\n            slice_1e2f7c.result -> contains_6b5c4a.list\n\n            current_char_b1c2a7 -> contains_6b5c4a.item\n            contains_6b5c4a.contains -> is_repeated_3f8d9e\n\n            index_a1b2c3 -> find_first_repeat_9d4f8b.index\n        } -> find_first_repeat_9d4f8b.predicate\n        input_string_5f6a2c -> characters_8d9f3c.input\n        characters_8d9f3c.characters -> find_first_repeat_9d4f8b.items\n        find_first_repeat_9d4f8b.item -> repeated_char_d3b7e8\n\n        instance(x: -200, y: 50) index_a1b2c3 root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"item\") property(Char) item_4d5f6a\n            out(x: 515, y: 44, name: \"number\") property(Number) index_value_b2c3d4\n\n            instance(x: 89, y: 29) add_7e8f9b root.Std_k98ojb.Math.Add {}\n            add_7e8f9b.first -> previous_index_e1f2g3\n            1 -> add_7e8f9b.second\n            add_7e8f9b.result -> index_value_b2c3d4\n\n            instance(x: -150, y: 100) previous_index_e1f2g3 root.Std_k98ojb.Iteration.Reduce {}\n            func() {\n                in(x: -113, y: 34, name: \"acc\") property(Number) accumulator_h5i6j7\n                in(x: -50, y: 150, name: \"val\") property(Char) value_k8l9m0\n\n                out(x: 515, y: 44, name: \"number\") property(Number) result_n1o2p3\n\n                accumulator_h5i6j7 -> result_n1o2p3\n            }\n            0 -> previous_index_e1f2g3.initial_value\n        } -> index_a1b2c3.handler\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_4d5e6f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(Char) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_7g8h9i\n\n            out(x: 515, y: 44, name: \"is_repeated\") property(Bool) is_repeated_jk0l1m\n\n            instance(x: 89, y: 29) contains_check root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_root.Std_k98ojb.Logic.Not {}\n\n            List -> contains_check.input\n            char_7g8h9i -> contains_check.contains\n\n            contains_check.result -> not_root.left\n            not_root.result -> is_repeated_jk0l1m\n        } -> find_first_repeated.predicate\n\n        instance(x: -100, y: 50) characters root.Std_k98ojb.Strings.Characters {}\n        input_string_1a2b3c -> characters.input\n\n        List -> find_first_repeated.items\n        characters.characters -> find_first_repeated.items\n\n        find_first_repeated.item -> repeated_char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2c3d\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_4b5e6f\n\n        instance(x: 0, y: 0) find_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_x1y2z3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_a1b2c3\n\n            instance(x: 89, y: 29) characters_9a8b7c root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) contains_d4e5f6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 410, y: 45) filter_g7h8i9 root.Std_k98ojb.Iteration.Filter {}\n\n            input_1a2c3d -> characters_9a8b7c.input\n            characters_9a8b7c.characters -> filter_g7h8i9.items\n\n            func() {\n                in(x: -50, y: 60, name: \"item\") property(String) item_mno123\n\n                out(x: 515, y: 70, name: \"bool\") property(Bool) bool_pqr456\n\n                instance(x: 89, y: 65) list_abc789 root.Std_k98ojb.List.Slice {}\n                instance(x: 310, y: 75) contains_stu012 root.Std_k98ojb.Strings.Contains {}\n\n                item_mno123 -> list_abc789.item\n                characters_9a8b7c.characters -> list_abc789.list\n\n                list_abc789.slice -> filter_g7h8i9.output_list\n\n                instance(x: 410, y: 85) not_root.Std_k98ojb.Logic.Not {}\n                contains_stu012.input -> not_root.Std_k98ojb.Logic.Not.input\n                item_mno123 -> contains_stu012.contains\n                list_abc789.slice -> contains_stu012.input\n\n                not_root.Std_k98ojb.Logic.Not.result -> bool_pqr456\n            } -> filter_g7h8i9.handler\n\n            instance(x: 510, y: 95) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -50, y: 110, name: \"elem\") property(String) elem_1a2b3c\n\n                out(x: 515, y: 120, name: \"bool\") property(Bool) bool_d4e5f6\n\n                instance(x: 89, y: 105) contains_g7h8i9 root.Std_k98ojb.Strings.Contains {}\n\n                elem_1a2b3c -> contains_g7h8i9.contains\n                filter_g7h8i9.output_list -> contains_g7h8i9.input\n\n                contains_g7h8i9.result -> bool_d4e5f6\n            } -> find_first_repeated.predicate\n\n            filter_g7h8i9.output_list -> find_first_repeated.items\n            find_first_repeated.item -> char_4b5e6f\n        } -> find_7g8h9i.predicate\n        input_1a2c3d -> find_7g8h9i.items\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_3c4d5e root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_7e4f2a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1c2d3e root.Std_k98ojb.Strings.Contains {}\n            contains_1c2d3e.input -> input_7e4f2a\n            contains_1c2d3e.contains -> elem_9f6850\n\n            instance(x: 310, y: 35) list_5f6g7h root.Std_k98ojb.List {}\n            func() {\n                in(x: -113, y: 34, name: \"item\") property(Char) item_d4e3f2\n                out(x: 515, y: 44, name: \"listWithItem\") property(List) listwithitem_8g9h0i\n\n                instance(x: 89, y: 29) add_7j8k9l root.Std_k98ojb.List.Add {}\n                item_d4e3f2 -> add_7j8k9l.item\n                listwithitem_8g9h0i -> add_7j8k9l.listWithItem\n\n                instance(x: 310, y: 35) map_mno123 root.Std_k98ojb.Iteration.Map {}\n                func() {\n                    in(x: -113, y: 34, name: \"item\") property(Char) item_pqr456\n                    out(x: 515, y: 44, name: \"output_list\") property(List) outputlist_stu789\n\n                    instance(x: 89, y: 29) add_7j8k9l root.Std_k98ojb.List.Add {}\n                    item_pqr456 -> add_7j8k9l.item\n                    listwithitem_8g9h0i -> add_7j8k9l.listWithItem\n                    outputlist_stu789 -> map_mno123.output_list\n                }\n                elem_9f6850 -> map_mno123.items\n            }\n\n            instance(x: 310, y: 35) contains_1c2d3e root.Std_k98ojb.Strings.Contains {}\n            list_5f6g7h.output -> contains_1c2d3e.input\n            elem_9f6850 -> contains_1c2d3e.contains\n\n            contains_1c2d3e.result -> bool_af09a7\n        }\n        input_7e4f2a -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_7g8h9i\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_jk0l1m\n\n            instance(x: 89, y: 29) contains_2n3o4p root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_from_chars_qr5t6u root.Std_k98ojb.List.GenerateRange {}\n            instance(x: 410, y: 45) map_to_list_vw7x8y root.Std_k98ojb.Iteration.Map {}\n\n            current_char_7g8h9i -> contains_2n3o4p.contains\n            list_from_chars_qr5t6u.result -> contains_2n3o4p.input\n\n            instance(x: 89, y: 60) char_to_list_z1a2b root.Std_k98ojb.Strings.Characters {}\n            input_string_1a2b3c -> char_to_list_z1a2b.list\n            char_to_list_z1a2b.result -> map_to_list_vw7x8y.items\n\n            instance(x: 89, y: 80) lambda_handler_c3d4e5 root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -113, y: 94, name: \"char\") property(String) char_f6g7h8\n                list_from_chars_qr5t6u.result -> lambda_handler_c3d4e5.items\n                char_f6g7h8 -> contains_2n3o4p.contains\n                contains_2n3o4p.result -> lambda_handler_c3d4e5.output_list\n            }\n            map_to_list_vw7x8y.handler -> lambda_handler_c3d4e5\n\n            list_from_chars_qr5t6u.from -> \"0\"\n            list_from_chars_qr5t6u.to -> \"length(input_string_1a2b3c)\"\n\n            contains_2n3o4p.result -> is_repeated_jk0l1m\n        } -> find_first_repeated.predicate\n\n        char_to_list_z1a2b.result -> find_first_repeated.items\n        find_first_repeated.item -> repeated_char_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) repeated_char_d4e5f6\n\n        instance(x: 0, y: 0) find_repeated_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_n3o4p5\n\n            instance(x: 89, y: 29) contains_6q7r8s root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_9t0u1v root.Std_k98ojb.List.Slice {}\n\n            current_char_jk1l2m -> contains_6q7r8s.contains\n            slice_9t0u1v.list -> contains_6q7r8s.input\n\n            input_string_1a2b3c -> characters_5w6x7y.characters\n            0 -> slice_9t0u1v.start\n            -1 -> slice_9t0u1v.end\n\n            contains_6q7r8s.result -> is_repeated_n3o4p5\n        } -> find_repeated_7g8h9i.predicate\n        characters_5w6x7y.characters -> find_repeated_7g8h9i.items\n        find_repeated_7g8h9i.item -> repeated_char_d4e5f6\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> list_filter_node.items\n        instance(x: 426, y: -423) filter_handler_node root.Std_k98ojb.Iteration.Handler {}\n        list_filter_node.handler -> filter_handler_node.instance\n        instance(x: 426, y: -518) handler_input_node root.Std_k98ojb.Number.Input {}\n        filter_handler_node.input_0 -> handler_input_node.number\n        instance(x: 426, y: -613) handler_output_node root.Std_k98ojb.Logic.NotEqual {}\n        handler_input_node.output -> handler_output_node.left\n        list_filter_node.items -> handler_output_node.right\n        instance(x: 426, y: -708) filter_output_node root.Std_k98ojb.List.Output {}\n        list_filter_node.output_list -> filter_output_node.list\n        instance(x: 426, y: -803) min_node root.Std_k98ojb.List.Min {}\n        filter_output_node.list -> min_node.list\n\n        instance(x: 426, y: -898) remove_min_node root.Std_k98ojb.Iteration.Filter {}\n        filter_output_node.list -> remove_min_node.items\n        instance(x: 426, y: -993) handler_input_2_node root.Std_k98ojb.Number.Input {}\n        min_node.min -> handler_input_2_node.number\n        instance(x: 426, y: -1088) handler_output_2_node root.Std_k98ojb.Logic.Equal {}\n        remove_min_node.handler -> handler_output_2_node.instance\n        handler_input_2_node.output -> handler_output_2_node.left\n        remove_min_node.items -> handler_output_2_node.right\n        instance(x: 426, y: -1183) filter_output_2_node root.Std_k98ojb.List.Output {}\n        remove_min_node.output_list -> filter_output_2_node.list\n\n        min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -898) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.listWithItem -> slice_input.items\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        slice_input.items -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = -1\n        list_slice_node.listWithoutItem -> min_input.items\n\n        instance(x: 426, y: -519) list_min_node root.Std_k98ojb.List.Min {}\n        min_input.items -> list_min_node.list\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) sort_instance root.main.second_smallest_num {}\n\n    property(List) slice_input\n    property(List) min_input\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n        instance(x: 426, y: -403) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> slice_node.list\n        slice_node.start = 1\n        slice_node.end = -1\n        instance(x: 426, y: -503) first_item_node root.Std_k98ojb.List.FirstItem {}\n        slice_node.sliced -> first_item_node.list\n        first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.list -> slice_start_node.input\n\n        instance(x: 426, y: -453) slice_start_node root.Std_k98ojb.List.Slice {}\n        slice_start_node.start = 1\n        slice_start_node.end = -1\n        slice_start_node.input -> list_min_node_2.items\n        list_min_node_2.min -> second_min_ai\n\n        instance(x: 426, y: -588) list_min_node_2 root.Std_k98ojb.List.Min {}\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n        list_sort_node.sorted -> sorted_list_ai\n        \n        instance(x: 426, y: -423) slice_node root.Std_k98ojb.List.Slice {}\n        sorted_list_ai -> slice_node.list\n        instance(x: 426, y: -498) constant_node_1 root.Std_k98ojb.List.GetAt {} \n        constant_node_1.index = 1\n        slice_node.start = 1\n        slice_node.end = -1\n        \n        instance(x: 426, y: -573) list_min_node root.Std_k98ojb.List.Min {}\n        slice_node.slice -> list_min_node.list\n        list_min_node.min -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) sorted_list_ai property(List)\n    instance(x: 426, y: -423) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 426, y: -453) handler_node {\n            func(doc: \"handler function to filter numbers greater than the minimum.\") handler {\n                in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n                out(x: 159, y: -219, name: \"is_greater_than_min\") property(Boolean) is_greater_than_min_ai\n\n                instance(x: 426, y: -303) min_comparison_node root.Std_k98ojb.Math.GreaterThan {}\n                items_ai.FirstItem -> min_comparison_node.left\n                item_ai -> min_comparison_node.right\n                min_comparison_node.result -> is_greater_than_min_ai\n            }\n        }\n\n        instance(x: 426, y: -603) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_filter_node.items\n        handler_node.handler -> list_filter_node.handler\n        list_filter_node.output_list -> list_min_node.items\n\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n        instance(x: 426, y: -403) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        instance(x: 426, y: -493) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.slice -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.list -> slice_start_node.input_list\n\n        instance(x: 426, y: -423) slice_start_node root.Std_k98ojb.List.Slice {\n            start: 1,\n            end: -1\n        }\n        slice_start_node.listWithoutItem -> find_min_node.items\n        \n        instance(x: 426, y: -519) find_min_node root.Std_k98ojb.List.Min {}\n        find_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.listWithoutItem -> list_slice_node.list\n        number_1 -> list_slice_node.start\n        number_2 -> list_slice_node.end\n\n        instance(x: 426, y: -588) list_min_node root.Std_k98ojb.List.Min {}\n        list_slice_node.slice -> list_min_node.items\n        \n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) list_sort_node root.main.second_smallest_num {}\n    instance(x: 426, y: -453) list_slice_node root.main.second_smallest_num {}\n    instance(x: 426, y: -588) list_min_node root.main.second_smallest_num {}\n\n    \n    number_1 = 1\n    number_2 = 2\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        instance(x: 426, y: -588) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.sliced -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Returns true if the input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3c5a8d\n\n        instance(x: 133, y: -131) intersection_4b6f1e root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_4b6f1e.left\n        list2_c62075 -> intersection_4b6f1e.right\n\n        instance(x: 133, y: -131) not_empty_3a8d7c root.Std_k98ojb.List.NotEmpty {}\n        intersection_4b6f1e.intersect -> not_empty_3a8d7c.list\n        not_empty_3a8d7c.isEmpty -> has_common_element_3c5a8d\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_3a8d7e\n\n        instance(x: 133, y: -131) intersection_5b4c1f root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_5b4c1f.left\n        list2_c62075 -> intersection_5b4c1f.right\n        instance(x: 133, y: -131) not_9a8e7d root.Std_k98ojb.Logic.Not {}\n        intersection_5b4c1f.intersect -> not_9a8e7d.input\n        not_9a8e7d.output -> has_common_element_3a8d7e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_b6a0e2 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_equal_5e8c54 := instance(x: -231, y: -69) root.Std_k98ojb.Logic.NotEqual {}\n        intersection_201051.intersect -> not_equal_5e8c54.left\n        List.Empty() -> not_equal_5e8c54.right\n        not_equal_5e8c54.result -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_ba3d8e\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_ba3d8e.NotEmpty.output\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_e245cb\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        not_empty_4e8c54 <- intersection_201051.intersect.NotEmpty()\n        not_empty_4e8c54.isEmpty -> result_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommon\") property(Bool) has_common_f5a3e4\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> has_common_f5a3e4\n\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_cbc0b6 root.main.list_has_common {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1.NotEmpty.output\n    }\n\n    \n\n    instance(x: 93, y: -122) list_has_common_element_cbc0b6 root.main.list_has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"hasCommonElement\") property(Bool) has_common_element_7e5a3c\n\n        instance(x: 133, y: -131) intersection_1f4b6d root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_1f4b6d.left\n        list2_c62075 -> intersection_1f4b6d.right\n\n        instance(x: 133, y: -131) not_empty_8a3c5e root.Std_k98ojb.List.NotEmpty {}\n        intersection_1f4b6d.intersect -> not_empty_8a3c5e.list\n        not_empty_8a3c5e.isEmpty -> has_common_element_7e5a3c\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_2b9c1f root.main.has_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n   func(doc: \"Returns true if the two input lists have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"result\") property(Bool) result_e245cb\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f96b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> result_e245cb.notEmpty\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -528, y: -213, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -208, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_5e6b7c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5e6b7c.first\n            _index_769593 -> sub_5e6b7c.second\n            sub_5e6b7c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_5e6b7c root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_5e6b7c.first\n            _index_769593 -> sub_5e6b7c.second\n            sub_5e6b7c.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: 0, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        contains_32727d.list -> map_c73e3b.items\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_f3e4a6 root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: 79, y: -23, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_c76d2b.first\n            _index_769593 -> sub_c76d2b.second\n            sub_c76d2b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Number) bool_4524be\n\n            instance(x: 74, y: -23) sub_ad7b2a root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_ad7b2a.first\n            false -> sub_ad7b2a.second\n            sub_ad7b2a.result -> bool_4524be\n        } -> filter_c91965.handler\n        map_c73e3b.output_list -> filter_c91965.items\n        instance(x: -303, y: -205, name: \"only false\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        contains_32727d.item -> bool_4524be\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        filter_c91965.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_ae7dad root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"check consecutive pairs\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) subtract_d5f7c2 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_8d1a4e root.Std_k98ojb.Logic.Equal {}\n            _index_769593 -> subtract_d5f7c2.second\n            _index_170471[0] -> subtract_d5f7c2.first\n            subtract_d5f7c2.result -> equal_8d1f3c.left\n            1 -> equal_8d1f3c.right\n            equal_8d1f3c.result -> output_efbc78\n        } -> filter_c91965.handler\n\n        list_07cae4 -> filter_c91965.items\n\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) length_5a7b2d root.Std_k98ojb.List.Length {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n\n            current_81298e -> length_5a7b2d.list\n            1 -> notequal_cb8a55.right\n            length_5a7b2d.length -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) has_consecutive_7f5b3a root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_a1c4d2\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_a1c4d2 -> sub_c76d2b.first\n            list_07cae4.List.GetAt(_index_769593 + 1) -> sub_c76d2b.second\n            sub_c76d2b.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> has_consecutive_7f5b3a.handler\n        list_07cae4.List.Slice(0, -1) -> has_consecutive_7f5b3a.items\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) any_true_a7b2a root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Bool) current_b1c4d2\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                current_b1c4d2 -> output_efbc78\n            } -> any_true_a7b2a.handler\n            has_consecutive_7f5b3a.output_list -> any_true_a7b2a.items\n            any_true_a7b2a.is_empty -> bool_4524be\n        } -> not_75283f.input\n        not_75283f.result -> output_8d07dc\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_instance root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) zip_32727d root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"left\") property(Number) left_170471\n            in(x: -23, y: 79, name=\"right\") property(Number) right_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 463, y: 51) add_7836b4 root.Std_k98ojb.Math.Add {}\n            instance(x: 226, y: 56) equal_c76d2b root.Std_k98ojb.Logic.Equal {}\n            left_170471 -> add_7836b4.first\n            1 -> add_7836b4.second\n            add_7836b4.result -> equal_c76d2b.left\n            right_769593 -> equal_c76d2b.right\n            equal_c76d2b.result -> output_efbc78\n        } -> zip_32727d.handler\n        list_07cae4 -> zip_32727d.left\n        list_07cae4 -> zip_32727d.right\n        instance(x: 1058, y: -203) any_75283f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Bool) current_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) not_c76d2b root.Std_k98ojb.Logic.Not {}\n            not_c76d2b.result -> output_efbc78\n            current_170471 -> not_c76d2b.input\n        } -> any_75283f.predicate\n        zip_32727d.zipped -> any_75283f.items\n        any_75283f.item -> not_75283f.input\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_e7c1e6 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_e7c1e6.first\n            _index_769593 -> sub_e7c1e6.second\n            sub_e7c1e6.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) sub_e7c1e6 root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_e7c1e6.first\n            _index_769593 -> sub_e7c1e6.second\n            sub_e7c1e6.result -> notequal_cb8a55.left\n            1 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        list_07cae4 -> contains_32727d.list\n        true -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_f4a9e7 root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") has_consecutive {\n        in(x: -528, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"check consecutive numbers\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_7b3c8f root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_c0a1d2 root.Std_k98ojb.Logic.Equal {}\n            _index_769593 -> sub_7b3c8f.second\n            list_07cae4 -> sub_7b3c8f.first\n            sub_7b3c8f.result -> equal_c0a1d2.left\n            current_81298e -> equal_c0a1d2.right\n            equal_c0a1d2.result -> output_efbc78\n        } -> filter_c91965.handler\n        list_07cae4 -> filter_c91965.items\n\n        func() {\n            in(x: -192, y: 55, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: 39, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: 42) sub_7b3c8f root.Std_k98ojb.Math.Sub {}\n            instance(x: 285, y: 44) equal_c0a1d2 root.Std_k98ojb.Logic.Equal {}\n            list_07cae4 -> sub_7b3c8f.first\n            current_81298e -> sub_7b3c8f.second\n            sub_7b3c8f.result -> equal_c0a1d2.left\n            1 -> equal_c0a1d2.right\n            equal_c0a1d2.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        true -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_consecutive_7a4dad root.main.has_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_1a9c5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_1a9c5f.first\n            list_07cae4[_index_769593 + 1] -> sub_1a9c5f.second\n            sub_1a9c5f.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4[0..-2] -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_7a4dad root.main.consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given list contains consecutive numbers.\") has_consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) filter_32727d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name=\"next\") property(Number) next_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_c76d2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) equal_7836b4 root.Std_k98ojb.Logic.Equal {}\n\n            sub_c76d2b.second -> current_81298e\n            next_769593 -> sub_c76d2b.first\n            sub_c76d2b.result -> equal_7836b4.left\n            1 -> equal_7836b4.right\n            equal_7836b4.result -> output_efbc78\n        } -> filter_32727d.handler\n\n        list_07cae4 -> filter_32727d.items\n\n        instance(x: -303, y: -205, name: \"slice\") slice_c91965 root.Std_k98ojb.List.Slice {}\n        instance(x: 246, y: -209, name: \"zip\") zip_c73e3b root.Std_k98ojb.Iteration.Zip {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"zipped\") property(List) zipped_4524be\n\n            slice_c91965.end -> -1\n            current_81298e -> slice_c91965.list\n            slice_c91965.start -> 0\n            slice_c91965.result -> zip_c73e3b.left\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n                out(x: 521, y: -28, name: \"next\") property(List) next_4524be\n\n                instance(x: 74, y: -23) slice_ad7b2a root.Std_k98ojb.List.Slice {}\n                instance(x: 285, y: -25) getat_cb8a55 root.Std_k98ojb.List.GetAt {}\n\n                current_81298e -> slice_ad7b2a.list\n                1 -> slice_ad7b2a.start\n                slice_ad7b2a.result -> getat_cb8a55.list\n                0 -> getat_cb8a55.index\n                getat_cb8a55.value -> next_4524be\n            } -> zip_c73e3b.right\n\n            zip_c73e3b.output_list -> zipped_4524be\n        } -> filter_32727d.items\n\n        not_75283f.result -> output_8d07dc\n        filter_32727d.is_empty -> not_75283f.input\n    }\n\n    instance(x: -293, y: -5) has_consecutive_numbers_7a4dad root.main.has_consecutive_numbers {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") consecutive_numbers {\n        in(x: -527, y: -214, name: \"list\") property(List) list_07cae4\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) sub_d9a7d8 root.Std_k98ojb.Math.Sub {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> sub_d9a7d8.first\n            _index_769593 -> sub_d9a7d8.second\n            sub_d9a7d8.result -> notequal_7836b4.left\n            1 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> map_c73e3b.handler\n        list_07cae4 -> map_c73e3b.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) consecutive_numbers_7a4dad root.main.consecutive_numbers {}\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"outer_list\") property(List) outer_list_ec88cd\n        in(x: -485, y: 150, name: \"inner_list\") property(List) inner_list_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || outer[index] == inner[current_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = current_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = current_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = current_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        outer_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        inner_list_5bbcd7 -> for_inner.items\n        for_inner.item -> getat_ce2a48.value\n        for_inner.index -> setter_38e107.new_value\n        for_inner.done -> continue_a96db6\n        list_length -> for_inner.length\n        0 -> for_inner.start\n        for_d26972.done -> for_inner.trigger\n        for_d26972.item -> setter_9d4f1c.new_value\n        outer_list_ec88cd -> getat_ce2a48.list\n        getter_b280eb.value -> getat_ce2a48.index\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 500, y: -150) for_inner root.Std_k98ojb.Std.For {}\n        getter(x: 200, y: -50, name: \"getter_list_length\") getter_list_length = list_length\n        setter(x: 350, y: -250, name: \"setter_list_length\") setter_list_length = list_length\n\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        getter(x: 100, y: -200, name: \"getter_current_index\") getter_current_index = current_index\n        setter(x: 350, y: -250, name: \"setter_current_index\") setter_current_index = current_index\n\n        instance(x: -275, y: -150) getat_inner_list root.Std_k98ojb.List.GetAt {}\n        inner_list_5bbcd7 -> getat_inner_list.list\n        getter_current_index.value -> getat_inner_list.index\n        getat_inner_list.itemAtIndex -> setter_38e107.new_value\n\n        instance(x: 200, y: -250) length root.Std_k98ojb.List.Length {}\n        inner_list_5bbcd7 -> length.list\n        length.length -> getter_list_length.value\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sub_for.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sub_for.done -> continue_a96db6\n        sub_for.onItem -> ifexpression_sublist.execute\n        main_item -> ifexpression_sublist.gen_0\n        sublist_item -> ifexpression_sublist.gen_1\n        index -> ifexpression_sublist.gen_2\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        sub_for.item -> setter_sub.new_value\n        main_item -> getat_main.list\n        index -> getat_main.index\n        getat_main.itemAtIndex -> sublist_item\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n    instance(x: 750, y: -20) ifexpression_sublist_3a9b8c root.Std_k98ojb.Std.IfExpression {\n        expression: \"main_item == sublist_item\"\n    }\n    getter(x: 500, y: 160, name: \"getter_sub\") getter_sub = sublist_item\n    setter(x: 800, y: -313, name: \"setter_sub\") setter_sub = sublist_item\n    instance(x: 700, y: -20) for_d26972_sub root.Std_k98ojb.Std.For {}\n    setter(x: 850, y: -121, name: \"setter_sub\") setter_sub_38e107 = sublist_item\n    instance(x: 600, y: -35) getat_main_a9f4d8 root.Std_k98ojb.List.GetAt {}\n    ifexpression_sublist_3a9b8c.else -> continue_a96db6\n    ifexpression_sublist_3a9b8c.value -> output_5bbcd7\n    ifexpression_sublist_3a9b8c.then -> setter_sub.execute\n    main_list_ec88cd -> for_d26972.items\n    sublist_ec88cd -> sub_for.items\n    for_d26972.item -> ifexpression_875761.gen_2\n    for_d26972.index -> index\n    getter_b280eb.value -> ifexpression_875761.gen_1\n    for_d26972.onItem -> ifexpression_875761.execute\n    for_d26972.done -> continue_a96db6\n    for_d26972.item -> setter_9d4f1c.new_value\n    main_list_ec88cd -> getat_ce2a48.list\n    0 -> getat_ce2a48.index\n    getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n    execute_90aaec -> setter_38e107.execute\n    sub_for.done -> continue_a96db6\n    sub_for.onItem -> ifexpression_sublist.execute\n    main_item -> ifexpression_sublist.gen_0\n    sublist_item -> ifexpression_sublist.gen_1\n    index -> ifexpression_sublist.gen_2\n    setter_38e107.continue -> for_d26972.reset\n    setter_9d4f1c.continue -> for_d26972.next\n    sub_for.item -> setter_sub.new_value\n    main_item -> getat_main.list\n    index -> getat_main.index\n    getat_main.itemAtIndex -> sublist_item\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 155, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || sublist_index < len_sublist && main_list_item == sublist[sublist_index]\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_ec88cd -> getat_ce2a48.list\n        getter_b280eb.value -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> main_list_item_abc123\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 321, y: -20) for_sublist_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb_123abc = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c_123abc = sublist_index\n        instance(x: -275, y: -35) getat_ce2a48_sublist root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        for_sublist_d26972.item -> ifexpression_875761.gen_4\n        getter_b280eb_123abc.value -> ifexpression_875761.gen_3\n        sublist_ec88cd -> for_sublist_d26972.items\n        for_sublist_d26972.onItem -> ifexpression_875761.execute\n        for_sublist_d26972.done -> continue_a96db6\n        for_sublist_d26972.item -> setter_9d4f1c_123abc.new_value\n        sublist_ec88cd -> getat_ce2a48_sublist.list\n        getter_b280eb_123abc.value -> getat_ce2a48_sublist.index\n        getat_ce2a48_sublist.itemAtIndex -> sublist_item_def456\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"outer_list\") property(List) outer_list_ec88cd\n        in(x: -485, y: 155, name: \"inner_list\") property(List) inner_list_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || inner_index < len(inner_list)\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = inner_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = inner_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = inner_index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        outer_list_ec88cd -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_3\n        inner_list_ec88cd -> ifexpression_875761.gen_4\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> ifexpression_875761.then\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_f9c3e1\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_f9c3e1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_5bbcd7 -> filter_2b8a0c.items\n        filter_2b8a0c.outputList -> for_d26972.items\n        filter_2b8a0c.handler.value -> issublist_fc79d5.isInMainList\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {\n            in(x: -465, y: -235, name: \"execute\") trigger() execute_ba2b3e\n            in(x: -485, y: 30, name: \"main_list\") property(List) main_list_9f7c8d\n            in(x: -485, y: 150, name: \"sublist\") property(List) sublist_5bbcd7\n\n            out(x: 1227, y: 5, name: \"continue\") trigger() continue_4e3a6b\n            out(x: 1218, y: 147, name: \"output\") property(Bool) output_2f1d9c\n\n            instance(x: 752, y: 93) ifexpression_b7e5c0 root.Std_k98ojb.Std.IfExpression {\n                expression: \"index == 0 || previous <= current\"\n            }\n            getter(x: 334, y: 160, name: \"getter_6a1f8d\") getter_6a1f8d = previous\n            setter(x: 679, y: -313, name: \"setter_7c4e2b\") setter_7c4e2b = previous\n            instance(x: 321, y: -20) for_3a5f9d root.Std_k98ojb.Std.For {}\n            setter(x: -0, y: -121, name: \"setter_7c4e2b\") setter_8f1b6a = previous\n            instance(x: -275, y: -35) getat_1d3b5e root.Std_k98ojb.List.GetAt {}\n            ifexpression_b7e5c0.else -> continue_4e3a6b\n            ifexpression_b7e5c0.value -> output_2f1d9c\n            ifexpression_b7e5c0.then -> setter_7c4e2b.execute\n            main_list_9f7c8d -> for_3a5f9d.items\n            sublist_5bbcd7 -> filter_6c8f4a.items\n            filter_6c8f4a.outputList -> for_3a5f9d.items\n            filter_6c8f4a.handler.value -> issublist_fc79d5.isInMainList\n            for_3a5f9d.item -> ifexpression_b7e5c0.gen_2\n            for_3a5f9d.index -> ifexpression_b7e5c0.gen_0\n            getter_6a1f8d.value -> ifexpression_b7e5c0.gen_1\n            for_3a5f9d.onItem -> ifexpression_b7e5c0.execute\n            for_3a5f9d.done -> continue_4e3a6b\n            for_3a5f9d.item -> setter_7c4e2b.new_value\n            main_list_9f7c8d -> getat_1d3b5e.list\n            0 -> getat_1d3b5e.index\n            getat_1d3b5e.itemAtIndex -> setter_8f1b6a.new_value\n            execute_ba2b3e -> setter_8f1b6a.execute\n            setter_8f1b6a.continue -> for_3a5f9d.reset\n            setter_7c4e2b.continue -> for_3a5f9d.next\n\n            instance(x: 10, y: -177) isinmainlist_f3a2c0 root.main.issublist {\n                in(x: -465, y: -235, name: \"execute\") trigger() execute_d4e8b7\n                in(x: -485, y: 30, name: \"main_list\") property(List) main_list_9f7c8d\n                in(x: -485, y: 150, name: \"sublist_item\") property(Any) sublist_item_5bbcd7\n\n                out(x: 1227, y: 5, name: \"continue\") trigger() continue_3b1e4a\n                out(x: 1218, y: 147, name: \"output\") property(Bool) output_2f1d9c\n\n                instance(x: 752, y: 93) ifexpression_7e5c0 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"index == 0 || previous <= current\"\n                }\n                getter(x: 334, y: 160, name: \"getter_6a1f8d\") getter_6a1f8d = previous\n                setter(x: 679, y: -313, name: \"setter_7c4e2b\") setter_7c4e2b = previous\n                instance(x: 321, y: -20) for_3a5f9d root.Std_k98ojb.Std.For {}\n                setter(x: -0, y: -121, name: \"setter_7c4e2b\") setter_8f1b6a = previous\n                instance(x: -275, y: -35) getat_1d3b5e root.Std_k98ojb.List.GetAt {}\n                ifexpression_7e5c0.else -> continue_3b1e4a\n                ifexpression_7e5c0.value -> output_2f1d9c\n                ifexpression_7e5c0.then -> setter_7c4e2b.execute\n                main_list_9f7c8d -> for_3a5f9d.items\n                sublist_item_5bbcd7 -> filter_6c8f4a.value\n                filter_6c8f4a.outputList -> for_3a5f9d.items\n                filter_6c8f4a.handler.value -> logic_equal_c1b2e0.execute\n                for_3a5f9",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == sublist_index || main_list_item == sublist_item\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_sublist_index = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_sublist_index = sublist_index\n        instance(x: 321, y: -20) for_main_list_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_main_list_item = main_list_item\n        instance(x: -275, y: -35) getat_sublist_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_sublist_index.execute\n\n        main_list_ec88cd -> for_main_list_d26972.items\n        for_main_list_d26972.item -> setter_main_list_item.new_value\n        for_main_list_d26972.index -> ifexpression_875761.gen_0\n        getter_sublist_index.value -> ifexpression_875761.gen_1\n\n        sublist_ec88cd -> getat_sublist_ce2a48.list\n        0 -> getat_sublist_ce2a48.index\n        getat_sublist_ce2a48.itemAtIndex -> setter_main_list_item.new_value\n\n        for_main_list_d26972.onItem -> ifexpression_875761.execute\n        for_main_list_d26972.done -> continue_a96db6\n\n        execute_90aaec -> setter_main_list_item.execute\n        setter_main_list_item.continue -> for_main_list_d26972.next\n        getter_sublist_index.value -> getat_sublist_ce2a48.index\n        ifexpression_875761.value -> setter_sublist_index.new_value\n        setter_sublist_index.continue -> continue_a96db6\n\n        instance(x: 321, y: -20) for_sublist_d26972 root.Std_k98ojb.Std.For {}\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_main_list_item = main_list_item\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_sublist_index = sublist_index\n\n        for_sublist_d26972.items -> sublist_ec88cd\n        for_sublist_d26972.item -> ifexpression_875761.gen_2\n        getter_main_list_item.value -> ifexpression_875761.gen_3\n        for_sublist_d26972.index -> setter_sublist_index.new_value\n        setter_sublist_index.continue -> for_sublist_d26972.next\n\n        execute_90aaec -> for_sublist_d26972.trigger\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if one list is a sublist of another.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 160, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < main_list_length - sublist_length + 1 && sublist == slice\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 500, y: -200) slice_f8d7a3 root.Std_k98ojb.List.Slice {}\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> slice_f8d7a3.list\n        getter_b280eb.value -> slice_f8d7a3.start\n        for_d26972.index -> slice_f8d7a3.end\n        sublist_ec88cd -> ifexpression_875761.gen_2\n\n        slice_f8d7a3.output_list -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> length_getter.main_length\n        sublist_ec88cd -> length_getter.sublist_length\n        execute_90aaec -> setter_38e107.execute\n\n        instance(x: -400, y: -250) length_getter root.Std_k98ojb.List.Length {}\n\n        length_getter.output_length -> main_list_length\n        length_getter.output_length_1 -> sublist_length\n\n        list_length_calculation {\n            in(x: -500, y: -350, name: \"main_list\") property(List) main_list_ec88cd\n            in(x: -500, y: -420, name: \"sublist\") property(List) sublist_ec88cd\n\n            out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n            out(x: 1218, y: 147, name: \"output_main_length\") property(Int) output_main_length_2\n            out(x: 1218, y: 210, name: \"output_sublist_length\") property(Int) output_sublist_length_3\n\n            instance(x: -300, y: -250) main_list_length_getter root.Std_k98ojb.List.Length {}\n            instance(x: -300, y: -320) sublist_length_getter root.Std_k98ojb.List.Length {}\n\n            main_list_ec88cd -> main_list_length_getter.list\n            sublist_ec88cd -> sublist_length_getter.list\n\n            main_list_length_getter.output_length -> output_main_length_2\n            sublist_length_getter.output_length -> output_sublist_length_3\n        }\n\n        instance(x: -600, y: -500) list_length_calculation_fc79d5 root.main.list_length_calculation {}\n    }\n}\n\ninstance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_ec88cd\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        sublist_ec88cd -> sublist_for.items\n\n        instance(x: 500, y: -200) for_sublist root.Std_k98ojb.Std.For {}\n        out(x: 1218, y: 300, name: \"sublist_continue\") trigger() sublist_continue_a96db6\n        out(x: 1227, y: 305, name: \"sublist_output\") property(Bool) sublist_output_5bbcd7\n\n        instance(x: 800, y: -100) ifexpression_sublist root.Std_k98ojb.Std.IfExpression {\n            expression: \"main_index + sublist_index < main_list.length && sublist_item == main_item\"\n        }\n        getter(x: 600, y: 160, name: \"getter_sub_b280eb\") getter_sub_b280eb = previous\n        setter(x: 900, y: -313, name: \"setter_sub_9d4f1c\") setter_sub_9d4f1c = previous\n\n        ifexpression_sublist.else -> sublist_continue_a96db6\n        ifexpression_sublist.value -> sublist_output_5bbcd7\n        ifexpression_sublist.then -> setter_sub_9d4f1c.execute\n\n        for_d26972.item -> main_item\n        for_d26972.index -> main_index\n        sublist_ec88cd -> for_sublist.items\n        for_sublist.item -> sublist_item\n        for_sublist.index -> sublist_index\n\n        main_list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        main_item -> ifexpression_sublist.gen_0\n        sublist_item -> ifexpression_sublist.gen_1\n        main_index -> ifexpression_sublist.gen_2\n        sublist_index -> ifexpression_sublist.gen_3\n        getter_sub_b280eb.value -> ifexpression_sublist.gen_4\n\n        for_d26972.onItem -> ifexpression_sublist.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sublist_continue_a96db6 -> for_d26972.next\n        sublist_output_5bbcd7 -> output_5bbcd7\n        setter_sub_9d4f1c.continue -> for_sublist.next\n    }\n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") issublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"outer_list\") property(List) outer_list_ec88cd\n        in(x: -485, y: 160, name: \"inner_list\") property(List) inner_list_1a2b3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n\n        instance(x: 400, y: 200) filter_f3b7de root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: Any, index: Int, context: Any) Bool {\n                return item == inner_list_1a2b3c[index]\n            }\n        }\n\n        instance(x: 600, y: 200) filter_g4h8ef root.Std_k98ojb.Iteration.Filter {\n            handler: func(item: Any, index: Int, context: Any) Bool {\n                return item == outer_list_ec88cd[index]\n            }\n        }\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        outer_list_ec88cd -> for_d26972.items\n        inner_list_1a2b3c -> filter_f3b7de.items\n        outer_list_ec88cd -> filter_g4h8ef.items\n\n        filter_f3b7de.output_list -> for_d26972.items\n        filter_g4h8ef.output_list -> ifexpression_875761.gen_2\n\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issublist_fc79d5 root.main.issublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"main_list\") property(List) main_list_ec88cd\n        in(x: -485, y: 150, name: \"sublist\") property(List) sublist_f3a1d9\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == -1 || found\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = index\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_ec88cd -> for_d26972.items\n        for_d26972.item -> sublist_check.sublist_item\n        for_d26972.index -> index_check.main_index\n        getter_b280eb.value -> ifexpression_875761.gen_0\n        for_d26972.onItem -> index_check.execute\n        for_d26972.done -> continue_a96db6\n        sublist_f3a1d9 -> sublist_check.sublist_items\n        main_list_ec88cd -> getat_ce2a48.list\n\n        instance(x: 500, y: -200) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sublist_index == len(sublist) || sublist[sublist_index] == item\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_sublist_index = sublist_index\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_sublist_index = sublist_index\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_sublist_continue = sublist_index\n\n        ifexpression_875761.then -> setter_sublist_index.execute\n        ifexpression_875761.else -> setter_sublist_continue.execute\n        sublist_check.sublist_item -> ifexpression_875761.gen_2\n        index_check.main_index -> ifexpression_875761.gen_0\n        getter_sublist_index.value -> ifexpression_875761.gen_1\n\n        instance(x: 800, y: -300) for_d26972 root.Std_k98ojb.Std.For {}\n        sublist_f3a1d9 -> sublist_check.sublist_items\n        index_check.main_index -> sublist_check.main_index\n        getter_sublist_index.value -> ifexpression_875761.gen_1\n\n        instance(x: 1000, y: -400) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        sublist_f3a1d9 -> getat_ce2a48.list\n        index_check.main_index -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> ifexpression_875761.gen_2\n\n        instance(x: 1200, y: -500) setter_38e107 root.Std_k98ojb.Setter {\n            new_value: \"sublist_index + 1\"\n        }\n        index_check.main_index -> getat_ce2a48.index\n        ifexpression_875761.value -> sublist_check.found\n\n        instance(x: 1400, y: -600) setter_38e107 root.Std_k98ojb.Setter {\n            new_value: \"main_list.indexOf(sublist[0]) + 1\"\n        }\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n\n        instance(x: 1600, y: -700) index_check root.main.index_check {\n            in(main_index: -465, name: \"execute\") trigger() execute_90aaec\n            out(found: 1218, y: 147, name: \"found\") property(Bool) found_f5a1d9\n\n            instance(x: 1800, y: -800) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n                expression: \"main_index + len(sublist) <= len(main_list)\"\n            }\n            ifexpression_875761.then -> for_d26972.reset\n            ifexpression_875761.else -> continue_a96db6\n        }\n\n        instance(x: 2000, y: -900) sublist_check root.main.sublist_check {\n            in(sublist_items: -485, y: 30, name: \"sublist_items\") property(List)\n            in(main_index: -485, y: 150, name: \"main_index\") property(Int)\n            out(found: 1218, y: 147, name: \"found\") property(Bool) found_f5a1d9\n\n            instance(x: 2200, y: -1000) for_d26972 root.Std_k98ojb.Std.For {}\n            sublist_items -> for_d26972.items\n            main_index -> index_check.main_index\n        }\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.For {}\n        numbers_ai -> loop_node.items\n        loop_node.reset -> reset_trigger\n        instance(x: 426, y: -453) trigger_reset_node root.Std_k98ojb.Trigger.Once {}\n        trigger_reset_node.trigger -> reset_trigger\n\n        instance(x: 426, y: -603) index_node root.Std_k98ojb.Math.Add {}\n        loop_node.index -> index_node.first\n        instance(x: 426, y: -678) constant_one_node root.Std_k98ojb.Number.Constant { value: 1 }\n        constant_one_node.value -> index_node.second\n        index_node.result -> current_index_ai\n\n        instance(x: 426, y: -753) check_missing_node root.main.check_missing {}\n        loop_node.item -> check_missing_node.current\n        current_index_ai -> check_missing_node.index\n        check_missing_node.missing -> missing_ai\n\n        instance(x: 426, y: -903) end_loop_node root.Std_k98ojb.Trigger.Once {}\n        loop_node.done -> end_loop_node.trigger\n    }\n\n    func(doc: \"checks if the current number is missing.\") check_missing {\n        in(x: -426, y: -248, name: \"current\") property(Number) current_ai\n        in(x: -426, y: -303, name: \"index\") property(Number) index_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -378) expected_node root.Std_k98ojb.Math.Add {}\n        index_node.first -> expected_node.first\n        constant_one_node.value -> expected_node.second\n        expected_node.result -> expected_value_ai\n\n        instance(x: 426, y: -453) missing_check_node root.Std_k98ojb.Logic.NotEqual {}\n        current_ai -> missing_check_node.left\n        expected_value_ai -> missing_check_node.right\n\n        instance(x: 426, y: -528) set_missing_node root.Std_k98ojb.Number.Set { value: index_ai }\n        missing_check_node.output -> set_missing_node.trigger\n        set_missing_node.value -> missing_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.std.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n\n        instance(x: 426, y: -423) lambda_handler_node root.std.Lambda {}\n        iteration_find_node.handler -> lambda_handler_node.func\n\n        lambda_handler_node.inputs {\n            x: -248\n            name: \"i\"\n            type: Number\n            value: 0\n        }\n        lambda_handler_node.outputs {\n            x: 159\n            y: -219\n            name: \"result\"\n            type: Boolean\n        }\n\n        instance(x: 426, y: -518) math_expression_node root.std.Math.Expression {}\n        math_expression_node.expression = \"i + 1 != numbers[i]\"\n        lambda_handler_node.inputs[0] -> math_expression_node.i\n        numbers_ai -> math_expression_node.numbers\n\n        iteration_find_node.item -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"sorted_list\") property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        sorted_list_ai -> find_missing_node.sorted_list\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(sorted_list: -426, y: -248) property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iterate_and_check_node root.main.iterate_and_check {}\n        sorted_list_ai -> iterate_and_check_node.sorted_list\n        iterate_and_check_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"iterates over the list to find the smallest missing number.\") iterate_and_check {\n        in(sorted_list: -426, y: -248) property(List) sorted_list_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_loop_node root.Std_k98ojb.For {}\n        instance(x: 576, y: -303) if_check_node root.Std_k98ojb.If {}\n\n        sorted_list_ai -> for_loop_node.items\n        for_loop_node.trigger -> for_loop_node.reset\n\n        for_loop_node.index -> if_check_node.left\n        std.List.GetAt(sorted_list: sorted_list_ai, index: for_loop_node.index + 1) -> if_check_node.right\n        if_check_node.value -> if_check_node.input\n\n        instance(x: 726, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n        for_loop_node.index -> math_sub_node.first\n        std.List.GetAt(sorted_list: sorted_list_ai, index: for_loop_node.index + 1) -> math_sub_node.second\n        math_sub_node.result -> if_check_node.then\n\n        instance(x: 726, y: -303) number_one_node root.Std_k98ojb.Number {}\n        number_one_node.value -> number_one_node.number\n        number_one_node.number -> if_check_node.else\n\n        for_loop_node.done -> missing_number_ai\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -423) if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n\n        for_node.item -> if_node.input\n        std.List.GetAt(numbers_ai, Math.Add(for_node.index, Number(1))) -> if_node.then_input\n        instance(x: 426, y: -543) math_add_node root.Std_k98ojb.Math.Add {}\n        \n        for_node.index -> math_add_node.first\n        Number(1) -> math_add_node.second\n\n        math_add_node.result -> std.List.GetAt(numbers_ai)\n\n        if_node.value -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) loop_node root.Std_k98ojb.Iteration.Filter {}\n        numbers_ai -> loop_node.items\n        instance(x: 426, y: -453) handler_node root.main.handler {}\n        loop_node.handler -> handler_node.handler\n        instance(x: 426, y: -588) if_node root.Std_k98ojb.Logic.NotEqual {}\n        loop_node.output_list -> if_node.left\n        List.Empty() -> if_node.right\n        if_node.value -> missing_number_ai\n\n        func(doc: \"checks for consecutive numbers.\") handler {\n            in(x: -426, y: -248, name: \"item\") property(Number) item_ai\n            in(x: -426, y: -303, name: \"index\") property(Number) index_ai\n            out(x: 159, y: -219, name: \"is_consecutive\") property(Bool) is_consecutive_ai\n\n            instance(x: 426, y: -378) sub_node root.Std_k98ojb.Math.Sub {}\n            item_ai -> sub_node.first\n            if(index_ai > 0) {\n                List.GetAt(numbers_ai, index_ai - 1) -> sub_node.second\n            } else {\n                Number(0) -> sub_node.second\n            }\n            sub_node.result -> is_consecutive_ai\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_for_node root.Std_k98ojb.Iteration.For {}\n        iteration_for_node.trigger -> Std_k98ojb.Trigger\n        numbers_ai -> iteration_for_node.items\n\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n        iteration_for_node.on_item -> if_node.input\n        iteration_for_node.index -> if_node.expression.a\n        iteration_for_node.item -> if_node.expression.b\n\n        func(doc: \"expression to check missing number.\") expression {\n            in(x: -426, y: -248, name: \"a\") property(Number) a_ai\n            in(x: 159, y: -219, name: \"b\") property(Number) b_ai\n            out(x: 0, y: 0, name: \"value\") property(Boolean) value_ai\n\n            instance(x: 426, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n            a_ai -> math_sub_node.first\n            b_ai -> math_sub_node.second\n            math_sub_node.result -> Std_k98ojb.Number\n\n            instance(x: 426, y: -378) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            math_sub_node.result -> logic_not_equal_node.left\n            Std_k98ojb.Number(1) -> logic_not_equal_node.right\n            logic_not_equal_node.value -> value_ai\n        }\n\n        if_node.then -> iteration_for_node.next\n        if_node.else -> Std_k98ojb.Trigger\n\n        instance(x: 426, y: -498) math_add_node root.Std_k98ojb.Math.Add {}\n        iteration_for_node.index -> math_add_node.first\n        Std_k98ojb.Number(1) -> math_add_node.second\n        math_add_node.result -> missing_number_ai\n\n        if_node.else -> math_add_node.trigger\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) iterate_numbers_node root.main.iterate_numbers {}\n        numbers_ai -> iterate_numbers_node.numbers\n        iterate_numbers_node.missing -> missing_ai\n    }\n\n    func(doc: \"iterates through the list to find the smallest missing number.\") iterate_numbers {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n\n        numbers_ai -> for_node.items\n        for_node.on_item -> iterate_numbers_handler_node.trigger\n        iterate_numbers_handler_node.missing -> missing_ai\n\n        for_node.index -> iterate_numbers_handler_node.index\n        for_node.item -> iterate_numbers_handler_node.number\n        instance(x: 426, y: -603) iterate_numbers_handler_node root.main.iterate_numbers_handler {}\n\n        if_node.input -> iterate_numbers_if_condition_node.output\n        iterate_numbers_if_condition_node.output -> if_node.input\n\n        for_node.done -> iterate_numbers_done_node.trigger\n        instance(x: 426, y: -753) iterate_numbers_done_node root.main.iterate_numbers_done {}\n    }\n\n    func(doc: \"handles each number in the iteration.\") iterate_numbers_handler {\n        in(x: -426, y: -248, name: \"number\") property(Number) number_ai\n        in(x: -426, y: -378, name: \"index\") property(Number) index_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -453) if_node root.Std_k98ojb.If {}\n\n        MathExpression(x: 426, y: -603) iterate_numbers_if_condition_node {\n            expression = \"index + 1 != number\"\n        }\n        iterate_numbers_if_condition_node.output -> if_node.input\n\n        if_node.then -> return_missing_number_node.trigger\n        instance(x: 426, y: -753) return_missing_number_node root.main.return_missing_number {}\n    }\n\n    func(doc: \"returns the missing number when found.\") return_missing_number {\n        in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        MathExpression(x: 426, y: -303) calculate_missing_node {\n            expression = \"index + 1\"\n        }\n        calculate_missing_node.result -> missing_ai\n    }\n\n    func(doc: \"handles the completion of iteration.\") iterate_numbers_done {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing -> missing_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n\n        func(predicate) {\n            in(x: -426, y: -248, name: \"index\", value: 0) property(Number) index_ai\n            in(x: -426, y: -219, name: \"item\") property(Number) item_ai\n            out(x: 159, y: -219, name: \"result\") property(Bool) result_ai\n\n            instance(x: 426, y: -303) math_expr_node root.Std_k98ojb.Math.Expression {}\n            index_ai -> math_expr_node.index\n            item_ai -> math_expr_node.item\n\n            func(expression) {\n                in(x: -426, y: -248, name: \"item\") property(Number) item_expr_ai\n                in(x: -426, y: -219, name: \"index\") property(Number) index_expr_ai\n                out(x: 159, y: -219, name: \"result\") property(Bool) result_expr_ai\n\n                expression := `item != index + 1`\n            }\n\n            math_expr_node.result -> result_ai\n        } -> iteration_find_node.predicate\n\n        instance(x: 426, y: -303) math_expr_default_node root.Std_k98ojb.Math.Expression {}\n        func(expression) {\n            in(x: -426, y: -248, name: \"item\") property(Number) item_expr_default_ai\n            out(x: 159, y: -219, name: \"result\") property(Number) result_expr_default_ai\n\n            expression := `1 + item`\n        }\n\n        math_expr_default_node.result -> iteration_find_node.default_value\n        iteration_find_node.item -> missing_ai\n    }\n}\n\ninstance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) find_missing_node root.main.find_missing {}\n        numbers_ai -> find_missing_node.numbers\n        find_missing_node.missing_number -> missing_number_ai\n    }\n\n    func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing_number\") property(Number) missing_number_ai\n\n        instance(x: 426, y: -303) iteration_find_node root.Std_k98ojb.Iteration.Find {}\n        numbers_ai -> iteration_find_node.items\n\n        func(predicate) {\n            in(x: -426, y: -248, name: \"current\", index: 0) property(Number) current_ai\n            in(x: -426, y: -219, name: \"index\") property(Number) index_ai\n            out(x: 159, y: -219, name: \"result\") property(Bool) result_ai\n\n            instance(x: 426, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n            current_ai -> math_sub_node.first\n            index_ai + 1 -> math_sub_node.second\n            math_sub_node.result -> temp_result_ai\n\n            instance(x: 426, y: -150) logic_not_equal_node root.Std_k98ojb.Logic.NotEqual {}\n            temp_result_ai -> logic_not_equal_node.left\n            0 -> logic_not_equal_node.right\n            logic_not_equal_node.notEqual -> result_ai\n        } -> iteration_find_node.predicate\n\n        instance(x: 426, y: -150) math_floor_node root.Std_k98ojb.Math.Floor {}\n        iteration_find_node.index + 1 -> math_floor_node.input\n        math_floor_node.result -> missing_number_ai\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") smallest_missing_num {\n        in(x: -426, y: -248, name: \"numbers\") property(List) numbers_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        instance(x: 426, y: -303) for_node root.Std_k98ojb.For {}\n        numbers_ai -> for_node.items\n        for_node.trigger -> for_node.reset\n        for_node.on_item -> find_missing.handler\n\n        instance(x: 426, y: -403) find_missing_node root.main.find_missing {}\n        for_node.index -> find_missing_node.index\n        for_node.item -> find_missing_node.current_num\n        find_missing_node.missing -> missing_ai\n\n        func(doc: \"finds the smallest missing number in a sorted list.\") find_missing {\n            in(x: -426, y: -248, name: \"index\") property(Number) index_ai\n            in(x: -426, y: -303, name: \"current_num\") property(Number) current_num_ai\n            out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n            instance(x: 426, y: -378) if_node root.Std_k98ojb.If {}\n            index_ai -> if_node.input\n            if_node.then -> if_node.else\n\n            instance(x: 426, y: -453) math_expr_node root.Std_k98ojb.Math.Expression {}\n            math_expr_node.expression = \"index + 1\"\n            if_node.else -> math_expr_node.trigger\n            math_expr_node.result -> missing_ai\n\n            instance(x: 426, y: -528) math_expr_node2 root.Std_k98ojb.Math.Expression {}\n            math_expr_node2.expression = \"current_num - index - 1\"\n            if_node.then -> math_expr_node2.trigger\n            math_expr_node2.result -> missing_ai\n        }\n    }\n\n    \n    instance(x: 426, y: -303) smallest_missing_num_node root.main.smallest_missing_num {}\n\n    \n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4f7b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b9d5a3 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_f2e6c1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_4f7b8c.input\n        \" \" -> replace_4f7b8c.search\n        \":\" -> replace_4f7b8c.replace\n        replace_4f7b8c.output -> replace_b9d5a3.input\n        \",\" -> replace_b9d5a3.search\n        \":\" -> replace_b9d5a3.replace\n        replace_b9d5a3.output -> replace_f2e6c1.input\n        \".\" -> replace_f2e6c1.search\n        \":\" -> replace_f2e6c1.replace\n        replace_f2e6c1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_3f8b7d root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurences of space, comma and dot with colon.\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f8c9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_f4a6d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_e3a6e1 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7f8c9e.input\n        \" \" -> replace_7f8c9e.search\n        \":\" -> replace_7f8c9e.replace\n        replace_7f8c9e.output -> replace_f4a6d5.input\n        \",\" -> replace_f4a6d5.search\n        \":\" -> replace_f4a6d5.replace\n        replace_f4a6d5.output -> replace_e3a6e1.input\n        \".\" -> replace_e3a6e1.search\n        \":\" -> replace_e3a6e1.replace\n        replace_e3a6e1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_d9b2c5 root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3f6c8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_d9e4d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2e7b1c root.Std_k98ojb.Strings.Replace {}\n        replace_3f6c8a.output -> replace_d9e4d5.input\n        replace_d9e4d5.output -> replace_2e7b1c.input\n        \" \" -> replace_3f6c8a.search\n        \":\" -> replace_3f6c8a.replace\n        \",\" -> replace_d9e4d5.search\n        \":\" -> replace_d9e4d5.replace\n        \".\" -> replace_2e7b1c.search\n        \":\" -> replace_2e7b1c.replace\n        input_0 -> replace_3f6c8a.input\n        replace_2e7b1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDotsWithColon_9d4b5 root.main.replace_spaces_commas_dots_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_d4e3c6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas_e5f7d9 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_dots_f6g8h1 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_spaces_d4e3c6.input\n        \" \" -> replace_spaces_d4e3c6.search\n        \":\" -> replace_spaces_d4e3c6.replace\n\n        replace_spaces_d4e3c6.output -> replace_commas_e5f7d9.input\n        \",\" -> replace_commas_e5f7d9.search\n        \":\" -> replace_commas_e5f7d9.replace\n\n        replace_commas_e5f7d9.output -> replace_dots_f6g8h1.input\n        \".\" -> replace_dots_f6g8h1.search\n        \":\" -> replace_dots_f6g8h1.replace\n\n        replace_dots_f6g8h1.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_abc123 root.main.replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") text_replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_6c9f4a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3e5f8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_2d9e1d root.Std_k98ojb.Strings.Replace {}\n        replace_6c9f4a.output -> replace_3e5f8a.input\n        replace_3e5f8a.output -> replace_2d9e1d.input\n        \" ,\" -> replace_6c9f4a.search\n        \":\" -> replace_6c9f4a.replace\n        input_0 -> replace_6c9f4a.input\n        \".\" -> replace_3e5f8a.search\n        \":\" -> replace_3e5f8a.replace\n        \" \" -> replace_2d9e1d.search\n        \":\" -> replace_2d9e1d.replace\n        replace_2d9e1d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7f5a6c root.main.text_replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_4b7e9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_b8c3d5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_6f2b8d root.Std_k98ojb.Strings.Replace {}\n        replace_4b7e9a.output -> replace_b8c3d5.input\n        replace_b8c3d5.output -> replace_6f2b8d.input\n        \" \" -> replace_4b7e9a.search\n        \":\" -> replace_4b7e9a.replace\n        input_0 -> replace_4b7e9a.input\n        \",\" -> replace_b8c3d5.search\n        \":\" -> replace_b8c3d5.replace\n        \".\" -> replace_6f2b8d.search\n        \":\" -> replace_6f2b8d.replace\n        replace_6f2b8d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_f3a7e1 root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_4e3b5a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas_7d9f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_dots_b1c6d4 root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_spaces_4e3b5a.input\n        \" \" -> replace_spaces_4e3b5a.search\n        \":\" -> replace_spaces_4e3b5a.replace\n\n        replace_spaces_4e3b5a.output -> replace_commas_7d9f8c.input\n        \",\" -> replace_commas_7d9f8c.search\n        \":\" -> replace_commas_7d9f8c.replace\n\n        replace_commas_7d9f8c.output -> replace_dots_b1c6d4.input\n        \".\" -> replace_dots_b1c6d4.search\n        \":\" -> replace_dots_b1c6d4.replace\n\n        replace_dots_b1c6d4.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_3f8a7b root.main.text_replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_1f3b5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a9d4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8d2f7a root.Std_k98ojb.Strings.Replace {}\n        replace_1f3b5e.output -> replace_6a9d4c.input\n        replace_6a9d4c.output -> replace_8d2f7a.input\n        \" \" -> replace_1f3b5e.search\n        \":\" -> replace_1f3b5e.replace\n        \",\" -> replace_6a9d4c.search\n        \":\" -> replace_6a9d4c.replace\n        \".\" -> replace_8d2f7a.search\n        \":\" -> replace_8d2f7a.replace\n        input_0 -> replace_1f3b5e.input\n        replace_8d2f7a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_d4c6a9 root.main.replace_special_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replace all occurences of spaces, commas or dots with a colon\") text_replace_space_comma_dot_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7b8e9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_bf3d5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_4c2d1a root.Std_k98ojb.Strings.Replace {}\n        replace_7b8e9a.output -> replace_bf3d5c.input\n        replace_bf3d5c.output -> replace_4c2d1a.input\n        \" \" -> replace_7b8e9a.search\n        \":\" -> replace_7b8e9a.replace\n        \",\" -> replace_bf3d5c.search\n        \":\" -> replace_bf3d5c.replace\n        \".\" -> replace_4c2d1a.search\n        \":\" -> replace_4c2d1a.replace\n        input_0 -> replace_7b8e9a.input\n        replace_4c2d1a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpaceCommaDotWithColon_d3e5f6 root.main.text_replace_space_comma_dot_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_special_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_spaces_3b4c7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_commas_d42dce root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_dots_9a8e1b root.Std_k98ojb.Strings.Replace {}\n\n        input_0 -> replace_spaces_3b4c7f.input\n        \" \" -> replace_spaces_3b4c7f.search\n        \":\" -> replace_spaces_3b4c7f.replace\n\n        replace_spaces_3b4c7f.output -> replace_commas_d42dce.input\n        \",\" -> replace_commas_d42dce.search\n        \":\" -> replace_commas_d42dce.replace\n\n        replace_commas_d42dce.output -> replace_dots_9a8e1b.input\n        \".\" -> replace_dots_9a8e1b.search\n        \":\" -> replace_dots_9a8e1b.replace\n\n        replace_dots_9a8e1b.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpecialChars_e54b7f root.main.text_replace_special_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_7f5a4d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) equal_c8e1c6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_7f5a4d.input\n        characters_7f5a4d.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) expression_3b8a2e root.Std_k98ojb.Math.Expression {\n                expression: \"(element == first_char)\"\n            }\n            element_5f51f7 -> expression_3b8a2e.gen_1\n            map_6030c9.firstItem -> expression_3b8a2e.gen_0\n            expression_3b8a2e.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> equal_c8e1c6.left\n        map_6030c9.firstItem -> equal_c8e1c6.right\n        equal_c8e1c6.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        1 -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> expression_b720d7.gen_1\n        map_6030c9.length -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_9d2e4f root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> StringsCharacters_0e9c3c.input\n        StringsCharacters_0e9c3c.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) stringsToLower_c8b6d9 root.Std_k98ojb.Strings.ToLower {}\n            element_5f51f7 -> stringsToLower_c8b6d9.input\n            stringsToLower_c8b6d9.value -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        map_6030c9.output_list -> expression_9fba8c.gen_0\n        map_6030c9.output_list -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_2d9e4f root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1200, y: -400) equal_3d1e2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1456, y: -400) reduce_f7a9d8 root.Std_k98ojb.Iteration.Reduce {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_0f3e4b.input\n        strings_characters_0f3e4b.characters -> map_6030c9.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_b4554f root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_b4554f.left\n            input_f5c03d[0] -> equal_b4554f.right\n            equal_b4554f.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> reduce_f7a9d8.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Bool) element_5f51f7\n            in(x: -76, y: -47, name: \"accum\") property(Bool) accum_3e1a4c\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) and_b4554f root.Std_k98ojb.Logic.And {}\n            element_5f51f7 -> and_b4554f.left\n            accum_3e1a4c -> and_b4554f.right\n            and_b4554f.result -> out_d0fd24\n        } -> reduce_f7a9d8.handler\n\n        reduce_f7a9d8.accum -> if_07b8c7.predicate\n        execute_27b8c3 -> for_8cb3f6.reset\n        reduce_f7a9d8.result -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_0ebe66 root.main.all_chars_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        Strings.Characters(input_f5c03d) -> for_8cb3f6.items\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_1c3b4a root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_1c3b4a.left\n            Strings.FirstItem(Strings.Characters(input_f5c03d)) -> equal_1c3b4a.right\n            equal_1c3b4a.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> Iteration.Filter(filter_7f8e2a root.Std_k98ojb.Iteration.Filter {})\n        filter_7f8e2a.items -> Iteration.Find(find_3d4f1a root.Std_k98ojb.Iteration.Find {})\n        find_3d4f1a.predicate -> Logic.Not(not_5b9c6f root.Std_k98ojb.Logic.Not {})\n        find_3d4f1a.items -> not_5b9c6f.execute\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Bool) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) not_1c3b4a root.Std_k98ojb.Logic.Not {}\n            element_5f51f7 -> not_1c3b4a.execute\n            not_1c3b4a.result -> out_d0fd24\n        } -> find_3d4f1a.handler\n        find_3d4f1a.value -> if_e19a62.predicate\n        if_07b8c7.else -> continue_8ba06b\n        Iteration.Filter(filter_7f8e2a root.Std_k98ojb.Iteration.Filter {}) -> if_07b8c7.value\n        find_3d4f1a.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_9e5d7f root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_e6f3a2 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> characters_e6f3a2.input\n        characters_e6f3a2.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_f8a1b3 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> equal_f8a1b3.left\n            input_f5c03d.characters[0] -> equal_f8a1b3.right\n            equal_f8a1b3.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        expression_b720d7.result -> and_80a119.left\n        map_6030c9.output_list[0] -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d.characters[0] -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_f0be66 root.main.all_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> Strings_k98ojb.Characters.characters\n        Strings_k98ojb.Characters.characters -> generaterange_038fce.from\n        func() {\n            in(x: 0, y: -16, name: \"index\") property(Number) index_7a8f1e\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) getat_eb2d4 root.Std_k98ojb.List.GetAt {}\n            Strings_k98ojb.Characters.characters -> getat_eb2d4.list\n            index_7a8f1e -> getat_eb2d4.index\n            getat_eb2d4.item -> out_d0fd24\n        } -> map_6030c9.handler\n\n        1 -> generaterange_038fce.to\n        map_6030c9.output_list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_c6b1d root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d -> equal_c6b1d.left\n            element_5f51f7 -> equal_c6b1d.right\n            equal_c6b1d.result -> out_d0fd24\n        } -> for_8cb3f6.handler\n\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_same_char {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> characters_ae3b6c.input\n        characters_ae3b6c.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) equal_c9a1b8 root.Std_k98ojb.Logic.Equal {}\n            input_f5c03d -> equal_c9a1b8.left\n            element_5f51f7 -> equal_c9a1b8.right\n            equal_c9a1b8.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_same_char_7e1c5b root.main.is_same_char {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_f5c03d -> strings_characters_3e2f0a.input\n        strings_characters_3e2f0a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) strings_to_uppercase_f4a3b2 root.Std_k98ojb.Strings.ToUpper {}\n            element_5f51f7 -> strings_to_uppercase_f4a3b2.input\n            strings_to_uppercase_f4a3b2.value -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        strings_to_uppercase_f4a3b2.value -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        strings_to_uppercase_f4a3b2.value -> expression_9fba8c.gen_0\n        strings_to_uppercase_f4a3b2.value -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_same_chars {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n / i == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> Strings.Characters.characters\n        Strings.Characters.characters -> for_8cb3f6.items\n\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_f9d09 root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> eq_f9d09.left\n            Strings.Characters.characters[0] -> eq_f9d09.right\n            eq_f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n\n        map_6030c9.output_list -> Iteration.Filter.items\n        func() {\n            in(x: -76, y: 46, name: \"item\") property(Bool) item_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n            item_5f51f7 -> not_2f9d09.input\n            not_2f9d09.result -> out_d0fd24\n        } -> Iteration.Filter.handler\n\n        Iteration.Filter.output_list -> if_07b8c7.predicate\n        func() {\n            in(x: -76, y: 46, name: \"value\") property(Bool) value_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) eq_f9d09 root.Std_k98ojb.Logic.Equal {}\n            value_5f51c -> eq_f9d09.left\n            false -> eq_f9d09.right\n            eq_f9d09.result -> out_d0fd24\n        } -> if_07b8c7.value\n\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) all_same_chars_f0be66 root.main.all_same_chars {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") all_chars_same {\n        in(x: 354, y: -53, name: \"input\") property(String) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_e5f6d7 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n == i)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        input_f5c03d -> characters_e5f6d7.input\n        characters_e5f6d7.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            1 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) all_chars_same_f0be66 root.main.all_chars_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 99, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b.Characters -> count_digits_96023e.s_6b655b\n        isnumeric_adfa16.input -> count_digits_96023e.numeric_check\n        isnumeric_adfa16.result -> count_digits_96023e.is_numeric\n        count_digits_96023e.is_numeric -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -369) characters_bfa16d root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        \n        \"\" -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        \n        input_string_6b655b -> characters_bfa16d.input\n        characters_bfa16d.characters -> slice_547f34.list\n        0 -> slice_547f34.start\n        -1 -> slice_547f34.end\n\n        slice_547f34.output -> count_digits_96023e.characters_6b655b\n        \n        count_digits_96023e.continue_d9efd7 -> is_numeric_adfa16.execute\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> add_88bb8a.first\n        \n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n\n        count_digits_96023e.characters_6b655b -> slice_547f34.list\n        1 -> slice_547f34.start\n        \n        slice_547f34.output -> characters_bfa16d.input\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) is_numeric_bf8c3a root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 99, y: -127) characters_1e2b9f root.Std_k98ojb.Strings.Characters {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> characters_1e2b9f.input\n        characters_1e2b9f.characters -> count_digits_96023e.s_6b655b\n        s_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        characters_1e2b9f.characters -> is_numeric_bf8c3a.input\n        is_numeric_bf8c3a.value -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 80, y: -57) ifexpression_5f7e9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s[0])\"\n        }\n        instance(x: 395, y: -18) count_digits_2a1d4e root.main.count_digits {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        10 -> div_547f34.second\n        div_547f34.result -> count_digits_2a1d4e.s_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n        s_6b655b.Characters -> count_digits_2a1d4e.s_6b655b\n        0 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> ifexpression_5f7e9c.execute\n        ifexpression_5f7e9c.then -> count_digits_2a1d4e.execute_cdac2a\n        ifexpression_5f7e9c.else -> continue_d9efd7\n        count_digits_2a1d4e.continue_d9efd7 -> modulo_adfa16.divisor\n        count_digits_2a1d4e.output_732a8a -> add_88bb8a.second\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) isnumeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) length_61b38d root.Std_k98ojb.List.Length {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        slice_547f34.start -> length_61b38d.list\n        length_61b38d.length -> slice_547f34.end\n        s_6b655b -> slice_547f34.input\n        isnumeric_adfa16.value -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> count_digits_96023e.execute_cdac2a\n        slice_547f34.rest -> count_digits_96023e.s_6b655b\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        input_string_6b655b -> slice_547f34.input\n        0 -> slice_547f34.start\n        -1 -> slice_547f34.end\n        slice_547f34.output -> is_numeric_adfa16.input\n\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_1\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        1 -> add_88bb8a.first\n        getter(count) -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n\n        slice_547f34.output -> count_digits_96023e.input_string_6b655b\n        0 -> slice_547f34.start\n        -1 -> slice_547f34.end\n\n        getter(count) -> output_732a8a\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"input_string\") property(String) input_string_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_string == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n\n        execute_cdac2a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        input_string_6b655b -> count_digits_96023e.input_string_6b655b\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> add_88bb8a.first\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 99, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n\n        input_string_6b655b -> characters_547f34.input\n        characters_547f34.characters -> count_digits_96023e.characters\n\n        in_list(x: 97, y: -127) for_characters_1 {\n            items: characters_547f34.characters\n            on_item() item_trigger_1 {}\n            done() done_trigger_1 {}\n        }\n\n        item_trigger_1 -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_2.execute\n        instance(x: 395, y: -378) ifexpression_2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_numeric_adfa16.value\"\n        }\n        ifexpression_2.then -> add_88bb8a.first\n        done_trigger_1 -> for_characters_1.reset\n\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        1 -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b.Characters -> count_digits_96023e.s_6b655b\n        s_6b655b.Characters -> div_547f34.first\n        div_547f34.second: 1\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n        s_6b655b.Characters.IsNumeric -> count_digits_96023e.condition\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        10 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> add_88bb8a.first\n        0 -> setter_41e4ad.new_value\n        1 -> div_547f34.second\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.first\n\n        floor_61b38d.output -> modulo_adfa16.value\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        div_547f34.result -> count_digits_96023e.s_6b655b\n        count_digits_96023e.output_732a8a -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"s == ''\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) is_numeric_adfa16 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) slice_547f34 root.Std_k98ojb.List.Slice {}\n        instance(x: 97, y: -249) characters_547f34 root.Std_k98ojb.Strings.Characters {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> add_88bb8a.first\n        characters_547f34.characters -> slice_547f34.list\n        slice_547f34.start -> slice_547f34.end\n        slice_547f34.end -> slice_547f34.end - 1\n        slice_547f34.output -> is_numeric_adfa16.input\n        is_numeric_adfa16.value -> ifexpression_3d7de6.gen_0\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> slice_547f34.next\n        is_numeric_adfa16.value -> add_88bb8a.second\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> characters_547f34.input\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_a8c5d2 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_a8c5d2.gen_0\n        data_cde0dc -> pow_a8c5d2.y\n        expression_2d6da6.result -> pow_a8c5d2.x\n        pow_a8c5d2.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_instance root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -26) pow_1c8f7b root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_1c8f7b.x\n        data_instance(x: 330, y: 2) data_4d3e5c  = 4\n\n        instance(x: 23, y: -50) mul_9a5c0e root.Std_k98ojb.Math.Mul {}\n        pow_1c8f7b.result -> mul_9a5c0e.first\n        data_4d3e5c -> mul_9a5c0e.second\n\n        instance(x: 303, y: -75) div_6a2f1f root.Std_k98ojb.Math.Div {}\n        mul_9a5c0e.result -> div_6a2f1f.first\n        data_instance(x: 330, y: -52) data_b3d4a7  = 30\n\n        instance(x: 23, y: -101) add_f8b9b2 root.Std_k98ojb.Math.Add {}\n        div_6a2f1f.result -> add_f8b9b2.first\n        data_instance(x: 330, y: -80) data_7c3e5d  = 1\n\n        instance(x: 303, y: -126) for_a0e8c9 root.Std_k98ojb.Math.For {\n            items: List_k98ojb.List.GenerateRange(from: 1, to: n_3a3116)\n        }\n        add_f8b9b2.result -> sum_365f7b\n        for_a0e8c9.on_item -> add_f8b9b2.second\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_5d3e4a root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        instance(x: 303, y: -1) div_ae7f5b root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: -1) data_f9c4d8  = 3\n        div_ae7f5b.result -> sum_365f7b\n        div_64046c.result -> div_ae7f5b.first\n        data_f9c4d8 -> div_ae7f5b.second\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 400, y: -1) pow_9f8b7c root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_9f8b7c.x\n        data_instance(x: 450, y: 133) data_2a4d5e = 4\n        data_2a4d5e -> pow_9f8b7c.y\n\n        instance(x: 500, y: -1) sum_accumulator root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(a: Number, b: Number, i: Number, c: Any) {\n                return a + b\n            }\n        }\n\n        instance(x: 600, y: -26) for_loop root.Std_k98ojb.For {}\n        data_instance(x: 650, y: 133) data_1f2c3d = 1\n        n_3a3116 -> for_loop.items_length\n        List.GenerateRange(from: data_1f2c3d, to: n_3a3116 + 1) -> for_loop.items\n\n        pow_9f8b7c.result -> for_loop.item\n        sum_accumulator.accumulated -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_instance root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        data_instance(x: 330, y: 155) data_e5e7f4  = 1\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 23, y: 138) pow_9d8c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 12, y: 160) expression_5f7a2e root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        data_e5e7f4 -> pow_9d8c0e.y\n        div_64046c.result -> pow_9d8c0e.x\n        expression_5f7a2e.result -> mul_f892a4.first\n        n_3a3116 -> expression_5f7a2e.gen_0\n        data_cde0dc -> div_64046c.second\n        pow_9d8c0e.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_e4f3a1 root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_a0e4c2 root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        n_3a3116 -> pow_a0e4c2.gen_1\n        expression_2d6da6.result -> pow_a0e4c2.gen_0\n        instance(x: 303, y: 2) add_64046c root.Std_k98ojb.Math.Add {}\n        pow_a0e4c2.result -> add_64046c.first\n        data_cde0dc -> add_64046c.second\n        add_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -30) pow_5b8e7f root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5b8e7f.x\n        data_instance(x: 330, y: -27) data_1d4a3c = 4\n        data_1d4a3c -> pow_5b8e7f.y\n\n        instance(x: 303, y: -60) sum_f892a4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(acc: Number, value: Number) {\n                acc + value\n            }\n        }\n        pow_5b8e7f.result -> sum_f892a4.item\n        instance(x: 303, y: -80) for_2d6da6 root.Std_k98ojb.For {}\n        n_3a3116 -> for_2d6da6.items\n        sum_f892a4.accumulated -> sum_365f7b\n\n        for_2d6da6.on_item -> pow_5b8e7f.gen_0\n        pow_5b8e7f.result -> sum_f892a4.item\n        for_2d6da6.done -> sum_f892a4.trigger\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of fourth powers of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -1) pow_8c7b9f root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_8c7b9f.x\n        data_instance(x: 330, y: 133) data_cde0dc2 = 4\n        data_cde0dc2 -> pow_8c7b9f.y\n\n        instance(x: 303, y: -1) add_3e5d6a root.Std_k98ojb.Math.Add {}\n        sum_365f7b -> add_3e5d6a.first\n        pow_8c7b9f.result -> add_3e5d6a.second\n\n        instance(x: 23, y: -1) count_2f4d3b root.Std_k98ojb.Count {}\n        n_3a3116 -> count_2f4d3b.count\n        count_2f4d3b.reset -> sum_365f7b\n        add_3e5d6a.result -> sum_365f7b\n\n        instance(x: 23, y: -1) for_8b9c0d root.Std_k98ojb.For {}\n        data_instance(x: 330, y: 133) data_cde0dc3 = 1\n        data_instance(x: 330, y: 133) data_cde0dc4 = n_3a3116\n        List_generate_range(from: data_cde0dc3, to: data_cde0dc4 + 1) -> for_8b9c0d.items\n        count_2f4d3b.count -> for_8b9c0d.index\n        for_8b9c0d.next -> count_2f4d3b.increment\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth powers of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n\n        instance(x: 303, y: -20) pow_5e9c1f root.Std_k98ojb.Math.Pow {}\n        div_64046c.result -> pow_5e9c1f.x\n        data_instance(x: 330, y: -19) data_7d8a6f  = 4\n        data_7d8a6f -> pow_5e9c1f.y\n\n        pow_5e9c1f.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") fourth_power_sum {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) pow_8d4c5e root.Std_k98ojb.Math.Pow {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        pow_8d4c5e.result -> div_64046c.first\n        expression_2d6da6.result -> pow_8d4c5e.gen_1\n        n_3a3116 -> pow_8d4c5e.gen_0\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) fourth_power_sum_9dcc3d root.main.fourth_power_sum {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5a8f7d\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_b9c1e4\n\n        instance(x: 94, y: -105) mul_6b2a3d root.Std_k98ojb.Math.Mul {}\n        size_5a8f7d -> mul_6b2a3d.first\n        size_5a8f7d -> mul_6b2a3d.second\n        mul_6b2a3d.result -> surfaceArea_b9c1e4\n\n        instance(x: 94, y: -140) mul_7f8a4e root.Std_k98ojb.Math.Mul {}\n        mul_6b2a3d.result -> mul_7f8a4e.first\n        6 -> mul_7f8a4e.second\n        mul_7f8a4e.result -> surfaceArea_b9c1e4\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_3d8b2a root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1a2f3c\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_4b5d6e\n\n        instance(x: 94, y: -105) mul_7c8d9e root.Std_k98ojb.Math.Mul {}\n        size_1a2f3c -> mul_7c8d9e.first\n        size_1a2f3c -> mul_7c8d9e.second\n        mul_7c8d9e.result -> surfaceArea_4b5d6e\n\n        instance(x: 94, y: -140) mul_f0g1h2 root.Std_k98ojb.Math.Mul {}\n        mul_7c8d9e.result -> mul_f0g1h2.first\n        6 -> mul_f0g1h2.second\n        mul_f0g1h2.result -> surfaceArea_4b5d6e\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8e7f9c\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) mul_3d2a1f root.Std_k98ojb.Math.Mul {}\n        size_8e7f9c -> mul_3d2a1f.first\n        size_8e7f9c -> mul_3d2a1f.second\n        mul_3d2a1f.result -> result_cbb7bd\n\n        instance(x: 94, y: -138) mul_4b6a5d root.Std_k98ojb.Math.Mul {}\n        size_8e7f9c -> mul_4b6a5d.first\n        6 -> mul_4b6a5d.second\n        mul_3d2a1f.result -> mul_4b6a5d.first\n        mul_4b6a5d.result -> result_cbb7bd\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5c8f6e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_1a2b3d\n\n        instance(x: 94, y: -105) mul_4b7d9f root.Std_k98ojb.Math.Mul {}\n        size_5c8f6e -> mul_4b7d9f.first\n        size_5c8f6e -> mul_4b7d9f.second\n        mul_4b7d9f.result -> surface_area_1a2b3d\n\n        instance(x: 94, y: -140) mul_9c8f7e root.Std_k98ojb.Math.Mul {}\n        mul_4b7d9f.result -> mul_9c8f7e.first\n        6 -> mul_9c8f7e.second\n        mul_9c8f7e.result -> surface_area_1a2b3d\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_a1b2c3 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3f1d9a\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_8e5b7c\n\n        instance(x: 94, y: -105) mul_4e2d6c root.Std_k98ojb.Math.Mul {}\n        size_3f1d9a -> mul_4e2d6c.first\n        size_3f1d9a -> mul_4e2d6c.second\n        mul_4e2d6c.result -> surfaceArea_8e5b7c\n\n        instance(x: 94, y: -138) mul_2c0d3b root.Std_k98ojb.Math.Mul {}\n        mul_4e2d6c.result -> mul_2c0d3b.first\n        6 -> mul_2c0d3b.second\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_a9f7a8 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_7e4a1f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_8c9b5d\n\n        instance(x: 94, y: -105) mul_f0b6a3 root.Std_k98ojb.Math.Mul {}\n        size_7e4a1f -> mul_f0b6a3.first\n        6 -> mul_f0b6a3.second\n        mul_f0b6a3.result -> surface_area_8c9b5d\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b7e2d root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_8ee839\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_8ee839 -> mul_584bfd.first\n        6 -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_cbb7bd\n    }\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") cube_surface_area {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_1d3f7e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_9b4a8c\n\n        instance(x: 94, y: -105) mul_a5d2c6 root.Std_k98ojb.Math.Mul {}\n        size_1d3f7e -> mul_a5d2c6.first\n        size_1d3f7e -> mul_a5d2c6.second\n        mul_a5d2c6.result -> surface_area_temp_8c0a9b\n\n        instance(x: 94, y: -140) mul_b4e8fa root.Std_k98ojb.Math.Mul {}\n        6 -> mul_b4e8fa.first\n        surface_area_temp_8c0a9b -> mul_b4e8fa.second\n        mul_b4e8fa.result -> surface_area_9b4a8c\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_f1d2f7 root.main.cube_surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_5f7d2a\n\n        out(x: 656, y: -68, name: \"surfaceArea\") property(Number) surfaceArea_1c3e8b\n\n        instance(x: 94, y: -105) mul_4a9b6f root.Std_k98ojb.Math.Mul {}\n        size_5f7d2a -> mul_4a9b6f.first\n        size_5f7d2a -> mul_4a9b6f.second\n        func() {\n            in(x: -121, y: -37, name: \"result\") property(Number) result_f8e3c0\n\n            out(x: 333, y: -50, name: \"\") property(Number) _d5e7ab\n\n            instance(x: 92, y: -22) mul_9f2b4a root.Std_k98ojb.Math.Mul {}\n            result_f8e3c0 -> mul_9f2b4a.first\n            6 -> mul_9f2b4a.second\n            mul_9f2b4a.result -> _d5e7ab\n        } -> mul_4a9b6f.handler\n        mul_4a9b6f.result -> surfaceArea_1c3e8b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_cube_f7c2d9 root.main.surface_area_cube {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: -81, name: \"size\") property(Number) size_3a2d1f\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_f8b7c4\n\n        instance(x: 94, y: -105) mul_d9e5f6 root.Std_k98ojb.Math.Mul {}\n        size_3a2d1f -> mul_d9e5f6.first\n        size_3a2d1f -> mul_d9e5f6.second\n        mul_d9e5f6.result -> surface_area_f8b7c4\n\n        instance(x: 94, y: -150) mul_e4b7c9 root.Std_k98ojb.Math.Mul {}\n        mul_d9e5f6.result -> mul_e4b7c9.first\n        6 -> mul_e4b7c9.second\n        mul_e4b7c9.result -> surface_area_f8b7c4\n    }\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -383) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -463) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -403) list_min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> list_max_node.items\n        items_ai -> list_min_node.items\n\n        instance(x: 626, y: -303) math_sub_node root.Std_k98ojb.Math.Sub {}\n        \n        list_max_node.max -> math_sub_node.first\n        list_min_node.min -> math_sub_node.second\n        \n        math_sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_largest_smallest_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest values in a list.\") diff_largest_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value\n\n        instance(x: 426, y: -423) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value\n\n        instance(x: 426, y: -519) sub_node root.Std_k98ojb.Math.Sub {}\n        max_value -> sub_node.first\n        min_value -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_value property(Number)\n    instance(x: 426, y: -423) min_value property(Number)\n\n    instance(x: 426, y: -519) sub_node root.main.diff_largest_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_value_ai\n\n        instance(x: 426, y: -378) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_value_ai\n\n        instance(x: 426, y: -453) math_subtract_node root.Std_k98ojb.Math.Sub {}\n        max_value_ai -> math_subtract_node.first\n        min_value_ai -> math_subtract_node.second\n        math_subtract_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) max_value_ai property(Number)\n    instance(x: 426, y: -378) min_value_ai property(Number)\n\n    \n    instance(x: 426, y: -453) range_diff_node root.main.range_diff {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the difference between the largest and smallest values in a list.\") diff_max_min {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"difference\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -423) min_node root.Std_k98ojb.List.Min {}\n\n        items_ai -> max_node.items\n        items_ai -> min_node.items\n\n        instance(x: 426, y: -543) sub_node root.Std_k98ojb.Math.Sub {}\n        \n        max_node.max -> sub_node.first\n        min_node.min -> sub_node.second\n        sub_node.result -> diff_ai\n    }\n\n    \n    instance(x: 426, y: -303) diff_max_min_node root.main.diff_max_min {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a list.\") range_diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"range\") property(Number) range_ai\n\n        instance(x: 426, y: -303) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) max_node root.Std_k98ojb.List.Max {}\n        instance(x: 426, y: -503) sub_node root.Std_k98ojb.Math.Sub {}\n\n        items_ai -> min_node.items\n        items_ai -> max_node.items\n\n        min_node.min -> sub_node.first\n        max_node.max -> sub_node.second\n        sub_node.result -> range_ai\n    }\n\n    \n    instance(x: 426, y: -303) min_node root.main.range_diff {}\n    instance(x: 426, y: -403) max_node root.main.range_diff {}\n    instance(x: 426, y: -503) sub_node root.main.range_diff {}\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_1a3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n            then: true\n            else: false\n        }\n        num_ai -> if_1a3b7b.input\n        if_1a3b7b.value -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_node root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_node.input\n        if_node.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_1a3b5f root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_1a3b5f.input\n        if_1a3b5f.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"(number % 2 == 0)\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_even_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Boolean) is_even_ai\n        instance(x: 772, y: 76) if_1a2b3c root.Std_k98ojb.Std.If {\n            input: \"num % 2 == 0\"\n        }\n        num_ai -> if_1a2b3c.input\n        if_1a2b3c.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.CheckEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"number % 2 == 0\"\n        }\n        number_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) check_node root.main.IsEven {}\n\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") IsEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) num_ai\n        out(x: 340, y: 77, name: \"is_even\") property(Bool) is_even_ai\n        instance(x: 772, y: 76) if_7b3b7b root.Std_k98ojb.Std.If {\n            input: \"num_ai % 2 == 0\"\n        }\n        num_ai -> if_7b3b7b.input\n        if_7b3b7b.then -> is_even_ai\n    }\n\n}\n\ninstance(x: -34, y: 127) check_node root.main.IsEven {}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc:\"check if a number is even\") CheckEven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"isEven\") property(Boolean) isEven_ai\n        instance(x: 772, y: 76) check_even root.Std_k98ojb.Math.Modulo {\n            value: number_ai\n            divisor: 2\n        }\n        check_even.result -> isEven_ai\n    }\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_3f2a1d\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_7b4c8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1c2d8e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_before_4f3a9b root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) not_empty_5d6f3b root.Std_k98ojb.List.NotEmpty {}\n\n            list_before_4f3a9b.start -> -1\n            list_before_4f3a9b.end -> -1\n            input_string_3f2a1d -> list_before_4f3a9b.list\n\n            not_empty_5d6f3b.list -> list_before_4f3a9b.output_list\n\n            elem_9f6850 -> contains_1c2d8e.contains\n            list_before_4f3a9b.output_list -> contains_1c2d8e.input\n\n            contains_1c2d8e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 200, y: -50) characters_8e2b4f root.Std_k98ojb.Strings.Characters {}\n        characters_8e2b4f.input -> input_string_3f2a1d\n\n        list_before_4f3a9b.output_list -> find_6d05b0.items\n        find_6d05b0.item -> char_7b4c8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_d4e5f6\n\n        instance(x: 0, y: 0) find_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_a1b2c3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_x7y8z9\n\n            instance(x: 89, y: 29) contains_10d11e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) set_a1b2c3 root.Std_k98ojb.List.GetAt {}\n            instance(x: 410, y: 45) add_f4g5h6 root.Std_k98ojb.List.Add {}\n            instance(x: 510, y: 55) notempty_i7j8k9 root.Std_k98ojb.List.NotEmpty {}\n\n            contains_10d11e.input -> set_a1b2c3.list\n            add_f4g5h6.item -> elem_a1b2c3\n            add_f4g5h6.list -> find_7g8h9i.context\n            notempty_i7j8k9.isEmpty -> bool_x7y8z9\n\n            set_a1b2c3.index -> 0\n            contains_10d11e.contains -> bool_x7y8z9\n        } -> find_7g8h9i.predicate\n        instance(x: -150, y: 70) characters_12l13m root.Std_k98ojb.Strings.Characters {}\n        characters_12l13m.input -> input_1a2b3c\n        characters_12l13m.characters -> find_7g8h9i.items\n\n        instance(x: -200, y: 120) get_first_char root.Std_k98ojb.List.FirstItem {}\n        get_first_char.list -> find_7g8h9i.item\n        get_first_char.item -> char_d4e5f6\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_n3o4p5 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_first_repeated_char_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_jk1l2m\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_n3o4p5\n\n            instance(x: 89, y: 29) contains_6q7r8s root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_9t0u1v root.Std_k98ojb.List.Slice {}\n            instance(x: 150, y: 50) index_of_w2x3y4 root.Std_k98ojb.List.Find {}\n\n            current_char_jk1l2m -> contains_6q7r8s.contains\n            slice_9t0u1v.start -> index_of_w2x3y4.index + 1\n            input_string_1a2b3c -> slice_9t0u1v.list\n            -1 -> slice_9t0u1v.end\n\n            contains_6q7r8s.result -> is_repeated_n3o4p5\n        } -> find_first_repeated_char_7g8h9i.predicate\n        instance(x: 200, y: 100) characters_ab12c3 root.Std_k98ojb.Strings.Characters {}\n        input_string_1a2b3c -> characters_ab12c3.input\n        characters_ab12c3.characters -> find_first_repeated_char_7g8h9i.items\n        find_first_repeated_char_7g8h9i.item -> repeated_char_4d5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance_a1b2c3 root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_7f3d1a\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_b4e2c8\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_5c8b2e root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n\n            characters_1d4f3a: root.Std_k98ojb.Strings.Characters {}\n            elem_9f6850 -> characters_1d4f3a.input\n\n            instance(x: -50, y: 60) for_loop_ae2c8f root.Std_k98ojb.Iteration.Filter {}\n            func() {\n                in(x: -150, y: 70, name: \"item\") property(String) item_f5c9d7\n                out(x: 515, y: 80, name: \"bool\") property(Bool) bool_2e4f8b\n\n                instance(x: -90, y: 75) contains_5c8b2e_1 root.Std_k98ojb.Strings.Contains {}\n                item_f5c9d7 -> contains_5c8b2e_1.contains\n                characters_1d4f3a.characters -> contains_5c8b2e_1.input\n\n                notequal_807ffd_1: root.Std_k98ojb.Logic.NotEqual {}\n                contains_5c8b2e_1.result -> notequal_807ffd_1.left\n                elem_9f6850 -> notequal_807ffd_1.right\n\n                notequal_807ffd_1.result -> bool_2e4f8b\n            } -> for_loop_ae2c8f.handler\n            characters_1d4f3a.characters -> for_loop_ae2c8f.items\n\n            contains_5c8b2e.input -> contains_5c8b2e.contains\n            for_loop_ae2c8f.output_list -> contains_5c8b2e.list\n\n            contains_5c8b2e.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_string_7f3d1a -> find_6d05b0.items\n        find_6d05b0.item -> char_b4e2c8\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9f5d2b root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input\") property(String) input_3f4d2a\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_b7c8e9\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_d1a3f2\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9c8e7d\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notempty_807ffd root.Std_k98ojb.List.NotEmpty {}\n            instance(x: 410, y: 50) filter_9a3f7c root.Std_k98ojb.Iteration.Filter {}\n\n            contains_1088d5.input -> find_6d05b0.predicate\n            elem_d1a3f2 -> contains_1088d5.contains\n\n            instance(x: -100, y: 60) characters_a4f3e7 root.Std_k98ojb.Strings.Characters {}\n            characters_a4f3e7.input -> filter_9a3f7c.items\n            elem_d1a3f2 -> characters_a4f3e7.input\n\n            instance(x: -200, y: 80) list_abed4a root.Std_k98ojb.List.Empty {}\n\n            filter_9a3f7c.output_list -> list_abed4a\n            notempty_807ffd.list -> list_abed4a\n            notempty_807ffd.isEmpty -> bool_9c8e7d\n\n            list_abed4a -> contains_1088d5.input\n        } -> find_6d05b0.predicate\n        input_3f4d2a -> characters_a4f3e7.input\n        characters_a4f3e7.characters -> filter_9a3f7c.items\n        find_6d05b0.item -> char_b7c8e9\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_2c856f root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(String) char_d4e5f6\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"character\") property(String) character_7g8h9i\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_j0k1l2\n\n            instance(x: 89, y: 29) contains_3m4n5o root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_6p7q8r root.Std_k98ojb.List.Slice {}\n            instance(x: 150, y: 50) indexof_9s0t1u root.Std_k98ojb.List.Find {}\n\n            contains_3m4n5o.contains -> bool_j0k1l2\n            character_7g8h9i -> contains_3m4n5o.input\n\n            slice_6p7q8r.start -> 0\n            indexof_9s0t1u.index -> -1\n            slice_6p7q8r.end -> -1\n            indexof_9s0t1u.predicate -> contains_3m4n5o.contains\n\n            input_string_1a2b3c -> slice_6p7q8r.list\n            slice_6p7q8r.output_list -> indexof_9s0t1u.items\n\n            indexof_9s0t1u.item -> character_7g8h9i\n        } -> find_first_repeated.predicate\n        input_string_1a2b3c -> find_first_repeated.items\n        find_first_repeated.item -> char_d4e5f6\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2c3d\n\n        out(x: 593, y: -1, name: \"repeated_char\") property(Char) repeated_char_4b5e6f\n\n        instance(x: 0, y: 0) find_first_repeated root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_7g8h9i\n\n            out(x: 515, y: 44, name: \"is_repeated\") property(Bool) is_repeated_jk0l1m\n\n            instance(x: 89, y: 29) contains_2n3o4p root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_before_qr5s6t root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) list_to_string_u7v8w9x root.Std_k98ojb.Strings.Join {}\n\n            char_7g8h9i -> contains_2n3o4p.contains\n            list_before_qr5s6t.listWithoutItem -> contains_2n3o4p.input\n\n            0 -> list_to_string_u7v8w9x.separator\n            list_before_qr5s6t.listWithItem -> list_to_string_u7v8w9x.items\n\n            contains_2n3o4p.result -> is_repeated_jk0l1m\n\n        } -> find_first_repeated.predicate\n        instance(x: -200, y: 100) characters_abc123 root.Std_k98ojb.Strings.Characters {}\n        input_string_1a2c3d -> characters_abc123.input\n        characters_abc123.characters -> list_before_qr5s6t.start\n\n        list_to_string_u7v8w9x.result -> list_before_qr5s6t.end\n\n        find_first_repeated.item -> repeated_char_4b5e6f\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"character\") property(String) repeated_char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(String) current_char_j1k2l3\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_m4n5o6p\n\n            instance(x: 89, y: 29) contains_7q8r9s root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) list_1t2u3v root.Std_k98ojb.List.Empty {}\n            instance(x: 150, y: 50) add_4w5x6y root.Std_k98ojb.List.Add {}\n\n            current_char_j1k2l3 -> contains_7q8r9s.contains\n            list_1t2u3v.list -> contains_7q8r9s.input\n\n            contains_7q8r9s.result -> is_repeated_m4n5o6p\n\n            add_4w5x6y.item -> current_char_j1k2l3\n            add_4w5x6y.list -> list_1t2u3v.listWithItem\n        } -> find_repeated_7g8h9i.predicate\n        input_string_1a2b3c -> find_repeated_7g8h9i.items\n        find_repeated_7g8h9i.item -> repeated_char_4d5e6f\n    }\n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"input_string\") property(String) input_string_1a2b3c\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4d5e6f\n\n        instance(x: 0, y: 0) find_repeated_char root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) current_char_g7h8i9\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) is_repeated_j0k1l2\n\n            instance(x: 89, y: 29) contains_3m4n5o root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) slice_pqrs_tuv root.Std_k98ojb.List.Slice {}\n            instance(x: 150, y: 60) characters_xyz root.Std_k98ojb.Strings.Characters {}\n\n            current_char_g7h8i9 -> contains_3m4n5o.item\n            slice_pqrs_tuv.output_list -> contains_3m4n5o.list\n\n            0 -> slice_pqrs_tuv.start\n            characters_xyz.characters -> slice_pqrs_tuv.list\n            current_char_g7h8i9.index + 1 -> slice_pqrs_tuv.end\n            contains_3m4n5o.result -> is_repeated_j0k1l2\n\n        } -> find_repeated_char.predicate\n        characters_xyz.characters -> find_repeated_char.items\n        find_repeated_char.item -> char_4d5e6f\n        input_string_1a2b3c -> characters_xyz.input\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_instance root.main.first_repeated_char {}\n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: -0, name: \"string\") property(String) string_3f4a7e\n\n        out(x: 593, y: -1, name: \"character\") property(Char) char_5d9b2c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"char\") property(Char) char_1a7f3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_b9c8d2\n\n            instance(x: 89, y: 29) contains_5b6c4d root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_3a7f1e root.Std_k98ojb.List.Slice {}\n            instance(x: 410, y: 45) notempty_b2a8fd root.Std_k98ojb.List.NotEmpty {}\n\n            char_1a7f3e -> contains_5b6c4d.contains\n            slice_3a7f1e.start -> -1\n            slice_3a7f1e.end -> -1\n            string_3f4a7e -> slice_3a7f1e.list\n\n            notempty_b2a8fd.list -> contains_5b6c4d.input\n            contains_5b6c4d.result -> bool_b9c8d2\n        } -> find_6d05b0.predicate\n        string_3f4a7e -> find_6d05b0.items\n        find_6d05b0.item -> char_5d9b2c\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_8f7b3d root.main.first_repeated_char {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_filter_node root.Std_k98ojb.Iteration.Filter {}\n        items_ai -> list_filter_node.items\n        instance(x: 426, y: -423) filter_handler_node root.Std_k98ojb.Iteration.Handler {}\n        list_filter_node.handler -> filter_handler_node.instance\n        instance(x: 426, y: -518) handler_input_node root.Std_k98ojb.Number.Input {}\n        filter_handler_node.input_0 -> handler_input_node.number\n        instance(x: 426, y: -613) handler_output_node root.Std_k98ojb.Logic.NotEqual {}\n        handler_input_node.output -> handler_output_node.left\n        list_filter_node.items -> handler_output_node.right\n        instance(x: 426, y: -708) filter_output_node root.Std_k98ojb.List.Output {}\n        list_filter_node.output_list -> filter_output_node.list\n        instance(x: 426, y: -803) min_node root.Std_k98ojb.List.Min {}\n        filter_output_node.list -> min_node.list\n\n        instance(x: 426, y: -898) remove_min_node root.Std_k98ojb.Iteration.Filter {}\n        filter_output_node.list -> remove_min_node.items\n        instance(x: 426, y: -993) handler_input_2_node root.Std_k98ojb.Number.Input {}\n        min_node.min -> handler_input_2_node.number\n        instance(x: 426, y: -1088) handler_output_2_node root.Std_k98ojb.Logic.Equal {}\n        remove_min_node.handler -> handler_output_2_node.instance\n        handler_input_2_node.output -> handler_output_2_node.left\n        remove_min_node.items -> handler_output_2_node.right\n        instance(x: 426, y: -1183) filter_output_2_node root.Std_k98ojb.List.Output {}\n        remove_min_node.output_list -> filter_output_2_node.list\n\n        min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -898) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        instance(x: 426, y: -588) list_getat_node root.Std_k98ojb.List.GetAt {}\n        list_slice_node.slice -> list_getat_node.list\n        instance(x: 426, y: -723) min_node root.Std_k98ojb.List.Min {}\n        list_getat_node.item -> min_node.list\n\n        list_sort_node.sorted -> second_min_ai\n        list_getat_node.item -> min_node.list\n        min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        property(Number) index = 1\n        index -> list_slice_node.start\n        property(Number) end = -1\n        end -> list_slice_node.end\n\n        instance(x: 426, y: -519) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.slice -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_first_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_first_min_node.items\n        list_first_min_node.min -> remove_item_ai\n        \n        instance(x: 426, y: -438) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_remove_node.list\n        remove_item_ai -> list_remove_node.index\n        list_remove_node.listWithoutItem -> filtered_list_ai\n\n        instance(x: 426, y: -558) list_second_min_node root.Std_k98ojb.List.Min {}\n        filtered_list_ai -> list_second_min_node.items\n        list_second_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) first_min_node root.main.second_smallest_num {}\n    instance(x: 426, y: -438) remove_item_node root.main.second_smallest_num {}\n    instance(x: 426, y: -558) second_min_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -453) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.list -> list_slice_node.list\n        property(Number)(x: 426, y: -483) start_index { value: 1 }\n        property(Number)(x: 426, y: -513) end_index { value: 2 }\n        list_slice_node.start -> start_index.value\n        list_slice_node.end -> end_index.value\n        \n        instance(x: 426, y: -558) list_first_item_node root.Std_k98ojb.List.FirstItem {}\n        list_slice_node.list -> list_first_item_node.list\n        list_first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -453) slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.listWithItem -> slice_node.list\n        slice_node.start = 1\n        slice_node.end = -1\n        slice_node.listWithoutSlice -> temp_list_ai\n\n        instance(x: 426, y: -588) list_min_node root.Std_k98ojb.List.Min {}\n        temp_list_ai -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.list\n\n        instance(x: 426, y: -423) list_slice_node root.Std_k98ojb.List.Slice {}\n        list_sort_node.sorted -> list_slice_node.list\n        list_slice_node.start = 1\n        list_slice_node.end = 2\n        list_slice_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node root.Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        list_sort_node.list -> slice_node.sorted_list\n\n        instance(x: 426, y: -423) slice_node Iteration_k98ojb.List.Slice {\n            start: 1,\n            end: -1\n        }\n        slice_node.sorted_list <- list_sort_node.list\n        slice_node.slice -> find_min_node.items\n\n        instance(x: 426, y: -519) find_min_node root.Std_k98ojb.List.Min {}\n        find_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_first_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_first_min_node.items\n        list_first_min_node.min -> first_min_ai\n        \n        instance(x: 426, y: -423) filter_greater_than_first_min_node root.Std_k98ojb.Iteration.Filter {\n            handler = func(it: Number) -> Bool {\n                in(x: -426, y: -248, name: \"it\") property(Number) it_ai\n                out(x: 159, y: -219, name: \"result\") property(Bool) result_ai\n\n                instance(x: 426, y: -303) compare_node root.Std_k98ojb.Math.GreaterThan {}\n                it_ai -> compare_node.left\n                first_min_ai -> compare_node.right\n                compare_node.result -> result_ai\n            }\n        }\n        items_ai -> filter_greater_than_first_min_node.items\n        filter_greater_than_first_min_node.output_list -> filtered_items_ai\n        \n        instance(x: 426, y: -519) list_second_min_node root.Std_k98ojb.List.Min {}\n        filtered_items_ai -> list_second_min_node.items\n        list_second_min_node.min -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) first_min_ai Number\n    instance(x: 426, y: -423) filter_greater_than_first_min_node root.main.second_smallest_num {}\n    instance(x: 426, y: -519) list_second_min_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_sort_node Std_k98ojb.List.Sort {}\n        items_ai -> list_sort_node.items\n        \n        instance(x: 426, y: -423) slice_list_node Std_k98ojb.List.Slice {}\n        list_sort_node.listWithoutItem -> slice_list_node.list\n        number_1 := 1\n        slice_list_node.start -> number_1\n        number_2 := 2\n        slice_list_node.end -> number_2\n\n        instance(x: 426, y: -519) first_item_node Std_k98ojb.List.FirstItem {}\n        slice_list_node.listWithoutItem -> first_item_node.list\n        first_item_node.item -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    }
]