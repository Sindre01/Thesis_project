[
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 7268,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -193, y: -103, name: \"list1\") property(List) list1_9a2f8e\n        in(x: -201, y: 17, name: \"list2\") property(List) list2_4b0c6d\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2f8e -> intersection_4e8c54.left\n        list2_4b0c6d -> intersection_4e8c54.right\n        instance(x: 245, y: -27) notempty_5f7b3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersection -> notempty_5f7b3f.list\n        notempty_5f7b3f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -193, y: -154, name: \"list1\") property(List) list1_3a0f8e\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_7c9b6d\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f8e -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_7c9b6d\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -299, y: -214, name: \"list1\") property(List) list1_2f3e6d\n        in(x: -309, y: -435, name: \"list2\") property(List) list2_7a9b0c\n\n        out(x: 1265, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -303, y: -205, name: \"intersection\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_2f3e6d -> intersection_c7c7e6.left\n        list2_7a9b0c -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> contains_32727d.list\n        0 -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -289, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -297, y: 34, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: 49, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -193, y: -86, name: \"list1\") property(List) list1_2a3f9e\n        in(x: -181, y: 18, name: \"list2\") property(List) list2_4c6b5d\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_2a3f9e -> intersection_4e8c54.left\n        list2_4c6b5d -> intersection_4e8c54.right\n        instance(x: 245, y: -54) notempty_c0f7c8 root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersection -> notempty_c0f7c8.list\n        notempty_c0f7c8.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -290, y: -86, name: \"list1\") property(List) list1_4e9b2f\n        in(x: -298, y: 31, name: \"list2\") property(List) list2_5a0c3d\n\n        out(x: 558, y: 13, name: \"output\") property(Bool) output_7b8f4e\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: -95) notempty_1a0d5f root.Std_k98ojb.List.NotEmpty {}\n        list1_4e9b2f -> intersection_c7c7e6.left\n        list2_5a0c3d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1a0d5f.list\n        notempty_1a0d5f.isEmpty -> output_7b8f4e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -177, y: -111, name: \"list1\") property(List) list1_9e8f2d\n        in(x: -183, y: 39, name: \"list2\") property(List) list2_5b7a3c\n\n        out(x: 1020, y: 12, name: \"output\") property(Bool) output_6b1d4e\n\n        instance(x: 450, y: -11) intersection_c9f8ba root.Std_k98ojb.Sets.Intersection {}\n        list1_9e8f2d -> intersection_c9f8ba.left\n        list2_5b7a3c -> intersection_c9f8ba.right\n        instance(x: 741, y: -4) notempty_6a0d4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c9f8ba.intersection -> notempty_6a0d4c.list\n        notempty_6a0d4c.isEmpty -> output_6b1d4e\n    }\n\n    \n\n    instance(x: 53, y: -68) intersection_e7e5a2 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -255, y: -86, name: \"list1\") property(List) list1_4e9b5f\n        in(x: -273, y: 30, name: \"list2\") property(List) list2_7c0a6d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_4a8f5d root.Std_k98ojb.Math.GreaterThan {}\n        list1_4e9b5f -> intersection_c7c7e6.left\n        list2_7c0a6d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        0 -> greaterthan_4a8f5d.left\n        length_8166b0.length -> greaterthan_4a8f5d.right\n        greaterthan_4a8f5d.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -185, y: -186, name: \"list1\") property(List) list1_3a9b2f\n        in(x: -195, y: 31, name: \"list2\") property(List) list2_5e8c6d\n\n        out(x: 1057, y: -177, name: \"output\") property(Bool) output_4f1f0a\n\n        instance(x: 101, y: -176) intersection_9b3f9c root.Std_k98ojb.Sets.Intersection {}\n        list1_3a9b2f -> intersection_9b3f9c.left\n        list2_5e8c6d -> intersection_9b3f9c.right\n        instance(x: 507, y: -177) notempty_4e7c0c root.Std_k98ojb.List.NotEmpty {}\n        intersection_9b3f9c.intersection -> notempty_4e7c0c.list\n        notempty_4e7c0c.isEmpty -> output_4f1f0a\n    }\n\n    \n\n    instance(x: 12, y: -67) intersection_8d5f6c root.main.intersection {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c7097f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c7097f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: 1, name: \"list\") property(List) list_4e9a2f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4e9a2f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4e9a2f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"list1\") property(List) list1_5f8b9e\n        in(x: -284, y: 130, name: \"list2\") property(List) list2_6a4c0d\n\n        out(x: 557, y: 95, name: \"output\") property(Bool) output_3a1b5f\n\n        instance(x: -92, y: 94) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 93) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 92) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_5f8b9e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_6a4c0d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list1_5f8b9e -> equal_f89569.right\n        equal_f89569.result -> output_3a1b5f\n    }\n\n    \n\n    instance(x: -84, y: 219) is_sublist_2c6d4 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_5e9f8d\n        in(x: -485, y: -215, name: \"mainList\") property(List) main_list_7c1b0a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_2a4c3f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6d9e2f\n\n        instance(x: 752, y: 93) ifexpression_7b1a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7b1a5f.else -> continue_2a4c3f\n        ifexpression_7b1a5f.value -> output_6d9e2f\n        ifexpression_7b1a5f.then -> setter_9d4f1c.execute\n        main_list_7c1b0a -> for_d26972.items\n        for_d26972.item -> ifexpression_7b1a5f.gen_2\n        for_d26972.index -> ifexpression_7b1a5f.gen_0\n        getter_b280eb.value -> ifexpression_7b1a5f.gen_1\n        for_d26972.onItem -> ifexpression_7b1a5f.execute\n        for_d26972.done -> continue_2a4c3f\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7c1b0a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        sub_list_5e9f8d -> for_d26972.items\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_5b7a2f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 5, name: \"subList\") property(List) sub_list_1e8f2d\n        in(x: -303, y: -165, name: \"mainList\") property(List) main_list_6a7c4b\n\n        out(x: 1090, y: -105, name: \"output\") property(Bool) output_5f9f1e\n\n        instance(x: -100, y: -107, name: \"find sublist in main list\") find_2d8c3a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 79, name: \"_index\") property(Number) _index_769593\n            in(x: -23, y: -25, name: \"current\") property(List) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> find_2d8c3a.predicate\n        func() {\n            in(x: -30, y: 79, name: \"_index\") property(Number) _index_769593\n            in(x: -23, y: -25, name: \"current\") property(List) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> find_2d8c3a.handler\n        instance(x: 0, y: -110) slice_7f9e5f root.Std_k98ojb.List.Slice {}\n        main_list_6a7c4b -> find_2d8c3a.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            current_81298e -> modulo_c76d2b.value\n        } -> slice_7f9e5f.start\n        sub_list_1e8f2d -> slice_7f9e5f.end\n        find_2d8c3a.item -> slice_7f9e5f.list\n        instance(x: 0, y: -4) equal_6b7e7f root.Std_k98ojb.Logic.Equal {}\n        sub_list_1e8f2d -> equal_6b7e7f.left\n        slice_7f9e5f.slice -> equal_6b7e7f.right\n        equal_6b7e7f.result -> output_5f9f1e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_3a8d2c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_1e8f0d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_7a3b5c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7a3b5c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7a3b5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_1e8f0d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_5e9f1d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_3a2c8b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_3a2c8b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_3a2c8b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_5e9f1d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 30, name: \"list1\") property(List) list1_2a3b4f\n        in(x: -444, y: -134, name: \"list2\") property(List) list2_9c5e6d\n\n        out(x: 1187, y: -125, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: -293, y: -124, name: \"is sublist\") filter_4b1f0a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -118) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -13, name: \"current\") property(List) current_81298e\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_9c7b2a root.Std_k98ojb.List.Contains {}\n            list2_9c5e6d -> contains_9c7b2a.list\n            current_81298e -> contains_9c7b2a.item\n        } -> filter_4b1f0a.handler\n        instance(x: 246, y: -125, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) contains_9c7b2a root.Std_k98ojb.List.Contains {}\n            list2_9c5e6d -> contains_9c7b2a.list\n            current_81298e -> contains_9c7b2a.item\n        } -> map_c73e3b.handler\n        filter_4b1f0a.output_list -> map_c73e3b.items\n        instance(x: 1058, y: -119) not_75283f root.Std_k98ojb.Logic.Not {}\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n        list1_2a3b4f -> filter_4b1f0a.items\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_3e9f5d\n        in(x: -485, y: -115, name: \"mainList\") property(List) main_list_7a4b1c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7a4b1c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7a4b1c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_3e9f5d -> getat_ce2a48.valueAtIndex\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 30, name: \"list1\") property(List) list1_2a3b8f\n        in(x: -450, y: -145, name: \"list2\") property(List) list2_7c6e0d\n\n        out(x: 1215, y: -15, name: \"output\") property(Bool) output_9f4a1f\n\n        instance(x: -278, y: -20, name: \"filter sublist\") filter_3b8a2d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -17) contains_5e0c6c root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_9f8d7a\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1c2e6b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_5b0f4f\n\n            instance(x: 226, y: 56) contains_7d8a9f root.Std_k98ojb.List.Contains {}\n            list2_7c6e0d -> contains_7d8a9f.list\n            current_9f8d7a -> contains_7d8a9f.item\n            contains_7d8a9f.is_contained -> output_5b0f4f\n        } -> filter_3b8a2d.handler\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_1e6c4f root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_8a3d9f\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_1e6c4f\n\n            instance(x: 74, y: -23) length_5b0f4f root.Std_k98ojb.List.Length {}\n            current_8a3d9f -> length_5b0f4f.list\n            length_5b0f4f.length -> bool_1e6c4f\n        } -> map_1e6c4f.handler\n        filter_3b8a2d.output_list -> map_1e6c4f.items\n        map_1e6c4f.output_list -> contains_5e0c6c.list\n        true -> contains_5e0c6c.item\n        contains_5e0c6c.is_contained -> output_9f4a1f\n        instance(x: -303, y: 30) getat_3b8a2d root.Std_k98ojb.List.GetAt {}\n        list1_2a3b8f -> getat_3b8a2d.list\n        func() {\n            in(x: -0, y: -121, name: \"new_value\") property(Number) _index_5b0f4f\n\n            out(x: 679, y: -313, name: \"continue\") trigger() continue_1e6c4f\n\n            instance(x: -275, y: -35) getat_7d8a9f root.Std_k98ojb.List.GetAt {}\n            list1_2a3b8f -> getat_7d8a9f.list\n            _index_5b0f4f -> getat_7d8a9f.index\n            instance(x: 321, y: -20) for_5e0c6c root.Std_k98ojb.Std.For {}\n            list2_7c6e0d -> for_5e0c6c.items\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_1e6c4f\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_7d8a9f\n\n                instance(x: 226, y: 56) equal_5b0f4f root.Std_k98ojb.Logic.Equal {}\n                getat_7d8a9f.itemAtIndex -> equal_5b0f4f.left\n                current_1e6c4f -> equal_5b0f4f.right\n                equal_5b0f4f.result -> output_7d8a9f\n            } -> for_5e0c6c.onItem\n            getat_3b8a2d.itemAtIndex -> for_5e0c6c.index\n            for_5e0c6c.done -> continue_1e6c4f\n        } -> getat_3b8a2d.handler\n        0 -> getat_3b8a2d.index\n        instance(x: -275, y: 30) getat_7d8a9f root.Std_k98ojb.List.GetAt {}\n        list1_2a3b8f -> getat_7d8a9f.list\n        func() {\n            in(x: -0, y: -121, name: \"new_value\") property(Number) _index_5b0f4f\n\n            out(x: 679, y: -313, name: \"continue\") trigger() continue_1e6c4f\n\n            instance(x: -275, y: -35) getat_7d8a9f root.Std_k98ojb.List.GetAt {}\n            list1_2a3b8f -> getat_7d8a9f.list\n            _index_5b0f4f -> getat_7d8a9f.index\n            instance(x: 321, y: -20) for_5e0c6c root.Std_k98ojb.Std.For {}\n            list2_7c6e0d -> for_5e0c6c.items\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) current_1e6c4f\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_7d8a9f\n\n                instance(x: 226, y: 56) equal_5b0f4f root.Std_k98ojb.Logic.Equal {}\n                getat_7d8a9f.itemAtIndex -> equal_5b0f4f.left\n                current_1e6c4f -> equal_5b0f4f.right\n                equal_5b0f4f.result -> output_7d8a9f\n            } -> for_5e0c6c.onItem\n            getat_3b8a2d.itemAtIndex -> for_5e0c6c.index\n            for_5e0c6c.done -> continue_1e6c4f\n        } -> getat_7d8a9f.handler\n        0 -> getat_7d8a9f.index\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_5b0f4f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_3a2f8d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_7e6b9c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7e6b9c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7e6b9c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_3a2f8d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"subList\") property(List) sub_list_1e8b3f\n        in(x: -485, y: 155, name: \"mainList\") property(List) main_list_2c9a7d\n\n        out(x: 1227, y: 140, name: \"output\") property(Bool) output_6e0f1f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_2c9a7d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sub_list_1e8b3f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f9c5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 71, name: \"index\") property(Number) index_8c1e6d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b2f3a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_9b2f3a.result -> notequal_807ffd.left\n            index_8c1e6d -> sub_9b2f3a.first\n            elem_9f6850 -> sub_9b2f3a.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4b8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_8c1e6d\n\n            instance(x: 89, y: 29) list_length_5b2a7f root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) minus_3c9b4f root.Std_k98ojb.Math.Sub {}\n            instance(x: 311, y: 71) plus_1e0d6e root.Std_k98ojb.Math.Add {}\n            list_length_5b2a7f.length -> minus_3c9b4f.first\n            1 -> minus_3c9b4f.second\n            index_8c1e6d -> plus_1e0d6e.first\n            minus_3c9b4f.result -> plus_1e0d6e.second\n            list_length_5b2a7f.length -> plus_1e0d6e.second\n        } -> find_6d05b0.index_handler\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"context\") property(Number) context_7c3e8d\n\n            instance(x: 89, y: 29) list_length_5b2a7f root.Std_k98ojb.List.Length {}\n            list_length_5b2a7f.length -> context_7c3e8d\n        } -> find_6d05b0.context_handler\n        find_6d05b0.item -> missing_number_7f9c5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f9e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c2d5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 68, name: \"index\") property(Number) index_7c1e6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b0f2d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_9b0f2d.result -> notequal_807ffd.left\n            index_7c1e6a -> sub_9b0f2d.first\n            elem_9f6850 -> sub_9b0f2d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a8f9e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_7c1e6a\n\n            instance(x: 89, y: 29) list_length_3b5d8f root.Std_k98ojb.List.Length {}\n            elem_9f6850 -> list_length_3b5d8f.list\n            list_length_3b5d8f.length -> index_7c1e6a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_7c2d5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_1f9b8a\n\n        out(x: 592, y: -1, name: \"missing\") property(Number) missing_3e6c7d\n\n        instance(x: 0, y: 0) find_5c4f2e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: -40, name: \"index\") property(Number) index_1e8c5d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: -56) add_7e3c4f root.Std_k98ojb.Math.Add {}\n            index_1e8c5d -> add_7e3c4f.first\n            1 -> add_7e3c4f.second\n            add_7e3c4f.result -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5c4f2e.predicate\n        list_1f9b8a -> find_5c4f2e.items\n        add_7e3c4f.result -> missing_3e6c7d\n        find_5c4f2e.index -> index_1e8c5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9a0b3f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8b6a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 107, name: \"index\") property(Number) index_3c7e1a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2f9d6b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2f9d6b.result -> notequal_807ffd.left\n            index_3c7e1a -> sub_2f9d6b.first\n            elem_9f6850 -> sub_2f9d6b.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8b6a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_3c7e1a\n\n            instance(x: 89, y: 29) list_length_5d6b2e root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) minus_4f9f8c root.Std_k98ojb.Math.Sub {}\n            elem_9f6850 -> minus_4f9f8c.first\n            list_length_5d6b2e.length -> minus_4f9f8c.second\n            minus_4f9f8c.result -> index_3c7e1a\n        } -> find_6d05b0.indexer\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1f9e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c6b5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 64, name: \"index\") property(Number) index_7c8a2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 311, y: 65) sub_2a3f9c root.Std_k98ojb.Math.Sub {}\n            1 -> sub_2a3f9c.second\n            index_7c8a2e -> sub_2a3f9c.first\n            sub_2a3f9c.result -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1f9e -> find_6d05b0.items\n        find_6d05b0.index -> index_7c8a2e\n        sub_2a3f9c.result -> missing_number_7c6b5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1c4f5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 64, name: \"index\") property(Number) index_ae8c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ae8c6a -> add_1088d5.first\n            1 -> add_1088d5.second\n            elem_9f6850 -> notequal_807ffd.left\n            add_1088d5.result -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.index -> missing_number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f5b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 85, name: \"index\") property(Number) index_1e7c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e7c5a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f5b8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_1e7c5a\n\n            instance(x: 89, y: 29) count_6b8d3f root.Std_k98ojb.Count {}\n            elem_9f6850 -> count_6b8d3f.count\n            count_6b8d3f.count -> index_1e7c5a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f8d5a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 63, name: \"index\") property(Number) index_7c8a1e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 312, y: 63) add_7f1e6c root.Std_k98ojb.Math.Add {}\n            index_7c8a1e -> add_7f1e6c.first\n            1 -> add_7f1e6c.second\n            add_7f1e6c.result -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d5a -> find_6d05b0.items\n        find_6d05b0.index -> index_7c8a1e\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f3b6a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7e9c8d\n\n        instance(x: 0, y: 0) find_5a4f2f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1b3e9c\n            in(x: -114, y: 116, name: \"index\") property(Number) index_7f0d4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_e5f8ef\n\n            instance(x: 89, y: 29) sub_1e3c9b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7a4d6c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7a4d6c.right\n            sub_1e3c9b.result -> notequal_7a4d6c.left\n            index_7f0d4a -> sub_1e3c9b.first\n            elem_1b3e9c -> sub_1e3c9b.second\n            notequal_7a4d6c.result -> bool_e5f8ef\n        } -> find_5a4f2f.predicate\n        list_1f3b6a -> find_5a4f2f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9e0d8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7b3a5c\n\n            instance(x: 89, y: 29) sub_1f4b2a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_8d9e6f root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_8d9e6f.right\n            sub_1f4b2a.result -> notequal_8d9e6f.left\n            index_7f0d4a -> sub_1f4b2a.first\n            elem_9e0d8c -> sub_1f4b2a.second\n            notequal_8d9e6f.result -> bool_7b3a5c\n        } -> find_5a4f2f.index_predicate\n        find_5a4f2f.item -> missing_number_7e9c8d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1e6b0f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f2e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_6b9d7c\n\n        instance(x: 0, y: 0) find_5e4c8e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_3a1f9d\n            in(x: -112, y: 115, name: \"index\") property(Number) index_6c2e7b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5c8b0f\n\n            instance(x: 89, y: 29) sub_1a9d3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7e2b6c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_7e2b6c.right\n            sub_1a9d3f.result -> notequal_7e2b6c.left\n            index_6c2e7b -> sub_1a9d3f.first\n            elem_3a1f9d -> sub_1a9d3f.second\n            notequal_7e2b6c.result -> bool_5c8b0f\n        } -> find_5e4c8e.predicate\n        list_3a8f2e -> find_5e4c8e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1d7b6e\n            in(x: -112, y: 115, name: \"index\") property(Number) index_3a2f9c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4b8d0f\n\n            instance(x: 89, y: 29) sub_2a9d5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_8e2b7c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_8e2b7c.right\n            sub_2a9d5f.result -> notequal_8e2b7c.left\n            index_3a2f9c -> sub_2a9d5f.first\n            elem_1d7b6e -> sub_2a9d5f.second\n            notequal_8e2b7c.result -> bool_4b8d0f\n        } -> find_5e4c8e.index_predicate\n        find_5e4c8e.item -> missing_number_6b9d7c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_7e9f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a4d3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6f5c1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7e9f5c.input\n        \" \" -> replace_7e9f5c.search\n        \":\" -> replace_7e9f5c.replace\n        replace_7e9f5c.output -> replace_8a4d3c.input\n        \",\" -> replace_8a4d3c.search\n        \":\" -> replace_8a4d3c.replace\n        replace_8a4d3c.output -> replace_6f5c1c.input\n        \".\" -> replace_6f5c1c.search\n        \":\" -> replace_6f5c1c.replace\n        replace_6f5c1c.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -150, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3c7f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a6d5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8f8b1c root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3c7f9e.input\n        \" \" -> replace_3c7f9e.search\n        \":\" -> replace_3c7f9e.replace\n        replace_3c7f9e.output -> replace_4a6d5c.input\n        \",\" -> replace_4a6d5c.search\n        \":\" -> replace_4a6d5c.replace\n        replace_4a6d5c.output -> replace_8f8b1c.input\n        \".\" -> replace_8f8b1c.search\n        \":\" -> replace_8f8b1c.replace\n        replace_8f8b1c.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a8f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e6d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4e5b1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a8f5c.input\n        \" \" -> replace_3a8f5c.search\n        \":\" -> replace_3a8f5c.replace\n        replace_3a8f5c.output -> replace_9e6d7f.input\n        \",\" -> replace_9e6d7f.search\n        \":\" -> replace_9e6d7f.replace\n        replace_9e6d7f.output -> replace_4e5b1f.input\n        \".\" -> replace_4e5b1f.search\n        \":\" -> replace_4e5b1f.replace\n        replace_4e5b1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3e9c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7a5d6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f4f1da root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e9c8f.input\n        \" \" -> replace_3e9c8f.search\n        \":\" -> replace_3e9c8f.replace\n        replace_3e9c8f.output -> replace_7a5d6c.input\n        \",\" -> replace_7a5d6c.search\n        \":\" -> replace_7a5d6c.replace\n        replace_7a5d6c.output -> replace_f4f1da.input\n        \".\" -> replace_f4f1da.search\n        \":\" -> replace_f4f1da.replace\n        replace_f4f1da.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -149, y: 0, name: \"input\") property(String) input_2a1f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3b5c4d\n\n        instance(x: 0, y: 1) replace_7f6c8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9e2a8a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_3d5b4f root.Std_k98ojb.Strings.Replace {}\n        input_2a1f9e -> replace_7f6c8f.input\n        \" \" -> replace_7f6c8f.search\n        \":\" -> replace_7f6c8f.replace\n        replace_7f6c8f.output -> replace_9e2a8a.input\n        \",\" -> replace_9e2a8a.search\n        \":\" -> replace_9e2a8a.replace\n        replace_9e2a8a.output -> replace_3d5b4f.input\n        \".\" -> replace_3d5b4f.search\n        \":\" -> replace_3d5b4f.replace\n        replace_3d5b4f.output -> output_3b5c4d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_2f1b6a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e9c3d\n\n        instance(x: 0, y: 1) replace_4b8d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a9f2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_5c3e1d root.Std_k98ojb.Strings.Replace {}\n        input_2f1b6a -> replace_4b8d7f.input\n        \" \" -> replace_4b8d7f.search\n        \":\" -> replace_4b8d7f.replace\n        replace_4b8d7f.output -> replace_6a9f2f.input\n        \",\" -> replace_6a9f2f.search\n        \":\" -> replace_6a9f2f.replace\n        replace_6a9f2f.output -> replace_5c3e1d.input\n        \".\" -> replace_5c3e1d.search\n        \":\" -> replace_5c3e1d.replace\n        replace_5c3e1d.output -> output_5e9c3d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_8a0b2f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a7f9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d6e4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8c9e1d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a7f9c.input\n        \" \" -> replace_3a7f9c.search\n        \":\" -> replace_3a7f9c.replace\n        replace_3a7f9c.output -> replace_5d6e4c.input\n        \",\" -> replace_5d6e4c.search\n        \":\" -> replace_5d6e4c.replace\n        replace_5d6e4c.output -> replace_8c9e1d.input\n        \".\" -> replace_8c9e1d.search\n        \":\" -> replace_8c9e1d.replace\n        replace_8c9e1d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_3b1a9f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8d6c\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_0c5e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_1a2e3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: 48) replace_2d4e5f root.Std_k98ojb.Strings.Replace {}\n        input_3b1a9f -> replace_spaces_commas_dots.input\n        \" \" -> replace_0c5e4f.search\n        \":\" -> replace_0c5e4f.replace\n        replace_spaces_commas_dots.output -> replace_1a2e3f.input\n        \",\" -> replace_1a2e3f.search\n        \":\" -> replace_1a2e3f.replace\n        replace_1a2e3f.output -> replace_2d4e5f.input\n        \".\" -> replace_2d4e5f.search\n        \":\" -> replace_2d4e5f.replace\n        replace_2d4e5f.output -> output_7e8d6c\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_1\n\n        instance(x: 0, y: 1) replace_7f3b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5e4a9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e6b1c root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_7f3b8c.input\n        \" \" -> replace_7f3b8c.search\n        \":\" -> replace_7f3b8c.replace\n        replace_7f3b8c.output -> replace_5e4a9d.input\n        \",\" -> replace_5e4a9d.search\n        \":\" -> replace_5e4a9d.replace\n        replace_5e4a9d.output -> replace_6e6b1c.input\n        \".\" -> replace_6e6b1c.search\n        \":\" -> replace_6e6b1c.replace\n        replace_6e6b1c.output -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -128, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 520, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_7e9f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f6f7f1 root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_7e9f5c.input\n        \" \" -> replace_7e9f5c.search\n        \":\" -> replace_7e9f5c.replace\n        replace_7e9f5c.output -> replace_3a8d4f.input\n        \",\" -> replace_3a8d4f.search\n        \":\" -> replace_3a8d4f.replace\n        replace_3a8d4f.output -> replace_f6f7f1.input\n        \".\" -> replace_f6f7f1.search\n        \":\" -> replace_f6f7f1.replace\n        replace_f6f7f1.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 6, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1050, y: 14, name: \"output\") property(Bool) output_7c2a5b\n\n        instance(x: -194, y: 10) characters_3e6b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: 12) length_9f0d8f root.Std_k98ojb.List.Length {}\n        instance(x: 480, y: 13) getat_ea1e7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 694, y: 14) equal_5a2c6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 903, y: 15) reduce_0f8d3c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -23, y: -16, name: \"acc\") property(String) acc_1a2e7c\n                in(x: -12, y: 47, name: \"current\") property(String) current_9f0d8f\n\n                out(x: 705, y: 49, name: \"output\") property(String) output_efbc78\n\n                instance(x: 226, y: 56) equal_c76d2b root.Std_k98ojb.Logic.Equal {}\n                acc_1a2e7c -> equal_c76d2b.left\n                current_9f0d8f -> equal_c76d2b.right\n                equal_c76d2b.result -> output_efbc78\n            }\n        }\n        instance(x: 1106, y: 16) not_75283f root.Std_k98ojb.Logic.Not {}\n        input_8f1e9d -> characters_3e6b4c.input\n        characters_3e6b4c.characters -> length_9f0d8f.list\n        characters_3e6b4c.characters -> getat_ea1e7c.list\n        0 -> getat_ea1e7c.index\n        getat_ea1e7c.itemAtIndex -> equal_5a2c6c.left\n        input_8f1e9d -> equal_5a2c6c.right\n        length_9f0d8f.length -> reduce_0f8d3c.list\n        characters_3e6b4c.characters -> reduce_0f8d3c.items\n        1 -> reduce_0f8d3c.initial_value\n        equal_5a2c6c.result -> reduce_0f8d3c.accumulated\n        reduce_0f8d3c.output -> not_75283f.input\n        not_75283f.result -> output_7c2a5b\n    }\n\n    \n\n    instance(x: -123, y: 110) is_same_1e6e9d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 0, name: \"input\") property(String) input_9e8f3d\n\n        out(x: 1014, y: 5, name: \"output\") property(Bool) output_7a2b6c\n\n        instance(x: -184, y: 1) characters_9f0b0f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 346, y: 3) length_8e5d4f root.Std_k98ojb.List.Length {}\n        instance(x: 554, y: 2) getat_7c6a1f root.Std_k98ojb.List.GetAt {}\n        instance(x: 765, y: -9) equal_f0a3ad root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1004, y: 11) for_8e5d2f root.Std_k98ojb.Std.For {}\n        characters_9f0b0f.characters -> length_8e5d4f.list\n        input_9e8f3d -> characters_9f0b0f.input\n        length_8e5d4f.length -> for_8e5d2f.items\n        func() {\n            in(x: -23, y: 26, name: \"index\") property(Number) index_7c6a1f\n\n            out(x: 707, y: 14, name: \"out\") property(String) out_0b075e\n\n            instance(x: 226, y: 21) getat_c9d5ea root.Std_k98ojb.List.GetAt {}\n            input_9e8f3d -> getat_c9d5ea.input\n            index_7c6a1f -> getat_c9d5ea.index\n            getat_c9d5ea.itemAtIndex -> out_0b075e\n        } -> for_8e5d2f.handler\n        func() {\n            in(x: -23, y: 26, name: \"index\") property(Number) index_7c6a1f\n\n            out(x: 707, y: 14, name: \"out\") property(String) out_0b075e\n\n            instance(x: 226, y: 21) getat_c9d5ea root.Std_k98ojb.List.GetAt {}\n            input_9e8f3d -> getat_c9d5ea.input\n            index_7c6a1f -> getat_c9d5ea.index\n            getat_c9d5ea.itemAtIndex -> out_0b075e\n        } -> for_8e5d2f.handler\n        0 -> getat_7c6a1f.index\n        characters_9f0b0f.characters -> getat_7c6a1f.list\n        func() {\n            in(x: -23, y: 26, name: \"index\") property(Number) index_7c6a1f\n\n            out(x: 707, y: 14, name: \"out\") property(String) out_0b075e\n\n            instance(x: 226, y: 21) getat_c9d5ea root.Std_k98ojb.List.GetAt {}\n            input_9e8f3d -> getat_c9d5ea.input\n            index_7c6a1f -> getat_c9d5ea.index\n            getat_c9d5ea.itemAtIndex -> out_0b075e\n        } -> for_8e5d2f.handler\n        for_8e5d2f.item -> equal_f0a3ad.left\n        getat_7c6a1f.itemAtIndex -> equal_f0a3ad.right\n        equal_f0a3ad.result -> output_7a2b6c\n    }\n\n    \n\n    instance(x: -55, y: 66) is_same_9e8f3d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1a9d3f\n\n        out(x: 557, y: 11, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 6) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 5) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 4) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_1a9d3f -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_1a9d3f -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 0, name: \"input\") property(String) input_1f2e9d\n\n        out(x: 1066, y: 5, name: \"output\") property(Bool) output_8b3c7a\n\n        instance(x: -120, y: 4) characters_d8b0ef root.Std_k98ojb.Strings.Characters {}\n        instance(x: 391, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 604, y: 5) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 840, y: -7) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1030, y: 1) if_07b8c7 root.Std_k98ojb.Std.If {}\n        characters_d8b0ef.characters -> length_6e87f2.list\n        input_1f2e9d -> characters_d8b0ef.input\n        length_6e87f2.length -> lessthanorequal_f11fda.right\n        1 -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        characters_d8b0ef.characters -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> if_07b8c7.value\n        length_6e87f2.length -> getat_ce2a48.index\n        characters_d8b0ef.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> if_07b8c7.gen_1\n        if_07b8c7.else -> output_8b3c7a\n        if_07b8c7.then -> output_8b3c7a\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_9e8f1d\n\n        out(x: 1073, y: 12, name: \"output\") property(Bool) output_eb6c7a\n\n        instance(x: -137, y: 10) characters_c4a0cc root.Std_k98ojb.Strings.Characters {}\n        instance(x: 347, y: 11) length_1e9f8d root.Std_k98ojb.List.Length {}\n        instance(x: 549, y: 12) getat_3c7b5c root.Std_k98ojb.List.GetAt {}\n        instance(x: 736, y: -10) equal_2a0d6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 924, y: 11) filter_8e9f1f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1067, y: 12) length_3e4f5f root.Std_k98ojb.List.Length {}\n        characters_c4a0cc.characters -> getat_3c7b5c.list\n        input_9e8f1d -> characters_c4a0cc.input\n        0 -> getat_3c7b5c.index\n        getat_3c7b5c.itemAtIndex -> equal_2a0d6c.left\n        input_9e8f1d -> equal_2a0d6c.right\n        length_1e9f8d.list -> filter_8e9f1f.items\n        characters_c4a0cc.characters -> length_1e9f8d.list\n        func() {\n            in(x: -22, y: 37, name: \"current\") property(Any) current_5b7c3e\n\n            out(x: 577, y: 49, name: \"output\") property(Bool) output_6a0f2d\n\n            instance(x: 176, y: 46) equal_f9f1d8 root.Std_k98ojb.Logic.Equal {}\n            current_5b7c3e -> equal_f9f1d8.left\n            input_9e8f1d -> equal_f9f1d8.right\n            equal_f9f1d8.result -> output_6a0f2d\n        } -> filter_8e9f1f.handler\n        length_3e4f5f.list -> equal_2a0d6c.left\n        1 -> equal_2a0d6c.right\n        filter_8e9f1f.output_list -> length_3e4f5f.list\n        equal_2a0d6c.result -> output_eb6c7a\n    }\n\n    \n\n    instance(x: -24, y: 85) is_same_9e6f2f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 0, name: \"input\") property(String) input_8f3a4e\n\n        out(x: 1055, y: 10, name: \"output\") property(Bool) output_7b1d6c\n\n        instance(x: -88, y: 11) characters_2f9d0a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 240, y: 12) length_8e5c3c root.Std_k98ojb.List.Length {}\n        instance(x: 453, y: 13) getat_7e4b6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 677, y: 14) equal_9d0a1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 896, y: 15) reduce_3c2a8f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1097, y: -12) ifexpression_5e4f6d root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 488, y: 40, name: \"getter_1c9a2f\") getter_1c9a2f = previous\n        setter(x: 834, y: -55, name: \"setter_e5b8e7\") setter_e5b8e7 = previous\n        instance(x: 1120, y: -12) if_3d4f6c root.Std_k98ojb.Std.If {}\n        getter(x: 0, y: -40, name: \"getter_e5b8e7\") getter_e5b8e7 = previous\n\n        input_8f3a4e -> characters_2f9d0a.input\n        characters_2f3d0a.characters -> length_8e5c3c.list\n        length_8e5c3c.length -> getat_7e4b6f.index\n        1 -> getat_7e4b6f.index\n        characters_2f9d0a.characters -> reduce_3c2a8f.items\n        getter_e5b8e7.value -> ifexpression_5e4f6d.gen_1\n        getat_7e4b6f.itemAtIndex -> ifexpression_5e4f6d.gen_2\n        reduce_3c2a8f.index -> ifexpression_5e4f6d.gen_0\n        getter_1c9a2f.value -> equal_9d0a1f.left\n        getat_7e4b6f.itemAtIndex -> equal_9d0a1f.right\n        equal_9d0a1f.result -> ifexpression_5e4f6d.predicate\n        reduce_3c2a8f.onItem -> ifexpression_5e4f6d.execute\n        ifexpression_5e4f6d.value -> setter_e5b8e7.new_value\n        ifexpression_5e4f6d.then -> setter_e5b8e7.execute\n        reduce_3c2a8f.done -> output_7b1d6c\n        ifexpression_5e4f6d.else -> if_3d4f6c.execute\n        if_3d4f6c.predicate -> output_7b1d6c\n        if_3d4f6c.then -> output_7b1d6c\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 10, name: \"input\") property(String) input_8e9f0d\n\n        out(x: 1075, y: 12, name: \"output\") property(Bool) output_1a3c7b\n\n        instance(x: -76, y: 11, name: \"characters\") characters_d4d2ed root.Std_k98ojb.Strings.Characters {}\n        instance(x: 238, y: 13) length_9e5f0c root.Std_k98ojb.List.Length {}\n        instance(x: 456, y: -1) getat_ea8b7f root.Std_k98ojb.List.GetAt {}\n        instance(x: 686, y: 11) lessthanorequal_4d9e3f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 901, y: -1) equal_5c8a6f root.Std_k98ojb.Logic.Equal {}\n        characters_d4d2ed.characters -> length_9e5f0c.list\n        input_8e9f0d -> characters_d4d2ed.input\n        length_9e5f0c.length -> lessthanorequal_4d9e3f.right\n        1 -> lessthanorequal_4d9e3f.left\n        equal_5c8a6f.result -> output_1a3c7b\n        characters_d4d2ed.characters -> getat_ea8b7f.list\n        getat_ea8b7f.itemAtIndex -> equal_5c8a6f.right\n        0 -> getat_ea8b7f.index\n        input_8e9e0d -> equal_5c8a6f.left\n        lessthanorequal_4d9e3f.result -> getat_ea8b7f.execute\n    }\n\n    \n\n    instance(x: 16, y: -55) is_same_1c2f6f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_8f3e1d\n\n        out(x: 560, y: 111, name: \"output\") property(Bool) output_9b7c2a\n\n        instance(x: -92, y: 10) characters_5a0e6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 110) length_1d4c8f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 109) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -0, y: -121, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        characters_5a0e6f.characters -> length_1d4c8f.list\n        input_8f3e1d -> characters_5a0e6f.input\n        list_9c7b7e -> for_d26972.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_9d4f1c.new_value\n        length_1d4c8f.length -> for_d26972.count\n        list_9c7b7e -> for_d26972.items\n        for_d26972.item -> equal_f89569.left\n        getter_b280eb.value -> equal_f89569.right\n        for_d26972.onItem -> setter_9d4f1c.execute\n        for_d26972.done -> continue_a96db6\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n        equal_f89569.result -> output_5bbcd7\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_8b2a0e root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 10, name: \"input\") property(String) input_8f0a3e\n\n        out(x: 1065, y: 11, name: \"output\") property(Bool) output_9c2b1d\n\n        instance(x: -82, y: 7) characters_6f4c7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 238, y: 8) length_5a3e0f root.Std_k98ojb.List.Length {}\n        instance(x: 453, y: 9) getat_1d2f5f root.Std_k98ojb.List.GetAt {}\n        instance(x: 674, y: -7) equal_f6c4ea root.Std_k98ojb.Logic.Equal {}\n        instance(x: 893, y: 11) lessthanorequal_8a3e1d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1105, y: 9) ifexpression_6f0c7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 492, y: 38, name: \"getter_1d4a2e\") getter_1d4a2e = previous\n        setter(x: 712, y: -76, name: \"setter_8f3c7b\") setter_8f3c7b = previous\n        instance(x: 328, y: -14) for_9c5a6f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -95, name: \"setter_8f3c7b\") setter_1d4e2e = previous\n        ifexpression_6f0c7c.else -> output_9c2b1d\n        ifexpression_6f0c7c.value -> output_9c2b1d\n        ifexpression_6f0c7c.then -> setter_8f3c7b.execute\n        characters_6f4c7c.characters -> for_9c5a6f.items\n        for_9c5a6f.item -> ifexpression_6f0c7c.gen_2\n        for_9c5a6f.index -> ifexpression_6f0c7c.gen_0\n        getter_1d4a2e.value -> ifexpression_6f0c7c.gen_1\n        for_9c5a6f.onItem -> ifexpression_6f0c7c.execute\n        for_9c5a6f.done -> output_9c2b1d\n        for_9c5a6f.item -> setter_8f3c7b.new_value\n        characters_6f4c7c.characters -> getat_1d2f5f.list\n        0 -> getat_1d2f5f.index\n        getat_1d2f5f.itemAtIndex -> setter_1d4e2e.new_value\n        length_5a3e0f.length -> lessthanorequal_8a3e1d.left\n        1 -> lessthanorequal_8a3e1d.right\n        lessthanorequal_8a3e1d.result -> for_9c5a6f.reset\n        setter_1d4e2e.continue -> for_9c5a6f.next\n        equal_f6c4ea.left -> ifexpression_6f0c7c.gen_1\n        equal_f6c4ea.right -> ifexpression_6f0c7c.gen_2\n    }\n\n    \n\n    instance(x: 48, y: -55) is_same_8e3d9a root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -296, y: 30, name: \"input\") property(String) input_9e6a3f\n\n        out(x: 1024, y: 50, name: \"output\") property(Bool) output_7c1b8d\n\n        instance(x: -95, y: 31) characters_c5f0cd root.Std_k98ojb.Strings.Characters {}\n        instance(x: 246, y: 48) length_9a2e3f root.Std_k98ojb.List.Length {}\n        instance(x: 467, y: 50) lessthanorequal_7c6d8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 685, y: 49) ifexpression_1a5e9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || current == previous\"\n        }\n        getter(x: 358, y: 126, name: \"getter_8c6d7f\") getter_8c6d7f = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_1a5e9f.else -> output_7c1b8d\n        ifexpression_1a5e9f.value -> output_7c1b8d\n        ifexpression_1a5e9f.then -> for_d26972.next\n        characters_c5f0cd.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_1a5e9f.gen_2\n        for_d26972.index -> ifexpression_1a5e9f.gen_0\n        getter_8c6d7f.value -> ifexpression_1a5e9f.gen_1\n        for_d26972.onItem -> ifexpression_1a5e9f.execute\n        for_d26972.done -> output_7c1b8d\n        input_9e6a3f -> characters_c5f0cd.input\n        length_9a2e3f.list -> lessthanorequal_7c6d8c.left\n        1 -> lessthanorequal_7c6d8c.right\n        lessthanorequal_7c6d8c.result -> for_d26972.reset\n        characters_c5f0cd.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_8c6d7f.value\n    }\n\n    \n\n    instance(x: -1, y: 56) is_same_9b5e3c root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a8c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9e7d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9e7d4f.items\n        count_1f2a8c.count -> filter_9e7d4f.execute\n        filter_9e7d4f.output_list -> count_1f2a8c.value\n        count_1f2a8c.reset -> characters_node.trigger\n        count_1f2a8c.done -> output_ai\n    }\n    \n\n    instance(x: 0, y: -30) filter_9e7d4f root.main.count_digits.Iteration.Filter {\n        handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n    }\n\n    \n    instance(x: -30, y: 0) characters_node root.main.count_digits.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_1f2a8c root.main.count_digits.Std_k98ojb.Count {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f4e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -20) filter_3c5d6f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3c5d6f.items\n        count_1a2f4e.count -> filter_3c5d6f.execute\n        filter_3c5d6f.output_list -> count_1a2f4e.reset\n        count_1a2f4e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -20) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -45, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a6c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -46) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e25a9.list\n        count_1f2a6c.count -> filter_3e25a9.on_item\n        filter_3e25a9.result -> count_1f2a6c.value\n        instance(x: 0, y: -92) ifexpression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_1f2a6c.count -> ifexpression_node.gen_0\n        instance(x: 0, y: -138) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1f2a6c.count -> math_expr_node.gen_0\n        instance(x: 0, y: -184) math_expr_node_3e25a9 root.Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        ifexpression_node.then -> math_expr_node_3e25a9.execute\n        ifexpression_node.else -> math_expr_node.execute\n        math_expr_node.result -> output_ai\n        math_expr_node_3e25a9.result -> output_ai\n    }\n\n    \n    instance(x: 0, y: -138) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a6f2c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -15) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1a6f2c.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1a6f2c.value\n        instance(x: 0, y: -30) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_1a6f2c.count -> ifexpression_3d7de6.gen_0\n        0 -> ifexpression_3d7de6.gen_1\n        instance(x: -15, y: -45) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1a6f2c.count -> math_expr_node.gen_0\n        ifexpression_3d7de6.then -> math_expr_node.execute\n        ifexpression_3d7de6.else -> count_1a6f2c.reset\n        math_expr_node.result -> output_ai\n    }\n    \n\n    instance(x: 264, y: -464) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f4e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -40) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1a2f4e.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1a2f4e.value\n        count_1a2f4e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2c6a root.Std_k98ojb.Count {}\n        instance(x: 0, y: -50) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1f2c6a.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1f2c6a.value\n        instance(x: 0, y: -100) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == characters.Length()\"\n        }\n        count_1f2c6a.count -> ifexpression_3d7de6.gen_0\n        characters_node.characters -> ifexpression_3d7de6.gen_1\n        instance(x: 0, y: -150) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1f2c6a.count -> math_expr_node.gen_0\n        instance(x: 0, y: -200) math_expr_node_3e25a9 root.Std_k98ojb.Math.Expression {\n            expression: \"characters.Length()\"\n        }\n        characters_node.characters -> math_expr_node_3e25a9.gen_0\n        ifexpression_3d7de6.then -> math_expr_node.execute\n        ifexpression_3d7de6.else -> math_expr_node_3e25a9.execute\n        math_expr_node.result -> output_ai\n        math_expr_node_3e25a9.result -> output_ai\n    }\n    \n\n    instance(x: 0, y: -250) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f9c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -40) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> count_1a2f9c.count\n        characters_node.characters -> filter_3e25a9.list\n        filter_3e25a9.result -> count_1a2f9c.reset\n        count_1a2f9c.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_2f1c9a root.Std_k98ojb.Count {}\n        instance(x: 0, y: -16) filter_3e7d6f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e7d6f.items\n        count_2f1c9a.count -> filter_3e7d6f.execute\n        filter_3e7d6f.output_list -> count_2f1c9a.value\n        instance(x: 0, y: -32) ifexpression_4b5f8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_2f1c9a.count -> ifexpression_4b5f8c.gen_0\n        instance(x: 0, y: -48) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_2f1c9a.count -> math_expr_node.gen_0\n        instance(x: 0, y: -64) math_expr_node_2 root.Std_k98ojb.Math.Expression {\n            expression: \"0\"\n        }\n        ifexpression_4b5f8c.then -> math_expr_node_2.execute\n        ifexpression_4b5f8c.else -> math_expr_node.execute\n        math_expr_node.result -> output_ai\n        math_expr_node_2.result -> output_ai\n    }\n\n    \n    instance(x: 0, y: -80) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_2a3c8e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -15) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_2a3c8e.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_2a3c8e.value\n        count_2a3c8e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -15) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -10, y: 20) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 30, y: 20) count_1f8a4c root.Std_k98ojb.Std.Count {}\n        instance(x: 70, y: 20) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> characters_node.input\n        characters_node.characters -> count_1f8a4c.trigger\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_1f8a4c.count\n        count_1f8a4c.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e5a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e5a8c.first\n        data_cde0dc -> pow_9e5a8c.second\n        pow_9e5a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c0e.x\n        data_cde0dc -> pow_9a8c0e.y\n        pow_9a8c0e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3a8e9c.x\n        data_cde0dc -> pow_3a8e9c.y\n        pow_3a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a9c3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a9c3e.x\n        data_cde0dc -> pow_5a9c3e.y\n        pow_5a9c3e.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a0c8e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a0c8e.x\n        data_cde0dc -> pow_9a0c8e.y\n        pow_9a0c8e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8e9c.x\n        data_cde0dc -> pow_5a8e9c.y\n        pow_5a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8c9e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8c9e.x\n        data_cde0dc -> pow_5a8c9e.y\n        pow_5a8c9e.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8e9c.x\n        data_cde0dc -> pow_5a8e9c.y\n        pow_5a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3a0c5e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3a0c5e.x\n        data_cde0dc -> pow_3a0c5e.y\n        pow_3a0c5e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c3e.x\n        data_cde0dc -> pow_9a8c3e.y\n        pow_9a8c3e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -103, y: 54, name: \"size\") property(Number) size_8f1b5e\n\n        out(x: 46, y: 158, name: \"surfaceArea\") property(Number) surfaceArea_7c3a0d\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f1b5e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surfaceArea_7c3a0d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 25, name: \"size\") property(Number) size_1a3f8e\n\n        out(x: 656, y: 120, name: \"surface_area\") property(Number) surface_area_9b2c6d\n\n        instance(x: 94, y: -105) mul_7a0b4f root.Std_k98ojb.Math.Mul {}\n        size_1a3f8e -> mul_7a0b4f.first\n        6 -> mul_7a0b4f.second\n        instance(x: 92, y: -22) mul_9c5d2d root.Std_k98ojb.Math.Mul {}\n        mul_7a0b4f.result -> mul_9c5d2d.first\n        size_1a3f8e -> mul_9c5d2d.second\n        mul_9c5d2d.result -> surface_area_9b2c6d\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_7f0d4f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 45, name: \"size\") property(Number) size_1f0b5e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f6d3c8 root.Std_k98ojb.Math.Mul {}\n        size_1f0b5e -> mul_f6d3c8.first\n        6 -> mul_f6d3c8.second\n        instance(x: 92, y: -22) mul_2a4b7c root.Std_k98ojb.Math.Mul {}\n        mul_f6d3c8.result -> mul_2a4b7c.first\n        size_1f0b5e -> mul_2a4b7c.second\n        mul_2a4b7c.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -102, y: 22, name: \"size\") property(Number) size_1f3e9d\n\n        out(x: 1066, y: 20, name: \"surface_area\") property(Number) surface_area_7b4a8c\n\n        instance(x: 10, y: -19) mul_5a0c2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 327, y: 133) data_cde0dc  = 6\n        size_1f3e9d -> mul_5a0c2f.first\n        data_cde0dc -> mul_5a0c2f.second\n        mul_5a0c2f.result -> surface_area_7b4a8c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -101, y: 43, name: \"size\") property(Number) size_1a3f9e\n\n        out(x: 1062, y: 42, name: \"surface_area\") property(Number) surface_area_8b0c7d\n\n        instance(x: 30, y: -12) mul_f5a4aa root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3f9e -> mul_f5a4aa.first\n        data_cde0dc -> mul_f5a4aa.second\n        mul_f5a4aa.result -> surface_area_8b0c7d\n    }\n\n    \n\n    instance(x: -11, y: 20) surface_area_of_cube_9f1e2d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -106, y: 20, name: \"size\") property(Number) size_1a8f5e\n\n        out(x: 1092, y: 23, name: \"surfaceArea\") property(Number) surfaceArea_9c0b4d\n\n        instance(x: 104, y: -13) mul_7b3f6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a8f5e -> mul_7b3f6f.first\n        data_cde0dc -> mul_7b3f6f.second\n        mul_7b3f6f.result -> surfaceArea_9c0b4d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_1a8e5d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_1a9f0e\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: 105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_1a9f0e -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: 22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f2330d.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: -45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -106, y: 53, name: \"size\") property(Number) size_1a8f5e\n\n        out(x: 1084, y: 7, name: \"surface_area\") property(Number) surface_area_9c6b0d\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_1a8f5e -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_9c6b0d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_7a3e51 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -102, y: 55, name: \"size\") property(Number) size_1a3b5f\n\n        out(x: 1148, y: 7, name: \"surface_area\") property(Number) surface_area_2e4d9c\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3b5f -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_2e4d9c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_8a3b7f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -100, y: 53, name: \"size\") property(Number) size_9e3b6f\n\n        out(x: 1018, y: 52, name: \"surface_area\") property(Number) surface_area_5a1c7d\n\n        instance(x: 10, y: -12) mul_4f2c0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 316, y: 133) data_cde0dc  = 6\n        size_9e3b6f -> mul_4f2c0f.first\n        data_cde0dc -> mul_4f2c0f.second\n        mul_4f2c0f.result -> surface_area_5a1c7d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 13, name: \"list\") property(List) list_4a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3f8e\n        min_list_4d4556.list -> list_4a3f8e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 27, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_1a8f9e -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_1a8f9e -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -333, y: 438, name: \"list\") property(List) list_542a51\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -319, y: 358, name: \"Max list\") max_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_870503 root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_542a51 -> max_f3b46d.list\n        list_542a51 -> min_870503.list\n        max_f3b46d.max -> sub_852f2e.first\n        min_870503.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_1e9b8f\n        min_list_4d4556.list -> list_1e9b8f\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_1a8f0e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_1a8f0e -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_1a8f0e -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -426, y: 438, name: \"list\") property(List) list_4e8b9f\n\n        out(x: 159, y: 427, name: \"difference\") property(Number) difference_5c0a1d\n\n        instance(x: 426, y: 303) sub_6f2b7f root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358) max_8e9c3f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_1a5d0f root.Std_k98ojb.List.Min {}\n        instance(x: -318, y: 521) sub_6f2b7f_2 root.Std_k98ojb.Math.Sub {}\n        list_4e8b9f -> max_8e9c3f.list\n        list_4e8b9f -> min_1a5d0f.list\n        max_8e9c3f.max -> sub_6f2b7f.first\n        min_1a5d0f.min -> sub_6f2b7f.second\n        sub_6f2b7f.result -> difference_5c0a1d\n    }\n\n    \n\n    instance(x: 426, y: 303) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_2b5d7c\n\n        instance(x: 201, y: 62) sub_3c8e4e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_6f9a0d root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_7a5b1f root.Std_k98ojb.List.Min {}\n        list_1a9f0e -> max_6f9a0d.list\n        list_1a9f0e -> min_7a5b1f.list\n        max_6f9a0d.max -> sub_3c8e4e.first\n        min_7a5b1f.min -> sub_3c8e4e.second\n        sub_3c8e4e.result -> output_2b5d7c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_9f6e0c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -26, y: 20, name: \"list\") property(List) list_1a8f3e\n\n        out(x: 444, y: 29, name: \"difference\") property(Number) difference_5c7d6b\n\n        instance(x: 202, y: 27) sub_9f2c4f root.Std_k98ojb.Math.Sub {}\n        instance(x: -250, y: 155) max_1a8e0f root.Std_k98ojb.List.Max {}\n        instance(x: -251, y: -52) min_5d3b7c root.Std_k98ojb.List.Min {}\n        list_1a8f3e -> max_1a8e0f.list\n        list_1a8f3e -> min_5d3b7c.list\n        max_1a8e0f.max -> sub_9f2c4f.first\n        min_5d3b7c.min -> sub_9f2c4f.second\n        sub_9f2c4f.result -> difference_5c7d6b\n    }\n\n    \n\n    instance(x: 47, y: -1) diff_max_min_f8e0a9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a8b3f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5e7c2d\n\n        instance(x: 201, y: 62) sub_4f0b6c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a8c9c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_7d3e2c root.Std_k98ojb.List.Min {}\n        sub_4f0b6c.result -> output_5e7c2d\n        max_1a8c9c.max -> sub_4f0b6c.first\n        min_7d3e2c.min -> sub_4f0b6c.second\n        list_1a8b3f -> max_1a8c9c.list\n        list_1a8b3f -> min_7d3e2c.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 26, name: \"list\") property(List) list_0a9b2f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_6c9a3f root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_4d0b1f root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> output_b1d7f8\n        list_0a9b2f -> max_6c9a3f.list\n        list_0a9b2f -> min_4d0b1f.list\n        max_6c9a3f.max -> sub_852f2e.first\n        min_4d0b1f.min -> sub_852f2e.second\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a1d5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9e3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a1d5c.value\n        2 -> modulo_7a1d5c.divisor\n        modulo_7a1d5c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9e3f2f.left\n        0 -> equal_9e3f2f.right\n        equal_9e3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e5d4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f3d5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c0a.value\n        2 -> modulo_7e1c0a.divisor\n        modulo_7e1c0a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f3d5f.left\n        0 -> equal_9f3d5f.right\n        equal_9f3d5f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e5d2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 355, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e6d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_0a3f4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        input_f5c03d -> modulo_1e6d7c.value\n        2 -> modulo_1e6d7c.divisor\n        modulo_1e6d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_0a3f4c.right\n        modulo_1e6d7c.result -> equal_0a3f4c.left\n        equal_0a3f4c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        0 -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_e19a62.value\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e7c2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_1f3a5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e7c2d.value\n        2 -> modulo_0e7c2d.divisor\n        modulo_0e7c2d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_1f3a5f.left\n        0 -> equal_1f3a5f.right\n        equal_1f3a5f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5d4e1c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e5c1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9a4f2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e5c1d.value\n        2 -> modulo_7e5c1d.divisor\n        modulo_7e5c1d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9a4f2c.left\n        0 -> equal_9a4f2c.right\n        equal_9a4f2c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_3a9f4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1d7c.value\n        2 -> modulo_0e1d7c.divisor\n        modulo_0e1d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_3a9f4f.left\n        0 -> equal_3a9f4f.right\n        equal_3a9f4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1c7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2f5a6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1c7d.value\n        2 -> modulo_0e1c7d.divisor\n        modulo_0e1c7d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_2f5a6f.right\n        expression_b720d7.result -> equal_2f5a6f.left\n        if_07b8c7.then -> equal_2f5a6f.execute\n        equal_2f5a6f.result -> if_e19a62.predicate\n        1 -> add_b4554f.first\n        add_b4554f.second -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        equal_2f5a6f.value -> out_f3db9f\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d1a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_3f5a9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1d7c.value\n        2 -> modulo_0e1d7c.divisor\n        modulo_0e1d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_3f5a9f.left\n        0 -> equal_3f5a9f.right\n        equal_3f5a9f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e1d7c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e5c6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_0f9d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1e5c6a.value\n        2 -> modulo_1e5c6a.divisor\n        modulo_1e5c6a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_0f9d4f.left\n        0 -> equal_0f9d4f.right\n        equal_0f9d4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1d4e2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_5a3f6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c2d.value\n        2 -> modulo_7e1c2d.divisor\n        modulo_7e1c2d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_5a3f6f.left\n        0 -> equal_5a3f6f.right\n        equal_5a3f6f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e6d4c root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -274, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a7c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 265, y: -60) filter_2e5b8c root.Std_k98ojb.Iteration.Filter {}\n        characters_3a7c4f.output -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        characters_3a7c4f.output -> filter_2e5b8c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_2e5b8c.handler\n        find_6d05b0.item -> output_0\n        filter_2e5b8c.output_list -> find_6d05b0.items\n        input_0 -> characters_3a7c4f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"seen\") List_1c9f7e root.Std_k98ojb.List.Empty {}\n        input_0 -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            seen_0 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6b9\n        } -> find_6d05b0.predicate\n        instance(x: 532, y: 147) add_3c8f2e root.Std_k98ojb.List.Add {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            seen_0 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> add_3c8f2e.execute\n        seen_0 -> add_3c8f2e.list\n        current_afd5b1 -> add_3c8f2e.item\n        add_3c8f2e.listWithItem -> seen_0\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a7b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4f8d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 490, y: -1) contains_2c9b0c root.Std_k98ojb.List.Contains {}\n        characters_5a7b3c.output -> find_4f8d6e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) list_1e8b2c root.Std_k98ojb.List.Slice {}\n            contains_2c9b0c.list -> list_1e8b2c.list\n            elem_9f6850 -> list_1e8b2c.start\n            -1 -> list_1e8b2c.end\n            list_1e8b2c.output -> contains_2c9b0c.list\n            contains_2c9b0c.item -> bool_af09a7\n        } -> find_4f8d6e.predicate\n        input_0 -> characters_5a7b3c.input\n        find_4f8d6e.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"unique chars\") Set_c88d35 {}\n        input_0 -> find_7e1char.finder\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        input_0 -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        find_7e1ce0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a3b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8e6c4d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_9e1c7f root.Std_k98ojb.Iteration.Filter {}\n        characters_5a3b7f.output -> find_8e6c4d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b5e8c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_2b5e8c.input\n            elem_9f6850 -> contains_2b5e8c.contains\n            contains_2b5e8c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_8e6c4d.predicate\n        instance(x: 795, y: -3) characters_5a3b7f_1 root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b5e8c_1 root.Std_k98ojb.Strings.Contains {}\n            input_0 -> characters_5a3b7f_1.input\n            contains_2b5e8c_1.result -> bool_af09a7\n            elem_9f6850 -> contains_2b5e8c_1.contains\n        } -> filter_9e1c7f.handler\n        characters_5a3b7f_1.output -> filter_9e1c7f.items\n        find_8e6c4d.item -> output_0\n        filter_9e1c7f.output_list -> find_8e6c4d.items\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_7e5f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"unique chars\") Set_1a2d4f root.Std_k98ojb.Sets.Set {}\n        input_0 -> find_7e5f8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8f3c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2a8f3c.input\n            unique_chars_0 -> contains_2a8f3c.contains\n            contains_2a8f3c.result -> bool_1eb6e9\n        } -> find_7e5f8c.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2a8f3c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_2a8f3c.input\n            unique_chars_0 -> contains_2a8f3c.contains\n            not_0 -> bool_1eb6e9\n            contains_2a8f3c.result -> not_0.input\n        } -> Set_1a2d4f.add\n        find_7e5f8c.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -450) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -459) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -450) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -432) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -440) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 7268,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -193, y: -103, name: \"list1\") property(List) list1_9a2f8e\n        in(x: -201, y: 17, name: \"list2\") property(List) list2_4b0c6d\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2f8e -> intersection_4e8c54.left\n        list2_4b0c6d -> intersection_4e8c54.right\n        instance(x: 245, y: -27) notempty_5f7b3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersection -> notempty_5f7b3f.list\n        notempty_5f7b3f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -263, y: -88, name: \"list1\") property(List) list1_3f8a9e\n        in(x: -271, y: 18, name: \"list2\") property(List) list2_4b0c7d\n\n        out(x: 555, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1a8d5f root.Std_k98ojb.List.NotEmpty {}\n        list1_3f8a9e -> intersection_c7c7e6.left\n        list2_4b0c7d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1a8d5f.list\n        notempty_1a8d5f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -290, y: -87, name: \"list1\") property(List) list1_3f8b2e\n        in(x: -303, y: 26, name: \"list2\") property(List) list2_9c0a6d\n\n        out(x: 560, y: -86, name: \"output\") property(Bool) output_7e1c4f\n\n        instance(x: -84, y: -83) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2e -> intersection_c7c7e6.left\n        list2_9c0a6d -> intersection_c7c7e6.right\n        instance(x: 247, y: -83) notempty_4e5c8f root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_4e5c8f.list\n        notempty_4e5c8f.isEmpty -> output_7e1c4f\n    }\n\n    \n\n    instance(x: -74, y: 59) has_common_element_9b2d3a root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_9d5a1f root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_9d5a1f.list\n        notempty_9d5a1f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -275, y: -105, name: \"list1\") property(List) list1_9e8f2d\n        in(x: -283, y: 33, name: \"list2\") property(List) list2_5a7c3b\n\n        out(x: 567, y: 14, name: \"output\") property(Bool) output_4a1f6e\n\n        instance(x: 146, y: -95) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_9e8f2d -> intersection_c7c7e6.left\n        list2_5a7c3b -> intersection_c7c7e6.right\n        instance(x: 339, y: -94) notempty_4a0c9c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_4a0c9c.list\n        notempty_4a0c9c.isEmpty -> output_4a1f6e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -280, y: -86, name: \"list1\") property(List) list1_4a3b5f\n        in(x: -298, y: 31, name: \"list2\") property(List) list2_7c9d8e\n\n        out(x: 562, y: 6, name: \"output\") property(Bool) output_e0c1ee\n\n        instance(x: 137, y: -81) intersection_4b5f3a root.Std_k98ojb.Sets.Intersection {}\n        list1_4a3b5f -> intersection_4b5f3a.left\n        list2_7c9d8e -> intersection_4b5f3a.right\n        instance(x: 347, y: -75) notempty_6e0c93 root.Std_k98ojb.List.NotEmpty {}\n        intersection_4b5f3a.intersection -> notempty_6e0c93.list\n        notempty_6e0c93.isEmpty -> output_e0d1ee\n    }\n\n    \n\n    instance(x: -79, y: 59) has_common_element_9d8e7f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -263, y: -111, name: \"list1\") property(List) list1_3a2f8e\n        in(x: -271, y: 18, name: \"list2\") property(List) list2_7c0b6d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_5f3d8a root.Std_k98ojb.Math.GreaterThan {}\n        list1_3a2f8e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_7c0b6d -> intersection_c7c7e6.right\n        0 -> greaterthan_5f3d8a.left\n        length_8166b0.length -> greaterthan_5f3d8a.right\n        greaterthan_5f3d8a.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -255, y: -105, name: \"list1\") property(List) list1_9a2b3f\n        in(x: -271, y: 31, name: \"list2\") property(List) list2_5c8e7d\n\n        out(x: 554, y: 15, name: \"output\") property(Bool) output_4b1f0a\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2b3f -> intersection_c7c7e6.left\n        list2_5c8e7d -> intersection_c7c7e6.right\n        instance(x: 360, y: -95) notempty_e0a4ef root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_e0a4ef.list\n        notempty_e0a4ef.isEmpty -> output_4b1f0a\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_5d9f8f root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -299, y: -179, name: \"list1\") property(List) list1_3f0b8e\n        in(x: -311, y: 20, name: \"list2\") property(List) list2_9c4a5d\n\n        out(x: 1127, y: -160, name: \"output\") property(Bool) output_6e1b3f\n\n        instance(x: 648, y: -105) intersection_8a0c93 root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0b8e -> intersection_8a0c93.left\n        list2_9c4a5d -> intersection_8a0c93.right\n        instance(x: 1007, y: -106) notempty_6b8c2e root.Std_k98ojb.List.NotEmpty {}\n        intersection_8a0c93.intersection -> notempty_6b8c2e.list\n        notempty_6b8c2e.isEmpty -> output_6e1b3f\n    }\n\n    \n\n    instance(x: -240, y: 59) intersection_9d7c4c root.main.intersection {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 5, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_3b0d6c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9f4f8c\n\n        instance(x: 752, y: 93) ifexpression_7e1a5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_3d4c2f\") getter_3d4c2f = previous\n        setter(x: 679, y: -313, name: \"setter_7a9b6e\") setter_7a9b6e = previous\n        instance(x: 321, y: -20) for_8e0c1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7a9b6e\") setter_5d3c4f = previous\n        instance(x: -275, y: -35) getat_8a2c1f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e1a5f.else -> continue_3b0d6c\n        ifexpression_7e1a5f.value -> output_9f4f8c\n        ifexpression_7e1a5f.then -> setter_7a9b6e.execute\n        list_1a8f2e -> for_8e0c1f.items\n        for_8e0c1f.item -> ifexpression_7e1a5f.gen_2\n        for_8e0c1f.index -> ifexpression_7e1a5f.gen_0\n        getter_3d4c2f.value -> ifexpression_7e1a5f.gen_1\n        for_8e0c1f.onItem -> ifexpression_7e1a5f.execute\n        for_8e0c1f.done -> continue_3b0d6c\n        for_8e0c1f.item -> setter_7a9b6e.new_value\n        list_1a8f2e -> getat_8a2c1f.list\n        0 -> getat_8a2c1f.index\n        getat_8a2c1f.itemAtIndex -> setter_5d3c4f.new_value\n        continue_3b0d6c -> setter_5d3c4f.continue\n        setter_7a9b6e.continue -> for_8e0c1f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_2a0c5f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -517, y: 5, name: \"list\") property(List) list_3a9d6f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3a9d6f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3a9d6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 1, name: \"list\") property(List) list_2f3a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6b4c8d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_1b0c9f\n\n        instance(x: 752, y: 93) ifexpression_7e2a3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8d9f5c\") getter_8d9f5c = previous\n        setter(x: 679, y: -313, name: \"setter_7a4e2b\") setter_7a4e2b = previous\n        instance(x: 321, y: -20) for_6a3b1c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7a4e2b\") setter_9f5d8d = previous\n        instance(x: -275, y: -35) getat_6f3a1c root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e2a3c.else -> continue_6b4c8d\n        ifexpression_7e2a3c.value -> output_1b0c9f\n        ifexpression_7e2a3c.then -> setter_7a4e2b.execute\n        list_2f3a9e -> for_6a3b1c.items\n        for_6a3b1c.item -> ifexpression_7e2a3c.gen_2\n        for_6a3b1c.index -> ifexpression_7e2a3c.gen_0\n        getter_8d9f5c.value -> ifexpression_7e2a3c.gen_1\n        for_6a3b1c.onItem -> ifexpression_7e2a3c.execute\n        for_6a3b1c.done -> continue_6b4c8d\n        for_6a3b1c.item -> setter_7a4e2b.new_value\n        list_2f3a9e -> getat_6f3a1c.list\n        0 -> getat_6f3a1c.index\n        getat_6f3a1c.itemAtIndex -> setter_9f5d8d.new_value\n        continue_6b4c8d -> setter_9f5d8d.continue\n        setter_7a4e2b.continue -> for_6a3b1c.next\n    }\n\n    \n\n    instance(x: -10, y: 59) is_consecutive_7e0d5f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 3, name: \"list\") property(List) list_1f0a5e\n\n        out(x: 1227, y: 147, name: \"output\") property(Bool) output_9c2b6d\n\n        instance(x: 752, y: 93) ifexpression_8b3a4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7e6d5c\") getter_7e6d5c = previous\n        setter(x: 679, y: -313, name: \"setter_9b8a4f\") setter_9b8a4f = previous\n        instance(x: 321, y: -20) for_d1f2e3 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9b8a4f\") setter_5c7d6f = previous\n        instance(x: -275, y: -35) getat_9e1f2f root.Std_k98ojb.List.GetAt {}\n        ifexpression_8b3a4f.else -> continue_a96db6\n        ifexpression_8b3a4f.value -> output_5bbcd7\n        ifexpression_8b3a4f.then -> setter_9b8a4f.execute\n        list_1f0a5e -> for_d1f2e3.items\n        for_d1f2e3.item -> ifexpression_8b3a4f.gen_2\n        for_d1f2e3.index -> ifexpression_8b3a4f.gen_0\n        getter_7e6d5c.value -> ifexpression_8b3a4f.gen_1\n        for_d1f2e3.onItem -> ifexpression_8b3a4f.execute\n        for_d1f2e3.done -> continue_a96db6\n        for_d1f2e3.item -> setter_9b8a4f.new_value\n        list_1f0a5e -> getat_9e1f2f.list\n        0 -> getat_9e1f2f.index\n        getat_9e1f2f.itemAtIndex -> setter_5c7d6f.new_value\n        execute_90aaec -> setter_5c7d6f.execute\n        setter_5c7d6f.continue -> for_d1f2e3.reset\n        setter_9b8a4f.continue -> for_d1f2e3.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_0a1b2c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 3, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4b2c0d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_6a3f4c\n\n        instance(x: 752, y: 93) ifexpression_7e5c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8d3a6f\") getter_8d3a6f = previous\n        setter(x: 679, y: -313, name: \"setter_5b7c4e\") setter_5b7c4e = previous\n        instance(x: 321, y: -20) for_1f9f2f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_5b7c4e\") setter_3a8d6f = previous\n        instance(x: -275, y: -35) getat_1c9e2f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e5c9f.else -> continue_4b2c0d\n        ifexpression_7e5c9f.value -> output_6a3f4c\n        ifexpression_7e5c9f.then -> setter_5b7c4e.execute\n        list_1a8f9e -> for_1f9f2f.items\n        for_1f9f2f.item -> ifexpression_7e5c9f.gen_2\n        for_1f9f2f.index -> ifexpression_7e5c9f.gen_0\n        getter_8d3a6f.value -> ifexpression_7e5c9f.gen_1\n        for_1f9f2f.onItem -> ifexpression_7e5c9f.execute\n        for_1f9f2f.done -> continue_4b2c0d\n        for_1f9f2f.item -> setter_5b7c4e.new_value\n        list_1a8f9e -> getat_1c9e2f.list\n        0 -> getat_1c9e2f.index\n        getat_1c9e2f.itemAtIndex -> setter_3a8d6f.new_value\n        continue_4b2c0d -> setter_3a8d6f.execute\n        setter_3a8d6f.continue -> for_1f9f2f.reset\n        setter_5b7c4e.continue -> for_1f9f2f.next\n    }\n\n    \n\n    instance(x: -14, y: 62) is_consecutive_9b0f0f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"list1\") property(List) list1_5f8b9e\n        in(x: -284, y: 130, name: \"list2\") property(List) list2_6a4c0d\n\n        out(x: 557, y: 95, name: \"output\") property(Bool) output_3a1b5f\n\n        instance(x: -92, y: 94) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 93) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 92) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_5f8b9e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_6a4c0d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list1_5f8b9e -> equal_f89569.right\n        equal_f89569.result -> output_3a1b5f\n    }\n\n    \n\n    instance(x: -84, y: 219) is_sublist_2c6d4 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: 10, name: \"subList\") property(List) sub_list_1f8a9b\n        in(x: -434, y: 150, name: \"mainList\") property(List) main_list_5c3e6d\n\n        out(x: 1217, y: 95, name: \"output\") property(Bool) output_4e2b1f\n\n        instance(x: -184, y: 94, name: \"find sublist in list\") find_9a8a0f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -33, y: 30, name: \"current\") property(List) current_7c2d1e\n            in(x: -24, y: 170, name: \"subList\") property(List) sub_list_5a3b9f\n\n            out(x: 704, y: 125, name: \"output\") property(Bool) output_4a0f8c\n\n            instance(x: 226, y: 132) contains_7d2e1f root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 128) notequal_6c3f9f root.Std_k98ojb.Logic.NotEqual {}\n            sub_list_5a3b9f -> contains_7d2e1f.item\n            current_7c2d1e -> contains_7d2e1f.list\n            contains_7d2e1f.is_contained -> notequal_6c3f9f.left\n            false -> notequal_6c3f9f.right\n            notequal_6c3f9f.result -> output_4a0f8c\n        } -> find_9a8a0f.predicate\n        main_list_5c3e6d -> find_9a8a0f.items\n        sub_list_1f8a9b -> find_9a8a0f.subList\n        find_9a8a0f.item -> output_4e2b1f\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_f7d5c6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 30, name: \"subList\") property(List) sub_list_1f3b2d\n        in(x: -273, y: -122, name: \"mainList\") property(List) main_list_7c6e4a\n\n        out(x: 1050, y: -5, name: \"output\") property(Bool) output_9f8c1f\n\n        instance(x: -101, y: -13, name: \"sublist length\") length_2d3b6f root.Std_k98ojb.List.Length {}\n        instance(x: 226, y: -14, name: \"mainList length\") length_7e9a4c root.Std_k98ojb.List.Length {}\n        instance(x: 436, y: -15) greaterthan_5d1c2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 640, y: -16) sub_8e3b7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 840, y: -17) for_6a0b9c root.Std_k98ojb.Std.For {}\n        instance(x: 1051, y: -18) slice_5d4f2f root.Std_k98ojb.List.Slice {}\n        instance(x: 1253, y: -19) equal_8e7f2f root.Std_k98ojb.Logic.Equal {}\n        sub_list_1f3b2d -> length_2d3b6f.list\n        main_list_7c6e4a -> length_7e9a4c.list\n        length_2d3b6f.length -> greaterthan_5d1c2f.left\n        length_7e9a4c.length -> greaterthan_5d1c2f.right\n        greaterthan_5d1c2f.result -> sub_8e3b7c.first\n        0 -> sub_8e3b7c.second\n        sub_8e3b7c.result -> for_6a0b9c.count\n        main_list_7c6e4a -> for_6a0b9c.items\n        func() {\n            in(x: -30, y: 20, name: \"index\") property(Number) index_1f3d8c\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_7e5a0b\n\n            instance(x: 226, y: 56) slice_2a6f4c root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) equal_1d8b9c root.Std_k98ojb.Logic.Equal {}\n            index_1f3d8c -> slice_2a6f4c.start\n            sub_list_1f3b2d -> slice_2a6f4c.list\n            length_2d3b6f.length -> slice_2a6f4c.end\n            slice_2a6f4c.slice -> equal_1d8b9c.left\n            sub_list_1f3b2d -> equal_1d8b9c.right\n            equal_1d8b9c.result -> output_7e5a0b\n        } -> for_6a0b9c.onItem\n        for_6a0b9c.index -> slice_5d4f2f.start\n        main_list_7c6e4a -> slice_5d4f2f.list\n        func() {\n            in(x: -30, y: 20, name: \"index\") property(Number) index_1f3d8c\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_7e5a0b\n\n            instance(x: 226, y: 56) add_2a6f4c root.Std_k98ojb.Math.Add {}\n            index_1f3d8c -> add_2a6f4c.first\n            length_2d3b6f.length -> add_2a6f4c.second\n            add_2a6f4c.result -> output_7e5a0b\n        } -> slice_5d4f2f.end\n        equal_8e7f2f.left -> for_6a0b9c.onItem\n        slice_5d4f2f.slice -> equal_8e7f2f.right\n        sub_list_1f3b2d -> equal_8e7f2f.left\n        equal_8e7f2f.result -> output_9f8c1f\n    }\n\n    \n\n    instance(x: -60, y: 6) is_sublist_4a5d0c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"list1\") property(List) list1_3e6f8a\n        in(x: -505, y: -215, name: \"list2\") property(List) list2_7b0c4d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_9b1b8c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3a6f2e\n\n        instance(x: 752, y: 93) ifexpression_4d7b5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_1a6e9c\") getter_1a6e9c = previous\n        setter(x: 679, y: -313, name: \"setter_7b5f8d\") setter_7b5f8d = previous\n        instance(x: 321, y: -20) for_3a2e4c root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7b5f8d\") setter_1a6e9c = previous\n        instance(x: -275, y: -35) getat_3c2a4c root.Std_k98ojb.List.GetAt {}\n        ifexpression_4d7b5f.else -> continue_9b1b8c\n        ifexpression_4d7b5f.value -> output_3a6f2e\n        ifexpression_4d7b5f.then -> setter_7b5f8d.execute\n        list1_3e6f8a -> for_3a2e4c.items\n        for_3a2e4c.item -> ifexpression_4d7b5f.gen_2\n        for_3a2e4c.index -> ifexpression_4d7b5f.gen_0\n        getter_1a6e9c.value -> ifexpression_4d7b5f.gen_1\n        for_3a2e4c.onItem -> ifexpression_4d7b5f.execute\n        for_3a2e4c.done -> continue_9b1b8c\n        for_3a2e4c.item -> setter_7b5f8d.new_value\n        list2_7b0c4d -> getat_3c2a4c.list\n        0 -> getat_3c2a4c.index\n        getat_3c2a4c.itemAtIndex -> setter_1a6e9c.new_value\n        continue_9b1b8c -> for_3a2e4c.reset\n        execute_5f7d1c -> setter_1a6e9c.execute\n        setter_7b5f8d.continue -> for_3a2e4c.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_5f7d1c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_1f8a2b\n        in(x: -485, y: -125, name: \"mainList\") property(List) main_list_3e7d4c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_3e7d4c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_3e7d4c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_1f8a2b -> getat_ce2a48.valueAtIndex\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 30, name: \"list1\") property(List) list1_5e8f2d\n        in(x: -465, y: -220, name: \"list2\") property(List) list2_9a7c3b\n\n        out(x: 1216, y: 10, name: \"output\") property(Bool) output_4f1f5e\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_5e8f2d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9a7c3b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: 15, name: \"subList\") property(List) sub_list_3e9b1f\n        in(x: -433, y: 149, name: \"mainList\") property(List) main_list_5c7d6a\n\n        out(x: 1170, y: 10, name: \"output\") property(Bool) output_2c4b3e\n\n        instance(x: -184, y: 9, name: \"is sublist\") filter_8f1c6c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 496, y: 10) contains_7a0d5f root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(List) current_1c3e8f\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_5a9d0b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_7f6b4c\n\n            instance(x: 226, y: 56) contains_3e2f1f root.Std_k98ojb.List.Contains {}\n            current_1c3e8f -> contains_3e2f1f.list\n            sub_list_3e9b1f -> contains_3e2f1f.item\n            contains_3e2f1f.is_contained -> output_7f6b4c\n        } -> filter_8f1c6c.handler\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        main_list_5c7d6a -> filter_8f1c6c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            length_main_list_5c7d6a -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_8f1c6c.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_7a0d5f.list\n        false -> contains_7a0d5f.item\n        not_75283f.result -> output_2c4b3e\n        contains_7a0d5f.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -305, y: 10, name: \"subList\") property(List) sub_list_1e3b8f\n        in(x: -306, y: -150, name: \"mainList\") property(List) main_list_7c9a4d\n\n        out(x: 1100, y: -120, name: \"output\") property(Bool) output_6a5a2e\n\n        instance(x: -88, y: -122, name: \"find sub list in main list\") find_1f3b8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -0, y: 25, name: \"current\") property(List) current_7e5a9d\n            in(x: -30, y: -26, name: \"_index\") property(Number) _index_3c8f6b\n\n            out(x: 705, y: -1, name: \"output\") property(Bool) output_4e2f0e\n\n            instance(x: 226, y: 18) contains_5d9a7f root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 13) equal_3c8f6b root.Std_k98ojb.Logic.Equal {}\n            current_7e5a9d -> contains_5d9a9f.list\n            sub_list_1e3b8f -> contains_5d9a9f.item\n            contains_5d9a9f.is_contained -> equal_3c8f6b.left\n            0 -> equal_3c8f6b.right\n            equal_3c8f6b.result -> output_4e2f0e\n        } -> find_1f3b8c.predicate\n        main_list_7c9a4d -> find_1f3b8c.items\n        instance(x: 750, y: -122) not_5d9a9f root.Std_k98ojb.Logic.Not {}\n        find_1f3b8c.item -> not_5d9a9f.input\n        not_5d9a9f.result -> output_6a5a2e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_3a0b5f\n        in(x: -485, y: -120, name: \"list2\") property(List) list2_9c8e7d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_3a0b5f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9c8e7d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_3a9f6b\n        in(x: -485, y: -120, name: \"list2\") property(List) list2_7e4c5d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_3a9f6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_7e4c5d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f9c5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 71, name: \"index\") property(Number) index_8c1e6d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b2f3a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_9b2f3a.result -> notequal_807ffd.left\n            index_8c1e6d -> sub_9b2f3a.first\n            elem_9f6850 -> sub_9b2f3a.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4b8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_8c1e6d\n\n            instance(x: 89, y: 29) list_length_5b2a7f root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) minus_3c9b4f root.Std_k98ojb.Math.Sub {}\n            instance(x: 311, y: 71) plus_1e0d6e root.Std_k98ojb.Math.Add {}\n            list_length_5b2a7f.length -> minus_3c9b4f.first\n            1 -> minus_3c9b4f.second\n            index_8c1e6d -> plus_1e0d6e.first\n            minus_3c9b4f.result -> plus_1e0d6e.second\n            list_length_5b2a7f.length -> plus_1e0d6e.second\n        } -> find_6d05b0.index_handler\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"context\") property(Number) context_7c3e8d\n\n            instance(x: 89, y: 29) list_length_5b2a7f root.Std_k98ojb.List.Length {}\n            list_length_5b2a7f.length -> context_7c3e8d\n        } -> find_6d05b0.context_handler\n        find_6d05b0.item -> missing_number_7f9c5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_9f6d1a\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_7c3e2b\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -110, y: 41, name: \"index\") property(Number) index_1c8e3a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 309, y: -1) add_3a7f0c root.Std_k98ojb.Math.Add {}\n            index_1c8e3a -> add_3a7f0c.first\n            1 -> add_3a7f0c.second\n            add_3a7f0c.result -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.right -> modulo_1088d5.result\n            0 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_missing_node.predicate\n        list_9f6d1a -> find_missing_node.items\n        find_missing_node.index -> missing_7c3e2b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_9f8d6a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: 70, name: \"index\") property(Number) index_7c3e8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7c3e8a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d6a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: 70, name: \"index\") property(Number) index_7c3e8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7c3e8a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1d8b9f\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 112, name: \"index\") property(Number) index_1c7e5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1c7e5a -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1d8b9f -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_1c7e5a\n\n            instance(x: 89, y: 29) add_3b4d6a root.Std_k98ojb.Math.Add {}\n            1 -> add_3b4d6a.second\n            index_1c7e5a -> add_3b4d6a.first\n            add_3b4d6a.result -> index_1c7e5a\n        } -> find_6d05b0.index_handler\n        0 -> find_6d05b0.index\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8d6a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -109, y: 57, name: \"index\") property(Number) index_1c7e5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1c7e5a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d6a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_1c7e5a\n\n            instance(x: 89, y: 29) count_6d4b8c root.Std_k98ojb.Count {}\n            elem_9f6850 -> count_6d4b8c.count\n            count_6d4b8c.count -> index_1c7e5a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9d8f5a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 63, name: \"index\") property(Number) index_3c1e7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_3c1e7a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9d8f5a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 63, name: \"index\") property(Number) index_3c1e7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_3c1e7a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_8f3b9a\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_7e5c1d\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: -29, name: \"index\") property(Number) index_1c7e6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 309, y: -27) add_2c7e3f root.Std_k98ojb.Math.Add {}\n            index_1c7e6a -> add_2c7e3f.first\n            1 -> add_2c7e3f.second\n            add_2c7e3f.result -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_missing_node.predicate\n        list_8f3b9a -> find_missing_node.items\n        add_2c7e3f.result -> find_missing_node.index\n        0 -> add_2c7e3f.first\n        find_missing_node.item -> missing_7e5c1d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 65, name: \"index\") property(Number) index_ae4c7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1d5f2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_1d5f2b.result -> notequal_807ffd.left\n            index_ae4c7a -> sub_1d5f2b.first\n            elem_9f6850 -> sub_1d5f2b.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1d5f2b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_1d5f2b.result -> notequal_807ffd.left\n            index_ae4c7a -> sub_1d5f2b.first\n            elem_9f6850 -> sub_1d5f2b.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9a6b1e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f2c8d\n\n        instance(x: 0, y: 0) find_4b5c3c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 62, name: \"index\") property(Number) index_7c8a2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1b3d5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_1b3d5f.result -> notequal_807ffd.left\n            index_7c8a2e -> sub_1b3d5f.first\n            elem_9f6850 -> sub_1b3d5f.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4b5c3c.predicate\n        list_9a6b1e -> find_4b5c3c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1b3d5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_1b3d5f.result -> notequal_807ffd.left\n            index_7c8a2e -> sub_1b3d5f.first\n            elem_9f6850 -> sub_1b3d5f.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4b5c3c.index_predicate\n        find_4b5c3c.item -> missing_number_7f2c8d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_6e9c0f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1d8b3a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f9e4c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 57, name: \"index\") property(Number) index_8c7d1e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2f3b4a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2f3b4a.result -> notequal_807ffd.left\n            index_8c7d1e -> sub_2f3b4a.first\n            elem_9f6850 -> sub_2f3b4a.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1d8b3a -> find_6d05b0.items\n        find_6d05b0.index -> index_8c7d1e\n        find_6d05b0.item -> missing_number_7f9e4c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_7e9f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a4d3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6f5c1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7e9f5c.input\n        \" \" -> replace_7e9f5c.search\n        \":\" -> replace_7e9f5c.replace\n        replace_7e9f5c.output -> replace_8a4d3c.input\n        \",\" -> replace_8a4d3c.search\n        \":\" -> replace_8a4d3c.replace\n        replace_8a4d3c.output -> replace_6f5c1c.input\n        \".\" -> replace_6f5c1c.search\n        \":\" -> replace_6f5c1c.replace\n        replace_6f5c1c.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1f2b9a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c8d6e\n\n        instance(x: 0, y: 1) replace_7f3b4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9a3b2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_8c5d6e root.Std_k98ojb.Strings.Replace {}\n        input_1f2b9a -> replace_7f3b4f.input\n        \" \" -> replace_7f3b4f.search\n        \":\" -> replace_7f3b4f.replace\n        replace_7f3b4f.output -> replace_9a3b2f.input\n        \",\" -> replace_9a3b2f.search\n        \":\" -> replace_9a3b2f.replace\n        replace_9a3b2f.output -> replace_8c5d6e.input\n        \".\" -> replace_8c5d6e.search\n        \":\" -> replace_8c5d6e.replace\n        replace_8c5d6e.output -> output_5c8d6e\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_3b7f9a root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3a9c7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4d6e5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8c9f1f root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3a9c7f.input\n        \" \" -> replace_3a9c7f.search\n        \":\" -> replace_3a9c7f.replace\n        replace_3a9c7f.output -> replace_4d6e5f.input\n        \",\" -> replace_4d6e5f.search\n        \":\" -> replace_4d6e5f.replace\n        replace_4d6e5f.output -> replace_8c9f1f.input\n        \".\" -> replace_8c9f1f.search\n        \":\" -> replace_8c9f1f.replace\n        replace_8c9f1f.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f9c6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a3d8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4b1b7c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7f9c6e.input\n        \" \" -> replace_7f9c6e.search\n        \":\" -> replace_7f9c6e.replace\n        replace_7f9c6e.output -> replace_5a3d8c.input\n        \",\" -> replace_5a3d8c.search\n        \":\" -> replace_5a3d8c.replace\n        replace_5a3d8c.output -> replace_4b1b7c.input\n        \".\" -> replace_4b1b7c.search\n        \":\" -> replace_4b1b7c.replace\n        replace_4b1b7c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1a8d5f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_3e6c7b\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_0c4f9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_1a8d5f root.Std_k98ojb.Strings.Replace {}\n        input_1a8d5f -> replace_1a8d5f.input\n        \" \" -> replace_1a8d5f.search\n        \":\" -> replace_1a8d5f.replace\n        replace_1a8d5f.output -> replace_0c4f9f.input\n        instance(x: 221, y: -48) replace_2b3e6f root.Std_k98ojb.Strings.Replace {}\n        replace_0c4f9f.output -> replace_2b3e6f.input\n        \",\" -> replace_2b3e6f.search\n        \":\" -> replace_2b3e6f.replace\n        instance(x: 221, y: -48) replace_3a8d5f root.Std_k98ojb.Strings.Replace {}\n        replace_2b3e6f.output -> replace_3a8d5f.input\n        \".\" -> replace_3a8d5f.search\n        \":\" -> replace_3a8d5f.replace\n        replace_3a8d5f.output -> output_3e6c7b\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_aad0c2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_06d2e5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4aeea6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: 0) replace_06d2e7 root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_spaces_commas_dots.input\n        \" \" -> replace_06d2e5.search\n        \":\" -> replace_06d2e5.replace\n        replace_06d2e5.output -> replace_4aeea6.input\n        \",\" -> replace_4aeea6.search\n        \":\" -> replace_4aeea6.replace\n        replace_4aeea6.output -> replace_06d2e7.input\n        \".\" -> replace_06d2e7.search\n        \":\" -> replace_06d2e7.replace\n        replace_06d2e7.output -> output_1\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -232, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3e9f4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d6a8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5e5f1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e9f4c.input\n        \" \" -> replace_3e9f4c.search\n        \":\" -> replace_3e9f4c.replace\n        replace_3e9f4c.output -> replace_7d6a8f.input\n        \",\" -> replace_7d6a8f.search\n        \":\" -> replace_7d6a8f.replace\n        replace_7d6a8f.output -> replace_5e5f1f.input\n        \".\" -> replace_5e5f1f.search\n        \":\" -> replace_5e5f1f.replace\n        replace_5e5f1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9d8a2c root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1a8f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_3c7b6d\n\n        instance(x: 0, y: 1) replace_4e5c5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a9f2c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7d6c3d root.Std_k98ojb.Strings.Replace {}\n        input_1a8f9e -> replace_4e5c5e.input\n        \" \" -> replace_4e5c5e.search\n        \":\" -> replace_4e5c5e.replace\n        replace_4e5c5e.output -> replace_8a9f2c.input\n        \",\" -> replace_8a9f2c.search\n        \":\" -> replace_8a9f2c.replace\n        replace_8a9f2c.output -> replace_7d6c3d.input\n        \".\" -> replace_7d6c3d.search\n        \":\" -> replace_7d6c3d.replace\n        replace_7d6c3d.output -> output_3c7b6d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_9e5a2f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_2f8d6a\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1c3e7b\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_0a9c5f root.Std_k98ojb.Strings.Replace {}\n        input_2f8d6a -> replace_0a9c5f.input\n        \" \" -> replace_0a9c5f.search\n        \":\" -> replace_0a9c5f.replace\n        instance(x: 221, y: -48) replace_1e7b3f root.Std_k98ojb.Strings.Replace {}\n        replace_0a9c5f.output -> replace_1e7b3f.input\n        \",\" -> replace_1e7b3f.search\n        \":\" -> replace_1e7b3f.replace\n        instance(x: 221, y: -48) replace_2d8f4f root.Std_k98ojb.Strings.Replace {}\n        replace_1e7b3f.output -> replace_2d8f4f.input\n        \".\" -> replace_2d8f4f.search\n        \":\" -> replace_2d8f4f.replace\n        replace_2d8f4f.output -> output_1c3e7b\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_aad0c2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f9c6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a5d8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3e7d1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7f9c6e.input\n        \" \" -> replace_7f9c6e.search\n        \":\" -> replace_7f9c6e.replace\n        replace_7f9c6e.output -> replace_4a5d8c.input\n        \",\" -> replace_4a5d8c.search\n        \":\" -> replace_4a5d8c.replace\n        replace_4a5d8c.output -> replace_3e7d1c.input\n        \".\" -> replace_3e7d1c.search\n        \":\" -> replace_3e7d1c.replace\n        replace_3e7d1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 6, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1050, y: 14, name: \"output\") property(Bool) output_7c2a5b\n\n        instance(x: -194, y: 10) characters_3e6b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: 12) length_9f0d8f root.Std_k98ojb.List.Length {}\n        instance(x: 480, y: 13) getat_ea1e7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 694, y: 14) equal_5a2c6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 903, y: 15) reduce_0f8d3c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -23, y: -16, name: \"acc\") property(String) acc_1a2e7c\n                in(x: -12, y: 47, name: \"current\") property(String) current_9f0d8f\n\n                out(x: 705, y: 49, name: \"output\") property(String) output_efbc78\n\n                instance(x: 226, y: 56) equal_c76d2b root.Std_k98ojb.Logic.Equal {}\n                acc_1a2e7c -> equal_c76d2b.left\n                current_9f0d8f -> equal_c76d2b.right\n                equal_c76d2b.result -> output_efbc78\n            }\n        }\n        instance(x: 1106, y: 16) not_75283f root.Std_k98ojb.Logic.Not {}\n        input_8f1e9d -> characters_3e6b4c.input\n        characters_3e6b4c.characters -> length_9f0d8f.list\n        characters_3e6b4c.characters -> getat_ea1e7c.list\n        0 -> getat_ea1e7c.index\n        getat_ea1e7c.itemAtIndex -> equal_5a2c6c.left\n        input_8f1e9d -> equal_5a2c6c.right\n        length_9f0d8f.length -> reduce_0f8d3c.list\n        characters_3e6b4c.characters -> reduce_0f8d3c.items\n        1 -> reduce_0f8d3c.initial_value\n        equal_5a2c6c.result -> reduce_0f8d3c.accumulated\n        reduce_0f8d3c.output -> not_75283f.input\n        not_75283f.result -> output_7c2a5b\n    }\n\n    \n\n    instance(x: -123, y: 110) is_same_1e6e9d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -279, y: 5, name: \"input\") property(String) input_1a9d8f\n\n        out(x: 1013, y: 20, name: \"output\") property(Bool) output_6b2c7e\n\n        instance(x: -93, y: 4) characters_0a5c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: 18) length_8d3a1c root.Std_k98ojb.List.Length {}\n        instance(x: 428, y: 20) getat_6e2f7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 634, y: 19) equal_5e0c9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 844, y: 18) for_8d4a1c root.Std_k98ojb.Std.For {}\n        instance(x: 1022, y: -7) and_6b3c7e root.Std_k98ojb.Logic.And {}\n        characters_0a5c9f.characters -> length_8d3a1c.list\n        input_1a9d8f -> characters_0a5c9f.input\n        0 -> getat_6e2f7c.index\n        characters_0a5c9f.characters -> getat_6e2f7c.list\n        length_8d3a1c.length -> for_8d4a1c.items\n        getat_6e2f7c.itemAtIndex -> equal_5e0c9f.left\n        characters_0a5c9f.characters -> for_8d4a1c.items\n        for_8d4a1c.index -> getat_6e2f7c.index\n        for_8d4a1c.item -> equal_5e0c9f.right\n        equal_5e0c9f.result -> and_6b3c7e.left\n        1 -> and_6b3c7e.right\n        for_8d4a1c.onItem -> equal_5e0c9f.execute\n        for_8d4a1c.done -> output_6b2c7e\n        and_6b3c7e.result -> output_6b2c7e\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -280, y: 5, name: \"string\") property(String) string_1a8f0e\n\n        out(x: 557, y: 54, name: \"output\") property(Bool) output_9c3b6d\n\n        instance(x: -94, y: 56) characters_7a4f2c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 55) length_1e5c8c root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 54) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -2) getat_c7c7e6 root.Std_k98ojb.List.GetAt {}\n        characters_7a4f2c.characters -> length_1e5c8c.list\n        string_1a8f0e -> characters_7a4f2c.input\n        0 -> getat_c7c7e6.index\n        characters_7a4f2c.characters -> getat_c7c7e6.list\n        length_1e5c8c.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        getat_c7c7e6.itemAtIndex -> equal_f89569.gen_0\n        characters_7a4f2c.characters -> equal_f89569.gen_1\n        equal_f89569.result -> output_9c3b6d\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 20, name: \"input\") property(String) input_9a3f5e\n\n        out(x: 1066, y: 22, name: \"output\") property(Bool) output_1b2c4d\n\n        instance(x: -92, y: 19) characters_7e0e8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 20) length_6a5f9f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 21) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 560, y: -1) lessthanorequal_3e8d0c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 780, y: 20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: 19) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1220, y: -1) equal_3f9e6c root.Std_k98ojb.Logic.Equal {}\n        characters_7e0e8f.characters -> length_6a5f9f.list\n        input_9a3f5e -> characters_7e0e8f.input\n        1 -> lessthanorequal_3e8d0c.right\n        length_6a5f9f.length -> lessthanorequal_3e8d0c.left\n        lessthanorequal_3e8d0c.result -> for_d26972.items\n        characters_7e0e8f.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> equal_3f9e6c.left\n        characters_7e0e8f.characters -> for_d26972.items\n        for_d26972.item -> getat_ce2a48.index\n        for_d26972.onItem -> equal_3f9e6c.execute\n        1 -> equal_3f9e6c.right\n        equal_3f9e6c.result -> equal_f89569.left\n        true -> equal_f89569.right\n        for_d26972.done -> output_1b2c4d\n        equal_f89569.result -> output_1b2c4d\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_1a3e5f\n\n        out(x: 1098, y: 20, name: \"output\") property(Bool) output_eb9d2c\n\n        instance(x: -95, y: 21) characters_7f4b6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 238, y: 22) length_1e5a8f root.Std_k98ojb.List.Length {}\n        instance(x: 456, y: 23) getat_9d3c0f root.Std_k98ojb.List.GetAt {}\n        instance(x: 675, y: 24) equal_7a4b2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 889, y: 25) reduce_5e1f8f root.Std_k98ojb.Iteration.Reduce {}\n        characters_7f4b6f.characters -> length_1e5a8f.list\n        input_1a3e5f -> characters_7f4b6f.input\n        length_1e5a8f.length -> getat_9d3c0f.index\n        1 -> getat_9d3c0f.index\n        characters_7f4b6f.characters -> getat_9d3c0f.list\n        input_1a3e5f -> equal_7a4b2c.left\n        getat_9d3c0f.itemAtIndex -> equal_7a4b2c.right\n        equal_7a4b2c.result -> reduce_5e1f8f.accumulatedValue\n        characters_7f4b6f.characters -> reduce_5e1f8f.items\n        func() {\n            in(x: -27, y: 0, name: \"current\") property(Bool) current_9a3c2d\n\n            out(x: 505, y: 19, name: \"out\") property(Bool) out_5b1e8f\n\n            instance(x: 226, y: -4) and_7f0b6f root.Std_k98ojb.Logic.And {}\n            current_9a3c2d -> and_7f0b6f.left\n            reduce_5e1f8f.accumulatedValue -> and_7f0b6f.right\n            and_7f0b6f.result -> out_5b1e8f\n        } -> reduce_5e1f8f.handler\n        reduce_5e1f8f.output_value -> output_eb9d2c\n    }\n\n    \n\n    instance(x: 10, y: -13) is_same_4a3e6f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -275, y: 13, name: \"input\") property(String) input_1f8a5e\n\n        out(x: 1050, y: 23, name: \"output\") property(Bool) output_9b7d2c\n\n        instance(x: -97, y: 14) characters_3a4e6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 259, y: 24) length_5f1a8f root.Std_k98ojb.List.Length {}\n        instance(x: 472, y: 23) getat_7d9c0f root.Std_k98ojb.List.GetAt {}\n        instance(x: 683, y: 22) equal_2e6f4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 890, y: 21) reduce_8a3c5c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1009, y: -1) not_0d7a2e root.Std_k98ojb.Logic.Not {}\n        characters_3a4e6f.characters -> length_5f1a8f.list\n        input_1f8a5e -> characters_3a4e6f.input\n        0 -> getat_7d9c0f.index\n        characters_3a4e6f.characters -> getat_7d9c0f.list\n        length_5f1a8f.length -> reduce_8a3c5c.count\n        func() {\n            in(x: -30, y: 17, name: \"acc\") property(String) acc_2b4e6c\n            in(x: -23, y: 80, name: \"current\") property(Any) current_1f8a5e\n\n            out(x: 705, y: 49, name: \"output\") property(String) output_e3d7c9\n\n            instance(x: 226, y: 56) equal_2b4e6c root.Std_k98ojb.Logic.Equal {}\n            current_1f8a5e -> equal_2b4e6c.right\n            acc_2b4e6c -> equal_2b4e6c.left\n            equal_2b4e6c.result -> output_e3d7c9\n        } -> reduce_8a3c5c.handler\n        getat_7d9c0f.itemAtIndex -> reduce_8a3c5c.initialValue\n        not_0d7a2e.result -> output_9b7d2c\n        reduce_8a3c5c.output_value -> equal_2e6f4c.left\n        true -> equal_2e6f4c.right\n        equal_2e6f4c.result -> not_0d7a2e.input\n    }\n\n    \n\n    instance(x: -10, y: 110) check_same_1b8f3c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_8e9a3f\n\n        out(x: 1095, y: 1, name: \"output\") property(Bool) output_6c4b2d\n\n        instance(x: -100, y: 16, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 502, y: 0) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 1078, y: -2) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        input_8e9a3f -> strings_characters_1c0c7e.input\n        instance(x: -296, y: 16) strings_characters_1c0c7e root.Std_k98ojb.Strings.Characters {}\n        strings_characters_1c0c7e.characters -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        instance(x: 246, y: -209, name=\"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        map_c73e3b.output_list -> contains_32727d.list\n        strings_characters_1c0c7e.characters[0] -> contains_32727d.item\n        not_75283f.result -> output_6c4b2d\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ae9a1f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -296, y: 30, name: \"string\") property(String) string_1f8e5d\n\n        out(x: 557, y: 59, name: \"output\") property(Bool) output_9a3b0c\n\n        instance(x: -92, y: 29) characters_4b2e7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 28) length_5f8d6f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 27) equal_1a3e9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 571, y: -4) map_7a2c0f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 834, y: 30) intersection_5d6b8c root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 1073, y: 29) length_1e9b4a root.Std_k98ojb.List.Length {}\n        instance(x: 1287, y: 28) equal_2f0f5d root.Std_k98ojb.Logic.Equal {}\n        string_1f8e5d -> characters_4b2e7c.input\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_6a9f3c\n\n            out(x: 521, y: -28, name: \"output\") property(List) output_8d4b2e\n\n            instance(x: 74, y: -23) list_1c0f5f root.Std_k98ojb.List.Empty {}\n            instance(x: 285, y: -25) concat_9a6e7f root.Std_k98ojb.List.Concat {}\n            current_6a9f3c -> concat_9a6e7f.list\n            list_1c0f5f.list -> concat_9a6e7f.listWithItem\n            concat_9a6e7f.listConcatenated -> output_8d4b2e\n        } -> map_7a2c0f.handler\n        characters_4b2e7c.characters -> map_7a2c0f.items\n        map_7a2c0f.output_list -> intersection_5d6b8c.left\n        map_7a2c0f.output_list -> intersection_5d6b8c.right\n        length_1e9b4a.length -> equal_2f0f5d.left\n        1 -> equal_2f0f5d.right\n        intersection_5d6b8c.intersection -> length_5f8d6f.list\n        characters_4b2e7c.characters -> length_5f8d6f.list\n        length_5f8d6f.length -> equal_1a3e9c.left\n        0 -> equal_1a3e9c.right\n        equal_1a3e9c.result -> output_9a3b0c\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_8f6d2c root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 15, name: \"input\") property(String) input_8f1a5e\n\n        out(x: 1000, y: 30, name: \"output\") property(Bool) output_3c7b6d\n        out(x: 1092, y: -10, name: \"continue\") trigger() continue_9e4a7f\n\n        instance(x: 14, y: 25, name: \"get characters\") characters_5a8e1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 352, y: 26) lessthanorequal_f0c2d9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 587, y: -10) for_7a4e6f root.Std_k98ojb.Std.For {}\n        instance(x: 1003, y: -55) and_8e5c0f root.Std_k98ojb.Logic.And {}\n        instance(x: 1259, y: -60) if_e2d1ec root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -140) equal_6a7f3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1760, y: -145) not_8e5c0f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_1d3a9\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_8e5c0f\n\n            instance(x: 106, y: 17) length_2b7f6 root.Std_k98ojb.List.Length {}\n            element_1d3a9 -> characters_5a8e1f.input\n            length_2b7f6.list -> out_8e5c0f\n        } -> for_7a4e6f.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_9d3f1\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_8e5c0f\n\n            instance(x: 74, y: -23) equal_7a4e6f root.Std_k98ojb.Logic.Equal {}\n            current_9d3f1 -> equal_7a4e6f.left\n            input_8f1a5e -> equal_7a4e6f.right\n            equal_7a4e6f.result -> bool_8e5c0f\n        } -> for_7a4e6f.handler\n        characters_5a8e1f.characters -> for_7a4e6f.items\n        lessthanorequal_f0c2d9.left -> if_e2d1ec.predicate\n        1 -> lessthanorequal_f0c2d9.right\n        for_7a4e6f.index -> lessthanorequal_f0c2d9.left\n        for_7a4e6f.onItem -> if_e2d1ec.execute\n        if_e2d1ec.else -> continue_9e4a7f\n        equal_6a7f3f.result -> and_8e5c0f.right\n        not_8e5c0f.input -> and_8e5c0f.left\n        for_7a4e6f.handler.value -> equal_6a7f3f.left\n        input_8f1a5e -> equal_6a7f3f.right\n        if_e2d1ec.then -> continue_9e4a7f\n        and_8e5c0f.result -> if_e2d1ec.predicate\n        for_7a4e6f.done -> continue_9e4a7f\n        not_8e5c0f.result -> output_3c7b6d\n    }\n\n    \n\n    instance(x: -156, y: 59) is_same_8e5c0f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 20, name: \"input\") property(String) input_9a3f2e\n\n        out(x: 557, y: 93, name: \"output\") property(Bool) output_7b0c1d\n\n        instance(x: -87, y: 21) characters_5e8b6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 92) length_9f4a2f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 91) equal_7d0c1c root.Std_k98ojb.Logic.Equal {}\n        instance(x: -87, y: -96) getat_8e6e3f root.Std_k98ojb.List.GetAt {}\n        instance(x: 146, y: -97) lessthanorequal_5a4d7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 360, y: -96) for_9c1e6f root.Std_k98ojb.Std.For {}\n        characters_5e8b6c.characters -> getat_8e6e3f.list\n        length_9f4a2f.length -> lessthanorequal_5a4d7f.right\n        0 -> lessthanorequal_5a4d7f.left\n        lessthanorequal_5a4d7f.result -> for_9c1e6f.predicate\n        getat_8e6e3f.itemAtIndex -> equal_7d0c1c.right\n        input_9a3f2e -> characters_5e9b6c.characters\n        0 -> getat_8e6e3f.index\n        for_9c1e6f.items -> list_9f4a2f.list\n        equal_7d0c1c.left -> input_9a3f2e\n        for_9c1e6f.onItem -> equal_7d0c1c.execute\n        length_9f4a2f.list -> characters_5e8b6c.characters\n        for_9c1e6f.done -> output_7b0c1d\n        for_9c1e6f.index -> getat_8e6e3f.index\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_5a4d7f root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a8c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9e7d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9e7d4f.items\n        count_1f2a8c.count -> filter_9e7d4f.execute\n        filter_9e7d4f.output_list -> count_1f2a8c.value\n        count_1f2a8c.reset -> characters_node.trigger\n        count_1f2a8c.done -> output_ai\n    }\n    \n\n    instance(x: 0, y: -30) filter_9e7d4f root.main.count_digits.Iteration.Filter {\n        handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n    }\n\n    \n    instance(x: -30, y: 0) characters_node root.main.count_digits.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_1f2a8c root.main.count_digits.Std_k98ojb.Count {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a5f2c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -50) filter_3d7de6 root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> count_1a5f2c.count\n        characters_node.characters -> filter_3d7b9e.items\n        instance(x: 0, y: -100) list_length_node root.Std_k98ojb.List.Length {}\n        filter_3d7de6.output_list -> list_length_node.list\n        count_1a5f2c.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_8e4e9 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -32, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 0, y: 0) count_1f8a4c root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        input_ai -> characters_node.input\n        characters_node.characters -> count_1f8a4c.items\n        count_1f8a4c.count -> is_numeric_node.input\n        is_numeric_node.value -> count_1f8a4c.reset\n        count_1f8a4c.count -> output_ai\n\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a6c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1f2a6c.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1f2a6c.value\n        instance(x: 0, y: -60) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_1f2a6c.count -> ifexpression_3d7de6.gen_0\n        instance(x: 0, y: -90) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1f2a6c.count -> math_expr_node.gen_0\n        instance(x: 0, y: -120) math_expr_node_9e4d5e root.Std_k98ojb.Math.Expression {\n            expression: \"0\"\n        }\n        ifexpression_3d7de6.then -> math_expr_node_9e4d5e.execute\n        ifexpression_3d7de6.else -> math_expr_node.execute\n        math_expr_node.result -> output_ai\n        math_expr_node_9e4d5e.result -> output_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_2c6f7a root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -1) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_2c6f7a.count\n        count_2c6f7a.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -1) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 15, y: 0) count_1a5c6e root.Std_k98ojb.Count {}\n        instance(x: 15, y: -50) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_1a5c6e.count\n        count_1a5c6e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -50) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2d8c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -50) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> count_1a2d8c.items\n        count_1a2d8c.count -> filter_3e25a9.list\n        instance(x: 0, y: -100) list_length_node root.Std_k98ojb.List.Length {}\n        filter_3e25a9.result -> list_length_node.list\n        list_length_node.length -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -45, y: 1) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_2a5c8e root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> ifexpression_3d7de6.gen_0\n        count_2a5c8e.count -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> count_2a5c8e.count\n        ifexpression_3d7de6.else -> count_2a5c8e.reset\n        instance(x: 0, y: 0) getter_38583a root.Std_k98ojb.Get {\n            name: \"count\"\n        }\n        count_2a5c8e.count -> getter_38583a.value\n        getter_38583a.value -> output_ai\n    }\n\n    \n    instance(x: -45, y: 1) characters_node root.main.count_digits.Strings.Characters {}\n    \n\n    instance(x: 0, y: 0) count_2a5c8e root.main.count_digits.Count {}\n\n    \n    instance(x: 0, y: 0) ifexpression_3d7de6 root.main.count_digits.Std.IfExpression {\n        expression: \"it.IsNumeric()\"\n    }\n\n    \n    instance(x: 0, y: 0) getter_38583a root.main.count_digits.Get {\n        name: \"count\"\n    }\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f8a6c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -20) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1f8a6c.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1f8a6c.value\n        count_1f8a6c.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -20) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a4c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -20) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e25a9.list\n        count_1f2a4c.count -> filter_3e25a9.on_item\n        filter_3e25a9.result -> count_1f2a4c.value\n        instance(x: 0, y: -40) ifexpression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_1f2a4c.count -> ifexpression_node.gen_0\n        instance(x: 0, y: -60) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1f2a4c.count -> math_expr_node.gen_0\n        instance(x: 0, y: -80) math_expr_node_3e25a9 root.Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        ifexpression_node.then -> math_expr_node_3e25a9.execute\n        ifexpression_node.else -> math_expr_node.execute\n        math_expr_node.result -> output_ai\n    }\n\n    \n    instance(x: 0, y: -100) count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e5a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e5a8c.first\n        data_cde0dc -> pow_9e5a8c.second\n        pow_9e5a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c5e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c5e.x\n        data_cde0dc -> pow_9a8c5e.y\n        pow_9a8c5e.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a3c9e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a3c9e.x\n        data_cde0dc -> pow_5a3c9e.y\n        pow_5a3c9e.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3e8a9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3e8a9c.x\n        data_cde0dc -> pow_3e8a9c.y\n        pow_3e8a9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a9e3c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a9e3c.x\n        data_cde0dc -> pow_5a9e3c.y\n        pow_5a9e3c.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e9c0a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e9c0a.x\n        data_cde0dc -> pow_5e9c0a.y\n        pow_5e9c0a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a0c8e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a0c8e.x\n        data_cde0dc -> pow_9a0c8e.y\n        pow_9a0c8e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a3c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a3c0e.x\n        data_cde0dc -> pow_9a3c0e.y\n        pow_9a3c0e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e8a0c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e8a0c.x\n        data_cde0dc -> pow_5e8a0c.y\n        pow_5e8a0c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e3a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e3a8c.x\n        data_cde0dc -> pow_5e3a8c.y\n        pow_5e3a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -103, y: 54, name: \"size\") property(Number) size_8f1b5e\n\n        out(x: 46, y: 158, name: \"surfaceArea\") property(Number) surfaceArea_7c3a0d\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f1b5e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surfaceArea_7c3a0d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -111, y: 15, name: \"size\") property(Number) size_1f8b4e\n\n        out(x: 46, y: 158, name: \"surfaceArea\") property(Number) surfaceArea_9a3d5c\n\n        instance(x: 10, y: -17) mul_2b7c6f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1f8b4e -> mul_2b7c6f.first\n        data_cde0dc -> mul_2b7c6f.second\n        mul_2b7c6f.result -> surfaceArea_9a3d5c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_1e4a8f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 57, name: \"size\") property(Number) size_9f1e3d\n\n        out(x: 656, y: -68, name: \"\") property(Number) _7dd980\n\n        instance(x: 92, y: -22) mul_5a8b0c root.Std_k98ojb.Math.Mul {}\n        instance(x: 94, y: -105) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        size_9f1e3d -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_5a8b0c.first\n        6 -> mul_5a8b0c.second\n        mul_5a8b0c.result -> _7dd980\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_9f8b1e\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) mul_1b9d7e root.Std_k98ojb.Math.Mul {}\n        instance(x: -144, y: 112) getter_5a6c4f = surface_area\n        instance(x: 116, y: -268) setter_8c2f3c = surface_area\n        size_9f8b1e -> mul_1b9d7e.first\n        6 -> mul_1b9d7e.second\n        getter_5a6c4f.value -> surface_area_b2508f\n        mul_1b9d7e.result -> setter_8c2f3c.new_value\n        continue_685c8f -> setter_8c2f3c.continue\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_of_cube_d6e930 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_1f0b2e\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: 105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_1f0b2e -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: 22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f2330d.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: -45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -119, y: 22, name: \"size\") property(Number) size_3a8f1e\n\n        out(x: 1116, y: 18, name: \"surface_area\") property(Number) surface_area_f7b9c4\n\n        instance(x: 26, y: -16) mul_2d5f0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3a8f1e -> mul_2d5f0f.first\n        data_cde0dc -> mul_2d5f0f.second\n        mul_2d5f0f.result -> surface_area_f7b9c4\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_1a3e8d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -111, y: 21, name: \"size\") property(Number) size_1a9f5e\n\n        out(x: 1046, y: 18, name: \"surfaceArea\") property(Number) surfaceArea_8c7d3b\n\n        instance(x: 15, y: -2) mul_f4b0ea root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 326, y: 74) data_ea9f6e  = 6\n        size_1a9f5e -> mul_f4b0ea.first\n        data_ea9f6e -> mul_f4b0ea.second\n        mul_f4b0ea.result -> surfaceArea_8c7d3b\n    }\n\n    \n\n    instance(x: -10, y: 26) surface_area_of_cube_1a5c2d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 53, name: \"size\") property(Number) size_1f8e9d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f0a3c6 root.Std_k98ojb.Math.Mul {}\n        size_1f8e9d -> mul_f0a3c6.first\n        6 -> mul_f0a3c6.second\n        instance(x: 92, y: -22) mul_5b7b2c root.Std_k98ojb.Math.Mul {}\n        mul_f0a3c6.result -> mul_5b7b2c.first\n        size_1f8e9d -> mul_5b7b2c.second\n        mul_5b7b2c.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 53, name: \"size\") property(Number) size_8f1e6d\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_9a2b5c\n\n        instance(x: 94, y: -105) mul_7a3b4f root.Std_k98ojb.Math.Mul {}\n        size_8f1e6d -> mul_7a3b4f.first\n        6 -> mul_7a3b4f.second\n        instance(x: 92, y: -22) mul_5c9c2f root.Std_k98ojb.Math.Mul {}\n        mul_7a3b4f.result -> mul_5c9c2f.first\n        size_8f1e6d -> mul_5c9c2f.second\n        mul_5c9c2f.result -> surface_area_9a2b5c\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_3b7d4f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_9a1f0e\n\n        out(x: 656, y: 7, name: \"surface_area\") property(Number) surface_area_8c2d4b\n\n        instance(x: 94, y: -105) mul_6f5f3f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_9a1f0e -> mul_6f5f3f.first\n        data_cde0dc -> mul_6f5f3f.second\n        mul_6f5f3f.result -> surface_area_8c2d4b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 13, name: \"list\") property(List) list_4a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3f8e\n        min_list_4d4556.list -> list_4a3f8e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 16, name: \"list\") property(List) list_1e3f2a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b9d6c\n\n        instance(x: 201, y: 62) sub_7f0b8e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a4f2c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5d3b6c root.Std_k98ojb.List.Min {}\n        list_1e3f2a -> max_1a4f2c.list\n        list_1e3f2a -> min_5d3b6c.list\n        max_1a4f2c.max -> sub_7f0b8e.first\n        min_5d3b6c.min -> sub_7f0b8e.second\n        sub_7f0b8e.result -> output_5b9d6c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_2a4c1c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -37, y: 10, name: \"list\") property(List) list_1e3b9f\n\n        out(x: 441, y: 54, name: \"difference\") property(Number) difference_2a7d0c\n\n        instance(x: 188, y: 53) sub_4f8f5f root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: -15) max_3e9c6c root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 136) min_7a1d2f root.Std_k98ojb.List.Min {}\n        list_1e3b9f -> max_3e9c6c.list\n        list_1e3b9f -> min_7a1d2f.list\n        max_3e9c6c.max -> sub_4f8f5f.first\n        min_7a1d2f.min -> sub_4f8f5f.second\n        sub_4f8f5f.result -> difference_2a7d0c\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_9b6e3c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a9f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_6a9f8e\n        min_list_4d4556.list -> list_6a9f8e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e8f5d\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_cb50ae root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_4b8927 root.Std_k98ojb.List.Min {}\n        sub_cb50ae.result -> output_b1d7f8\n        list_1e8f5d -> max_6e87f2.list\n        list_1e8f5d -> min_4b8927.list\n        max_6e87f2.max -> sub_cb50ae.first\n        min_4b8927.min -> sub_cb50ae.second\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -36, y: 10, name: \"list\") property(List) list_5e9f1d\n\n        out(x: 512, y: 63, name: \"difference\") property(Number) difference_6c8b2a\n\n        instance(x: 188, y: 62) sub_4b0c7c root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 155) max_3f1d5e root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358) min_f6a8a9 root.Std_k98ojb.List.Min {}\n        list_5e9f1d -> max_3f1d5e.list\n        list_5e9f1d -> min_f6a8a9.list\n        max_3f1d5e.max -> sub_4b0c7c.first\n        min_f6a8a9.min -> sub_4b0c7c.second\n        sub_4b0c7c.result -> difference_6c8b2a\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5e1f3d root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 17, name: \"list\") property(List) list_1a9f3e\n\n        out(x: 512, y: 63, name: \"difference\") property(Number) difference_4b2d7c\n\n        instance(x: 201, y: 62) sub_5b8a6e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Max list\") max_9f3e1c root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_5a2d7c root.Std_k98ojb.List.Min {}\n        sub_5b8a6e.result -> difference_4b2d7c\n        max_9f3e1c.max -> sub_5b8a6e.first\n        min_5a2d7c.min -> sub_5b8a6e.second\n        list_1a9f3e -> max_9f3e1c.list\n        list_1a9f3e -> min_5a2d7c.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_4b2d7c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -333, y: 145, name: \"list\") property(List) list_1e3b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"max\") max_4d4556 root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"min\") min_f3b46d root.Std_k98ojb.List.Min {}\n        list_1e3b8f -> length_6e87f2.list\n        max_4d4556.list -> list_1e3b8f\n        min_f3b46d.list -> list_1e3b8f\n        sub_852f2e.result -> difference_57c890\n        max_4d4556.max -> sub_852f2e.first\n        min_f3b46d.min -> sub_852f2e.second\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_4a3b5f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3b5f\n        min_list_4d4556.list -> list_4a3b5f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a9f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b7d0c\n\n        instance(x: 201, y: 62) sub_1f4b3c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_9e6a2c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_7d8a0f root.Std_k98ojb.List.Min {}\n        list_6a9f8e -> max_9e6a2c.list\n        list_6a9f8e -> min_7d8a0f.list\n        max_9e6a2c.max -> sub_1f4b3c.first\n        min_7d8a0f.min -> sub_1f4b3c.second\n        sub_1f4b3c.result -> output_5b7d0c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_6e9b2c root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a1d5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9e3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a1d5c.value\n        2 -> modulo_7a1d5c.divisor\n        modulo_7a1d5c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9e3f2f.left\n        0 -> equal_9e3f2f.right\n        equal_9e3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e5d4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2f9d09 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c6a.value\n        2 -> modulo_7e1c6a.divisor\n        modulo_7e1c6a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2f9d09.left\n        0 -> equal_2f9d09.right\n        equal_2f9d09.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 355, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e7c5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_1d4f6f root.Std_k98ojb.Logic.Equal {}\n\n        modulo_0e7c5a.result -> if_07b8c7.predicate\n        input_f5c03d -> modulo_0e7c5a.value\n        2 -> modulo_0e7c5a.divisor\n\n        equal_1d4f6f.left -> if_07b8c7.then\n        0 -> equal_1d4f6f.right\n        modulo_0e7c5a.result -> equal_1d4f6f.right\n\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.else -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1a0d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2e9f5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1a0d7c.value\n        2 -> modulo_1a0d7c.divisor\n        modulo_1a0d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2e9f5f.left\n        0 -> equal_2e9f5f.right\n        equal_2e9f5f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d1c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e7d6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2f1a9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e7d6c.value\n        2 -> modulo_0e7d6c.divisor\n        modulo_0e7d6c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2f1a9f.left\n        0 -> equal_2f1a9f.right\n        equal_2f1a9f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 340, y: -53, name: \"input\") property(Number) input_9e8f0d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e5c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n\n        input_9e8f0d -> modulo_1e5c0a.value\n        2 -> modulo_1e5c0c.divisor\n        modulo_1e5c0a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> and_80a119.left\n        modulo_1e5c0a.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e5c1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2a4f3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e5c1d.value\n        2 -> modulo_7e5c1d.divisor\n        modulo_7e5c1d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2a4f3f.left\n        0 -> equal_2a4f3f.right\n        equal_2a4f3f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 355, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e6c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_1f9d3f root.Std_k98ojb.Logic.Equal {}\n\n        modulo_7e6c0a.result -> if_07b8c7.predicate\n        input_f5c03d -> modulo_7e6c0a.value\n        2 -> modulo_7e6c0a.divisor\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        equal_1f9d3f.result -> out_f3db9f\n        0 -> equal_1f9d3f.right\n        modulo_7e6c0a.result -> equal_1f9d3f.left\n        if_07b8c7.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0a1e2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_5f6d9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0a1e2c.value\n        2 -> modulo_0a1e2c.divisor\n        modulo_0a1e2c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_5f6d9c.left\n        0 -> equal_5f6d9c.right\n        equal_5f6d9c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0a6e1c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2d9f4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0a6e1c.value\n        2 -> modulo_0a6ej1c.divisor\n        modulo_0a6e1c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_2d9f4f.right\n        modulo_0a6e1c.result -> equal_2d9f4f.left\n        equal_2d9f4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1d4e2a root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_8c1a9f root.Std_k98ojb.Iteration.Filter {}\n        characters_3e4b7f.output -> filter_8c1a9f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_8c1a9f.handler\n        filter_8c1a9f.output_list -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            contains_d42dce.contains -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -275, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a9f4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: -10, y: 60) filter_7e5a1c root.Std_k98ojb.Iteration.Filter {}\n        characters_3a9f4c.output -> filter_7e5a1c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_7e5a1c.handler\n        filter_7e5a1c.output_list -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            contains_d42dce.contains -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            in(x: -113, y: 74, name: \"index\") property(Number) index_1e3c8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_1e8f2c root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 55) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            contains_d42dce.input -> slice_1e8f2c.list\n            index_1e3c8a -> slice_1e8f2c.start\n            -1 -> slice_1e8f2c.end\n            elem_9f6850 -> contains_d42dce.contains\n            slice_1e8f2c.output -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_0 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_1e3c8a\n\n            instance(x: 89, y: 29) length_2d7b4c root.Std_k98ojb.List.Length {}\n            elem_9f6850 -> length_2d7b4c.list\n            length_2d7b4c.length -> index_1e3c8a\n        } -> find_6d05b0.index\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"char list\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) not_148aeb root.Std_k98ojb.Logic.Not {}\n            characters_3c713b.output -> contains_d42dce.list\n            current_afd5b1 -> contains_d42dce.input\n            contains_d42dce.result -> not_148aeb.input\n            not_148aeb.output -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        input_0 -> characters_3c713b.input\n        characters_3c713b.output -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -276, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 600, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_3e9b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5c8d7a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_6f1f9f root.Std_k98ojb.Iteration.Filter {}\n        characters_3e9b4f.output -> find_5c8d7a.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e5b8c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_2e5b8c.input\n            elem_9f6850 -> contains_2e5b8c.contains\n            contains_2e5b8c.result -> notequal_807ffd.left\n            1 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5c8d7a.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e5b8c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2e5b8c.input\n            elem_9f6850 -> contains_2e5b8c.contains\n            contains_2e5b8c.result -> bool_af09a7\n        } -> filter_6f1f9f.handler\n        find_5c8d7a.item -> output_ebef81\n        characters_3e9b4f.output -> filter_6f1f9f.items\n        filter_6f1f9f.output_list -> find_5c8d7a.items\n        input_0 -> characters_3e9b4f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f7d6a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_3f7d6a_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_5e9b8c.output -> find_3f7d6a.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3e6c5d root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_3e6c5d.input\n            elem_9f6850 -> contains_3e6c5d.contains\n            contains_3e6c5d.result -> bool_af09a7\n        } -> find_3f7d6a.predicate\n        characters_5e9b8c.output -> ``find_3f7d6a_1``.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3e6c5d root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_3e6c5d.input\n            elem_9f6850 -> contains_3e6c5d.contains\n            contains_3e6c5d.result -> bool_af09a7\n        } -> ``find_3f7d6a_1``.predicate\n        find_3f7d6a.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -274, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a8d5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_6e1b0c root.Std_k98ojb.Iteration.Filter {}\n        characters_3e4c9f.output -> filter_6e1b0c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b1e6c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2b1e6c.input\n            elem_9f6850 -> contains_2b1e6c.contains\n            contains_2b1e6c.result -> bool_af09a7\n        } -> filter_6e1b0c.handler\n        filter_6e1b0c.output_list -> find_7a8d5f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b1e6c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2b1e6c.input\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) slice_1b6e8c root.Std_k98ojb.List.Slice {}\n                contains_2b1e6c.contains -> slice_1b6e8c.start\n                elem_9f6850 -> slice_1b6e8c.end\n                slice_1b6e8c.output -> contains_2b1e6c.input\n            } -> contains_2b1e6c.contains\n            contains_2b1e6c.result -> bool_af09a7\n        } -> find_7a8d5f.predicate\n        characters_3e4c9f.output -> output_0\n        find_7a8d5f.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_3e9f7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_5a8d2f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_1e7c0f root.Std_k98ojb.Strings.Contains {}\n        characters_3e9f7c.output -> find_5a8d2f.items\n        input_0 -> characters_3e9f7c.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_2a7f4c root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) not_0d8a5c root.Std_k98ojb.Logic.Not {}\n            contains_1e7c0f.result -> not_0d8a5c.input\n            slice_2a7f4c.output -> contains_1e7c0f.list\n            current_afd5b1 -> slice_2a7f4c.start\n            -1 -> slice_2a7f4c.end\n            input_0 -> slice_2a7f4c.input\n            not_0d8a5c.output -> bool_1eb6e9\n        } -> find_5a8d2f.predicate\n        find_5a8d2f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"char list\") characters_1c9e2f root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_1c9e2f.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_1c9e2f.output -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_1c9e2f.output -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -450) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -459) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -453) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -450) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -459) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 7268,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -193, y: -103, name: \"list1\") property(List) list1_9a2f8e\n        in(x: -201, y: 17, name: \"list2\") property(List) list2_4b0c6d\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2f8e -> intersection_4e8c54.left\n        list2_4b0c6d -> intersection_4e8c54.right\n        instance(x: 245, y: -27) notempty_5f7b3f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersection -> notempty_5f7b3f.list\n        notempty_5f7b3f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -265, y: -139, name: \"list1\") property(List) list1_3a0f8e\n        in(x: -273, y: 12, name: \"list2\") property(List) list2_9b7c5d\n\n        out(x: 755, y: -120, name: \"output\") property(Bool) output_4a6c1f\n\n        instance(x: 148, y: -128) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f8e -> intersection_c7c7e6.left\n        list2_9b7c5d -> intersection_c7c7e6.right\n        instance(x: 410, y: -120) notempty_4f5a4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_4f5a4c.list\n        notempty_4f5a4c.isEmpty -> output_4a6c1f\n    }\n\n    \n\n    instance(x: -59, y: 57) has_common_element_9b8d3f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -287, y: -92, name: \"list1\") property(List) list1_2a3f8e\n        in(x: -303, y: 18, name: \"list2\") property(List) list2_9b6d7c\n\n        out(x: 561, y: -86, name: \"output\") property(Bool) output_5c1e0a\n\n        instance(x: -76, y: -87) intersection_3f4c8f root.Std_k98ojb.Sets.Intersection {}\n        list1_2a3f8e -> intersection_3f4c8f.left\n        list2_9b6d7c -> intersection_3f4c8f.right\n        instance(x: 246, y: -86) notempty_5f0a8c root.Std_k98ojb.List.NotEmpty {}\n        intersection_3f4c8f.intersection -> notempty_5f0a8c.list\n        notempty_5f0a8c.isEmpty -> output_5c1e0a\n    }\n\n    \n\n    instance(x: -71, y: 55) has_common_element_7b6d9f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -263, y: -82, name: \"list1\") property(List) list1_9e3b0f\n        in(x: -271, y: 28, name: \"list2\") property(List) list2_8a7c6d\n\n        out(x: 553, y: 12, name: \"output\") property(Bool) output_4e1b5c\n\n        instance(x: 146, y: -71) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: 15) notempty_9a3f0d root.Std_k98ojb.List.NotEmpty {}\n        list1_9e3b0f -> intersection_c7c7e6.left\n        list2_8a7c6d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_9a3f0d.list\n        notempty_9a3f0d.isEmpty -> output_4e1b5c\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: -86, name: \"list1\") property(List) list1_3b2e5f\n        in(x: -285, y: 30, name: \"list2\") property(List) list2_4c8a9d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_1f8d5a root.Std_k98ojb.Math.GreaterThan {}\n        list1_3b2e5f -> intersection_c7c7e6.left\n        list2_4c8a9d -> intersection_c7c7e6.right\n        length_8166b0.list -> greaterthan_1f8d5a.left\n        0 -> greaterthan_1f8d5a.right\n        greaterthan_1f8d5a.result -> output_c7097f\n        intersection_c7c7e6.intersection -> length_8166b0.list\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -179, y: -120, name: \"list1\") property(List) list1_9a2f6e\n        in(x: -189, y: 41, name: \"list2\") property(List) list2_5b8d3c\n\n        out(x: 1057, y: 0, name: \"output\") property(Bool) output_4e1b9a\n\n        instance(x: 333, y: -42) intersection_c6f2ad root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2f6e -> intersection_c6f2ad.left\n        list2_5b8d3c -> intersection_c6f2ad.right\n        instance(x: 700, y: -11) notempty_4e7c0c root.Std_k98ojb.List.NotEmpty {}\n        intersection_c6f2ad.intersection -> notempty_4e7c0c.list\n        notempty_4e7c0c.isEmpty -> output_4e1b9a\n    }\n\n    \n\n    instance(x: 95, y: -68) intersection_5d8b3c root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -178, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -287, y: -91, name: \"list1\") property(List) list1_2a3f6b\n        in(x: -295, y: 18, name: \"list2\") property(List) list2_9d8c4e\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_2a3f6b -> intersection_c7c7e6.left\n        list2_9d8c4e -> intersection_c7c7e6.right\n        instance(x: 360, y: -95) notempty_e5a0ec root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_e5a0ec.list\n        notempty_e5a0ec.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_1d4e9f root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -280, y: -104, name: \"list1\") property(List) list1_9e8b5f\n        in(x: -288, y: 18, name: \"list2\") property(List) list2_4c0d7a\n\n        out(x: 562, y: -98, name: \"output\") property(Bool) output_3f6f9e\n\n        instance(x: -16, y: -97) intersection_1b8f5c root.Std_k98ojb.Sets.Intersection {}\n        list1_9e8b5f -> intersection_1b8f5c.left\n        list2_4c0d7a -> intersection_1b8f5c.right\n        instance(x: 272, y: -97) notempty_6f3b5f root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b8f5c.intersection -> notempty_6f3b5f.list\n        notempty_6f3b5f.isEmpty -> output_3f6f9e\n    }\n\n    \n\n    instance(x: -82, y: 59) has_common_element_4d7a0c root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1d9a3f root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1d9a3f.list\n        notempty_1d9a3f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 6, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 2, name: \"list\") property(List) list_1a0f9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a0f9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a0f9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_7b8a6f root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: 1, name: \"list\") property(List) list_2f3a4d\n\n        out(x: 1249, y: 5, name: \"output\") property(Bool) output_8e7c0b\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_2f3a4d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_2f3a4d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 3, name: \"list\") property(List) list_1a9d6f\n\n        out(x: 1207, y: 5, name: \"output\") property(Bool) output_2c0b8e\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a9d6f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a9d6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_7a4dad root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_1f0a9e\n\n        out(x: 1265, y: -3, name: \"output\") property(Bool) output_7b6d8c\n\n        instance(x: 778, y: 4) filter_9e2f5c root.Std_k98ojb.Query.Filter {\n            where: \"it + 1 == next\"\n        }\n        instance(x: -299, y: 30, name: \"zip\") zip_3a0d7c root.Std_k98ojb.Iteration.Zip {}\n        instance(x: 146, y: 4) length_5e2f6f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -1) equal_9a8a6f root.Std_k98ojb.Logic.Equal {}\n        list_1f0a9e -> zip_3a0d7c.left\n        list_1f0a9e -> zip_3a0d7c.right\n        func() {\n            in(x: -30, y: 19, name: \"current\") property(Number) current_6b5c2c\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1e8f9d\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_3a0d7c\n\n            instance(x: 226, y: 56) add_c5b2a6 root.Std_k98ojb.Math.Add {}\n            instance(x: 463, y: 51) notequal_9e8f1f root.Std_k98ojb.Logic.NotEqual {}\n            current_6b5c2c -> add_c5b2a6.first\n            1 -> add_c5b2a6.second\n            add_c5b2a6.result -> zip_3a0d7c.handler.0\n            _index_1e8f9d -> zip_3a0d7c.handler.1\n            notequal_9e8f1f.result -> output_3a0d7c\n            current_6b5c2c -> notequal_9e8f1f.left\n            zip_3a0d7c.zipped -> notequal_9e8f1f.right\n        } -> zip_3a0d7c.handler\n        filter_9e2f5c.result -> length_5e2f6f.list\n        zip_3a0d7c.zipped -> filter_9e2f5c.list\n        length_5e2f6f.length -> equal_9a8a6f.left\n        list_1f0a9e -> length_5e2f6f.list\n        equal_9a8a6f.result -> output_7b6d8c\n        equal_9a8a6f.right -> length_5e2f6f.length\n    }\n\n    \n\n    instance(x: -67, y: 59) is_consecutive_3a0d7c root.main.is_consecutive {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -505, y: 4, name: \"list\") property(List) list_5e8f3a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5e8f3a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_5e8f3a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"list1\") property(List) list1_5f8b9e\n        in(x: -284, y: 130, name: \"list2\") property(List) list2_6a4c0d\n\n        out(x: 557, y: 95, name: \"output\") property(Bool) output_3a1b5f\n\n        instance(x: -92, y: 94) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 93) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 92) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list1_5f8b9e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list2_6a4c0d -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        list1_5f8b9e -> equal_f89569.right\n        equal_f89569.result -> output_3a1b5f\n    }\n\n    \n\n    instance(x: -84, y: 219) is_sublist_2c6d4 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"subList\") property(List) sub_list_5f3b8a\n        in(x: -465, y: -235, name: \"mainList\") property(List) main_list_7c1e9d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_2b0e6c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_4a3f7c\n\n        instance(x: 752, y: 93) ifexpression_9d5e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7f6a3c\") getter_7f6a3c = previous\n        setter(x: 679, y: -313, name: \"setter_8b9d4e\") setter_8b9d4e = previous\n        instance(x: 321, y: -20) for_1e2f0 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8b9d4e\") setter_5c3a7e = previous\n        instance(x: -275, y: -35) getat_6a1b2f root.Std_k98ojb.List.GetAt {}\n        ifexpression_9d5e1.else -> continue_2b0e6c\n        ifexpression_9d5e1.value -> output_4a3f7c\n        ifexpression_9d5e1.then -> setter_8b9d4e.execute\n        main_list_7c1e9d -> for_1e2f0.items\n        for_1e2f0.item -> ifexpression_9d5e1.gen_2\n        for_1e2f0.index -> ifexpression_9d5e1.gen_0\n        getter_7f6a3c.value -> ifexpression_9d5e1.gen_1\n        for_1e2f0.onItem -> ifexpression_9d5e1.execute\n        for_1e2f0.done -> continue_2b0e6c\n        for_1e2f0.item -> setter_8b9d4e.new_value\n        main_list_7c1e9d -> getat_6a1b2f.list\n        0 -> getat_6a1b2f.index\n        getat_6a1b2f.itemAtIndex -> setter_5c3a7e.new_value\n        sub_list_5f3b8a -> for_1e2f0.items\n        execute_9d5e1 -> setter_5c3a7e.execute\n        setter_5c3a7e.continue -> for_1e2f0.reset\n        setter_8b9d4e.continue -> for_1e2f0.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_6f9e3 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 5, name: \"list1\") property(List) list1_3a9f0e\n        in(x: -465, y: 145, name: \"list2\") property(List) list2_7c4d8b\n\n        out(x: 1216, y: 5, name: \"output\") property(Bool) output_9b1b3a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list2_7c4d8b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list1_3a9f0e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -425, y: 10, name: \"list1\") property(List) list1_3a9b6f\n        in(x: -427, y: 132, name: \"list2\") property(List) list2_5e7c8d\n\n        out(x: 1120, y: 85, name: \"output\") property(Bool) output_4f1c3a\n\n        instance(x: -182, y: 86, name: \"find sublist in list\") find_6b9a2f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -0, y: -25, name: \"current\") property(List) current_5c7e8d\n            in(x: 23, y: 79, name: \"_list\") property(List) _list_1f9a3b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) contains_32727d root.Std_k98ojb.List.Contains {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_5c7e8d -> contains_32727d.list\n            list2_5e7c8d -> contains_32727d.item\n            contains_32727d.is_contained -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> find_6b9a2f.predicate\n        list1_3a9b6f -> find_6b9a2f.items\n        find_6b9a2f.item -> output_4f1c3a\n    }\n\n    \n\n    instance(x: -80, y: 59) is_sublist_ae8d0f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -375, y: 10, name: \"subList\") property(List) sub_list_1e8b2f\n        in(x: -380, y: -160, name: \"mainList\") property(List) main_list_7a4d5c\n\n        out(x: 1040, y: -95, name: \"output\") property(Bool) output_9c3a1e\n\n        instance(x: -171, y: -96, name: \"sublist length\") length_2f8b9c root.Std_k98ojb.List.Length {}\n        instance(x: 0, y: -95) contains_5d4f6c root.Std_k98ojb.List.Contains {}\n        instance(x: 232, y: -96) greaterthan_7a1e3f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 456, y: -97) and_9e8a2d root.Std_k98ojb.Logic.And {}\n        instance(x: 680, y: -95) not_6c4c5f root.Std_k98ojb.Logic.Not {}\n        sub_list_1e8b2f -> length_2f8b9c.list\n        main_list_7a4d5c -> contains_5d4f6c.list\n        sub_list_1e8b2f -> contains_5d4f6c.item\n        length_2f8b9c.length -> greaterthan_7a1e3f.left\n        main_list_7a4d5c -> greaterthan_7a1e3f.right\n        contains_5d4f6c.is_contained -> and_9e8a2d.left\n        greaterthan_7a1e3f.result -> and_9e8a2d.right\n        not_6c4c5f.result -> output_9c3a1e\n        and_9e8a2d.result -> not_6c4c5f.input\n    }\n\n    \n\n    instance(x: -63, y: 57) is_sublist_eb0c7c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_3a0f2d\n        in(x: -485, y: -215, name: \"list2\") property(List) list2_5e8b9c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4a6f1f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3d0a2d\n\n        instance(x: 752, y: 93) ifexpression_9e5c7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_9e5c7b.else -> continue_4a6f1f\n        ifexpression_9e5c7b.value -> output_3d0a2d\n        ifexpression_9e5c7b.then -> setter_9d4f1c.execute\n        list1_3a0f2d -> for_d26972.items\n        for_d26972.item -> ifexpression_9e5c7b.gen_2\n        for_d26972.index -> ifexpression_9e5c7b.gen_0\n        getter_b280eb.value -> ifexpression_9e5c7b.gen_1\n        for_d26972.onItem -> ifexpression_9e5c7b.execute\n        for_d26972.done -> continue_4a6f1f\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_5e8b9c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_4a6f1f -> for_d26972.reset\n        setter_38e107.continue -> for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_8b5a2f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_3e8f9d\n        in(x: -464, y: -125, name: \"mainList\") property(List) main_list_7a4c6b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7a4c6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7a4c6b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_3e8f9d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_2e9f5d\n        in(x: -485, y: -125, name: \"list2\") property(List) list2_8b4a3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6a0f1c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9e9d2f\n\n        instance(x: 752, y: 93) ifexpression_7b5a3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7b5a3c.else -> continue_6a0f1c\n        ifexpression_7b5a3c.value -> output_9e9d2f\n        ifexpression_7b5a3c.then -> setter_9d4f1c.execute\n        list1_2e9f5d -> for_d26972.items\n        for_d26972.item -> ifexpression_7b5a3c.gen_2\n        for_d26972.index -> ifexpression_7b5a3c.gen_0\n        getter_b280eb.value -> ifexpression_7b5a3c.gen_1\n        for_d26972.onItem -> ifexpression_7b5a3c.execute\n        for_d26972.done -> continue_6a0f1c\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_8b4a3c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_6a0f1c -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_3b7f8c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -365, y: 20, name: \"subList\") property(List) sub_list_3e1b2f\n        in(x: -364, y: -139, name: \"mainList\") property(List) main_list_7a8c0d\n\n        out(x: 1225, y: -140, name: \"output\") property(Bool) output_6f9f4e\n\n        instance(x: -110, y: -138, name: \"find sublist in list\") find_3b2c1c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -0, y: 20, name: \"current\") property(List) current_5f7e8d\n            in(x: -0, y: -139, name: \"subList\") property(List) sub_list_3e1b2f\n\n            out(x: 705, y: -119, name: \"output\") property(Bool) output_e6a4c9\n\n            instance(x: 226, y: -124) contains_32727d root.Std_k98ojb.List.Contains {}\n            sub_list_3e1b2f -> contains_32727d.list\n            current_5f7e8d -> contains_32727d.item\n            contains_32727d.is_contained -> output_e6a4c9\n        } -> find_3b2c1c.predicate\n        main_list_7a8c0d -> find_3b2c1c.items\n        find_3b2c1c.item -> output_6f9f4e\n    }\n\n    \n\n    instance(x: -80, y: 59) is_sublist_5f3b1c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 5, name: \"subList\") property(List) sub_list_1f9a3b\n        in(x: -284, y: 139, name: \"mainList\") property(List) main_list_6e7c4d\n\n        out(x: 557, y: 124, name: \"output\") property(Bool) output_5b2f1d\n\n        instance(x: -92, y: 119) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 118) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 117) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sub_list_1f9a3b -> intersection_c7c7e6.left\n        main_list_6e7c4d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sub_list_1f9a3b -> equal_f89569.right\n        equal_f89569.result -> output_5b2f1d\n    }\n\n    \n\n    instance(x: -84, y: 239) is_sublist_8e7c4d root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e4b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f9c5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 71, name: \"index\") property(Number) index_8c1e6d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b2f3a root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_9b2f3a.result -> notequal_807ffd.left\n            index_8c1e6d -> sub_9b2f3a.first\n            elem_9f6850 -> sub_9b2f3a.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3e4b8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_8c1e6d\n\n            instance(x: 89, y: 29) list_length_5b2a7f root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) minus_3c9b4f root.Std_k98ojb.Math.Sub {}\n            instance(x: 311, y: 71) plus_1e0d6e root.Std_k98ojb.Math.Add {}\n            list_length_5b2a7f.length -> minus_3c9b4f.first\n            1 -> minus_3c9b4f.second\n            index_8c1e6d -> plus_1e0d6e.first\n            minus_3c9b4f.result -> plus_1e0d6e.second\n            list_length_5b2a7f.length -> plus_1e0d6e.second\n        } -> find_6d05b0.index_handler\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"context\") property(Number) context_7c3e8d\n\n            instance(x: 89, y: 29) list_length_5b2a7f root.Std_k98ojb.List.Length {}\n            list_length_5b2a7f.length -> context_7c3e8d\n        } -> find_6d05b0.context_handler\n        find_6d05b0.item -> missing_number_7f9c5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f9e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c6d4b\n\n        instance(x: 0, y: 0) find_5a2c5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8e3c7d\n            in(x: -110, y: 67, name: \"index\") property(Number) index_1a2f5b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9d4e6f\n\n            instance(x: 89, y: 29) sub_8c3d7b root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_2a1d5f root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_2a1d5f.right\n            sub_8c3d7b.result -> notequal_2a1d5f.left\n            index_1a2f5b -> sub_8c3d7b.first\n            elem_8e3c7d -> sub_8c3d7b.second\n            notequal_2a1d5f.result -> bool_9d4e6f\n        } -> find_5a2c5f.predicate\n        list_3a8f9e -> find_5a2c5f.items\n        find_5a2c5f.index + 1 -> missing_number_7c6d4b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3b2f5f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1d8f9a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 29, name: \"index\") property(Number) index_7c3d4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7c3d4a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1d8f9a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 29, name: \"index\") property(Number) index_7c3d4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7c3d4a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9a4f8e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c6b2d\n\n        instance(x: 0, y: 0) find_5e3f0f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: 68, name: \"index\") property(Number) index_1e8a7c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b2f0d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_9b2f0d.result -> notequal_807ffd.left\n            index_1e8a7c -> sub_9b2f0d.first\n            elem_9f6850 -> sub_9b2f0d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5e3f0f.predicate\n        list_9a4f8e -> find_5e3f0f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_8c2b5d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_8c2b5d.result -> notequal_807ffd.left\n            index_1e8a7c -> sub_8c2b5d.first\n            elem_9f6850 -> sub_8c2b5d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5e3f0f.index_predicate\n        find_5e3f0f.item -> missing_number_7c6b2d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9a4f8e root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 0, name: \"list\") property(List) list_3a9b6f\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_2c7d4e\n\n        instance(x: 0, y: 0) find_5f8f8f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 106, name: \"index\") property(Number) index_7e8d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_2b3c4f root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7e8d5a -> add_2b3c4f.first\n            1 -> add_2b3c4f.second\n            add_2b3c4f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5f8f8f.predicate\n        list_3a9b6f -> find_5f8f8f.items\n        find_5f8f8f.index + 1 -> missing_number_2c7d4e\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f6d1a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 56, name: \"index\") property(Number) index_7e3a1c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7e3a1c -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6d1a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7e3a1c -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1f5e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c8b9d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 74, name: \"index\") property(Number) index_7c8a1e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7c8a1e -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1f5e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7c8a1e -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_7c8b9d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1d8f9a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 71, name: \"index\") property(Number) index_1e7d6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e7d6a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1d8f9a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 71, name: \"index\") property(Number) index_1e7d6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e7d6a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> modulo_1088d5.divisor\n            0 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.start_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_3f8d1e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7b9c5a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 59, name: \"index\") property(Number) index_8c1d3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2f0b4e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2f0b4e.result -> notequal_807ffd.left\n            index_8c1d3e -> sub_2f0b4e.first\n            elem_9f6850 -> sub_2f0b4e.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3f8d1e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) index_8c1d3e root.Std_k98ojb.Iteration.Map {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n                out(x: 515, y: 44, name: \"index\") property(Number) index_8c1d3e\n\n                instance(x: 89, y: 29) count_2b6a7e root.Std_k98ojb.Count {}\n                elem_9f6850 -> index_8c1d3e\n                count_2b6a7e.count -> index_8c1d3e\n            } -> index_8c1d3e.handler\n            list_3f8d1e -> index_8c1d3e.items\n            index_8c1d3e.output_list -> find_6d05b0.indexes\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_7b9c5a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f3b6a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c8e4d\n\n        instance(x: 0, y: 0) find_2a5b9a root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1f3b6a\n            in(x: -112, y: 107, name: \"index\") property(Number) index_7c8e4d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9f6850\n\n            instance(x: 89, y: 29) add_1b3a5c root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7c8e4d -> add_1b3a5c.first\n            1 -> add_1b3a5c.second\n            add_1b3a5c.result -> notequal_807ffd.left\n            elem_1f3b6a -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_9f6850\n        } -> find_2a5b9a.predicate\n        list_1f3b6a -> find_2a5b9a.items\n        find_2a5b9a.index -> missing_number_7c8e4d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_7e9f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a4d3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6f5c1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7e9f5c.input\n        \" \" -> replace_7e9f5c.search\n        \":\" -> replace_7e9f5c.replace\n        replace_7e9f5c.output -> replace_8a4d3c.input\n        \",\" -> replace_8a4d3c.search\n        \":\" -> replace_8a4d3c.replace\n        replace_8a4d3c.output -> replace_6f5c1c.input\n        \".\" -> replace_6f5c1c.search\n        \":\" -> replace_6f5c1c.replace\n        replace_6f5c1c.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -155, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: 0) replace_3c7f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 1) replace_4a6d5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: -2) replace_8b3b0f root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_spaces_commas_dots.input\n        \" \" -> replace_3c7f9e.search\n        \":\" -> replace_3c7f9e.replace\n        replace_3c7f9e.output -> replace_4a6d5f.input\n        \",\" -> replace_4a6d5f.search\n        \":\" -> replace_4a6d5f.replace\n        replace_4a6d5f.output -> replace_8b3b0f.input\n        \".\" -> replace_8b3b0f.search\n        \":\" -> replace_8b3b0f.replace\n        replace_8b3b0f.output -> output_1\n    }\n\n    \n\n    instance(x: 101, y: -67) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5e9f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3d7a4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6e9e1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e9f8c.input\n        \" \" -> replace_5e9f8c.search\n        \":\" -> replace_5e9f8c.replace\n        replace_5e9f8c.output -> replace_3d7a4c.input\n        \",\" -> replace_3d7a4c.search\n        \":\" -> replace_3d7a4c.replace\n        replace_3d7a4c.output -> replace_6e9e1c.input\n        \".\" -> replace_6e9e1c.search\n        \":\" -> replace_6e9e1c.replace\n        replace_6e9e1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -148, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_3a8f4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7d9e5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6c6f1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a8f4c.input\n        \" \" -> replace_3a8f4c.search\n        \":\" -> replace_3a8f4c.replace\n        replace_3a8f4c.output -> replace_7d9e5f.input\n        \",\" -> replace_7d9e5f.search\n        \":\" -> replace_7d9e5f.replace\n        replace_7d9e5f.output -> replace_6c6f1f.input\n        \".\" -> replace_6c6f1f.search\n        \":\" -> replace_6c6f1f.replace\n        replace_6c6f1f.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7e3d4a root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -148, y: 0, name: \"input\") property(String) input_1a3b2f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c9e8d\n\n        instance(x: 0, y: 1) replace_7e6b4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f3a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_5e8c9f root.Std_k98ojb.Strings.Replace {}\n        input_1a3b2f -> replace_7e6b4c.input\n        \" \" -> replace_7e6b4c.search\n        \":\" -> replace_7e6b4c.replace\n        replace_7e6b4c.output -> replace_3f3a2d.input\n        \",\" -> replace_3f3a2d.search\n        \":\" -> replace_3f3a2d.replace\n        replace_3f3a2d.output -> replace_5e8c9f.input\n        \".\" -> replace_5e8c9f.search\n        \":\" -> replace_5e8c9f.replace\n        replace_5e8c9f.output -> output_5c9e8d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -156, y: 0, name: \"input\") property(String) input_2f8a6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7b1c3d\n\n        instance(x: 0, y: 1) replace_9a4d5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6e8c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7f3a6d root.Std_k98ojb.Strings.Replace {}\n        input_2f8a6e -> replace_9a4d5f.input\n        \" \" -> replace_9a4d5f.search\n        \":\" -> replace_9a4d5f.replace\n        replace_9a4d5f.output -> replace_6e8c2f.input\n        \",\" -> replace_6e8c2f.search\n        \":\" -> replace_6e8c2f.replace\n        replace_6e8c2f.output -> replace_7f3a6d.input\n        \".\" -> replace_7f3a6d.search\n        \":\" -> replace_7f3a6d.replace\n        replace_7f3a6d.output -> output_7b1c3d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -148, y: 0, name: \"input\") property(String) input_2a8f9e\n\n        out(x: 504, y: -1, name: \"output\") property(String) output_3b4c7d\n\n        instance(x: 0, y: 1) replace_6e5f5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_2a8f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_3b4c7d root.Std_k98ojb.Strings.Replace {}\n        input_2a8f9e -> replace_6e5f5e.input\n        \" \" -> replace_6e5f5e.search\n        \":\" -> replace_6e5f5e.replace\n        replace_6e5f5e.output -> replace_2a8f9e.input\n        \",\" -> replace_2a8f9e.search\n        \":\" -> replace_2a8f9e.replace\n        replace_2a8f9e.output -> replace_3b4c7d.input\n        \".\" -> replace_3b4c7d.search\n        \":\" -> replace_3b4c7d.replace\n        replace_3b4c7d.output -> output_3b4c7d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3a7f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4e6d5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: 0) replace_9b2f1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3a7f8c.input\n        \" \" -> replace_3a7f8c.search\n        \":\" -> replace_3a7f8c.replace\n        replace_3a7f8c.output -> replace_4e6d5f.input\n        \",\" -> replace_4e6d5f.search\n        \":\" -> replace_4e6d5f.replace\n        replace_4e6d5f.output -> replace_9b2f1f.input\n        \".\" -> replace_9b2f1f.search\n        \":\" -> replace_9b2f1f.replace\n        replace_9b2f1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_5e7f9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6d8a3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4f7f1c root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_5e7f9c.input\n        \" \" -> replace_5e7f9c.search\n        \":\" -> replace_5e7f9c.replace\n        replace_5e7f9c.output -> replace_6d8a3c.input\n        \",\" -> replace_6d8a3c.search\n        \":\" -> replace_6d8a3c.replace\n        replace_6d8a3c.output -> replace_4f7f1c.input\n        \".\" -> replace_4f7f1c.search\n        \":\" -> replace_4f7f1c.replace\n        replace_4f7f1c.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3e8c7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d4a5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6a5f1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e8c7f.input\n        \" \" -> replace_3e8c7f.search\n        \":\" -> replace_3e8c7f.replace\n        replace_3e8c7f.output -> replace_9d4a5f.input\n        \",\" -> replace_9d4a5f.search\n        \":\" -> replace_9d4a5f.replace\n        replace_9d4a5f.output -> replace_6a5f1f.input\n        \".\" -> replace_6a5f1f.search\n        \":\" -> replace_6a5f1f.replace\n        replace_6a5f1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 6, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1050, y: 14, name: \"output\") property(Bool) output_7c2a5b\n\n        instance(x: -194, y: 10) characters_3e6b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 268, y: 12) length_9f0d8f root.Std_k98ojb.List.Length {}\n        instance(x: 480, y: 13) getat_ea1e7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 694, y: 14) equal_5a2c6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 903, y: 15) reduce_0f8d3c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -23, y: -16, name: \"acc\") property(String) acc_1a2e7c\n                in(x: -12, y: 47, name: \"current\") property(String) current_9f0d8f\n\n                out(x: 705, y: 49, name: \"output\") property(String) output_efbc78\n\n                instance(x: 226, y: 56) equal_c76d2b root.Std_k98ojb.Logic.Equal {}\n                acc_1a2e7c -> equal_c76d2b.left\n                current_9f0d8f -> equal_c76d2b.right\n                equal_c76d2b.result -> output_efbc78\n            }\n        }\n        instance(x: 1106, y: 16) not_75283f root.Std_k98ojb.Logic.Not {}\n        input_8f1e9d -> characters_3e6b4c.input\n        characters_3e6b4c.characters -> length_9f0d8f.list\n        characters_3e6b4c.characters -> getat_ea1e7c.list\n        0 -> getat_ea1e7c.index\n        getat_ea1e7c.itemAtIndex -> equal_5a2c6c.left\n        input_8f1e9d -> equal_5a2c6c.right\n        length_9f0d8f.length -> reduce_0f8d3c.list\n        characters_3e6b4c.characters -> reduce_0f8d3c.items\n        1 -> reduce_0f8d3c.initial_value\n        equal_5a2c6c.result -> reduce_0f8d3c.accumulated\n        reduce_0f8d3c.output -> not_75283f.input\n        not_75283f.result -> output_7c2a5b\n    }\n\n    \n\n    instance(x: -123, y: 110) is_same_1e6e9d root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -296, y: 11, name: \"input\") property(String) input_9e8f3d\n\n        out(x: 1065, y: 24, name: \"output\") property(Bool) output_7a1c4b\n\n        instance(x: -145, y: 13) characters_0c2c6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 339, y: 25) length_8e9d5f root.Std_k98ojb.List.Length {}\n        instance(x: 544, y: 24) getat_3a1e7f root.Std_k98ojb.List.GetAt {}\n        instance(x: 768, y: 23) equal_6c4f2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1000, y: 22) reduce_9d5f8c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -31, y: -25, name: \"acc\") property(Any) acc_3e7a6\n                in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n                out(x: 705, y: 49, name: \"output\") property(Any) output_efbc78\n\n                instance(x: 226, y: 56) equal_f7f3d8 root.Std_k98ojb.Logic.Equal {}\n                acc_3e7a6 -> equal_f7f3d8.left\n                getat_3a1e7f.itemAtIndex -> equal_f7f3d8.right\n                equal_f7f3d8.result -> output_efbc78\n            }\n        }\n        instance(x: 1232, y: 22) not_9b4c0f root.Std_k98ojb.Logic.Not {}\n        input_9e8f3d -> characters_0c2c6c.input\n        characters_0c2c6c.characters -> length_8e9d5f.list\n        characters_0c2c6c.characters -> reduce_9d5f8c.items\n        0 -> getat_3a1e7f.index\n        characters_0c2c6c.characters -> getat_3a1e7f.list\n        length_8e9d5f.length -> getat_3a1e7f.index\n        reduce_9d5f8c.result -> equal_6c4f2c.left\n        1 -> equal_6c4f2c.right\n        equal_6c4f2c.result -> not_9b4c0f.input\n        not_9b4c0f.result -> output_7a1c4b\n    }\n\n    \n\n    instance(x: -25, y: 119) is_same_5d8e3c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -293, y: 1, name: \"input\") property(String) input_8e9f0d\n\n        out(x: 547, y: 120, name: \"output\") property(Bool) output_7c6a3b\n\n        instance(x: -94, y: 2) characters_4e1c5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 121) length_0f9d8f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 120) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -1) getat_c7c7e6 root.Std_k98ojb.List.GetAt {}\n        characters_4e1c5c.characters -> length_0f9d8f.list\n        input_8e9f0d -> characters_4e1c5c.input\n        1 -> length_0f9d8f.length\n        getat_c7c7e6.itemAtIndex -> equal_f89569.right\n        characters_4e1c5c.characters -> getat_c7c7e6.list\n        1 -> getat_c7c7e6.index\n        input_8e9e0d -> equal_f89569.left\n        equal_f89569.result -> output_7c6a3b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -265, y: 26, name: \"input\") property(String) input_9e8a2f\n\n        out(x: 1050, y: 5, name: \"output\") property(Bool) output_7c1b4d\n        out(x: 1146, y: 120, name: \"continue\") trigger() continue_e3b1aa\n\n        instance(x: -89, y: 26) characters_9a8f5e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: 25) lessthanorequal_4c7d0f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 490, y: -1) for_9a8b3e root.Std_k98ojb.Std.For {}\n        instance(x: 1012, y: -5) and_6a4c5f root.Std_k98ojb.Logic.And {}\n        instance(x: 1020, y: 88) if_7d1f9f root.Std_k98ojb.Std.If {}\n        instance(x: 1298, y: -55) equal_3e2a1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1406, y: -5) not_4c0f92 root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -26, y: 46, name: \"element\") property(String) element_1e9d2a\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_7f8c5e\n\n            instance(x: 106, y: 17) getat_6b0c4c root.Std_k98ojb.List.GetAt {}\n            characters_9a8f5e.characters -> getat_6b0c4c.list\n            for_9a8b3e.index -> getat_6b0c4c.index\n            getat_6b0c4c.itemAtIndex -> out_7f8c5e\n        } -> for_9a8b3e.handler\n        characters_9a8f5e.characters -> for_9a8b3e.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_f6c0d7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_1f2f5a\n\n            instance(x: 106, y: 17) length_3b9e4f root.Std_k98ojb.List.Length {}\n            element_f6c0d7 -> length_3b9e4f.list\n            length_3b9e4f.length -> out_1f2f5a\n        } -> lessthanorequal_4c7d0f.handler\n        characters_9a8f5e.characters -> lessthanorequal_4c7d0f.items\n        1 -> lessthanorequal_4c7d0f.right\n        lessthanorequal_4c7d0f.result -> if_7d1f9f.predicate\n        for_9a8b3e.onItem -> if_7d1f9f.execute\n        if_7d1f9f.else -> continue_e3b1aa\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_4c0a8f\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_5e7d6b\n\n            instance(x: 106, y: 17) getat_e9b1a2 root.Std_k98ojb.List.GetAt {}\n            characters_9a8f5e.characters -> getat_e9b1a2.list\n            for_9a8b3e.index -> getat_e9b1a2.index\n            input_9e8a2f -> equal_3e2a1f.left\n            getat_e9b1a2.itemAtIndex -> equal_3e2a1f.right\n            equal_3e2a1f.result -> out_5e7d6b\n        } -> for_9a8b3e.handler\n        if_7d1f9f.then -> for_9a8b3e.reset\n        and_6a4c5f.right -> not_4c0f92.input\n        equal_3e2a1f.result -> and_6a4c5f.left\n        for_9a8b3e.index -> lessthanorequal_4c7d0f.gen_0\n        input_9e8a2f -> equal_3e2a1f.gen_0\n        not_4c0f92.result -> output_7c1b4d\n        for_9a8b3e.done -> continue_e3b1aa\n    }\n\n    \n\n    instance(x: -13, y: 11) is_same_6c2c5c root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -294, y: 155, name: \"string\") property(String) string_0d5e3f\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 155) characters_7c8a9d root.Std_k98ojb.Strings.Characters {}\n        instance(x: -82, y: 155) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        equal_f89569.result -> output_b1d7f8\n        length_6e87f2.length -> equal_f89569.right\n        1 -> equal_f89569.left\n        string_0d5e3f -> characters_7c8a9d.input\n        characters_7c8a9d.characters -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> equal_f89569.gen_0\n        string_0d5e3f -> equal_f89569.gen_1\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 11, name: \"input\") property(String) input_8f1e5d\n\n        out(x: 557, y: 92, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -93, y: 91) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 90) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 89) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -286, y: -97, name: \"characters\") characters_1f7c4e root.Std_k98ojb.Strings.Characters {}\n        input_8f1e5d -> characters_1f7c4e.input\n        characters_1f7c4e.characters -> intersection_c7c7e6.left\n        characters_1f7c4e.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 159) is_same_9a8d4c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -265, y: 10, name: \"input\") property(String) input_8e6f9d\n\n        out(x: 1080, y: 13, name: \"output\") property(Bool) output_1a3b4c\n\n        instance(x: -92, y: 11) characters_5a2c7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 12) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 13) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -4) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 824, y: 12) lessthanorequal_7f9c8e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1010, y: -3) for_d26972 root.Std_k98ojb.Std.For {}\n        input_8e6f9d -> characters_5a2c7f.input\n        length_6e87f2.list -> lessthanorequal_7f9c8e.left\n        1 -> lessthanorequal_7f9c8e.right\n        lessthanorequal_7f9c8e.result -> for_d26972.items\n        characters_5a8b6d.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> equal_f89569.left\n        input_8e6f9d -> equal_f89569.right\n        for_d26972.item -> getat_ce2a48.index\n        equal_f89569.result -> output_1a3b4c\n        for_d26972.onItem -> equal_f89569.execute\n        for_d26972.done -> output_1a3b4c\n    }\n\n    \n\n    instance(x: 15, y: -8) is_same_9e6d5f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 30, name: \"input\") property(String) input_9e8f2d\n\n        out(x: 557, y: 119, name: \"output\") property(Bool) output_5c1a7b\n\n        instance(x: -90, y: 31) characters_3f0c4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 120) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 119) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -90, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        characters_3f0c4c.characters -> length_8166b0.list\n        input_9e8f2d -> characters_3f0c4c.input\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> equal_f89569.right\n        characters_3f0c4c.characters -> intersection_c7c7e6.left\n        characters_3f0c4c.characters -> intersection_c7c7e6.right\n        equal_f89569.result -> output_5c1a7b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_9d2f8f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -294, y: 155, name: \"string\") property(String) string_0b075e\n\n        out(x: 546, y: 63, name: \"output\") property(Bool) output_b1d7f8\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: 156) characters_1a9d4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: -82, y: 155) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 201, y: 62) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        characters_1a9d4c.characters -> length_6e87f2.list\n        string_0b075e -> characters_1a9d4c.input\n        getat_ce2a48.itemAtIndex -> equal_f89569.right\n        0 -> getat_ce2a48.index\n        string_0b075e -> getat_ce2a48.list\n        length_6e87f2.length -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> getat_ce2a48.execute\n        equal_f89569.result -> output_b1d7f8\n        characters_1a9d4c.characters -> getat_ce2a48.list\n    }\n\n    \n\n    instance(x: 48, y: 11) check_same_15f9e9 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_8f2e9d\n\n        out(x: 1096, y: 13, name: \"output\") property(Bool) output_7a1b3c\n\n        instance(x: -99, y: 4, name: \"characters\") characters_5f0c0c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 347, y: 14) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 560, y: -1) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 777, y: 13) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1003, y: 0) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 1271, y: -5) and_80a119 root.Std_k98ojb.Logic.And {}\n        input_8f2e9d -> characters_5f0c0c.input\n        length_6e87f2.list -> for_d26972.items\n        0 -> getat_ce2a48.index\n        characters_5f0c0c.characters -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> equal_f89569.left\n        input_8f2e9d -> equal_f89569.right\n        for_d26972.onItem -> equal_f89569.execute\n        length_6e87f2.length -> for_d26972.itemsLength\n        equal_f89569.result -> and_80a119.left\n        1 -> and_80a119.right\n        for_d26972.index -> getat_ce2a48.index\n        for_d26972.item -> and_80a119.execute\n        for_d26972.done -> output_7a1b3c\n        equal_f89569.value -> and_80a119.left\n    }\n\n    \n\n    instance(x: 6, y: -55) is_same_8e5d4f root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a8c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9e7d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9e7d4f.items\n        count_1f2a8c.count -> filter_9e7d4f.execute\n        filter_9e7d4f.output_list -> count_1f2a8c.value\n        count_1f2a8c.reset -> characters_node.trigger\n        count_1f2a8c.done -> output_ai\n    }\n    \n\n    instance(x: 0, y: -30) filter_9e7d4f root.main.count_digits.Iteration.Filter {\n        handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n    }\n\n    \n    instance(x: -30, y: 0) characters_node root.main.count_digits.Std_k98ojb.Strings.Characters {}\n\n    \n    instance(x: 0, y: 0) count_1f2a8c root.main.count_digits.Std_k98ojb.Count {}\n\n    \n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 10) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 20) count_1a2f4e root.Std_k98ojb.Count {}\n        instance(x: 150, y: 40) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n\n        input_ai -> characters_node.input\n        characters_node.characters -> count_1a2f4e.items\n        count_1a2f4e.count -> is_numeric_node.value\n        is_numeric_node.value -> count_1a2f4e.trigger\n\n        count_1a2f4e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_3b5c9d root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f8c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -16) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e25a9.list\n        count_1a2f8c.count -> filter_3e25a9.on_item\n        filter_3e25a9.result -> count_1a2f8c.value\n        count_1a2f8c.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -16) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -35, y: 15) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 150, y: 16) count_1a4c9e root.Std_k98ojb.Std.Count {}\n        instance(x: 380, y: -2) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 620, y: 15) add_3f0d6a root.Std_k98ojb.Math.Add {}\n        characters_node.characters -> count_1a4c9e.items\n        count_1a4c9e.count -> is_numeric_node.input\n        is_numeric_node.value -> add_3f0d6a.first\n        1 -> add_3f0d6a.second\n        add_3f0d6a.result -> count_1a4c9e.new_value\n        count_1a4c9e.count -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -45, y: 15) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f8c9a root.Std_k98ojb.Count {}\n        instance(x: 0, y: 0) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: 0) if_expression_node root.Std_k98ojb.Std.IfExpression {\n            expression: \"it\"\n        }\n        characters_node.characters -> count_1f8c9a.trigger\n        count_1f8c9a.count -> is_numeric_node.input\n        is_numeric_node.value -> if_expression_node.gen_0\n        instance(x: 0, y: 0) add_2b7d5e root.Std_k98ojb.Math.Add {}\n        if_expression_node.then -> add_2b7d5e.first\n        1 -> add_2b7d5e.second\n        count_1f8c9a.reset -> if_expression_node.execute\n        if_expression_node.else -> count_1f8c9a.count\n        add_2b7d5e.result -> output_ai\n    }\n    \n\n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_7c5a6f root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -1) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: -2) add_8d4e9f root.Std_k98ojb.Math.Add {}\n        characters_node.characters -> count_7c5a6f.items\n        count_7c5a6f.count -> is_numeric_node.input\n        is_numeric_node.value -> add_8d4e9f.first\n        1 -> add_8d4e9f.second\n        add_8d4e9f.result -> count_7c5a6f.new_value\n        count_7c5a6f.count -> output_ai\n    }\n    \n\n    instance(x: -2, y: -3, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_5a8c9e root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -1) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_5a8c9e.trigger\n        count_5a8c9e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -1) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f9c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -15) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e25a9.list\n        count_1a2f9c.count -> filter_3e25a9.on_item\n        filter_3e25a9.result -> count_1a2f9c.value\n        count_1a2f9c.value -> output_ai\n    }\n    \n\n    instance(x: 0, y: -15) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -38, y: 2) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 80, y: 3) count_1a4c6e root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -38) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_1a4c6e.count\n        count_1a4c6e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -38) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"output\") property(Number) output_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f3a2e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9c8d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9c8d4f.items\n        count_1f3a2e.count -> filter_9c8d4f.execute\n        filter_9c8d4f.output_list -> count_1f3a2e.value\n        count_1f3a2e.count -> output_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e5a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e5a8c.first\n        data_cde0dc -> pow_9e5a8c.second\n        pow_9e5a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c0e.x\n        data_cde0dc -> pow_9a8c0e.y\n        pow_9a8c0e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3e8c9a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3e8c9a.x\n        data_cde0dc -> pow_3e8c9a.y\n        pow_3e8c9a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e8c0a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e8c0a.x\n        data_cde0dc -> pow_9e8c0a.y\n        pow_9e8c0a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a3e0c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a3e0c.x\n        data_cde0dc -> pow_9a3e0c.y\n        pow_9a3e0c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e8a0c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e8a0c.x\n        data_cde0dc -> pow_5e8a0c.y\n        pow_5e8a0c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a0c3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a0c3e.x\n        data_cde0dc -> pow_9a0c3e.y\n        pow_9a0c3e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e3c8a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 0\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e3c8a.x\n        4 -> pow_5e3c8a.y\n        pow_5e3c8a.result -> add_f892a4.second\n        data_cde0dc -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n        add_f892a4.result -> data_cde0dc\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e3c0a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e3c0a.x\n        data_cde0dc -> pow_9e3c0a.y\n        pow_9e3c0a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3a0e5c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3a0e5c.x\n        data_cde0dc -> pow_3a0e5c.y\n        pow_3a0e5c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -103, y: 54, name: \"size\") property(Number) size_8f1b5e\n\n        out(x: 46, y: 158, name: \"surfaceArea\") property(Number) surfaceArea_7c3a0d\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f1b5e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surfaceArea_7c3a0d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -105, y: 41, name: \"size\") property(Number) size_9f0b3e\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -105) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 92, y: -188) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_9f0b3e -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_584bfd.first\n        6 -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_of_cube_d6e930 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -106, y: 40, name: \"size\") property(Number) size_8e9f1d\n\n        out(x: 1052, y: 41, name: \"surface_area\") property(Number) surface_area_7b6a3c\n\n        instance(x: 17, y: -4) mul_5b0c3f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8e9f1d -> mul_5b0c3f.first\n        data_cde0dc -> mul_5b0c3f.second\n        mul_5b0c3f.result -> surface_area_7b6a3c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -121, y: 54, name: \"size\") property(Number) size_8a3f2e\n\n        out(x: 118, y: -6, name: \"surfaceArea\") property(Number) surfaceArea_7c1b9d\n\n        instance(x: 22, y: -17) mul_4f5c0c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8a3f2e -> mul_4f5c0c.first\n        data_cde0dc -> mul_4f5c0c.second\n        mul_4f5c0c.result -> surfaceArea_7c1b9d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 25, name: \"size\") property(Number) size_1f0a3e\n\n        out(x: 1032, y: 7, name: \"surface_area\") property(Number) surface_area_8c6b5d\n\n        instance(x: 12, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1f0a3e -> mul_f892a4.first\n        data_cde0dc -> mul_f892a4.second\n        mul_f892a4.result -> surface_area_8c6b5d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 57, name: \"size\") property(Number) size_9a8f3e\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: 25) mul_f5c6b4 root.Std_k98ojb.Math.Mul {}\n        size_9a8f3e -> mul_f5c6b4.first\n        6 -> mul_f5c6b4.second\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        mul_f5c6b4.result -> mul_584bfd.first\n        size_9a8f3e -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 40, name: \"size\") property(Number) size_1a9b8f\n\n        out(x: 656, y: 120, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_1a9b8f -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f2330d.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -102, y: 40, name: \"size\") property(Number) size_8f3b5e\n\n        out(x: 1056, y: 7, name: \"surface_area\") property(Number) surface_area_1c0d9a\n\n        instance(x: 21, y: -2) mul_4f3b67 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f3b5e -> mul_4f3b67.first\n        data_cde0dc -> mul_4f3b67.second\n        mul_4f3b67.result -> surface_area_1c0d9a\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_7e6b2f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -108, y: 43, name: \"size\") property(Number) size_3a9b2f\n\n        out(x: 1068, y: 7, name: \"surface_area\") property(Number) surface_area_6c0d1e\n\n        instance(x: 22, y: -4) mul_5e7f3c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3a9b2f -> mul_5e7f3c.first\n        data_cde0dc -> mul_5e7f3c.second\n        mul_5e7f3c.result -> surface_area_6c0d1e\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -105, y: 45, name: \"size\") property(Number) size_1a8b3f\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_f7d9c0\n\n        instance(x: 94, y: -5) mul_2e6f4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a8b3f -> mul_2e6f4f.first\n        data_cde0dc -> mul_2e6f4f.second\n        mul_2e6f4f.result -> surface_area_f7d9c0\n    }\n\n    \n\n    instance(x: 322, y: 568) surface_area_of_cube_ea3b8f root.main.surface_area_of_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 13, name: \"list\") property(List) list_4a3f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3f8e\n        min_list_4d4556.list -> list_4a3f8e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 22, name: \"list\") property(List) list_6a1f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_6a1f8e -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_6a1f8e -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 0, name: \"list\") property(List) list_5e9f1d\n\n        out(x: 512, y: 27, name: \"difference\") property(Number) difference_7a3b6c\n\n        instance(x: 201, y: 27) sub_8c2b0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 155) max_5f1d4c root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: -75) min_7a9c6c root.Std_k98ojb.List.Min {}\n        list_5e9f1d -> max_5f1d4c.list\n        list_5e9f1d -> min_7a9c6c.list\n        max_5f1d4c.max -> sub_8c2b0e.first\n        min_7a9c6c.min -> sub_8c2b0e.second\n        sub_8c2b0e.result -> difference_7a3b6c\n    }\n\n    \n\n    instance(x: 48, y: -1) diff_max_min_5d4f0c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 17, name: \"list\") property(List) list_9a1f6e\n\n        out(x: 518, y: 63, name: \"difference\") property(Number) difference_4c2b7d\n\n        instance(x: 201, y: 62) sub_5b3c0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_9f8a1c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_7d2c6c root.Std_k98ojb.List.Min {}\n        list_9a1f6e -> max_9f8a1c.list\n        list_9a1f6e -> min_7d2c6c.list\n        max_9f8a1c.max -> sub_5b3c0e.first\n        min_7d2c6c.min -> sub_5b3c0e.second\n        sub_5b3c0e.result -> difference_4c2b7d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_9f8a1c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -333, y: 147, name: \"list\") property(List) list_1e8b3f\n\n        out(x: 440, y: 127, name: \"difference\") property(Number) difference_7a2d5c\n\n        instance(x: -82, y: 155) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 201, y: 62) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"max\") max_4d4556 root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"min\") min_f3b46d root.Std_k98ojb.List.Min {}\n        sub_852f2e.result -> difference_7a2d5c\n        max_4d4556.max -> sub_852f2e.first\n        min_f3b46d.min -> sub_852f2e.second\n        list_1e8b3f -> length_6e87f2.list\n        list_1e8b3f -> max_4d4556.list\n        list_1e8b3f -> min_f3b46d.list\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a3f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7b2c4d\n\n        instance(x: 201, y: 62) sub_9c8a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_5e3f1f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_6d2a4c root.Std_k98ojb.List.Min {}\n        list_6a3f1e -> max_5e3f1f.list\n        list_6a3f1e -> min_6d2a4c.list\n        max_5e3f1f.max -> sub_9c8a0c.first\n        min_6d2a4c.min -> sub_9c8a0c.second\n        sub_9c8a0c.result -> output_7b2c4d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1f3e5e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 12, name: \"list\") property(List) list_1a9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> sub_852f2e.first\n        min_list_4d4556.list -> sub_852f2e.second\n        list_1a9b8f -> max_list_f3b46d.list\n        max_list_f3b46d.max -> firstitem_870503.list\n        list_1a9b8f -> min_list_4d4556.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_4a1f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c9d0b\n\n        instance(x: 201, y: 62) sub_6e2f7f root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a8b4c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5d9b3c root.Std_k98ojb.List.Min {}\n        list_4a1f8e -> max_1a8b4c.list\n        list_4a1f8e -> min_5d9b3c.list\n        max_1a8b4c.max -> sub_6e2f7f.first\n        min_5d9b3c.min -> sub_6e2f7f.second\n        sub_6e2f7f.result -> output_5c9d0b\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1a8f4c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -30, y: 18, name: \"list\") property(List) list_5e3b2f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_5e3b2f -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_5e3b2f -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a3b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_1a3b8f\n        min_list_4d4556.list -> list_1a3b8f\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a1d5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9e3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a1d5c.value\n        2 -> modulo_7a1d5c.divisor\n        modulo_7a1d5c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9e3f2f.left\n        0 -> equal_9e3f2f.right\n        equal_9e3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e5d4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f6d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c0a.value\n        2 -> modulo_7e1c0a.divisor\n        modulo_7e1c0a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f6d4f.left\n        0 -> equal_9f6d4f.right\n        equal_9f6d4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e4d5c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1a0c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f2d3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        input_f5c03d -> modulo_1a0c7e.value\n        2 -> modulo_1a0c7e.divisor\n        modulo_1a0c7e.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_9f2d3f.right\n        modulo_1a0c7e.result -> equal_9f2d3f.left\n        equal_9f2d3f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        0 -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_e19a62.value\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_6d0e1f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a5c1e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2d9f4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a5c1e.value\n        2 -> modulo_7a5c1e.divisor\n        modulo_7a5c1e.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2d9f4f.left\n        0 -> equal_2d9f4f.right\n        equal_2d9f4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e6d2e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 356, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e5a2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_3f9d0c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        input_f5c03d -> modulo_1e5a2c.value\n        2 -> modulo_1e5a2c.divisor\n        modulo_1e5a2c.result -> expression_b720d7.gen_0\n        0 -> equal_3f9d0c.right\n        expression_b720d7.result -> equal_3f9d0c.left\n        equal_3f9d0c.result -> if_e19a62.predicate\n        modulo_1e5a2c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e5a2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0a1c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f3e5c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0a1c6d.value\n        2 -> modulo_0a1c6d.divisor\n        modulo_0a1c6d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f3e5c.left\n        0 -> equal_9f3e5c.right\n        equal_9f3e5c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0d1e6c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e5c6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_1f0d3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e5c6a.value\n        2 -> modulo_7e5c6a.divisor\n        modulo_7e5c6a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_1f0d3c.right\n        modulo_7e5c6a.result -> equal_1f0d3c.left\n        equal_1f0d3c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e5d2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1a0c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9d3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1a0c7e.value\n        2 -> modulo_1a0c7e.divisor\n        modulo_1a0c7e.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9d3f2f.left\n        0 -> equal_9d3f2f.right\n        equal_9d3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5d1e4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 353, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a5c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_0e3f9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a5c6d.value\n        2 -> modulo_7a5c6d.divisor\n        modulo_7a5c6d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_0e3f9f.right\n        modulo_7a5c6d.result -> equal_0e3f9f.left\n        equal_0e3f9f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e4d1c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e5a6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f2d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1e5a6c.value\n        2 -> modulo_1e5a6c.divisor\n        modulo_1e5a6c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f2d4f.left\n        0 -> equal_9f2d4f.right\n        equal_9f2d4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5d4e1f root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_4a3f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_7e1ce0 root.Std_k98ojb.Iteration.Filter {}\n        characters_4a3f8c.output -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_7e1ce0.handler\n        find_6d05b0.item -> filter_7e1ce0.items\n        filter_7e1ce0.output_list -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 600, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_4a7b6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8e3c9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_8e3c9d_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_4a7b6f.output -> find_8e3c9d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e5b8c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2e5b8c.input\n            elem_9f6850 -> contains_2e5b8c.contains\n            contains_2e5b8c.result -> bool_af09a7\n        } -> find_8e3c9d.predicate\n        characters_4a7b6f.output -> ``find_8e3c9d_1``.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e5b8c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2e5b8c.input\n            elem_9f6850 -> contains_2e5b8c.contains\n            contains_2e5b8c.result -> bool_af09a7\n        } -> ``find_8e3c9d_1``.predicate\n        find_8e3c9d.item -> output_ebef81\n    }\n\n    \n\n    instance(x: 80, y: 52) FirstRepeatedChar_6f0b4f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -290, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a8c6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e9d4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_5e1e2c root.Std_k98ojb.Iteration.Filter {}\n        characters_3a8c6f.output -> find_7e9d4f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e8b5c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_1e8b5c.input\n            elem_9f6850 -> contains_1e8b5c.contains\n            contains_1e8b5c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_7e9d4f.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e8b5c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_1e8b5c.input\n            elem_9f6850 -> contains_1e8b5c.contains\n            contains_1e8b5c.result -> bool_af09a7\n        } -> filter_5e1e2c.handler\n        find_7e9d4f.item -> output_0\n        characters_3a8c6f.output -> filter_5e1e2c.items\n        filter_5e1e2c.output_list -> input_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"seen\") List_1e3c8a root.Std_k98ojb.List.Empty {}\n        input_0 -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            seen_0 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            true -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6b9\n        } -> find_6d05b0.predicate\n        instance(x: 532, y: 147) add_3f8c2e root.Std_k98ojb.List.Add {}\n        seen_0 -> add_3f8c2e.list\n        find_6d05b0.item -> add_3f8c2e.item\n        add_3f8c2e.listWithItem -> seen_1\n        instance(x: 532, y: 147) ``first repeated char_0`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_0``.execute\n        seen_1 -> ``first repeated char_0``.list\n        find_6d05b0.item -> ``first repeated char_0``.item\n        ``first repeated char_0``.listWithItem -> seen_2\n        instance(x: 532, y: 147) ``first repeated char_1`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_1``.execute\n        seen_2 -> ``first repeated char_1``.list\n        find_6d05b0.item -> ``first repeated char_1``.item\n        ``first repeated char_1``.listWithItem -> seen_3\n        instance(x: 532, y: 147) ``first repeated char_2`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_2``.execute\n        seen_3 -> ``first repeated char_2``.list\n        find_6d05b0.item -> ``first repeated char_2``.item\n        ``first repeated char_2``.listWithItem -> seen_4\n        instance(x: 532, y: 147) ``first repeated char_3`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_3``.execute\n        seen_4 -> ``first repeated char_3``.list\n        find_6d05b0.item -> ``first repeated char_3``.item\n        ``first repeated char_3``.listWithItem -> seen_5\n        instance(x: 532, y: 147) ``first repeated char_4`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_4``.execute\n        seen_5 -> ``first repeated char_4``.list\n        find_6d05b0.item -> ``first repeated char_4``.item\n        ``first repeated char_4``.listWithItem -> seen_6\n        instance(x: 532, y: 147) ``first repeated char_5`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_5``.execute\n        seen_6 -> ``first repeated char_5``.list\n        find_6d05b0.item -> ``first repeated char_5``.item\n        ``first repeated char_5``.listWithItem -> seen_7\n        instance(x: 532, y: 147) ``first repeated char_6`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_6``.execute\n        seen_7 -> ``first repeated char_6``.list\n        find_6d05b0.item -> ``first repeated char_6``.item\n        ``first repeated char_6``.listWithItem -> seen_8\n        instance(x: 532, y: 147) ``first repeated char_7`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_7``.execute\n        seen_8 -> ``first repeated char_7``.list\n        find_6d05b0.item -> ``first repeated char_7``.item\n        ``first repeated char_7``.listWithItem -> seen_9\n        instance(x: 532, y: 147) ``first repeated char_8`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_8``.execute\n        seen_9 -> ``first repeated char_8``.list\n        find_6d05b0.item -> ``first repeated char_8``.item\n        ``first repeated char_8``.listWithItem -> seen_10\n        instance(x: 532, y: 147) ``first repeated char_9`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_9``.execute\n        seen_10 -> ``first repeated char_9``.list\n        find_6d05b0.item -> ``first repeated char_9``.item\n        ``first repeated char_9``.listWithItem -> seen_11\n        instance(x: 532, y: 147) ``first repeated char_10`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_10``.execute\n        seen_11 -> ``first repeated char_10``.list\n        find_6d05b0.item -> ``first repeated char_10``.item\n        ``first repeated char_10``.listWithItem -> seen_12\n        instance(x: 532, y: 147) ``first repeated char_11`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_11``.execute\n        seen_12 -> ``first repeated char_11``.list\n        find_6d05b0.item -> ``first repeated char_11``.item\n        ``first repeated char_11``.listWithItem -> seen_13\n        instance(x: 532, y: 147) ``first repeated char_12`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_12``.execute\n        seen_13 -> ``first repeated char_12``.list\n        find_6d05b0.item -> ``first repeated char_12``.item\n        ``first repeated char_12``.listWithItem -> seen_14\n        instance(x: 532, y: 147) ``first repeated char_13`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_13``.execute\n        seen_14 -> ``first repeated char_13``.list\n        find_6d05b0.item -> ``first repeated char_13``.item\n        ``first repeated char_13``.listWithItem -> seen_15\n        instance(x: 532, y: 147) ``first repeated char_14`` root.Std_k98ojb.List.Add {}\n        find_6d05b0.onItem -> ``first repeated char_14``.execute\n        seen_15 -> ``first repeated char_14``.list\n        find_6d05b0.item -> ``first repeated char_14``.item\n        ``first repeated char_14``.listWithItem -> seen_16\n        instance(x: 532, y: 147) ``first repeated char_15`` root.Std_k98ojb.List.Add {}\n        find_6d",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -283, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5a6c9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_8e1f1f root.Std_k98ojb.Iteration.Filter {}\n        characters_3e4b7f.output -> filter_8e1f1f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e4b3c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_1e4b3c.input\n            elem_9f6850 -> contains_1e4b3c.contains\n            contains_1e4b3c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> filter_8e1f1f.handler\n        filter_8e1f1f.output_list -> find_5a6c9d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e4b3c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_1e4b3c.input\n            elem_9f6850 -> contains_1e4b3c.contains\n            contains_1e4b3c.result -> bool_af09a7\n        } -> find_5a6c9d.predicate\n        characters_3e4b7f.output -> output_0\n        find_5a6c9d.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            in(x: -113, y: 54, name: \"index\") property(Number) index_8c7d6e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) slice_2e1f3c root.Std_k98ojb.List.Slice {}\n            instance(x: 417, y: 44) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            contains_d42dce.input -> slice_2e1f3c.list\n            elem_9f6850 -> contains_d42dce.contains\n            index_8c7d6e -> slice_2e1f3c.start\n            -1 -> slice_2e1f3c.end\n            slice_2e1f3c.output -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        input_0 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_8c7d6e\n\n            instance(x: 89, y: 29) characters_1a3b5c root.Std_k98ojb.Strings.Characters {}\n            instance(x: 310, y: 35) find_index_2f9b4d root.Std_k98ojb.List.FindIndex {}\n            characters_1a3b5c.output -> find_index_2f9b4d.items\n            elem_9f6850 -> find_index_2f9b4d.predicate\n            find_index_2f9b4d.index -> index_8c7d6e\n        } -> find_6d05b0.handler\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -450) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -459) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -459) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -453) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -423) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -450) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -453) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    }
]