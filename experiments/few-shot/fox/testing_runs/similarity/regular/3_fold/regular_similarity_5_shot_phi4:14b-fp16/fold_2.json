[
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -261, y: -107, name: \"list1\") property(List) list1_2f0b9e\n        in(x: -271, y: 17, name: \"list2\") property(List) list2_8a4c5d\n\n        out(x: 553, y: -94, name: \"output\") property(Bool) output_3a6c7f\n\n        instance(x: 131, y: -105) intersection_1b9e0c root.Std_k98ojb.Sets.Intersection {}\n        list1_2f0b9e -> intersection_1b9e0c.left\n        list2_8a4c5d -> intersection_1b9e0c.right\n        instance(x: 360, y: -95) notempty_7e3b6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b9e0c.intersection -> notempty_7e3b6f.list\n        notempty_7e3b6f.isEmpty -> output_3a6c7f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -185, y: -86, name: \"list1\") property(List) list1_2a3f8e\n        in(x: -181, y: 18, name: \"list2\") property(List) list2_7c9b4d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_2a3f8e -> intersection_c7c7e6.left\n        list2_7c9b4d -> intersection_c7c7e6.right\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        length_8166b0.list -> intersection_c7c7e6.intersection\n        instance(x: 360, y: -95) greaterthan_f89569 root.Std_k98ojb.Math.GreaterThan {}\n        length_8166b0.length -> greaterthan_f89569.left\n        0 -> greaterthan_f89569.right\n        greaterthan_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_ac7dfb root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -299, y: -214, name: \"list1\") property(List) list1_2f3e6d\n        in(x: -309, y: -105, name: \"list2\") property(List) list2_7a9b0c\n\n        out(x: 1265, y: -109, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -107) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: -303, y: -205, name: \"intersection\") intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_2f3e6d -> intersection_c7c7e6.left\n        list2_7a9b0c -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> contains_32727d.list\n        0 -> contains_32727d.item\n        contains_32727d.is_contained -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) has_common_element_7a4dad root.main.has_common_element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -175, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -185, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1a9d3e root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_1a9d3e.list\n        notempty_1a9d3e.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_ac7dfb root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -290, y: -86, name: \"list1\") property(List) list1_4e9b2f\n        in(x: -298, y: 28, name: \"list2\") property(List) list2_5c0a6d\n\n        out(x: 558, y: 7, name: \"output\") property(Bool) output_8f3b4e\n\n        instance(x: 146, y: -96) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: -95) notempty_1a5d0e root.Std_k98ojb.List.NotEmpty {}\n        list1_4e9b2f -> intersection_c7c7e6.left\n        list2_5c0a6d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1a5d0e.list\n        notempty_1a5d0e.isEmpty -> output_8f3b4e\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -177, y: -111, name: \"list1\") property(List) list1_9e8f2d\n        in(x: -183, y: 20, name: \"list2\") property(List) list2_5b7a3c\n\n        out(x: 786, y: -110, name: \"output\") property(Bool) output_6c0a4e\n\n        instance(x: 133, y: -131) intersection_1d9f8f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e8f2d -> intersection_1d9f8f.left\n        list2_5b7a3c -> intersection_1d9f8f.right\n        instance(x: 364, y: -109) notempty_6a0e4c root.Std_k98ojb.List.NotEmpty {}\n        intersection_1d9f8f.intersection -> notempty_6a0e4c.list\n        notempty_6a0e4c.isEmpty -> output_6c0a4e\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_eb5c3c root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -255, y: -86, name: \"list1\") property(List) list1_4e9b5f\n        in(x: -273, y: 30, name: \"list2\") property(List) list2_7c0a6d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_4a8f5d root.Std_k98ojb.Math.GreaterThan {}\n        list1_4e9b5f -> intersection_c7c7e6.left\n        list2_7c0a6d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        0 -> greaterthan_4a8f5d.left\n        length_8166b0.length -> greaterthan_4a8f5d.right\n        greaterthan_4a8f5d.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -178, y: -122, name: \"list1\") property(List) list1_3a9b2f\n        in(x: -186, y: 29, name: \"list2\") property(List) list2_5e8c6d\n\n        out(x: 784, y: 51, name: \"output\") property(Bool) output_4f7b3a\n\n        instance(x: 133, y: -131) intersection_9e0b1f root.Std_k98ojb.Sets.Intersection {}\n        list1_3a9b2f -> intersection_9e0b1f.left\n        list2_5e8c6d -> intersection_9e0b1f.right\n        instance(x: 246, y: -19) notempty_e7e4ec root.Std_k98ojb.List.NotEmpty {}\n        intersection_9e0b1f.intersect -> notempty_e7e4ec.list\n        notempty_e7e4ec.isEmpty -> output_4f7b3a\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c7097f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -485, y: 30, name: \"list\") property(List) list_3af6ba\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c7097f\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3af6ba -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3af6ba -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 5, name: \"list\") property(List) list_1e3f6a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1e3f6a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1e3f6a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3a2b8c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -465, y: 3, name: \"list\") property(List) list_4e9a2f\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4e9a2f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4e9a2f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"subList\") property(List) sub_list_2a1f9d\n        in(x: -284, y: 130, name: \"mainList\") property(List) main_list_3b0e8c\n\n        out(x: 557, y: 115, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 114) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 113) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 112) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sub_list_2a1f9d -> intersection_c7c7e6.left\n        main_list_3b0e8c -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sub_list_2a1f9d -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 199) is_sublist_ae3c4a root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_5e9f8d\n        in(x: -485, y: -205, name: \"mainList\") property(List) main_list_1a7b0c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_1a7b0c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_1a7b0c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -275, y: 160) contains_32727d root.Std_k98ojb.List.Contains {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        sub_list_5e9f8d -> contains_32727d.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> contains_32727d.handler\n        output_efbc78 -> contains_32727d.output\n        contains_32727d.is_contained -> continue_a96db6\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -467, y: 5, name: \"subList\") property(List) sub_list_1f0a3d\n        in(x: -465, y: 135, name: \"mainList\") property(List) main_list_7e9b6c\n\n        out(x: 1228, y: 5, name: \"continue\") trigger() continue_4f2b6f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_1a0d3f\n\n        instance(x: 752, y: 93) ifexpression_7c5e9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7c5e9c.else -> continue_4f2b6f\n        ifexpression_7c5e9c.value -> output_1a0d3f\n        ifexpression_7c5e9c.then -> setter_9d4f1c.execute\n        main_list_7e9b6c -> for_d26972.items\n        for_d26972.item -> ifexpression_7c5e9c.gen_2\n        for_d26972.index -> ifexpression_7c5e9c.gen_0\n        getter_b280eb.value -> ifexpression_7c5e9c.gen_1\n        for_d26972.onItem -> ifexpression_7c5e9c.execute\n        for_d26972.done -> continue_4f2b6f\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7e9b6c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        sub_list_1f0a3d -> for_d26972.items\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_3a7b6f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_1e8f0d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_7a3b5c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7a3b5c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7a3b5c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_1e8f0d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_5e9f1d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_3a2b7c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_3a2b7c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_3a2b7c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -293, y: 59) ifexpression_7a4dad root.Std_k98ojb.Std.IfExpression {\n            expression: \"subList.length == 0\"\n        }\n        getter(x: -84, y: 159, name: \"getter_ac7dfb\") getter_ac7dfb = sub_list_5e9f1d\n        instance(x: -293, y: -5) length_c7097f root.Std_k98ojb.List.Length {}\n        ifexpression_7a4dad.then -> output_5bbcd7\n        ifexpression_7a4dad.else -> continue_a96db6\n        getter_ac7dfb.value -> length_c7097f.list\n        length_c7097f.length -> ifexpression_7a4dad.gen_0\n\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 30, name: \"subList\") property(List) sub_list_3a1b2f\n        in(x: -444, y: -134, name: \"mainList\") property(List) main_list_5c8e6d\n\n        out(x: 1120, y: -109, name: \"output\") property(Bool) output_7f4c9a\n\n        instance(x: -277, y: -107, name: \"sublist length\") length_1b3b2c root.Std_k98ojb.List.Length {}\n        instance(x: 5, y: -106) contains_8d6e0c root.Std_k98ojb.List.Contains {}\n        instance(x: 222, y: -107) greaterthan_7f4a9c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 440, y: -108) sub_1a2f5d root.Std_k98ojb.Math.Sub {}\n        instance(x: 658, y: -109) for_3e0b8f root.Std_k98ojb.Std.For {}\n        instance(x: 876, y: -110) slice_9c7c6c root.Std_k98ojb.List.Slice {}\n        instance(x: 1094, y: -111) equal_1a2d5c root.Std_k98ojb.Logic.Equal {}\n        sub_list_3a1b2f -> length_1b3b2c.list\n        main_list_5c8e6d -> contains_8d6e0c.list\n        0 -> contains_8d6e0c.item\n        greaterthan_7f4a9c.left -> length_1b3b2c.length\n        0 -> greaterthan_7f4a9c.right\n        sub_list_3a1b2f -> for_3e0b8f.items\n        contains_8d6e0c.is_contained -> equal_1a2d5c.left\n        slice_9c7c6c.list -> equal_1a2d5c.right\n        sub_list_3a1b2f -> slice_9c7c6c.start\n        for_3e0b8f.index -> slice_9c7c6c.end\n        -1 -> slice_9c7c6c.end\n        main_list_5c8e6d -> slice_9c7c6c.list\n        equal_1a2d5c.result -> contains_8d6e0c.item\n        greaterthan_7f4a9c.result -> for_3e0b8f.trigger\n        length_1b3b2c.length -> sub_1a2f5d.first\n        0 -> sub_1a2f5d.second\n        sub_1a2f5d.result -> slice_9c7c6c.start\n        for_3e0b8f.onItem -> for_3e0b8f.next\n        for_3e0b8f.done -> output_7f4c9a\n    }\n\n    \n\n    instance(x: 12, y: -5) is_sublist_f2d1d6 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_3e9f5d\n        in(x: -485, y: -115, name: \"mainList\") property(List) main_list_7a4b1c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7a4b1c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7a4b1c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_3e9f5d -> getat_ce2a48.valueAtIndex\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -445, y: 30, name: \"subList\") property(List) sub_list_3a1b8f\n        in(x: -450, y: -145, name: \"mainList\") property(List) main_list_7c6e2d\n\n        out(x: 1225, y: -115, name: \"output\") property(Bool) output_9e0a4d\n\n        instance(x: -265, y: -105, name: \"sublist length\") length_8f1b3f root.Std_k98ojb.List.Length {}\n        instance(x: 106, y: -104) count_6c7a2f root.Std_k98ojb.Std.Count {}\n        instance(x: 332, y: -105) for_9d0e5f root.Std_k98ojb.Std.For {}\n        instance(x: 550, y: -103) slice_8f4f1f root.Std_k98ojb.List.Slice {}\n        instance(x: 770, y: -104) equal_7a3c6f root.Std_k98ojb.Logic.Equal {}\n        sub_list_3a1b8f -> length_8f1b3f.list\n        count_6c7a2f.count -> for_9d0e5f.trigger\n        main_list_7c6e2d -> slice_8f4f1f.list\n        0 -> slice_8f4f1f.start\n        count_6c7a2f.count -> slice_8f4f1f.end\n        for_9d0e5f.index -> length_8f1b3f.list\n        slice_8f4f1f.slice -> equal_7a3c6f.left\n        sub_list_3a1b8f -> equal_7a3c6f.right\n        count_6c7a2f.reset -> for_9d0e5f.reset\n        for_9d0e5f.done -> output_9e0a4d\n        equal_7a3c6f.result -> count_6c7a2f.count\n        for_9d0e5f.next -> count_6c7a2f.continue\n    }\n\n    \n\n    instance(x: 72, y: -12) is_sublist_1b8f4f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_3a2f8d\n        in(x: -485, y: -120, name: \"mainList\") property(List) main_list_7e6b9c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7e6b9c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7e6b9c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_3a2f8d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 5, name: \"subList\") property(List) sub_list_1e8b0f\n        in(x: -485, y: 155, name: \"mainList\") property(List) main_list_6a9c7d\n\n        out(x: 1227, y: 140, name: \"output\") property(Bool) output_4e2f1f\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_6a9c7d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        sub_list_1e8b0f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e6b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f9c4d\n\n        instance(x: 0, y: 0) find_2f5f6f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8e1a7c\n            in(x: -110, y: 85, name: \"index\") property(Number) index_3d5f6b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9c2c4f\n\n            instance(x: 89, y: 29) sub_1a8e0f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7d5e6f root.Std_k98ojb.Logic.NotEqual {}\n            1 -> sub_1a8e0f.second\n            index_3d5f6b -> sub_1a8e0f.first\n            elem_8e1a7c -> notequal_7d5e6f.right\n            sub_1a8e0f.result -> notequal_7d5e6f.left\n            notequal_7d5e6f.result -> bool_9c2c4f\n        } -> find_2f5f6f.predicate\n        list_3e6b8a -> find_2f5f6f.items\n        find_2f5f6f.index + 1 -> missing_number_7f9c4d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1f0c8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f9e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c2d5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 68, name: \"index\") property(Number) index_7c1e6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b0f2d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_9b0f2d.result -> notequal_807ffd.left\n            index_7c1e6a -> sub_9b0f2d.first\n            elem_9f6850 -> sub_9b0f2d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a8f9e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_7c1e6a\n\n            instance(x: 89, y: 29) list_length_3b5d8f root.Std_k98ojb.List.Length {}\n            elem_9f6850 -> list_length_3b5d8f.list\n            list_length_3b5d8f.length -> index_7c1e6a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_7c2d5b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_1f3d5a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_9e8c6b\n\n        instance(x: 0, y: 0) find_7e4f2e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1d9a5c\n            in(x: -114, y: -64, name: \"index\") property(Number) index_7e4f2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8b0c6f\n\n            instance(x: 89, y: 29) add_9d1a3a root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_7e4f2e root.Std_k98ojb.Logic.NotEqual {}\n            index_7e4f2e -> add_9d1a3a.first\n            1 -> add_9d1a3a.second\n            elem_1d9a5c -> notequal_7e4f2e.left\n            add_9d1a3a.result -> notequal_7e4f2e.right\n            notequal_7e4f2e.result -> bool_8b0c6f\n        } -> find_7e4f2e.predicate\n        list_1f3d5a -> find_7e4f2e.items\n        index_7e4f2e -> find_7e4f2e.index\n        find_7e4f2e.item -> missing_number_9e8c6b\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1d9a5c root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 62, name: \"index\") property(Number) index_1c8d5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 308, y: 63) add_7f9e3a root.Std_k98ojb.Math.Add {}\n            index_1c8d5a -> add_7f9e3a.first\n            1 -> add_7f9e3a.second\n            add_7f9e3a.result -> modulo_1088d5.value\n            2 -> modulo_1088d5.divisor\n            notequal_807ffd.right -> elem_9f6850\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        find_6d05b0.index -> index_1c8d5a\n        find_6d05b0.item -> missing_number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1f9e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c6b5d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 84, name: \"index\") property(Number) index_7c8a2d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_9b3f6e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_9b3f6e.result -> notequal_807ffd.left\n            index_7c8a2d -> sub_9b3f6e.first\n            elem_9f6850 -> sub_9b3f6e.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1f9e -> find_6d05b0.items\n        find_6d05b0.index -> missing_number_7c6b5d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 44, name: \"index\") property(Number) index_7e8c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1d3b6f root.Std_k98ojb.Math.Add {}\n            index_7e8c5a -> add_1d3b6f.first\n            1 -> add_1d3b6f.second\n            add_1d3b6f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1d3b6f root.Std_k98ojb.Math.Add {}\n            index_7e8c5a -> add_1d3b6f.first\n            1 -> add_1d3b6f.second\n            add_1d3b6f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f6a8e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 68, name: \"index\") property(Number) index_1e7c5a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e7c5a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f6a8e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_1e7c5a\n\n            instance(x: 89, y: 29) count_4b8d2f root.Std_k98ojb.Count {}\n            elem_9f6850 -> count_4b8d2f.count\n            count_4b8d2f.count -> index_1e7c5a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 44, name: \"index\") property(Number) index_ae7c1a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_1088d5 root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_ae7c1a -> add_1088d5.first\n            1 -> add_1088d5.second\n            elem_9f6850 -> notequal_807ffd.left\n            add_1088d5.result -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_ae7c1a\n\n            instance(x: 89, y: 29) count_1088d5 root.Std_k98ojb.Std.Count {}\n            elem_9f6850 -> count_1088d5.count\n            count_1088d5.count -> index_ae7c1a\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1f3d6a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7e9b8c\n\n        instance(x: 0, y: 0) find_2f4f5f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1d3a7e\n            in(x: -114, y: 105, name: \"index\") property(Number) index_8f6c2b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5f9c0e\n\n            instance(x: 89, y: 29) sub_1a7d3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_2f8b6c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_2f8b6c.right\n            sub_1a7d3f.result -> notequal_2f8b6c.left\n            index_8f6c2b -> sub_1a7d3f.first\n            elem_1d3a7e -> sub_1a7d3f.second\n            notequal_2f8b6c.result -> bool_5f9c0e\n        } -> find_2f4f5f.predicate\n        list_1f3d6a -> find_2f4f5f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8b9c7e\n            in(x: -114, y: 105, name: \"index\") property(Number) index_3a6d2b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_4f1c0e\n\n            instance(x: 89, y: 29) sub_9a7d3f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_5f8b6c root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_5f8b6c.right\n            sub_9a7d3f.result -> notequal_5f8b6c.left\n            index_3a6d2b -> sub_9a7d3f.first\n            elem_8b9c7e -> sub_9a7d3f.second\n            notequal_5f8b6c.result -> bool_4f1c0e\n        } -> find_2f4f5f.index_predicate\n        find_2f4f5f.item -> missing_number_7e9b8c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_3c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a8f2e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_6b9d7c\n\n        instance(x: 0, y: 0) find_5c4b7e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1f3a9d\n            in(x: -112, y: 115, name: \"index\") property(Number) index_5e4c8b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_7b2f6e\n\n            instance(x: 89, y: 29) add_3a9d0e root.Std_k98ojb.Math.Add {}\n            instance(x: 310, y: 35) notequal_4c8f1e root.Std_k98ojb.Logic.NotEqual {}\n            index_5e4c8b -> add_3a9d0e.first\n            1 -> add_3a9d0e.second\n            elem_1f3a9d -> notequal_4c8f1e.right\n            add_3a9d0e.result -> notequal_4c8f1e.left\n            notequal_4c8f1e.result -> bool_7b2f6e\n        } -> find_5c4b7e.predicate\n        list_3a8f2e -> find_5c4b7e.items\n        find_5c4b7e.index -> missing_number_6b9d7c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1b0f8f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_3e9f6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a4d8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f7c9ea root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e9f6c.input\n        \" \" -> replace_3e9f6c.search\n        \":\" -> replace_3e9f6c.replace\n        replace_3e9f6c.output -> replace_5a4d8f.input\n        \",\" -> replace_5a4d8f.search\n        \":\" -> replace_5a4d8f.replace\n        replace_5a4d8f.output -> replace_f7c9ea.input\n        \".\" -> replace_f7c9ea.search\n        \":\" -> replace_f7c9ea.replace\n        replace_f7c9ea.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -150, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3c7f9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a6d5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8f8b1c root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3c7f9e.input\n        \" \" -> replace_3c7f9e.search\n        \":\" -> replace_3c7f9e.replace\n        replace_3c7f9e.output -> replace_4a6d5c.input\n        \",\" -> replace_4a6d5c.search\n        \":\" -> replace_4a6d5c.replace\n        replace_4a6d5c.output -> replace_8f8b1c.input\n        \".\" -> replace_8f8b1c.search\n        \":\" -> replace_8f8b1c.replace\n        replace_8f8b1c.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3e9c5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4d6a8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7a5b1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e9c5f.input\n        \" \" -> replace_3e9c5f.search\n        \":\" -> replace_3e9c5f.replace\n        replace_3e9c5f.output -> replace_4d6a8f.input\n        \",\" -> replace_4d6a8f.search\n        \":\" -> replace_4d6a8f.replace\n        replace_4d6a8f.output -> replace_7a5b1f.input\n        \".\" -> replace_7a5b1f.search\n        \":\" -> replace_7a5b1f.replace\n        replace_7a5b1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_3e8f9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_7a5d4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6c3b1f root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e8f9c.input\n        \" \" -> replace_3e8f9c.search\n        \":\" -> replace_3e8f9c.replace\n        replace_3e8f9c.output -> replace_7a5d4c.input\n        \",\" -> replace_7a5d4c.search\n        \":\" -> replace_7a5d4c.replace\n        replace_7a5d4c.output -> replace_6c3b1f.input\n        \".\" -> replace_6c3b1f.search\n        \":\" -> replace_6c3b1f.replace\n        replace_6c3b1f.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -149, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3a7c6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4e5d9a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8a9f1b root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3a7c6f.input\n        \" \" -> replace_3a7c6f.search\n        \":\" -> replace_3a7c6f.replace\n        replace_3a7c6f.output -> replace_4e5d9a.input\n        \",\" -> replace_4e5d9a.search\n        \":\" -> replace_4e5d9a.replace\n        replace_4e5d9a.output -> replace_8a9f1b.input\n        \".\" -> replace_8a9f1b.search\n        \":\" -> replace_8a9f1b.replace\n        replace_8a9f1b.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_2f1b6a\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e9c3d\n\n        instance(x: 0, y: 1) replace_8f4f7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6a7d2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_3e9c5f root.Std_k98ojb.Strings.Replace {}\n        input_2f1b6a -> replace_8f4f7c.input\n        \" \" -> replace_8f4f7c.search\n        \":\" -> replace_8f4f7c.replace\n        replace_8f4f7c.output -> replace_6a7d2f.input\n        \",\" -> replace_6a7d2f.search\n        \":\" -> replace_6a7d2f.replace\n        replace_6a7d2f.output -> replace_3e9c5f.input\n        \".\" -> replace_3e9c5f.search\n        \":\" -> replace_3e9c5f.replace\n        replace_3e9c5f.output -> output_5e9c3d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_7a1b2f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5e3f7c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8d9a6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_4b8c1d root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5e3f7c.input\n        \" \" -> replace_5e3f7c.search\n        \":\" -> replace_5e3f7c.replace\n        replace_5e3f7c.output -> replace_8d9a6f.input\n        \",\" -> replace_8d9a6f.search\n        \":\" -> replace_8d9a6f.replace\n        replace_8d9a6f.output -> replace_4b8c1d.input\n        \".\" -> replace_4b8c1d.search\n        \":\" -> replace_4b8c1d.replace\n        replace_4b8c1d.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_3b1a9f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_7e8d6c\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_0c5e4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_1a2e3f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: 48) replace_2d4e5f root.Std_k98ojb.Strings.Replace {}\n        input_3b1a9f -> replace_spaces_commas_dots.input\n        \" \" -> replace_0c5e4f.search\n        \":\" -> replace_0c5e4f.replace\n        replace_spaces_commas_dots.output -> replace_1a2e3f.input\n        \",\" -> replace_1a2e3f.search\n        \":\" -> replace_1a2e3f.replace\n        replace_1a2e3f.output -> replace_2d4e5f.input\n        \".\" -> replace_2d4e5f.search\n        \":\" -> replace_2d4e5f.replace\n        replace_2d4e5f.output -> output_7e8d6c\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -122, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_1\n\n        instance(x: 0, y: 1) replace_7f3b8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a5e9d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6f5c1d root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_7f3b8c.input\n        \" \" -> replace_7f3b8c.search\n        \":\" -> replace_7f3b8c.replace\n        replace_7f3b8c.output -> replace_4a5e9d.input\n        \",\" -> replace_4a5e9d.search\n        \":\" -> replace_4a5e9d.replace\n        replace_4a5e9d.output -> replace_6f5c1d.input\n        \".\" -> replace_6f5c1d.search\n        \":\" -> replace_6f5c1d.replace\n        replace_6f5c1d.output -> result_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -128, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 520, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_7e9f6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8d4f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f5f7f1 root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_7e9f6c.input\n        \" \" -> replace_7e9f6c.search\n        \":\" -> replace_7e9f6c.replace\n        replace_7e9f6c.output -> replace_3a8d4f.input\n        \",\" -> replace_3a8d4f.search\n        \":\" -> replace_3a8d4f.replace\n        replace_3a8d4f.output -> replace_f5f7f1.input\n        \".\" -> replace_f5f7f1.search\n        \":\" -> replace_f5f7f1.replace\n        replace_f5f7f1.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 6, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1050, y: 16, name: \"output\") property(Bool) output_7c2a5b\n\n        instance(x: -164, y: 10) characters_3e6b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 338, y: 17) length_9f0d8f root.Std_k98ojb.List.Length {}\n        instance(x: 547, y: 16) lessthanorequal_ea7d1e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 760, y: -3) for_6c2b9c root.Std_k98ojb.Std.For {}\n        instance(x: 1030, y: 16) equal_4f5c8a root.Std_k98ojb.Logic.Equal {}\n        characters_3e6b4c.characters -> length_9f0d8f.list\n        input_8f1e9d -> characters_3e6b4c.input\n        func() {\n            in(x: -24, y: 46, name: \"current\") property(String) current_5a2a7\n\n            out(x: 562, y: 68, name: \"out\") property(Bool) out_e8f3d6\n\n            instance(x: 226, y: 65) equal_1b4e9c root.Std_k98ojb.Logic.Equal {}\n            current_5a2a7 -> equal_1b4e9c.left\n            input_8f1e9d -> equal_1b4e9c.right\n            equal_1b4e9c.result -> out_e8f3d6\n        } -> for_6c2b9c.handler\n        length_9f0d8f.length -> lessthanorequal_ea7d1e.left\n        1 -> lessthanorequal_ea7d1e.right\n        lessthanorequal_ea7d1e.result -> for_6c2b9c.items\n        characters_3e6b4c.characters -> for_6c2b9c.items\n        func() {\n            in(x: -24, y: 46, name: \"current\") property(String) current_5a2a7\n\n            out(x: 562, y: 68, name: \"out\") property(Bool) out_e8f3d6\n\n            instance(x: 226, y: 65) equal_1b4e9c root.Std_k98ojb.Logic.Equal {}\n            current_5a2a7 -> equal_1b4e9c.left\n            input_8f1e9d -> equal_1b4e9c.right\n            equal_1b4e9c.result -> out_e8f3d6\n        } -> for_6c2b9c.handler\n        for_6c2b9c.onItem -> equal_4f5c8a.execute\n        0 -> equal_4f5c8a.left\n        for_6c2b9c.value -> equal_4f5c8a.right\n        equal_4f5c8a.result -> output_7c2a5b\n    }\n\n    \n\n    instance(x: -40, y: 79) is_same_e0d3e1 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 0, name: \"input\") property(String) input_9e8f3d\n\n        out(x: 1015, y: 10, name: \"output\") property(Bool) output_7a2b4c\n\n        instance(x: -184, y: 1) characters_6f0b6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 312, y: 12) length_9e8d3f root.Std_k98ojb.List.Length {}\n        instance(x: 528, y: 11) lessthanorequal_7a1b4c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 735, y: -2) for_5e9d8f root.Std_k98ojb.Std.For {}\n        instance(x: 1003, y: 11) equal_0b6a7c root.Std_k98ojb.Logic.Equal {}\n        characters_6f0b6c.characters -> length_9e8d3f.list\n        input_9e8f3d -> characters_6f0b6c.input\n        lessthanorequal_7a1b4c.result -> for_5e9d8f.items\n        1 -> lessthanorequal_7a1b4c.right\n        length_9e8d3f.length -> lessthanorequal_7a1b4c.left\n        characters_6f0b6c.characters -> for_5e9d8f.items\n        func() {\n            in(x: -26, y: 30, name: \"current\") property(String) current_3e2c8e\n\n            out(x: 655, y: 49, name: \"output\") property(Bool) output_1a6b9d\n\n            instance(x: 226, y: 56) equal_7f5c0c root.Std_k98ojb.Logic.Equal {}\n            current_3e2c8e -> equal_7f5c0c.left\n            input_9e8f3d -> equal_7f5c0c.right\n            equal_7f5c0c.result -> output_1a6b9d\n        } -> for_5e9d8f.handler\n        for_5e9d8f.onItem -> equal_0b6a7c.execute\n        input_9e8f3d -> equal_0b6a7c.left\n        for_5e9d8f.item -> equal_0b6a7c.right\n        equal_0b6a7c.result -> output_7a2b4c\n        for_5e9d8f.done -> output_7a2b4c\n    }\n\n    \n\n    instance(x: -62, y: 111) is_same_1f3f0c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -284, y: 0, name: \"string\") property(String) string_1a9d3f\n\n        out(x: 557, y: 11, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 6) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 5) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 4) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_1a9d3f -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_1a9d3f -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_ac7dfb root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -278, y: 0, name: \"input\") property(String) input_1f2e9d\n\n        out(x: 1066, y: 5, name: \"output\") property(Bool) output_8b3c7a\n\n        instance(x: -120, y: 4) characters_d8b0ef root.Std_k98ojb.Strings.Characters {}\n        instance(x: 446, y: 1) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 658, y: 5) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 873, y: -11) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1011, y: 4) if_07b8c7 root.Std_k98ojb.Std.If {}\n        characters_d8b0ef.characters -> length_6e87f2.list\n        input_1f2e9d -> characters_d8b0ef.input\n        length_6e87f2.length -> lessthanorequal_f11fda.right\n        1 -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        characters_d8b0ef.characters -> getat_ce2a48.list\n        1 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> if_07b8c7.value\n        0 -> getat_ce2a48.index\n        characters_d8b0ef.characters -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> if_07b8c7.gen_1\n        if_07b8c7.else -> output_8b3c7a\n        if_07b8c7.then -> output_8b3c7a\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_9e8f1d\n\n        out(x: 1073, y: 12, name: \"output\") property(Bool) output_eb6c7a\n\n        instance(x: -119, y: 11) characters_c4e0ba root.Std_k98ojb.Strings.Characters {}\n        instance(x: 360, y: 10) length_1d9f8f root.Std_k98ojb.List.Length {}\n        instance(x: 582, y: 12) lessthanorequal_ea7c5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 780, y: -4) for_d0e1d2 root.Std_k98ojb.Std.For {}\n        instance(x: 1046, y: 10) equal_8f3f9a root.Std_k98ojb.Logic.Equal {}\n        characters_c4e0ba.characters -> length_1d9f8f.list\n        input_9e8f1d -> characters_c4e0ba.input\n        func() {\n            in(x: -18, y: 46, name: \"current\") property(String) current_5a3b2c\n\n            out(x: 592, y: 69, name: \"output\") property(Bool) output_7d8f6e\n\n            instance(x: 224, y: 63) equal_1a9b4c root.Std_k98ojb.Logic.Equal {}\n            current_5a3b2c -> equal_1a9b4c.left\n            characters_c4e0ba.characters[0] -> equal_1a9b4c.right\n            equal_1a9b4c.result -> output_7d8f6e\n        } -> for_d0e1d2.handler\n        length_1d9f8f.length -> lessthanorequal_ea7c5f.left\n        1 -> lessthanorequal_ea7c5f.right\n        lessthanorequal_ea7c5f.result -> equal_8f3f9a.left\n        true -> equal_8f3f9a.right\n        for_d0e1d2.items -> characters_c4e0ba.characters\n        for_d0e1d2.onItem -> for_d0e1d2.next\n        for_d0e1d2.done -> equal_8f3f9a.execute\n        equal_8f3f9a.result -> output_eb6c7a\n    }\n\n    \n\n    instance(x: -40, y: 86) is_same_5c4f4f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 0, name: \"input\") property(String) input_8f3a4e\n\n        out(x: 1052, y: 5, name: \"output\") property(Bool) output_9c1d6b\n\n        instance(x: -94, y: 10) characters_7e0e8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 246, y: 11) length_2a3c4c root.Std_k98ojb.List.Length {}\n        instance(x: 466, y: 12) getat_9d5c6f root.Std_k98ojb.List.GetAt {}\n        instance(x: 686, y: -1) equal_7e8f0f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 905, y: 10) for_3a4f2f root.Std_k98ojb.Std.For {}\n        instance(x: 1109, y: 11) ifexpression_5d1c6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 398, y: 78, name: \"getter_8a7e4f\") getter_8a7e4f = previous\n        setter(x: 719, y: -216, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 1013, y: -215) if_0b5b6f root.Std_k98ojb.Std.If {}\n        getter(x: -2, y: -111, name: \"getter_8a7e4f\") getter_9d5c1f = previous\n        instance(x: -275, y: 25) getat_0b5c6f root.Std_k98ojb.List.GetAt {}\n        ifexpression_5d1c6f.else -> for_3a4f2f.next\n        ifexpression_5d1c6f.value -> output_9c1d6b\n        ifexpression_5d1c6f.then -> setter_9d4f1c.execute\n        characters_7e0e8f.characters -> for_3a4f2f.items\n        for_3a4f2f.item -> ifexpression_5d1c6f.gen_2\n        for_3a4f2f.index -> ifexpression_5d1c6f.gen_0\n        getter_8a7e4f.value -> ifexpression_5d1c6f.gen_1\n        for_3a4f2f.onItem -> ifexpression_5d1c6f.execute\n        for_3a4f2f.done -> output_9c1d6b\n        for_3a4f2f.item -> setter_9d4f1c.new_value\n        characters_7e0e8f.characters -> getat_0b5c6f.list\n        0 -> getat_0b5c6f.index\n        getat_0b5c6f.itemAtIndex -> getter_9d5c1f.value\n        input_8f3a4e -> characters_7e0e8f.input\n        length_2a3c4c.list -> for_3a4f2f.items\n        length_2a3c4c.length -> getat_9d5c6f.index\n        getter_9d5c1f.value -> getat_9d5c6f.itemAtIndex\n        ifexpression_5d1c6f.value -> if_0b5b6f.predicate\n        for_3a4f2f.onItem -> if_0b5b6f.execute\n        if_0b5b6f.else -> output_9c1d6b\n        getter_8a7e4f.value -> equal_7e8f0f.left\n        getat_9d5c6f.itemAtIndex -> equal_7e8f0f.right\n        equal_7e8f0f.result -> ifexpression_5d1c6f.predicate\n        for_3a4f2f.onItem -> setter_9d4f1c.execute\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -277, y: 10, name: \"input\") property(String) input_8e9f0d\n\n        out(x: 1075, y: 12, name: \"output\") property(Bool) output_1a3b7c\n\n        instance(x: -88, y: 11) characters_2a6b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 243, y: 10) length_5d0e9f root.Std_k98ojb.List.Length {}\n        instance(x: 446, y: 12) getat_8c3b7f root.Std_k98ojb.List.GetAt {}\n        instance(x: 662, y: -1) lessthanorequal_6a4d0e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 840, y: 12) for_5c3b8f root.Std_k98ojb.Std.For {}\n        instance(x: 1022, y: -1) equal_7a9b6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1190, y: 11) and_4e9d7f root.Std_k98ojb.Logic.And {}\n        characters_2a6b4f.characters -> getat_8c3b7f.list\n        input_8e9f0d -> characters_2a6b4f.input\n        length_5d0e9f.length -> for_5c3b8f.items\n        1 -> lessthanorequal_6a4d0e.right\n        for_5c3b8f.index -> lessthanorequal_6a4d0e.left\n        lessthanorequal_6a4d0e.result -> ifexpression_7f9b6f.predicate\n        getat_8c3b7f.itemAtIndex -> equal_7a9b6f.right\n        input_8e9f0d -> equal_7a9b6f.left\n        equal_7a9b6f.result -> and_4e9d7f.right\n        1 -> and_4e9d7f.left\n        for_5c3b8f.onItem -> ifexpression_7f9b6f.execute\n        ifexpression_7f9b6f.then -> continue_2a3b7c\n        ifexpression_7f9b6f.else -> getat_8c3b7f.index\n        0 -> getat_8c3b7f.index\n        and_4e9d7f.result -> ifexpression_7f9b6f.value\n        for_5c3b8f.done -> continue_2a3b7c\n        ifexpression_7f9b6f.value -> output_1a3b7c\n    }\n\n    \n\n    instance(x: 12, y: -16) is_same_4e9d7f root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 0, name: \"input\") property(String) input_8f3e1d\n\n        out(x: 556, y: 111, name: \"output\") property(Bool) output_9b7c2a\n\n        instance(x: -92, y: 105) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 104) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 103) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -275, y: -35) characters_d8a7c9 root.Std_k98ojb.Strings.Characters {}\n        input_8f3e1d -> characters_d8a7c9.input\n        characters_d8a7c9.characters -> intersection_c7c7e6.left\n        characters_d8a7c9.characters -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        equal_f89569.result -> output_9b7c2a\n    }\n\n    \n\n    instance(x: -84, y: 179) is_same_8f3d4f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 10, name: \"input\") property(String) input_8f0a3e\n\n        out(x: 1065, y: 11, name: \"output\") property(Bool) output_7b2c1d\n\n        instance(x: -86, y: 14) characters_9f6c4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 244, y: 10) length_5a3e0f root.Std_k98ojb.List.Length {}\n        instance(x: 457, y: 11) getat_1d2f7f root.Std_k98ojb.List.GetAt {}\n        instance(x: 668, y: -8) lessthanorequal_9c4a3e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 871, y: 11) equal_1d0f2f root.Std_k98ojb.Logic.Equal {}\n        characters_9f6c4c.characters -> length_5a3e0f.list\n        input_8f0a3e -> characters_9f6c4c.input\n        length_5a3e0f.length -> lessthanorequal_9c4a3e.right\n        1 -> lessthanorequal_9c4a3e.left\n        equal_1d0f2f.result -> output_7b2c1d\n        characters_9f6c4c.characters -> getat_1d2f7f.list\n        1 -> getat_1d2f7f.index\n        getat_1d2f7f.itemAtIndex -> equal_1d0f2f.right\n        input_8f0a3e -> equal_1d0f2f.left\n        lessthanorequal_9c4a3e.result -> getat_1d2f7f.execute\n    }\n\n    \n\n    instance(x: 12, y: -60) is_same_5b6d8f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -296, y: 11, name: \"input\") property(String) input_9e1a5f\n\n        out(x: 1110, y: 13, name: \"output\") property(Bool) output_7c8b3d\n\n        instance(x: -140, y: 12) characters_d6f4ed root.Std_k98ojb.Strings.Characters {}\n        instance(x: 362, y: 11) length_9a2e1f root.Std_k98ojb.List.Length {}\n        instance(x: 575, y: 10) lessthanorequal_7c3d8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 778, y: -4) for_5a9e6f root.Std_k98ojb.Std.For {}\n        instance(x: 1030, y: 10) equal_1b2f7c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1048, y: 84) ifexpression_3d4a5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 492, y: 86, name: \"getter_9e7f6c\") getter_9e7f6c = previous\n        setter(x: 839, y: -45, name: \"setter_1b2d3a\") setter_1b2d3a = previous\n        instance(x: 1060, y: 84) if_8e4f5f root.Std_k98ojb.Std.If {}\n        getter(x: 0, y: -24, name: \"getter_9e7f6c\") getter_1e2d3a = previous\n        instance(x: -275, y: 26) getat_8f4e5f root.Std_k98ojb.List.GetAt {}\n        ifexpression_3d4a5c.else -> continue_0c9b7f\n        ifexpression_3d4a5c.value -> output_7c8b3d\n        ifexpression_3d4a5c.then -> setter_1b2d3a.execute\n        characters_d6f4ed.characters -> for_5a9e6f.items\n        for_5a9e6f.item -> equal_1b2f7c.left\n        getter_9e7f6c.value -> equal_1b2f7c.right\n        for_5a9e6f.onItem -> ifexpression_3d4a5c.execute\n        for_5a9e6f.index -> ifexpression_3d4a5c.gen_0\n        getter_9e7f6c.value -> ifexpression_3d4a5c.gen_1\n        equal_1b2f7c.result -> if_8e4f5f.predicate\n        for_5a9e6f.onItem -> if_8e4f5f.execute\n        if_8e4f5f.else -> continue_0c9b7f\n        if_8e4f5f.then -> setter_1b2d3a.execute\n        for_5a9e6f.done -> continue_0c9b7f\n        for_5a9e6f.item -> setter_1b2d3a.new_value\n        characters_d6f4ed.characters -> getat_8f4e5f.list\n        0 -> getat_8f4e5f.index\n        getat_8f4e5f.itemAtIndex -> getter_1e2d3a.value\n        input_9e1a5f -> length_9a2e1f.list\n        length_9a2e1f.length -> lessthanorequal_7c3d8c.left\n        1 -> lessthanorequal_7c3d8c.right\n        lessthanorequal_7c3d8c.result -> if_8e4f5f.predicate\n        getter_1e2d3a.continue -> for_5a9e6f.reset\n        setter_1b2d3a.continue -> for_5a9e6f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a8e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9c7d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9c7d4f.items\n        count_1f2a8e.count -> filter_9c7d4f.execute\n        filter_9c7d4f.output_list -> count_1f2a8e.value\n        count_1f2a8e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f4e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -20) filter_3c5d6f root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3c5d6f.list\n        count_1a2f4e.count -> filter_3c5d6f.on_item\n        filter_3c5d6f.result -> count_1a2f4e.items\n        count_1a2f4e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -20) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -32, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a6c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -32) filter_3e5d7f root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e5d7f.list\n        count_1f2a6c.count -> filter_3e5d7f.trigger\n        filter_3e5d7f.result -> count_1f2a6c.value\n        count_1f2a6c.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -32) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a6f2c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -15) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1a6f2c.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1a6f2c.value\n        instance(x: 0, y: -30) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"value\"\n        }\n        count_1a6f2c.count -> math_expr_node.gen_0\n        math_expr_node.result -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_7d4e9b root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -15, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f4e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -15) filter_3d7de6 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3d7de6.list\n        count_1a2f4e.count -> result_ai\n        filter_3d7de6.result -> count_1a2f4e.trigger\n    }\n\n    \n    instance(x: 0, y: -15) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2c6a root.Std_k98ojb.Count {}\n        instance(x: 0, y: -50) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1f2c6a.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1f2c6a.value\n        instance(x: 0, y: -100) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        count_1f2c6a.count -> ifexpression_3d7de6.gen_0\n        0 -> ifexpression_3d7de6.gen_1\n        instance(x: -25, y: -150) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1f2c6a.count -> math_expr_node.gen_0\n        ifexpression_3d7de6.then -> math_expr_node.execute\n        ifexpression_3d7de6.else -> count_1f2c6a.reset\n        math_expr_node.result -> result_ai\n    }\n    \n\n    instance(x: 0, y: -250) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f9c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -40) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> count_1a2f9c.list\n        count_1a2f9c.count -> filter_3e25a9.trigger\n        filter_3e25a9.result -> count_1a2f9c.list\n        count_1a2f9c.value -> result_ai\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_2c1f8a root.Std_k98ojb.Count {}\n        instance(x: 0, y: -16) filter_3e9d6f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e9d6f.items\n        count_2c1f8a.count -> filter_3e9d6f.execute\n        filter_3e9d6f.output_list -> count_2c1f8a.list\n        count_2c1f8a.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -16) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_7a5c6e root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -1) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_7a5c6e.count\n        count_7a5c6e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -1) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -10, y: 20) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 50, y: 30) count_1f8a4c root.Std_k98ojb.Std.Count {}\n        instance(x: 150, y: 40) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 250, y: 60) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count + 1\"\n        }\n        input_ai -> characters_node.input\n        characters_node.characters -> count_1f8a4c.trigger\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> math_expr_node.gen_0\n        count_1f8a4c.count -> math_expr_node.gen_1\n        math_expr_node.result -> result_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_2e3d6b root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e5a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e5a8c.first\n        data_cde0dc -> pow_9e5a8c.second\n        pow_9e5a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c0e.x\n        data_cde0dc -> pow_9a8c0e.y\n        pow_9a8c0e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3a8e9c.x\n        data_cde0dc -> pow_3a8e9c.y\n        pow_3a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a3c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a3c0e.x\n        data_cde0dc -> pow_5a3c0e.y\n        pow_5a3c0e.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a0c8e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a0c8e.first\n        data_cde0dc -> pow_9a0c8e.second\n        pow_9a0c8e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8e9c.first\n        data_cde0dc -> pow_5a8e9c.second\n        pow_5a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8c9e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8c9e.first\n        data_cde0dc -> pow_5a8c9e.second\n        pow_5a8c9e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a8e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a8e9c.first\n        data_cde0dc -> pow_5a8e9c.second\n        pow_5a8e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3a0c5e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3a0c5e.x\n        data_cde0dc -> pow_3a0c5e.y\n        pow_3a0c5e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c3e.x\n        data_cde0dc -> pow_9a8c3e.y\n        pow_9a8c3e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -103, y: 54, name: \"size\") property(Number) size_3f8b5e\n\n        out(x: 46, y: 158, name: \"surfaceArea\") property(Number) surfaceArea_9a1c4d\n\n        instance(x: 12, y: -11) mul_7e0b6c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f8b5e -> mul_7e0b6c.first\n        data_cde0dc -> mul_7e0b6c.second\n        mul_7e0b6c.result -> surfaceArea_9a1c4d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_5f8c3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 17, name: \"size\") property(Number) size_1a3f8e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_7b9c6d\n\n        instance(x: 94, y: -105) mul_5b4e2f root.Std_k98ojb.Math.Mul {}\n        size_1a3f8e -> mul_5b4e2f.first\n        6 -> mul_5b4e2f.second\n        instance(x: 92, y: -22) mul_9c0d7d root.Std_k98ojb.Math.Mul {}\n        mul_5b4e2f.result -> mul_9c0d7d.first\n        size_1a3f8e -> mul_9c0d7d.second\n        mul_9c0d7d.result -> surface_area_7b9c6d\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_5e2e4f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 45, name: \"size\") property(Number) size_1f0b5e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f6d3c8 root.Std_k98ojb.Math.Mul {}\n        size_1f0b5e -> mul_f6d3c8.first\n        6 -> mul_f6d3c8.second\n        instance(x: 92, y: -22) mul_2a4b7c root.Std_k98ojb.Math.Mul {}\n        mul_f6d3c8.result -> mul_2a4b7c.first\n        size_1f0b5e -> mul_2a4b7c.second\n        mul_2a4b7c.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -102, y: 22, name: \"size\") property(Number) size_1f3e9d\n\n        out(x: 1066, y: 20, name: \"surface_area\") property(Number) surface_area_7b4a8c\n\n        instance(x: 10, y: -19) mul_5a0c2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 334, y: 133) data_cde0dc  = 6\n        size_1f3e9d -> mul_5a0c2f.first\n        data_cde0dc -> mul_5a0c2f.second\n        mul_5a0c2f.result -> surface_area_7b4a8c\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -101, y: 43, name: \"size\") property(Number) size_1a3f9e\n\n        out(x: 1062, y: 40, name: \"surface_area\") property(Number) surface_area_8b0c7d\n\n        instance(x: 17, y: -10) mul_f5a4db root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a3f9e -> mul_f5a4db.first\n        data_cde0dc -> mul_f5a4db.second\n        mul_f5a4db.result -> surface_area_8b0c7d\n    }\n\n    \n\n    instance(x: -19, y: 10) surface_area_of_cube_9f1e2f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -121, y: 35, name: \"size\") property(Number) size_1a8f5e\n\n        out(x: 1076, y: 36, name: \"surface_area\") property(Number) surface_area_9c3b0d\n\n        instance(x: 16, y: -10) mul_7b2f4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a8f5e -> mul_7b2f4f.first\n        data_cde0dc -> mul_7b2f4f.second\n        mul_7b2f4f.result -> surface_area_9c3b0d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_1a8e5d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_1a9f0e\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: 105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_1a9f0e -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: 22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f2330d.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: -45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -121, y: 47, name: \"size\") property(Number) size_1a8f5e\n\n        out(x: 46, y: -53, name: \"surfaceArea\") property(Number) surfaceArea_9b2c6d\n\n        instance(x: 16, y: -10) mul_3f0e4c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1a8f5e -> mul_3f0e4c.first\n        data_cde0dc -> mul_3f0e4c.second\n        mul_3f0e4c.result -> surfaceArea_9b2c6d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_7a5c8d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_1a3b5f\n\n        out(x: 656, y: 7, name: \"surface_area\") property(Number) surface_area_6e8c2d\n\n        instance(x: 94, y: -105) mul_9f4b0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_1a5e3d  = 6\n        size_1a3b5f -> mul_9f4b0f.first\n        data_1a5e3d -> mul_9f4b0f.second\n        mul_9f4b0f.result -> surface_area_6e8c2d\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_7e2f8f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -100, y: 53, name: \"size\") property(Number) size_9e3b6f\n\n        out(x: 1018, y: 52, name: \"surface_area\") property(Number) surface_area_5a1c7d\n\n        instance(x: 10, y: -12) mul_4f2c0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 316, y: 133) data_cde0dc  = 6\n        size_9e3b6f -> mul_4f2c0f.first\n        data_cde0dc -> mul_4f2c0f.second\n        mul_4f2c0f.result -> surface_area_5a1c7d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_4a3f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3f1e\n        min_list_4d4556.list -> list_4a3f1e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_1a8f9e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> sub_852f2e.first\n        min_list_4d4556.list -> sub_852f2e.second\n        list_1a8f9e -> max_list_f3b46d.list\n        max_list_f3b46d.max -> firstitem_870503.list\n        list_1a8f9e -> min_list_4d4556.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 11, name: \"list\") property(List) list_1e8f2a\n\n        out(x: 544, y: 63, name: \"output\") property(Number) output_3b7c5d\n\n        instance(x: 201, y: 62) sub_6f4c0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_2a1b9c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_5d8b3d root.Std_k98ojb.List.Min {}\n        sub_6f4c0e.result -> output_3b7c5d\n        max_2a1b9c.max -> sub_6f4c0e.first\n        min_5d8b3d.min -> sub_6f4c0e.second\n        list_1e8f2a -> max_2a1b9c.list\n        list_1e8f2a -> min_5d8b3d.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_6f4c0e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_1e9b8f\n        min_list_4d4556.list -> list_1e9b8f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 26, name: \"list\") property(List) list_1a8f0e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b3c2d\n\n        instance(x: 201, y: 62) sub_7e4b6e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_9f0a8c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_1d5f2c root.Std_k98ojb.List.Min {}\n        list_1a8f0e -> max_9f0a8c.list\n        list_1a8f0e -> min_1d5f2c.list\n        max_9f0a8c.max -> sub_7e4b6e.first\n        min_1d5f2c.min -> sub_7e4b6e.second\n        sub_7e4b6e.result -> output_5b3c2d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_9a0f8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -26, y: 20, name: \"list\") property(List) list_1a8f6e\n\n        out(x: 459, y: 63, name: \"difference\") property(Number) difference_4b9c3d\n\n        instance(x: 201, y: 62) sub_2f5f0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1e7a8c root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_4d3e9f root.Std_k98ojb.List.Min {}\n        list_1a8f6e -> max_1e7a8c.list\n        list_1a8f6e -> min_4d3e9f.list\n        max_1e7a8c.max -> sub_2f5f0c.first\n        min_4d3e9f.min -> sub_2f5f0c.second\n        sub_2f5f0c.result -> difference_4b9c3d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1a7c6c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a9f0e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_1a9f0e\n        min_list_4d4556.list -> list_1a9f0e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -426, y: 438, name: \"list\") property(List) list_4e8b9f\n\n        out(x: 159, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 426, y: 303) max_node root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358) min_node root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_4e8b9f -> max_node.list\n        list_4e8b9f -> min_node.list\n        max_node.max -> sub_852f2e.first\n        min_node.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: 426, y: 303) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a8b3f\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5e7c2d\n\n        instance(x: 201, y: 62) sub_4f0b6c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a8c9c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5d2e7c root.Std_k98ojb.List.Min {}\n        list_1a8b3f -> max_1a8c9c.list\n        list_1a8b3f -> min_5d2e7c.list\n        max_1a8c9c.max -> sub_4f0b6c.first\n        min_5d2e7c.min -> sub_4f0b6c.second\n        sub_4f0b6c.result -> output_5e7c2d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_9a8b3f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 38, name: \"list\") property(List) list_6e9b2f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_6e9b2f -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_6e9b2f -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a1d5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9e3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a1d5c.value\n        2 -> modulo_7a1d5c.divisor\n        modulo_7a1d5c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9e3f2f.left\n        0 -> equal_9e3f2f.right\n        equal_9e3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d0f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f3d5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c0a.value\n        2 -> modulo_7e1c0a.divisor\n        modulo_7e1c0a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f3d5f.left\n        0 -> equal_9f3d5f.right\n        equal_9f3d5f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e5d2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 339, y: -53, name: \"input\") property(Number) input_1e3f0d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0a6c1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n\n        input_1e3f0d -> modulo_0a6c1d.value\n        2 -> modulo_0a6c1d.divisor\n        modulo_0a6c1d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> and_80a119.left\n        modulo_0a6c1d.result -> and_80a119.right\n        and_80a119.result -> if_07b8c7.value\n        if_07b8c7.then -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e7c2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_1f3a5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e7c2d.value\n        2 -> modulo_0e7c2d.divisor\n        modulo_0e7c2d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_1f3a5f.left\n        0 -> equal_1f3a5f.right\n        equal_1f3a5f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5d4e1c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e5c1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9a4f2c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e5c1d.value\n        2 -> modulo_7e5c1d.divisor\n        modulo_7e5c1d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9a4f2c.left\n        0 -> equal_9a4f2c.right\n        equal_9a4f2c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_3a9f4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1d7c.value\n        2 -> modulo_0e1d7c.divisor\n        modulo_0e1d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_3a9f4f.left\n        0 -> equal_3a9f4f.right\n        equal_3a9f4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d0c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1c7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2f5a6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1c7d.value\n        2 -> modulo_0e1c7d.divisor\n        modulo_0e1c7d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_2f5a6f.right\n        expression_b720d7.result -> equal_2f5a6f.left\n        if_07b8c7.then -> equal_2f5a6f.execute\n        equal_2f5a6f.result -> if_e19a62.predicate\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        equal_2f5a6f.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        if_07b8c7.value -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_3f5a9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e1d7c.value\n        2 -> modulo_0e1d7c.divisor\n        modulo_0e1d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_3f5a9f.left\n        0 -> equal_3f5a9f.right\n        equal_3f5a9f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e1d7c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e5c6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_0f9d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1e5c6a.value\n        2 -> modulo_1e5c6a.divisor\n        modulo_1e5c6a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_0f9d4f.left\n        0 -> equal_0f9d4f.right\n        equal_0f9d4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1d4e2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_5a3f6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c2d.value\n        2 -> modulo_7e1c2d.divisor\n        modulo_7e1c2d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_5a3f6f.left\n        0 -> equal_5a3f6f.right\n        equal_5a3f6f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e4f2f root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -290, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a7c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_5e9f8c root.Std_k98ojb.Iteration.Filter {}\n        characters_3a7c4f.output -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_5e9f8c.handler\n        find_6d05b0.item -> filter_5e9f8c.items\n        filter_5e9f8c.output_list -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"seen\") List_1e7c9a root.Std_k98ojb.List.Empty {}\n        input_0 -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            contains_d42dce.input -> seen_0\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        instance(x: 532, y: 147) add_3c7f4a root.Std_k98ojb.List.Add {}\n        seen_0 -> add_3c7f4a.list\n        find_6d05b0.item -> add_3c7f4a.item\n        add_3c7f4a.listWithItem -> seen_0\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a7b3c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_4f8d6e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 490, y: -1) contains_2c9b4a root.Std_k98ojb.List.Contains {}\n        characters_5a7b3c.output -> find_4f8d6e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) list_1b8c6d root.Std_k98ojb.List.Slice {}\n            contains_2c9b4a.list -> list_1b8c6d.list\n            elem_9f6850 -> list_1b8c6d.start\n            -1 -> list_1b8c6d.end\n            list_1b8c6d.output -> contains_2c9b4a.list\n            elem_9f6850 -> contains_2c9b4a.item\n            contains_2c9b4a.result -> bool_af09a7\n        } -> find_4f8d6e.predicate\n        input_0 -> characters_5a7b3c.input\n        find_4f8d6e.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_7e1ce0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"unique chars\") Set_c88d35 {}\n        input_0 -> find_7e1char.finder\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_7e1ce0.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        input_0 -> find_7e1ce0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            unique_chars -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            not(contains_d42dce.result) -> bool_1eb6e9\n        } -> find_7e1ce0.filter\n        find_7e1ce0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -279, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5a7b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8e3c6d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_9b1c7f root.Std_k98ojb.Iteration.Filter {}\n        characters_5a7b4f.output -> find_8e3c6d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b8d6c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2b8d6c.input\n            elem_9f6850 -> contains_2b8d6c.contains\n            contains_2b8d6c.result -> bool_af09a7\n        } -> filter_9b1c7f.handler\n        find_8e3c6d.items -> filter_9b1c7f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b8d6c root.Std_k98ojb.Strings.Contains {}\n            filter_9b1c7f.output_list -> contains_2b8d6c.input\n            elem_9f6850 -> contains_2b8d6c.contains\n            contains_2b8d6c.result -> bool_af09a7\n        } -> find_8e3c6d.predicate\n        filter_9b1c7f.output_list -> output_0\n        find_8e3c6d.item -> output_0\n        input_0 -> characters_5a7b4f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_7e5f8c root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"unique chars\") Set_1a2d4f root.Std_k98ojb.Sets.Set {}\n        input_0 -> find_7e5f8c.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7a8f3c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_7a8f3c.input\n            unique_chars_0 -> contains_7a8f3c.contains\n            contains_7a8f3c.result -> bool_1eb6e9\n        } -> find_7e5f8c.predicate\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_7a8f3c root.Std_k98ojb.Strings.Contains {}\n            current_afd5b1 -> contains_7a8f3c.input\n            unique_chars_0 -> contains_7a8f3c.contains\n            not_0 -> bool_1eb6e9\n            contains_7a8f3c.result -> not_0.input\n        } -> Set_1a2d4f.add\n        find_7e5f8c.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -454) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -423) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -438) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -440) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -432) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -261, y: -107, name: \"list1\") property(List) list1_2f0b9e\n        in(x: -271, y: 17, name: \"list2\") property(List) list2_8a4c5d\n\n        out(x: 553, y: -94, name: \"output\") property(Bool) output_3a6c7f\n\n        instance(x: 131, y: -105) intersection_1b9e0c root.Std_k98ojb.Sets.Intersection {}\n        list1_2f0b9e -> intersection_1b9e0c.left\n        list2_8a4c5d -> intersection_1b9e0c.right\n        instance(x: 360, y: -95) notempty_7e3b6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b9e0c.intersection -> notempty_7e3b6f.list\n        notempty_7e3b6f.isEmpty -> output_3a6c7f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -263, y: -88, name: \"list1\") property(List) list1_3f8a9e\n        in(x: -271, y: 18, name: \"list2\") property(List) list2_4b0c7d\n\n        out(x: 555, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1a9d8f root.Std_k98ojb.List.NotEmpty {}\n        list1_3f8a9e -> intersection_c7c7e6.left\n        list2_4b0c7d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1a9d8f.list\n        notempty_1a9d8f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -290, y: -88, name: \"list1\") property(List) list1_3f8b2e\n        in(x: -303, y: 18, name: \"list2\") property(List) list2_9c0a6d\n\n        out(x: 560, y: -78, name: \"output\") property(Bool) output_7e1c4f\n\n        instance(x: -87, y: -79, name: \"intersection\") intersection_5b8c3e root.Std_k98ojb.Sets.Intersection {}\n        list1_3f8b2e -> intersection_5b8c3e.left\n        list2_9c0a6d -> intersection_5b8c3e.right\n        instance(x: 248, y: -78) notempty_7e4b5c root.Std_k98ojb.List.NotEmpty {}\n        intersection_5b8c3e.intersection -> notempty_7e4b5c.list\n        notempty_7e4b5c.isEmpty -> output_7e1c4f\n    }\n\n    \n\n    instance(x: -86, y: 61) has_common_element_6d9a0f root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_9d5a1f root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_9d5a1f.list\n        notempty_9d5a1f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -289, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -297, y: 30, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: 111, name: \"output\") property(Bool) output_0d40f1\n\n        instance(x: 133, y: -131) intersection_201051 root.Std_k98ojb.Sets.Intersection {}\n        list1_1f846b -> intersection_201051.left\n        list2_c62075 -> intersection_201051.right\n        intersection_201051.intersect -> output_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -275, y: -135, name: \"list1\") property(List) list1_9e3f2d\n        in(x: -283, y: 26, name: \"list2\") property(List) list2_8a7c4b\n\n        out(x: 1095, y: 15, name: \"output\") property(Bool) output_6e1f0f\n\n        instance(x: 515, y: -18) intersection_9d3b6f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3f2d -> intersection_9d3b6f.left\n        list2_8a7c4b -> intersection_9d3b6f.right\n        instance(x: 840, y: -18) notempty_5e0e7c root.Std_k98ojb.List.NotEmpty {}\n        intersection_9d3b6f.intersection -> notempty_5e0e7c.list\n        notempty_5e0e7c.isEmpty -> output_6e1f0f\n    }\n\n    \n\n    instance(x: -210, y: 59) has_common_element_4a2f8c root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -261, y: -86, name: \"list1\") property(List) list1_4a3b5f\n        in(x: -274, y: 18, name: \"list2\") property(List) list2_7c9d8e\n\n        out(x: 559, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_4a9d2f root.Std_k98ojb.Math.GreaterThan {}\n        list1_4a3b5f -> intersection_c7c7e6.left\n        list2_7c9d8e -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        0 -> greaterthan_4a9d2f.left\n        length_8166b0.length -> greaterthan_4a9d2f.right\n        greaterthan_4a9d2f.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -263, y: -111, name: \"list1\") property(List) list1_3a9f5e\n        in(x: -271, y: 18, name: \"list2\") property(List) list2_7c8d0b\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_5f3d8a root.Std_k98ojb.Math.GreaterThan {}\n        list1_3a9f5e -> intersection_c7c7e6.left\n        list2_7c8d0b -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        0 -> greaterthan_5f3d8a.left\n        length_8166b0.length -> greaterthan_5f3d8a.right\n        greaterthan_5f3d8a.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -255, y: -150, name: \"list1\") property(List) list1_2f0e6d\n        in(x: -264, y: 17, name: \"list2\") property(List) list2_7b3c8a\n\n        out(x: 560, y: -139, name: \"output\") property(Bool) output_9a1f4f\n\n        instance(x: -10, y: -137) intersection_e6d5e0 root.Std_k98ojb.Sets.Intersection {}\n        list1_2f0e6d -> intersection_e6d5e0.left\n        list2_7b3c8a -> intersection_e6d5e0.right\n        instance(x: 245, y: -137) notempty_9e4f6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_e6d5e0.intersection -> notempty_9e4f6f.list\n        notempty_9e4f6f.isEmpty -> output_9a1f4f\n    }\n\n    \n\n    instance(x: 91, y: -111) intersection_7c2b8c root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -299, y: -179, name: \"list1\") property(List) list1_3f0b8e\n        in(x: -311, y: 35, name: \"list2\") property(List) list2_9c4a5d\n\n        out(x: 1197, y: -160, name: \"output\") property(Bool) output_6f1b3e\n\n        instance(x: 717, y: -111) intersection_8f0a3c root.Std_k98ojb.Sets.Intersection {}\n        list1_3f0b8e -> intersection_8f0a3c.left\n        list2_9c4a5d -> intersection_8f0a3c.right\n        instance(x: 1006, y: -159) notempty_e7a4cd root.Std_k98ojb.List.NotEmpty {}\n        intersection_8f0a3c.intersection -> notempty_e7a4cd.list\n        notempty_e7a4cd.isEmpty -> output_6f1b3e\n    }\n\n    \n\n    instance(x: -248, y: 59) intersection_9d5c2c root.main.intersection {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 5, name: \"list\") property(List) list_1a8f2e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_3b0d6c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_9a4f8c\n\n        instance(x: 752, y: 93) ifexpression_7e5f1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_ea6d3c\") getter_ea6d3c = previous\n        setter(x: 679, y: -313, name: \"setter_7f4e8b\") setter_7f4e8b = previous\n        instance(x: 321, y: -20) for_1b0b5f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7f4e8b\") setter_3a2c6d = previous\n        instance(x: -275, y: -35) getat_9b1f5f root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e5f1c.else -> continue_3b0d6c\n        ifexpression_7e5f1c.value -> output_9a4f8c\n        ifexpression_7e5f1c.then -> setter_7f4e8b.execute\n        list_1a8f2e -> for_1b0b5f.items\n        for_1b0b5f.item -> ifexpression_7e5f1c.gen_2\n        for_1b0b5f.index -> ifexpression_7e5f1c.gen_0\n        getter_ea6d3c.value -> ifexpression_7e5f1c.gen_1\n        for_1b0b5f.onItem -> ifexpression_7e5f1c.execute\n        for_1b0b5f.done -> continue_3b0d6c\n        for_1b0b5f.item -> setter_7f4e8b.new_value\n        list_1a8f2e -> getat_9b1f5f.list\n        0 -> getat_9b1f5f.index\n        getat_9b1f5f.itemAtIndex -> setter_3a2c6d.new_value\n        continue_3b0d6c -> setter_3a2c6d.continue\n        setter_7f4e8b.continue -> for_1b0b5f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_9a8c1c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -517, y: 5, name: \"list\") property(List) list_3a9d6f\n\n        out(x: 1227, y: 147, name: \"output\") property(Bool) output_c8c2e1\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_c8c2e1\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_3a9d6f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_3a9d6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -526, y: 1, name: \"list\") property(List) list_2f3a9e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_6b4c8d\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_1b0c9f\n\n        instance(x: 752, y: 93) ifexpression_7e2a3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8d9f5c\") getter_8d9f5c = previous\n        setter(x: 679, y: -313, name: \"setter_7a4e2b\") setter_7a4e2b = previous\n        instance(x: 321, y: -20) for_6a3b1f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_7a4e2b\") setter_9c5d8f = previous\n        instance(x: -275, y: -35) getat_6f3c1d root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e2a3c.else -> continue_6b4c8d\n        ifexpression_7e2a3c.value -> output_1b0c9f\n        ifexpression_7e2a3c.then -> setter_7a4e2b.execute\n        list_2f3a9e -> for_6a3b1f.items\n        for_6a3b1f.item -> ifexpression_7e2a3c.gen_2\n        for_6a3b1f.index -> ifexpression_7e2a3c.gen_0\n        getter_8d9f5c.value -> ifexpression_7e2a3c.gen_1\n        for_6a3b1f.onItem -> ifexpression_7e2a3c.execute\n        for_6a3b1f.done -> continue_6b4c8d\n        for_6a3b1f.item -> setter_7a4e2b.new_value\n        list_2f3a9e -> getat_6f3c1d.list\n        0 -> getat_6f3c1d.index\n        getat_6f3c1d.itemAtIndex -> setter_9c5d8f.new_value\n    }\n\n    \n\n    instance(x: -10, y: 59) is_consecutive_2a7b4e root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -535, y: 3, name: \"list\") property(List) list_1f0a6e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1f0a6e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f0a6e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_3b7a2c root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 1, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"subList\") property(List) sub_list_2a1f9d\n        in(x: -284, y: 130, name: \"mainList\") property(List) main_list_3b0e8c\n\n        out(x: 557, y: 115, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 114) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 113) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 112) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sub_list_2a1f9d -> intersection_c7c7e6.left\n        main_list_3b0e8c -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sub_list_2a1f9d -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 199) is_sublist_ae3c4a root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: 10, name: \"subList\") property(List) sub_list_1e3f5d\n        in(x: -434, y: 140, name: \"mainList\") property(List) main_list_6a8b4c\n\n        out(x: 1227, y: 125, name: \"continue\") trigger() continue_9e2b0c\n        out(x: 1218, y: 267, name: \"output\") property(Bool) output_1f5d3a\n\n        instance(x: 752, y: 193) ifexpression_6c4a7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 320, name: \"getter_9e2d1c\") getter_9e2d1c = previous\n        setter(x: 679, y: -121, name: \"setter_8f3b7a\") setter_8f3b7a = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -313, name: \"setter_8f3b7a\") setter_5e4c6d = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_6c4a7f.else -> continue_9e2b0c\n        ifexpression_6c4a7f.value -> output_1f5d3a\n        ifexpression_6c4a7f.then -> setter_8f3b7a.execute\n        main_list_6a8b4c -> for_d26972.items\n        for_d26972.item -> ifexpression_6c4a7f.gen_2\n        for_d26972.index -> ifexpression_6c4a7f.gen_0\n        getter_9e2d1c.value -> ifexpression_6c4a7f.gen_1\n        for_d26972.onItem -> ifexpression_6c4a7f.execute\n        for_d26972.done -> continue_9e2b0c\n        for_d26972.item -> setter_8f3b7a.new_value\n        main_list_6a8b4c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_5e4c6d.new_value\n        sub_list_1e3f5d -> for_d26972.items\n        execute_9b7c8e -> setter_5e4c6d.execute\n        setter_5e4c6d.continue -> for_d26972.reset\n        setter_8f3b7a.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_9e2b0c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -467, y: 5, name: \"subList\") property(List) sub_list_1f3b4a\n        in(x: -469, y: 140, name: \"mainList\") property(List) main_list_7c6e2d\n\n        out(x: 1228, y: 5, name: \"continue\") trigger() continue_9f0f2c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_1a4b3f\n\n        instance(x: 752, y: 93) ifexpression_7e5d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e5d6.else -> continue_9f0f2c\n        ifexpression_7e5d6.value -> output_1a4b3f\n        ifexpression_7e5d6.then -> setter_9d4f1c.execute\n        main_list_7c6e2d -> for_d26972.items\n        for_d26972.item -> ifexpression_7e5d6.gen_2\n        for_d26972.index -> ifexpression_7e5d6.gen_0\n        getter_b280eb.value -> ifexpression_7e5d6.gen_1\n        for_d26972.onItem -> ifexpression_7e5d6.execute\n        for_d26972.done -> continue_9f0f2c\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7c6e2d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_1f3b4a -> getat_ce2a48.valueAtIndex\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_9f0f2c -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_7a5b8f root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"list1\") property(List) list1_3e6f8a\n        in(x: -465, y: -235, name: \"list2\") property(List) list2_7c9d4b\n\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_3e6f8a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_7c9d4b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_1f8a2b\n        in(x: -485, y: -125, name: \"mainList\") property(List) main_list_3e7d4c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_3e7d4c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_3e7d4c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_1f8a2b -> getat_ce2a48.valueAtIndex\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -464, y: 30, name: \"list1\") property(List) list1_5e8f2d\n        in(x: -465, y: -213, name: \"list2\") property(List) list2_9a7b0c\n\n        out(x: 1216, y: 10, name: \"output\") property(Bool) output_4f1f5e\n\n        instance(x: -303, y: -205, name: \"only odd indexes\") filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name=\"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name=\"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_5e8f2d -> filter_c91965.items\n        func() {\n            in(x: -192, y: -16, name=\"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name=\"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        list2_9a7b0c -> contains_32727d.item\n        not_75283f.result -> output_4f1f5e\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_sublist_7a4dad root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -435, y: 15, name: \"subList\") property(List) sub_list_1f0b3e\n        in(x: -436, y: -156, name: \"mainList\") property(List) main_list_7c8a2d\n\n        out(x: 1115, y: -140, name: \"output\") property(Bool) output_9b6b4f\n\n        instance(x: -186, y: -145, name: \"find sub list in main list\") find_1e3c7c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -0, y: 10, name: \"current\") property(List) current_9a2d8f\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> find_1e3c7c.predicate\n        main_list_7c8a2d -> find_1e3c7c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> sub_list_1f0b3e.handler\n        find_1e3c7c.item -> current_9a2d8f\n        sub_list_1f0b3e.output_list -> output_efbc78\n        output_efbc78 -> find_1e3c7c.continue\n        find_1e3c7c.item -> output_9b6b4f\n    }\n\n    \n\n    instance(x: -64, y: 30) is_sublist_8d5a0c root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -467, y: 30, name: \"subList\") property(List) sub_list_1e3f9d\n        in(x: -465, y: -235, name: \"mainList\") property(List) main_list_7c6b0a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7c6b0a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7c6b0a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_1e3f9d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_3a0b5f\n        in(x: -485, y: -120, name: \"list2\") property(List) list2_9c8e7d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_3a0b5f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_9c8e7d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_3a9f6b\n        in(x: -485, y: -120, name: \"list2\") property(List) list2_7e4c5d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_3a9f6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_7e4c5d -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e6b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f9c4d\n\n        instance(x: 0, y: 0) find_2f5f6f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8e1a7c\n            in(x: -110, y: 85, name: \"index\") property(Number) index_3d5f6b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9c2c4f\n\n            instance(x: 89, y: 29) sub_1a8e0f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7d5e6f root.Std_k98ojb.Logic.NotEqual {}\n            1 -> sub_1a8e0f.second\n            index_3d5f6b -> sub_1a8e0f.first\n            elem_8e1a7c -> notequal_7d5e6f.right\n            sub_1a8e0f.result -> notequal_7d5e6f.left\n            notequal_7d5e6f.result -> bool_9c2c4f\n        } -> find_2f5f6f.predicate\n        list_3e6b8a -> find_2f5f6f.items\n        find_2f5f6f.index + 1 -> missing_number_7f9c4d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1f0c8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_9f6d1a\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_7c3e2b\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -116, y: -33, name: \"index\") property(Number) index_7c3e2b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: -1, y: -64) add_7c3e2b root.Std_k98ojb.Math.Add {}\n            index_7c3e2b -> add_7c3e2b.first\n            1 -> add_7c3e2b.second\n            add_7c3e2b.result -> modulo_1088d5.value\n            elem_9f6850 -> modulo_1088d5.divisor\n            0 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_missing_node.predicate\n        list_9f6d1a -> find_missing_node.items\n        find_missing_node.index -> missing_7c3e2b\n    }\n\n    \n\n    instance(x: -55, y: 127) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -290, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 68, name: \"index\") property(Number) index_3bc2ae\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_1088d5 root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            sub_1088d5.result -> notequal_807ffd.left\n            index_3bc2ae -> sub_1088d5.first\n            elem_9f6850 -> sub_1088d5.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_af09a7\n\n            instance(x: 89, y: 29) list_getat_1088d5 root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            elem_9f6850 -> list_getat_1088d5.item\n            index_af09a7 -> list_getat_1088d5.index\n            list_getat_1088d5.result -> notequal_807ffd.left\n            null -> notequal_807ffd.right\n            notequal_807ffd.result -> elem_9f6850\n        } -> find_6d05b0.handler\n        find_6d05b0.item -> missing_number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_1d8b9f\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_3c2a7e\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 29, name: \"index\") property(Number) index_8c3e2a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4f1d6b root.Std_k98ojb.Math.Add {}\n            index_8c3e2a -> add_4f1d6b.first\n            1 -> add_4f1d6b.second\n            add_4f1d6b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_missing_node.predicate\n        list_1d8b9f -> find_missing_node.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4f1d6b root.Std_k98ojb.Math.Add {}\n            index_8c3e2a -> add_4f1d6b.first\n            1 -> add_4f1d6b.second\n            add_4f1d6b.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_missing_node.index_handler\n        find_missing_node.item -> missing_3c2a7e\n    }\n\n    \n\n    instance(x: -55, y: 127) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f7759\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_f9110a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 65, name: \"index\") property(Number) index_3bc2ae\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_3bc2ae -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            1 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f7759 -> find_6d05b0.items\n        instance(x: 0, y: 0) map_1c2e3a root.Std_k98ojb.Iteration.Map {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"mapped_value\") property(Number) mapped_value_af09a7\n            index_3bc2ae -> mapped_value_af09a7\n        } -> map_1c2e3a.handler\n        list_9f7759 -> map_1c2e3a.items\n        find_6d05b0.index -> missing_number_f9110a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -281, y: 0, name: \"list\") property(List) list_9d8f5a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 29, name: \"index\") property(Number) index_1e7c2a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4b8f9d root.Std_k98ojb.Math.Add {}\n            index_1e7c2a -> add_4b8f9d.first\n            1 -> add_4b8f9d.second\n            add_4b8f9d.result -> elem_9f6850\n\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> notequal_807ffd.right\n            elem_9f6850 -> notequal_807ffd.left\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9d8f5a -> find_6d05b0.items\n        find_6d05b0.index -> index_1e7c2a\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_8f3b9a\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_7e5c1d\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -110, y: 29, name: \"index\") property(Number) index_8c3e2a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) add_4b1d0f root.Std_k98ojb.Math.Add {}\n            index_8c3e2a -> add_4b1d0f.first\n            1 -> add_4b1d0f.second\n            add_4b1d0f.result -> notequal_807ffd.left\n            elem_9f6850 -> notequal_807ffd.right\n\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_missing_node.predicate\n        list_8f3b9a -> find_missing_node.items\n        find_missing_node.index -> index_8c3e2a\n        0 -> find_missing_node.start_index\n        find_missing_node.item -> missing_7e5c1d\n    }\n\n    \n\n    instance(x: -55, y: 127) find_missing_node root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -279, y: 0, name: \"list\") property(List) list_1f9b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -112, y: 116, name: \"index\") property(Number) index_1e8c3a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e8c3a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1f9b8a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e8c3a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9a6b1e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f2c8d\n\n        instance(x: 0, y: 0) find_4b5c3c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 62, name: \"index\") property(Number) index_7c8a1e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_4b3d5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_4b3d5f.result -> notequal_807ffd.left\n            index_7c8a1e -> sub_4b3d5f.first\n            elem_9f6850 -> sub_4b3d5f.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4b5c3c.predicate\n        list_9a6b1e -> find_4b5c3c.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_4b3d5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_4b3d5f.result -> notequal_807ffd.left\n            index_7c8a1e -> sub_4b3d5f.first\n            elem_9f6850 -> sub_4b3d5f.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_4b5c3c.index_predicate\n        find_4b5c3c.item -> missing_number_7f2c8d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_6e9c0f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1d8b3a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7e9f5c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -111, y: 63, name: \"index\") property(Number) index_8c1d3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2f0b4e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2f0b4e.result -> notequal_807ffd.left\n            index_8c1d3e -> sub_2f0b4e.first\n            elem_9f6850 -> sub_2f0b4e.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1d8b3a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"index\") property(Number) index_8c1d3e\n\n            instance(x: 89, y: 29) list_length_7b6a4f root.Std_k98ojb.List.Length {}\n            instance(x: 310, y: 35) minus_2c0d5f root.Std_k98ojb.Math.Sub {}\n            instance(x: 410, y: 44) plus_1e9b3e root.Std_k98ojb.Math.Add {}\n            list_length_7b6a4f.length -> minus_2c0d5f.first\n            1 -> minus_2c0d5f.second\n            minus_2c0d5f.result -> plus_1e9b3e.first\n            elem_9f6850 -> plus_1e9b3e.second\n            plus_1e9b3e.result -> index_8c1d3e\n        } -> find_6d05b0.index_handler\n        find_6d05b0.item -> missing_number_7e9f5c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_3e9f6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a4d8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f7c9ea root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e9f6c.input\n        \" \" -> replace_3e9f6c.search\n        \":\" -> replace_3e9f6c.replace\n        replace_3e9f6c.output -> replace_5a4d8f.input\n        \",\" -> replace_5a4d8f.search\n        \":\" -> replace_5a4d8f.replace\n        replace_5a4d8f.output -> replace_f7c9ea.input\n        \".\" -> replace_f7c9ea.search\n        \":\" -> replace_f7c9ea.replace\n        replace_f7c9ea.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_5a3c7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 0, y: 9) replace_2d4e8f root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_2d4e8f.input\n        \" \" -> replace_2d4e8f.search\n        \":\" -> replace_2d4e8f.replace\n        replace_2d4e8f.output -> replace_5a3c7f.input\n        \",\" -> replace_5a3c7f.search\n        \":\" -> replace_5a3c7f.replace\n        \".\" -> replace_5a3c7f.search\n        \":\" -> replace_5a3c7f.replace\n        replace_5a3c7f.output -> output_1\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_7f9c8e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5d4a3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6c8c1c root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_7f9c8e.input\n        \" \" -> replace_7f9c8e.search\n        \":\" -> replace_7f9c8e.replace\n        replace_7f9c8e.output -> replace_5d4a3c.input\n        \",\" -> replace_5d4a3c.search\n        \":\" -> replace_5d4a3c.replace\n        replace_5d4a3c.output -> replace_6c8c1c.input\n        \".\" -> replace_6c8c1c.search\n        \":\" -> replace_6c8c1c.replace\n        replace_6c8c1c.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f3c9e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a8d6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5e6f1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7f3c9e.input\n        \" \" -> replace_7f3c9e.search\n        \":\" -> replace_7f3c9e.replace\n        replace_7f3c9e.output -> replace_4a8d6f.input\n        \",\" -> replace_4a8d6f.search\n        \":\" -> replace_4a8d6f.replace\n        replace_4a8d6f.output -> replace_5e6f1c.input\n        \".\" -> replace_5e6f1c.search\n        \":\" -> replace_5e6f1c.replace\n        replace_5e6f1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_1a8d5f\n\n        out(x: 505, y: -2, name: \"output\") property(String) output_3e6c7b\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_0c4f9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_1a8d5f root.Std_k98ojb.Strings.Replace {}\n        input_1a8d5f -> replace_1a8d5f.input\n        \" \" -> replace_1a8d5f.search\n        \":\" -> replace_1a8d5f.replace\n        replace_1a8d5f.output -> replace_0c4f9f.input\n        instance(x: 221, y: -48) replace_2b3e6f root.Std_k98ojb.Strings.Replace {}\n        replace_0c4f9f.output -> replace_2b3e6f.input\n        \",\" -> replace_2b3e6f.search\n        \":\" -> replace_2b3e6f.replace\n        instance(x: 221, y: -48) replace_3a8d5f root.Std_k98ojb.Strings.Replace {}\n        replace_2b3e6f.output -> replace_3a8d5f.input\n        \".\" -> replace_3a8d5f.search\n        \":\" -> replace_3a8d5f.replace\n        replace_3a8d5f.output -> output_3e6c7b\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_aad0c2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -122, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 505, y: -1, name: \"output\") property(String) output_0\n\n        instance(x: 221, y: -48, name: \"replace_spaces_commas_dots\") replace_06d2e5 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 9) replace_4aeea6 root.Std_k98ojb.Strings.Replace {}\n        instance(x: 221, y: 0) replace_1f7c8e root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_spaces_commas_dots.input\n        \" \" -> replace_06d2e5.search\n        \":\" -> replace_06d2e5.replace\n        replace_06d2e5.output -> replace_4aeea6.input\n        \",\" -> replace_4aeea6.search\n        \":\" -> replace_4aeea6.replace\n        replace_4aeea6.output -> replace_1f7c8e.input\n        \".\" -> replace_1f7c8e.search\n        \":\" -> replace_1f7c8e.replace\n        replace_1f7c8e.output -> output_0\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -149, y: 0, name: \"input\") property(String) input_2a1b8f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5e9d7c\n\n        instance(x: 0, y: 1) replace_3b4d6f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a9c2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_c7e5a1 root.Std_k98ojb.Strings.Replace {}\n        input_2a1b8f -> replace_3b4d6f.input\n        \" \" -> replace_3b4d6f.search\n        \":\" -> replace_3b4d6f.replace\n        replace_3b4d6f.output -> replace_8a9c2d.input\n        \",\" -> replace_8a9c2d.search\n        \":\" -> replace_8a9c2d.replace\n        replace_8a9c2d.output -> replace_c7e5a1.input\n        \".\" -> replace_c7e5a1.search\n        \":\" -> replace_c7e5a1.replace\n        replace_c7e5a1.output -> output_5e9d7c\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_4b8f2f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 0, name: \"input\") property(String) input_1a3f9e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_4c7b5d\n\n        instance(x: 0, y: 1) replace_6e8c5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9f3a8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_7d4f1f root.Std_k98ojb.Strings.Replace {}\n        input_1a3f9e -> replace_6e8c5e.input\n        \" \" -> replace_6e8c5e.search\n        \":\" -> replace_6e8c5e.replace\n        replace_6e8c5e.output -> replace_9f3a8f.input\n        \",\" -> replace_9f3a8f.search\n        \":\" -> replace_9f3a8f.replace\n        replace_9f3a8f.output -> replace_7d4f1f.input\n        \".\" -> replace_7d4f1f.search\n        \":\" -> replace_7d4f1f.replace\n        replace_7d4f1f.output -> output_4c7b5d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -172, y: 0, name: \"input\") property(String) input_2f8d6a\n\n        out(x: 505, y: -50, name: \"output\") property(String) output_1c3e9b\n\n        instance(x: 221, y: -48, name: \"replace_chars\") replace_0a7f5f root.Std_k98ojb.Strings.Replace {}\n        input_2f8d6a -> replace_0a7f5f.input\n        \" ,.\" -> replace_0a7f5f.search\n        \":\" -> replace_0a7f5f.replace\n        replace_0a7f5f.output -> output_1c3e9b\n    }\n\n    \n\n    instance(x: -138, y: -63) replace_chars_aad0c2 root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7f3c6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_9d4a5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8b4b1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7f3c6e.input\n        \" \" -> replace_7f3c6e.search\n        \":\" -> replace_7f3c6e.replace\n        replace_7f3c6e.output -> replace_9d4a5c.input\n        \",\" -> replace_9d4a5c.search\n        \":\" -> replace_9d4a5c.replace\n        replace_9d4a5c.output -> replace_8b4b1c.input\n        \".\" -> replace_8b4b1c.search\n        \":\" -> replace_8b4b1c.replace\n        replace_8b4b1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 6, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1050, y: 16, name: \"output\") property(Bool) output_7c2a5b\n\n        instance(x: -164, y: 10) characters_3e6b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 338, y: 17) length_9f0d8f root.Std_k98ojb.List.Length {}\n        instance(x: 547, y: 16) lessthanorequal_ea7d1e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 760, y: -3) for_6c2b9c root.Std_k98ojb.Std.For {}\n        instance(x: 1030, y: 16) equal_4f5c8a root.Std_k98ojb.Logic.Equal {}\n        characters_3e6b4c.characters -> length_9f0d8f.list\n        input_8f1e9d -> characters_3e6b4c.input\n        func() {\n            in(x: -24, y: 46, name: \"current\") property(String) current_5a2a7\n\n            out(x: 562, y: 68, name: \"out\") property(Bool) out_e8f3d6\n\n            instance(x: 226, y: 65) equal_1b4e9c root.Std_k98ojb.Logic.Equal {}\n            current_5a2a7 -> equal_1b4e9c.left\n            input_8f1e9d -> equal_1b4e9c.right\n            equal_1b4e9c.result -> out_e8f3d6\n        } -> for_6c2b9c.handler\n        length_9f0d8f.length -> lessthanorequal_ea7d1e.left\n        1 -> lessthanorequal_ea7d1e.right\n        lessthanorequal_ea7d1e.result -> for_6c2b9c.items\n        characters_3e6b4c.characters -> for_6c2b9c.items\n        func() {\n            in(x: -24, y: 46, name: \"current\") property(String) current_5a2a7\n\n            out(x: 562, y: 68, name: \"out\") property(Bool) out_e8f3d6\n\n            instance(x: 226, y: 65) equal_1b4e9c root.Std_k98ojb.Logic.Equal {}\n            current_5a2a7 -> equal_1b4e9c.left\n            input_8f1e9d -> equal_1b4e9c.right\n            equal_1b4e9c.result -> out_e8f3d6\n        } -> for_6c2b9c.handler\n        for_6c2b9c.onItem -> equal_4f5c8a.execute\n        0 -> equal_4f5c8a.left\n        for_6c2b9c.value -> equal_4f5c8a.right\n        equal_4f5c8a.result -> output_7c2a5b\n    }\n\n    \n\n    instance(x: -40, y: 79) is_same_e0d3e1 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -279, y: 5, name: \"input\") property(String) input_1a3e9f\n\n        out(x: 1018, y: 20, name: \"output\") property(Bool) output_6c0b7d\n\n        instance(x: -121, y: 4) characters_2e5c8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 256, y: 23) length_9f3a8f root.Std_k98ojb.List.Length {}\n        instance(x: 465, y: 20) getat_1d0f7c root.Std_k98ojb.List.GetAt {}\n        instance(x: 684, y: 21) equal_2e5c4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 890, y: -3) lessthanorequal_8a6d9f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1010, y: 20) ifexpression_1e7c2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 375, y: 62, name: \"getter_8f3a6d\") getter_8f3a6d = previous\n        setter(x: 710, y: -70, name: \"setter_1e7c2b\") setter_1e7c2b = previous\n        instance(x: 328, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_1e7c2b\") setter_38e107 = previous\n        ifexpression_1e7c2c.else -> output_6c0b7d\n        ifexpression_1e7c2c.value -> output_6c0b7d\n        ifexpression_1e7c2c.then -> setter_1e7c2b.execute\n        characters_2e5c8c.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_1e7c2c.gen_2\n        for_d26972.index -> ifexpression_1e7c2c.gen_0\n        getter_8f3a6d.value -> ifexpression_1e7c2c.gen_1\n        for_d26972.onItem -> ifexpression_1e7c2c.execute\n        for_d26972.done -> output_6c0b7d\n        for_d26972.item -> setter_1e7c2b.new_value\n        length_9f3a8f.length -> lessthanorequal_8a6d9f.right\n        0 -> lessthanorequal_8a6d9f.left\n        lessthanorequal_8a6d9f.result -> for_d26972.reset\n        characters_2e5c8c.characters -> length_9f3a8f.list\n        list_9f3a8f_length -> getat_1d0f7c.index\n        characters_2e5c8c.characters -> getat_1d0f7c.list\n        getat_1d0f7c.itemAtIndex -> setter_38e107.new_value\n        equal_2e5c4f.result -> lessthanorequal_8a6d9f.left\n        getter_8f3a6d.value -> equal_2e5c4f.right\n        for_d26972.item -> equal_2e5c4f.left\n        setter_38e107.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 49, y: -177) is_same_f3a9d8 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -280, y: 5, name: \"string\") property(String) string_1a8f0e\n\n        out(x: 1094, y: 6, name: \"output\") property(Bool) output_7b3d9c\n\n        instance(x: -84, y: 10) characters_2a5c4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 250, y: 11) length_1e0f6f root.Std_k98ojb.List.Length {}\n        instance(x: 466, y: 12) getat_7d3f8a root.Std_k98ojb.List.GetAt {}\n        instance(x: 691, y: 13) equal_2c9d5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 906, y: 14) reduce_1e4f6c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1120, y: 15) not_7a8f3c root.Std_k98ojb.Logic.Not {}\n        characters_2a5c4c.characters -> length_1e0f6f.list\n        string_1a8f0e -> characters_2a5c4c.input\n        length_1e0f6f.length -> getat_7d3f8a.index\n        1 -> getat_7d3f8a.index\n        characters_2a5c4c.characters -> getat_7d3f8a.list\n        string_1a8f0e -> reduce_1e4f6c.items\n        func() {\n            in(x: -27, y: 26, name: \"current\") property(String) current_9b2b5e\n            in(x: -20, y: 80, name: \"_index\") property(Number) _index_8d7a4f\n\n            out(x: 706, y: 56, name: \"output\") property(String) output_1c6b3c\n\n            instance(x: 226, y: 63) equal_2e9d5f root.Std_k98ojb.Logic.Equal {}\n            current_9b2b5e -> equal_2e9d5f.left\n            getat_7d3f8a.itemAtIndex -> equal_2e9d5f.right\n            equal_2e9d5f.result -> output_1c6b3c\n        } -> reduce_1e4f6c.handler\n        reduce_1e4f6c.initial_value -> getat_7d3f8a.itemAtIndex\n        not_7a8f3c.result -> output_7b3d9c\n        equal_2c9d5f.result -> not_7a8f3c.input\n        reduce_1e4f6c.output_value -> equal_2c9d5f.left\n        getat_7d3f8a.itemAtIndex -> equal_2c9d5f.right\n    }\n\n    \n\n    instance(x: 15, y: -19) check_same_0b7f8e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 20, name: \"input\") property(String) input_9a3f5e\n\n        out(x: 1066, y: 22, name: \"output\") property(Bool) output_1b2c4d\n\n        instance(x: -92, y: 19) characters_7e0e8f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 20) length_6a5f9f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 21) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 554, y: -1) lessthanorequal_3e8d0c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 772, y: 20) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 1014, y: -1) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 334, y: 47, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -125, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -110) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -211, name: \"setter_9d4f1c\") setter_38e107 = previous\n        ifexpression_875761.else -> output_1b2c4d\n        ifexpression_875761.value -> output_1b2c4d\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        characters_7e0e8f.characters -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> output_1b2c4d\n        for_d26972.item -> setter_9d4f1c.new_value\n        characters_7e0e8f.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        length_6a5f9f.length -> lessthanorequal_3e8d0c.left\n        1 -> lessthanorequal_3e8d0c.right\n        lessthanorequal_3e8d0c.result -> for_d26972.reset\n        setter_38e107.continue -> for_d26972.next\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 0, name: \"input\") property(String) input_1f8e6d\n\n        out(x: 1093, y: 5, name: \"output\") property(Bool) output_eb9a4c\n        out(x: 1187, y: 120, name: \"continue\") trigger() continue_2f0e6c\n\n        instance(x: -119, y: 10) characters_3d8e1f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 339, y: 11) lessthanorequal_5a9c7c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 577, y: -6) for_4d3e0f root.Std_k98ojb.Std.For {}\n        instance(x: 1008, y: 12) equal_2a1f5c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1017, y: -91) if_9e6f2c root.Std_k98ojb.Std.If {}\n        instance(x: 1044, y: -176) and_8d3f0f root.Std_k98ojb.Logic.And {}\n        characters_3d8e1f.characters -> for_4d3e0f.items\n        func() {\n            in(x: 378, y: 19, name: \"element\") property(String) element_7c2a9f\n\n            out(x: 785, y: -5, name: \"out\") property(Bool) out_eb8d6e\n\n            instance(x: 556, y: 16) equal_3b4b0f root.Std_k98ojb.Logic.Equal {}\n            element_7c2a9f -> equal_3b4b0f.left\n            getter(x: -1, y: 40, name: \"getter_5d8e6f\") getter_5d8e6f = first_element\n            getter_5d8e6f.value -> equal_3b4b0f.right\n            equal_3b4b0f.result -> out_eb8d6e\n        } -> for_4d3e0f.handler\n        for_4d3e0f.onItem -> if_9e6f2c.execute\n        1 -> lessthanorequal_5a9c7c.left\n        for_4d3e0f.index -> lessthanorequal_5a9c7c.right\n        lessthanorequal_5a9c7c.result -> if_9e6f2c.predicate\n        if_9e6f2c.else -> continue_2f0e6c\n        for_4d3e0f.item -> equal_2a1f5c.left\n        getter(x: -1, y: 40, name: \"getter_5d8e6f\") getter_9b7e6f = first_element\n        getter_9b7e6f.value -> equal_2a1f5c.right\n        equal_2a1f5c.result -> and_8d3f0f.left\n        if_9e6f2c.value -> and_8d3f0f.right\n        for_4d3e0f.done -> continue_2f0e6c\n        and_8d3f0f.result -> output_eb9a4c\n        input_1f8e6d -> characters_3d8e1f.input\n        func() {\n            in(x: -28, y: 46, name: \"element\") property(String) element_7c2a9f\n\n            out(x: 382, y: 19, name: \"out\") property(String) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_7c2a9f -> mul_2f9d09.first\n            element_7c2a9f -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_4d3e0f.handler\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fc79d5 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -275, y: 23, name: \"input\") property(String) input_1f8a0e\n\n        out(x: 1055, y: 21, name: \"output\") property(Bool) output_9b7d2c\n        out(x: 1186, y: -3, name: \"continue\") trigger() continue_4b7b8e\n\n        instance(x: 32, y: 24, name: \"characters\") characters_1f5a0c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 352, y: 26) lessthanorequal_6d9f2f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 571, y: -3) for_7e5a4c root.Std_k98ojb.Std.For {}\n        instance(x: 1011, y: 26) equal_8c0a6d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1039, y: -2) if_eb3f0f root.Std_k98ojb.Std.If {}\n        instance(x: 1267, y: -4) and_1e5f3f root.Std_k98ojb.Logic.And {}\n        input_1f8a0e -> characters_1f5a0c.input\n        func() {\n            in(x: -20, y: 43, name: \"current\") property(String) current_6d7f4f\n\n            out(x: 682, y: 46, name: \"output\") property(Bool) output_9e1b2a\n\n            instance(x: 226, y: 50) equal_8c0a6d root.Std_k98ojb.Logic.Equal {}\n            current_6d7f4f -> equal_8c0a6d.left\n            characters_1f5a0c.characters[0] -> equal_8c0a6d.right\n            equal_8c0a6d.result -> output_9e1b2a\n        } -> for_7e5a4c.handler\n        characters_1f5a0c.characters -> for_7e5a4c.items\n        lessthanorequal_6d9f2f.left -> for_7e5a4c.index\n        1 -> lessthanorequal_6d9f2f.right\n        lessthanorequal_6d9f2f.result -> if_eb3f0f.predicate\n        for_7e5a4c.onItem -> if_eb3f0f.execute\n        if_eb3f0f.else -> continue_4b7b8e\n        equal_8c0a6d.result -> and_1e5f3f.left\n        for_7e5a4c.item -> equal_8c0a6d.left\n        characters_1f5a0c.characters[for_7e5a4c.index] -> equal_8c0a6d.right\n        if_eb3f0f.value -> and_1e5f3f.right\n        for_7e5a4c.done -> continue_4b7b8e\n        and_1e5f3f.result -> output_9b7d2c\n    }\n\n    \n\n    instance(x: -36, y: 99) is_same_0e6b1c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -297, y: 0, name: \"input\") property(String) input_8e9a3f\n\n        out(x: 1095, y: 1, name: \"output\") property(Bool) output_6c4b2d\n\n        instance(x: -100, y: 16, name: \"filter same characters\") filter_7b0e4c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 448, y: 1) length_8f3a9f root.Std_k98ojb.List.Length {}\n        instance(x: 667, y: -2) equal_f6d5ef root.Std_k98ojb.Logic.Equal {}\n        func() {\n            in(x: -25, y: 38, name: \"current\") property(String) current_1e8c7f\n\n            out(x: 438, y: 20, name: \"output\") property(Bool) output_9a0d4b\n\n            instance(x: 152, y: 33) equal_5f3c6 root.Std_k98ojb.Logic.Equal {}\n            input_8e9a3f -> equal_5f3c6.left\n            current_1e8c7f -> equal_5f3c6.right\n            equal_5f3c6.result -> output_9a0d4b\n        } -> filter_7b0e4c.handler\n        input_8e9a3f -> strings_characters_2f3d1.characters\n        strings_characters_2f3d1.characters -> filter_7b0e4c.items\n        length_8f3a9f.length -> equal_f6d5ef.left\n        filter_7b0e4c.output_list -> length_8f3a9f.list\n        1 -> equal_f6d5ef.right\n        equal_f6d5ef.result -> output_6c4b2d\n    }\n\n    \n\n    instance(x: -60, y: 124) is_same_7e0d9c root.main.is_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -296, y: 30, name: \"string\") property(String) string_1f8e5d\n\n        out(x: 557, y: 49, name: \"output\") property(Bool) output_9a3b0c\n\n        instance(x: -92, y: 40) characters_4b2e7c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 39) length_6f1d8f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 38) equal_f9a5cf root.Std_k98ojb.Logic.Equal {}\n        instance(x: 570, y: -3) lessthanorequal_e2e7c4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 773, y: 45) getat_8f1a5d root.Std_k98ojb.List.GetAt {}\n        instance(x: 1010, y: -3) ifexpression_b6e2cc root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: 492, y: 62, name: \"getter_9a4c8f\") getter_9a4c8f = previous\n        setter(x: 837, y: -238, name: \"setter_1e5d3b\") setter_1e5d3b = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_1e5d3b\") setter_38e107 = previous\n        ifexpression_b6e2cc.else -> output_9a3b0c\n        ifexpression_b6e2cc.value -> output_9a3b0c\n        ifexpression_b6e2cc.then -> setter_1e5d3b.execute\n        characters_4b2e7c.characters -> for_d26972.items\n        for_d26972.item -> getat_8f1a5d.list\n        0 -> getat_8f1a5d.index\n        getat_8f1a5d.itemAtIndex -> ifexpression_b6e2cc.gen_2\n        for_d26972.index -> ifexpression_b6e2cc.gen_0\n        getter_9a4c8f.value -> ifexpression_b6e2cc.gen_1\n        for_d26972.onItem -> ifexpression_b6e2cc.execute\n        for_d26972.done -> output_9a3b0c\n        length_6f1d8f.length -> lessthanorequal_e2e7c4.left\n        1 -> lessthanorequal_e2e7c4.right\n        lessthanorequal_e2e7c4.result -> ifexpression_b6e2cc.execute\n        for_d26972.item -> setter_1e5d3b.new_value\n        string_1f8e5d -> characters_4b2e7c.input\n        length_6f1d8f.list -> characters_4b2e7c.input\n        ifexpression_b6e2cc.value -> output_9a3b0c\n        setter_38e107.new_value -> getat_8f1a5d.list\n        setter_38e107.continue -> for_d26972.reset\n        setter_1e5d3b.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) check_same_f6c9c4 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -280, y: 22, name: \"input\") property(String) input_8f1a5e\n\n        out(x: 1110, y: 24, name: \"output\") property(Bool) output_6b7c3d\n\n        instance(x: -93, y: 23) characters_9e4e2f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 206, y: 25) length_1a5c8c root.Std_k98ojb.List.Length {}\n        instance(x: 424, y: 24) getat_3d6f0c root.Std_k98ojb.List.GetAt {}\n        instance(x: 662, y: 23) lessthanorequal_9e4a1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 882, y: 24) for_8d5f2f root.Std_k98ojb.Std.For {}\n        instance(x: 1060, y: -6) equal_f3f7c9 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1294, y: 23) and_1e5a67 root.Std_k98ojb.Logic.And {}\n        characters_9e4e2f.characters -> length_1a5c8c.list\n        input_8f1a5e -> characters_9e4e2f.input\n        length_1a5c8c.length -> lessthanorequal_9e4a1c.right\n        0 -> lessthanorequal_9e4a1c.left\n        lessthanorequal_9e4a1c.result -> for_8d5f2f.reset\n        characters_9e4e2f.characters -> getat_3d6f0c.list\n        0 -> getat_3d6f0c.index\n        getat_3d6f0c.itemAtIndex -> equal_f3f7c9.left\n        for_8d5f2f.item -> equal_f3f7c9.right\n        equal_f3f7c9.result -> and_1e5a67.left\n        1 -> and_1e5a67.right\n        for_8d5f2f.onItem -> equal_f3f7c9.execute\n        and_1e5a67.result -> output_6b7c3d\n        for_8d5f2f.index -> getat_3d6f0c.index\n        for_8d5f2f.done -> output_6b7c3d\n        for_8d5f2f.items -> characters_9e4e2f.characters\n    }\n\n    \n\n    instance(x: 10, y: -177) is_same_fcf1a0 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 20, name: \"input\") property(String) input_9a3f2e\n\n        out(x: 557, y: 59, name: \"output\") property(Bool) output_7b0c1d\n\n        instance(x: -96, y: 21) characters_5e8b6c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 60) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 59) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -1, y: -96) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        instance(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous == current\"\n        }\n        getter(x: -0, y: -121, name: \"getter_b280eb\") getter_38e107 = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n\n        input_9a3f2e -> characters_5e8b6c.input\n        characters_5e8b6c.characters -> for_d26972.items\n        list_0b075e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> getter_38e107.value\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        characters_5e8b6c.characters -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_7b0c1d\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_ac7dfb root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a8e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9c7d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9c7d4f.items\n        count_1f2a8e.count -> filter_9c7d4f.execute\n        filter_9c7d4f.output_list -> count_1f2a8e.value\n        count_1f2a8e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a5f2c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -50) filter_3d7de6 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3d7de6.list\n        count_1a5f2c.count -> result_ai\n        filter_3d7de6.result -> count_1a5f2c.trigger\n    }\n\n    \n    instance(x: 0, y: -50) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -38, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a5c6e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -38) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1a5c6e.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1a5c6e.value\n        count_1a5c6e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -38) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a6c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1f2a6c.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1f2a6c.value\n        count_1f2a6c.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2c5a root.Std_k98ojb.Count {}\n        instance(x: 0, y: -40) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1f2c5a.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1f2c5a.value\n        instance(x: 0, y: -80) math_expr_node root.Std_k98ojb.Math.Expression {\n            expression: \"count\"\n        }\n        count_1f2c5a.count -> math_expr_node.gen_0\n        math_expr_node.result -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_7d9e4b root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -25, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 15, y: 0) count_1a5c6e root.Std_k98ojb.Std.Count {}\n        instance(x: 15, y: -25) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_1a5c6e.count\n        count_1a5c6e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -25) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -50, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2d8e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -50) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1a2d8e.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1a2d8e.value\n        count_1a2d8e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -50) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -32, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a5c8e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -32) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1a5c8e.count -> filter_7b3b7b.on_item\n        filter_7b3b7b.result -> count_1a5c8e.value\n        count_1a5c8e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -32) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f8a6c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -20) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it.IsNumeric()\"\n        }\n        characters_node.characters -> filter_7b3b7b.list\n        count_1f8a6c.count -> result_ai\n        filter_7b3b7b.result -> count_1f8a6c.trigger\n    }\n\n    \n    instance(x: 0, y: -20) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -20, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a4e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -20) filter_3c7d9a root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3c7d9a.items\n        count_1f2a4e.count -> filter_3c7d9a.execute\n        filter_3c7d9a.output_list -> count_1f2a4e.list\n        count_1f2a4e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -20) count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e5a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e5a8c.first\n        data_cde0dc -> pow_9e5a8c.second\n        pow_9e5a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c5e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c5e.x\n        data_cde0dc -> pow_9a8c5e.y\n        pow_9a8c5e.output -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a9c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a9c0e.first\n        data_cde0dc -> pow_5a9c0e.second\n        pow_5a9c0e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3e8a9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3e8a9c.first\n        data_cde0dc -> pow_3e8a9c.second\n        pow_3e8a9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5a3e9c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5a3e9c.first\n        data_cde0dc -> pow_5a3e9c.second\n        pow_5a3e9c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e9c0a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e9c0a.x\n        data_cde0dc -> pow_5e9c0a.y\n        pow_5e9c0a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a0c8e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a0c8e.first\n        data_cde0dc -> pow_9a0c8e.second\n        pow_9a0c8e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a3c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a3c0e.x\n        data_cde0dc -> pow_9a3c0e.y\n        pow_9a3c0e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e8a0c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e8a0c.first\n        data_cde0dc -> pow_5e8a0c.second\n        pow_5e8a0c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e3a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e3a8c.first\n        data_cde0dc -> pow_5e3a8c.second\n        pow_5e3a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -103, y: 54, name: \"size\") property(Number) size_3f8b5e\n\n        out(x: 46, y: 158, name: \"surfaceArea\") property(Number) surfaceArea_9a1c4d\n\n        instance(x: 12, y: -11) mul_7e0b6c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f8b5e -> mul_7e0b6c.first\n        data_cde0dc -> mul_7e0b6c.second\n        mul_7e0b6c.result -> surfaceArea_9a1c4d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_5f8c3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -111, y: 47, name: \"size\") property(Number) size_1f8b4e\n\n        out(x: 1046, y: 40, name: \"surface_area\") property(Number) surface_area_9c2d3a\n\n        instance(x: 20, y: -12) mul_7f5f0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_1f8b4e -> mul_7f5f0f.first\n        data_cde0dc -> mul_7f5f0f.second\n        mul_7f5f0f.result -> surface_area_9c2d3a\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_eb4e8c root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 57, name: \"size\") property(Number) size_9f6e8d\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f5b3c4 root.Std_k98ojb.Math.Mul {}\n        size_9f6e8d -> mul_f5b3c4.first\n        6 -> mul_f5b3c4.second\n        instance(x: 92, y: -22) mul_2a1f0c root.Std_k98ojb.Math.Mul {}\n        mul_f5b3c4.result -> mul_2a1f0c.first\n        size_9f6e8d -> mul_2a1f0c.second\n        mul_2a1f0c.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -105, y: 55, name: \"size\") property(Number) size_9f8b1e\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -110) mul_9e1d4a root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -198) mul_f7f0c8 root.Std_k98ojb.Math.Mul {}\n        size_9f8b1e -> mul_584bfd.first\n        size_9f8b1e -> mul_584bfd.second\n        size_9f8b1e -> mul_9e1d4a.first\n        6 -> mul_9e1d4a.second\n        mul_584bfd.result -> mul_f7f0c8.first\n        mul_9e1d4a.result -> mul_f7f0c8.second\n        mul_f7f0c8.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_of_cube_d6e930 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 45, name: \"size\") property(Number) size_1f0b2e\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: 105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_1f0b2e -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: 22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f2330d.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: -45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -108, y: 35, name: \"size\") property(Number) size_8e9f3d\n\n        out(x: 1056, y: 12, name: \"surface_area\") property(Number) surface_area_1a7c2b\n\n        instance(x: 32, y: -14) mul_5e0f4f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 310, y: 62) data_8d9b6f  = 6\n        size_8e9f3d -> mul_5e0f4f.first\n        data_8d9b6f -> mul_5e0f4f.second\n        mul_5e0f4f.result -> surface_area_1a7c2b\n    }\n\n    \n\n    instance(x: 117, y: -26) surface_area_of_cube_3f1e8f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -111, y: 23, name: \"size\") property(Number) size_1a9f5e\n\n        out(x: 1042, y: 12, name: \"surface_area\") property(Number) surface_area_8c7d3b\n\n        instance(x: 30, y: -11) mul_f4b0ea root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 320, y: 63) data_ea9f6e  = 6\n        instance(x: 10, y: 64) expression_7c1d2f root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        mul_f4b0ea.first -> expression_7c1d2f.gen_0\n        data_ea9f6e -> mul_f4b0ea.second\n        expression_7c1d2f.result -> mul_f4b0ea.first\n        size_1a9f5e -> expression_7c1d2f.gen_0\n        mul_f4b0ea.result -> surface_area_8c7d3b\n    }\n\n    \n\n    instance(x: 131, y: -26) surface_area_of_cube_6a4d3f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 27, name: \"size\") property(Number) size_1f8a9e\n\n        out(x: 656, y: -68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f0b3c6 root.Std_k98ojb.Math.Mul {}\n        size_1f8a9e -> mul_f0b3c6.first\n        6 -> mul_f0b3c6.second\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f0b3c6.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 53, name: \"size\") property(Number) size_8a1b3f\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_9e2d6c\n\n        instance(x: 94, y: -105) mul_5e7c0f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_1a8c3f  = 6\n        size_8a1b3f -> mul_5e7c0f.first\n        data_1a8c3f -> mul_5e7c0f.second\n        mul_5e7c0f.result -> surface_area_9e2d6c\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_4b2f5f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 55, name: \"size\") property(Number) size_9a1f0e\n\n        out(x: 656, y: 7, name: \"surface_area\") property(Number) surface_area_8c2d4b\n\n        instance(x: 94, y: -105) mul_6f5f3f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_9a1f0e -> mul_6f5f3f.first\n        data_cde0dc -> mul_6f5f3f.second\n        mul_6f5f3f.result -> surface_area_8c2d4b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_4a3f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3f1e\n        min_list_4d4556.list -> list_4a3f1e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -31, y: 16, name: \"list\") property(List) list_1e3f2a\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b9d6c\n\n        instance(x: 201, y: 62) sub_7f0c8e root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a4f2c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5d3b6c root.Std_k98ojb.List.Min {}\n        list_1e3f2a -> max_1a4f2c.list\n        list_1e3f2a -> min_5d3b6c.list\n        max_1a4f2c.max -> sub_7f0c8e.first\n        min_5d3b6c.min -> sub_7f0c8e.second\n        sub_7f0c8e.result -> output_5b9d6c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_2a4c1c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -37, y: 10, name: \"list\") property(List) list_1e3b9f\n\n        out(x: 441, y: 15, name: \"difference\") property(Number) difference_2a7d0c\n\n        instance(x: 188, y: 15) sub_4f8c5e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: -36) max_3e9c6c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 105) min_7a2d1c root.Std_k98ojb.List.Min {}\n        list_1e3b9f -> max_3e9c6c.list\n        list_1e3b9f -> min_7a2d1c.list\n        max_3e9c6c.max -> sub_4f8c5e.first\n        min_7a2d1c.min -> sub_4f8c5e.second\n        sub_4f8c5e.result -> difference_2a7d0c\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_3b6d9c root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a9f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_6a9f8e\n        min_list_4d4556.list -> list_6a9f8e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1e8f5d\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_b1d7f8\n\n        instance(x: 201, y: 62) sub_cb50ae root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_6e87f2 root.Std_k98ojb.List.Max {}\n        instance(x: -82, y: -375) min_4b8927 root.Std_k98ojb.List.Min {}\n        sub_cb50ae.result -> output_b1d7f8\n        list_1e8f5d -> max_6e87f2.list\n        list_1e8f5d -> min_4b8927.list\n        max_6e87f2.max -> sub_cb50ae.first\n        min_4b8927.min -> sub_cb50ae.second\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_15f9e9 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -36, y: 10, name: \"list\") property(List) list_5e9f8a\n\n        out(x: 445, y: 11, name: \"difference\") property(Number) difference_4c7b3d\n\n        instance(x: 201, y: 62) sub_2b6f1e root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Max list\") max_list_f8a0c9 root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") min_list_7e6d1f root.Std_k98ojb.List.Min {}\n        sub_2b6f1e.result -> difference_4c7b3d\n        max_list_f8a0c9.max -> sub_2b6f1e.first\n        min_list_7e6d1f.min -> sub_2b6f1e.second\n        list_5e9f8a -> max_list_f8a0c9.list\n        list_5e9f8a -> min_list_7e6d1f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_2b4d3f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -32, y: 17, name: \"list\") property(List) list_1a9f3e\n\n        out(x: 512, y: 63, name: \"difference\") property(Number) difference_4b2d7c\n\n        instance(x: 201, y: 62) sub_5b8a6f root.Std_k98ojb.Math.Sub {}\n        instance(x: -318, y: 521, name: \"Max list\") maxlist_3e0c9f root.Std_k98ojb.List.Max {}\n        instance(x: -319, y: 358, name: \"Min list\") minlist_7d8a2f root.Std_k98ojb.List.Min {}\n        sub_5b8a6f.result -> difference_4b2d7c\n        maxlist_3e0c9f.max -> sub_5b8a6f.first\n        minlist_7d8a2f.min -> sub_5b8a6f.second\n        list_1a9f3e -> maxlist_3e0c9f.list\n        list_1a9f3e -> minlist_7d8a2f.list\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_5b4c6f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 16, name: \"list\") property(List) list_1e3b8f\n\n        out(x: 512, y: 63, name: \"difference\") property(Number) difference_5a7c6d\n\n        instance(x: 188, y: 62) sub_2e4b0f root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358) max_3e9c8c root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_1a7d5f root.Std_k98ojb.List.Min {}\n        list_1e3b8f -> max_3e9c8c.list\n        list_1e3b8f -> min_1a7d5f.list\n        max_3e9c8c.max -> sub_2e4b0f.first\n        min_1a7d5f.min -> sub_2e4b0f.second\n        sub_2e4b0f.result -> difference_5a7c6d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_9c3d8f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_4a3b5f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3b5f\n        min_list_4d4556.list -> list_4a3b5f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a9f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5b7d0c\n\n        instance(x: 201, y: 62) sub_1f4b3c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_9e6a2c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_7d8a0f root.Std_k98ojb.List.Min {}\n        list_6a9f8e -> max_9e6a2c.list\n        list_6a9f8e -> min_7d8a0f.list\n        max_9e6a2c.max -> sub_1f4b3c.first\n        min_7d8a0f.min -> sub_1f4b3c.second\n        sub_1f4b3c.result -> output_5b7d0c\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_6e9b2c root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a1d5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9e3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a1d5c.value\n        2 -> modulo_7a1d5c.divisor\n        modulo_7a1d5c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9e3f2f.left\n        0 -> equal_9e3f2f.right\n        equal_9e3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d0f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2a9f3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c6d.value\n        2 -> modulo_7e1c6d.divisor\n        modulo_7e1c6d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2a9f3f.left\n        0 -> equal_2a9f3f.right\n        equal_2a9f3f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e1d6f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 355, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e7c5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_1d4f6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        input_f5c03d -> modulo_0e7c5a.value\n        2 -> modulo_0e7c5a.divisor\n        modulo_0e7c5a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_1d4f6f.right\n        modulo_0e7c5a.result -> equal_1d4f6f.left\n        equal_1d4f6f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        2 -> expression_b720d7.gen_1\n        expression_b720d7.result -> out_f3db9f\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1c2e6d root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1a0d7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2e9f5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1a0d7c.value\n        2 -> modulo_1a0d7c.divisor\n        modulo_1a0d7c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2e9f5f.left\n        0 -> equal_2e9f5f.right\n        equal_2e9f5f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_0\n        input_f5c03d -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d1c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e7d6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2f1a9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0e7d6c.value\n        2 -> modulo_0e7d6c.divisor\n        modulo_0e7d6c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2f1a9f.left\n        0 -> equal_2f1a9f.right\n        equal_2f1a9f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 0, y: -53, name: \"input\") property(Number) input_9e8f2d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0e1d6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n\n        input_9e8f2d -> modulo_0e1d6c.value\n        2 -> modulo_0e1d6c.divisor\n        modulo_0e1d6c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> and_80a119.left\n        modulo_0e1d6c.result -> and_80a119.right\n        and_80a119.result -> if_07b8c7.value\n        if_07b8c7.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e5c1d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2a4f3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e5c1d.value\n        2 -> modulo_7e5c1d.divisor\n        modulo_7e5c1d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2a4f3f.left\n        0 -> equal_2a4f3f.right\n        equal_2a4f3f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e4d2a root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 339, y: -53, name: \"input\") property(Number) input_1e8f9d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e7c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n\n        input_1e8f9d -> modulo_1e7c0a.value\n        2 -> modulo_1e7c0a.divisor\n        modulo_1e7c0a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> and_80a119.left\n        modulo_1e7c0a.result -> and_80a119.right\n        and_80a119.result -> if_07b8c7.value\n        if_07b8c7.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -34, y: 127) is_even_node root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0a1e2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_5f6d9c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0a1e2c.value\n        2 -> modulo_0a1e2c.divisor\n        modulo_0a1e2c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_5f6d9c.left\n        0 -> equal_5f6d9c.right\n        equal_5f6d9c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_f0be66 root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0a6e1c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2d9f4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0a6e1c.value\n        2 -> modulo_0a6ej1c.divisor\n        modulo_0a6e1c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_2d9f4f.right\n        modulo_0a6e1c.result -> equal_2d9f4f.left\n        equal_2d9f4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1d4e2a root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_8c1a9f root.Std_k98ojb.Iteration.Filter {}\n        characters_3e4b7f.output -> filter_8c1a9f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_8c1a9f.handler\n        filter_8c1a9f.output_list -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -274, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a9f4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 531, y: -2) filter_7e8a1c root.Std_k98ojb.Iteration.Filter {}\n        characters_3a9f4c.output -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 531, y: -2) filter_7e8a1c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_7e8a1c.handler\n        find_6d05b0.item -> filter_7e8a1c.items\n        filter_7e8a1c.output_list -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            in(x: -113, y: 74, name: \"index\") property(Number) index_1e3c8a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            index_1e3c8a -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: 0, y: -1) characters_4f2f5f root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> characters_4f2f5f.predicate\n        characters_4f2f5f.output -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -83, y: 52) first_repeated_char_7c9e1a root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"char list\") characters_3c713b root.Std_k98ojb.Strings.Characters {}\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) not_148aeb root.Std_k98ojb.Logic.Not {}\n            characters_3c713b.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> not_148aeb.input\n            not_148aeb.output -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        input_0 -> characters_3c713b.input\n        characters_3c713b.output -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -276, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 600, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_3e9b4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5c8d7a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_6f1f9f root.Std_k98ojb.Iteration.Filter {}\n        characters_3e9b4f.output -> find_5c8d7a.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e4b3c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_2e4b3c.input\n            elem_9f6850 -> contains_2e4b3c.contains\n            contains_2e4b3c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_5c8d7a.predicate\n        instance(x: -113, y: 34) ``elem_9f6850`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e9b4f.output -> ``elem_9f6850``.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_1d8c7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2e9b3f\n\n            instance(x: 89, y: 29) contains_6e4b5c root.Std_k98ojb.Strings.Contains {}\n            current_1d8c7a -> contains_6e4b5c.contains\n            input_0 -> contains_6e4b5c.input\n            contains_6e4b5c.result -> bool_2e9b3f\n        } -> ``elem_9f6850``.predicate\n        find_5c8d7a.item -> filter_6f1f9f.items\n        func() {\n            in(x: -113, y: 34, name: \"current\") property(String) current_1d8c7a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_2e9b3f\n\n            instance(x: 89, y: 29) contains_6e4b5c root.Std_k98ojb.Strings.Contains {}\n            current_1d8c7a -> contains_6e4b5c.contains\n            input_0 -> contains_6e4b5c.input\n            contains_6e4b5c.result -> bool_2e9b3f\n        } -> filter_6f1f9f.handler\n        filter_6f1f9f.output_list -> output_ebef81\n    }\n\n    \n\n    instance(x: 77, y: 52) FirstRepeatedChar_0a8d4c root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -278, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_5e9b8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_3f7d6a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_4b1d0c root.Std_k98ojb.Iteration.Filter {}\n        characters_5e9b8c.output -> find_3f7d6a.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b3e6c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2b3e6c.input\n            elem_9f6850 -> contains_2b3e6c.contains\n            contains_2b3e6c.result -> bool_af09a7\n        } -> filter_4b1d0c.handler\n        characters_5e9b8c.output -> filter_4b1d0c.items\n        find_3f7d6a.predicate = func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b3e6c root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2b3e6c.input\n            elem_9f6850 -> contains_2b3e6c.contains\n            contains_2b3e6c.result -> bool_af09a7\n        }\n        filter_4b1d0c.output_list -> find_3f7d6a.items\n        input_0 -> characters_5e9b8c.input\n        find_3f7d6a.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -290, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4c9f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7a8d5f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_7a8d5f_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e4c9f.output -> find_7a8d5f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e5c6d root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2e5c6d.input\n            elem_9f6850 -> contains_2e5c6d.contains\n            contains_2e5c6d.result -> bool_af09a7\n        } -> find_7a8d5f.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e5c6d root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2e5c6d.input\n            elem_9f6850 -> contains_2e5c6d.contains\n            contains_2e5c6d.result -> bool_af09a7\n        } -> ``find_7a8d5f_1``.predicate\n        find_7a8d5f.item -> ``find_7a8d5f_1``.items\n        ``find_7a8d5f_1``.item -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_1f7e3a root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"char list\") characters_5c6d0f root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_5c6d0f.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_2f3c8a root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_2f3c8a.contains\n            characters_5c6d0f.output -> contains_2f3c8a.input\n            contains_2f3c8a.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_1f7e3a.predicate\n        characters_5c6d0f.output -> find_1f7e3a.items\n        find_1f7e3a.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"char list\") characters_1c9e2f root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_1c9e2f.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 415, y: 86) notequal_148aeb root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> contains_d42dce.input\n            characters_1c9e2f.output -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_148aeb.left\n            0 -> notequal_148aeb.right\n            notequal_148aeb.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        characters_1c9e2f.output -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -454) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -453) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -456) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_5_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "phi4:14b-fp16",
        "largest_context": 8701,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -261, y: -107, name: \"list1\") property(List) list1_2f0b9e\n        in(x: -271, y: 17, name: \"list2\") property(List) list2_8a4c5d\n\n        out(x: 553, y: -94, name: \"output\") property(Bool) output_3a6c7f\n\n        instance(x: 131, y: -105) intersection_1b9e0c root.Std_k98ojb.Sets.Intersection {}\n        list1_2f0b9e -> intersection_1b9e0c.left\n        list2_8a4c5d -> intersection_1b9e0c.right\n        instance(x: 360, y: -95) notempty_7e3b6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b9e0c.intersection -> notempty_7e3b6f.list\n        notempty_7e3b6f.isEmpty -> output_3a6c7f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -316, y: -198, name: \"list1\") property(List) list1_3a0f8e\n        in(x: -324, y: 32, name: \"list2\") property(List) list2_9b7c5d\n\n        out(x: 1176, y: 4, name: \"output\") property(Bool) output_9b1b3a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: 0, y: -200) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        list1_3a0f8e -> intersection_c7c7e6.left\n        list2_9b7c5d -> intersection_c7c7e6.right\n        instance(x: 200, y: -100) notempty_4c7a6d root.Std_k98ojb.List.NotEmpty {}\n        intersection_c7c7e6.intersection -> notempty_4c7a6d.list\n        notempty_4c7a6d.isEmpty -> output_9b1b3a\n    }\n\n    \n\n    instance(x: 10, y: -177) has_common_element_fc79d5 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -284, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1a9d0f root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1a9d0f.list\n        notempty_1a9d0f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -263, y: -83, name: \"list1\") property(List) list1_9e3b0f\n        in(x: -271, y: 27, name: \"list2\") property(List) list2_8a7c6d\n\n        out(x: 553, y: -73, name: \"output\") property(Bool) output_4e1b9c\n\n        instance(x: 146, y: -71) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 360, y: -72) notempty_5a3f0d root.Std_k98ojb.List.NotEmpty {}\n        list1_9e3b0f -> intersection_c7c7e6.left\n        list2_8a7c6d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_5a3f0d.list\n        notempty_5a3f0d.isNotEmpty -> output_4e1b9c\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -277, y: -86, name: \"list1\") property(List) list1_3b2e5f\n        in(x: -285, y: 30, name: \"list2\") property(List) list2_4c8a9d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) greaterthan_1f8d5a root.Std_k98ojb.Math.GreaterThan {}\n        list1_3b2e5f -> intersection_c7c7e6.left\n        list2_4c8a9d -> intersection_c7c7e6.right\n        length_8166b0.list -> greaterthan_1f8d5a.left\n        0 -> greaterthan_1f8d5a.right\n        greaterthan_1f8d5a.result -> output_c7097f\n        intersection_c7c7e6.intersection -> length_8166b0.list\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -179, y: -120, name: \"list1\") property(List) list1_9a2f6e\n        in(x: -181, y: 18, name: \"list2\") property(List) list2_5c8b0d\n\n        out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n        instance(x: -8, y: -53) intersection_4e8c54 root.Std_k98ojb.Sets.Intersection {}\n        list1_9a2f6e -> intersection_4e8c54.left\n        list2_5c8b0d -> intersection_4e8c54.right\n        instance(x: 245, y: -54) notempty_7b3c6f root.Std_k98ojb.List.NotEmpty {}\n        intersection_4e8c54.intersection -> notempty_7b3c6f.list\n        notempty_7b3c6f.isEmpty -> output_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) intersection_cbc0b6 root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -290, y: -86, name: \"list1\") property(List) list1_2a8f3e\n        in(x: -302, y: 30, name: \"list2\") property(List) list2_7c9b4d\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1a9d4f root.Std_k98ojb.List.NotEmpty {}\n        list1_2a8f3e -> intersection_c7c7e6.left\n        list2_7c9b4d -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1a9d4f.list\n        notempty_1a9d4f.isNotEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_3b8f2f root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") intersection {\n        in(x: -284, y: -86, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1a9d8f root.Std_k98ojb.List.NotEmpty {}\n        list1_1f846b -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersect -> notempty_1a9d8f.list\n        notempty_1a9d8f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) intersection_ac7dfb root.main.intersection {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -261, y: -144, name: \"list1\") property(List) list1_9e3b8f\n        in(x: -273, y: 18, name: \"list2\") property(List) list2_5c0d7a\n\n        out(x: 785, y: -122, name: \"output\") property(Bool) output_4f6f9e\n\n        instance(x: 137, y: -131) intersection_1b8a3f root.Std_k98ojb.Sets.Intersection {}\n        list1_9e3b8f -> intersection_1b8a3f.left\n        list2_5c0d7a -> intersection_1b8a3f.right\n        instance(x: 365, y: -121) notempty_4b6d9f root.Std_k98ojb.List.NotEmpty {}\n        intersection_1b8a3f.intersection -> notempty_4b6d9f.list\n        notempty_4b6d9f.isEmpty -> output_4f6f9e\n    }\n\n    \n\n    instance(x: 93, y: -122) has_common_element_cbc0b6 root.main.has_common_element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes two lists and returns true if they have at least one common element.\") has_common_element {\n        in(x: -285, y: -86, name: \"list1\") property(List) list1_3af6ba\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) notempty_1d9a3f root.Std_k98ojb.List.NotEmpty {}\n        list1_3af6ba -> intersection_c7c7e6.left\n        list2_c62075 -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> notempty_1d9a3f.list\n        notempty_1d9a3f.isEmpty -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) has_common_element_ac7dfb root.main.has_common_element {}\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -531, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 6, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -523, y: 2, name: \"list\") property(List) list_4f3a8e\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_4f3a8e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_4f3a8e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_7a4dad root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -533, y: 1, name: \"list\") property(List) list_2f3a4e\n\n        out(x: 1249, y: 5, name: \"output\") property(Bool) output_8c7b6d\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_2f3a4e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_2f3a4e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -515, y: 3, name: \"list\") property(List) list_1a9d6f\n\n        out(x: 1207, y: 5, name: \"output\") property(Bool) output_2c0b8e\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1a9d6f -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1a9d6f -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_7a4dad root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -527, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -525, y: 2, name: \"list\") property(List) list_1f0a9e\n\n        out(x: 1265, y: -3, name: \"output\") property(Bool) output_7c4d6b\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_1f0a9e -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_1f0a9e -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -505, y: 4, name: \"list\") property(List) list_5e8f3a\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous + 1 == current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_5e8f3a -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_5e8f3a -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        continue_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_consecutive_fc79d5 root.main.is_consecutive {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive {\n        in(x: -529, y: 2, name: \"list\") property(List) list_3af6ba\n\n        out(x: 557, y: -97, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        list_3af6ba -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        list_3af6ba -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -285, y: 10, name: \"subList\") property(List) sub_list_2a1f9d\n        in(x: -284, y: 130, name: \"mainList\") property(List) main_list_3b0e8c\n\n        out(x: 557, y: 115, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 114) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 113) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 112) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        sub_list_2a1f9d -> intersection_c7c7e6.left\n        main_list_3b0e8c -> intersection_c7c7e6.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.left\n        sub_list_2a1f9d -> length_8166b0.list\n        length_8166b0.length -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 199) is_sublist_ae3c4a root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"subList\") property(List) sub_list_5f3b8a\n        in(x: -465, y: -235, name: \"mainList\") property(List) main_list_7c1e9d\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_2b0e6c\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_4a3f7c\n\n        instance(x: 752, y: 93) ifexpression_9d5e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_7f6a3c\") getter_7f6a3c = previous\n        setter(x: 679, y: -313, name: \"setter_8b9d4e\") setter_8b9d4e = previous\n        instance(x: 321, y: -20) for_1e2f0 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_8b9d4e\") setter_5c3a7e = previous\n        instance(x: -275, y: -35) getat_6a1b2f root.Std_k98ojb.List.GetAt {}\n        ifexpression_9d5e1.else -> continue_2b0e6c\n        ifexpression_9d5e1.value -> output_4a3f7c\n        ifexpression_9d5e1.then -> setter_8b9d4e.execute\n        main_list_7c1e9d -> for_1e2f0.items\n        for_1e2f0.item -> ifexpression_9d5e1.gen_2\n        for_1e2f0.index -> ifexpression_9d5e1.gen_0\n        getter_7f6a3c.value -> ifexpression_9d5e1.gen_1\n        for_1e2f0.onItem -> ifexpression_9d5e1.execute\n        for_1e2f0.done -> continue_2b0e6c\n        for_1e2f0.item -> setter_8b9d4e.new_value\n        main_list_7c1e9d -> getat_6a1b2f.list\n        0 -> getat_6a1b2f.index\n        getat_6a1b2f.itemAtIndex -> setter_5c3a7e.new_value\n        continue_2b0e6c -> sub_list_5f3b8a.isEmpty.execute\n        sub_list_5f3b8a.isEmpty.output -> ifexpression_9d5e1.gen_3\n        execute_90aaec -> setter_5c3a7e.execute\n        setter_5c3a7e.continue -> for_1e2f0.reset\n        setter_8b9d4e.continue -> for_1e2f0.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_6d8e4 root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 5, name: \"list1\") property(List) list1_3a9f0e\n        in(x: -477, y: 145, name: \"list2\") property(List) list2_7c4d8b\n\n        out(x: 1216, y: 5, name: \"output\") property(Bool) output_9b1b3a\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        instance(x: -303, y: 93) filter_c91965 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> filter_c91965.handler\n        list1_3a9f0e -> filter_c91965.items\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            2 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n\n        instance(x: -92, y: -97) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: -96) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: -95) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n\n        map_c73e3b.output_list -> intersection_c7c7e6.left\n        list2_7c4d8b -> intersection_c7c7e6.right\n\n        length_8166b0.list -> contains_32727d.list\n        false -> contains_32727d.item\n\n        intersection_c7c7e6.intersection -> length_8166b0.list\n\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n\n        equal_f89569.left -> length_8166b0.length\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_c7097f\n\n        list_ec88cd -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list_ec88cd -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n    }\n\n    \n\n    instance(x: -84, y: 59) unique_element_ac7dfb root.main.unique_Element {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -475, y: 10, name: \"list1\") property(List) list1_2e9b4f\n        in(x: -485, y: 150, name: \"list2\") property(List) list2_5a7c8d\n\n        out(x: 1210, y: 35, name: \"output\") property(Bool) output_3e6c1d\n\n        instance(x: 750, y: 93) ifexpression_9f4b7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8a1e6d\") getter_8a1e6d = previous\n        setter(x: 679, y: -313, name: \"setter_9f4b7c\") setter_9f4b7c = previous\n        instance(x: 321, y: -20) for_5e3f2f root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9f4b7c\") setter_1d8a6c = previous\n        instance(x: -275, y: -35) getat_5e3f2f root.Std_k98ojb.List.GetAt {}\n        ifexpression_9f4b7c.else -> continue_7c0b5c\n        ifexpression_9f4b7c.value -> output_3e6c1d\n        ifexpression_9f4b7c.then -> setter_9f4b7c.execute\n        list2_5a7c8d -> for_5e3f2f.items\n        for_5e3f2f.item -> ifexpression_9f4b7c.gen_2\n        for_5e3f2f.index -> ifexpression_9f4b7c.gen_0\n        getter_8a1e6d.value -> ifexpression_9f4b7c.gen_1\n        for_5e3f2f.onItem -> ifexpression_9f4b7c.execute\n        for_5e3f2f.done -> continue_7c0b5c\n        for_5e3f2f.item -> setter_9f4b7c.new_value\n        list1_2e9b4f -> getat_5e3f2f.list\n        0 -> getat_5e3f2f.index\n        getat_5e3f2f.itemAtIndex -> setter_1d8a6c.new_value\n        execute_7c0b5c -> setter_1d8a6c.execute\n        setter_1d8a6c.continue -> for_5e3f2f.reset\n        setter_9f4b7c.continue -> for_5e3f2f.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_0c5a6c root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -375, y: 10, name: \"subList\") property(List) sub_list_1e8b2f\n        in(x: -380, y: -160, name: \"mainList\") property(List) main_list_7a4d3c\n\n        out(x: 1225, y: -155, name: \"output\") property(Bool) output_9c6a1e\n\n        instance(x: -139, y: -154, name: \"sublist length\") length_2f8b9c root.Std_k98ojb.List.Length {}\n        instance(x: 104, y: -153) contains_3d4f5c root.Std_k98ojb.List.Contains {}\n        instance(x: 365, y: -154) filter_1e6a0c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 639, y: -155) map_7f8f9c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 910, y: -156) reduce_3d5a2c root.Std_k98ojb.Iteration.Reduce {}\n        sub_list_1e8b2f -> length_2f8b9c.list\n        main_list_7a4d3c -> contains_3d4f5c.list\n        sub_list_1e8b2f -> contains_3d4f5c.item\n        contains_3d4f5c.is_contained -> filter_1e6a0c.handler.input\n        main_list_7a4d3c -> filter_1e6a0c.items\n        func() {\n            in(x: -29, y: 19, name: \"current\") property(Number) index_2f8b9c\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_efbc78\n\n            instance(x: 226, y: 56) slice_c76d2b root.Std_k98ojb.List.Slice {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            index_2f8b9c -> slice_c76d2b.start\n            length_2f8b9c.length -> slice_c76d2b.end\n            filter_1e6a0c.output_list -> slice_c76d2b.list\n            0 -> notequal_7836b4.right\n            slice_c76d2b.slice -> map_7f8f9c.items\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(List) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) contains_ad7b2a root.Std_k98ojb.List.Contains {}\n                sub_list_1e8b2f -> contains_ad7b2a.list\n                current_81298e -> contains_ad7b2a.item\n                contains_ad7b2a.is_contained -> bool_4524be\n            } -> map_7f8f9c.handler\n            func() {\n                in(x: -192, y: -16, name: \"current\") property(Bool) current_81298e\n\n                out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n                instance(x: 74, y: -23) and_ad7b2a root.Std_k98ojb.Logic.And {}\n                instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n                current_81298e -> and_ad7b2a.left\n                true -> and_ad7b2a.right\n                and_ad7b2a.result -> notequal_cb8a55.left\n                0 -> notequal_cb8a55.right\n                notequal_cb8a55.result -> bool_4524be\n            } -> reduce_3d5a2c.reducer\n            map_7f8f9c.output_list -> reduce_3d5a2c.items\n            true -> reduce_3d5a2c.initialValue\n            reduce_3d5a2c.result -> output_efbc78\n        } -> filter_1e6a0c.handler\n        filter_1e6a0c.output_list -> contains_3d4f5c.item\n        contains_3d4f5c.is_contained -> output_9c6a1e\n    }\n\n    \n\n    instance(x: -84, y: 59) is_sublist_ac7dfb root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_3a0f2b\n        in(x: -485, y: -205, name: \"list2\") property(List) list2_5e8d9c\n\n        out(x: 1227, y: -195, name: \"output\") property(Bool) output_6a1f3c\n\n        instance(x: 752, y: -93) ifexpression_4b0c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: -160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_4b0c0f.else -> output_6a1f3c\n        getter_b280eb.value -> ifexpression_4b0c0f.gen_1\n        for_d26972.index -> ifexpression_4b0c0f.gen_0\n        ifexpression_4b0c0f.value -> output_6a1f3c\n        list2_5e8d9c -> for_d26972.items\n        for_d26972.item -> ifexpression_4b0c0f.gen_2\n        for_d26972.onItem -> ifexpression_4b0c0f.execute\n        for_d26972.done -> output_6a1f3c\n        list1_3a0f2b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        ifexpression_4b0c0f.then -> setter_9d4f1c.execute\n        for_d26972.item -> setter_9d4f1c.new_value\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"subList\") property(List) sub_list_3e8f9d\n        in(x: -465, y: -120, name: \"mainList\") property(List) main_list_7a4c6b\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        main_list_7a4c6b -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        main_list_7a4c6b -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        sub_list_3e8f9d -> getat_ce2a48.list\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -465, y: 30, name: \"list1\") property(List) list1_2e9f5d\n        in(x: -485, y: -125, name: \"list2\") property(List) list2_8b4a3c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        list1_2e9f5d -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        list2_8b4a3c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_a96db6 -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_fc79d5 root.main.is_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -275, y: 20, name: \"subList\") property(List) sub_list_3e1b2f\n        in(x: -274, y: -139, name: \"mainList\") property(List) main_list_7a9c5d\n\n        out(x: 1110, y: -10, name: \"output\") property(Bool) output_6f8f4e\n\n        instance(x: -1, y: -120, name: \"find sublist in list\") find_2b3c8c root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -30, y: 10, name: \"current\") property(List) current_5a7d6f\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_1e8c3b\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_2a9d0f\n\n            instance(x: 226, y: 56) contains_7e5c6c root.Std_k98ojb.List.Contains {}\n            sub_list_3e1b2f -> contains_7e5c6c.list\n            current_5a7d6f -> contains_7e5c6c.item\n            contains_7e5c6c.is_contained -> output_2a9d0f\n        } -> find_2b3c8c.predicate\n        main_list_7a9c5d -> find_2b3c8c.items\n        find_2b3c8c.item -> output_6f8f4e\n    }\n\n    \n\n    instance(x: -80, y: 59) is_sublist_1e0b3f root.main.is_sublist {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a list is a sublist of another list.\") is_sublist {\n        in(x: -485, y: 30, name: \"list1\") property(List) list1_5f8a3d\n        in(x: -505, y: -135, name: \"list2\") property(List) list2_6e7b9c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_4a0f1f\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_3d8f2c\n\n        instance(x: 752, y: 93) ifexpression_7e9b5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_8f2d1a\") getter_8f2d1a = previous\n        setter(x: 679, y: -313, name: \"setter_9c3b4e\") setter_9c3b4e = previous\n        instance(x: 321, y: -20) for_5b6a7d root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9c3b4e\") setter_2f8a1e = previous\n        instance(x: -275, y: -35) getat_5b6a7d root.Std_k98ojb.List.GetAt {}\n        ifexpression_7e9b5c.else -> continue_4a0f1f\n        ifexpression_7e9b5c.value -> output_3d8f2c\n        ifexpression_7e9b5c.then -> setter_9c3b4e.execute\n        list1_5f8a3d -> for_5b6a7d.items\n        for_5b6a7d.item -> ifexpression_7e9b5c.gen_2\n        for_5b6a7d.index -> ifexpression_7e9b5c.gen_0\n        getter_8f2d1a.value -> ifexpression_7e9b5c.gen_1\n        for_5b6a7d.onItem -> ifexpression_7e9b5c.execute\n        for_5b6a7d.done -> continue_4a0f1f\n        for_5b6a7d.item -> setter_9c3b4e.new_value\n        list2_6e7b9c -> getat_5b6a7d.list\n        0 -> getat_5b6a7d.index\n        getat_5b6a7d.itemAtIndex -> setter_2f8a1e.new_value\n        continue_4a0f1f -> for_5b6a7d.reset\n        setter_9c3b4e.continue -> for_5b6a7d.next\n    }\n\n    \n\n    instance(x: 10, y: -177) is_sublist_8f2d1a root.main.is_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3e6b8a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7f9c4d\n\n        instance(x: 0, y: 0) find_2f5f6f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_8e1a7c\n            in(x: -110, y: 85, name: \"index\") property(Number) index_3d5f6b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_9c2c4f\n\n            instance(x: 89, y: 29) sub_1a8e0f root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_7d5e6f root.Std_k98ojb.Logic.NotEqual {}\n            1 -> sub_1a8e0f.second\n            index_3d5f6b -> sub_1a8e0f.first\n            elem_8e1a7c -> notequal_7d5e6f.right\n            sub_1a8e0f.result -> notequal_7d5e6f.left\n            notequal_7d5e6f.result -> bool_9c2c4f\n        } -> find_2f5f6f.predicate\n        list_3e6b8a -> find_2f5f6f.items\n        find_2f5f6f.index + 1 -> missing_number_7f9c4d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1f0c8f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_8f9b1a\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_7e4d6c\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: -29, name: \"index\") property(Number) index_1c2d7e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1c2d7e -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            1 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_missing_node.predicate\n        list_8f9b1a -> find_missing_node.items\n        index_1c2d7e -> find_missing_node.index\n        find_missing_node.item -> missing_7e4d6c\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -282, y: 0, name: \"list\") property(List) list_1d8f9a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 29, name: \"index\") property(Number) index_7c3d4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7c3d4a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1d8f9a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 29, name: \"index\") property(Number) index_7c3d4a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_7c3d4a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -283, y: 0, name: \"list\") property(List) list_9a4b8f\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c6d3e\n\n        instance(x: 0, y: 0) find_2f5c4e root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 71, name: \"index\") property(Number) index_1e3a8c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_5f2b9d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_5f2b9d.result -> notequal_807ffd.left\n            index_1e3a8c -> sub_5f2b9d.first\n            elem_9f6850 -> sub_5f2b9d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2f5c4e.predicate\n        list_9a4b8f -> find_2f5c4e.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_5f2b9d root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_5f2b9d.result -> notequal_807ffd.left\n            index_1e3a8c -> sub_5f2b9d.first\n            elem_9f6850 -> sub_5f2b9d.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_2f5c4e.index_predicate\n        find_2f5c4e.item -> missing_number_7c6d3e\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_9b8c1f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -299, y: 0, name: \"list\") property(List) list_3a9b6f\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_2c7d4e\n\n        instance(x: 0, y: 0) find_5f8f8f root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1a9c2d\n            in(x: -111, y: 68, name: \"index\") property(Number) index_3e7f6b\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8a4f5e\n\n            instance(x: 89, y: 29) sub_2c1d9e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_3c0b6c root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_3c0b6c.right\n            sub_2c1d9e.result -> notequal_3c0b6c.left\n            index_3e7f6b -> sub_2c1d9e.second\n            elem_1a9c2d -> sub_2c1d9e.first\n            notequal_3c0b6c.result -> bool_8a4f5e\n        } -> find_5f8f8f.predicate\n        list_3a9b6f -> find_5f8f8f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1a9c2d\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_8a4f5e\n\n            instance(x: 89, y: 29) greaterthan_3b7a6c root.Std_k98ojb.Math.GreaterThan {}\n            0 -> greaterthan_3b7a6c.left\n            elem_1a9c2d -> greaterthan_3b7a6c.right\n            greaterthan_3b7a6c.result -> bool_8a4f5e\n        } -> find_5f8f8f.default_predicate\n        find_5f8f8f.index -> missing_number_2c7d4e\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_1b6c9f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_9f8d1a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -114, y: 71, name: \"index\") property(Number) index_3e4c6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_3e4c6a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_9f8d1a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_3e4c6a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_3a1f5e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7c8b9d\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 74, name: \"index\") property(Number) index_7c8a1e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            instance(x: 309, y: 88) add_7c9f1e root.Std_k98ojb.Math.Add {}\n            index_7c8a1e -> add_7c9f1e.first\n            1 -> add_7c9f1e.second\n            add_7c9f1e.result -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            2 -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3a1f5e -> find_6d05b0.items\n        find_6d05b0.index -> index_7c8a1e\n        add_7c9f1e.result -> missing_number_7c8b9d\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -284, y: 0, name: \"list\") property(List) list_1d8f9a\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 71, name: \"index\") property(Number) index_1e7d6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e7d6a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_1d8f9a -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -108, y: 71, name: \"index\") property(Number) index_1e7d6a\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            index_1e7d6a -> modulo_1088d5.divisor\n            elem_9f6850 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            elem_9f6850 -> modulo_1088d5.divisor\n            0 -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.start_predicate\n        find_6d05b0.item -> missing_number_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -280, y: 0, name: \"list\") property(List) list_3f8d1e\n\n        out(x: 593, y: -1, name: \"missing_number\") property(Number) missing_number_7b9c5a\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            in(x: -107, y: 59, name: \"index\") property(Number) index_8c1d3e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2f0b4e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2f0b4e.result -> notequal_807ffd.left\n            index_8c1d3e -> sub_2f0b4e.first\n            elem_9f6850 -> sub_2f0b4e.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        list_3f8d1e -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) sub_2f0b4e root.Std_k98ojb.Math.Sub {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            1 -> notequal_807ffd.right\n            sub_2f0b4e.result -> notequal_807ffd.left\n            index_8c1d3e -> sub_2f0b4e.first\n            elem_9f6850 -> sub_2f0b4e.second\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.index_predicate\n        find_6d05b0.item -> missing_number_7b9c5a\n    }\n\n    \n\n    instance(x: -55, y: 529) find_missing_2c856f root.main.find_missing {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_missing {\n        in(x: -426, y: 0, name: \"list\") property(List) list_1f3a2e\n\n        out(x: 159, y: 77, name: \"missing\") property(Number) missing_7b8d9c\n\n        instance(x: 426, y: 76) find_missing_node root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_1f3a2e\n            in(x: -109, y: 29, name: \"index\") property(Number) index_7b8d9c\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5c6f0e\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_7b8d9c -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            1 -> modulo_1088d5.divisor\n            elem_1f3a2e -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_5c6f0e\n        } -> find_missing_node.predicate\n        list_1f3a2e -> find_missing_node.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_7b8d9c\n            in(x: -109, y: 29, name: \"index\") property(Number) index_1f3a2e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5c6f0e\n\n            instance(x: 89, y: 29) modulo_1088d5 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            index_1f3a2e -> notequal_807ffd.right\n            modulo_1088d5.result -> notequal_807ffd.left\n            1 -> modulo_1088d5.divisor\n            elem_7b8d9c -> modulo_1088d5.value\n            notequal_807ffd.result -> bool_5c6f0e\n        } -> find_missing_node.index_predicate\n        find_missing_node.item -> missing_7b8d9c\n    }\n\n    \n\n    instance(x: -55, y: 127) find_missing_2c856f root.main.find_missing {}\n}"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_0\n\n        instance(x: 0, y: 1) replace_3e9f6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_5a4d8f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_f7c9ea root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_3e9f6c.input\n        \" \" -> replace_3e9f6c.search\n        \":\" -> replace_3e9f6c.replace\n        replace_3e9f6c.output -> replace_5a4d8f.input\n        \",\" -> replace_5a4d8f.search\n        \":\" -> replace_5a4d8f.replace\n        replace_5a4d8f.output -> replace_f7c9ea.input\n        \".\" -> replace_f7c9ea.search\n        \":\" -> replace_f7c9ea.replace\n        replace_f7c9ea.output -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -155, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3c8d7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4a6e5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5b9e1d root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3c8d7f.input\n        \" \" -> replace_3c8d7f.search\n        \":\" -> replace_3c8d7f.replace\n        replace_3c8d7f.output -> replace_4a6e5c.input\n        \",\" -> replace_4a6e5c.search\n        \":\" -> replace_4a6e5c.replace\n        replace_4a6e5c.output -> replace_5b9e1d.input\n        \".\" -> replace_5b9e1d.search\n        \":\" -> replace_5b9e1d.replace\n        replace_5b9e1d.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7e9f3c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_8a5d4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_6a5f1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7e9f3c.input\n        \" \" -> replace_7e9f3c.search\n        \":\" -> replace_7e9f3c.replace\n        replace_7e9f3c.output -> replace_8a5d4c.input\n        \",\" -> replace_8a5d4c.search\n        \":\" -> replace_8a5d4c.replace\n        replace_8a5d4c.output -> replace_6a5f1c.input\n        \".\" -> replace_6a5f1c.search\n        \":\" -> replace_6a5f1c.replace\n        replace_6a5f1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_2d4b7e root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -156, y: 2, name: \"input\") property(String) input_0\n\n        out(x: 505, y: 77, name: \"output\") property(String) output_1\n\n        instance(x: 221, y: 76) replace_5e9f4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: 2) or_7a0d3c root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: -38) contains_8f1b6c root.Std_k98ojb.Strings.Contains {}\n        instance(x: 221, y: -39) replace_5e9f4c_2 root.Std_k98ojb.Strings.Replace {}\n        instance(x: -11, y: -75) or_7a0d3c_2 root.Std_k98ojb.Logic.Or {}\n        instance(x: -11, y: -102) contains_8f1b6c_2 root.Std_k98ojb.Strings.Contains {}\n        input_0 -> replace_5e9f4c.input\n        \" \" -> replace_5e9f4c.search\n        \":\" -> replace_5e9f4c.replace\n        input_0 -> contains_8f1b6c.input\n        \",\" -> contains_8f1b6c.contains\n        input_0 -> or_7a0d3c.left\n        contains_8f1b6c.result -> or_7a0d3c.right\n        replace_5e9f4c.output -> replace_5e9f4c_2.input\n        \".\" -> replace_5e9f4c_2.search\n        \":\" -> replace_5e9f4c_2.replace\n        input_0 -> contains_8f1b6c_2.input\n        \" \" -> contains_8f1b6c_2.contains\n        input_0 -> or_7a0d3c_2.left\n        contains_8f1b6c_2.result -> or_7a0d3c_2.right\n        replace_5e9f4c_2.output -> output_1\n    }\n\n    \n\n    instance(x: -138, y: 45) replace_spaces_commas_dots_aad0c2 root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -148, y: 0, name: \"input\") property(String) input_1a3b2f\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_5c9e8d\n\n        instance(x: 0, y: 1) replace_7e6b4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3f3a2d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_5a8c9f root.Std_k98ojb.Strings.Replace {}\n        input_1a3b2f -> replace_7e6b4c.input\n        \" \" -> replace_7e6b4c.search\n        \":\" -> replace_7e6b4c.replace\n        replace_7e6b4c.output -> replace_3f3a2d.input\n        \",\" -> replace_3f3a2d.search\n        \":\" -> replace_3f3a2d.replace\n        replace_3f3a2d.output -> replace_5a8c9f.input\n        \".\" -> replace_5a8c9f.search\n        \":\" -> replace_5a8c9f.replace\n        replace_5a8c9f.output -> output_5c9e8d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -156, y: 0, name: \"input\") property(String) input_2f8a6e\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_7b1c3d\n\n        instance(x: 0, y: 1) replace_9a4d5f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6e8c2f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7f3a4d root.Std_k98ojb.Strings.Replace {}\n        input_2f8a6e -> replace_9a4d5f.input\n        \" \" -> replace_9a4d5f.search\n        \":\" -> replace_9a4d5f.replace\n        replace_9a4d5f.output -> replace_6e8c2f.input\n        \",\" -> replace_6e8c2f.search\n        \":\" -> replace_6e8c2f.replace\n        replace_6e8c2f.output -> replace_7f3a4d.input\n        \".\" -> replace_7f3a4d.search\n        \":\" -> replace_7f3a4d.replace\n        replace_7f3a4d.output -> output_7b1c3d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -148, y: 0, name: \"input\") property(String) input_2a8f9e\n\n        out(x: 504, y: -1, name: \"output\") property(String) output_3b4c7d\n\n        instance(x: 0, y: 1) replace_5e6b5e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_2f8a9f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -1) replace_7d3c4d root.Std_k98ojb.Strings.Replace {}\n        input_2a8f9e -> replace_5e6b5e.input\n        \" \" -> replace_5e6b5e.search\n        \":\" -> replace_5e6b5e.replace\n        replace_5e6b5e.output -> replace_2f8a9f.input\n        \",\" -> replace_2f8a9f.search\n        \":\" -> replace_2f8a9f.replace\n        replace_2f8a9f.output -> replace_7d3c4d.input\n        \".\" -> replace_7d3c4d.search\n        \":\" -> replace_7d3c4d.replace\n        replace_7d3c4d.output -> output_3b4c7d\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_chars {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_7e9f6c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_3a8d4c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_5b1c1c root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_7e9f6c.input\n        \" \" -> replace_7e9f6c.search\n        \":\" -> replace_7e9f6c.replace\n        replace_7e9f6c.output -> replace_3a8d4c.input\n        \",\" -> replace_3a8d4c.search\n        \":\" -> replace_3a8d4c.replace\n        replace_3a8d4c.output -> replace_5b1c1c.input\n        \".\" -> replace_5b1c1c.search\n        \":\" -> replace_5b1c1c.replace\n        replace_5b1c1c.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChars_e54b7f root.main.replace_chars {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -150, y: 0, name: \"input\") property(String) input_1\n\n        out(x: 530, y: -2, name: \"output\") property(String) output_1\n\n        instance(x: 0, y: 1) replace_3a7f5c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_6e4d9c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_8c0f1f root.Std_k98ojb.Strings.Replace {}\n        input_1 -> replace_3a7f5c.input\n        \" \" -> replace_3a7f5c.search\n        \":\" -> replace_3a7f5c.replace\n        replace_3a7f5c.output -> replace_6e4d9c.input\n        \",\" -> replace_6e4d9c.search\n        \":\" -> replace_6e4d9c.replace\n        replace_6e4d9c.output -> replace_8c0f1f.input\n        \".\" -> replace_8c0f1f.search\n        \":\" -> replace_8c0f1f.replace\n        replace_8c0f1f.output -> output_1\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replace all occurrences of spaces, commas, or dots with a colon.\") replace_spaces_commas_dots {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_5a9f8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 265, y: 0) replace_4d6e7f root.Std_k98ojb.Strings.Replace {}\n        instance(x: 530, y: -2) replace_3a1f3a root.Std_k98ojb.Strings.Replace {}\n        input_0 -> replace_5a9f8c.input\n        \" \" -> replace_5a9f8c.search\n        \":\" -> replace_5a9f8c.replace\n        replace_5a9f8c.output -> replace_4d6e7f.input\n        \",\" -> replace_4d6e7f.search\n        \":\" -> replace_4d6e7f.replace\n        replace_4d6e7f.output -> replace_3a1f3a.input\n        \".\" -> replace_3a1f3a.search\n        \":\" -> replace_3a1f3a.replace\n        replace_3a1f3a.output -> result_0\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceSpacesCommasDots_e54b7f root.main.replace_spaces_commas_dots {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -333, y: 6, name: \"input\") property(String) input_8f1e9d\n\n        out(x: 1050, y: 16, name: \"output\") property(Bool) output_7c2a5b\n\n        instance(x: -164, y: 10) characters_3e6b4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 338, y: 17) length_9f0d8f root.Std_k98ojb.List.Length {}\n        instance(x: 547, y: 16) lessthanorequal_ea7d1e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 760, y: -3) for_6c2b9c root.Std_k98ojb.Std.For {}\n        instance(x: 1030, y: 16) equal_4f5c8a root.Std_k98ojb.Logic.Equal {}\n        characters_3e6b4c.characters -> length_9f0d8f.list\n        input_8f1e9d -> characters_3e6b4c.input\n        func() {\n            in(x: -24, y: 46, name: \"current\") property(String) current_5a2a7\n\n            out(x: 562, y: 68, name: \"out\") property(Bool) out_e8f3d6\n\n            instance(x: 226, y: 65) equal_1b4e9c root.Std_k98ojb.Logic.Equal {}\n            current_5a2a7 -> equal_1b4e9c.left\n            input_8f1e9d -> equal_1b4e9c.right\n            equal_1b4e9c.result -> out_e8f3d6\n        } -> for_6c2b9c.handler\n        length_9f0d8f.length -> lessthanorequal_ea7d1e.left\n        1 -> lessthanorequal_ea7d1e.right\n        lessthanorequal_ea7d1e.result -> for_6c2b9c.items\n        characters_3e6b4c.characters -> for_6c2b9c.items\n        func() {\n            in(x: -24, y: 46, name: \"current\") property(String) current_5a2a7\n\n            out(x: 562, y: 68, name: \"out\") property(Bool) out_e8f3d6\n\n            instance(x: 226, y: 65) equal_1b4e9c root.Std_k98ojb.Logic.Equal {}\n            current_5a2a7 -> equal_1b4e9c.left\n            input_8f1e9d -> equal_1b4e9c.right\n            equal_1b4e9c.result -> out_e8f3d6\n        } -> for_6c2b9c.handler\n        for_6c2b9c.onItem -> equal_4f5c8a.execute\n        0 -> equal_4f5c8a.left\n        for_6c2b9c.value -> equal_4f5c8a.right\n        equal_4f5c8a.result -> output_7c2a5b\n    }\n\n    \n\n    instance(x: -40, y: 79) is_same_e0d3e1 root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -296, y: 11, name: \"input\") property(String) input_9e8f3d\n\n        out(x: 1116, y: 14, name: \"output\") property(Bool) output_7a1c4b\n\n        instance(x: -84, y: 13) characters_2b0b5f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 296, y: 11) length_8d9e6c root.Std_k98ojb.List.Length {}\n        instance(x: 515, y: 12) lessthanorequal_ea7d3f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 734, y: -5) for_2b0f1e root.Std_k98ojb.Std.For {}\n        instance(x: 1054, y: 12) equal_9c6b8a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1283, y: 11) and_e7d5c8 root.Std_k98ojb.Logic.And {}\n        characters_2b0b5f.characters -> for_2b0f1e.items\n        func() {\n            in(x: -16, y: 41, name: \"current\") property(String) current_6a3b9d\n\n            out(x: 742, y: 64, name: \"out\") property(Bool) out_8c4c2f\n\n            instance(x: 230, y: 58) equal_5e1f7f root.Std_k98ojb.Logic.Equal {}\n            current_6a3b9d -> equal_5e1f7f.left\n            input_9e8f3d -> equal_5e1f7f.right\n            equal_5e1f7f.result -> out_8c4c2f\n        } -> for_2b0f1e.handler\n        1 -> length_8d9e6c.list\n        characters_2b0b5f.characters -> length_8d9e6c.list\n        lessthanorequal_ea7d3f.result -> and_e7d5c8.left\n        for_2b0f1e.done -> and_e7d5c8.right\n        equal_9c6b8a.result -> and_e7d5c8.left\n        for_2b0f1e.onItem -> equal_9c6b8a.execute\n        input_9e8f3d -> equal_9c6b8a.left\n        characters_2b0b5f.characters[0] -> equal_9c6b8a.right\n        and_e7d5c8.result -> output_7a1c4b\n    }\n\n    \n\n    instance(x: 17, y: -21) is_same_3e7d4c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -293, y: 1, name: \"input\") property(String) input_8e9f0d\n\n        out(x: 1216, y: 5, name: \"output\") property(Bool) output_3b2c4a\n\n        instance(x: -92, y: 10) characters_7f1b5c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 11) length_9d8e6f root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 12) lessthanorequal_3a7f2a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 574, y: -5) for_4d8e1c root.Std_k98ojb.Std.For {}\n        instance(x: 1020, y: 13) equal_9f6b3c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1222, y: 12) and_7a5bda root.Std_k98ojb.Logic.And {}\n        characters_7f1b5c.characters -> for_4d8e1c.items\n        input_8e9f0d -> characters_7f1b5c.input\n        length_9d8e6f.length -> lessthanorequal_3a7f2a.right\n        1 -> lessthanorequal_3a7f2a.left\n        for_4d8e1c.item -> equal_9f6b3c.left\n        characters_7f1b5c.characters[0] -> equal_9f6b3c.right\n        equal_9f6b3c.result -> and_7a5bda.left\n        for_4d8e1c.onItem -> and_7a5bda.execute\n        lessthanorequal_3a7f2a.result -> for_4d8e1c.reset\n        and_7a5bda.result -> equal_9f6b3c.predicate\n        0 -> for_4d8e1c.index\n        for_4d8e1c.done -> output_3b2c4a\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_5f7a7f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -265, y: 26, name: \"input\") property(String) input_9e8a2f\n\n        out(x: 1050, y: 5, name: \"output\") property(Bool) output_7c1b4d\n\n        instance(x: -84, y: 27) characters_c6e3cd root.Std_k98ojb.Strings.Characters {}\n        instance(x: 226, y: 26) length_9f8a2c root.Std_k98ojb.List.Length {}\n        instance(x: 436, y: 25) getat_5d7f1f root.Std_k98ojb.List.GetAt {}\n        instance(x: 642, y: 24) equal_3e6c0f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 848, y: 23) reduce_8a4b9f root.Std_k98ojb.Iteration.Reduce {}\n        characters_c6e3cd.characters -> length_9f8a2c.list\n        input_9e8a2f -> characters_c6e3cd.input\n        func() {\n            in(x: -32, y: 0, name: \"acc\") property(String) acc_1b7d5e\n\n            out(x: 504, y: 17, name: \"out\") property(String) out_9f4c6a\n\n            instance(x: 174, y: 14) equal_8a3a2f root.Std_k98ojb.Logic.Equal {}\n            acc_1b7d5e -> equal_8a3a2f.left\n            getat_5d7f1f.itemAtIndex -> equal_8a3a2f.right\n            equal_8a3a2f.result -> out_9f4c6a\n        } -> reduce_8a4b9f.handler\n        length_9f8a2c.length -> getat_5d7f1f.index\n        characters_c6e3cd.characters -> getat_5d7f1f.list\n        0 -> getat_5d7f1f.index\n        input_9e8a2f -> reduce_8a4b9f.initial_value\n        characters_c6e3cd.characters -> reduce_8a4b9f.items\n        equal_3e6c0f.result -> output_7c1b4d\n        1 -> equal_3e6c0f.right\n        reduce_8a4b9f.output_value -> equal_3e6c0f.left\n    }\n\n    \n\n    instance(x: -5, y: -11) is_same_2a6c7f root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -297, y: 0, name: \"string\") property(String) string_1f9d4e\n\n        out(x: 557, y: 11, name: \"output\") property(Bool) output_5b7c6a\n\n        instance(x: -92, y: 10) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 9) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 8) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        string_1f9d4e -> intersection_c7c7e6.left\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        string_1f9d4e -> intersection_c7c7e6.right\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        equal_f89569.result -> output_5b7c6a\n    }\n\n    \n\n    instance(x: -84, y: 59) check_same_3f8d2e root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -286, y: 11, name: \"input\") property(String) input_8f1e5d\n\n        out(x: 557, y: 60, name: \"output\") property(Bool) output_c7097f\n\n        instance(x: -92, y: 59) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 146, y: 58) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 57) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        input_8f1e5d -> intersection_c7c7e6.left\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> length_8166b0.list\n        input_8f1e5d -> intersection_c7c7e6.right\n        length_8166b0.length -> output_c7097f\n    }\n\n    \n\n    instance(x: -84, y: 185) is_same_3a2c9c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -265, y: 10, name: \"input\") property(String) input_8e6f9d\n\n        out(x: 1080, y: 13, name: \"output\") property(Bool) output_1a3b4c\n\n        instance(x: -92, y: 11) characters_5a2c7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 12) length_6e87f2 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 13) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 574, y: -4) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        instance(x: 824, y: 12) lessthanorequal_7f9c8e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1010, y: -3) for_d26972 root.Std_k98ojb.Std.For {}\n        input_8e6f9d -> characters_5a2c7f.input\n        length_6e87f2.list -> lessthanorequal_7f9c8e.left\n        1 -> lessthanorequal_7f9c8e.right\n        lessthanorequal_7f9c8e.result -> for_d26972.items\n        characters_5a8b6d.characters -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> equal_f89569.left\n        input_8e6f9d -> equal_f89569.right\n        for_d26972.item -> getat_ce2a48.index\n        equal_f89569.result -> output_1a3b4c\n        characters_5a8b6d.characters -> length_6e87f2.list\n        for_d26972.onItem -> equal_f89569.execute\n        for_d26972.done -> output_1a3b4c\n    }\n\n    \n\n    instance(x: 13, y: -122) is_same_9c8d7c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -287, y: 30, name: \"input\") property(String) input_9e8f2d\n\n        out(x: 557, y: 119, name: \"output\") property(Bool) output_5c1a7b\n\n        instance(x: -96, y: 31) characters_3f0c4c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 146, y: 120) length_8166b0 root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 119) equal_f89569 root.Std_k98ojb.Logic.Equal {}\n        instance(x: -96, y: -95) intersection_c7c7e6 root.Std_k98ojb.Sets.Intersection {}\n        characters_3f0c4c.characters -> length_8166b0.list\n        input_9e8f2d -> characters_3f0c4c.input\n        length_8166b0.length -> equal_f89569.left\n        1 -> equal_f89569.right\n        intersection_c7c7e6.intersection -> equal_f89569.right\n        characters_3f0c4c.characters -> intersection_c7c7e6.left\n        characters_3f0c4c.characters -> intersection_c7c7e6.right\n        equal_f89569.result -> output_5c1a7b\n    }\n\n    \n\n    instance(x: -84, y: 59) is_same_9d8b2c root.main.is_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") check_same {\n        in(x: -297, y: 17, name: \"input\") property(String) input_1f8e9d\n\n        out(x: 1023, y: 5, name: \"output\") property(Bool) output_4b0c6a\n\n        instance(x: -88, y: 16) characters_7a2b3f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 247, y: 17) length_1e5d8c root.Std_k98ojb.List.Length {}\n        instance(x: 473, y: 18) lessthanorequal_9e6a4f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 694, y: -7) for_1b5d3c root.Std_k98ojb.Std.For {}\n        instance(x: 1002, y: 17) equal_8a0f9e root.Std_k98ojb.Logic.Equal {}\n        characters_7a2b3f.characters -> length_1e5d8c.list\n        input_1f8e9d -> characters_7a2b3f.input\n        lessthanorequal_9e6a4f.result -> for_1b5d3c.items\n        0 -> lessthanorequal_9e6a4f.left\n        length_1e5d8c.length -> lessthanorequal_9e6a4f.right\n        characters_7a2b3f.characters -> for_1b5d3c.items\n        func() {\n            in(x: -30, y: 23, name: \"current\") property(String) current_8c0f98\n\n            out(x: 704, y: 49, name: \"output\") property(Bool) output_7a1b5e\n\n            instance(x: 226, y: 56) equal_c9d6ef root.Std_k98ojb.Logic.Equal {}\n            current_8c0f98 -> equal_c9d6ef.left\n            characters_7a2b3f.characters[0] -> equal_c9d6ef.right\n            equal_c9d6ef.result -> output_7a1b5e\n        } -> for_1b5d3c.handler\n        for_1b5d3c.output_list -> equal_8a0f9e.left\n        true -> equal_8a0f9e.right\n        equal_8a0f9e.result -> output_4b0c6a\n    }\n\n    \n\n    instance(x: -11, y: 60) check_same_e1d5d2 root.main.check_same {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether all the characters are same or not.\") is_same {\n        in(x: -299, y: 0, name: \"input\") property(String) input_8f2e9d\n\n        out(x: 1096, y: 13, name: \"output\") property(Bool) output_7a1b3c\n\n        instance(x: -99, y: 4, name: \"characters\") characters_5e0b2c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 296, y: 12) length_6f8d9f root.Std_k98ojb.List.Length {}\n        instance(x: 499, y: -3) lessthanorequal_7a4e5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 698, y: 11) for_2f1d9c root.Std_k98ojb.Std.For {}\n        instance(x: 1010, y: -3) equal_8e6f7a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1055, y: 12) and_4b9b9f root.Std_k98ojb.Logic.And {}\n        characters_5e0b2c.characters -> length_6f8d9f.list\n        input_8f2e9d -> characters_5e0b2c.input\n        func() {\n            in(x: -30, y: 46, name: \"current\") property(String) current_1a7a3c\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_9f5d0e\n\n            instance(x: 106, y: 17) equal_4b8c6c root.Std_k98ojb.Logic.Equal {}\n            current_1a7a3c -> equal_4b8c6c.left\n            input_8f2e9d -> equal_4b8c6c.right\n            equal_4b8c6c.result -> out_9f5d0e\n        } -> for_2f1d9c.handler\n        length_6f8d9f.length -> lessthanorequal_7a4e5c.left\n        1 -> lessthanorequal_7a4e5c.right\n        lessthanorequal_7a4e5c.result -> for_2f1d9c.reset\n        for_2f1d9c.items -> for_2f1d9c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(String) current_6b3a7e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_5e4f8d\n\n            instance(x: 74, y: -23) equal_1c2f9f root.Std_k98ojb.Logic.Equal {}\n            current_6b3a7e -> equal_1c2f9f.left\n            input_8f2e9d -> equal_1c2f9f.right\n            equal_1c2f9f.result -> bool_5e4f8d\n        } -> for_2f1d9c.handler\n        for_2f1d9c.onItem -> equal_8e6f7a.execute\n        input_8f2e9d -> equal_8e6f7a.left\n        for_2f1d9c.item -> equal_8e6f7a.right\n        equal_8e6f7a.result -> and_4b9b9f.left\n        lessthanorequal_7a4e5c.result -> and_4b9b9f.right\n        for_2f1d9c.done -> output_7a1b3c\n        and_4b9b9f.result -> output_7a1b3c\n    }\n\n    \n\n    instance(x: -51, y: 114) is_same_6e5c8c root.main.is_same {}\n\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f2a8e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9c7d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9c7d4f.items\n        count_1f2a8e.count -> filter_9c7d4f.execute\n        filter_9c7d4f.output_list -> count_1f2a8e.value\n        count_1f2a8e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -30, y: 20) characters_node root.Std_k98ojb.Strings.Characters {}\n        instance(x: 40, y: 20) count_1a2f8e root.Std_k98ojb.Std.Count {}\n        instance(x: 150, y: 20) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n\n        input_ai -> characters_node.input\n        characters_node.characters -> count_1a2f8e.trigger\n        characters_node.characters -> is_numeric_node.input\n\n        is_numeric_node.value -> count_1a2f8e.count\n        count_1a2f8e.count -> result_ai\n    }\n\n    \n    instance(x: 0, y: 0) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -16, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a2f8c root.Std_k98ojb.Count {}\n        instance(x: 0, y: -16) filter_3e25a9 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3e25a9.list\n        count_1a2f8c.count -> filter_3e25a9.on_item\n        filter_3e25a9.result -> count_1a2f8c.items\n        count_1a2f8c.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -16) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -35, y: 15) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 150, y: 16) count_1a4c9e root.Std_k98ojb.Std.Count {}\n        instance(x: 300, y: -10) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_1a4c9e.count\n        count_1a4c9e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: 0, name: \"count_digits\") count_digits_3d7de6 root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -32, y: 1) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_5c8f2a root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -32) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 0, y: -64) add_1e9d7e root.Std_k98ojb.Math.Add {}\n        characters_node.characters -> count_5c8f2a.trigger\n        count_5c8f2a.count -> is_numeric_node.input\n        is_numeric_node.value -> add_1e9d7e.first\n        1 -> add_1e9d7e.second\n        add_1e9d7e.result -> count_5c8f2a.new_value\n        count_5c8f2a.count -> result_ai\n    }\n    \n\n    instance(x: -85, y: -46, name: \"count_digits\") count_digits_node root.main.count_digits {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a5c6e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -40) filter_3d7de6 root.Std_k98ojb.Query.Filter {\n            where: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_3d7de6.list\n        count_1a5c6e.count -> filter_3d7de6.on_item\n        filter_3d7de6.result -> count_1a5c6e.items\n        count_1a5c6e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -40, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1a8c9e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -40) filter_2f7d4a root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_2f7d4a.items\n        count_1a8c9e.count -> filter_2f7d4a.execute\n        filter_2f7d4a.output_list -> count_1a8c9e.value\n        count_1a8c9e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -40) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -1, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_2a5c6e root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -1) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_2a5c6e.count\n        count_2a5c6e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -1) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -45, y: 1) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 85, y: 2) count_7c5a4f root.Std_k98ojb.Std.Count {}\n        instance(x: 0, y: -45) is_numeric_node root.Std_k98ojb.Strings.IsNumeric {}\n        characters_node.characters -> is_numeric_node.input\n        is_numeric_node.value -> count_7c5a4f.trigger\n        count_7c5a4f.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -45) count_digits_node root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"count the number of digits in a given string.\") count_digits {\n        in(x: 0, y: 0, name: \"input\") property(String) input_ai\n        out(x: 0, y: 0, name: \"result\") property(Number) result_ai\n\n        instance(x: -30, y: 0) characters_node root.Std_k98ojb.Strings.Characters {}\n        input_ai -> characters_node.input\n        instance(x: 0, y: 0) count_1f3a2e root.Std_k98ojb.Count {}\n        instance(x: 0, y: -30) filter_9c8d4f root.Std_k98ojb.Iteration.Filter {\n            handler: \"Std_k98ojb.Strings.IsNumeric(it)\"\n        }\n        characters_node.characters -> filter_9c8d4f.items\n        count_1f3a2e.count -> filter_9c8d4f.execute\n        filter_9c8d4f.output_list -> count_1f3a2e.value\n        count_1f3a2e.count -> result_ai\n    }\n    \n\n    instance(x: 0, y: -30) count_digits_node root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e5a8c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e5a8c.first\n        data_cde0dc -> pow_9e5a8c.second\n        pow_9e5a8c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a8c0e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a8c0e.x\n        data_cde0dc -> pow_9a8c0e.y\n        pow_9a8c0e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3e8c9a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3e8c9a.x\n        data_cde0dc -> pow_3e8c9a.y\n        pow_3e8c9a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e8c0a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e8c0a.first\n        data_cde0dc -> pow_9e8c0a.second\n        pow_9e8c0a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a3e0c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a3e0c.first\n        data_cde0dc -> pow_9a3e0c.second\n        pow_9a3e0c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e8a0c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e8a0c.first\n        data_cde0dc -> pow_5e8a0c.second\n        pow_5e8a0c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9a0c3e root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9a0c3e.x\n        data_cde0dc -> pow_9a0c3e.y\n        pow_9a0c3e.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_5e3c8a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_5e3c8a.x\n        data_cde0dc -> pow_5e3c8a.y\n        pow_5e3c8a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_9e3c0a root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_9e3c0a.x\n        data_cde0dc -> pow_9e3c0a.y\n        pow_9e3c0a.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of fourth power of first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 571, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n*n-1\"\n        }\n        instance(x: 303, y: 2) pow_3a0e5c root.Std_k98ojb.Math.Pow {}\n        instance(x: 330, y: 133) data_cde0dc  = 4\n        instance(x: 23, y: -1) add_f892a4 root.Std_k98ojb.Math.Add {}\n        n_3a3116 -> expression_2d6da6.gen_0\n        expression_2d6da6.result -> pow_3a0e5c.first\n        data_cde0dc -> pow_3a0e5c.second\n        pow_3a0e5c.result -> add_f892a4.second\n        n_3a3116 -> add_f892a4.first\n        add_f892a4.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -103, y: 54, name: \"size\") property(Number) size_3f8b5e\n\n        out(x: 46, y: 158, name: \"surfaceArea\") property(Number) surfaceArea_9a1c4d\n\n        instance(x: 12, y: -11) mul_7e0b6c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3f8b5e -> mul_7e0b6c.first\n        data_cde0dc -> mul_7e0b6c.second\n        mul_7e0b6c.result -> surfaceArea_9a1c4d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_5f8c3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -105, y: 41, name: \"size\") property(Number) size_9f0b3e\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        instance(x: 92, y: -105) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 92, y: -188) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        size_9f0b3e -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> mul_584bfd.first\n        6 -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) surface_area_of_cube_d6e930 root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -121, y: 45, name: \"size\") property(Number) size_8e9f1d\n        in(x: -122, y: -110, name: \"execute\") trigger() execute_2b4a6c\n\n        out(x: 656, y: 7, name: \"surface_area\") property(Number) surface_area_cbb7bd\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_8e9f1d -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f2330d.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n        execute_2b4a6c -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -106, y: 41, name: \"size\") property(Number) size_8f3b2e\n\n        out(x: 1126, y: 48, name: \"surface_area\") property(Number) surface_area_1a7c9d\n\n        instance(x: 36, y: -17) mul_4f5c0c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f3b2e -> mul_4f5c0c.first\n        data_cde0dc -> mul_4f5c0c.second\n        mul_4f5c0c.result -> surface_area_1a7c9d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_3b2e6f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -112, y: 43, name: \"size\") property(Number) size_1f0a3e\n\n        out(x: 1072, y: 7, name: \"surface_area\") property(Number) surface_area_8c6b5d\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"size*size\"\n        }\n        data_cde0dc -> mul_f892a4.first\n        expression_2d6da6.result -> mul_f892a4.second\n        size_1f0a3e -> expression_2d6da6.gen_0\n        mul_f892a4.result -> surface_area_8c6b5d\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 57, name: \"size\") property(Number) size_9a8f3e\n\n        out(x: 656, y: 68, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: 25) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_9a8f3e -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n        mul_f2330d.result -> mul_584bfd.first\n        size_9a8f3e -> mul_584bfd.second\n        mul_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -122, y: 40, name: \"size\") property(Number) size_1a9b8f\n\n        out(x: 656, y: 120, name: \"surface_area\") property(Number) surface_area_cbb7bd\n\n        instance(x: 94, y: -105) mul_f2330d root.Std_k98ojb.Math.Mul {}\n        size_1a9b8f -> mul_f2330d.first\n        6 -> mul_f2330d.second\n        instance(x: 92, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        mul_f2330d.result -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> surface_area_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_of_cube_b9ff6b root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -102, y: 40, name: \"size\") property(Number) size_8f3b5e\n\n        out(x: 1056, y: 41, name: \"surface_area\") property(Number) surface_area_9c2d7a\n\n        instance(x: 42, y: -1) mul_4f0c93 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_8f3b5e -> mul_4f0c93.first\n        data_cde0dc -> mul_4f0c93.second\n        mul_4f0c93.result -> surface_area_9c2d7a\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_8b1e5f root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -110, y: 47, name: \"size\") property(Number) size_3a9b2f\n\n        out(x: 1066, y: 7, name: \"surface_area\") property(Number) surface_area_8c0d1e\n\n        instance(x: 22, y: -4) mul_5e7f3c root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc  = 6\n        size_3a9b2f -> mul_5e7f3c.first\n        data_cde0dc -> mul_5e7f3c.second\n        mul_5e7f3c.result -> surface_area_8c0d1e\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_9dcc3d root.main.surface_area_of_cube {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the surface area of a cube of a given size.\") surface_area_of_cube {\n        in(x: -105, y: 55, name: \"size\") property(Number) size_1a8b5f\n\n        out(x: 46, y: 158, name: \"surface_area\") property(Number) surface_area_f7d3c0\n\n        instance(x: 92, y: -22) mul_9e4f2f root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_5a8b1c  = 6\n        size_1a8b5f -> mul_9e4f2f.first\n        data_5a8b1c -> mul_9e4f2f.second\n        mul_9e4f2f.result -> surface_area_f7d3c0\n    }\n\n    \n\n    instance(x: 118, y: -26) surface_area_of_cube_e6f9da root.main.surface_area_of_cube {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 10, name: \"list\") property(List) list_4a3f1e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_4a3f1e\n        min_list_4d4556.list -> list_4a3f1e\n        max_list_f3b46d.max -> firstitem_870503.item\n        min_list_4d4556.min -> firstitem_3078c6.item\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 20, name: \"list\") property(List) list_6a1f8e\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_6a1f8e -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_6a1f8e -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 0, name: \"list\") property(List) list_5e9f1d\n\n        out(x: 512, y: 11, name: \"difference\") property(Number) difference_7a3b6c\n\n        instance(x: 188, y: 62) sub_8c2b0e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358) max_1f9d4f root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) min_7a3b6c root.Std_k98ojb.List.Min {}\n        list_5e9f1d -> max_1f9d4f.list\n        list_5e9f1d -> min_7a3b6c.list\n        max_1f9d4f.max -> sub_8c2b0e.first\n        min_7a3b6c.min -> sub_8c2b0e.second\n        sub_8c2b0e.result -> difference_7a3b6c\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_1d9f5f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -34, y: 20, name: \"list\") property(List) list_6a1f2d\n\n        out(x: 450, y: 21, name: \"difference\") property(Number) difference_4e9c8b\n\n        instance(x: 201, y: 21) sub_3f7a0f root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 155, name: \"Max list\") max_list_f1d2d6 root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: -52, name: \"Min list\") min_list_9e5f7c root.Std_k98ojb.List.Min {}\n        sub_3f7a0f.result -> difference_4e9c8b\n        max_list_f1d2d6.max -> sub_3f7a0f.first\n        min_list_9e5f7c.min -> sub_3f7a0f.second\n        list_6a1f2d -> max_list_f1d2d6.list\n        list_6a1f2d -> min_list_9e5f7c.list\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_8b3f4f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -28, y: 18, name: \"list\") property(List) list_1e8b3f\n\n        out(x: 479, y: 11, name: \"difference\") property(Number) difference_7a2d5c\n\n        instance(x: 188, y: 62) sub_6a0b4c root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 155) max_9e3f8f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: -71) min_7d2b1c root.Std_k98ojb.List.Min {}\n        list_1e8b3f -> max_9e3f8f.list\n        list_1e8b3f -> min_7d2b1c.list\n        max_9e3f8f.max -> sub_6a0b4c.first\n        min_7d2b1c.min -> sub_6a0b4c.second\n        sub_6a0b4c.result -> difference_7a2d5c\n    }\n\n    \n\n    instance(x: 48, y: -11) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_6a3f1e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_7b2c4d\n\n        instance(x: 201, y: 62) sub_9c8a0c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_5e3f1f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_6d2a4c root.Std_k98ojb.List.Min {}\n        list_6a3f1e -> max_5e3f1f.list\n        list_6a3f1e -> min_6d2a4c.list\n        max_5e3f1f.max -> sub_9c8a0c.first\n        min_6d2a4c.min -> sub_9c8a0c.second\n        sub_9c8a0c.result -> output_7b2c4d\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1f3e5e root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 27, name: \"list\") property(List) list_1a9b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") maxlist_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") minlist_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        maxlist_f3b46d.max -> sub_852f2e.first\n        minlist_4d4556.min -> sub_852f2e.second\n        list_1a9b8f -> maxlist_f3b46d.list\n        maxlist_f3b46d.max -> firstitem_870503.item\n        list_1a9b8f -> minlist_4d4556.list\n        minlist_4d4556.min -> firstitem_3078c6.item\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_4a1f8e\n\n        out(x: 546, y: 63, name: \"output\") property(Number) output_5c9d0b\n\n        instance(x: 201, y: 62) sub_6c3c7c root.Std_k98ojb.Math.Sub {}\n        instance(x: -82, y: 155) max_1a2e4f root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521) min_5d9b8c root.Std_k98ojb.List.Min {}\n        list_4a1f8e -> max_1a2e4f.list\n        list_4a1f8e -> min_5d9b8c.list\n        max_1a2e4f.max -> sub_6c3c7c.first\n        min_5d9b8c.min -> sub_6c3c7c.second\n        sub_6c3c7c.result -> output_5c9d0b\n    }\n\n    \n\n    instance(x: 48, y: 11) diff_max_min_1a2e4f root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -299, y: 145, name: \"list\") property(List) list_6e8b3f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: -49, y: 372) max_1a0d5c root.Std_k98ojb.List.Max {}\n        instance(x: -318, y: 521, name: \"min list\") min_list_4e7f9f root.Std_k98ojb.List.Min {}\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        list_6e8b3f -> max_1a0d5c.list\n        list_6e8b3f -> min_list_4e7f9f.list\n        max_1a0d5c.max -> sub_852f2e.first\n        min_list_4e7f9f.min -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff_max_min {\n        in(x: -33, y: 11, name: \"list\") property(List) list_1a0b8f\n\n        out(x: 443, y: 427, name: \"difference\") property(Number) difference_57c890\n\n        instance(x: 188, y: 425) sub_852f2e root.Std_k98ojb.Math.Sub {}\n        instance(x: -319, y: 358, name: \"Max list\") max_list_f3b46d root.Std_k98ojb.List.Max {}\n        instance(x: -49, y: 372) firstitem_870503 root.Std_k98ojb.List.FirstItem {}\n        instance(x: -318, y: 521, name: \"Min list\") min_list_4d4556 root.Std_k98ojb.List.Min {}\n        instance(x: -48, y: 517) firstitem_3078c6 root.Std_k98ojb.List.FirstItem {}\n        max_list_f3b46d.list -> list_1a0b8f\n        min_list_4d4556.list -> list_1a0b8f\n        max_list_f3b46d.max -> firstitem_870503.list\n        min_list_4d4556.min -> firstitem_3078c6.list\n        firstitem_870503.item -> sub_852f2e.first\n        firstitem_3078c6.item -> sub_852f2e.second\n        sub_852f2e.result -> difference_57c890\n    }\n\n    \n\n    instance(x: -67, y: -37) diff_max_min_f21f44 root.main.diff_max_min {}\n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a1d5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9e3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a1d5c.value\n        2 -> modulo_7a1d5c.divisor\n        modulo_7a1d5c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9e3f2f.left\n        0 -> equal_9e3f2f.right\n        equal_9e3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d0f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e1c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f6d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e1c0a.value\n        2 -> modulo_7e1c0a.divisor\n        modulo_7e1c0a.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f6d4f.left\n        0 -> equal_9f6d4f.right\n        equal_9f6d4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e4d5c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1a0c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f2d3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1a0c7e.value\n        2 -> modulo_1a0c7e.divisor\n        modulo_1a0c7e.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f2d3f.left\n        0 -> equal_9f2d3f.right\n        equal_9f2d3f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n        if_07b8c7.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5a1d4e root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a6c1e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_2d9f4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a6c1e.value\n        2 -> modulo_7a6c1e.divisor\n        modulo_7a6c1e.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_2d9f4f.left\n        0 -> equal_2d9f4f.right\n        equal_2d9f4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e6d2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 356, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e5a2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_3f9d0c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        input_f5c03d -> modulo_1e5a2c.value\n        2 -> modulo_1e5a2c.divisor\n        modulo_1e5a2c.result -> expression_b720d7.gen_0\n        0 -> equal_3f9d0c.right\n        expression_b720d7.result -> equal_3f9d0c.left\n        equal_3f9d0c.result -> if_e19a62.predicate\n        modulo_1e5a2c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        if_e19a62.then -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_1e5a2c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_0a1c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f3e5c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_0a1c6d.value\n        2 -> modulo_0a1c6d.divisor\n        modulo_0a1c6d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f3e5c.left\n        0 -> equal_9f3e5c.right\n        equal_9f3e5c.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5d4e1c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7e5c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_1a2f9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7e5c6d.value\n        2 -> modulo_7e5c6d.divisor\n        modulo_7e5c6d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_1a2f9f.left\n        0 -> equal_1a2f9f.right\n        equal_1a2f9f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e6d2f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1a0c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9d3f2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1a0c7e.value\n        2 -> modulo_1a0c7e.divisor\n        modulo_1a0c7e.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9d3f2f.left\n        0 -> equal_9d3f2f.right\n        equal_9d3f2f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5d1e4c root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 353, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_7a5c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_0e3f9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_7a5c6d.value\n        2 -> modulo_7a5c6d.divisor\n        modulo_7a5c6d.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        0 -> equal_0e3f9f.right\n        modulo_7a5c6d.result -> equal_0e3f9f.left\n        equal_0e3f9f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n        if_e19a62.else -> continue_8ba06b\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_0e6d4f root.main.is_even {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given number is even or not.\") is_even {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) modulo_1e5a6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) equal_9f2d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1121, y: -54) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_f5c03d -> modulo_1e5a6c.value\n        2 -> modulo_1e5a6c.divisor\n        modulo_1e5a6c.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> equal_9f2d4f.left\n        0 -> equal_9f2d4f.right\n        equal_9f2d4f.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        1 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        if_e19a62.else -> if_07b8c7.execute\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_even_5e4d1f root.main.is_even {}\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_1\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_2\n\n        instance(x: 0, y: 0) find_3 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_4\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_5\n\n            instance(x: 89, y: 29) contains_6 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_7 root.Std_k98ojb.Logic.NotEqual {}\n            input_1 -> contains_6.input\n            elem_4 -> contains_6.contains\n            contains_6.result -> notequal_7.left\n            find_3.item -> notequal_7.right\n            notequal_7.result -> bool_5\n        } -> find_3.predicate\n        instance(x: 0, y: -1) characters_8 root.Std_k98ojb.Strings.Characters {}\n        input_1 -> characters_8.input\n        characters_8.characters -> find_3.items\n        find_3.item -> output_2\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_char_9 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_4a3f8c root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_7e1ce0 root.Std_k98ojb.Iteration.Filter {}\n        characters_4a3f8c.output -> find_6d05b0.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_d42dce.input\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_af09a7\n        } -> filter_7e1ce0.handler\n        find_6d05b0.item -> filter_7e1ce0.items\n        filter_7e1ce0.output_list -> output_0\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -280, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 600, y: -2, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_4a7b6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_8e3c9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``Find repeated character_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_4a7b6f.output -> find_8e3c9d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3e8b6c root.Std_k98ojb.Strings.Contains {}\n            find_8e3c9d.output -> contains_3e8b6c.input\n            elem_9f6850 -> contains_3e8b6c.contains\n            contains_3e8b6c.result -> bool_af09a7\n        } -> find_8e3c9d.predicate\n        characters_4a7b6f.output -> ``Find repeated character_1``.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_3e8b6c root.Std_k98ojb.Strings.Contains {}\n            find_8e3c9d.output -> contains_3e8b6c.input\n            elem_9f6850 -> contains_3e8b6c.contains\n            contains_3e8b6c.result -> bool_af09a7\n        } -> ``Find repeated character_1``.predicate\n        find_8e3c9d.item -> output_ebef81\n        input_0 -> characters_4a7b6f.input\n    }\n\n    \n\n    instance(x: 80, y: 52) FirstRepeatedChar_5f2a root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -290, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3a8c6f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_7e9d4f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) filter_5f1b0f root.Std_k98ojb.Iteration.Filter {}\n        characters_3a8c6f.output -> find_7e9d4f.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e5b6c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            characters_3a8c6f.output -> contains_2e5b6c.list\n            elem_9f6850 -> contains_2e5b6c.input\n            contains_2e5b6c.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_7e9d4f.predicate\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2e5b6c root.Std_k98ojb.Strings.Contains {}\n            characters_3a8c6f.output -> contains_2e5b6c.list\n            elem_9f6850 -> contains_2e5b6c.input\n            contains_2e5b6c.result -> bool_af09a7\n        } -> filter_5f1b0f.handler\n        find_7e9d4f.item -> output_0\n        filter_5f1b0f.output_list -> characters_3a8c6f.input\n        input_0 -> characters_3a8c6f.input\n    }\n\n    \n\n    instance(x: 81, y: 52) FirstRepeatedChar_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 1) characters_2e1444 root.Std_k98ojb.Strings.Characters {}\n        instance(x: -39, y: 26, name: \"First repeated character\") find_de624f root.Std_k98ojb.Iteration.Find {}\n        instance(x: 532, y: 147) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n        characters_2e1444.output -> find_de624f.items\n        input_0 -> characters_2e1444.input\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) slice_45e806 root.Std_k98ojb.List.Slice {}\n            instance(x: 415, y: 86) notequal_a54bdc root.Std_k98ojb.Logic.NotEqual {}\n            current_afd5b1 -> slice_45e806.start\n            find_de624f.index + 1 -> slice_45e806.end\n            characters_2e1444.output -> slice_45e806.list\n            slice_45e806.output -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_a54bdc.left\n            false -> notequal_a54bdc.right\n            notequal_a54bdc.result -> bool_1eb6e9\n        } -> find_de624f.predicate\n        find_de624f.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -277, y: 166, name: \"string\") property(String) input_0\n\n        out(x: 800, y: 145, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 46, y: -383, name: \"first repeated char\") find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        instance(x: 62, y: -226, name: \"seen\") List_1c8f2e root.Std_k98ojb.List.Empty {}\n        input_0 -> find_6d05b0.items\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            contains_d42dce.input -> seen_0\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        instance(x: 532, y: 147) add_3c7a8f root.Std_k98ojb.List.Add {}\n        seen_0 -> add_3c7a8f.list\n        find_6d05b0.item -> add_3c7a8f.item\n        add_3c7a8f.listWithItem -> seen_1\n        func() {\n            in(x: -192, y: 84, name: \"current\") property(String) current_afd5b1\n\n            out(x: 698, y: 85, name: \"bool\") property(Bool) bool_1eb6e9\n\n            instance(x: 112, y: 80) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            seen_1 -> contains_d42dce.input\n            current_afd5b1 -> contains_d42dce.contains\n            contains_d42dce.result -> bool_1eb6e9\n        } -> find_6d05b0.predicate\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: -291, y: 177) first_repeated_char_f53d27 root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -285, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"output\") property(Any) output_0\n\n        instance(x: 0, y: 1) characters_3e4b7f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 265, y: 0) find_5a6c9d root.Std_k98ojb.Iteration.Find {}\n        instance(x: 530, y: -2) ``find_5a6c9d_1`` root.Std_k98ojb.Iteration.Find {}\n        characters_3e4b7f.output -> find_5a6c9d.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b6c5d root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2b6c5d.input\n            elem_9f6850 -> contains_2b6c5d.contains\n            contains_2b6c5d.result -> bool_af09a7\n        } -> find_5a6c9d.predicate\n        instance(x: 530, y: -2) ``characters_3e4b7f_1`` root.Std_k98ojb.Strings.Characters {}\n        characters_3e4b7f.output -> ``find_5a6c9d_1``.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_2b6c5d root.Std_k98ojb.Strings.Contains {}\n            input_0 -> contains_2b6c5d.input\n            elem_9f6850 -> contains_2b6c5d.contains\n            contains_2b6c5d.result -> bool_af09a7\n        } -> ``find_5a6c9d_1``.predicate\n        input_0 -> characters_3e4b7f.input\n        find_5a6c9d.item -> output_0\n        ``characters_3e4b7f_1``.output -> ``find_5a6c9d_1``.items\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_e54b7f root.main.first_repeated_char {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the first repeated character in a given string.\") first_repeated_char {\n        in(x: -284, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 593, y: -1, name: \"output\") property(Any) output_ebef81\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n            in(x: -113, y: 54, name: \"index\") property(Number) index_8c7d6e\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_d42dce root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) notequal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            input_0 -> contains_d42dce.input\n            index_8c7d6e -> contains_d42dce.index\n            elem_9f6850 -> contains_d42dce.contains\n            contains_d42dce.result -> notequal_807ffd.left\n            0 -> notequal_807ffd.right\n            notequal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        instance(x: -39, y: 26) characters_1e3c2f root.Std_k98ojb.Strings.Characters {}\n        input_0 -> characters_1e3c2f.input\n        characters_1e3c2f.characters -> find_6d05b0.items\n        find_6d05b0.item -> output_ebef81\n    }\n\n    \n\n    instance(x: 81, y: 52) first_repeated_char_f15bad root.main.first_repeated_char {}\n\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -454) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -420) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -453) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -423) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -454) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -403) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -193, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -453) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the second smallest number in a list.\") second_smallest {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        instance(x: 426, y: -454) list_remove_node root.Std_k98ojb.List.Remove {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> list_remove_node.item\n        list_remove_node.listWithoutItem -> list_min_node.items\n        list_min_node.min -> second_min_ai\n    }\n\n    \n\n    instance(x: 426, y: -303) second_smallest_node root.main.second_smallest {}\n\n    \n}"
            ]
        }
    }
]