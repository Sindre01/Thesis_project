[
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 3,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 4982,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d3a6\n\n        instance(x: 133, y: -131) filter_1e5f8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e5f8b.items\n        list2_c62075 -> filter_1e5f8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c7a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e5f8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d4c7a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e4d3a6\n        } -> filter_1e5f8b.handler\n        filter_1e5f8b.done -> common_e4d3a6\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0c9d4\n\n        instance(x: 133, y: -131) filter_3e8f1 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_3e8f1.items\n        list2_c62075 -> filter_3e8f1.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d7c9a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_3e8f1.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_4d7c9a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If.else -> common_e0c9d4\n        } -> filter_3e8f1.handler\n        filter_3e8f1.done -> common_e0c9d4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e5d4c9\n\n        instance(x: 133, y: -131) filter_1a3e8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a3e8b.items\n        list2_c62075 -> filter_1a3e8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d5c7d\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a3e8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> Std_k98ojb.Std.IfExpression.item == item_4d5c7d\n            Std_k98ojb.Std.If.then -> result_e245cb\n        } -> filter_1a3e8b.handler\n        filter_1a3e8b.done -> common_e5d4c9\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0d4c9\n\n        instance(x: 133, y: -131) filter_1a8f5b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a8f5b.items\n        list2_c62075 -> filter_1a8f5b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c6e\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a8f5b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d4c6e\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e0d4c9\n        } -> filter_1a8f5b.handler\n        filter_1a8f5b.done -> common_e0d4c9\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0c9d4\n\n        instance(x: 133, y: -131) filter_3e8f1 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_3e8f1.items\n        list2_c62075 -> filter_3e8f1.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_5d4c6a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_3e8f1.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_5d4c6a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If.else -> common_e0c9d4\n        } -> filter_3e8f1.handler\n        filter_3e8f1.done -> common_e0c9d4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d5c6\n\n        instance(x: 133, y: -131) filter_1a9e8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a9e8b.items\n        list2_c62075 -> filter_1a9e8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d6c4d\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a9e8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d6c4d\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e4d5c6\n        } -> filter_1a9e8b.handler\n        filter_1a9e8b.done -> common_e4d5c6\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0d4a3\n\n        instance(x: 133, y: -131) filter_1e5f8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e5f8b.items\n        list2_c62075 -> filter_1e5f8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d6c9a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e5f8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_4d6c9a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e0d4a3\n        } -> filter_1e5f8b.handler\n        filter_1e5f8b.done -> common_e0d4a3\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d5c6\n\n        instance(x: 133, y: -131) filter_1a9e3b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a9e3b.items\n        list2_c62075 -> filter_1a9e3b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d7c5d\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a9e3b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> Std_k98ojb.Std.IfExpression.item == item_4d7c5d\n            Std_k98ojb.Std.If.then -> result_e245cb\n        } -> filter_1a9e3b.handler\n        filter_1a9e3b.done -> common_e4d5c6\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0d4a3\n\n        instance(x: 133, y: -131) filter_1c7f6b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1c7f6b.items\n        list2_c62075 -> filter_1c7f6b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4e5a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1c7f6b.output_list -> Std_k98ojb.Std.If.input\n            Std_k98ojb.Std.If.value -> item_0d4e5a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If.else -> common_e0d4a3\n        } -> filter_1c7f6b.handler\n        filter_1c7f6b.done -> common_e0d4a3\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0c9d4\n\n        instance(x: 133, y: -131) filter_3a5f8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_3a5f8b.items\n        list2_c62075 -> filter_3a5f8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d6c9e\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_3a5f8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_4d6c9e\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e0c9d4\n        } -> filter_3a5f8b.handler\n        filter_3a5f8b.done -> common_e0c9d4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9f2d6a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b1e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_1c6f5d -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9f2d6a root.main.is_consecutive_9f2d6a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d3f6a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c4e2d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b1e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -30, y: -25",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_6f8d4a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_1b3e2d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c0c5d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -25) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_1b3e2d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            current_81298e + 1 -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> output_7c0c5d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_6f8d4a root.main.is_consecutive_6f8d4a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d4a3f {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e2d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c6f5d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b1e2d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -30, y: -25",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9f6d5a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e4d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b1e4d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_0c6f2d.root = root.Std_k98ojb.For()\n        for_0c6f2d.instance(x: 1058, y: -203) next_9a4e5b root.Std_k98ojb.For.next {}\n        for_0c6f2d.instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        for_0c6f2d.instance(x: 463, y: 51) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n        for_0c6f2d.instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n        for_0c6f2d.instance(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n        for_0c6f2d.instance(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n        out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n        instance(x: 226, y: 56) modulo_c76d2b.root.Std_k98ojb.Math.Modulo {}\n        instance(x: 463, y: 51) notequal_cb8a55.root.Std_k98ojb.Logic.NotEqual {}\n        for_0c6f2d._index_769593 -> modulo_c76d2b.value\n        1 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_efbc78\n        for_0c6f2d._index_170471 -> modulo_c76d2b.value\n        1 -> modulo_c76d2b.divisor\n        modulo_c76d2b.result -> notequal_cb8a55.left\n        0 -> notequal_cb8a55.right\n        notequal_cb8a55.result -> output_efbc78\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9f6d5a root.main.is_consecutive_()\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_4a3d8f {\n        in(x: -527, y: -214, name: \"list\") property(List) list_1b9e2e\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c5f6d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -25) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_1b9e2e -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            _index_769593 + 1 -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.result -> output_7c5f6d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_4a3d8f root.main.is_consecutive_4a3d8f {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d4a3f {\n        in(x: -527, y: -214, name: \"list\") property(List) list_1b9e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c0c6d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -25) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_1b9e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            current_81298e + 1 -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> output_7c0c6d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_8d4a3f {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_4f8d0a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_1b3e9d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_5c7d6d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_1b3e9d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_4f8d0a root.main.is_consecutive_()\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d4a3f {\n        in(x: -527, y: -214, name: \"list\") property(List) list_1b5e9d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c6d2d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -23) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_1b5e9d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            _index_769593 + 1 -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.result -> output_7c6d2d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_8d4a3f {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9f8d4a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b5e2d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c6d3d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b5e2d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9f8d4a root.main.is_consecutive_()\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a9f1d4\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9f1d4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9f1d4 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a9d7f1\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d7f1 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d7f1 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 70, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a9d7f1\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d7f1 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d7f1 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a9d4f1c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d4f1c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d4f1c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a8f4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4.input -> input_0\n        \" \" -> replace_d3a8f4.search\n        \":\" -> replace_d3a8f4.replace\n        result_0 -> replace_d3a8f4.value\n\n        instance(x: 265, y: 0) replace_d3a8f4_2 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4_2.input -> input_0\n        \",\" -> replace_d3a8f4_2.search\n        \":\" -> replace_d3a8f4_2.replace\n        result_0 -> replace_d3a8f4_2.value\n\n        instance(x: 421, y: 0) replace_d3a8f4_3 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4_3.input -> input_0\n        \".\" -> replace_d3a8f4_3.search\n        \":\" -> replace_d3a8f4_3.replace\n        result_0 -> replace_d3a8f4_3.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a9e4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9e4.input -> input_0\n        \" \" -> replace_d3a9e4.search\n        \":\" -> replace_d3a9e4.replace\n        result_0 -> replace_d3a9e4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d9d4e3 root.Std_k98ojb.Strings.Replace {}\n        replace_d9d4e3.input -> input_0\n        \" \" -> replace_d9d4e3.search\n        \":\" -> replace_d9d4e3.replace\n        result_0 -> replace_d9d4e3.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3f6e root.Std_k98ojb.Strings.Replace {}\n        replace_d3f6e.input -> input_0\n        \" \" -> replace_d3f6e.search\n        \":\" -> replace_d3f6e.replace\n        result_0 -> replace_d3f6e.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a9f4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f4.input -> input_0\n        \" \" -> replace_d3a9f4.search\n        \":\" -> replace_d3a9f4.replace\n        result_0 -> replace_d3a9f4.value\n\n        instance(x: 265, y: 0) replace_d3a9f42 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f42.input -> input_0\n        \",\" -> replace_d3a9f42.search\n        \":\" -> replace_d3a9f42.replace\n        result_0 -> replace_d3a9f4.value\n\n        instance(x: 421, y: 0) replace_d3a9f43 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f43.input -> input_0\n        \".\" -> replace_d3a9f43.search\n        \":\" -> replace_d3a9f43.replace\n        result_0 -> replace_d3a9f4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d4d7e5 root.Std_k98ojb.Strings.Replace {}\n        replace_d4d7e5.input -> input_0\n        \" \" -> replace_d4d7e5.search\n        \":\" -> replace_d4d7e5.replace\n        result_0 -> replace_d4d7e5.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3f6d root.Std_k98ojb.Strings.Replace {}\n        replace_d3f6d.input -> input_0\n        \" \" -> replace_d3f6d.search\n        \":\" -> replace_d3f6d.replace\n        result_0 -> replace_d3f6d.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d4d7e5 root.Std_k98ojb.Strings.Replace {}\n        replace_d4d7e5.input -> input_0\n        \" \" -> replace_d4d7e5.search\n        \":\" -> replace_d4d7e5.replace\n        result_0 -> replace_d4d7e5.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3f6d root.Std_k98ojb.Strings.Replace {}\n        replace_d3f6d.input -> input_0\n        \" \" -> replace_d3f6d.search\n        \":\" -> replace_d3f6d.replace\n        result_0 -> replace_d3f6d.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a9e4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9e4.input -> input_0\n        \" \" -> replace_d3a9e4.search\n        \":\" -> replace_d3a9e4.replace\n        result_0 -> replace_d3a9e4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_8d6a3f\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_8d6a3f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_8d6a3f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_8d6a3f -> expression_9fba8c.gen_0\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_5f51f7\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_5f51f7[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7.length > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f51f7 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f51f7 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f51f7 -> expression_9fba8c.gen_0\n        input_5f51f7 -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d7e5 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f1d4e6 {\n        in(x: 123, y: -23, name: \"input\") property(String) input_5f2b9a\n        in(x: 189, y: -10, name: \"execute\") trigger() execute_8c0a3d\n\n        out(x: 1, y: 0, name: \"out\") property(Bool) out_f4e7cd\n        out(x: 2, y: 0, name: \"continue\") trigger() continue_9f5b6b\n\n        instance(x: 210, y: -43) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 369, y: 74) contains_f1d4e7 root.Std_k98bj.List.Contains {}\n        instance(x: 534, y: 25) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 711, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 878, y: -54) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 945, y: -187) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1022, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_[0]\"\n        }\n        instance(x: 1094, y: -187) if_07b8c7.execute\n        instance(x: 1161, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> map_6030c9.index\n        input_5f2b9a -> map_6030c9.items\n        map_6030c9.output_list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> contains_f1d4e7.input\n        input_5f2b9a -> contains_f1d4e7.value\n        contains_f1d4e7.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_07b8c7.else -> continue_9f5b6b\n        expression_b720d7.result -> and_80a119.left\n        expression_b720d7.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f4e7cd\n        if_e19a62.then -> continue_9f5b6b\n        for_8cb3f6.done -> continue_9f5b6b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -12, name: \"input\") property(String) input_5f51f7\n        in(x: 189, y: -222, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: -10, name: \"out\") property(Bool) out_d0fd24\n        out(x: 2, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) contains_f11fda root.Std_k98ojb.Strings.Contains {}\n        instance(x: 933, y: 25) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 714, y: -155) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"length(input_5f51f7) == 1\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7[0] == input_5f51f7[1]\"\n        }\n        instance(x: 2136, y: -356) if_e19a62.then -> continue_8ba06b\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        input_5f51f7 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f51f7 -> expression_9fba8c.gen_0\n        input_5f51f7 -> expression_b720d7.gen_0\n        if_e19a62.value -> out_d0fd24\n        contains_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.item -> and_80a119.left\n        input_5f51f7 -> and_80a119.right\n        and_80a119.result -> if_07b8c7.predicate\n        if_07b8c7.execute -> continue_8ba06b\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_07b8c7.else -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 161, y: -211, name: \"input\") property(String) input_5f51f7\n        in(x: 1894, y: 120, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_5f51f7[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7.length() > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f51f7 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f51f7 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f51f7 -> expression_9fba8c.gen_0\n        input_5f51f7 -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d7e5 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -12, name: \"input\") property(String) input_4f8d6e\n        in(x: 189, y: -222, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 0, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) contains_f11fda root.Std_k98ojb.Strings.Contains {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"length(input) == count(input)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"all(it in input for it in characters)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> for_8cb3f6.index\n        input_4f8d6e -> for_8cb3f6.items\n        for_8cb3f6.onItem -> contains_f11fda.input\n        contains_f11fda.value -> and_80a119.left\n        input_4f8d6e -> and_80a119.right\n        and_80a119.result -> if_07b8c7.predicate\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -12, name: \"input\") property(String) input_4d5f8e\n        in(x: 189, y: -210, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 2, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) isnumeric_f1f2d4 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_4d5f8e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> isnumeric_f1f2d4.value\n        input_4d5f8e -> isnumeric_f1f2d4.input\n        isnumeric_f1f2d4.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_4d5f8e -> expression_9fba8c.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d7e5 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_5f51f7\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_f11fda root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == characters_f11fda.value[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"characters_f11fda.value.length > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) and_80a119 root.Std_k98ojb.Logic.And {}\n        1 -> for_8cb3f6.trigger\n        input_5f51f7 -> for_8cb3f6.items\n        for_8cb3f6.item -> if_07b8c7.input\n        characters_f11fda.value -> expression_b720d7.value\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result == \"true\" -> out_f3db9f.value\n        else -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -12, name: \"input\") property(String) input_4d8f2e\n        in(x: 189, y: -10, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: 0, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1, y: 0, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_[0] == it\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_4d8f2e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_4d8f2e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_4d8f2e -> expression_9fba8c.gen_0\n        input_4d8f2e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d7e5 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 161, y: -211, name: \"input\") property(String) input_5f51f7\n        in(x: 1894, y: 120, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_5f51f7[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7.length() > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f51f7 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f51f7 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f51f7 -> expression_9fba8c.gen_0\n        input_5f51f7 -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d4e5 root.main.is_all_characters_same {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_5d4e6b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 3, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_5d4e6b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 0, y: 0, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) square_sum_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1024, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1024, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4a3d0b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c7f8e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a3d0b\n        6 -> Std_k98ojb.Std.IfExpression.input2\n        result_9c7f8e -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        side_length_4a3d0b -> Std_k98ojb.Math.Expression.expression\n        \"6 * (side_length_4a3d0b ^ 2)\" -> Std_k98ojb.Math.Expression.result\n        Std_k98ojb.Math.Expression.result -> result_9c7f8e\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8e4a2d\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9f1c7b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a2d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9f1c7b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Pow {}\n        side_length_8e4a2d -> Std_k98ojb.Math.Pow.x\n        3 -> Std_k98ojb.Math.Pow.y\n        Std_k98ojb.Math.Pow.result -> result_9f1c7b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        result_9f1c7b -> Std_k98ojb.Std.Count.value\n        6 -> Std_k98ojb.Std.Count.reset\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9e4d5a\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_e1f8c6\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9e4d5a\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_9e4d5a\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        Std_k98ojb.Std.Count.reset -> side_length_9e4d5a\n        6 -> Std_k98ojb.Std.Count.count\n        Std_k98ojb.Std.Count.output_list -> surface_area\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * side_length_9e4d5a ^ 2\"\n        result_e1f8c6 -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8d4a3b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_6f2c9e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d4a3b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_8d4a3b\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d4a3b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_8d4a3b\n        12 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_8d4a3b ^ 2)\"\n\n        side_length_8d4a3b -> Std_k98ojb.Math.Expression.x\n        6 -> Std_k98ojb.Math.Expression.y\n\n        result_6f2c9e -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4a5d8e\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c7f6b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a5d8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a5d8e\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a5d8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a5d8e\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_4a5d8e ^ 2)\"\n        result_9c7f6b -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9d4a6b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_e1f8c5\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        side_length_9d4a6b -> Std_k98ojb.Std.IfExpression.input\n        0 -> Std_k98ojb.Std.IfExpression.then\n        6 * (side_length_9d4a6b ^ 2) -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        side_length_9d4a6b -> Std_k98ojb.Math.Expression.expression\n        result_e1f8c5 -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8d4a6b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c7f5e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d4a6b\n        Std_k98ojb.Std.IfExpression.input2 -> 6\n        Std_k98ojb.Std.IfExpression.then -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.else -> null\n\n        instance(x: -92, y: 45) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        side_length_8d4a6b -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> Std_k98ojb.Std.IfExpression.input1\n\n        instance(x: -92, y: 45) mul_3c7f5e root.Std_k98ojb.Math.Mul {}\n        result_9c7f5e -> mul_3c7f5e.x\n        pow_584bfd.result -> mul_3c7f5e.y\n        mul_3c7f5e.result -> result_9c7f5e\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.else -> null\n\n        instance(x: -92, y: 45) add_3c7f5e root.Std_k98ojb.Math.Add {}\n        result_9c7f5e -> add_3c7f5e.x\n        mul_3c7f5e.result -> add_3c7f5e.y\n        add_3c7f5e.result -> result_9c7f5e\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.else -> null\n\n        instance(x: -92, y: 45) add_3c7f5e root.Std_k98ojb.Math.Add {}\n        result_9c7f5e -> add_3c7f5e.x\n        mul_3c7f5e.result -> add_3c7f5e.y\n        add_3c7f5e.result -> result_9c7f5e\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.else -> null\n\n        instance(x: -92, y: 45) add_3c7f5e root.Std_k98ojb.Math.Add {}\n        result_9c7f5e -> add_3c7f5e.x\n        mul_3c7f5e.result -> add_3c7f5e.y\n        add_3c7f5e.result -> result_9c7f5e\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> result_9c7f5e\n        Std_k98ojb.Std.IfExpression.else -> null\n\n        instance(x: -92, y: 45) add_3c7f5e root.Std_k98ojb.Math.Add {}\n        result_9c7f5e -> add_3c7f5e.x\n        mul_3c7f5e.result -> add_3c7f5e.y\n        add_3c7f5e.result -> result_9c7f5e\n\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_nums_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9d4a6b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_8f1c7e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a6b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_9d4a6b\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a6b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_9d4a6b\n        3 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        Std_k98ojb.Std.Count.reset -> side_length_9d4a6b\n        Std_k98ojb.Std.Count.count -> result_8f1c7e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> result_8f1c7e\n        Std_k98ojb.Std.For.reset -> side_length_9d4a6b\n        Std_k98ojb.Std.For.next -> result_8f1c7e\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_8f1c7e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> result_8f1c7e\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Math.Expression {}\n        Std_k98ojb.Std.Math.Expression.expression -> \"6 * pow( side_length_9d4a6b, 2 )\"\n        result_8f1c7e -> Std_k98ojb.Std.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8d4a6b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_5c7f1e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d4a6b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_8d4a6b\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d4a6b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_8d4a6b\n        3 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        Std_k98ojb.Std.Count.reset -> side_length_8d4a6b\n        Std_k98ojb.Std.Count.count -> result_5c7f1e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> result_5c7f1e\n        Std_k98ojb.Std.For.reset -> side_length_8d4a6b\n        Std_k98ojb.Std.For.next -> result_5c7f1e\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Math.Expression {}\n        Std_k98ojb.Std.Math.Expression.expression -> \"6 * (side_length_8d4a6b ^ 2)\"\n        side_length_8d4a6b -> Std_k98ojb.Std.Math.Expression.x\n        result_5c7f1e -> Std_k98ojb.Std.Math.Expression.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_5c7f1e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> result_5c7f1e\n        surface_area_8d4a6b -> Std_k98ojb.Std.IfExpression.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Math.Expression {}\n        surface_area_8d4a6b -> Std_k98ojb.Std.Math.Expression.x\n        result_5c7f1e -> Std_k98ojb.Std.Math.Expression.y\n\n        result_5c7f1e -> surface_area_8d4a6b\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4a6d5b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_8f7c9e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a6d5b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a6d5b\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a6d5b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a6d5b\n        3 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_4a6d5b ^ 2)\"\n\n        side_length_4a6d5b -> Std_k98ojb.Std.IfExpression.input1\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_8f7c9e -> Std_k98ojb.Math.Expression.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_4a6d5b ^ 2)\"\n\n        side_length_4a6d5b -> Std_k98ojb.Std.IfExpression.input1\n        3 -> Std_k98ojb.Std.IfExpression.then\n        result_8f7c9e -> Std_k98ojb.Math.Expression.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_4a6d5b ^ 2)\"\n\n        side_length_4a6d5b -> Std_k98ojb.Std.IfExpression.input1\n        result_8f7c9e -> Std_k98ojb.Math.Expression.result\n\n        instance(x: -92, y: 45) Std_k98ojb.List.GenerateRange {}\n        Std_k98ojb.List.GenerateRange.from -> 0\n        Std_k98ojb.List.GenerateRange.to -> side_length_4a6d5b\n        Std_k98ojb.List.GenerateRange.generate -> result_8f7c9e\n\n        instance(x: -92, y: 45) Std_k98ojb.List.Sort {}\n        Std_k98ojb.List.Sort.compare -> \"0\"\n        Std_k98ojb.List.Sort.sort -> result_8f7c9e\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.Expression(max_ai > min_ai ? max_ai : min_ai),\n            Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n            Std.IfExpression(min_ai == max_ai, 0, min_ai - max_ai)\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { Std.If(\"true\", { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }),\n            b: { Std.If(\"false\", { Std.If(\"true\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { num_ai, \"not even\" }) })\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: 20, y: 77) Std.If.reset {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d3a9f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_6c7e5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e8d6b root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) isnumeric_5f2c0a root.Std_k98ojb.Strings.IsNumeric {}\n            0 -> isnumeric_5f2c0a.right\n            elem_9f6850 -> contains_1e8d6b.input\n            contains_1e8d6b.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4d3a9f -> find_6d05b0.items\n        for_2c5f7d root.Std_k98ojb.Iteration.For {}\n        func() {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_1e8d6b\n\n            out(x: 515, y: 44, name: \"char\") property(Char) char_6c7e5b\n            out(x: 593, y: -1, name: \"str\") property(String) str_4d3a9f_copy_2c5f7d\n\n            instance(x: 89, y: 29) getat_0d8fdd root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) isempty_1e8d6b root.Std_k98ojb.List.IsEmpty {}\n            i_1e8d6b -> getat_0d8fdd.index\n            str_4d3a9f_copy_2c5f7d -> getat_0d8fdd.list\n            getat_0d8fdd.result -> char_6c7e5b\n            isempty_1e8d6b.result -> bool_af09a7\n        } -> for_2c5f7d.trigger\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d6a8f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_4d6a8f -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4d6a8f -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3d4a2e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f6850\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_3d4a2e -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_3d4a2e -> find_6d05b0.items\n        find_6d05b0.item -> char_9f6850\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a3d5b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f7c8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"map\") property(Map) map_3c2d7a\n\n            instance(x: 89, y: 29) contains_1b5e8a root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) tolower_6f9f4b root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 0, y: 0) replace_7d2c3a root.Std_k98ojb.Strings.Replace {}\n            0 -> contains_1b5e8a.item\n            elem_9f6850 -> contains_1b5e8a.value\n            tolower_6f9f4b.input -> replace_7d2c3a.search\n            replace_7d2c3a.replace -> tolower_6f9f4b.value\n            map_3c2d7a -> find_6d05b0.output_list\n        } -> find_6d05b0.predicate\n        str_4a3d5b -> find_6d05b0.items\n        find_6d05b0.item -> char_9f7c8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d6a8f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_4d6a8f -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4d6a8f -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3d4a8e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f6850\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_3d4a8e -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_3d4a8e -> find_6d05b0.items\n        find_6d05b0.item -> char_9f6850\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a3d2b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f6e5c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1b5d4c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_0e8f2b root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_0e8f2b.right\n            contains_1b5d4c.contains -> not_equal_0e8f2b.left\n            elem_9f6850 -> contains_1b5d4c.input\n            not_equal_0e8f2b.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4a3d2b -> find_6d05b0.items\n        find_6d05b0.item -> char_9f6e5c\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3a4d8e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_6f2c5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1b3d4c root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) not_equal_8f2e5b root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_8f2e5b.right\n            contains_1b3d4c.item -> not_equal_8f2e5b.left\n            elem_9f6850 -> contains_1b3d4c.value\n            not_equal_8f2e5b.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_3a4d8e -> find_6d05b0.items\n        find_6d05b0.item -> char_6f2c5b\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a3d2b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f7c8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e3d4 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_0c6f2b root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_0c6f2b.right\n            contains_1e3d4.result -> not_equal_0c6f2b.left\n            elem_9f6850 -> contains_1e3d4.input\n            not_equal_0c6f2b.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4a3d2b -> find_6d05b0.items\n        find_6d05b0.item -> char_9f7c8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d5a3b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f7c2e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"map\") property(Map) map_3bc2ae\n\n            instance(x: 89, y: 29) tolower_1088d5 root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n            0 -> contains_807ffd.contains\n            elem_9f6850 -> contains_807ffd.input\n            tolower_1088d5.result -> map_3bc2ae\n        } -> find_6d05b0.predicate\n        str_4d5a3b -> find_6d05b0.items\n        for_1c7e9f root.Std_k98ojb.Iteration.For {}\n        func() {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_9f6850\n\n            out(x: 515, y: 44, name: \"map\") property(Map) map_3bc2ae\n\n            instance(x: 89, y: 29) tolower_1088d5 root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 310, y: 35) contains_807ffd root.Std_k98ojb.Strings.Contains {}\n            i_9f6850 -> contains_807ffd.index\n            elem_9f6850 -> contains_807ffd.input\n            tolower_1088d5.result -> map_3bc2ae\n        } -> for_1c7e9f.trigger\n        map_3bc2ae -> first_repeated.item\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 75,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 4982,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d3a6\n\n        instance(x: 133, y: -131) filter_1e5f8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e5f8b.items\n        list2_c62075 -> filter_1e5f8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c7a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e5f8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d4c7a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e4d3a6\n        } -> filter_1e5f8b.handler\n        filter_1e5f8b.done -> common_e4d3a6\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d3c9\n\n        instance(x: 133, y: -131) filter_1a6e5b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a6e5b.items\n        list2_c62075 -> filter_1a6e5b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c8d\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a6e5b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> Std_k98ojb.Std.IfExpression.item == item_0d4c8d\n            Std_k98ojb.Std.If.then -> result_e245cb\n        } -> filter_1a6e5b.handler\n        filter_1a6e5b.done -> common_e4d3c9\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e5d4c9\n\n        instance(x: 133, y: -131) filter_3a8f1b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_3a8f1b.items\n        list2_c62075 -> filter_3a8f1b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d6c9e\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_3a8f1b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d6c9e\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e5d4c9\n        } -> filter_3a8f1b.handler\n        filter_3a8f1b.done -> common_e5d4c9\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d7c5\n\n        instance(x: 133, y: -131) filter_1a8f0b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a8f0b.items\n        list2_c62075 -> filter_1a8f0b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_3d4c9e\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a8f0b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> Std_k98ojb.Std.IfExpression.item == item_3d4c9e\n            Std_k98ojb.Std.If.then -> result_e245cb\n        } -> filter_1a8f0b.handler\n        filter_1a8f0b.done -> common_e4d7c5\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0d4c6\n\n        instance(x: 133, y: -131) filter_3a9f8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_3a9f8b.items\n        list2_c62075 -> filter_3a9f8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d5c7e\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_3a9f8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_4d5c7e\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e0d4c6\n        } -> filter_3a9f8b.handler\n        filter_3a9f8b.done -> common_e0d4c6\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d5a3\n\n        instance(x: 133, y: -131) filter_1e8f7 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e8f7.items\n        list2_c62075 -> filter_1e8f7.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d5c6a\n\n            out(x: 245, y: -54, name: \"commonItem\") property(Number) commonItem_4b3e8f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f7.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d5c6a\n            Std_k98ojb.Std.If.then -> commonItem_4b3e9\n            Std_k98ojb.Std.If.else -> null\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f7.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d5c6a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b3ea\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.IfExpression {}\n            filter_1e8f7.output_list -> Std_k98ojb.Std.IfExpression.value\n            Std_k98ojb.Std.IfExpression.expression -> \"list1_1f846b.contains(item_0d5c6a)\"\n            Std_k98ojb.Std.IfExpression.then -> commonItem_4b3ea\n            Std_k98ojb.Std.IfExpression.else -> null\n\n            common_e4d5a3.value = Std_k98ojb.Std.IfExpression.value\n        } -> filter_1e8f7.handler\n        filter_1e8f7.common -> common_e4d5a3\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d3c5\n\n        instance(x: 133, y: -131) filter_1a9e8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a9e8b.items\n        list2_c62075 -> filter_1a9e8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_3d7c4d\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a9e8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c4d\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e4d3c5\n        } -> filter_1a9e8b.handler\n        filter_1a9e8b.done -> common_e4d3c5\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e5d7c4\n\n        instance(x: 133, y: -131) filter_3e8f1 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_3e8f1.items\n        list2_c62075 -> filter_3e8f1.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d7c9a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_3e8f1.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_4d7c9a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If.else -> common_e5d7c4\n        } -> filter_3e8f1.handler\n        filter_3e8f1.done -> common_e5d7c4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0d7a4\n\n        instance(x: 133, y: -131) filter_1e5f8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e5f8b.items\n        list2_c62075 -> filter_1e5f8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c6a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e5f8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d4c6a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e0d7a4\n        } -> filter_1e5f8b.handler\n        filter_1e5f8b.done -> common_e0d7a4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0d7c4\n\n        instance(x: 133, y: -131) filter_1a9e3b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a9e3b.items\n        list2_c62075 -> filter_1a9e3b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d6c7d\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a9e3b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> Std_k98ojb.Std.IfExpression.item == item_4d6c7d\n            Std_k98ojb.Std.If.then -> result_e245cb\n            filter_1a9e3b.output_list -> Std_k98ojb.Std.If.else\n        } -> filter_1a9e3b.handler\n        filter_1a9e3b.done -> common_e0d7c4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 {}\n\n\n}"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9f2d6a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b1e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_1c6f5d -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9f2d6a root.main.is_consecutive_9f2d6a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9f6d4a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b3e2d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b3e2d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_0c6f1d.root.Std_k98ojb.List.For() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_769593 -> modulo_c76d2b.value\n            _index_769593 + 1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        for_0c6f1d.items -> contains_32727d.list\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            current_81298e + 1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        for_0c6f1d.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.input = !contains_32727d.is_contained\n        output_8d07dc = bool_4524be\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9f6d4a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_6d4f8a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b3e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            output_efbc78 -> notequal_7836b4.right\n        } -> contains_32727d.handler\n        list_0b3e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            output_efbc78 -> notequal_cb8a55.right\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_6d4f8a root.main.is_consecutive_6d4f8a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9d6f5a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e4d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b1e4d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_0c7f5d.items -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9d6f5a root.main.is_consecutive_9d6f5a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d4a3f {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b5e2d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b5e2d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        contains_32727d.is_contained -> not_75283f.input\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_8d4a3f {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_4a6f8d {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b3e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c1c2d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b3e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -30, y: -25",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9f6d3a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e4d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b1e4d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_1c7f6d root.Std_k98ojb.For {\n            in(x: -303, y: -205, name: \"i\") property(Number) i_0a5d2d\n            instance(x: 1058, y: -203) next_c3e9f4 root.Std_k98ojb.For.next {}\n            instance(x: 246, y: -209, name: \"item\") property(List) item_6c7c43\n            instance(x: 463, y: 51) is_equal_8d5a2a root.Std_k98ojb.Logic.Equal {}\n            func() {\n                in(x: -30, y: -25, name: \"current_item\") property(Number) current_item_9f6e3c\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                current_item_9f6e3c -> modulo_c76d2b.value\n                1 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_7836b4.left\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> output_efbc78\n            } -> is_equal_8d5a2a.handler\n            item_6c7c43 -> is_equal_8d5a2a.item\n            i_0a5d2d -> is_equal_8d5a2a.i\n        }\n        for_1c7f6d.output_list -> contains_32727d.list\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9f6d3a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_6d4f8a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b3e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c2f1d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -25) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b3e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            _index_769593 + 1 -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> output_7c2f1d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_6d4f8a root.main.is_consecutive_6d4f8a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d6f1a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b9e5c\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c4f2d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b9e5c -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        not_75283f.result -> output_7c4f2d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_8d6f1a root.main.is_consecutive_8d6f1a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d4a9f {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b3e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c6a2d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b3e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_8d4a9f root.main.is_consecutive_()\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a9f1d4\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9f1d4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9f1d4 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a9d4f1c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d4f1c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d4f1c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 70, name: \"sublist\") property(List) sublist_a9d4f1c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d4f1c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d4f1c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a9d7f1\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d7f1 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d7f1 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 70, name: \"sublist\") property(List) sublist_a9d4f1c\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d4f1c -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d4f1c -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a9f1d4\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9f1d4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9f1d4 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a8f4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4.input -> input_0\n        \" \" -> replace_d3a8f4.search\n        \":\" -> replace_d3a8f4.replace\n        result_0 -> replace_d3a8f4.value\n\n        instance(x: 265, y: 0) replace_d3a8f4_2 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4_2.input -> input_0\n        \",\" -> replace_d3a8f4_2.search\n        \":\" -> replace_d3a8f4_2.replace\n        result_0 -> replace_d3a8f4_2.value\n\n        instance(x: 421, y: 0) replace_d3a8f4_3 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4_3.input -> input_0\n        \".\" -> replace_d3a8f4_3.search\n        \":\" -> replace_d3a8f4_3.replace\n        result_0 -> replace_d3a8f4_3.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a9e4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9e4.input -> input_0\n        \" \" -> replace_d3a9e4.search\n        \":\" -> replace_d3a9e4.replace\n        result_0 -> replace_d3a9e4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d9d7e4 root.Std_k98ojb.Strings.Replace {}\n        replace_d9d7e4.input -> input_0\n        \" \" -> replace_d9d7e4.search\n        \":\" -> replace_d9d7e4.replace\n        result_0 -> replace_d9d7e4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3f6e root.Std_k98ojb.Strings.Replace {}\n        replace_d3f6e.input -> input_0\n        \" \" -> replace_d3f6e.search\n        \":\" -> replace_d3f6e.replace\n        result_0 -> replace_d3f6e.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3f6e root.Std_k98ojb.Strings.Replace {}\n        replace_d3f6e.input -> input_0\n        \" \" -> replace_d3f6e.search\n        \":\" -> replace_d3f6e.replace\n        result_0 -> replace_d3f6e.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d4d8e9 root.Std_k98ojb.Strings.Replace {}\n        replace_d4d8e9.input -> input_0\n        \" \" -> replace_d4d8e9.search\n        \":\" -> replace_d4d8e9.replace\n        result_0 -> replace_d4d8e9.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a9f4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f4.input -> input_0\n        \" \" -> replace_d3a9f4.search\n        \":\" -> replace_d3a9f4.replace\n        result_0 -> replace_d3a9f4.value\n\n        instance(x: 265, y: 0) replace_d3a9f42 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f42.input -> input_0\n        \",\" -> replace_d3a9f42.search\n        \":\" -> replace_d3a9f42.replace\n        result_0 -> replace_d3a9f4.value\n\n        instance(x: 421, y: 0) replace_d3a9f43 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f43.input -> input_0\n        \".\" -> replace_d3a9f43.search\n        \":\" -> replace_d3a9f43.replace\n        result_0 -> replace_d3a9f4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d9f6e root.Std_k98ojb.Strings.Replace {}\n        replace_d9f6e.input = [\" \", \",\", \".\"]\n        replace_d9f6e.replace = \":\"\n        input_0 -> replace_d9f6e.input\n        result_0 -> replace_d9f6e.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a8f4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4.input -> input_0\n        \" \" -> replace_d3a8f4.search\n        \":\" -> replace_d3a8f4.replace\n        result_0 -> replace_d3a8f4.value\n\n        instance(x: 265, y: 0) replace_d3a8f4_2 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4_2.input -> input_0\n        \",\" -> replace_d3a8f4_2.search\n        \":\" -> replace_d3a8f4_2.replace\n        result_0 -> replace_d3a8f4_2.value\n\n        instance(x: 421, y: 0) replace_d3a8f4_3 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4_3.input -> input_0\n        \".\" -> replace_d3a8f4_3.search\n        \":\" -> replace_d3a8f4_3.replace\n        result_0 -> replace_d3a8f4_3.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3f5a9 root.Std_k98ojb.Strings.Replace {}\n        replace_d3f5a9.input -> input_0\n        \" \" -> replace_d3f5a9.search\n        \":\" -> replace_d3f5a9.replace\n        result_0 -> replace_d3f5a9.value\n\n        instance(x: 265, y: 0) replace_d3f5a92 root.Std_k98ojb.Strings.Replace {}\n        replace_d3f5a92.input -> input_0\n        \",\" -> replace_d3f5a92.search\n        \":\" -> replace_d3f5a92.replace\n        result_0 -> replace_d3f5a92.value\n\n        instance(x: 421, y: 0) replace_d3f5a93 root.Std_k98ojb.Strings.Replace {}\n        replace_d3f5a93.input -> input_0\n        \".\" -> replace_d3f5a93.search\n        \":\" -> replace_d3f5a93.replace\n        result_0 -> replace_d3f5a93.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_8d6a3f\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_8d6a3f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_8d6a3f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_8d6a3f -> expression_9fba8c.gen_0\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_5f51f7\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_5f51f7[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7.length > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f51f7 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f51f7 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f51f7 -> expression_9fba8c.gen_0\n        input_5f51f7 -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d7e5 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f1d8e4 {\n        in(x: 0, y: -0, name: \"input\") property(String) input_5f9b3a\n        in(x: 0, y: -0, name: \"execute\") trigger() execute_6c2d7d\n\n        out(x: 1, y: -1, name: \"out\") property(Bool) out_4e8f44\n        out(x: 0, y: -0, name: \"continue\") trigger() continue_5b3a9d\n\n        instance(x: 0, y: -0) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: -0) is_same_character_f1f8e6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: -0) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: -0) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_[0]\"\n        }\n        instance(x: 0, y: -0) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: -0) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: -0) expression_a9f2d4 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_[1]\"\n        }\n        instance(x: 0, y: -0) if_07b8c7.execute -> and_80a119.left\n        instance(x: 0, y: -0) if_e19a62.then -> continue_5b3a9d\n        instance(x: 0, y: -0) for_8cb3f6.root -> map_6030c9.items\n        instance(x: 0, y: -0) iter_1e4c7 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -0) expression_b720d7.gen_1 -> iter_1e4c7.handler\n        instance(x: 0, y: -0) if_e19a62.execute -> out_4e8f44\n        instance(x: 0, y: -0) for_8cb3f6.done -> continue_5b3a9d\n        execute_6c2d7d -> map_6030c9.reset\n    }\n\n    \n\n    instance(x: 0, y: -0) is_same_character_f1f8e6 {\n        in(x: 0, y: -0, name: \"element\") property(String) element_5f51f7\n\n        out(x: 0, y: -0, name: \"out\") property(Bool) out_d0fd24\n\n        instance(x: 0, y: -0) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        element_5f51f7 -> mul_2f9d09.first\n        element_5f51f7 -> mul_2f9d09.second\n        mul_2f9d09.result -> out_d0fd24\n    } -> map_6030c9.handler\n\n    \n\n    instance(x: 0, y: -0) iter_1e4c7 {\n        in(x: 0, y: -0, name: \"items\") property(List) items_f5f8d3\n        in(x: 0, y: -0, name: \"handler\") property(Function) handler_f2b9a6\n\n        out(x: 0, y: -0, name: \"output_list\") property(List) output_list_5c7e4d\n    } -> iter_1e4c7.handler\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -321, name: \"input\") property(String) input_5f1d4e\n        in(x: 189, y: -10, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 0, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_[0] == it\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f1d4e -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f1d4e -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f1d4e -> expression_9fba8c.gen_0\n        input_5f1d4e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d4e root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -12, name: \"input\") property(String) input_5f1d8e\n        in(x: 189, y: -210, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 0, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) isnumeric_f11fda root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"length(input_) == count(input_)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_[0] == input_[1]\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        0 -> for_8cb3f6.index\n        input_5f1d8e -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 0, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> isnumeric_f11fda.input\n        input_5f1d8e -> isnumeric_f11fda.value\n        isnumeric_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f1d8e -> expression_9fba8c.gen_0\n        input_5f1d8e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -23, name: \"input\") property(String) input_5f51f7\n        in(x: 189, y: -10, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: 0, name: \"out\") property(Bool) out_d0fd24\n        out(x: 2, y: 0, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == it.next\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"it == it.prev\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f51f7 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f51f7 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f51f7 -> expression_9fba8c.gen_0\n        input_5f51f7 -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_d0fd24\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d7e5 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 161, y: -211, name: \"input\") property(String) input_5f51f7\n        in(x: 1894, y: 120, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_5f51f7[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7.length() > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f51f7 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f51f7 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f51f7 -> expression_9fba8c.gen_0\n        input_5f51f7 -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d7e5 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f1d4e5 {\n        in(x: 123, y: -12, name: \"input\") property(String) input_8f2a3b\n        in(x: 189, y: -10, name: \"execute\") trigger() execute_6c7d9d\n\n        out(x: 1, y: -11, name: \"out\") property(Bool) out_e5e4ac\n        out(x: 2, y: -8, name: \"continue\") trigger() continue_3f0a95\n\n        instance(x: 201, y: -43) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 394, y: 74) contains_f1d4e5 root.Std_k98ojb.Strings.Contains {}\n        instance(x: 567, y: 25) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 742, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 923, y: -54) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1114, y: -187) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1501, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input.length > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62.then -> continue_3f0a95\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> map_6030c9.index\n        input_8f2a3b -> map_6030c9.items\n        map_6030c9.output_list -> for_8cb3f6.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> contains_f1d4e5.input\n        input_8f2d3b -> contains_f1d4e5.contains\n        contains_f1d4e5.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_07b8c7.else -> continue_3f0a95\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_8f2a3b -> expression_9fba8c.gen_0\n        input_8f2a3b -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_e5e4ac\n        if_e19a62.then -> continue_3f0a95\n        for_8cb3f6.done -> continue_3f0a95\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f1d4e5_f0be66 root.main.is_all_characters_same_f1d4e5 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -456, name: \"input\") property(String) input_4f5d6e\n        in(x: 789, y: -321, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 0, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_2f1d4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) contains_f11fda root.Std_k98ojbj.Std.If {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"length == count\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"all(it == characters)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> for_8cb3f6.index\n        input_4f5d6e -> characters_2f1d4a.input\n        characters_2f1d4a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) contains_f11fda root.Std_k98ojb.Std.If {}\n            element_5f51f7 -> contains_f11fda.input\n            characters_2f1d4a.characters -> contains_f11fda.contains\n            contains_f11fda.result -> out_d0fd24\n\n            instance(x: 106, y: 17) if_07b8c7 root.Std_k98ojb.Std.If {}\n            element_5f51f7 -> if_07b8c7.input\n            map_6030c9.items -> if_07b8c7.execute\n            if_07b8c7.else -> continue_8ba06b\n\n            instance(x: 106, y: 17) expression_b720d7 root.Std_k98ojb.Math.Expression {\n                expression: \"length == count\"\n            }\n            map_6030c9.items -> expression_b720d7.gen_1\n            expression_b720d7.result -> and_80a119.left\n\n            instance(x: 106, y: 17) expression_9fba8c root.Std_k98ojb.Math.Expression {\n                expression: \"all(it == characters)\"\n            }\n            map_6030c9.items -> expression_9fba8c.gen_1\n            expression_9fba8c.result -> and_80a119.right\n\n            instance(x: 106, y: 17) if_e19a62 root.Std_k98ojb.Std.If {}\n            and_80a119.result -> if_e19a62.predicate\n            map_6030c9.items -> if_e19a62.execute\n            if_e19a62.then -> continue_8ba06b\n\n            instance(x: 106, y: 17) add_b4554f root.Std_k98ojb.Math.Add {}\n            and_80a119.result -> add_b4554f.first\n            map_6030c9.items -> add_b4554f.second\n            add_b4554f.result -> expression_b720d7.gen_2\n\n            instance(x: 106, y: 17) if_e19a62 root.Std_k98ojb.Std.If {}\n            expression_b720d7.result -> if_e19a62.execute\n            map_6030c9.items -> if_e19a62.then\n            if_e19a62.else -> continue_8ba06b\n\n            instance(x: 106, y: 17) add_b4554f root.Std_k98ojb.Math.Add {}\n            expression_b720d7.result -> add_b4554f.first\n            map_6030c9.items -> add_b4554f.second\n            add_b4554f.result -> expression_9fba8c.gen_2\n\n            instance(x: 106, y: 17) if_e19a62 root.Std_k98ojb.Std.If {}\n            expression_9fba8c.result -> if_e19a62.execute\n            map_6030c9.items -> if_e19a62.then\n            if_e19a62.else -> continue_8ba06b\n\n            instance(x: 106, y: 17) add_b4554f root.Std_k98ojb.Math.Add {}\n            expression_9fba8c.result -> add_b4554f.first\n            map_6030c9.items -> add_b4554f.second\n            add_b4554f.result -> out_d0fd24\n\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> contains_f11fda.input\n        input_4f5d6e -> contains_f11fda.contains\n        contains_f11fda.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_2f1d4a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) contains_f11fda root.Std_k98ojbj.Std.If {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"length == count\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"all(it == characters)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> for_8cb3f6.index\n        input_4f5d6e -> characters_2f1d4a.input\n        characters_2f1d4a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) contains_f11fda root.Std_k98ojb.Std.If {}\n            element_5f51f7 -> contains_f11fda.input\n            characters_2f1d4a.characters -> contains_f11fda.contains\n            contains_f11fda.result -> out_d0fd24\n\n            instance(x: 106, y: 17) if_07b8c7 root.Std_k98ojb.Std.If {}\n            element_5f51f7 -> if_07b8c7.input\n            map_6030c9.items -> if_07b8c7.execute\n            if_07b8c7.else -> continue_8ba06b\n\n            instance(x: 106, y: 17) expression_b720d7",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -456, name: \"input\") property(String) input_5f51f7\n        in(x: 189, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: -10, name: \"out\") property(Bool) out_d0fd24\n        out(x: 2, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) contains_f11fda root.Std_k98ojb.Strings.Contains {}\n        instance(x: 933, y: 25) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 714, y: -155) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) stringstolower_f07b8c7 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"all(it == tolower(it))\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(it != tolower(it)) or (it == tolower(it))\"\n        }\n        instance(x: 2136, y: -356) if_e19a62.else -> for_8cb3f6.next\n        instance(x: 1088, y: -256) and_80a119.left -> stringstolower_f07b8c7.input\n        input_5f51f7 -> stringstolower_f07b8c7.input\n        stringstolower_f07b8c7.result -> expression_b720d7.gen_1\n        stringstolower_f07b8c7.result -> expression_9fba8c.gen_1\n        if_e19a62.then -> continue_8ba06b\n        contains_f11fda.value -> out_d0fd24\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_5d4e8b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 3, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_5d4e8b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_5f6d4b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 3, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_5f6d4b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1024, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 0, y: 0, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) square_sum_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1024, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1024, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 0, y: 0, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) square_sum_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4a3d0b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c7f8e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a3d0b\n        6 -> Std_k98ojb.Std.IfExpression.input2\n        result_9c7f8e -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        side_length_4a3d0b -> Std_k98ojb.Math.Expression.expression\n        \"6 * (side_length_4a3d0b ^ 2)\" -> Std_k98ojb.Math.Expression.result\n        Std_k98ojb.Math.Expression.result -> result_9c7f8e\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4a5d6e\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c8f2b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a5d6e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a5d6e\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a5d6e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a5d6e\n        3 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_4a5d6e ^ 2)\"\n\n        side_length_4a5d6e -> Std_k98ojb.Std.IfExpression.handler\n        result_9c8f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9c8f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        Std_k98ojb.Math.Add.first -> result_9c8f2b\n        0 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9d4a8e\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_1c7f2b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_1c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Pow {}\n        side_length_9d4a8e -> Std_k98ojb.Math.Pow.x\n        3 -> Std_k98ojb.Math.Pow.y\n        Std_k98ojb.Math.Pow.result -> result_1c7f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_1c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_1c7f2b -> Std_k98ojb.Math.Add.first\n        result_1c7f2b -> Std_k98ojb.Math.Add.second\n        result_1c7f2b -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_1c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_1c7f2b -> Std_k98ojb.Math.Add.first\n        result_1c7f2b -> Std_k98ojb.Math.Add.second\n        result_1c7f2b -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_1c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_1c7f2b -> Std_k98ojb.Math.Add.first\n        result_1c7f2b -> Std_k98ojb.Math.Add.second\n        result_1c7f2b -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_1c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_1c7f2b -> Std_k98ojb.Math.Add.first\n        result_1c7f2b -> Std_k98ojb.Math.Add.second\n        result_1c7f2b -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_1c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_1c7f2b -> Std_k98ojb.Math.Add.first\n        result_1c7f2b -> Std_k98ojb.Math.Add.second\n        result_1c7f2b -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_1c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_1c7f2b -> Std_k98ojb.Math.Add.first\n        result_1c7f2b -> Std_k98ojb.Math.Add.second\n        result_1c7f2b -> Std_k98ojb.Math.Add.result\n\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_nums_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4e8d6a\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        side_length_4e8d6a -> Std_k98ojb.Std.IfExpression.input1\n        0 -> Std_k98ojb.Std.IfExpression.then\n        side_length_4e8d6a -> Std_k98ojb.Std.IfExpression.input2\n        6 * (side_length_4e8d6a ** 2) -> Std_k98ojb.Std.IfExpression.value\n        result_cbb7bd -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        side_length_4e8d6a -> Std_k98ojb.Std.Count.reset\n        side_length_4e8d6a -> Std_k98ojb.Std.Count.count\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8e4a3d\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9f6c5b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a3d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9f6c5b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Pow {}\n        side_length_8e4a3d -> Std_k98ojb.Math.Pow.x\n        2 -> Std_k98ojb.Math.Pow.y\n        Std_k98ojb.Math.Pow.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        result_9f6c5b -> Std_k98ojb.Std.Count.input1\n        6 -> Std_k98ojb.Std.Count.reset\n        result_9f6c5b -> Std_k98ojb.Std.Count.count\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Sub {}\n        result_9f6c5b -> Std_k98ojb.Math.Sub.first\n        result_9f6c5b -> Std_k98ojb.Math.Sub.second\n        Std_k98ojb.Math.Sub.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result_9f6c5b -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_9f6c5b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.If {}\n        Std_k98ojb.Std.If.input1 -> result_9f6c5b\n        0 -> Std_k98ojb.Std.If.then\n        result_9f6c5b -> Std_k98ojb.Std.If.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9f6c5b -> Std_k98ojb.Math.Add.first\n        result",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9d5f6a\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_4c7e3b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d5f6a\n        Std_k98ojb.Std.IfExpression.input2 -> 6\n        Std_k98ojb.Std.IfExpression.then -> result_4c7e3b\n        Std_k98ojb.Std.IfExpression.else -> null\n\n        instance(x: -92, y: 45) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        side_length_9d5f6a -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> Std_k98ojb.Std.IfExpression.input1\n\n        instance(x: -92, y: 45) mul_4e8c7b root.Std_k98ojb.Math.Mul {}\n        result_4c7e3b -> mul_4e8c7b.x\n        pow_584bfd.result -> mul_4e8c7b.y\n        mul_4e8c7b.result -> result_4c7e3b\n\n        instance(x: -92, y: 45) add_5f6d1a root.Std_k98ojb.Math.Add {}\n        result_4c7e3b -> add_5f6d1a.x\n        mul_4e8c7b.result -> add_5f6d1a.y\n        add_5f6d1a.result -> result_4c7e3b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_4c7e3b\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> null\n        Std_k98ojb.Std.IfExpression.else -> result_4c7e3b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_4c7e3b\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> null\n        Std_k98ojb.Std.IfExpression.else -> result_4c7e3b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_4c7e3b\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> null\n        Std_k98ojb.Std.IfExpression.else -> result_4c7e3b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_4c7e3b\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> null\n        Std_k98ojb.Std.IfExpression.else -> result_4c7e3b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_4c7e3b\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> null\n        Std_k98ojb.Std.IfExpression.else -> result_4c7e3b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> result_4c7e3b\n        Std_k98ojb.Std.IfExpression.input2 -> null\n        Std_k98ojb.Std.IfExpression.then -> null\n        Std_k98ojb.Std.IfExpression.else -> result_4c7e3b\n\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_nums_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4a5d8e\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c6f2b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a5d8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a5d8e\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a5d8e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a5d8e\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_4a5d8e ^ 2)\"\n        result_9c6f2b -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9d4a3b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_5c7f8e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a3b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_9d4a3b\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d4a3b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_9d4a3b\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_9d4a3b ^ 2)\"\n\n        side_length_9d4a3b -> Std_k98ojb.Math.Expression.x\n        6 -> Std_k98ojb.Math.Expression.y\n\n        result_5c7f8e -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8e3d5b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_4a2f1c\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e3d5b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_8e3d5b\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) surface_area_b9ff6b root.surface_area {}\n        in(x: -121, y: -37, name: \"side_length\") property(Number) side_length_8e3d5b\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e3d5b\n        0 -> surface_area_b9ff6b.side_length\n        in(x: -92, y: 45, name: \"side_length\") property(Number) side_length_8e3d5b\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_8e3d5b\n        6 -> surface_area_b9ff6b.side_length\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length ^ 2)\"\n        side_length_8e3d5b -> Std_k98ojb.Math.Expression.inputs[0]\n        result_4a2f1c -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8d5f1a\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_4c6e2b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d5f1a\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_8f7c6e\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        Std_k98ojb.Std.Count.reset -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.Count.count\n        6 -> Std_k98ojb.Std.Count.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.then\n        side_length_8d5f1a -> Std_k98ojb.Std.For.items\n        0 -> Std_k98ojb.Std.For.reset\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.For {}\n        Std_k98ojb.Std.For.trigger -> Std_k98ojb.Std.IfExpression.else\n        side_length"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.Expression(max_ai > min_ai ? max_ai : min_ai),\n            Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n            Std.IfExpression(min_ai == max_ai, 0, min_ai - max_ai)\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.Expression(max_ai > min_ai ? max_ai : min_ai),\n            Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n            Std.IfExpression(min_ai == max_ai, 0, min_ai - max_ai)\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { Std.If(\"true\", { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }),\n            b: { Std.If(\"false\", { Std.If(\"true\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { num_ai, \"not even\" }) })\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: 20, y: 77) Std.If.reset {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { Std.If(\"true\", { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }),\n            b: { Std.If(\"false\", { Std.If(\"true\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { num_ai, \"not even\" }) })\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: 20, y: 77) Std.If.reset {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d3a9f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_6c7e5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e8d6b root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) isnumeric_5f2c0a root.Std_k98ojb.Strings.IsNumeric {}\n            0 -> isnumeric_5f2c0a.right\n            elem_9f6850 -> contains_1e8d6b.input\n            contains_1e8d6b.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4d3a9f -> find_6d05b0.items\n        for_2c5f7d root.Std_k98ojb.Iteration.For {}\n        func() {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_1e8d6b\n\n            out(x: 515, y: 44, name: \"char\") property(Char) char_6c7e5b\n            out(x: 593, y: -1, name: \"str\") property(String) str_4d3a9f_copy_2c5f7d\n\n            instance(x: 89, y: 29) getat_0d8fdd root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) isempty_1e8d6b root.Std_k98ojb.List.IsEmpty {}\n            i_1e8d6b -> getat_0d8fdd.index\n            str_4d3a9f_copy_2c5f7d -> getat_0d8fdd.list\n            getat_0d8fdd.result -> char_6c7e5b\n            isempty_1e8d6b.result -> bool_af09a7\n        } -> for_2c5f7d.trigger\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3a4d5b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f6c2e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"map\") property(Map) map_3c4d7a\n\n            instance(x: 89, y: 29) contains_1b5e6b root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) tolower_8f2d0b root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 310, y: 35) isnumeric_9c7a3d root.Std_k98ojb.Strings.IsNumeric {}\n            instance(x: 310, y: 35) replace_1e4d6b root.Std_k98ojb.Strings.Replace {}\n            0 -> contains_1b5e6b.item\n            elem_9f6850 -> contains_1b5e6b.value\n            tolower_8f2d0b.input -> str_3a4d5b\n            isnumeric_9c7a3d.input -> replace_1e4d6b.search\n            replace_1e4d6b.replace -> '1'\n            contains_1b5e6b.result -> map_3c4d7a\n        } -> find_6d05b0.predicate\n        str_3a4d5b -> find_6d05b0.items\n        for_2f8e9a root.Std_k98ojb.For -> {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_7c1f43\n\n            out(x: 515, y: 44, name: \"item\") property(String) item_3d4e5a\n            out(x: 593, y: -1, name: \"char\") property(Char) char_9f6c2e\n\n            instance(x: 89, y: 29) getat_8b7d0b root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) notempty_1a3f4d root.Std_k98ojb.List.NotEmpty {}\n            instance(x: 310, y: 35) flatten_9c5e2d root.Std_k98ojb.List.Flatten {}\n            instance(x: 310, y: 35) concat_8f0e6b root.Std_k98ojb.List.Concat {}\n            getat_8b7d0b.index -> i_7c1f43\n            flatten_9c5e2d.items -> concat_8f0e6b\n            concat_8f0e6b.items -> map_3c4d7a\n        } -> for_.on_item\n        for_.done -> char_9f6c2e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3d4a2e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f6850\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_3d4a2e -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_3d4a2e -> find_6d05b0.items\n        find_6d05b0.item -> char_9f6850\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a6d3b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f7c8e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e3d4 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1e3d4.result -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1e3d4.input\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4a6d3b -> find_6d05b0.items\n        find_6d05b0.item -> char_9f7c8e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a3d5b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_6c7f9e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"map\") property(Map) map_1c7d4a\n\n            instance(x: 89, y: 29) tolower_6e8b5 root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 310, y: 35) contains_9f2d0b root.Std_k98ojb.Strings.Contains {}\n            0 -> contains_9f2d0b.contains\n            elem_9f6850 -> tolower_6e8b5.input\n            map_1c7d4a -> contains_9f2d0b.value\n            tolower_6e8b5.result -> char_6c7f9e\n        } -> find_6d05b0.predicate\n        str_4a3d5b -> find_6d05b0.items\n        map_1c7d4a -> char_6c7f9e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3d5a8e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_4c6f2b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"map\") property(Map) map_1a4e2d\n\n            instance(x: 89, y: 29) contains_7c6b3 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) isempty_5f9f0 root.Std_k98ojb.List.IsEmpty {}\n            0 -> isempty_5f9f0.items\n            elem_9f6850 -> contains_7c6b3.item\n            contains_7c6b3.result -> map_1a4e2d\n        } -> find_6d05b0.predicate\n        str_3d5a8e -> find_6d05b0.items\n        for_9fdd95 root.Std_k98ojb.For {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_4c2f7d\n\n            out(x: 515, y: 44, name: \"char\") property(Char) char_4c6f2b\n        } -> for_9fdd95.trigger\n        map_1a4e2d -> for_9fdd95.on_item\n        for_9fdd95.item -> i_4c2f7d\n        for_9fdd95.index -> i_4c2f7d\n        for_9fdd95.next -> for_9fdd95.trigger\n        map_1a4e2d -> for_9fdd95.on_item\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d6a2e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_4d6a2e -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4d6a2e -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3a4d5b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f6c7e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e8d4 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_0c6f5b root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_0c6f5b.right\n            contains_1e8d4.result -> not_equal_0c6f5b.left\n            elem_9f6850 -> contains_1e8d4.input\n            not_equal_0c6f5b.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_3a4d5b -> find_6d05b0.items\n        find_6d05b0.item -> char_9f6c7e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a8d3b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_6f2e5c\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"map\") property(Map) map_3d4a2c\n\n            instance(x: 89, y: 29) contains_6e8b5 root.Std_k98ojb.List.Contains {}\n            instance(x: 310, y: 35) notempty_1f7f0b root.Std_k98ojb.List.NotEmpty {}\n            0 -> notempty_1f7f0b.context\n            elem_9f6850 -> contains_6e8b5.item\n            map_3d4a2c -> contains_6e8b5.value\n            contains_6e8b5.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4a8d3b -> find_6d05b0.items\n        for_1f9f2c root.Std_k98ojb.For {}\n        func() {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_7e5d21\n\n            out(x: 515, y: 44, name: \"char\") property(Char) char_6f2e5c\n            out(x: 515, y: 44, name: \"str\") property(String) str_4a8d3b\n            out(x: -284, y: -1, name: \"result\") property(Char) result_9d7d0c\n\n            instance(x: 89, y: 29) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) notempty_1f7f0b root.Std_k98ojb.List.NotEmpty {}\n            i_7e5d21 -> find_6d05b0.index\n            str_4a8d3b -> find_6d05b0.item\n            map_3d4a2c -> find_6d05b0.value\n            notempty_1f7f0b.context -> find_6d05b0.predicate\n        } -> for_1f9f2c.trigger\n        if_5e8f1 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Char) elem_9f6850\n\n            out(x: 515, y: 44, name: \"char\") property(Char) char_6f2e5c\n            out(x: 515, y: 44, name: \"str\") property(String) str_4a8d3b\n            out(x: -284, y: -1, name: \"result\") property(Char) result_9d7d0c\n\n            instance(x: 89, y: 29) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n            instance(x: 310, y: 35) notempty_1f7f0b root.Std_k98ojb.List.NotEmpty {}\n            elem_9f6850 -> find_6d05b0.item\n            map_3d4a2c -> find_6d05b0.value\n            notempty_1f7f0b.context -> find_6d05b0.predicate\n        } -> if_\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a8d6e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_4a8d6e -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4a8d6e -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "best_params_optimization": "semantic",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 346,
        "n_generations_per_task": 10,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 4982,
        "task_candidates": {
            "7": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d3a6\n\n        instance(x: 133, y: -131) filter_1e5f8b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e5f8b.items\n        list2_c62075 -> filter_1e5f8b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c7a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e5f8b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d4c7a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e4d3a6\n        } -> filter_1e5f8b.handler\n        filter_1e5f8b.done -> common_e4d3a6\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d3c9\n\n        instance(x: 133, y: -131) filter_1a8f6b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a8f6b.items\n        list2_c62075 -> filter_1a8f6b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c7e\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a8f6b.output_list -> Std_k98ojb.Std.If.value\n            item_0d4c7e -> Std_k98ojb.Std.If.input\n            Std_k98ojb.Std.If.then -> result_e245cb\n        } -> filter_1a8f6b.handler\n        filter_1a8f6b.done -> common_e4d3c9\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d7a3\n\n        instance(x: 133, y: -131) filter_1e5f6b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e5f6b.items\n        list2_c62075 -> filter_1e5f6b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_3d4c9a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e5f6b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d4c9a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e4d7a3\n        } -> filter_1e5f6b.handler\n        filter_1e5f6b.done -> common_e4d7a3\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d3a9\n\n        instance(x: 133, y: -131) filter_1e8f7 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e8f7.items\n        list2_c62075 -> filter_1e8f7.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d5c9a\n\n            out(x: 245, y: -54, name: \"commonItem\") property(Number) commonItem_b4b3e1\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f7.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d5c9a\n            Std_k98ojb.Std.If.then -> commonItem_b4b3e1\n            Std_k98ojb.Std.If.else -> null\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f7.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d5c9a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> common_e4d3a9\n\n        } -> filter_1e8f7.handler\n        filter_1e8f7.done -> common_e4d3a9\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e5d3c4\n\n        instance(x: 133, y: -131) filter_1e9f7 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e9f7.items\n        list2_c62075 -> filter_1e9f7.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c8a\n\n            out(x: 245, y: -54, name: \"commonItem\") property(Number) commonItem_2b3e5f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e9f7.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_0d4c8a\n            Std_k98ojb.Std.If.then -> commonItem_2b3e5f\n            Std_k98ojb.Std.If.else -> null\n\n            filter_1e9f7.output_list -> common_e5d3c4\n        } -> filter_1e9f7.handler\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0c7d4\n\n        instance(x: 133, y: -131) filter_1a9e3b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1a9e3b.items\n        list2_c62075 -> filter_1a9e3b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d6c5f\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1a9e3b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> Std_k98ojb.Std.IfExpression.item == item_4d6c5f\n            Std_k98ojb.Std.If.then -> result_e245cb\n            filter_1a9e3b.output_list -> Std_k98ojb.Std.If.else\n        } -> filter_1a9e3b.handler\n        filter_1a9e3b.done -> common_e0c7d4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0c9a4\n\n        instance(x: 133, y: -131) filter_1d8f7b root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1d8f7b.items\n        list2_c62075 -> filter_1d8f7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4e3c5a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1d8f7b.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_4e3c5a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If_else -> common_e0c9a4\n        } -> filter_1d8f7b.handler\n        filter_1d8f7b.done -> common_e0c9a4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e0d7c4\n\n        instance(x: 133, y: -131) filter_3e8f5 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_3e8f5.items\n        list2_c62075 -> filter_3e8f5.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_4d7c9a\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_3e8f5.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_4d7c9a\n            Std_k98ojb.Std.If.then -> result_e245cb\n            Std_k98ojb.Std.If.else -> common_e0d7c4\n        } -> filter_3e8f5.handler\n        filter_3e8f5.done -> common_e0d7c4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e5d3a4\n\n        instance(x: 133, y: -131) filter_1e9b8 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e9b8.items\n        list2_c62075 -> filter_1e9b8.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_0d4c6a\n\n            out(x: 245, y: -54, name: \"commonItem\") property(Number) commonItem_e5d3a4\n\n            instance(x: -8, y: -53) not_equal_1f2e9b root.Std_k98ojb.Logic.NotEqual {}\n            item_0d4c6a -> not_equal_1f2e9b.left\n            list1_1f846b -> not_equal_1f2e9b.right\n            not_equal_1f2e9b.result -> commonItem_e5d3a4\n\n            instance(x: -8, y: -53) equal_0c7f6d root.Std_k98ojb.Logic.Equal {}\n            item_0d4c6a -> equal_0c7f6d.left\n            list1_1f846b -> equal_0c7f6d.right\n            equal_0c7f6d.result -> commonItem_e5d3a4\n\n            instance(x: -8, y: -53) not_2e9b9 root.Std_k98ojb.Logic.Not {}\n            commonItem_e5d3a4 -> not_2e9b9.value\n            not_2e9b9.result -> common_e5d3a4\n\n        } -> filter_1e9b8.handler\n        filter_1e9b8.common -> common_e5d3a4\n    }\n\n    \n\n    instance(x: 93, y: -122) list_common_element_cbc0b6 root.main.list_common_element {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Takes two lists and returns true if they have at least one common element.\") list_common_element {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"common\") property(Boolean) common_e4d7c5\n\n        instance(x: 133, y: -131) filter_1e8f6 root.Std_k98ojb.Iteration.Filter {}\n        list1_1f846b -> filter_1e8f6.items\n        list2_c62075 -> filter_1e8f6.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_3d7c5a\n\n            out(x: 245, y: -54, name: \"commonItem\") property(Number) commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> commonItem_4b1e2f\n            Std_k98ojb.Std.If.else -> null\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.IfExpression {}\n            list1_1f846b -> Std_k98ojb.Std.IfExpression.left\n            list2_c62075 -> Std_k98ojb.Std.IfExpression.right\n            Std_k98ojb.Std.IfExpression.expression -> \"list1_1f846b.contains(item_3d7c5a)\"\n            Std_k98ojb.Std.IfExpression.value -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k98ojb.Std.If.else -> commonItem_4b1e2f\n\n            instance(x: -8, y: -53) Std_k98ojb.Std.If {}\n            filter_1e8f6.output_list -> Std_k98ojb.Std.If.value\n            Std_k98ojb.Std.If.input -> item_3d7c5a\n            Std_k98ojb.Std.If.then -> null\n            Std_k"
            ],
            "11": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9f2d6a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b1e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_1c6f5d -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9f2d6a root.main.is_consecutive_9f2d6a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9f8d6a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c4d3d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b1e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -205) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -30, y: -25",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_4a6f8d {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b1e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_1c7f2d -> contains_32727d.item\n        not_75283f.result -> output_8d07dc\n        contains_32727d.is_contained -> not_75283f.input\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_4a6f8d root.main.is_consecutive_4a6f8d {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_4f2d5a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e9c\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b1e9c -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_1c7f6d.root = root.Std_k98ojb.For\n        for_1c7f6d.reset = true\n        for_1c7f6d.next = false\n        for_1c7f6d.items = list_0b1e9c\n        for_1c7f6d.on_item = contains_32727d.item\n        for_1c7f6d.done = output_efbc78\n        for_1c7f6d.index = _index_170471\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) current_81298e\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_c76d2b.value\n            1 -> modulo_c76d2b.divisor\n            modulo_c76d2b.result -> notequal_7836b4.left\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n        } -> for_1c7f6d.handler\n        list_0b1e9c -> for_1c7f6d.items\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_4f2d5a root.main.is_consecutive_4f2d5a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_6d4f8a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b9e3d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            output_efbc78 -> notequal_7836b4.right\n        } -> contains_32727d.handler\n        list_0b9e3d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            output_efbc78 -> notequal_cb8a55.right\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_6d4f8a root.main.is_consecutive_6d4f8a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d6f4a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b3e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c2c43\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -23) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b3e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            _index_769593 + 1 -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        false -> output_7c2c43\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_8d6f4a root.main.is_consecutive_8d6f4a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d6f5a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e3d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c4a2d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -207) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b1e3d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -207) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -207) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> contains_32727d.items\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -207) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -207) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            _index_170471 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.right = true\n            notequal_7836b4.result -> output_efbc78\n        } -> filter_c91965.handler\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.right = true\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        func() {\n            in(x: -303, y: -205, name: \"current\") property(Number) _index_170471\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x:",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_8d4a9f {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b1e5d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c6f2d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -25) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b1e5d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            _index_769593 + 1 -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.result -> output_7c6f2d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_8d4a9f root.main.is_consecutive_8d4a9f {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_6d8f5a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b3e2d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_7c4f1d\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: -25) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            1 -> modulo_c76d2b.divisor\n            _index_769593 + 1 -> modulo_c76d2b.value\n            modulo_c76d2b.result -> notequal_7836b4.left\n            notequal_7836b4.result -> output_efbc78\n        } -> contains_32727d.handler\n        list_0b3e2d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            _index_769593 + 1 -> modulo_ad7b2a.value\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        not_75283f.result -> output_7c4f1d\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_6d8f5a root.main.is_consecutive_6d8f5a {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether the given list contains consecutive numbers or not.\") is_consecutive_9d4f5a {\n        in(x: -527, y: -214, name: \"list\") property(List) list_0b3e2d\n\n        out(x: 1269, y: -209, name: \"output\") property(Bool) output_8d07dc\n\n        instance(x: 847, y: -207) contains_32727d root.Std_k98ojb.List.Contains {}\n        instance(x: 246, y: -209, name: \"transform numbers to true/false\") map_c73e3b root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1058, y: -203) not_75283f root.Std_k98ojb.Logic.Not {}\n        func() {\n            in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n            in(x: -23, y: 79, name: \"_index\") property(Number) _index_769593\n\n            out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n            instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n            instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n            2 -> modulo_c76d2b.divisor\n            0 -> notequal_7836b4.right\n            notequal_7836b4.result -> output_efbc78\n            modulo_c76d2b.result -> notequal_7836b4.left\n            _index_769593 -> modulo_c76d2b.value\n        } -> contains_32727d.handler\n        list_0b3e2d -> contains_32727d.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) notequal_cb8a55 root.Std_k98ojb.Logic.NotEqual {}\n            current_81298e -> modulo_ad7b2a.value\n            1 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> notequal_cb8a55.left\n            0 -> notequal_cb8a55.right\n            notequal_cb8a55.result -> bool_4524be\n        } -> map_c73e3b.handler\n        filter_c91965.output_list -> map_c73e3b.items\n        map_c73e3b.output_list -> contains_32727d.list\n        for_7c6f1d root.Std_k98ojb.For {\n            in(x: -303, y: -205, name: \"i\") property(Number) i_0a4e9d\n            instance(x: 1058, y: -203) next_c5f2eb root.Std_k98ojb.For.next {}\n            instance(x: 246, y: -209, name: \"item\") property(List) item_7c6f1d\n            instance(x: 463, y: 51) equal_8e4a3b root.Std_k98ojb.Logic.Equal {}\n            func() {\n                in(x: -30, y: -25, name: \"current\") property(Number) _index_170471\n\n                out(x: 705, y: 49, name: \"output\") property(Bool) output_efbc78\n\n                instance(x: 226, y: 56) modulo_c76d2b root.Std_k98ojb.Math.Modulo {}\n                instance(x: 463, y: 51) notequal_7836b4 root.Std_k98ojb.Logic.NotEqual {}\n                _index_170471 -> modulo_c76d2b.value\n                1 -> modulo_c76d2b.divisor\n                modulo_c76d2b.result -> notequal_7836b4.left\n                0 -> notequal_7836b4.right\n                notequal_7836b4.result -> output_efbc78\n            } -> equal_8e4a3b.handler\n            item_7c6f1d -> equal_8e4a3b.items\n        }\n        for_7c6f1d.output_list -> contains_32727d.list\n        not_75283f.result -> output_8d07dc\n    }\n\n    \n\n    instance(x: -293, y: -5) is_consecutive_9d4f5a root.main.is_consecutive_()\n}"
            ],
            "17": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a9f1d4\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9f1d4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9f1d4 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a9d7f1\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d7f1 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d7f1 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a9f5d4\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9f5d4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9f5d4 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 70, name: \"sublist\") property(List) sublist_a9d4e5\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d4e5 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d4e5 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a9d7f1\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d7f1 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d7f1 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a9d5f1\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9d5f1 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9d5f1 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 60, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 70, name: \"sublist\") property(List) sublist_a9f2d4\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a9f2d4 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a9f2d4 -> getat_ce2a48.list\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks whether a specified list is a sublist of another list.\") issort_list_sublist {\n        in(x: -465, y: -235, name: \"execute\") trigger() execute_90aaec\n        in(x: -485, y: 30, name: \"mainList\") property(List) mainList_ec88cd\n        in(x: -505, y: 10, name: \"sublist\") property(List) sublist_a96db6\n\n        out(x: 1227, y: 5, name: \"continue\") trigger() continue_a96db6\n        out(x: 1218, y: 147, name: \"output\") property(Bool) output_5bbcd7\n\n        instance(x: 752, y: 93) ifexpression_875761 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0 || previous <= current\"\n        }\n        getter(x: 334, y: 160, name: \"getter_b280eb\") getter_b280eb = previous\n        setter(x: 679, y: -313, name: \"setter_9d4f1c\") setter_9d4f1c = previous\n        instance(x: 321, y: -20) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: -0, y: -121, name: \"setter_9d4f1c\") setter_38e107 = previous\n        instance(x: -275, y: -35) getat_ce2a48 root.Std_k98ojb.List.GetAt {}\n        ifexpression_875761.else -> continue_a96db6\n        ifexpression_875761.value -> output_5bbcd7\n        ifexpression_875761.then -> setter_9d4f1c.execute\n        mainList_ec88cd -> for_d26972.items\n        sublist_a96db6 -> for_d26972.items\n        for_d26972.item -> ifexpression_875761.gen_2\n        for_d26972.index -> ifexpression_875761.gen_0\n        getter_b280eb.value -> ifexpression_875761.gen_1\n        for_d26972.onItem -> ifexpression_875761.execute\n        for_d26972.done -> continue_a96db6\n        for_d26972.item -> setter_9d4f1c.new_value\n        mainList_ec88cd -> getat_ce2a48.list\n        sublist_a96db6 -> getat_ce2a48.items\n        0 -> getat_ce2a48.index\n        getat_ce2a48.itemAtIndex -> setter_38e107.new_value\n        execute_90aaec -> setter_38e107.execute\n        setter_38e107.continue -> for_d26972.reset\n        setter_9d4f1c.continue -> for_d26972.next\n    }\n\n    \n\n    instance(x: 10, y: -177) issort_list_sublist_fc79d5 root.main.issort_list_sublist {}\n\n}"
            ],
            "27": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the smallest missing number in a sorted list of natural numbers.\") find_smallest_missing {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"missing\") property(Number) missing_ai\n\n        Std.If(\n            Std.Count(items_ai) == Std.Count(items_ai) + 1,\n            Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.FirstItem(items_ai))), \n                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(1, Std.List.LastItem(items_ai))), \n                    Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.FirstItem(items_ai))), \n                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(2, Std.List.LastItem(items_ai))), \n                            Std.If(\n                                Std.List.Contains(items_ai, Std.Add(3, Std.List.FirstItem(items_ai))),\n                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(3, Std.List.LastItem(items_ai))), \n                                    Std.If(\n                                        Std.List.Contains(items_ai, Std.Add(4, Std.List.FirstItem(items_ai))),\n                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(4, Std.List.LastItem(items_ai))), \n                                            Std.If(\n                                                Std.List.Contains(items_ai, Std.Add(5, Std.List.FirstItem(items_ai))),\n                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(5, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(6, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(6, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(7, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(7, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(8, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(8, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(9, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(9, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(10, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(10, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(11, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(11, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(12, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(12, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(13, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(13, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(14, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(14, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(15, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(15, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(16, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(16, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(17, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(17, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(18, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(18, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(19, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(19, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(20, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(20, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(21, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(21, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(22, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(22, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(23, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(23, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(24, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(24, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(25, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(25, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(26, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(26, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(27, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(27, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(28, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(28, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(29, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(29, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(30, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(30, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(31, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(31, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(32, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(32, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(33, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(33, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(34, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(34, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(35, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(35, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(36, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(36, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai, Std.Add(37, Std.List.FirstItem(items_ai))),\n                                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(37, Std.List.LastItem(items_ai))), \n                                                    Std.If(\n                                                        Std.List.Contains(items_ai, Std.Add(38, Std.List.FirstItem(items_ai))),\n                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(38, Std.List.LastItem(items_ai))), \n                                                            Std.If(\n                                                                Std.List.Contains(items_ai, Std.Add(39, Std.List.FirstItem(items_ai))),\n                                                                Std.IfExpression(Std.List.Contains(items_ai, Std.Add(39, Std.List.LastItem(items_ai))), \n                                                                    Std.If(\n                                                                        Std.List.Contains(items_ai, Std.Add(40, Std.List.FirstItem(items_ai))),\n                                                                        Std.IfExpression(Std.List.Contains(items_ai, Std.Add(40, Std.List.LastItem(items_ai))), \n                                                                            Std.If(\n                                                                                Std.List.Contains(items_ai"
            ],
            "31": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a8f4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4.input -> input_0\n        \" \" -> replace_d3a8f4.search\n        \":\" -> replace_d3a8f4.replace\n        result_0 -> replace_d3a8f4.value\n\n        instance(x: 265, y: 0) replace_d3a8f4_2 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4_2.input -> input_0\n        \",\" -> replace_d3a8f4_2.search\n        \":\" -> replace_d3a8f4_2.replace\n        result_0 -> replace_d3a8f4_2.value\n\n        instance(x: 421, y: 0) replace_d3a8f4_3 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a8f4_3.input -> input_0\n        \".\" -> replace_d3a8f4_3.search\n        \":\" -> replace_d3a8f4_3.replace\n        result_0 -> replace_d3a8f4_3.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a9e4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9e4.input -> input_0\n        \" \" -> replace_d3a9e4.search\n        \":\" -> replace_d3a9e4.replace\n        result_0 -> replace_d3a9e4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d4f8e root.Std_k98ojb.Strings.Replace {}\n        replace_d4f8e.input -> input_0\n        \" \" -> replace_d4f8e.search\n        \":\" -> replace_d4f8e.replace\n        result_0 -> replace_d4f8e.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d4d8e9 root.Std_k98ojb.Strings.Replace {}\n        replace_d4d8e9.input -> input_0\n        \" \" -> replace_d4d8e9.search\n        \":\" -> replace_d4d8e9.replace\n        result_0 -> replace_d4d8e9.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d9f6e4 root.Std_k98ojb.Strings.Replace {}\n        replace_d9f6e4.input -> input_0\n        \" \" -> replace_d9f6e4.search\n        \":\" -> replace_d9f6e4.replace\n        result_0 -> replace_d9f6e4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a9f4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f4.input -> input_0\n        \" \" -> replace_d3a9f4.search\n        \":\" -> replace_d3a9f4.replace\n        result_0 -> replace_d3a9f4.value\n\n        instance(x: 265, y: 0) replace_d3a9f42 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f42.input -> input_0\n        \",\" -> replace_d3a9f42.search\n        \":\" -> replace_d3a9f42.replace\n        result_0 -> replace_d3a9f4.value\n\n        instance(x: 421, y: 0) replace_d3a9f43 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f43.input -> input_0\n        \".\" -> replace_d3a9f43.search\n        \":\" -> replace_d3a9f43.replace\n        result_0 -> replace_d3a9f4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3a9f4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f4.input -> input_0\n        \" \" -> replace_d3a9f4.search\n        \":\" -> replace_d3a9f4.replace\n        result_0 -> replace_d3a9f4.value\n\n        instance(x: 265, y: 0) replace_d3a9f4_2 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f4_2.input -> input_0\n        \",\" -> replace_d3a9f4_2.search\n        \":\" -> replace_d3a9f4_2.replace\n        result_0 -> replace_d3a9f4_2.value\n\n        instance(x: 421, y: 0) replace_d3a9f4_3 root.Std_k98ojb.Strings.Replace {}\n        replace_d3a9f4_3.input -> input_0\n        \".\" -> replace_d3a9f4_3.search\n        \":\" -> replace_d3a9f4_3.replace\n        result_0 -> replace_d3a9f4_3.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ContainsZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3f5e root.Std_k98ojb.Strings.Replace {}\n        replace_d3f5e.input -> input_0\n        \" \" -> replace_d3f5e.search\n        \":\" -> replace_d3f5e.replace\n        result_0 -> replace_d3f5e.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d4d8e9 root.Std_k98ojb.Strings.Replace {}\n        replace_d4d8e9.input -> input_0\n        \" \" -> replace_d4d8e9.search\n        \":\" -> replace_d4d8e9.replace\n        result_0 -> replace_d4d8e9.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of spaces, commas, or dots with a colon.\") text_replace_with_colon {\n        in(x: -230, y: 0, name: \"string\") property(String) input_0\n\n        out(x: 530, y: -2, name: \"result\") property(String) result_0\n\n        instance(x: 0, y: 1) replace_d3f6d4 root.Std_k98ojb.Strings.Replace {}\n        replace_d3f6d4.input -> input_0\n        \" \" -> replace_d3f6d4.search\n        \":\" -> replace_d3f6d4.replace\n        result_0 -> replace_d3f6d4.value\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceZ_e54b7f root.main.text_replace_with_colon {}\n\n\n}"
            ],
            "33": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_8d6a3f\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_8d6a3f -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_8d6a3f -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_8d6a3f -> expression_9fba8c.gen_0\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 1, y: -2, name: \"input\") property(String) input_5f51f7\n        in(x: 3, y: -11, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: -4, name: \"out\") property(Bool) out_d0fd24\n        out(x: 2, y: -10, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 5, y: 74) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 11, y: 25) islower_f1f7d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 17, y: -10) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 23, y: 46) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"it == c\"\n        }\n        instance(x: 29, y: -187) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 35, y: 19) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 41, y: -256) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == c\"\n        }\n        instance(x: 47, y: -356) if_e19a62.execute\n        instance(x: 53, y: 74) islower_f1f7d.execute\n        input_5f51f7 -> map_6030c9.items\n        map_6030c9.output_list -> expression_b720d7.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 1, y: -4, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) islower_f1f7d root.Std_k98ojb.Logic.Equal {}\n            element_5f51f7 -> islower_f1f7d.left\n            element_5f51f7 -> islower_f1f7d.right\n            islower_f1f7d.result -> out_d0fd24\n\n            instance(x: 212, y: -10) if_e19a62 root.Std_k98ojb.Std.If {}\n            element_5f51f7 -> if_e19a62.predicate\n            if_e19a62.then -> continue_8ba06b\n        } -> map_6030c9.handler\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -456, name: \"input\") property(String) input_5f51f7\n        in(x: 189, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: -10, name: \"out\") property(Bool) out_d0fd24\n        out(x: 2, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_5f51f7[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7.length() > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        0 -> for_8cb3f6.index\n        input_5f51f7 -> for_8cb3f6.item\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.then -> continue_8ba06b\n        out_d0fd24.value = and_80a119.result\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_8d4a3b\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_3f2d5a root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) isnumeric_f1e4eb root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"all(it == characters(input))\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(it != characters(input)[0])\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> for_8cb3f6.index\n        input_8d4a3b -> characters_3f2d5a.input\n        characters_3f2d5a.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> and_80a119.left\n        characters_3f2d5a.characters -> isnumeric_f1e4eb.input\n        input_8d4a3b -> isnumeric_f1e4eb.value\n        isnumeric_f1e4eb.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_8d4a3b -> expression_9fba8c.gen_0\n        input_8d4a3b -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f1f8d6 {\n        in(x: 0, y: -0, name: \"input\") property(String) input_4e5b9a\n        in(x: 0, y: -0, name: \"execute\") trigger() execute_2c7d3d\n\n        out(x: 1, y: -1, name: \"out\") property(Bool) out_8f6f21\n        out(x: 0, y: -0, name: \"continue\") trigger() continue_9b5a4e\n\n        instance(x: 0, y: -0) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 0, y: -0) islower_f1f8d6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 0, y: -0) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: -0) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_[0]\"\n        }\n        instance(x: 0, y: -0) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 0, y: -0) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 0, y: -0) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 0, y: -0) expression_a5d4c9 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_[0]\"\n        }\n        instance(x: 0, y: -0) if_07b8c7.execute -> for_8cb3f6.trigger\n        instance(x: 0, y: -0) continue_9b5a4e -> for_8cb3f6.reset\n\n        out_8f6f21.value = islower_f1f8d6.predicate\n        if_e19a62.then -> continue_9b5a4e\n        for_8cb3f6.done -> continue_9b5a4e\n    }\n\n    \n\n    instance(x: -0, y: 0) islower_f1f8d6 root.is_all_characters_same_f1f8d6.is_all_characters_same_f1f8d6 {\n        in(x: 0, y: -0, name: \"element\") property(String) element_4e5b9a\n        out(x: 1, y: -1, name: \"out\") property(Bool) out_8f6f21\n\n        instance(x: 0, y: -0) Strings.ToLower root.Std_k98ojb.Strings.ToLower {}\n        element_4e5b9a -> Strings.ToLower.input\n        Strings.ToLower.result -> islower_f1f8d6.element\n    }\n\n    \n\n    instance(x: -189, y: 222) execute_2c7d3d root.is_all_characters_same_f1f8d6.execute {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_5f51f7\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == input_5f51f7[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7.length > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> generaterange_038fce.from\n        input_5f51f7 -> generaterange_038fce.to\n        generaterange_038fce.list -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_5f51f7 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_5f51f7 -> expression_9fba8c.gen_0\n        input_5f51f7 -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f1d7e5 root.main.is_all_characters_same {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_5f51f7\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_f11fda root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 714, y: -155) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"it == characters_f11fda.value[0]\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"characters_f11fda.value.length > 1\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) and_80a119 root.Std_k98ojb.Logic.And {}\n        1 -> for_8cb3f6.trigger\n        input_5f51f7 -> for_8cb3f6.items\n        for_8cb3f6.item -> if_07b8c7.input\n        characters_f11fda.value -> expression_b720d7.value\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result == \"true\" -> out_f3db9f.value\n        else -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -456, name: \"input\") property(String) input_5f51f7\n        in(x: 189, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: -10, name: \"out\") property(Bool) out_d0fd24\n        out(x: 2, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) contains_f11fda root.Std_k98ojb.Strings.Contains {}\n        instance(x: 933, y: 25) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 714, y: -155) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) stringstolower_f07b8c7 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"input_5f51f7 == stringstolower_f07b8c7.input\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"contains_f11fda.input == input_5f51f7\"\n        }\n        instance(x: 2136, y: -356) if_e19a62.then -> continue_8ba06b\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> contains_f11fda.contains\n        input_5f51f7 -> contains_f11fda.input\n        contains_f11fda.result -> if_e19a62.predicate\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 354, y: -53, name: \"input\") property(String) input_8d4a2e\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_f1f7d root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) isnumeric_f2e4a3 root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"all(it == characters)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(it != ' ') && (it != '\\n') && (it != '\\t')\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> for_8cb3f6.index\n        input_8d4a2e -> characters_f1f7d.characters\n        for_8cb3f6.item -> isnumeric_f2e4a3.input\n        isnumeric_f2e4a3.value -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.then -> continue_8ba06b\n        is_all_characters_same_f0be66.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be67 root.main.is_all_characters_same_f0be66 {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether all the characters are same or not.\") is_all_characters_same_f0be66 {\n        in(x: 123, y: -12, name: \"input\") property(String) input_4f2d5e\n        in(x: 189, y: -219, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 2, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 352, y: -493) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 591, y: 74) characters_1f2d7 root.Std_k98ojb.Strings.Characters {}\n        instance(x: 933, y: 25) isnumeric_f11fda root.Std_k98ojb.Strings.IsNumeric {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"all(it == characters)\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(it == characters[0])\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> for_8cb3f6.index\n        input_4f2d5e -> characters_1f2d7.input\n        characters_1f2d7.characters -> map_6030c9.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(String) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        for_8cb3f6.item -> isnumeric_f11fda.value\n        input_4f2d5e -> isnumeric_f11fda.input\n        isnumeric_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        input_4f2d5e -> expression_9fba8c.gen_0\n        input_4f2d5e -> expression_b720d7.gen_0\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_all_characters_same_f0be66_f0be66 root.main.is_all_characters_same_f0be66 {}\n}"
            ],
            "37": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_5f6d4b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 3, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_5f6d4b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"counts the number of digits in a given string.\") count_digits {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"s\") property(String) s_6b655b\n\n        out(x: 3, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 4, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.IsNumeric(s)\"\n        }\n        instance(x: 395, y: -378) count_digits_96023e root.main.count_digits {}\n        instance(x: 97, y: -127) length_88bb8a root.Std_k98ojb.List.Length {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = count\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = count\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = count\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        10 -> length_88bb8a.value\n        length_88bb8a.result -> setter_41e4ad.new_value\n        setter_41e4ad.continue_d9efd7 -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_cdac2a -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> count_digits_96023e.execute_cdac2a\n        count_digits_96023e.continue_d9efd7 -> setter_375321.execute\n        count_digits_96023e.output_732a8a -> length_88bb8a.second\n        length_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        s_6b655b -> floor_61b38d.input\n        floor_61b38d.output -> length_88bb8a.first\n        floor_61b38d.output -> ifexpression_3d7de6.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) count_digits_86117a root.main.count_digits {}\n\n}"
            ],
            "38": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1024, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 1024, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 0, y: 0, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) square_sum_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 0, y: 0, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) square_sum_9dcc3d root.main.sum_fourth_power {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Takes in an integer n and returns the sum of the fourth power of the first n odd natural numbers.\") sum_fourth_power {\n        in(x: -219, y: 55, name: \"n\") property(Number) n_3a3116\n\n        out(x: 3265, y: 7, name: \"sum\") property(Number) sum_365f7b\n\n        instance(x: 23, y: -1) mul_f892a4 root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 330, y: 133) data_cde0dc = 3\n        instance(x: 12, y: 136) expression_2d6da6 root.Std_k98ojb.Math.Expression {\n            expression: \"4*n^4-1\"\n        }\n        instance(x: 303, y: 2) div_64046c root.Std_k98ojb.Math.Div {}\n        data_cde0dc -> div_64046c.second\n        mul_f892a4.result -> div_64046c.first\n        expression_2d6da6.result -> mul_f892a4.second\n        n_3a3116 -> mul_f892a4.first\n        n_3a3116 -> expression_2d6da6.gen_0\n        div_64046c.result -> sum_365f7b\n    }\n\n    \n\n    instance(x: 118, y: -26) sum_fourth_power_9dcc3d root.main.sum_fourth_power {}\n}"
            ],
            "46": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4a3d0b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c7f8e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a3d0b\n        6 -> Std_k98ojb.Std.IfExpression.input2\n        result_9c7f8e -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        side_length_4a3d0b -> Std_k98ojb.Math.Expression.expression\n        \"6 * (side_length_4a3d0b ^ 2)\" -> Std_k98ojb.Math.Expression.result\n        Std_k98ojb.Math.Expression.result -> result_9c7f8e\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4a6d5b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c7f8e\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4a6d5b\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_4a6d5b\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        Std_k98ojb.Std.Count.reset -> side_length_4a6d5b\n        6 -> Std_k98ojb.Std.Count.count\n        Std_k98ojb.Std.Count.trigger -> result_9c7f8e\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * side_length_4a6d5b ^ 2\"\n        result_9c7f8e -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9e5d4a\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_8f2c7b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9e5d4a\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_9e5d4a\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.surface_area {}\n        Std_k98ojb.Std.IfExpression.then -> cube_surface_area_b9ff6b.side_length\n        6 -> cube_surface_area_b9ff6b.side_length\n        Std_k98ojb.Std.IfExpression.else -> cube_surface_area_b9ff6b.side_length\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * side_length^2\"\n        cube_surface_area_b9ff6b.result -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9d5f4a\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_8c6e7b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d5f4a\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_9d5f4a\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d5f4a\n        0 -> Std_k98ojb.Std.IfExpression.then\n        Std_k98ojb.Std.IfExpression.input2 -> side_length_9d5f4a\n        6 -> Std_k98ojb.Std.IfExpression.else\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Expression {}\n        Std_k98ojb.Math.Expression.expression -> \"6 * (side_length_9d5f4a ^ 2)\"\n\n        side_length_9d5f4a -> Std_k98ojb.Math.Expression.x\n        result_8c6e7b -> Std_k98ojb.Math.Expression.result\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9d4a3b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_5c6f1e\n\n        instance(x: 94, y: -105) Std_k98ojb.Math.Expression expression_8d7a2d {}\n        side_length_9d4a3b -> expression_8d7a2d.expression\n        6 -> expression_8d7a2d.x\n        2 -> expression_8d7a2d.y\n        result_5c6f1e -> expression_8d7a2d.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add add_4f9f3d root.surface_area.expression_8d7a2d {}\n        result_5c6f1e -> add_4f9f3d.first\n        0 -> add_4f9f3d.second\n        add_4f9f3d.result -> result_5c6f1e\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8e5d3b\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_4a6f1c\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e5d3b\n        Std_k98ojb.Std.IfExpression.input2 -> 6\n        Std_k98ojb.Std.IfExpression.then -> result_4a6f1c = side_length_8e5d3b * Std_k98ojb.Std.IfExpression.input2\n        Std_k98ojb.Std.IfExpression.else -> result_4a6f1c = 0\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8e4a1d\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_5c7f6b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a1d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_5c7f6b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Pow {}\n        side_length_8e4a1d -> Std_k98ojb.Math.Pow.x\n        2 -> Std_k98ojb.Math.Pow.y\n        Std_k98ojb.Math.Pow.result -> result_5c7f6b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a1d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_5c7f6b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_5c7f6b -> Std_k98ojb.Math.Add.first\n        4 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_5c7f6b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a1d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_5c7f6b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_5c7f6b -> Std_k98ojb.Math.Add.first\n        4 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_5c7f6b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a1d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_5c7f6b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_5c7f6b -> Std_k98ojb.Math.Add.first\n        4 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_5c7f6b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a1d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_5c7f6b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_5c7f6b -> Std_k98ojb.Math.Add.first\n        4 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_5c7f6b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a1d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_5c7f6b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_5c7f6b -> Std_k98ojb.Math.Add.first\n        4 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_5c7f6b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8e4a1d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_5c7f6b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_5c7f6b -> Std_k98ojb.Math.Add.first\n        4 -> Std_k98ojb.Math.Add.second\n        Std_k98ojb.Math.Add.result -> result_5c7f6b\n\n    }\n\n    \n\n    instance(x: -92, y: 45) cube_nums_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_8d6a4e\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_9c7f2b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Pow {}\n        side_length_8d6a4e -> Std_k98ojb.Math.Pow.x\n        3 -> Std_k98ojb.Math.Pow.y\n        Std_k98ojb.Math.Pow.result -> result_9c7f2b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2b -> Std_k98ojb.Math.Add.second\n        6 -> Std_k98ojb.Math.Add.result\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_8d6a4e\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_9c7f2b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Add {}\n        result_9c7f2b -> Std_k98ojb.Math.Add.first\n        result_9c7f2",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_9d5f6a\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_4c8e3b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_9d5f6a\n        Std_k98ojb.Std.IfExpression.input2 -> 6\n        Std_k98ojb.Std.IfExpression.then -> result_4c8e3b = 6 * (side_length_9d5f6a ** 2)\n        Std_k98ojb.Std.IfExpression.else -> result_4c8e3b = 0\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the surface area of a cube of a given size.\") surface_area {\n        in(x: -122, y: -81, name: \"side_length\") property(Number) side_length_4e5f1d\n\n        out(x: 216, y: -68, name: \"surface_area\") property(Number) result_8c9a3b\n\n        instance(x: 94, y: -105) Std_k98ojb.Std.IfExpression {}\n        Std_k98ojb.Std.IfExpression.input1 -> side_length_4e5f1d\n        0 -> Std_k98ojb.Std.IfExpression.then\n        result_8c9a3b -> Std_k98ojb.Std.IfExpression.value\n\n        instance(x: -92, y: 45) Std_k98ojb.Math.Pow {}\n        side_length_4e5f1d -> Std_k98ojb.Math.Pow.x\n        2 -> Std_k98ojb.Math.Pow.y\n        Std_k98ojb.Math.Pow.result -> result_8c9a3b\n\n        instance(x: -92, y: 45) Std_k98ojb.Std.Count {}\n        result_8c9a3b -> Std_k98ojb.Std.Count.value\n        6 -> Std_k98ojb.Std.Count.reset\n    }\n\n    \n\n    instance(x: -92, y: 45) surface_area_b9ff6b root.main.surface_area {}\n}"
            ],
            "19": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.Expression(max_ai > min_ai ? max_ai : min_ai),\n            Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n            Std.IfExpression(min_ai == max_ai, 0, min_ai - max_ai)\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.Expression(max_ai > min_ai ? max_ai : min_ai),\n            Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n            Std.IfExpression(min_ai == max_ai, 0, min_ai - max_ai)\n        ) -> diff_ai\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the difference between largest and smallest value in a given list.\") diff {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"max\") property(Number) max_ai\n        out(x: 159, y: -219, name: \"min\") property(Number) min_ai\n        out(x: 159, y: -219, name: \"diff\") property(Number) diff_ai\n\n        instance(x: 426, y: -303) list_max_node root.Std_k98ojb.List.Max {}\n        items_ai -> list_max_node.items\n        list_max_node.max -> max_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> min_ai\n\n        Std.If(\n            Std.IfExpression(max_ai > min_ai ? max_ai : min_ai,\n                Std.IfExpression(max_ai == min_ai, 0, max_ai - min_ai),\n                Std.IfExpression(min_ai > max_ai, 0, min_ai - max_ai)\n            )\n        ) -> diff_ai\n    }\n\n    \n}"
            ],
            "22": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { Std.If(\"true\", { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }),\n            b: { Std.If(\"false\", { Std.If(\"true\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { num_ai, \"not even\" }) })\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: 20, y: 77) Std.If.reset {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 0, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: \"true\",\n            b: \"false\"\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: -34, y: 127) split_node root.main.Split {}\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { is_even_ai.value = true },\n            b: { is_even_ai.value = false }\n        )\n    }\n\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"check if a number is even.\") Std.If {\n        in(x: 10, y: true, name: \"number\") property(Number) num_ai\n        out(x: 20, y: false, name: \"isEven\") property(Boolean) is_even_ai\n        Std.IfExpression(\n            expression: \"num_ai % 2 == 0\",\n            a: { Std.If(\"true\", { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }),\n            b: { Std.If(\"false\", { Std.If(\"true\", { Std.If(\"false\", { num_ai, \"not even\" }) }, { num_ai, \"even\" }) }, { Std.If(\"false\", { num_ai, \"not even\" }) })\n        ) -> is_even_ai\n    }\n    \n\n    instance(x: 20, y: 127) split_node root.main.Split {}\n\n}"
            ],
            "23": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d3a9f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_6c7e5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1e8d6b root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) isnumeric_5f2c0a root.Std_k98ojb.Strings.IsNumeric {}\n            0 -> isnumeric_5f2c0a.right\n            elem_9f6850 -> contains_1e8d6b.input\n            contains_1e8d6b.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4d3a9f -> find_6d05b0.items\n        for_2c5f7d root.Std_k98ojb.Iteration.For {}\n        func() {\n            in(x: -113, y: 34, name: \"i\") property(Number) i_1e8d6b\n\n            out(x: 515, y: 44, name: \"char\") property(Char) char_6c7e5b\n            out(x: 593, y: -1, name: \"str\") property(String) str_4d3a9f_copy_2c5f7d\n\n            instance(x: 89, y: 29) getat_0d8fdd root.Std_k98ojb.List.GetAt {}\n            instance(x: 310, y: 35) isempty_1e8d6b root.Std_k98ojb.List.IsEmpty {}\n            i_1e8d6b -> getat_0d8fdd.index\n            str_4d3a9f_copy_2c5f7d -> getat_0d8fdd.list\n            getat_0d8fdd.result -> char_6c7e5b\n            isempty_1e8d6b.result -> bool_af09a7\n        } -> for_2c5f7d.trigger\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d5a8f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_4d5a8f -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4d5a8f -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3d6a4e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f6850\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_3d6a4e -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_3d6a4e -> find_6d05b0.items\n        find_6d05b0.item -> char_9f6850\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3a6d4e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f6850\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) isnumeric_807ffd root.Std_k98ojb.Strings.IsNumeric {}\n            0 -> isnumeric_807fd1.right\n            contains_1088d5.input -> isnumeric_807fd1.value\n            elem_9f6850 -> contains_1088d5.search\n            contains_1088d5.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_3a6d4e -> find_6d05b0.items\n        find_6d05b0.item -> char_9f6850\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3a4d5b\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_6c8f2e\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"map\") property(Map) map_3c8d4a\n\n            instance(x: 89, y: 29) tolower_1e5b7 root.Std_k98ojb.Strings.ToLower {}\n            instance(x: 310, y: 35) contains_6f2d0b root.Std_k98ojb.Strings.Contains {}\n            0 -> contains_6f2d0b.contains\n            elem_9f6850 -> tolower_1e5b7.input\n            map_3c8d4a -> contains_6f2d0b.value\n            tolower_1e5b7.result -> char_6c8f2e\n        } -> find_6d05b0.predicate\n        str_3a4d5b -> find_6d05b0.items\n        map_3c8d4a -> char_6c8f2e\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a6d8f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_4a6d8f -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4a6d8f -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4d6a2e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_4d6a2e -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4d6a2e -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a8d6e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_3bc2ae\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) not_equal_807ffd root.Std_k98ojb.Logic.NotEqual {}\n            0 -> not_equal_807ffd.right\n            contains_1088d5.input -> not_equal_807ffd.left\n            elem_9f6850 -> contains_1088d5.search\n            str_4a8d6e -> contains_1088d5.string\n            not_equal_807ffd.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_4a8d6e -> find_6d05b0.items\n        find_6d05b0.item -> char_3bc2ae\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_3a6d4e\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_9f7c5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1b3d4c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) isnumeric_8f2e9b root.Std_k98ojb.Strings.IsNumeric {}\n            0 -> isnumeric_8f2e9b.right\n            elem_9f6850 -> contains_1b3d4c.input\n            contains_1b3d4c.result -> bool_af09a7\n        } -> find_6d05b0.predicate\n        str_3a6d4e -> find_6d05b0.items\n        find_6d05b0.item -> elem_9f6850\n        if(bool_af09a7) {\n            in(x: -55, y: 529) find_char root.Std_k98ojb.Iteration.Find {}\n            func() {\n                in(x: -113, y: 34, name: \"elem\") property(Char) char_9f7c5b\n\n                out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n                instance(x: 89, y: 29) count_1d2e3b root.Std_k98ojb.List.Count {}\n                instance(x: 310, y: 35) list_contains_8f2e9b root.Std_k98ojb.List.Contains {}\n                0 -> list_contains_8f2e9b.right\n                elem_9f6850 -> count_1d2e3b.input\n                count_1d2e3b.result -> list_contains_8f2e9b.left\n                if(list_contains_8f2e9b.result) {\n                    in(x: -55, y: 529) find_char_2 root.Std_k98ojb.Iteration.Find {}\n                    func() {\n                        out(x: 593, y: -1, name: \"char\") property(Char) char_9f7c5b\n\n                        instance(x: 89, y: 29) index_1d2e3b root.Std_k98ojb.List.FirstItem {}\n                        instance(x: 310, y: 35) list_slice_8f2e9b root.Std_k98ojb.List.Slice {}\n                        char_9f7c5b -> find_char_2.item\n                        index_1d2e3b.index -> list_slice_8f2e9b.start\n                        list_slice_8f2e9b.end -> -1\n                        find_char_2.item -> list_slice_8f2e9b.value\n                    } -> find_char_2.predicate\n                }\n            } -> find_char.predicate\n        }\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n     func(doc: \"Finds the first repeated character in a given string.\") first_repeated {\n        in(x: -284, y: -0, name: \"string\") property(String) str_4a3d8f\n\n        out(x: 593, y: -1, name: \"char\") property(Char) char_6c9e5b\n\n        instance(x: 0, y: 0) find_6d05b0 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(String) elem_9f6850\n\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n\n            instance(x: 89, y: 29) contains_1b5d6c root.Std_k98ojb.Strings.Contains {}\n            instance(x: 310, y: 35) isnumeric_8f2e3b root.Std_k98ojb.Strings.IsNumeric {}\n            0 -> isnumeric_8f2e3b.right\n            contains_1b5d6c.contains -> isnumeric_8f2e3b.input\n            elem_9f6850 -> contains_1b5d6c.search\n            contains_1b5d6c.replace -> isnumeric_8f2e3b.input\n            1 -> isnumeric_8f2e3b.index\n            find_6d05b0.item -> char_6c9e5b\n        } -> find_6d05b0.predicate\n        str_4a3d8f -> find_6d05b0.items\n    }\n\n    \n\n    instance(x: -55, y: 529) first_repeated_2c856f root.main.first_repeated {}\n}"
            ],
            "35": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.on_done -> {\n            if (list_second_min_node.length == 2) {\n                second_min_ai <- min_ai\n            } else {\n                var(i, j) = 0\n                for each(item in items_ai) {\n                    if (item != min_ai && item < second_min_ai) {\n                        second_min_ai <- item\n                        i <- list_second_min_node.index\n                    }\n                }\n                second_min_ai <- list_second_min_node.items[i]\n            }\n        }\n    }\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var1_ai\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_second_min_node.items\n        list_second_min_node.min -> var2_ai\n\n        Std.If(\n            Std.Compare(var1_ai, var2_ai) == Std.Comparison.LessThan,\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            ),\n                                        Std.If(\n                                            Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                                Std.If(\n                                                    Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                        var2_ai\n                                                    )\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.LessThanOrEqual,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    var2_ai\n                                )\n                            )\n                        )\n                    )\n                Std.If(\n                    Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                var2_ai\n                            )\n                        )\n                    )\n                )\n            Std.If(\n                Std.Compare(var1_ai, var2_ai) == Std.Comparison.Equal,\n                    Std.If(\n                        Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                            Std.If(\n                                Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                    Std.If(\n                                        Std.Compare(var2_ai, items_ai[0]) == Std.Comparison.GreaterThan,\n                                            Std.If(\n                                                Std.Compare(var2_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                                    var2_ai\n                                                )\n                                            )\n                                        )\n                                    )\n                                )\n                            )\n                        Std.If(\n                            Std.Compare(var1_ai, items_ai[0]) == Std.Comparison.Equal,\n                                Std.If(\n                                    Std.Compare(var1_ai, items_ai[1]) == Std.Comparison.GreaterThan,\n                                        var2_ai\n                                    )\n                                )\n                            )\n                        )\n                    )\n                )\n            )\n        second_min_ai -> second_min_ai\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}",
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the second smallest number in a list.\") second_smallest_num {\n        in(x: -426, y: -248, name: \"items\") property(List) items_ai\n        out(x: 159, y: -219, name: \"second_min\") property(Number) second_min_ai\n\n        instance(x: 426, y: -303) list_min_node root.Std_k98ojb.List.Min {}\n        items_ai -> list_min_node.items\n        list_min_node.min -> var(min_ai)\n\n        instance(x: 426, y: -303) list_second_min_node root.Std_k98ojb.List.Sort()\n        items_ai -> list_second_min_node.items\n        list_second_min_node.items[1] -> second_min_ai\n\n    }\n\n    \n    instance(x: 426, y: -303) second_smallest_num_node root.main.second_smallest_num {}\n\n    \n}"
            ]
        }
    }
]