[
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -531, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 11 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output_b2508f\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output_b2508f\n        n_9f7759 -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f7759 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleByEleven_d6e930 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -289, y: 126, name: \"old\") property(String) old_9d7f8a\n        in(x: -281, y: 17, name: \"new\") property(String) new_5c6e4b\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        old_9d7f8a -> replace_7b3b7b.search\n        new_5c6e4b -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) Replace_cbc0b6 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: -110) unique_8eae56 root.Std_k98ojb.List.Unique {}\n        list_ai -> unique_8eae56.items\n        unique_8eae56.unique_list -> output_ai\n\n        instance(x: 133, y: -131) product_201051 root.Std_k98ojb.Math.Product {}\n        output_ai -> product_201051.inputs\n        product_201051.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) Product_cbc0b6 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"k\") property(Number) k_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_7b3b7b.list\n        k_9f7759 -> slice_7b3b7b.start\n        slice_7b3b7b.end -> -1\n        instance(x: 395, y: 100) reverse_8815e6 root.Std_k98ojb.List.Reversed {}\n        output_ai -> reverse_8815e6.list\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_cbc0b6 root.main.Rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f7759\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_685c8f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_9f7759 -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f7759 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1f8d7e\n\n        instance(x: 772, y: 76) expression_9c5b3a root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        number_ai -> expression_9c5b3a.input\n        expression_9c5b3a.output -> DivisibleByEleven.result\n    }\n\n    \n\n    instance(x: -179, y: 30) DivisibleByEleven_8f1d7 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -289, y: 126, name: \"oldChar\") property(Char) oldChar_1f846b\n        in(x: -281, y: 17, name: \"newChar\") property(Char) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_1f846b -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_59bc6e root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_c2c6e5 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.List.Unique {}\n        instance(x: 215, y: 100) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it in list\"\n        }\n        instance(x: 300, y: 168) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 99, y: -249) product_9ff257 root.Std_k98ojb.Math.Product {}\n        list_ai -> unique_7b3b7b.list\n        filter_875ddb.result -> unique_7b3b7b.list\n        for_8cb3f6.items -> product_9ff257.inputs\n        product_9ff257.result -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Product_cbc0b6 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -173, y: 2, name: \"list1\") property(List) list1_9f8d4b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_9f8d4b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"k\") property(Number) k_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) for_7b3b7b root.Std_k98ojb.Std.For {}\n        list_ai -> for_7b3b7b.items\n        func() {\n            in(x: -105, y: -110, name: \"i\") property(Number) i_9cceb3\n\n            out(x: 245, y: -54, name: \"\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) getat_4e8c54 root.Std_k98ojb.List.GetAt {}\n            list_ai -> getat_4e8c54.list\n            k_9f7759 -> getat_4e8c54.index\n            getat_4e8c54.itemAtIndex -> result_e245cb\n        } -> for_7b3b7b.handler\n        for_7b3b7b.onItem -> rotate_list.execute\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_list_cbc0b6 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 46, y: 158, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_5f8d4e\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_1c6a7b\n\n        instance(x: 772, y: 76) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = not\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_5f8d4e -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> not\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_5f8d4e -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1c6a7b\n        setter_37db7f.continue -> continue_1c6a7b\n    }\n\n    \n\n    instance(x: -34, y: 127) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % 11 == 0)\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output_b2508f\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output_b2508f\n        n_9f7759 -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f7759 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleByEleven_d6e930 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -436, y: -213, name: \"oldChar\") property(Char) oldChar_1e3c7d\n        in(x: -450, y: -114, name: \"newChar\") property(Char) newChar_9f2a8b\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_c95bcb\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_1e3c7d -> replace_7b3b7b.search\n        newChar_9f2a8b -> replace_7b3b7b.replace\n        output_ai -> replace_7b3b7b.output\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_0d40f1 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: -110) list_unique_9cceb3 root.Std_k98ojb.List.Unique {}\n        list_ai -> list_unique_9cceb3.list\n        list_unique_9cceb3.unique -> output_ai\n\n        instance(x: 133, y: -131) product_201051 root.Std_k98ojb.Math.Product {}\n        list_unique_9cceb3.items -> product_201051.inputs\n        product_201051.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) Product_cbc0b6 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"dissimilar\") property(List) dissimilar_f0a4c6\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> dissimilar_f0a4c6\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_b9ff6b root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) for_7b3b7b root.Std_k98ojb.Std.For {}\n        list_ai -> for_7b3b7b.items\n        n_9f7759 -> for_7b3b7b.n\n        func() {\n            in(x: -105, y: -110, name: \"i\") property(Number) i_1e19fb\n\n            out(x: 245, y: -54, name: \"\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n            list_ai -> getat_8eae56.list\n            i_1e19fb -> getat_8eae56.index\n            getat_8eae56.itemAtIndex -> result_e245cb\n        } -> for_7b3b7b.handler\n        instance(x: 24, y: -54) slice_584bfd root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_584bfd.list\n        i_1e19fb -> slice_584bfd.start\n        slice_584bfd.end -> slice_584bfd.end\n        for_7b3b7b.done -> output_ai\n        getat_8eae56.itemAtIndex -> slice_584bfd.item\n        slice_584bfd.index -> result_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_b9ff6b root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_9f4e5d\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_1b3c7a\n\n        instance(x: 105, y: 112) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = not\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_9f4e5d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> not\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f4e5d -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1b3c7a\n        setter_37db7f.continue -> continue_1b3c7a\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f6d8b\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1c7e5a\n\n        instance(x: 772, y: 76) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_9f6d8b -> expression_b720d7.input\n        expression_b720d7.result -> DivisibleByEleven.value\n    }\n\n    \n\n    instance(x: -179, y: 30) DivisibleByEleven_4c5a3e root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -436, y: -213, name: \"old\") property(String) old_9d7f8a\n        in(x: -450, y: -114, name: \"new\") property(String) new_5c6e2b\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        old_9d7f8a -> replace_7b3b7b.search\n        new_5c6e2b -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_59bc6e root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: -110) list_unique_8eae56 root.Std_k98ojb.List.Unique {}\n        list_ai -> list_unique_8eae56.list\n        list_unique_8eae56.unique_list -> output_ai\n\n        instance(x: 133, y: -131) product_201051 root.Std_k98ojb.Math.Product {}\n        output_ai -> product_201051.inputs\n        product_201051.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) Product_cbc0b6 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_9b38cc root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_9b38cc.input\n            list2_1d86d4 -> not_9b38cc.input\n            not_9b38cc.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"k\") property(Number) k_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_7b3b7b.list\n        k_9f7759 -> slice_7b3b7b.start\n        slice_7b3b7b.end -> -1\n        instance(x: 395, y: 100) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        output_ai -> concat_9b38cc.result\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 245, y: -54, name: \"\") property(Number) _7dd980\n\n            instance(x: 24, y: -53) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n            item_86a8fb -> getat_8eae56.index\n            getat_8eae56.itemAtIndex -> _7dd980\n        } -> slice_7b3b7b.handler\n        slice_7b3b7b.output_list -> concat_9b38cc.left\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_cbc0b6 root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f8e4d\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1c7a3b\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_b2c5db\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2c5db\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_9f8e4d -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f8e4d -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1c7a3b\n        setter_37db7f.continue -> continue_1c7a3b\n    }\n\n    \n\n    instance(x: -34, y: 127) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1f8d7e\n\n        instance(x: 772, y: 76) expression_9c5b3a root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        number_ai -> expression_9c5b3a.input\n        expression_9c5b3a.output -> DivisibleByEleven.result\n    }\n\n    \n\n    instance(x: -179, y: 30) DivisibleByEleven_8f7d4e root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -289, y: 126, name: \"oldChar\") property(Char) oldChar_1f846b\n        in(x: -281, y: 17, name: \"newChar\") property(Char) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_1f846b -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_59bc6e root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_c2c6e5 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.List.Unique {}\n        instance(x: 215, y: 100) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it in list\"\n        }\n        instance(x: 300, y: 168) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 99, y: -249) product_9ff257 root.Std_k98ojb.Math.Product {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        list_ai -> unique_7b3b7b.list\n        filter_875ddb.result -> for_8cb3f6.items\n        product_9ff257.first -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        for_8cb3f6.item -> product_9ff257.item\n    }\n\n    \n\n    instance(x: -34, y: 127) Product_b9ff6b root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") diff_list {\n        in(x: -173, y: 2, name: \"list1\") property(List) list1_9f8d5b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_9f8d5b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            list1_42bc6f -> isnumeric_9cb360.input\n            list2_1d86d4 -> isnumeric_9cb360.input\n            isnumeric_9cb360.isNumeric -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) diff_list_cbc0b6 root.main.diff_list {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"k\") property(Number) k_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_7b3b7b.list\n        k_9f7759 -> slice_7b3b7b.start\n        slice_7b3b7b.end -> -1\n        instance(x: 133, y: -131) concat_201051 root.Std_k98ojb.List.Concat {}\n        output_ai -> concat_201051.listWithItem\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 245, y: -54, name: \"\") property(Number) _7dd980\n\n            instance(x: -8, y: -53) getat_4e8c54 root.Std_k98ojb.List.GetAt {}\n            item_86a8fb -> getat_4e8c54.index\n            getat_4e8c54.itemAtIndex -> _7dd980\n        } -> slice_7b3b7b.handler\n        slice_7b3b7b.output_list -> concat_201051.left\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_list_cbc0b6 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 46, y: 158, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_8f6d4a\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_5c9e7b\n\n        instance(x: 104, y: 76) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = not\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_8f6d4a -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> not\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_8f6d4a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_5c9e7b\n        setter_37db7f.continue -> continue_5c9e7b\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 11 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output_b2508f\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output_b2508f\n        n_9f7759 -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f7759 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleByEleven_d6e930 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -436, y: -213, name: \"oldChar\") property(Char) oldChar_1e3c7d\n        in(x: -450, y: -114, name: \"newChar\") property(Char) newChar_9f2a8b\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_c95bcb\n        instance(x: 80, y: -417) replace_7f3d4a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7f3d4a.input\n        oldChar_1e3c7d -> replace_7f3d4a.search\n        newChar_9f2a8b -> replace_7f3d4a.replace\n        replace_7f3d4a.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_0c5e1e root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        instance(x: 395, y: -378) list_sort_0e8c5a root.Std_k98ojb.List.Sort {}\n        instance(x: 133, y: -131) unique_9f2d4a root.Std_k98ojb.List.Unique {}\n        instance(x: 723, y: 62) flatten_1e7d3a root.Std_k98ojb.List.Flatten {}\n        instance(x: 24, y: -54) product_5c8d6a root.Std_k98ojb.Math.Product {}\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_sort_0e8c5a.list\n        unique_9f2d4a.list -> list_sort_0e8c5a.list\n        flatten_1e7d3a.list -> product_5c8d6a.input\n        product_5c8d6a.result -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Product_c2b9f4 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"dissimilar\") property(List) dissimilar_7c0e3a\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"diff\") property(Number) diff_7c0e3a\n\n            instance(x: -8, y: -53) not_9cb360 root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_9cb360.input\n            list2_1d86d4 -> not_9cb360.input\n            not_9cb360.result -> diff_7c0e3a\n        } -> zip_201051.handler\n        zip_201051.zipped -> dissimilar_7c0e3a\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"n\") property(Number) n_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_c95bcb\n\n        instance(x: 772, y: 76) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_ai -> for_9ab286.items\n        n_9f7759 -> for_9ab286.count\n        func() {\n            in(x: -105, y: -110, name: \"i\") property(Number) i_1e19fb\n\n            out(x: 245, y: -54, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) next_584bfd root.Std_k98ojb.Std.For {}\n            i_1e19fb -> next_584bfd.index\n            list_ai -> next_584bfd.items\n            next_584bfd.next -> for_9ab286.next\n        } -> for_9ab286.handler\n        for_9ab286.itemAtIndex -> output_ai\n        for_9ab286.done -> continue_c95bcb\n        execute_12bf99 -> for_9ab286.reset\n        for_9ab286.index -> next_584bfd.first\n        0 -> next_584bfd.second\n        next_584bfd.next -> for_9ab286.next\n    }\n\n    \n\n    instance(x: -34, y: 127) Rotate_b9ff6b root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_c62075 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_9f4e5d\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_1b3c7a\n\n        instance(x: 105, y: 112) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = not\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_9f4e5d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> not\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f4e5d -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1b3c7a\n        setter_37db7f.continue -> continue_1b3c7a\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_6f4e8d\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1c7a5b\n\n        instance(x: 772, y: 76) sum_9b3b7b root.Std_k98ojb.Math.Sum {}\n        n_6f4e8d -> sum_9b3b7b.input\n        sum_9b3b7b.result -> result_e245cb\n\n        instance(x: -105, y: -110) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        11 -> modulo_4e8c54.divisor\n        result_e245cb -> modulo_4e8c54.value\n        modulo_4e8c54.result -> output_ai\n\n        instance(x: -144, y: 112, name: \"instance_9f2d5a\") ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo_4e8c54.value == 0\"\n        }\n        getter(x: -272, y: 17, name: \"getter_7f13b7\") getter_7f13b7 = output_ai\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = DivisibleByEleven\n        getter(x: -144, y: 112, name: \"getter_38583a\") getter_38583a = output_ai\n        ifexpression_a2fa90.then -> setter_1cedb2.execute\n        n_6f4e8d -> setter_1cedb2.new_value\n        ifexpression_a2fa90.else -> continue_1c7a5b\n    }\n\n    \n\n    instance(x: -34, y: 127) DivisibleByEleven_9c0a3b root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -436, y: -213, name: \"old\") property(String) old_6b655b\n        in(x: -450, y: -114, name: \"new\") property(String) new_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_c95bcb\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        old_6b655b -> replace_7b3b7b.search\n        new_9f7759 -> replace_7b3b7b.replace\n        output_ai -> replace_7b3b7b.output\n        replace_7b3b7b.result -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_59bc6e root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: -110) list_unique_8eae56 root.Std_k98ojb.List.Unique {}\n        list_ai -> list_unique_8eae56.list\n        list_unique_8eae56.unique_list -> output_ai\n\n        instance(x: 133, y: -131) product_201051 root.Std_k98ojb.Math.Product {}\n        output_ai -> product_201051.inputs\n        product_201051.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) Product_cbc0b6 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_9b38cc root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_9b38cc.input\n            list2_1d86d4 -> not_9b38cc.input\n            not_9b38cc.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"k\") property(Number) k_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_7b3b7b.list\n        k_9f7759 -> slice_7b3b7b.start\n        slice_7b3b7b.end -> -1\n        instance(x: 395, y: 100) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        output_ai -> concat_9b38cc.result\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 245, y: -54, name: \"\") property(Number) _7dd980\n\n            instance(x: 24, y: -53) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n            item_86a8fb -> getat_8eae56.index\n            getat_8eae56.itemAtIndex -> _7dd980\n        } -> slice_7b3b7b.handler\n        slice_7b3b7b.output_list -> concat_9b38cc.left\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_cbc0b6 root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f8e4d\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1c7a5b\n\n        instance(x: 772, y: 76) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = not\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_9f8e4d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> not\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f8e4d -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1c7a5b\n        setter_37db7f.continue -> continue_1c7a5b\n    }\n\n    \n\n    instance(x: -34, y: 127) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1f8d7e\n\n        instance(x: 772, y: 76) expression_9c5b3a root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        number_ai -> expression_9c5b3a.input\n        expression_9c5b3a.output -> DivisibleByEleven.result\n    }\n\n    \n\n    instance(x: -179, y: 30) DivisibleByEleven_8f7d4e root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -289, y: 126, name: \"oldChar\") property(Char) oldChar_1f846b\n        in(x: -281, y: 17, name: \"newChar\") property(Char) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_1f846b -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_59bc6e root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_c2c6e5 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: -110) count_8eae56 root.Std_k98ojb.List.Count {}\n        filter_7b3b7b.output_list -> count_8eae56.items\n        1 -> count_8eae56.reset\n        count_8eae56.count -> output_ai\n\n        instance(x: -8, y: -53) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        list_ai -> map_6030c9.items\n        func() {\n            in(x: -231, y: -69, name: \"x\") property(Number) x_8ee839\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: 24, y: -54) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            x_8ee839 -> mul_2f9d09.first\n            output_ai -> mul_2f9d09.second\n            mul_2f9d09.result -> result_e245cb\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Product_b9ff6b root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") diff_list {\n        in(x: -173, y: 2, name: \"list1\") property(List) list1_9f8d5b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_9f8d5b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            list1_42bc6f -> isnumeric_9cb360.input\n            list2_1d86d4 -> isnumeric_9cb360.input\n            isnumeric_9cb360.isNumeric -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) diff_list_cbc0b6 root.main.diff_list {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"k\") property(Number) k_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) for_7b3b7b root.Std_k98ojb.Std.For {}\n        list_ai -> for_7b3b7b.items\n        func() {\n            in(x: -105, y: -110, name: \"i\") property(Number) i_9cceb3\n\n            out(x: 245, y: -54, name: \"result\") property(List) result_e245cb\n\n            instance(x: -8, y: -53) getat_201051 root.Std_k98ojb.List.GetAt {}\n            list_ai -> getat_201051.list\n            i_9cceb3 -> getat_201051.index\n            getat_201051.itemAtIndex -> result_e245cb\n        } -> for_7b3b7b.handler\n        for_7b3b7b.onItem -> rotate_list.execute\n        rotate_list.continue -> for_7b3b7b.next\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_list_cbc0b6 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 46, y: 158, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_8f6d4a\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_5c9e7b\n\n        instance(x: 104, y: 76) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = not\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_8f6d4a -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> not\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_8f6d4a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_5c9e7b\n        setter_37db7f.continue -> continue_5c9e7b\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 11 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output_b2508f\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output_b2508f\n        n_9f7759 -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f7759 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleByEleven_d6e930 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -436, y: -213, name: \"oldChar\") property(Char) oldChar_1e3c7d\n        in(x: -450, y: -114, name: \"newChar\") property(Char) newChar_9f2a8b\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_c95bcb\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_1e3c7d -> replace_7b3b7b.search\n        newChar_9f2a8b -> replace_7b3b7b.replace\n        output_ai -> replace_7b3b7b.output\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_6c4e5d root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        instance(x: 395, y: -378) list_sort_0e8c5a root.Std_k98ojb.List.Sort {}\n        instance(x: 133, y: -131) unique_9f2d4a root.Std_k98ojb.List.Unique {}\n        instance(x: 723, y: 62) flatten_1e7d3a root.Std_k98ojb.List.Flatten {}\n        instance(x: 24, y: -54) product_5c8d6a root.Std_k98ojb.Math.Product {}\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> list_sort_0e8c5a.list\n        unique_9f2d4a.list -> list_sort_0e8c5a.list\n        flatten_1e7d3a.list -> product_5c8d6a.input\n        product_5c8d6a.result -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Product_c2b9f4 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"dissimilar\") property(List) dissimilar_7c0e3a\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_1f846b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"diff\") property(Number) diff_7c0e3a\n\n            instance(x: -8, y: -53) not_9cb360 root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_9cb360.input\n            list2_1d86d4 -> not_9cb360.input\n            not_9cb360.result -> diff_7c0e3a\n        } -> zip_201051.handler\n        zip_201051.zipped -> dissimilar_7c0e3a\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"n\") property(Number) n_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_c95bcb\n\n        instance(x: 772, y: 76) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_ai -> for_9ab286.items\n        n_9f7759 -> for_9ab286.count\n        func() {\n            in(x: -105, y: -110, name: \"i\") property(Number) i_1e19fb\n\n            out(x: 245, y: -54, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) next_584bfd root.Std_k98ojb.Std.For {}\n            i_1e19fb -> next_584bfd.index\n            list_ai -> next_584bfd.items\n            next_584bfd.next -> for_9ab286.next\n        } -> for_9ab286.handler\n        for_9ab286.itemAtIndex -> output_ai\n        for_9ab286.done -> continue_c95bcb\n        execute_12bf99 -> for_9ab286.reset\n        for_9ab286.index -> next_584bfd.first\n        0 -> next_584bfd.second\n        next_584bfd.next -> for_9ab286.next\n    }\n\n    \n\n    instance(x: -34, y: 127) Rotate_b9ff6b root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_c62075 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_9f4e5d\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_1b3c7a\n\n        instance(x: 105, y: 112) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = not\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_9f4e5d -> ifexpression_e38995.gen_0\n        getter_9cceb3.value -> not\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f4e5d -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_1b3c7a\n        setter_37db7f.continue -> continue_1b3c7a\n\n        instance(x: 105, y: -110) isPrime_9d4e0a root.Std_k98ojb.Logic.Not {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = not\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        n_9f4e5d -> isPrime_9d4e0a.input\n        isPrime_9d4e0a.value -> getter_9cceb3\n        isPrime_9d4e0a.value -> setter_37db7f.new_value\n        setter_1cedb2.continue -> continue_1b3c7a\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -531, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 11 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output_b2508f\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output_b2508f\n        n_9f7759 -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f7759 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleByEleven_d6e930 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -289, y: 126, name: \"old\") property(String) old_9d7f5b\n        in(x: -281, y: 17, name: \"new\") property(String) new_8c6e4a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        old_9d7f5b -> replace_7b3b7b.search\n        new_8c6e4a -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) Replace_cbc0b6 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: -110) List.Sort {}\n        filter_7b3b7b.output_list -> List.Sort.items\n        List.Sort.index -> 0\n        List.Sort.value -> 1\n        List.Sort.next -> 2\n        List.Sort.done -> 3\n\n        instance(x: 133, y: -131) for_201051 root.Std_k98ojb.Std.For {}\n        filter_7b3b7b.output_list -> for_201051.items\n        for_201051.item -> for_201051.handler\n        func() {\n            in(x: -231, y: -69, name: \"x\") property(Number) x_8ee839\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            for_201051.index -> mul_4e8c54.first\n            x_8ee839 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> for_201051.handler\n        for_201051.itemAtIndex -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Product_b9ff6b root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"k\") property(Number) k_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_7b3b7b.list\n        k_9f7759 -> slice_7b3b7b.start\n        slice_7b3b7b.end -> -1\n        instance(x: 395, y: 100) reverse_8815e6 root.Std_k98ojb.List.Reversed {}\n        output_ai -> reverse_8815e6.list\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_cbc0b6 root.main.Rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_1f846b\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: 772, y: 76) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_1f846b -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_1f846b -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -34, y: 127) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_685c8f -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) opposite_sign_d6e930 root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -242, y: 23, name: \"n\") property(Number) n_1f8d5a\n        out(x: 1034, y: -110, name: \"continue\") trigger() continue_e7b3e6\n\n        instance(x: 98, y: -104) sum_0c2d9f root.Std_k98ojb.Math.Sum {}\n        n_1f8d5a -> sum_0c2d9f.input\n        sum_0c2d9f.result -> result_e7e4ac\n        instance(x: 100, y: -58) sub_6b3f45 root.Std_k98ojb.Math.Sub {}\n        result_e7e4ac -> sub_6b3f45.first\n        11 -> sub_6b3f45.second\n        sub_6b3f45.result -> result_e7e4ac\n        instance(x: -105, y: -48) mod_9c2d5a root.Std_k98ojb.Math.Modulo {}\n        result_e7e4ac -> mod_9c2d5a.value\n        11 -> mod_9c2d5a.divisor\n        mod_9c2d5a.result -> result_e7e4ac\n        instance(x: -174, y: 23) ifexpression_b1f8b root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = DivisibleByEleven\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = DivisibleByEleven\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = DivisibleByEleven\n        n_1f8d5a -> ifexpression_b1f8b.gen_0\n        result_e7e4ac -> ifexpression_b1f8b.gen_1\n        getter_9cceb3.value -> result_e7e4ac\n        ifexpression_b1f8b.then -> setter_1cedb2.execute\n        n_1f8d5a -> setter_37db7f.new_value\n        result_e7e4ac -> setter_1cedb2.new_value\n        ifexpression_b1f8b.else -> setter_37db7f.execute\n        execute_e7b3e6 -> ifexpression_b1f8b.execute\n        setter_1cedb2.continue -> continue_e7b3e6\n        setter_37db7f.continue -> continue_e7b3e6\n    }\n\n    \n\n    instance(x: -34, y: 127) DivisibleByEleven_d6e930 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        in(x: -522, y: 17, name: \"oldChar\") property(Char) oldChar_ae\n        in(x: -515, y: 19, name: \"newChar\") property(Char) newChar_ac\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_ae -> replace_7b3b7b.search\n        newChar_ac -> replace_7b3b7b.replace\n        output_ai -> replace_7b3b7b.output\n    }\n\n    \n\n    instance(x: -179, y: 30) ReplaceChars_8f1a6c root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_d6e930 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") unique_product {\n        in(x: -173, y: 2, name: \"list\") property(List) list_5f8d6a\n        out(x: 844, y: 58, name: \"output\") property(Number) output_b9b3e4\n\n        instance(x: 94, y: -105) filter_201051 root.Std_k98ojb.Query.Filter {}\n        instance(x: 723, y: 62) flatten_8f2a5d root.Std_k98ojb.List.Flatten {}\n        instance(x: 177, y: 256) sort_1c6f7d root.Std_k98ojb.List.Sort {}\n        instance(x: 99, y: -249) product_4e8c54 root.Std_k98ojb.Math.Product {}\n        list_5f8d6a -> filter_201051.list\n        filter_201051.result -> flatten_8f2a5d.list\n        flatten_8f2a5d.items -> sort_1c6f7d.items\n        sort_1c6f7d.output_list -> product_4e8c54.input\n        product_4e8c54.result -> output_b9b3e4\n    }\n\n    \n\n    instance(x: 93, y: -122) unique_product_cbc0b6 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") diff {\n        in(x: -242, y: 3, name: \"list1\") property(List) list1_8d4f2a\n        in(x: -234, y: 23, name: \"list2\") property(List) list2_a0e9b5\n\n        out(x: 844, y: 53, name: \"output\") property(List) output_b7c3c6\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_8d4f2a -> zip_201051.left\n        list2_a0e9b5 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Boolean) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_b7c3c6\n    }\n\n    \n\n    instance(x: 93, y: -122) diff_4d9f2e root.main.diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        in(x: -272, y: 17, name: \"k\") property(Number) k_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) for_7b3b7b root.Std_k98ojb.Std.For {}\n        list_ai -> for_7b3b7b.items\n        func() {\n            in(x: -105, y: -110, name: \"i\") property(Number) i_9cceb3\n\n            out(x: 245, y: -54, name: \"result\") property(List) result_e245cb\n\n            instance(x: -8, y: -53) getat_c1bb22 root.Std_k98ojb.List.GetAt {}\n            list_ai -> getat_c1bb22.list\n            i_9cceb3 -> getat_c1bb22.index\n            getat_c1bb22.itemAtIndex -> result_e245cb\n        } -> for_7b3b7b.handler\n        for_7b3b7b.onItem -> rotate_right.execute\n        k_f9110a -> rotate_right.new_value\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_right_b9ff6b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -450, y: 2, name: \"list\") property(List) list_8d5f4a\n        out(x: 844, y: 58, name: \"sum\") property(Number) sum_9c1e7b\n\n        instance(x: 133, y: 76) for_6e3e0b root.Std_k98ojb.Std.For {}\n        list_8d5f4a -> for_6e3e0b.items\n        func() {\n            in(x: -281, y: -48, name: \"item\") property(Number) item_9c1c2b\n\n            out(x: 405, y: -52, name: \"result\") property(Number) result_a7f5a3\n\n            instance(x: 24, y: -54) add_88bb8a root.Std_k98ojb.Math.Add {}\n            item_9c1c2b -> add_88bb8a.first\n            sum_9c1e7b -> add_88bb8a.second\n            add_88bb8a.result -> result_a7f5a3\n        } -> for_6e3e0b.handler\n        for_6e3e0b.onItem -> sum_9c1e7b.execute\n    }\n\n    \n\n    instance(x: 93, y: -122) Sum_d4c2d8 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -242, y: 20, name: \"n\") property(Number) n_0e4f5d\n        out(x: 1028, y: -64, name: \"continue\") trigger() continue_e1b3a6\n        out(x: 1017, y: 55, name: \"output\") property(Bool) output_d2c9d4\n\n        instance(x: 98, y: -69) ifexpression_8f5f0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 1\"\n        }\n        getter(x: -129, y: 58, name: \"getter_6a2c7d\") getter_6a2c7d = is_prime\n        setter(x: 111, y: -245, name: \"setter_d9e4f8\") setter_d9e4f8 = is_prime\n        setter(x: 114, y: -13, name: \"setter_f3b1eb\") setter_f3b1eb = is_prime\n        n_0e4f5d -> ifexpression_8f5f0e.gen_0\n        ifexpression_8f5f0e.then -> setter_d9e4f8.execute\n        getter_6a2c7d.value -> output_d2c9d4\n        is_prime() -> setter_f3b1eb.execute\n        n_0e4f5d -> setter_f3b1eb.new_value\n        ifexpression_8f5f0e.else -> setter_d9e4f8.execute\n    }\n\n    \n\n    instance(x: -179, y: 43) is_prime_7a6f2c root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") SameSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output_b2508f\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output_b2508f\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> output_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) SameSign_d6e930 root.main.SameSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_6e5d1b\n\n        out(x: 340, y: -110, name: \"continue\") trigger() continue_d8c4a9\n        out(x: 512, y: 58, name: \"output\") property(Bool) output_a2f0eb\n\n        instance(x: 133, y: -131) is_divisible_f1d5b6 root.Std_k98ojb.Logic.NotEqual {\n            left: \"Math.floor(n / 11) % 10 == 0\"\n        }\n        instance(x: 177, y: 256) mod_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        n_6e5d1b -> mod_4e8c54.value\n        11 -> mod_4e8c54.divisor\n        mod_4e8c54.result -> is_divisible_f1d5b6.left\n        is_divisible_f1d5b6.right -> output_a2f0eb\n        is_divisible_f1d5b6.predicate -> output_a2f0eb.value\n        is_divisible_f1d5b6.execute -> continue_d8c4a9\n    }\n\n    \n\n    instance(x: -34, y: 127) DivisibleByEleven_7e3f5 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -281, y: 2, name: \"input\") property(String) input_ai\n        in(x: -272, y: 17, name: \"oldChar\") property(Char) oldChar_f9110a\n        in(x: -450, y: -114, name: \"newChar\") property(Char) newChar_9f7759\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) strings_replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_7b3b7b.input\n        oldChar_f9110a -> strings_replace_7b3b7b.search\n        newChar_9f7759 -> strings_replace_7b3b7b.replace\n        strings_replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ReplaceChars_59bc6e root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_c9f6c4 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_of_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) flatten_9b38cc root.Std_k98ojb.List.Flatten {}\n        instance(x: 215, y: 100) filter_c1bb22 root.Std_k98ojb.Query.Filter {\n            where: \"it % 2 == 0\"\n        }\n        instance(x: 723, y: 62) list_8815e6 root.Std_k98ojb.List.Length {}\n        instance(x: 554, y: -99) list_not_empty_f11fda root.Std_k98ojb.Query.NotEmpty {}\n        instance(x: 300, y: 168) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 106, y: 17) product_6a3d8e root.Std_k98ojb.Math.Product {}\n        list_ai -> flatten_9b38cc.items\n        filter_c1bb22.result -> list_8815e6.list\n        list_not_empty_f11fda.result -> list_8815e6.length\n        map_6030c9.output_list -> product_6a3d8e.input\n        product_6a3d8e.output -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) product_of_unique_b9ff6b root.main.product_of_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"dissimilar\") property(List) dissimilar_3e0c6b\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"diff\") property(Number) diff_e245cb\n\n            instance(x: -8, y: -53) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                expression: \"item1 != item2\"\n            }\n            filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n            list1_42bc6f -> filter_7b3b7b.items\n            list2_1d86d4 -> filter_7b3b7b.list\n            dissimilar_3e0c6b -> filter_7b3b7b.result\n        } -> zip_201051.handler\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -289, y: -114, name: \"n\") property(Number) n_1c9b3e\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        out(x: 817, y: -110, name: \"continue\") trigger() continue_4f6d7a\n\n        instance(x: 133, y: -131) slice_0e1b3c root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_0e1b3c.list\n        n_1c9b3e -> slice_0e1b3c.start\n        n_1c9b3e -> slice_0e1b3c.end\n\n        instance(x: 123, y: -55) concat_7a3d4f root.Std_k98ojb.List.Concat {}\n        output_ai -> concat_7a3d4f.result\n        list_ai -> concat_7a3d4f.left\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_list_b1e0c5 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -530, y: 1, name: \"list\") property(List) list_0d40f1\n        out(x: 841, y: 55, name: \"sum\") property(Number) sum_7e6c43\n\n        instance(x: 92, y: 57) add_9a3b8b root.Std_k98ojb.Math.Add {}\n        list_0d40f1 -> add_9a3b8b.items\n        add_9a3b8b.result -> sum_7e6c43\n    }\n\n    \n\n    instance(x: -193, y: 44) Sum_f4a4f8 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -242, y: 2, name: \"n\") property(Number) n_0a8d1f\n\n        out(x: 1036, y: 53, name: \"continue\") trigger() continue_e3e9b5\n        out(x: 1017, y: 25, name: \"output\") property(Boolean) output_4c2d14\n\n        instance(x: -109, y: 46) Std.If {\n            in(x: -121, y: 13, name: \"input\") trigger() input_ea9e0f\n            in(x: -112, y: 26, name: \"execute\") trigger() execute_1d8a6c\n\n            out(x: 1013, y: -14, name: \"then\") property(Boolean) then_c2b3c7\n            out(x: 1055, y: 24, name: \"else\") property(Boolean) else_a0e4f9\n        }\n        n_0a8d1f -> input_ea9e0f.input\n        Std.If.execute -> execute_1d8a6c.execute\n        n_0a8d1f -> then_c2b3c7\n        Std.If.else -> else_a0e4f9\n\n        instance(x: 104, y: -16) count_e1c5eb root.Std_k98ojb.Std.Count {}\n        instance(x: 109, y: 43) add_f6d8a2 root.Std_k98ojb.Math.Add {}\n        2 -> count_e1c5eb.reset\n        n_0a8d1f -> add_f6d8a2.first\n        1 -> add_f6d8a2.second\n        add_f6d8a2.result -> then_c2b3c7\n        ifexpression_e38995.value -> else_a0e4f9\n\n        instance(x: -109, y: 43) floor_5dfc63 root.Std_k98ojb.Math.Floor {}\n        n_0a8d1f -> floor_5dfc63.input\n        1 -> floor_5dfc63.second\n        floor_5dfc63.result -> else_a0e4f9\n\n        instance(x: -109, y: -14) not_3b6da2 root.Std_k98ojb.Logic.Not {}\n        then_c2b3c7 -> not_3b6da2.input\n        output_4c2d14.value -> not_3b6da2.output\n\n        execute_1d8a6c.execute -> else_a0e4f9.execute\n    }\n\n    \n\n    instance(x: -174, y: 13) is_prime_e7b9a5 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f6d3b\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1c8e5a\n\n        instance(x: 772, y: 76) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_9f6d3b -> expression_b720d7.input\n        expression_b720d7.result -> DivisibleByEleven.value\n    }\n\n    \n\n    instance(x: -179, y: 30) DivisibleByEleven_4c8a2e root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -242, y: 1, name: \"input\") property(String) input_8f5d3e\n        in(x: -234, y: 44, name: \"old\") property(String) old_9c4a7b\n        in(x: -228, y: 67, name: \"new\") property(String) new_0d2e1f\n\n        out(x: 1048, y: 69, name: \"output\") property(String) output_5d6c43\n\n        instance(x: 118, y: 73) replace_9b3a7b root.Std_k98ojb.Strings.Replace {}\n        input_8f5d3e -> replace_9b3a7b.input\n        old_9c4a7b -> replace_9b3a7b.search\n        new_0d2e1f -> replace_9b3a7b.replace\n        replace_9b3a7b.result -> output_5d6c43\n    }\n\n    \n\n    instance(x: -193, y: 31) Replace_4d8c63 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: 112) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        list_ai -> map_6030c9.items\n        func() {\n            in(x: -231, y: -69, name: \"x\") property(Number) x_8ee839\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            map_6030c9.output_list -> mul_2f9d09.first\n            x_8ee839 -> mul_2f9d09.second\n            mul_2f9d09.result -> result_e245cb\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Product_cbc0b6 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -173, y: 2, name: \"list1\") property(List) list1_8d3a5b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_8d3a5b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        in(x: -273, y: 17, name: \"k\") property(Number) k_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_ai -> for_9ab286.items\n        k_f9110a -> for_9ab286.count\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 245, y: -54, name: \"\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) slice_4e8c54 root.Std_k98ojb.List.Slice {}\n            for_9ab286.index -> slice_4e8c54.start\n            k_f9110a -> slice_4e8c54.end\n            slice_4e8c54.slice -> result_e245cb\n        } -> for_9ab286.handler\n        for_9ab286.onItem -> result_e245cb\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_cbc0b6 root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_1f6d3e\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_4c8a7b\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_9e5d0f\n\n        instance(x: 80, y: -417) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        instance(x: 133, y: -131) isprime_5f8d0a root.Std_k98ojb.Logic.Not {}\n        getter(x: -105, y: -110) getter_9cceb3 -> isprime_5f8d0a.input\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        instance(x: 196, y: 256) lessThanOrEqual_1b2c4e root.Std_k98ojb.Math.LessThanOrEqual {}\n        n_1f6d3e -> lessThanOrEqual_1b2c4e.left\n        1 -> lessThanOrEqual_1b2c4e.right\n        lessThanOrEqual_1b2c4e.result -> ifexpression_e38995.gen_0\n        instance(x: -8, y: -53) greaterThan_9f6d7a root.Std_k98ojb.Math.GreaterThan {}\n        n_1f6d3e -> greaterThan_9f6d7a.left\n        1 -> greaterThan_9f6d7a.right\n        greaterThan_9f6d7a.result -> ifexpression_e38995.gen_1\n        ifexpression_e38995.then -> setter_37db7f.execute\n        n_1f6d3e -> setter_1cedb2.new_value\n        isprime_5f8d0a.input -> output\n        lessThanOrEqual_1b2c4e.result -> continue_4c8a7b\n        greaterThan_9f6d7a.result -> continue_4c8a7b\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"checks whether the given two integers have opposite sign or not.\") same_sign {\n        in(x: -288, y: 1, name: \"a\") property(Number) a_5f8d0e\n        in(x: -294, y: 20, name: \"b\") property(Number) b_7c43f3\n\n        out(x: 38, y: 68, name: \"continue\") trigger() continue_2eb4a6\n        out(x: 44, y: 56, name: \"output\") property(Bool) output_d1d0e5\n\n        instance(x: -103, y: 62) ifexpression_bf0b9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -134, y: 75, name: \"getter_4c8e77\") getter_4c8e77 = output_d1d0e5\n        setter(x: 110, y: -227, name: \"setter_e3f7a2\") setter_e3f7a2 = same_sign\n        a_5f8d0e -> ifexpression_bf0b9.gen_0\n        b_7c43f3 -> ifexpression_bf0b9.gen_1\n        getter_4c8e77.value -> output_d1d0e5\n        ifexpression_bf0b9.then -> setter_e3f7a2.execute\n        a_5f8d0e -> setter_e3f7a2.new_value\n        b_7c43f3 -> setter_e3f7a2.new_value\n        ifexpression_bf0b9.else -> continue_2eb4a6\n        execute_2eb4a6 -> ifexpression_bf0b9.execute\n    }\n\n    \n\n    instance(x: -201, y: 47) same_sign_8c63f5 root.main.same_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -231, y: 17, name: \"n\") property(Number) n_1f5e38\n        out(x: 118, y: 75, name: \"continue\") trigger() continue_e7b3a9\n\n        instance(x: 77, y: 74) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_1f5e38 -> expression_b720d7.input\n        expression_b720d7.result -> DivisibleByEleven.output_e3c9a4\n    }\n\n    \n\n    instance(x: -201, y: 55) DivisibleByEleven_fdb2ec root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -241, y: 13, name: \"input\") property(String) input_8d5a1f\n        in(x: -230, y: 42, name: \"oldChar\") property(Char) oldChar_2c3e15\n        in(x: -229, y: 64, name: \"newChar\") property(Char) newChar_e7b0f8\n\n        out(x: 1009, y: 58, name: \"output\") property(String) output_5d6cd4\n        out(x: 1073, y: -59, name: \"continue\") trigger() continue_d2c63e\n\n        instance(x: 94, y: 70) strings_replace_9d8f0b root.Std_k98ojb.Strings.Replace {}\n        input_8d5a1f -> strings_replace_9d8f0b.input\n        oldChar_2c3e15 -> strings_replace_9d8f0b.search\n        newChar_e7b0f8 -> strings_replace_9d8f0b.replace\n        strings_replace_9d8f0b.result -> output_5d6cd4\n    }\n\n    \n\n    instance(x: 95, y: -60) ReplaceChars_a1c5a2 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_c2d4e9 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") unique_product {\n        in(x: -210, y: 18, name: \"list\") property(List) list_0d40f1\n        out(x: 1039, y: -69, name: \"output\") property(Number) output_a3a4db\n\n        instance(x: 134, y: 67) unique_7c2b6e root.Std_k98ojb.List.Uniq {}\n        list_0d40f1 -> unique_7c2b6e.list\n        unique_7c2b6e.result -> set_a3a4db\n        instance(x: -104, y: 56) product_4c5bb9 root.Std_k98ojb.Math.Product {}\n        set_a3a4db -> product_4c5bb9.input\n        product_4c5bb9.output -> output_a3a4db\n    }\n\n    \n\n    instance(x: -92, y: 25) unique_product_e7f2e6 root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -231, y: 19, name: \"list1\") property(List) list1_9f8aeb\n        in(x: -225, y: 54, name: \"list2\") property(List) list2_c6e5df\n\n        out(x: 1023, y: 53, name: \"dissimilar_list\") property(List) dissimilar_list_e4c0b1\n\n        instance(x: 394, y: -26) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        list1_9f8aeb -> filter_7b3b7b.list\n        list2_c6e5df -> filter_7b3b7b.list\n        instance(x: 73, y: -38) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        dissimilar_list_e4c0b1 -> zip_201051.output_list\n\n        func() {\n            in(x: -278, y: -51, name: \"item\") property(Number) item_a7d5e8\n            out(x: 1232, y: -52, name: \"\") property(Boolean) is_dissimilar_eb4f44\n\n            instance(x: 6, y: -55) not_3aee24 root.Std_k98ojb.Logic.Not {}\n            item_a7d5e8 -> not_3aee24.input\n            not_3aee24.result -> is_dissimilar_eb4f44\n        } -> filter_7b3b7b.handler\n        zip_201051.left -> dissimilar_list_e4c0b1.items\n        zip_201051.right -> dissimilar_list_e4c0b1.items\n    }\n\n    \n\n    instance(x: -192, y: 45) dissimilar_elements_b1f8a5 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -289, y: 3, name: \"list\") property(List) list_1f6e9d\n        in(x: -300, y: 25, name: \"n\") property(Number) n_a2b4eb\n\n        out(x: 832, y: 19, name: \"output\") property(List) output_e7a3c5\n\n        instance(x: 98, y: -115) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_1f6e9d -> for_8cb3f6.items\n        instance(x: 94, y: -54) slice_3a4c21 root.Std_k98ojb.List.Slice {}\n        n_a2b4eb -> slice_3a4c21.start\n        slice_3a4c21.end -> slice_3a4c21.end\n        for_8cb3f6.index -> slice_3a4c21.index\n        instance(x: 109, y: -39) next_7e9b1 root.Std_k98ojb.List.Next {}\n        output_e7a3c5 -> next_7e9b1.list\n        instance(x: 114, y: 12) add_88bb8a root.Std_k98ojb.List.Add {}\n        for_8cb3f6.item -> add_88bb8a.first\n        n_a2b4eb -> add_88bb8a.second\n        next_7e9b1.next -> add_88bb8a.listWithItem\n        instance(x: 106, y: -58) filter_875ddb root.Std_k98ojb.Iteration.Filter {}\n        for_8cb3f6.onItem -> filter_875ddb.execute\n        filter_875ddb.output_list -> output_e7a3c5\n    }\n\n    \n\n    instance(x: -186, y: 24) rotate_right_4e0f2d root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -201, y: 12, name: \"array\") property(List) array_9f8e34\n        out(x: 840, y: 65, name: \"result\") property(Number) result_a1b3a5\n\n        instance(x: 73, y: 62) sum_0c4d7a root.Std_k98ojb.Math.Sum {}\n        array_9f8e34 -> sum_0c4d7a.array\n        sum_0c4d7a.result -> result_a1b3a5\n    }\n\n    \n\n    instance(x: -136, y: 33) Sum_6e2d43 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -534, y: 14, name: \"n\") property(Number) n_8f2d3e\n\n        out(x: 1001, y: -67, name: \"continue\") trigger() continue_e7d4a9\n        out(x: 1130, y: -47, name: \"output\") property(Bool) output_d66c43\n\n        instance(x: 97, y: -70) ifexpression_3f2e31 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -139, y: 52, name: \"getter_0a4d14\") getter_0a4d14 = is_prime\n        setter(x: 116, y: -242, name: \"setter_e6e3ea\") setter_e6e3ea = is_prime\n        setter(x: 118, y: -36, name: \"setter_b2f7c1\") setter_b2f7c1 = is_prime\n        n_8f2d3e -> ifexpression_3f2e31.gen_0\n        ifexpression_3f2e31.then -> setter_e6e3ea.execute\n        n_8f2d3e -> setter_b2f7c1.new_value\n        ifexpression_3f2e31.else -> setter_e6e3ea.execute\n        execute_e7d4a9 -> ifexpression_3f2e31.execute\n        setter_e6e3ea.continue -> continue_e7d4a9\n        setter_b2f7c1.continue -> continue_e7d4a9\n    }\n\n    \n\n    instance(x: -179, y: 15) is_prime_dff4b5 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_sign {\n        in(x: -533, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -530, y: 18, name: \"b\") property(Number) b_f9110a\n\n        out(x: 42, y: 157, name: \"continue\") trigger() continue_b4e3df\n        out(x: 49, y: 173, name: \"result\") property(Bool) result_e5d8eb\n\n        instance(x: -104, y: -110) ifexpression_d7a91b root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a * b < 0)\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 115, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> ifexpression_d7a91b.gen_0\n        b_f9110a -> ifexpression_d7a91b.gen_1\n        getter_9cceb3.value -> result_e5d8eb\n        ifexpression_d7a91b.then -> setter_1cedb2.execute\n        execute_b4e3df -> ifexpression_d7a91b.execute\n    }\n\n    \n\n    instance(x: -179, y: 30) has_opposite_sign_58f7bc root.main.has_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -450, y: -114, name: \"n\") property(Number) n_f9d1f6\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_b0e2eb\n\n        instance(x: 772, y: 76) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_f9d1f6 -> expression_7b3b7b.input\n        expression_7b3b7b.output -> output_b0e2eb\n    }\n\n    \n\n    instance(x: -179, y: 30) DivisibleByEleven_a8afdb root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") Replace {\n        in(x: -240, y: 2, name: \"input\") property(String) input_ai\n        in(x: -238, y: 15, name: \"oldChar\") property(String) oldChar_ac\n        in(x: -228, y: 33, name: \"newChar\") property(String) newChar_ac\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_ac -> replace_7b3b7b.search\n        newChar_ac -> replace_7b3b7b.replace\n        output_ai -> replace_7b3b7b.output\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_59bc6e root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_c1d6f2 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -242, y: 2, name: \"list\") property(List) list_9d3a5b\n\n        out(x: 844, y: 64, name: \"output\") property(Number) output_d7c1e8\n        instance(x: 94, y: 67) filter_201f45 root.Std_k98ojb.Query.Filter {\n            where: \"it in list\"\n        }\n        instance(x: -175, y: 74) flatten_9d5ea2 root.Std_k98ojb.List.Flatten {}\n        instance(x: -146, y: 76) map_1f0ca7 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 72, y: 70) product_8e83c6 root.Std_k98ojb.Math.Product {}\n        list_9d3a5b -> filter_201f45.list\n        filter_201f45.result -> flatten_9d5ea2.items\n        flatten_9d5ea2.items -> map_1f0ca7.items\n        instance(map_1f0ca7.gen_0) -> product_8e83c6.handler\n    }\n\n    \n\n    instance(x: 95, y: -47) product_unique_4a9c42 root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"dissimilar\") property(List) dissimilar_4e0c34\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"diff\") property(Number) diff_ea38e3\n\n            instance(x: -8, y: -53) notequal_9cb360 root.Std_k98ojb.Logic.NotEqual {}\n            list1_42bc6f -> notequal_9cb360.left\n            list2_1d86d4 -> notequal_9cb360.right\n            notequal_9cb360.result -> diff_ea38e3\n        } -> zip_201051.handler\n        zip_201051.zipped -> dissimilar_4e0c34\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_c6d2ae root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -242, y: 2, name: \"list\") property(List) list_4f1e3b\n        in(x: -220, y: 59, name: \"k\") property(Number) k_d5a0c6\n\n        out(x: 836, y: 63, name: \"output\") property(List) output_a2d8db\n\n        instance(x: 334, y: 67) list_slice_64e4f3 root.Std_k98ojb.List.Slice {}\n        instance(x: -193, y: 21) concat_a9c5f1 root.Std_k98ojb.List.Concat {}\n        setter(x: -221, y: 85, name: \"setter_7a31ca\") setter_7a31ca = list\n        getter(x: 102, y: 49, name: \"getter_4d66cf\") getter_4d66cf = list\n        getter(x: -228, y: 11, name: \"getter_8fdd45\") getter_8fdd45 = k\n        instance(x: 317, y: 74) ifexpression_d3e6b7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"k > list.length\"\n        }\n        list_4f1e3b -> ifexpression_d3e6b7.gen_0\n        k_d5a0c6 -> ifexpression_d3e6b7.gen_1\n        getter_8fdd45.value -> concat_a9c5f1.from\n        ifexpression_d3e6b7.then -> setter_7a31ca.execute\n        list_4f1e3b -> concat_a9c5f1.to\n        concat_a9c5f1.result -> output_a2d8db\n        setter_7a31ca.continue -> ifexpression_d3e6b7.execute\n    }\n\n    \n\n    instance(x: -194, y: 73) rotate_list_b4fa47 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -206, y: 13, name: \"list\") property(List) list_0f3e9a\n        out(x: 439, y: 31, name: \"output\") property(Number) output_d7b4c8\n\n        instance(x: 92, y: 26) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: -202, y: 74) add_b4554f root.Std_k98ojb.Math.Add {}\n        getter(x: -219, y: 46, name: \"getter_e808a2\") getter_e808a2 = sum\n        list_0f3e9a -> for_8cb3f6.items\n        0 -> add_b4554f.first\n        for_8cb3f6.onItem -> add_b4554f.second\n        add_b4554f.result -> getter_e808a2\n    }\n\n    \n\n    instance(x: -102, y: 19) Sum_b7d4e3 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -534, y: 3, name: \"n\") property(Number) n_5d9e6a\n        out(x: 823, y: 41, name: \"continue\") trigger() continue_c1b4c2\n\n        instance(x: 106, y: 47) ifexpression_8f7c71 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n < 2\"\n        }\n        getter(x: -251, y: 52, name: \"getter_a6d3ca\") getter_a6d3ca = is_prime\n        setter(x: 102, y: 35, name: \"setter_66c5b4\") setter_66c5b4 = is_prime\n        n_5d9e6a -> ifexpression_8f7c71.gen_0\n        ifexpression_8f7c71.then -> setter_66c5b4.execute\n        execute_c1b4c2 -> setter_66c5b4.execute\n    }\n\n    \n\n    instance(x: 76, y: -41) is_prime_6d9db3 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -450, y: -114, name: \"n\") property(Number) n_8d3a2b\n\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: 772, y: 76) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_8d3a2b -> expression_9fba8c.input\n        expression_9fba8c.output -> output_b2508f\n    }\n\n    \n\n    instance(x: -179, y: 30) DivisibleByEleven_59bc6e root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        in(x: -526, y: 16, name: \"old\") property(String) old_ai\n        in(x: -518, y: 43, name: \"new\") property(String) new_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        old_ai -> replace_7b3b7b.search\n        new_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_59bc6e root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -173, y: 2, name: \"list\") property(List) list_5d6e3f\n        out(x: 844, y: 53, name: \"output\") property(Number) output_0c7b8a\n\n        instance(x: 133, y: -131) filter_201051 root.Std_k98ojb.Query.Filter {}\n        instance(x: 723, y: 62) list_unique_8815e6 root.Std_k98ojb.List.Uniq {}\n        instance(x: 94, y: -105) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 177, y: 256) prod_584bfd root.Std_k98ojb.Math.Prod {}\n        list_5d6e3f -> filter_201051.list\n        filter_201051.result -> list_unique_8815e6.list\n        map_f2330d.items -> list_unique_8815e6.items\n        prod_584bfd.input_list -> map_f2330d.output_list\n        1 -> prod_584bfd.factor\n        output_0c7b8a -> prod_584bfd.result\n    }\n\n    \n\n    instance(x: -34, y: 127) Product_b9ff6b root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -281, y: 2, name: \"list1\") property(List) list1_9f7759\n        in(x: -272, y: 17, name: \"list2\") property(List) list2_f9110a\n\n        out(x: 46, y: 158, name: \"dissimilar\") property(List) dissimilar_b2508f\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it not in list2\"\n        }\n        list1_9f7759 -> filter_7b3b7b.list\n        filter_7b3b7b.result -> dissimilar_b2508f\n    }\n\n    \n\n    instance(x: -179, y: 30) Diff_c62075 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -173, y: 2, name: \"list\") property(List) list_ai\n        in(x: -182, y: 15, name: \"k\") property(Number) k_9d4e5b\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_ai -> zip_201051.left\n        k_9d4e5b -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n            list1_42bc6f -> modulo_4e8c54.value\n            list2_1d86d4 -> modulo_4e8c54.divisor\n            modulo_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_cbc0b6 root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -242, y: 22, name: \"n\") property(Number) n_8d3f6a\n\n        out(x: 1015, y: 64, name: \"continue\") trigger() continue_9c7b4e\n        out(x: 1001, y: 55, name: \"output\") property(Bool) output_8d0c71\n\n        instance(x: -106, y: -69) ifexpression_d3f6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -129, y: 52, name: \"getter_9e4d7c\") getter_9e4d7c = output\n        setter(x: 104, y: -246, name: \"setter_8f2a3b\") setter_8f2a3b = output\n        instance(x: 101, y: 59) isprime_5c1f77 root.Std_k98ojb.Logic.Not {}\n        getter(x: 113, y: 70, name: \"getter_9e4d7c\") getter_9e4d7c = output\n        setter(x: 114, y: -244, name: \"setter_8f2a3b\") setter_8f2a3b = output\n        instance(x: 100, y: 55) div_6e0e1 root.Std_k98ojb.Math.Div {}\n        n_8d3f6a -> div_6e0e1.first\n        2 -> div_6e0e1.second\n        div_6e0e1.result -> isprime_5c1f77.input\n        isprime_5c1f77.value -> setter_8f2a3b\n        ifexpression_d3f6a.then -> continue_9c7b4e\n        n_8d3f6a -> setter_8f2a3b.new_value\n        isprime_5c1f77.value -> getter_9e4d7c\n        div_6e0e1.result -> isprime_5c1f77.input\n        ifexpression_d3f6a.else -> continue_9c7b4e\n    }\n\n    \n\n    instance(x: -103, y: 44) IsPrime_8c2d4 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"checks whether the given two integers have opposite sign or not.\") same_sign {\n        in(x: -287, y: 1, name: \"a\") property(Number) a_5f8d2e\n        in(x: -291, y: 4, name: \"b\") property(Number) b_0c45f9\n\n        out(x: 51, y: 85, name: \"continue\") trigger() continue_7ebc23\n        out(x: 28, y: 59, name: \"output\") property(Bool) output_3d4e5b\n\n        instance(x: -114, y: -93) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -157, y: 84, name: \"getter_7f13b7\") getter_7f13b7 = same_sign\n        setter(x: -31, y: -123, name: \"setter_d09207\") setter_d09207 = same_sign\n        setter(x: 87, y: 71, name: \"setter_29a5c8\") setter_29a5c8 = same_sign\n        a_5f8d2e -> ifexpression_a2fa90.gen_0\n        b_0c45f9 -> ifexpression_a2fa90.gen_1\n        getter_7f13b7.value -> output_3d4e5b\n        ifexpression_a2fa90.then -> setter_d09207.execute\n        a_5f8d2e -> setter_d09207.new_value\n        b_0c45f9 -> setter_29a5c8.new_value\n        ifexpression_a2fa90.else -> setter_29a5c8.execute\n        execute_7ebc23 -> ifexpression_a2fa90.execute\n        setter_d09207.continue -> continue_7ebc23\n        setter_29a5c8.continue -> continue_7ebc23\n    }\n\n    \n\n    instance(x: -85, y: 50) same_sign_6e3d1b root.main.same_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -528, y: 21, name: \"n\") property(Number) n_8f5e45\n        out(x: 1051, y: 33, name: \"continue\") trigger() continue_ba6c64\n\n        instance(x: 76, y: -13) sum_2d3baf root.Std_k98ojb.Math.Sum {}\n        instance(x: 95, y: 22) sub_8e4f41 root.Std_k98ojb.Math.Sub {}\n        instance(x: 97, y: 37) div_9c1a6b root.Std_k98ojb.Math.Div {}\n        instance(x: -32, y: 68) remainder_a5d7af root.Std_k98ojb.Math.Remainder {}\n        n_8f5e45 -> sub_8e4f41.first\n        sum_2d3baf.value -> div_9c1a6b.first\n        div_9c1a6b.second -> remainder_a5d7af.divisor\n        sub_8e4f41.result -> div_9c1a6b.first\n        div_9c1a6b.result -> remainder_a5d7af.value\n        remainder_a5d7af.output -> n_8f5e45\n    }\n\n    \n\n    instance(x: -32, y: 70) DivisibleByEleven_ba0db2 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -234, y: 16, name: \"input\") property(String) input_8d5a45\n        in(x: -219, y: 74, name: \"oldChar\") property(Char) oldChar_a2b3e1\n        in(x: -214, y: 57, name: \"newChar\") property(Char) newChar_e1c0ab\n\n        out(x: 1014, y: 56, name: \"output\") property(String) output_7f8d6a\n        out(x: 983, y: 19, name: \"continue\") trigger() continue_dfe5ac\n\n        instance(x: -43, y: 58) replace_0c4e66 root.Std_k98ojb.Strings.Replace {}\n        input_8d5a45 -> replace_0c4e66.input\n        oldChar_a2b3e1 -> replace_0c4e66.search\n        newChar_e1c0ab -> replace_0c4e66.replace\n        replace_0c4e66.result -> output_7f8d6a\n    }\n\n    \n\n    instance(x: -98, y: 64) ReplaceChars_69b9e3 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -450, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_d6e930 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") unique_product {\n        in(x: -230, y: 26, name: \"list\") property(List) list_0d40f1\n        out(x: 1149, y: -68, name: \"output\") property(Number) output_b4e2ab\n\n        instance(x: 134, y: -113) unique_5a7b9c root.Std_k98ojb.List.Uniq {}\n        list_0d40f1 -> unique_5a7b9c.list\n        unique_5a7b9c.output_list -> set_4e8c54.new_value\n        instance(x: 74, y: -44) for_9ab286 root.Std_k98ojb.Std.For {}\n        set_4e8c54 -> for_9ab286.items\n        func() {\n            in(x: -241, y: -40, name: \"item\") property(Number) item_5d74a1\n\n            out(x: 1553, y: -64, name: \"\") property(Number) result_a7e8b2\n\n            instance(x: 98, y: -54) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            item_5d74a1 -> mul_2f9d09.first\n            item_5d74a1 -> mul_2f9d09.second\n            mul_2f9d09.result -> result_a7e8b2\n        } -> for_9ab286.handler\n        set_4e8c54.list -> for_9ab286.items\n    }\n\n    \n\n    instance(x: -193, y: 45) unique_product_bdd3a1 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -177, y: 16, name: \"list1\") property(List) list1_8f5a15\n        in(x: -189, y: -9, name: \"list2\") property(List) list2_0d84e6\n\n        out(x: 743, y: -66, name: \"output\") property(List) output_e0b7df\n\n        instance(x: 123, y: -87) filter_4f8c5a root.Std_k98ojb.Query.Filter {}\n        list1_8f5a15 -> filter_4f8c5a.list\n        list2_0d84e6 -> filter_4f8c5a.list\n        filter_4f8c5a.result -> output_e0b7df\n    }\n\n    \n\n    instance(x: -27, y: 73) dissimilar_elements_b3ad9 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -430, y: 23, name: \"list\") property(List) list_5f6a9d\n        in(x: -414, y: 154, name: \"n\") property(Number) n_d2b0eb\n\n        out(x: 1053, y: -112, name: \"output\") property(List) output_7c4e22\n        out(x: 1029, y: -110, name: \"continue\") trigger() continue_98d1db\n\n        instance(x: 74, y: -104) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 549, y: 169) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: 13, y: -65, name: \"setter_d91a7c\") setter_d91a7c = list\n        getter(x: 92, y: -74, name: \"getter_b7d4e6\") getter_b7d4e6 = list\n        instance(x: 559, y: -105) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 92, y: 174) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n        getter_b7d4e6 -> getat_8eae56.list\n        n_d2b0eb -> getat_8eae56.index\n        ifexpression_5c4634.then -> setter_d91a7c.execute\n        for_8cb3f6.itemAtIndex -> concat_9b38cc.items\n        getat_8eae56.itemAtIndex -> output_7c4e22\n        concat_9b38cc.result -> getter_b7d4e6\n        ifexpression_5c4634.else -> setter_d91a7c.execute_cdac2a\n        execute_98d1db -> setter_d91a7c.execute_cdac2a\n    }\n\n    \n\n    instance(x: -96, y: 121) rotate_right_0b9f34 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -432, y: 64, name: \"array\") property(List) array_9f8e77\n        out(x: 1054, y: -56, name: \"sum\") property(Number) sum_4d4a85\n\n        instance(x: 78, y: 76) add_6c0b49 root.Std_k98ojb.Math.Add {}\n        array_9f8e77 -> add_6c0b49.first\n        0 -> add_6c0b49.second\n        sum_4d4a85 -> add_6c0b49.result\n\n        instance(x: -200, y: 48) count_1cd7ab root.Std_k98ojb.List.Count {}\n        array_9f8e77 -> count_1cd7ab.list\n        count_1cd7ab.length -> sum_4d4a85\n    }\n\n    \n\n    instance(x: 91, y: -67) Sum_d5c6ad root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -394, y: 27, name: \"n\") property(Number) n_8f2d0e\n\n        out(x: 1131, y: -47, name: \"continue\") trigger() continue_e7e5a3\n        out(x: 1074, y: 49, name: \"output\") property(Bool) output_bfddce\n\n        instance(x: 96, y: -56) ifexpression_6d8c9b root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -149, y: 25, name: \"getter_ebea63\") getter_ebea63 = is_prime\n        setter(x: 123, y: -220, name: \"setter_6d8c9b\") setter_6d8c9b = is_prime\n        setter(x: 127, y: 26, name: \"setter_c34e3f\") setter_c34e3f = is_prime\n        n_8f2d0e -> ifexpression_6d8c9b.gen_0\n        ifexpression_6d8c9b.then -> setter_c34e3f.execute\n        2 -> setter_c34e3f.new_value\n        output_bfddce.value -> is_prime\n        is_prime.continue -> continue_e7e5a3\n    }\n\n    \n\n    instance(x: -151, y: -35) is_prime_9c8d37 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_sign {\n        in(x: -246, y: 1, name: \"a\") property(Number) a_8d1e2f\n        in(x: -247, y: 20, name: \"b\") property(Number) b_b5ca42\n\n        out(x: 69, y: 84, name: \"continue\") trigger() continue_e9e4c6\n        out(x: 71, y: 21, name: \"output\") property(Bool) output_59d2da\n\n        instance(x: 19, y: -47) ifexpression_a8f3fa root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < 0 and b >= 0\"\n        }\n        getter(x: -148, y: 54, name: \"getter_38e5c9\") getter_38e5c9 = has_opposite_sign\n        setter(x: 104, y: -64, name: \"setter_d52d1a\") setter_d52d1a = has_opposite_sign\n        setter(x: 101, y: 7, name: \"setter_c6db37\") setter_c6db37 = has_opposite_sign\n        a_8d1e2f -> ifexpression_a8f3fa.gen_0\n        b_b5ca42 -> ifexpression_a8f3fa.gen_1\n        getter_38e5c9.value -> output_59d2da\n        ifexpression_a8f3fa.then -> setter_d52d1a.execute\n        a_8d1e2f -> setter_c6db37.new_value\n        b_b5ca42 -> setter_d52d1a.new_value\n        ifexpression_a8f3fa.else -> setter_c6db37.execute\n        execute_e9e4c6 -> ifexpression_a8f3fa.execute\n        setter_d52d1a.continue -> continue_e9e4c6\n        setter_c6db37.continue -> continue_e9e4c6\n    }\n\n    \n\n    instance(x: -42, y: 59) has_opposite_sign_5b3d2f root.main.has_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -530, y: 2, name: \"number\") property(Number) number_8a5e0f\n        out(x: 513, y: 79, name: \"output\") property(Bool) output_e3b9c4\n\n        instance(x: 96, y: 73) sum_1a6d58 root.Std_k98ojb.Math.Expression {\n            expression: \"(n * 10 + 2) % 11 == 0\"\n        }\n        number_8a5e0f -> sum_1a6d58.input\n        sum_1a6d58.value -> output_e3b9c4\n    }\n\n    \n\n    instance(x: -224, y: 34) DivisibleByEleven_b6e33a root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") Replace {\n        in(x: -534, y: 3, name: \"input\") property(String) input_4e9f38\n        in(x: -531, y: 57, name: \"old_char\") property(Char) old_char_b7bdf6\n        in(x: -525, y: 67, name: \"new_char\") property(Char) new_char_e8a5d1\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_9c33f1\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_4e9f38 -> replace_7b3b7b.input\n        old_char_b7bdf6 -> replace_7b3b7b.search\n        new_char_e8a5d1 -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_9c33f1\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_b17e38 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_c59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -530, y: 2, name: \"list\") property(List) list_4f1e9b\n        out(x: 860, y: 44, name: \"output\") property(Number) output_d8c4a5\n\n        instance(x: 97, y: -114) filter_7b3b7b root.Std_k98ojb.Query.Filter {}\n        list_4f1e9b -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_d8c4a5\n        instance(x: 94, y: -54) unique_57d2d0 root.Std_k98ojb.List.Unique {}\n        list_4f1e9b -> unique_57d2d0.items\n        unique_57d2d0.list -> filter_7b3b7b.list\n        instance(x: 88, y: -78) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        filter_7b3b7b.result -> map_f2330d.items\n        function_instance(root.Std_k98ojb.Math.Pow) pow_ea4e30 (x: Number, y: Number) Number {\n            return x * y\n        }\n        instance(x: 88, y: -78) map_f2330d.handler {}\n        map_f2330d.output_list -> output_d8c4a5\n    }\n\n    \n\n    instance(x: -31, y: 103) product_unique_55e7be root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"dissimilar\") property(List) dissimilar_4e38b6\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"diff\") property(Number) diff_ea91b3\n\n            instance(x: -8, y: -53) notEqual_9cb360 root.Std_k98ojb.Logic.NotEqual {}\n            list1_42bc6f -> notEqual_9cb360.left\n            list2_1d86d4 -> notEqual_9cb360.right\n            notEqual_9cb360.result -> diff_ea91b3\n        } -> zip_201051.handler\n        zip_201051.zipped -> dissimilar_4e38b6\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -231, y: 2, name: \"list\") property(List) list_4f6a9d\n        in(x: -203, y: 115, name: \"k\") property(Number) k_d5b5c7\n\n        out(x: 1080, y: 53, name: \"output\") property(List) output_8e3d95\n        instance(x: 434, y: 127) slice_6a1f2f root.Std_k98ojb.List.Slice {}\n        list_4f6a9d -> slice_6a1f2f.items\n        k_d5b5c7 -> slice_6a1f2f.slice\n        instance(x: -221, y: 69) for_6ef6e0 root.Std_k98ojb.Std.For {}\n        slice_6a1f2f.index -> for_6ef6e0.index\n        list_4f6a9d -> for_6ef6e0.item\n        instance(x: -199, y: 14) concat_5bbfcb root.Std_k98ojb.List.Concat {}\n        output_8e3d95.listWithItem -> concat_5bbfcb.new_value\n    }\n\n    \n\n    instance(x: -99, y: 70) rotate_list_e2c9f6 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -446, y: 6, name: \"list\") property(List) list_5f4a1d\n\n        out(x: 1062, y: 32, name: \"output\") property(Number) output_d7b0eb\n        instance(x: 84, y: 25) add_f3c9e6 root.Std_k98ojb.Math.Add {}\n        list_5f4a1d -> add_f3c9e6.list\n        0 -> add_f3c9e6.first\n        list_5f4a1d -> add_f3c9e6.second\n        add_f3c9e6.result -> output_d7b0eb\n    }\n\n    \n\n    instance(x: -292, y: 26) Sum_b8f3ae root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -176, y: 13, name: \"n\") property(Number) n_6a5d17\n        out(x: 34, y: -56, name: \"continue\") trigger() continue_e5c3b1\n        out(x: 43, y: 57, name: \"output\") property(Bool) output_9f8e76\n\n        instance(x: 55, y: -23) count_7d34c6 root.Std_k98ojb.Std.Count {}\n        n_6a5d17 -> count_7d34c6.input\n        count_7d34c6.reset -> is_prime.execute\n        count_7d34c6.count -> is_prime.value\n        instance(x: 117, y: -46) ifexpression_a25d14 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n > 1\"\n        }\n        getter(x: 102, y: 15, name: \"getter_96f9aa\") getter_96f9aa = is_prime\n        setter(x: -23, y: -64, name: \"setter_c0b5a8\") setter_c0b5a8 = is_prime\n        n_6a5d17 -> ifexpression_a25d14.gen_0\n        1 -> ifexpression_a25d14.gen_1\n        getter_96f9aa.value -> output_9f8e76\n        ifexpression_a25d14.then -> setter_c0b5a8.execute\n        n_6a5d17 -> setter_c0b5a8.new_value\n        is_prime.continue -> continue_e5c3b1\n    }\n\n    \n\n    instance(x: -29, y: 85) is_prime_0e7f9c root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -531, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 11 == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output_b2508f\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output_b2508f\n        n_9f7759 -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_9f7759 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleByEleven_d6e930 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -181, y: -13, name: \"old\") property(String) old_9d7f5b\n        in(x: -189, y: 446, name: \"new\") property(String) new_8c6e4a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        instance(x: 133, y: -131) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        old_9d7f5b -> replace_7b3b7b.search\n        new_8c6e4a -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) Replace_cbc0b6 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: -110) List.Sort {}\n        filter_7b3b7b.output_list -> List.Sort.items\n        List.Sort.index -> 0\n        List.Sort.value -> 1\n        List.Sort.next -> 2\n        List.Sort.done -> 3\n\n        instance(x: 133, y: -131) for_201051 root.Std_k98ojb.Std.For {}\n        filter_7b3b7b.output_list -> for_201051.items\n        for_201051.item -> for_201051.handler\n        func() {\n            in(x: -231, y: -69, name: \"x\") property(Number) x_8ee839\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            for_201051.index -> mul_4e8c54.first\n            x_8ee839 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> for_201051.handler\n        for_201051.itemAtIndex -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Product_b9ff6b root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -281, y: 17, name: \"k\") property(Number) k_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_7b3b7b.list\n        k_9f7759 -> slice_7b3b7b.start\n        slice_7b3b7b.end -> -1\n        instance(x: 395, y: 100) reverse_8815e6 root.Std_k98ojb.List.Reversed {}\n        output_ai -> reverse_8815e6.list\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_cbc0b6 root.main.Rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -281, y: 2, name: \"n\") property(Number) n_1f846b\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: 772, y: 76) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output_b2508f\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_1f846b -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        n_1f846b -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -34, y: 127) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"checks whether the given two integers have opposite sign or not.\") same_sign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"output\") property(Bool) output_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = same_sign\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = same_sign\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = same_sign\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> output_b2508f\n        ifexpression_e38995.then -> setter_37db7f.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        execute_685c8f -> ifexpression_e38995.execute\n        setter_37db7f.continue -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) same_sign_d6e930 root.main.same_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -450, y: -114, name: \"number\") property(Number) number_8d5a6f\n        out(x: 46, y: 158, name: \"output\") property(Bool) output_b1c4e0\n\n        instance(x: 772, y: 76) mod_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: -105, y: -110) sum_9cceb3 root.Std_k98ojb.List.Sum {}\n        getter(x: -144, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = mod\n        setter(x: 116, y: -268, name: \"setter_37db7f\") setter_37db7f = sum\n        instance(x: 118, y: -56, name: \"instance_0\") getdigit_8d5a6f root.Std_k98ojb.List.GetAt {}\n        number_8d5a6f -> getdigit_8d5a6f.list\n        0 -> getdigit_8d5a6f.index\n        instance(x: -8, y: -53) iszero_e38995 root.Std_k98ojb.Strings.IsNumeric {}\n        getdigit_8d5a6f.itemAtIndex -> iszero_e38995.input\n        iszero_e38995.isNumeric -> output_b1c4e0\n        sum_9cceb3.value -> mod.result\n        instance(x: -105, y: -110) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sum % 11 == 0\"\n        }\n        getter_1cedb2.value -> mod.divisor\n        mod.result -> sum_9cceb3.input\n        getdigit_8d5a6f.itemAtIndex -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.then -> output_b1c4e0.execute\n    }\n\n    \n\n    instance(x: -34, y: 127) DivisibleByEleven_c6b7f9 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        in(x: -522, y: 17, name: \"oldChar\") property(Char) oldChar_a3c6e1\n        in(x: -514, y: 22, name: \"newChar\") property(Char) newChar_5d8a7b\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_6c3f2e root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_6c3f2e.input\n        oldChar_a3c6e1 -> replace_6c3f2e.search\n        newChar_5d8a7b -> replace_6c3f2e.replace\n        replace_6c3f2e.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ReplaceChars_9d4f1e root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_d6e930 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") unique_product {\n        in(x: -173, y: 3, name: \"list\") property(List) list_5f8d2e\n        out(x: 1011, y: -64, name: \"output\") property(Number) output_6c0a9b\n\n        instance(x: 123, y: -108) unique_4a3c7f root.Std_k98ojb.List.Uniq {}\n        list_5f8d2e -> unique_4a3c7f.list\n        unique_4a3c7f.result -> list_5f8d2e\n        instance(x: 201, y: -104) product_0f9c6b root.Std_k98ojb.Math.Product {}\n        output_6c0a9b -> product_0f9c6b.input\n        unique_4a3c7f.items -> product_0f9c6b.inputs\n    }\n\n    \n\n    instance(x: 92, y: -69) unique_product_b1d2e8 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -173, y: 3, name: \"list1\") property(List) list1_5f2d4b\n        in(x: -176, y: 16, name: \"list2\") property(List) list2_ea6e7c\n\n        out(x: 844, y: 54, name: \"output\") property(List) output_a0d8ac\n\n        instance(x: 134, y: 53) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_5f2d4b -> zip_201051.left\n        list2_ea6e7c -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_a0d8ac\n    }\n\n    \n\n    instance(x: 93, y: -122) dissimilar_elements_b9ff6b root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -173, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"k\") property(Number) k_1e19fb\n\n        out(x: 784, y: -110, name: \"newList\") property(List) list_0d40f1\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_ai -> zip_201051.left\n        k_1e19fb -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 245, y: -54, name: \"result\") property(List) result_e245cb\n\n            instance(x: -8, y: -53) slice_4e8c54 root.Std_k98ojb.List.Slice {}\n            list_ai -> slice_4e8c54.list\n            k_1e19fb -> slice_4e8c54.start\n            0 -> slice_4e8c54.end\n            slice_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> list_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) rotate_right_cbc0b6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -450, y: 2, name: \"list\") property(List) list_0d40f1\n        out(x: 838, y: 58, name: \"output\") property(Number) output_e5a7c6\n\n        instance(x: 133, y: 76) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 177, y: -23) add_88bb8a root.Std_k98ojb.Math.Add {}\n        list_0d40f1 -> for_9ab286.items\n        for_9ab286.index -> add_88bb8a.first\n        0 -> add_88bb8a.second\n        for_9ab286.onItem -> add_88bb8a.execute\n        add_88bb8a.result -> output_e5a7c6\n    }\n\n    \n\n    instance(x: -92, y: 45) Sum_1f2d4b root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -242, y: 20, name: \"n\") property(Number) n_0e4f5d\n        out(x: 1028, y: -64, name: \"continue\") trigger() continue_e1b3a6\n        out(x: 1017, y: 55, name: \"output\") property(Bool) output_b2c9d4\n\n        instance(x: 98, y: -69) ifexpression_8f5d21 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 1\"\n        }\n        instance(x: 201, y: 59) not_3a6e2c root.Std_k98ojb.Logic.Not {}\n        getter(x: -143, y: 71, name: \"getter_c5f7d4\") getter_c5f7d4 = is_prime\n        setter(x: 116, y: -246, name: \"setter_9cd8e3\") setter_9cd8e3 = is_prime\n        setter(x: 117, y: -47, name: \"setter_d2a6c0\") setter_d2a6c0 = is_prime\n        n_0e4f5d -> ifexpression_8f5d21.gen_0\n        not_3a6e2c.input -> setter_9cd8e3.new_value\n        getter_c5f7d4.value -> output_b2c9d4\n        ifexpression_8f5d21.then -> continue_e1b3a6\n        n_0e4f5d -> setter_d2a6c0.execute\n        setter_9cd8e3.continue -> continue_e1b3a6\n        setter_d2a6c0.continue -> continue_e1b3a6\n    }\n\n    \n\n    instance(x: -176, y: 64) is_prime_b4d5f7 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_sign {\n        in(x: -289, y: 2, name: \"a\") property(Number) a_1d0e8b\n        in(x: -292, y: -11, name: \"b\") property(Number) b_bf9c43\n\n        out(x: 45, y: 155, name: \"continue\") trigger() continue_c6f7a5\n        out(x: 46, y: 159, name: \"output\") property(Bool) output_2e0a8c\n\n        instance(x: -105, y: -112) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it % 2 != 0\"\n        }\n        instance(x: 97, y: 109) and_80a119 root.Std_k98ojb.Logic.And {}\n        getter(x: -144, y: 115, name: \"getter_c8c6ca\") getter_c8c6ca = output\n        setter(x: 116, y: -269, name: \"setter_1cedb2\") setter_1cedb2 = has_opposite_sign\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = has_opposite_sign\n        instance(x: 92, y: -51) isodd_c8c6ca root.Std_k98ojb.Strings.IsOdd {}\n        a_1d0e8b -> isodd_c8c6ca.input\n        b_bf9c43 -> isodd_c8c6ca.input\n        isodd_c8c6ca.isOdd -> output_2e0a8c\n        ifexpression_e38995.then -> setter_37db7f.execute\n        a_1d0e8b -> setter_37db7f.new_value\n        b_bf9c43 -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        execute_c6f7a5 -> ifexpression_e38995.execute\n        and_80a119.left -> has_opposite_sign.predicate\n        b_bf9c43 -> has_opposite_sign.value\n        output_2e0a8c.value -> continue_c6f7a5\n        has_opposite_sign.continue_c6f7a5 -> continue_c6f7a5\n    }\n\n    \n\n    instance(x: -174, y: -63) has_opposite_sign_d6e930 root.main.has_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible {\n        in(x: -450, y: -114, name: \"n\") property(Number) n_9d1a4e\n\n        out(x: 118, y: -56, name: \"continue\") trigger() continue_e0c2b6\n        out(x: 1023, y: -114, name: \"output\") property(Boolean) output_8f5c43\n\n        instance(x: 96, y: 112) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        n_9d1a4e -> sub_9ff257.value\n        11 -> sub_9ff257.second\n        sub_9ff257.result -> result_f5c0f3\n\n        instance(x: -174, y: 26) sum_digits_b6db77 root.Std_k98ojb.List.Sum {}\n        result_f5c0f3 -> sum_digits_b6db77.input_list\n        sum_digits_b6db77.output_list -> output_8f5c43\n\n        func() {\n            in(x: -232, y: -49, name: \"i\") property(Number) i_d2d4eb\n\n            out(x: 105, y: -52, name: \"\") property(Number) _a9e7c6\n            instance(x: -8, y: -53) less_than_e1b3f8 root.Std_k98ojb.Math.LessThan {}\n            i_d2d4eb -> less_than_e1b3f8.left\n            10 -> less_than_e1b3f8.right\n            less_than_e1b3f8.result -> _a9e7c6\n\n            instance(x: -96, y: -46) add_88bb8a root.Std_k98ojb.Math.Add {}\n            result_f5c0f3 -> add_88bb8a.first\n            i_d2d4eb -> add_88bb8a.second\n            add_88bb8a.result -> _a9e7c6\n\n            10 -> sub_9ff257.second\n            _a9e7c6 -> output_8f5c43.value\n            if less_than_e1b3f8.result == 0 then continue_e0c2b6 else is_divisible.execute\n        } -> sum_digits_b6db77.handler\n        sum_digits_b6db77.output_list -> result_f5c0f3\n    }\n\n    \n\n    instance(x: -98, y: 63) is_divisible_8d4a43 root.main.is_divisible {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") replace_chars {\n        in(x: -450, y: 2, name: \"input\") property(String) input_ai\n        in(x: -435, y: 19, name: \"search\") property(String) search_8b3a9e\n        in(x: -427, y: 40, name: \"replace\") property(String) replace_a0d4c1\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) Strings.Replace_3e2d7c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> Strings.Replace.input\n        search_8b3a9e -> Strings.Replace.search\n        replace_a0d4c1 -> Strings.Replace.replace\n        Strings.Replace.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_chars_5fba95 root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_b5d10a root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique {\n        in(x: -281, y: 2, name: \"list\") property(List) list_8f0a9b\n\n        out(x: 340, y: -68, name: \"output\") property(Number) output_b7e3c6\n        instance(x: 406, y: 76) filter_1d0a2e root.Std_k98ojb.Query.Filter {}\n        list_8f0a9b -> filter_1d0a2e.list\n        instance(x: -215, y: -54) unique_f0f4cd root.Std_k98ojb.List.Unique {}\n        filter_1d0a2e.result -> unique_f0f4cd.list\n        instance(x: 118, y: -26) multiply_b7e3c5 root.Std_k98ojb.Math.Multiply {}\n        unique_f0f4cd.list -> multiply_b7e3c5.first\n        1 -> multiply_b7e3c5.second\n        multiply_b7e3c5.result -> output_b7e3c6\n        filter_1d0a2e.continue -> product_of_unique.output\n    }\n\n    \n\n    instance(x: -34, y: 123) product_of_unique_e2a4f9 root.main.product_of_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") diff_list {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 844, y: -110, name: \"dissimilar\") property(List) dissimilar_b5e3a8\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"\") property(Boolean) diff_b5e3a8\n\n            instance(x: -8, y: -53) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                expression: \"list1_42bc6f != list2_1d86d4\"\n            }\n            list1_42bc6f -> ifexpression_a2fa90.gen_0\n            list2_1d86d4 -> ifexpression_a2fa90.gen_1\n            diff_b5e3a8.value -> ifexpression_a2fa90.predicate\n        } -> zip_201051.handler\n        zip_201051.zipped -> dissimilar_b5e3a8\n    }\n\n    \n\n    instance(x: 93, y: -122) diff_list_cbc0b6 root.main.diff_list {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        in(x: 155, y: 445, name: \"k\") property(Number) k_9a4b1c\n\n        out(x: 840, y: -111, name: \"output\") property(List) output_ai\n        instance(x: 94, y: 456) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_ai -> for_8cb3f6.items\n        setter(x: -34, y: 49, name: \"setter_a1c5a2\") setter_a1c5a2 = local_k\n        getter(x: -105, y: 58, name: \"getter_f4e9b7\") getter_f4e9b7 = local_k\n        for_8cb3f6.itemAtIndex -> for_8cb3f6.next\n        setter_a1c5a2.continue -> continue_d66d0b\n        execute_13f8db -> continue_d66d0b\n    }\n\n    \n\n    instance(x: 91, y: -109) rotate_list_b3b9e4 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -240, y: 69, name: \"list\") property(List) list_1f846b\n        out(x: 929, y: 58, name: \"output\") property(Number) output_ai\n\n        instance(x: 133, y: -131) for_201051 root.Std_k98ojb.Std.For {}\n        instance(x: 406, y: 546) add_b3c5a1 root.Std_k98ojb.Math.Add {}\n        list_1f846b -> for_201051.items\n        0 -> for_201051.index\n        for_201051.onItem -> add_b3c5a1.first\n        add_b3c5a1.second -> output_ai\n        for_201051.done -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Sum_cbc0b6 root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") Prime {\n        in(x: -530, y: 2, name: \"n\") property(Number) n_5d1a4e\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_f9b7c3\n        instance(x: 772, y: 76) isprime_d0f8f2 root.Std_k98ojb.Logic.Prime {}\n        n_5d1a4e -> isprime_d0f8f2.input\n        isprime_d0f8f2.result -> output_f9b7c3\n    }\n\n    \n\n    instance(x: 93, y: -122) Prime_c8a6d9 root.main.Prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f6d3b\n        out(x: 340, y: 77, name: \"continue\") trigger() continue_1c8e5a\n\n        instance(x: 772, y: 76) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_9f6d3b -> expression_b720d7.input\n        expression_b720d7.result -> DivisibleByEleven.value\n    }\n\n    \n\n    instance(x: -179, y: 30) DivisibleByEleven_4c8a2e root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        in(x: -528, y: 16, name: \"old_char\") property(Char) old_char_8f6d7b\n        in(x: -526, y: 29, name: \"new_char\") property(Char) new_char_5c9e3a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_c95bcb\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        old_char_8f6d7b -> replace_7b3b7b.search\n        new_char_5c9e3a -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_0d40f1 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it in (list)\"\n        }\n        list_ai -> filter_7b3b7b.list\n        filter_7b3b7b.result -> output_ai\n\n        instance(x: -105, y: 112) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        list_ai -> map_6030c9.items\n        func() {\n            in(x: -231, y: -69, name: \"x\") property(Number) x_8ee839\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            map_6030c9.output_list -> mul_2f9d09.first\n            x_8ee839 -> mul_2f9d09.second\n            mul_2f9d09.result -> result_e245cb\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Product_cbc0b6 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -173, y: 2, name: \"list1\") property(List) list1_8d3a5b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_8d3a5b -> zip_201051.left\n        list2_c62075 -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) not_7b3b7b root.Std_k98ojb.Logic.Not {}\n            list1_42bc6f -> not_7b3b7b.input\n            list2_1d86d4 -> not_7b3b7b.input\n            not_7b3b7b.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Diff_cbc0b6 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -173, y: 2, name: \"list\") property(List) list_ai\n        in(x: -186, y: 19, name: \"n\") property(Number) n_9d7f8a\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list_ai -> zip_201051.left\n        n_9d7f8a -> zip_201051.right\n        func() {\n            in(x: -231, y: -69, name: \"item1\") property(Number) list1_42bc6f\n            in(x: -223, y: 18, name: \"item2\") property(Number) list2_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n            list1_42bc6f -> modulo_4e8c54.value\n            list2_1d86d4 -> modulo_4e8c54.divisor\n            modulo_4e8c54.result -> result_e245cb\n        } -> zip_201051.handler\n        zip_201051.zipped -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_c9f6d3 root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -281, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -450, y: 2, name: \"n\") property(Number) n_5d6e3f\n        out(x: 1148, y: -647, name: \"continue\") trigger() continue_1c9a7b\n        out(x: 1134, y: -269, name: \"output\") property(Bool) output_2f8f43\n\n        instance(x: 80, y: -417) ifexpression_e3d0e5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = IsPrime\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = IsPrime\n        n_5d6e3f -> ifexpression_e3d0e5.gen_0\n        getter_9cceb3.value -> output_2f8f43\n        ifexpression_e3d0e5.then -> setter_1cedb2.execute\n        n_5d6e3f -> setter_1cedb2.new_value\n        setter_37db7f.continue -> continue_1c9a7b\n    }\n\n    \n\n    instance(x: -242, y: 39) IsPrime_d0e8eb root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"checks whether the given two integers have opposite sign or not.\") same_sign {\n        in(x: -528, y: 3, name: \"a\") property(Number) a_8f2d9e\n        in(x: -514, y: 17, name: \"b\") property(Number) b_f7e4cd\n\n        out(x: 44, y: 166, name: \"continue\") trigger() continue_e7f3d1\n        out(x: 47, y: 156, name: \"output\") property(Bool) output_8a9c0b\n\n        instance(x: -109, y: -161) less_than_7eaa66 root.Std_k98ojb.Math.LessThan {}\n        instance(x: -94, y: 168) not_1a2d84 root.Std_k98ojb.Logic.Not {}\n        instance(x: -69, y: 164) and_8c4f21 root.Std_k98ojb.Logic.And {}\n        getter(x: -162, y: 173, name: \"getter_e0cd51\") getter_e0cd51 = same_sign\n        setter(x: 115, y: -240, name: \"setter_1b5a95\") setter_1b5a95 = same_sign\n        setter(x: 119, y: -48, name: \"setter_b7d7eb\") setter_b7d7eb = same_sign\n        a_8f2d9e -> less_than_7eaa66.left\n        b_f7e4cd -> less_than_7eaa66.right\n        less_than_7eaa66.result -> not_1a2d84.input\n        and_8c4f21.left -> not_1a2d84.value\n        and_8c4f21.right -> output_8a9c0b\n        output_8a9c0b.value -> setter_b7d7eb.value\n        output_8a9c0b.value -> setter_1b5a95.value\n        less_than_7eaa66.result -> setter_e0cd51.value\n        same_sign.continue_e7f3d1 -> setter_1b5a95.execute\n        setter_b7d7eb.continue_e7f3d1 -> setter_e0cd51.execute\n    }\n\n    \n\n    instance(x: -190, y: 4) same_sign_56c1ec root.main.same_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -534, y: -213, name: \"n\") property(Number) n_0a2d45\n        out(x: 341, y: -113, name: \"continue\") trigger() continue_a8b1eb\n\n        instance(x: 73, y: -129) sum_5f4e2c root.Std_k98ojb.Math.Sum {}\n        instance(x: 246, y: -54) sub_7e6a65 root.Std_k98ojb.Math.Sub {}\n        instance(x: 97, y: -240) modulo_9b0d8a root.Std_k98ojb.Math.Modulo {}\n        DivisibleByEleven_n_2f4c6b -> sum_5f4e2c.list\n        11 -> sub_7e6a65.second\n        n_0a2d45 -> sub_7e6a65.first\n        modulo_9b0d8a.divisor -> 11\n        modulo_9b0d8a.result -> DivisibleByEleven_n_2f4c6b.output\n    }\n\n    \n\n    instance(x: -191, y: -55) DivisibleByEleven_3dd5f7 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -261, y: 14, name: \"input\") property(String) input_5f1e9d\n        in(x: -243, y: 69, name: \"oldChar\") property(Char) oldChar_f0d8f2\n        in(x: -247, y: 28, name: \"newChar\") property(Char) newChar_b7b3a4\n\n        out(x: 1075, y: 56, name: \"output\") property(String) output_9c1e98\n\n        instance(x: 74, y: 53) replace_8b3f0d root.Std_k98ojb.Strings.Replace {}\n        input_5f1e9d -> replace_8b3f0d.input\n        oldChar_f0d8f2 -> replace_8b3f0d.search\n        newChar_b7b3a4 -> replace_8b3f0d.replace\n        replace_8b3f0d.result -> output_9c1e98\n    }\n\n    \n\n    instance(x: -195, y: 35) ReplaceChars_d2dd24 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -231, y: 17, name: \"input\") property(String) input_0d4f1e\n        out(x: 340, y: 77, name: \"output\") property(String) output_a2b9b5\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_0d4f1e -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_a2b9b5\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_b4a95c root.main.ToLower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") unique_product {\n        in(x: -287, y: 24, name: \"list\") property(List) list_0d40f1\n        out(x: 1046, y: -59, name: \"output\") property(Number) output_ba5e95\n\n        instance(x: 134, y: -106) flatten_4f9b65 root.Std_k98ojb.List.Flatten {}\n        list_0d40f1 -> flatten_4f9b65.list\n        instance(x: 94, y: 66) filter_8c5df3 root.Std_k98ojb.Iteration.Filter {}\n        unique_list_a6e7ec -> filter_8c5df3.list\n        instance(x: -200, y: 26) set_0dce55 root.Std_k98ojb.List.Set {}\n        unique_list_a6e7ec -> set_0dce55.items\n        instance(x: 99, y: 60) prod_8c9df3 root.Std_k98ojb.Math.Prod {}\n        set_0dce55.listWithItem -> prod_8c9df3.input\n        prod_8c9df3.result -> output_ba5e95\n    }\n\n    \n\n    instance(x: -106, y: 56) unique_product_d7cd30 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -246, y: 17, name: \"list1\") property(List) list1_5f8d0a\n        in(x: -236, y: 53, name: \"list2\") property(List) list2_d7b4df\n\n        out(x: 1016, y: 62, name: \"output\") property(List) output_e2f5e3\n\n        instance(x: 104, y: 69) ifexpression_8d9c43 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != it2\"\n        }\n        instance(x: -173, y: 94) filter_1a8cd4 root.Std_k98ojb.Query.Filter {}\n        list1_5f8d0a -> filter_1a8cd4.list\n        list2_d7b4df -> filter_1a8cd4.list2\n        filter_1a8cd4.result -> output_e2f5e3\n    }\n\n    \n\n    instance(x: -146, y: 63) Dissimilar_c85c21 root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -246, y: 13, name: \"list\") property(List) list_5f6a9d\n        in(x: -253, y: -33, name: \"k\") property(Number) k_c2f4d3\n\n        out(x: 836, y: -111, name: \"output\") property(List) output_e5c0e8\n\n        instance(x: 96, y: -121) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_5f6a9d -> for_9ab286.items\n        instance(x: 542, y: -194) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        output_e5c0e8 -> concat_9b38cc.list\n        func() {\n            in(x: -221, y: -74, name: \"i\") property(Number) i_2e6dca\n\n            out(x: 208, y: -51, name: \"\") property(Number) _a1fdd7\n\n            instance(x: 88, y: -55) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n            i_2e6dca -> getat_8eae56.index\n            getat_8eae56.itemAtIndex -> _a1fdd7\n        } -> for_9ab286.handler\n        for_9ab286.onItem -> concat_9b38cc.next\n    }\n\n    \n\n    instance(x: 95, y: -52) rotate_right_0c9eb5 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -241, y: 24, name: \"list\") property(List) list_1f8d2e\n        out(x: 1096, y: -47, name: \"output\") property(Number) output_1c8b95\n\n        instance(x: 92, y: -48) sum_4fdd7a root.Std_k98ojb.Math.Sum {}\n        list_1f8d2e -> sum_4fdd7a.list\n        sum_4fdd7a.result -> output_1c8b95\n    }\n\n    \n\n    instance(x: 15, y: -46) Sum_5e3d14 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -341, y: 16, name: \"n\") property(Number) n_0e8f6d\n        out(x: 1054, y: -69, name: \"continue\") trigger() continue_e5dd2c\n\n        instance(x: 82, y: -106) ifexpression_b1d7a9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 0 || n == 1\"\n        }\n        getter(x: -145, y: 109, name: \"getter_5f2c71\") getter_5f2c71 = is_prime\n        setter(x: 121, y: -263, name: \"setter_c8f4d3\") setter_c8f4d3 = is_prime\n        setter(x: 118, y: -53, name: \"setter_3df0b6\") setter_3df0b6 = is_prime\n        n_0e8f6d -> ifexpression_b1d7a9.gen_0\n        getter_5f2c71.value -> continue_e5dd2c\n        ifexpression_b1d7a9.then -> setter_c8f4d3.execute\n        n_0e8f6d -> setter_c8f4d3.new_value\n        n_0e8f6d -> setter_3df0b6.new_value\n        ifexpression_b1d7a9.else -> setter_3df0b6.execute\n        execute_e5dd2c -> ifexpression_b1d7a9.execute\n        setter_c8f4d3.continue -> continue_e5dd2c\n        setter_3df0b6.continue -> continue_e5dd2c\n    }\n\n    \n\n    instance(x: -272, y: 21) is_prime_d3cd29 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") have_opposite_sign {\n        in(x: -176, y: 13, name: \"a\") property(Number) a_1d84b3\n        in(x: -285, y: 69, name: \"b\") property(Number) b_e47f34\n\n        out(x: 55, y: -66, name: \"continue\") trigger() continue_b0f0c5\n        out(x: 63, y: 44, name: \"output\") property(Bool) output_1ca4f7\n\n        instance(x: -76, y: -48) logic_not_8b19c2 root.Std_k98ojb.Logic.Not {}\n        logic_not_8b19c2.input -> have_opposite_sign.value\n        instance(x: 86, y: 17) greater_than_1a51ed root.Std_k98ojb.Math.GreaterThan {}\n        a_1d84b3 -> greater_than_1a51ed.left\n        b_e47f34 -> greater_than_1a51ed.right\n        have_opposite_sign -> output_1ca4f7\n        if greater_than_1a51ed.result == true then:\n            output_1ca4f7.value = logic_not_8b19c2.execute\n    }\n\n    \n\n    instance(x: -69, y: 58) have_opposite_sign_6d2eb5 root.main.have_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible {\n        in(x: -294, y: -201, name: \"n\") property(Number) n_6c2a23\n        out(x: 1155, y: 69, name: \"output\") property(Bool) output_f8b6eb\n\n        instance(x: 118, y: -215) is_divisible_4d3e11 root.Std_k98ojb.Logic.Not {}\n        instance(x: -196, y: 14, name: \"sum\") property(Number) sum_c15a77\n        list_5fdd0d -> is_divisible_4d3e11.value\n        instance(x: -106, y: 59, name: \"diff\") property(Number) diff_eb2cf1\n        n_6c2a23 -> diff.input\n        sum_c15a77.sum -> diff.second\n        function(number: Number): Number {\n            in(x: 0, y: -68, name: \"x\") property(Number) x_a2d3aa\n\n            out(x: -1058, y: 28, name: \"-\") property(Number) out_6c5ad9\n\n            instance(x: 103, y: -59) add_b4e35f root.Std_k98ojb.Math.Add {}\n            x_a2d3aa -> add_b4e35f.first\n            sum_c15a77.sum -> add_b4e35f.second\n            add_b4e35f.result -> out_6c5ad9\n        } -> list_5fdd0d.handler\n        is_divisible_4d3e11.then -> output_f8b6eb\n        diff.index -> sum_c15a77.index\n        sum_c15a77.result -> add_b4e35f.first\n        diff.index -> add_b4e35f.second\n        n_6c2a23 -> subtract_0f7d1d(number: out_6c5ad9)\n        subtract_0f7d1d(number: Number): Number {\n            in(x: 108, y: -74, name: \"num\") property(Number) num_b4a42e\n\n            out(x: -1187, y: 24, name: \"-\") property(Number) result_a5ae29\n\n            instance(x: 97, y: 52) sub_6c4bce root.Std_k98ojb.Math.Sub {}\n            num_b4a42e -> sub_6c4bce.first\n            n_6c2a23 -> sub_6c4bce.second\n            sub_6c4bce.result -> result_a5ae29\n        } -> subtract_0f7d1d.handler\n        is_divisible_4d3e11.then.execute -> output_f8b6eb.execute\n    }\n\n    \n\n    instance(x: -191, y: 56) is_divisible_d0bf45 root.main.is_divisible {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") replace_chars {\n        in(x: -289, y: 23, name: \"input\") property(String) input_6eb3e2\n        in(x: -291, y: 30, name: \"old\") property(String) old_f5aee9\n        in(x: -281, y: 44, name: \"new\") property(String) new_d1b4f8\n\n        out(x: 105, y: 66, name: \"output\") property(String) output_92e2d0\n        out(x: 102, y: 48, name: \"continue\") trigger() continue_c0ab23\n\n        instance(x: -16, y: 52) replace_f98b9f root.Std_k98ojb.Strings.Replace {}\n        input_6eb3e2 -> replace_f98b9f.input\n        old_f5aee9 -> replace_f98b9f.search\n        new_d1b4f8 -> replace_f98b9f.replace\n        replace_f98b9f.result -> output_92e2d0\n\n        continue_c0ab23 -> replace_f98b9f.execute\n    }\n\n    \n\n    instance(x: -179, y: 59) replace_chars_3b41ed root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_b5c6ac root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 133, y: -131) unique_79f45a root.Std_k98ojb.List.Uniq {}\n        list_ai -> unique_79f45a.list\n        func() {\n            in(x: -242, y: -68, name: \"x\") property(Number) x_8ee839\n\n            out(x: 245, y: -54, name: \"\") property(Number) _7dd980\n\n            instance(x: -4, y: -53) sum_4e8c54 root.Std_k98ojb.Math.Add {}\n            x_8ee839 -> sum_4e8c54.first\n            1 -> sum_4e8c54.second\n            sum_4e8c54.result -> _7dd980\n        } -> unique_79f45a.handler\n\n        instance(x: -218, y: 67) filter_c1bb22 root.Std_k98ojb.Query.Filter {\n            where: \"it in (x_8ee839)\"\n        }\n        list_ai -> filter_c1bb22.list\n        filter_c1bb22.result -> unique_79f45a.listWithItem\n    }\n\n    \n\n    instance(x: 93, y: -122) product_of_unique_numbers_b9ff6b root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") diff_list {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 844, y: -110, name: \"output\") property(List) diff_list_a4b0a6\n\n        instance(x: 133, y: -131) filter_201051 root.Std_k98ojb.Query.Filter {}\n        instance(x: 196, y: 256) not_equal_9ff257 root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 23, y: -52) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != a\"\n        }\n        instance(x: 215, y: 256) is_in_8eae56 root.Std_k98ojb.List.IsIn {}\n        list1_ai -> filter_201051.list\n        list2_c62075 -> filter_201051.list\n        ifexpression_a2fa90.left -> not_equal_9ff257.left\n        filter_201051.item -> not_equal_9ff257.right\n        is_in_8eae56.list -> diff_list_a4b0a6\n\n        instance(x: 293, y: -23) getat_8801dd root.Std_k98ojb.List.GetAt {}\n        filter_201051.index -> getat_8801dd.index\n        not_equal_9ff257.itemAtIndex -> getat_8801dd.itemAtIndex\n        ifexpression_a2fa90.value -> diff_list_a4b0a6\n\n        diff_list_a4b0a6 -> filter_201051.output_list\n    }\n\n    \n\n    instance(x: -34, y: 127) diff_list_d2e7ed root.main.diff_list {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -240, y: 2, name: \"list\") property(List) list_ai\n        in(x: 145, y: 64, name: \"k\") property(Number) k_9ca7cd\n\n        out(x: 509, y: -52, name: \"output\") property(List) output_ai\n        instance(x: 94, y: -131) slice_8d3c1e root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_8d3c1e.items\n        0 -> slice_8d3c1e.start\n        k_9ca7cd - 1 -> slice_8d3c1e.end\n        slice_8d3c1e.slice -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -117) rotate_list_c7fb11 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -241, y: 15, name: \"list\") property(List) list_1e77a9\n        out(x: 1093, y: 68, name: \"output\") property(Number) output_c7df33\n\n        instance(x: 101, y: 55) add_4b5f0d root.Std_k98ojb.Math.Add {}\n        list_1e77a9 -> add_4b5f0d.items\n        func() {\n            in(x: -240, y: -21, name: \"item\") property(Number) item_d0c2dd\n\n            out(x: 118, y: -44, name: \"result\") property(Number) result_f36d23\n\n            instance(x: -11, y: -54) count_4f3f70 root.Std_k98ojb.List.Count {}\n            item_d0c2dd -> count_4f3f70.input\n            count_4f3f70.value -> add_4b5f0d.count\n        } -> add_4b5f0d.handler\n        add_4b5f0d.result -> output_c7df33\n    }\n\n    \n\n    instance(x: -26, y: 84) Sum_5ed6ae root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") Prime {\n        in(x: -311, y: 23, name: \"n\") property(Number) n_9b6d37\n        out(x: 105, y: 46, name: \"continue\") trigger() continue_b4a4e8\n\n        instance(x: 92, y: 39) ifexpression_2f5f34 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 1 || n == 0\"\n        }\n        instance(x: -201, y: 66) isprime_5ad45e root Std_k98ojb.Logic.Not {}\n        getter(x: -137, y: 77, name: \"getter_f55a3c\") getter_f55a3c = not_prime\n        setter(x: -189, y: -54, name: \"setter_9dc8d2\") setter_9dc8d2 = prime\n        n_9b6d37 -> ifexpression_2f5f34.gen_0\n        n_9b6d37 -> ifexpression_2f5f34.gen_1\n        isprime_5ad45e.value -> not_prime\n        ifexpression_2f5f34.then -> setter_9dc8d2.execute\n        getter_f55a3c.value -> not_prime\n        isprime_5ad45e.value -> prime\n        ifexpression_2f5f34.else -> setter_9dc8d2.execute\n        execute_b4a4e8 -> ifexpression_2f5f34.execute\n        setter_9dc8d2.continue -> continue_b4a4e8\n    }\n\n    \n\n    instance(x: -176, y: 55) Prime_f7aa33 root.main.Prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") OppositeSign {\n        in(x: -281, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 46, y: 158, name: \"continue\") trigger() continue_685c8f\n        out(x: 512, y: -114, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        a_9f7759 -> ifexpression_e38995.gen_0\n        b_f9110a -> ifexpression_e38995.gen_1\n        getter_9cceb3.value -> result_b2508f\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        a_9f7759 -> setter_1cedb2.new_value\n        b_f9110a -> setter_37db7f.new_value\n        ifexpression_e38995.else -> setter_37db7f.execute\n        execute_12bf99 -> ifexpression_e38995.execute\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -242, y: -164, name: \"n\") property(Number) n_1d3f5b\n        out(x: 1048, y: -67, name: \"continue\") trigger() continue_2e4c43\n\n        instance(x: 96, y: -117) ifexpression_e7a9e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 11 == 0\"\n        }\n        getter(x: -174, y: 102, name: \"getter_5f2c3d\") getter_5f2c3d = divisibleByEleven\n        setter(x: 117, y: -261, name: \"setter_1e4a6b\") setter_1e4a6b = divisibleByEleven\n        n_1d3f5b -> ifexpression_e7a9e6.gen_0\n        getter_5f2c3d.value -> divisibleByEleven\n        ifexpression_e7a9e6.then -> setter_1e4a6b.execute\n        n_1d3f5b -> setter_1e4a6b.new_value\n        ifexpression_e7a9e6.else -> continue_2e4c43\n    }\n\n    \n\n    instance(x: -193, y: 44) DivisibleByEleven_8f0d95 root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"replace characters in a string.\") Replace {\n        in(x: -281, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"old\") property(String) old_8d7f6b\n        in(x: -272, y: 17, name: \"new\") property(String) new_9c4e0a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        old_8d7f6b -> replace_7b3b7b.search\n        new_9c4e0a -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Replace_8d7f6b root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"calculate the product of the unique numbers in a given list.\") Product {\n        in(x: -242, y: 13, name: \"list\") property(List) list_1d3f5a\n\n        out(x: 1024, y: 59, name: \"output\") property(Number) output_9e7c6b\n        instance(x: 95, y: 63) filter_8d3fdd root.Std_k98ojb.Query.Filter {}\n        instance(x: 732, y: -11, name: \"set\") property(List) set_1a2d5a\n        instance(x: 97, y: 55) list_to_set_7c9e38 root.Std_k98ojb.List.ToSet {}\n        instance(x: 96, y: 58) flatten_8f6d66 root.Std_k98ojb.List.Flatten {}\n        instance(x: -199, y: 23, name: \"product\") property(Number) product_7c9e38\n        set_1a2d5a -> filter_8d3fdd.list\n        list_to_set_7c9e38.list -> flatten_8f6d66.items\n        flatten_8f6d66.output_list -> set_1a2d5a\n        product_7c9e38.value -> output_9e7c6b\n        filter_8d3fdd.result -> set_1a2d5a\n    }\n\n    \n\n    instance(x: -192, y: 40) Product_4f6c43 root.main.Product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") Diff {\n        in(x: -281, y: 2, name: \"list1\") property(List) list1_9f7759\n        in(x: -272, y: 17, name: \"list2\") property(List) list2_f9110a\n\n        out(x: 46, y: 158, name: \"dissimilar\") property(List) dissimilar_b2508f\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Query.Filter {\n            where: \"it not in list2\"\n        }\n        list1_9f7759 -> filter_7b3b7b.list\n        filter_7b3b7b.result -> dissimilar_b2508f\n    }\n\n    \n\n    instance(x: -179, y: 30) Diff_c62075 root.main.Diff {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"rotates a given list by specified number of items to the right direction.\") Rotate {\n        in(x: -242, y: 18, name: \"list\") property(List) list_0d40f1\n        in(x: -232, y: 104, name: \"n\") property(Number) n_8e5c4b\n\n        out(x: 1012, y: 77, name: \"output\") property(List) output_6a3c7f\n\n        instance(x: 133, y: -109) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_0d40f1 -> for_9ab286.items\n        n_8e5c4b -> for_9ab286.count\n        func() {\n            in(x: -242, y: 63, name: \"item\") property(Number) item_7a2c21\n\n            out(x: 1012, y: 77, name: \"\") property(Number) _8f5d6b\n\n            instance(x: 24, y: -53) slice_4e9f0a root.Std_k98ojb.List.Slice {}\n            item_7a2c21 -> slice_4e9f0a.start\n            n_8e5c4b -> slice_4e9f0a.end\n            slice_4e9f0a.slice -> _8f5d6b\n        } -> for_9ab286.handler\n        for_9ab286.onItem -> slice_4e9f0a.itemAtIndex\n        slice_4e9f0a.index -> _8f5d6b\n    }\n\n    \n\n    instance(x: 93, y: -122) Rotate_b7c3b1 root.main.Rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -450, y: 2, name: \"list\") property(List) list_ai\n        out(x: 1146, y: -647, name: \"output\") property(Number) output_ai\n\n        instance(x: 133, y: -131) sum_7b3b7b root.Std_k98ojb.Math.Sum {}\n        list_ai -> sum_7b3b7b.list\n        sum_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) Sum_59bc6e root.main.Sum {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") IsPrime {\n        in(x: -530, y: 2, name: \"n\") property(Number) n_9f4e3d\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_1c8aeb\n        out(x: 1169, y: -269, name: \"output\") property(Bool) output_5b7d2f\n\n        instance(x: 80, y: -417) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = output\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = output\n        instance(x: 133, y: -131) isprime_6f5d4a root.Std_k98ojb.Logic.Not {}\n        getter(x: -105, y: -110) getter_9cceb3 -> isprime_6f5d4a.input\n        setter(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = output\n        instance(x: 196, y: 256) lessThanOrEqual_1e8c2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        n_9f4e3d -> lessThanOrEqual_1e8c2.left\n        1 -> lessThanOrEqual_1e8c2.right\n        lessThanOrEqual_1e8c2.result -> ifexpression_e38995.gen_0\n        ifexpression_e38995.then -> continue_1c8aeb\n        getter_9cceb3.value -> isprime_6f5d4a.input\n        isprime_6f5d4a.result -> setter_37db7f.value\n        output_5b7d2f.value -> ifexpression_e38995.gen_0\n    }\n\n    \n\n    instance(x: -97, y: -68) IsPrime_3e8c1 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"checks whether the given two integers have opposite sign or not.\") same_sign {\n        in(x: -294, y: 5, name: \"a\") property(Number) a_8f2d14\n        in(x: -291, y: 15, name: \"b\") property(Number) b_d35c85\n\n        out(x: 34, y: 49, name: \"continue\") trigger() continue_b4dd55\n        out(x: 52, y: 68, name: \"same\") property(Bool) same_3f7d98\n\n        instance(x: -103, y: -47) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a * b < 0\"\n        }\n        getter(x: -136, y: 42, name: \"getter_8dfc89\") getter_8dfc89 = same\n        setter(x: 119, y: -242, name: \"setter_6e3f47\") setter_6e3f47 = same\n        a_8f2d14 -> ifexpression_e38995.gen_0\n        b_d35c85 -> ifexpression_e38995.gen_1\n        getter_8dfc89.value -> same_3f7d98\n        ifexpression_e38995.then -> setter_6e3f47.execute\n        a_8f2d14 -> setter_6e3f47.new_value\n        b_d35c85 -> continue_b4dd55.new_value\n        ifexpression_e38995.else -> continue_b4dd55.execute\n        execute_b4dd55 -> ifexpression_e38995.execute\n        setter_6e3f47.continue -> same_3f7d98.continue\n    }\n\n    \n\n    instance(x: -198, y: 69) same_sign_d0b8f1 root.main.same_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") DivisibleByEleven {\n        in(x: -291, y: -215, name: \"n\") property(Number) n_0a5d65\n        out(x: 342, y: 51, name: \"continue\") trigger() continue_b4b2e9\n        out(x: 316, y: -202, name: \"output\") property(Bool) output_a3c7f1\n\n        instance(x: 94, y: -228) sum_79a4cd root.Std_k98ojb.Math.Sum {}\n        n_0a5d65 -> sum_79a4cd.input\n        9 -> sum_79a4cd.number\n        sum_79a4cd.result -> output_a3c7f1\n    }\n\n    \n\n    instance(x: -198, y: -35) DivisibleByEleven_b7ebaf root.main.DivisibleByEleven {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -206, y: 12, name: \"input\") property(String) input_5f4a95\n        in(x: -208, y: -20, name: \"oldChar\") property(Char) oldChar_eb4e65\n        in(x: -203, y: -49, name: \"newChar\") property(Char) newChar_f9c8f1\n\n        out(x: 1035, y: 56, name: \"output\") property(String) output_6a35eb\n\n        instance(x: 69, y: -27) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_5f4a95 -> replace_7b3b7b.input\n        oldChar_eb4e65 -> replace_7b3b7b.search\n        newChar_f9c8f1 -> replace_7b3b7b.replace\n        replace_7b3b7b.result -> output_6a35eb\n    }\n\n    \n\n    instance(x: -136, y: 23) ReplaceChars_98df22 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: -239, y: 8, name: \"input\") property(String) input_4f2d34\n        out(x: 320, y: 76, name: \"output\") property(String) output_4f2d34\n\n        instance(x: 78, y: 74) tolower_f0b1d9 root.Std_k98ojb.Strings.ToLower {}\n        input_4f2d34 -> tolower_f0b1d9.input\n        tolower_f0b1d9.output -> output_4f2d34\n    }\n\n    \n\n    instance(x: -130, y: 38) ToLower_d8a3e5 root.main.ToLower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculate the product of the unique numbers in a given list.\") unique_product {\n        in(x: -206, y: 31, name: \"list\") property(List) list_8f2d21\n        out(x: 734, y: 46, name: \"output\") property(Number) output_b9b4df\n\n        instance(x: 97, y: -47) flatten_0a1e85 root.Std_k98ojb.List.Flatten {}\n        list_8f2d21 -> flatten_0a1e85.list\n        instance(x: 93, y: -56) filter_7c5db3 root.Std_k98ojb.Iteration.Filter {}\n        unique_list_b4c7bb -> filter_7c5db3.list\n        instance(x: 94, y: -78) count_89e0d9 root.Std_k98ojb.List.Count {}\n        count_89e0d9.length -> output_b9b4df\n        instance(x: 82, y: -67) listGenerateRange_dff3f5 root.Std_k98ojb.List.GenerateRange {}\n        unique_list_b4c7bb -> listGenerateRange_dff3f5.list\n        instance(x: 81, y: -75) product_2fbd0a root.Std_k98ojb.Math.Product {}\n        count_89e0d9.value -> product_2fbd0a.first\n        listGenerateRange_dff3f5.from -> product_2fbd0a.second\n        instance(x: 95, y: -59) mul_f6c6eb root.Std_k98ojb.Math.Mul {}\n        unique_list_b4c7bb -> mul_f6c6eb.first\n        listGenerateRange_dff3f5.to -> mul_f6c6eb.second\n        mul_f6c6eb.result -> output_b9b4df\n    }\n\n    \n\n    instance(x: -202, y: 22) unique_product_74e31d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -174, y: 11, name: \"list1\") property(List) list1_0f2d21\n        in(x: -170, y: 16, name: \"list2\") property(List) list2_e7a8af\n\n        out(x: 1043, y: 22, name: \"output\") property(List) output_f7e23b\n\n        instance(x: 113, y: 13) filter_5f5d0c root.Std_k98ojb.Query.Filter {}\n        list1_0f2d21 -> filter_5f5d0c.list\n        list2_e7a8af -> filter_5f5d0c.list\n        filter_5f5d0c.result -> output_f7e23b\n    }\n\n    \n\n    instance(x: -146, y: 63) Dissimilar_bf66eb root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -243, y: 22, name: \"list\") property(List) list_5f4a1d\n        in(x: -249, y: -199, name: \"n\") property(Number) n_d2d0db\n\n        out(x: 812, y: 48, name: \"output\") property(List) output_e6b3e9\n\n        instance(x: 394, y: 46) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_5f4a1d -> for_8cb3f6.items\n        instance(x: -230, y: 22, name: \"temp\") property(Number) temp_63e0c2\n        instance(x: 554, y: 48) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 391, y: 44) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it >= n\"\n        }\n        instance(x: -204, y: 21, name: \"temp2\") property(Number) temp2_a85c8f\n        list_5f4a1d -> filter_875ddb.list\n        for_8cb3f6.index -> concat_9b38cc.left\n        concat_9b38cc.right -> output_e6b3e9\n        instance(x: 407, y: -22) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % list.length == 0\"\n        }\n        getter(x: -176, y: 42, name: \"getter_85c23d\") getter_85c23d = temp\n        setter(x: 514, y: 48, name: \"setter_d8b9e1\") setter_d8b9e1 = output_e6b3e9\n        getter(x: -201, y: 24, name: \"getter_b5f9a7\") getter_b5f9a7 = temp2\n        instance(x: 422, y: 22) add_14921d root.Std_k98ojb.Math.Add {}\n        list_5f4a1d -> add_14921d.listWithItem\n        n_d2ddb -> add_14921d.item\n        add_14921d.result -> temp2_a85c8f\n        ifexpression_a2fa90.then -> for_8cb3f6.next\n        getter_b5f9a7.value -> filter_875ddb.result\n        filter_875ddb.result -> concat_9b38cc.left\n        temp2_a85c8f -> temp\n        add_14921d.listWithItem -> setter_d8b9e1.new_value\n        for_8cb3f6.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -193, y: 51) rotate_right_5a4da2 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -294, y: 31, name: \"list\") property(List) list_1f8d35\n        out(x: 439, y: 46, name: \"output\") property(Number) output_a5e0af\n\n        instance(x: 73, y: 54) add_f9a9b3 root.Std_k98ojb.Math.Add {}\n        instance(x: -176, y: 34) count_9f8d7c root.Std_k98ojb.List.Count {}\n        list_1f8d35 -> add_f9a9b3.first\n        list_1f8d35 -> add_f9a9b3.second\n        output_a5e0af -> add_f9a9b3.result\n\n        instance(x: 222, y: -45) for_6cd1c4 root.Std_k98ojb.Std.For {}\n        count_9f8d7c.length -> for_6cd1c4.items\n        func() {\n            in(x: -241, y: -69, name: \"item\") property(Number) item_a2e1eb\n\n            out(x: 139, y: -52, name: \"\") property(Number) _dfdd7b\n\n            instance(x: 88, y: -60) add_98d4c9 root.Std_k98ojb.Math.Add {}\n            item_a2e1eb -> add_98d4c9.first\n            for_6cd1c4.index -> add_98d4c9.second\n            add_98d4c9.result -> _dfdd7b\n        } -> for_6cd1c4.handler\n        for_6cd1c4.onItem -> add_f9a9b3.execute\n    }\n\n    \n\n    instance(x: -123, y: 23) Sum_c34f47 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -290, y: 8, name: \"n\") property(Number) n_4f6d2a\n        out(x: 1009, y: -111, name: \"continue\") trigger() continue_e7dfb5\n\n        instance(x: 76, y: 55) ifexpression_b4e23 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        getter(x: -164, y: 44, name: \"getter_0f8c7a\") getter_0f8c7a = is_prime\n        setter(x: 127, y: -236, name: \"setter_b85d7e\") setter_b85d7e = is_prime\n        setter(x: 128, y: -29, name: \"setter_e3b4bb\") setter_e3b4bb = is_prime\n        n_4f6d2a -> ifexpression_b4e23.gen_0\n        getter_0f8c7a.value -> is_prime\n        ifexpression_b4e23.then -> setter_b85d7e.execute\n        n_4f6d2a -> setter_e3b4bb.new_value\n        ifexpression_b4e23.else -> setter_e3b4bb.execute\n        execute_e7dfb5 -> ifexpression_b4e23.execute\n        setter_b85d7e.continue -> continue_e7dfb5\n        setter_e3b4bb.continue -> continue_e7dfb5\n    }\n\n    \n\n    instance(x: -191, y: 27) is_prime_1fdd0c root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 12844,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") have_opposite_sign {\n        in(x: -245, y: 11, name: \"a\") property(Number) a_1d37b3\n        in(x: -268, y: 39, name: \"b\") property(Number) b_e78f17\n\n        out(x: 83, y: -114, name: \"continue\") trigger() continue_bdf6ed\n        out(x: 118, y: -67, name: \"output\") property(Bool) output_4e11a8\n\n        instance(x: 128, y: 47) ifexpression_f85d7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a < 0 & b > 0)\"\n        }\n        getter(x: -109, y: 61, name: \"getter_56af32\") getter_56af32 = output\n        setter(x: 82, y: 20, name: \"setter_2f7be5\") setter_2f7be5 = output\n        a_1d37b3 -> ifexpression_f85d7b.gen_0\n        b_e78f17 -> ifexpression_f85d7b.gen_1\n        getter_56af32.value -> output_4e11a8\n        ifexpression_f85d7b.then -> setter_2f7be5.execute\n        a_1d37b3 -> setter_2f7be5.new_value\n        b_e78f17 -> setter_bdf6ed.new_value\n        ifexpression_f85d7b.else -> setter_bdf6ed.execute\n        continue_bdf6ed -> setter_bdf6ed.execute\n    }\n\n    \n\n    instance(x: -97, y: 23) have_opposite_sign_d41bf0 root.main.have_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible {\n        in(x: -290, y: -206, name: \"n\") property(Number) n_4df0a6\n\n        out(x: 129, y: -64, name: \"output\") property(Bool) output_f5e22c\n        instance(x: 111, y: -116) expression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % 11 == 0)\"\n        }\n        n_4df0a6 -> expression_3d7de6.gen_0\n        expression_3d7de6.value -> output_f5e22c\n    }\n\n    \n\n    instance(x: -187, y: 43) is_divisible_d74a26 root.main.is_divisible {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") replace_chars {\n        in(x: -432, y: 19, name: \"input\") property(String) input_6eb8e2\n        in(x: -446, y: 109, name: \"old\") property(String) old_f5a29d\n        in(x: -436, y: -12, name: \"new\") property(String) new_d4df9c\n\n        out(x: 1061, y: -53, name: \"output\") property(String) output_a8dc9f\n\n        instance(x: 774, y: 76) replace_87a98a root.Std_k98ojb.Strings.Replace {}\n        input_6eb8e2 -> replace_87a98a.input\n        old_f5a29d -> replace_87a98a.search\n        new_d4df9c -> replace_87a98a.replace\n        replace_87a98a.result -> output_a8dc9f\n    }\n\n    \n\n    instance(x: -162, y: 47) replace_chars_e3da96 root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Converts the given string to lower case.\") ToLower {\n        in(x: -530, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) ToLower_f1a8bc root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 133, y: -131) unique_50f34d root.Std_k98ojb.List.Unique {}\n        list_ai -> unique_50f34d.list\n        instance(x: 176, y: -114) filter_201c4a root.Std_k98ojb.Query.Filter {\n            where: \"it != a\"\n        }\n        instance(x: 392, y: -58) iteration_map_6adef2 root.Std_k98ojb.Iteration.Map {}\n        unique_50f34d.unique_items -> filter_201c4a.list\n        iteration_map_6adef2.map -> filter_201c4a.output_list\n        instance(x: 243, y: -44) multiply_a85e57 root.Std_k98ojb.Math.Multiply {}\n        iterator_map_6adef2.items -> multiply_a85e57.first\n        1 -> multiply_a85e57.second\n        product_of_unique_numbers.output_ai = iterate_map_6adef2.result\n\n        filter_201c4a.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -36, y: 127) product_of_unique_numbers_c7d3d0 root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") diff_list {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -281, y: 17, name: \"list2\") property(List) list2_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n        out(x: 817, y: -52, name: \"continue\") trigger() continue_6f3d3b\n\n        instance(x: 133, y: -131) zip_201051 root.Std_k98ojb.Iteration.Zip {}\n        list1_ai -> zip_201051.left\n        list2_f9110a -> zip_201051.right\n        instance(x: 294, y: 62) diff_9dce31 root.Std_k98ojb.Query.Filter {\n            where: \"it[0] != it[1]\"\n        }\n        zip_201051.zipped -> diff_9dce31.list\n        filter_9dce31.result -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) diff_list_b5b57c root.main.diff_list {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -341, y: 2, name: \"list\") property(List) list_ai\n        in(x: 102, y: -214, name: \"n\") property(Number) n_35d67b\n\n        out(x: 533, y: 17, name: \"output\") property(List) output_ai\n        instance(x: 219, y: 121) for_1f2c1a root.Std_k98ojb.Std.For {}\n        list_ai -> for_1f2c1a.items\n        getter(x: -157, y: -109, name: \"getter_e60a9d\") getter_e60a9d = last\n        setter(x: 136, y: 122, name: \"setter_b6cd66\") setter_b6cd66 = list_ai\n        setter_b6cd66.continue -> for_1f2c1a.reset\n        execute -> setter_b6cd66.execute\n        n_35d67b -> getter_e60a9d.index\n    }\n\n    \n\n    instance(x: 14, y: -44) rotate_list_b43e85 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"finds the sum of an array.\") Sum {\n        in(x: -294, y: 18, name: \"list\") property(List) list_4eb1a2\n        out(x: 850, y: 12, name: \"output\") property(Number) output_f5cd37\n\n        instance(x: 213, y: 33) for_6d42e9 root.Std_k98ojb.Std.For {}\n        instance(x: -234, y: 120) add_d69f04 root.Std_k98ojb.Math.Add {}\n        list_4eb1a2 -> for_6d42e9.items\n        0 -> add_d69f04.first\n        for_6d42e9.index -> add_d69f04.second\n    }\n\n    \n\n    instance(x: -198, y: 89) Sum_e2fbd5 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") Prime {\n        in(x: -533, y: 13, name: \"n\") property(Number) n_0f95a9\n\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_d6cd37\n        out(x: 817, y: 42, name: \"continue\") trigger() continue_7c62e4\n\n        instance(x: -106, y: -64) Std.If {\n            input_f5bba1: n_0f95a9\n            then_output_dcd03d: output_d6cd37\n            else_output_3ad7fa: \"n is not prime\"\n        }\n        n_0f95a9 -> Std.If.then_output_dcd03d.input\n        2 -> Std.If.else_output_3ad7fa.value\n        instance(x: -136, y: -19) std_for_1c42c6 root.Std_k98ojb.Std.For {}\n        instance(x: 208, y: 57) iszero_a0e95f root.Std_k98ojb.Logic.Not {\n            value_f88d56: n_0f95a9\n        }\n        Std.If.then_output_dcd03d.output -> std_for_1c42c6.index\n        instance(x: -193, y: 66) less_than_bfa7d2 root.Std_k98ojb.Logic.LessThan {\n            left_ae67e4: n_0f95a9\n            right_81e33c: Std.If.then_output_dcd03d.output_f5bba1\n        }\n        instance(x: -177, y: 60) ifexpression_48df62 root.Std_k98ojb.Std.IfExpression {\n            expression: \"less_than_bfa7d2.left < less_than_bfa7d2.right\"\n        }\n        std_for_1c42c6.index -> less_than_bfa7d2.left\n        n_0f95a9 -> less_than_bfa7d2.right\n        ifexpression_48df62.then_output_dcd03d -> iszero_a0e95f.execute\n        n_0f95a9 -> iszero_a0e95f.new_value\n        else_output_3ad7fa -> continue_7c62e4\n        Std.If.then_output_dcd03d.output -> output_d6cd37\n    }\n\n    \n\n    instance(x: -208, y: 48) Prime_5f40de root.main.Prime {}\n}"
            ]
        }
    }
]