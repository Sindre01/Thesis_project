[
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d7e\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9f\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b9a3d\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6e8c4b\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1f5b9a\n\n        instance(x: 10, y: -140) expression_3d5b9f root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3f5d7e -> expression_3d5b9f.gen_0\n        b_8c4a9f -> expression_3d5b9f.gen_1\n        execute_2b9a3d -> expression_3d5b9f.execute\n        expression_3d5b9f.result -> out_6e8c4b\n        continue_1f5b9a -> expression_3d5b9f.continue\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7a5d4c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7a5d4c.value\n        11 -> modulo_7a5d4c.divisor\n\n        instance(x: 20, y: -40) equal_6f5e4a root.Std_k98ojb.Logic.Equal {}\n        modulo_7a5d4c.result -> equal_6f5e4a.left\n        0 -> equal_6f5e4a.right\n\n        instance(x: 20, y: 40) if_31b2c7 root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_31b2c7.execute\n        equal_6f5e4a.result -> if_31b2c7.predicate\n\n        if_31b2c7.value -> out_f3db9f\n        if_31b2c7.then -> continue_8ba06b\n        if_31b2c7.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3d4c\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9f5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3d\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_68b9f5\n\n        instance(x: 10, y: 220) strings_replace_7a3d4c root.Std_k98ojb.Strings.Replace {}\n        input_7a3d4c -> strings_replace_7a3d4c.input\n        search_8b9f5e -> strings_replace_7a3d4c.search\n        replace_2c7a3d -> strings_replace_7a3d4c.replace\n        strings_replace_7a3d4c.output -> output_68b9f5\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e2f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 66, name: \"continue\") trigger() continue_8a9d6f\n\n        instance(x: 200, y: -100) unique_numbers_3e2b1d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: -100) reduce_product_7c5a1b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 600, y: -100) initial_value_1e2b3d root.Std_k98ojb.Math.Mul {}\n\n        numbers_3c7d6a -> unique_numbers_3e2b1d.left\n        numbers_3c7d6a -> unique_numbers_3e2b1d.right\n        unique_numbers_3e2b1d.difference -> reduce_product_7c5a1b.items\n\n        1 -> initial_value_1e2b3d.first\n        1 -> initial_value_1e2b3d.second\n        initial_value_1e2b3d.result -> reduce_product_7c5a1b.accumulator_initial\n\n        func() {\n            in(x: -10, y: -10, name: \"current\") property(Number) current_8f9d6f\n            in(x: -10, y: 46, name: \"accumulator\") property(Number) accumulator_3c7b2a\n\n            out(x: 10, y: 10, name: \"result\") property(Number) result_5e2b1d\n\n            instance(x: 100, y: -10) mul_8f9d6f root.Std_k98ojb.Math.Mul {}\n            current_8f9d6f -> mul_8f9d6f.first\n            accumulator_3c7b2a -> mul_8f9d6f.second\n            mul_8f9d6f.result -> result_5e2b1d\n        } -> reduce_product_7c5a1b.reducer\n\n        execute_2b5e2f -> unique_numbers_3e2b1d.execute\n        unique_numbers_3e2b1d.done -> reduce_product_7c5a1b.execute\n        reduce_product_7c5a1b.result -> product_4b53c7\n        reduce_product_7c5a1b.done -> continue_8a9d6f\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7a\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_2b4f5e\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6c3d7a\n\n        out(x: 10, y: 10, name: \"out\") property(List) out_894f5e\n        out(x: 10, y: 82, name: \"continue\") trigger() continue_6c3d7a\n\n        instance(x: 10, y: -50) difference_2b4f5e root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7a -> difference_2b4f5e.left\n        list2_2b4f5e -> difference_2b4f5e.right\n        instance(x: 10, y: 60) difference_4c3d7a root.Std_k98ojb.Sets.Difference {}\n        list2_2b4f5e -> difference_4c3d7a.left\n        list1_4c3d7a -> difference_4c3d7a.right\n        instance(x: 10, y: 170) concat_6c3d7a root.Std_k98ojb.List.Concat {}\n        difference_2b4f5e.difference -> concat_6c3d7a.left\n        difference_4c3d7a.difference -> concat_6c3d7a.right\n        concat_6c3d7a.list -> out_894f5e\n        execute_6c3d7a -> continue_6c3d7a\n    }\n\n    \n\n    instance(x: -10, y: 220) dissimilar_elements_f0be66 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b5eac\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1610, y: -289, name: \"rotated_list\") property(List) output_rotated_list_5b5eac\n        out(x: 1610, y: -221, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 210, y: -89) length_7c3a4d root.Std_k98ojb.List.Length {}\n        instance(x: 560, y: -100) modulo_7c3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 920, y: -100) sub_7c3a4d root.Std_k98ojb.Math.Sub {}\n        instance(x: 1260, y: -100) slice_7c3a4d root.Std_k98ojb.List.Slice {}\n        instance(x: 1260, y: -250) slice_2b5eac root.Std_k98ojb.List.Slice {}\n        instance(x: 1440, y: -175) concat_7c3a4d root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_7c3a4d.list\n        execute_7c3a4d -> length_7c3a4d.execute\n        input_rotate_by_2b5eac -> modulo_7c3a4d.value\n        length_7c3a4d.length -> modulo_7c3a4d.divisor\n        length_7c3a4d.length -> sub_7c3a4d.first\n        modulo_7c3a4d.result -> sub_7c3a4d.second\n        input_list_7c3a4d -> slice_7c3a4d.list\n        sub_7c3a4d.result -> slice_7c3a4d.start\n        length_7c3a4d.length -> slice_7c3a4d.end\n        input_list_7c3a4d -> slice_2b5eac.list\n        0 -> slice_2b5eac.start\n        sub_7c3a4d.result -> slice_2b5eac.end\n        slice_7c3a4d.slice -> concat_7c3a4d.first\n        slice_2b5eac.slice -> concat_7c3a4d.second\n        concat_7c3a4d.concatenated_list -> output_rotated_list_5b5eac\n        length_7c3a4d.execute -> modulo_7c3a4d.execute\n        modulo_7c3a4d.execute -> sub_7c3a4d.execute\n        sub_7c3a4d.execute -> slice_7c3a4d.execute\n        sub_7c3a4d.execute -> slice_2b5eac.execute\n        concat_7c3a4d.execute -> continue_7c3a4d\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -245, name: \"array\") property(List<Number>) array_7c3a6d\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_7b3e6f\n\n        out(x: 10, y: 245, name: \"sum\") property(Number) sum_7b3e6f\n        out(x: 10, y: 295, name: \"continue\") trigger() continue_7b3e6f\n\n        instance(x: 10, y: -148) reduce_7c3a6d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 10, y: -25, name: \"accumulator\") property(Number) accumulator_7c3a6d\n            in(x: 10, y: 25, name: \"currentValue\") property(Number) currentValue_7c3a6d\n\n            out(x: 10, y: 75, name: \"result\") property(Number) result_7c3a6d\n\n            instance(x: 10, y: -148) add_7c3a6d root.Std_k98ojb.Math.Add {}\n            accumulator_7c3a6d -> add_7c3a6d.first\n            currentValue_7c3a6d -> add_7c3a6d.second\n            add_7c3a6d.result -> result_7c3a6d\n        } -> reduce_7c3a6d.reducer\n        0 -> reduce_7c3a6d.initialValue\n        array_7c3a6d -> reduce_7c3a6d.items\n        execute_7b3e6f -> reduce_7c3a6d.execute\n        reduce_7c3a6d.result -> sum_7b3e6f\n        reduce_7c3a6d.done -> continue_7b3e6f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -256, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -389, name: \"execute\") trigger() execute_7b9e1c\n\n        out(x: 1890, y: -256, name: \"out\") property(Bool) out_7f3a4d\n        out(x: 1890, y: -389, name: \"continue\") trigger() continue_7b9e1c\n\n        instance(x: 10, y: -125) lessthanorequal_6b2a1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10, y: -43) equal_2d7b1e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 50) greaterthan_6a2a1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 10, y: 143) generaterange_7d3a4d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 10, y: 256) for_7f3a4d root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 379) modulo_7f3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 526) equal_7f3a4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 679) if_7f3a4d root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: 826) and_7f3a4d root.Std_k98ojb.Logic.And {}\n\n        input_7f3a4d -> lessthanorequal_6b2a1f.left\n        2 -> lessthanorequal_6b2a1f.right\n\n        input_7f3a4d -> equal_2d7b1e.left\n        2 -> equal_2d7b1e.right\n\n        input_7f3a4d -> greaterthan_6a2a1f.left\n        2 -> greaterthan_6a2a1f.right\n\n        2 -> generaterange_7d3ad.from\n        input_7f3a4d -> generaterange_7d3a4d.to\n\n        generaterange_7d3a4d.list -> for_7f3a4d.items\n\n        input_7f3a4d -> modulo_7f3a4d.left\n        for_7f3a4d.item -> modulo_7f3a4d.right\n\n        0 -> equal_7f3a4d.left\n        modulo_7f3a4d.result -> equal_7f3a4d.right\n\n        equal_7f3a4d.result -> if_7f3a4d.predicate\n\n        lessthanorequal_6b2a1f.result -> and_7f3a4d.left\n        greaterthan_6a2a1f.result -> and_7f3a4d.right\n\n        execute_7b9e1c -> for_7f3a4d.reset\n        if_7f3a4d.then -> continue_7b9e1c\n        if_7f3a4d.else -> for_7f3a4d.next\n        and_7f3a4d.result -> out_7f3a4d\n\n        equal_2d7b1e.result -> or_7f3a4d.left\n        and_7f3a4d.result -> or_7f3a4d.right\n        or_7f3a4d.result -> out_7f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d6c\n        in(x: 10, y: -40, name: \"b\") property(Number) b_7e9a8b\n        in(x: 10, y: -60, name: \"execute\") trigger() execute_2c4a3f\n\n        out(x: 510, y: -10, name: \"out\") property(Bool) out_3d7e9f\n        out(x: 510, y: 20, name: \"continue\") trigger() continue_8b6c4a\n\n        instance(x: 10, y: -100) mul_3f5d6c root.Std_k98ojb.Math.Mul {}\n        a_3f5d6c -> mul_3f5d6c.first\n        b_7e9a8b -> mul_3f5d6c.second\n\n        instance(x: 10, y: -140) less_than_2c4a3f root.Std_k98ojb.Math.LessThan {}\n        mul_3f5d6c.result -> less_than_2c4a3f.left\n        0 -> less_than_2c4a3f.right\n\n        instance(x: 10, y: -180) if_expression_7e9a8b root.Std_k98ojb.Std.IfExpression {\n            expression: \"result < 0\"\n        }\n        less_than_2c4a3f.result -> if_expression_7e9a8b.gen_0\n\n        if_expression_7e9a8b.value -> out_3d7e9f\n        execute_2c4a3f -> continue_8b6c4a\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -36, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 49, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1012, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1164, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 257, y: -113) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        instance(x: 509, y: -14) if_f11fda root.Std_k98ojb.Std.If {}\n\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n\n        execute_27b8c3 -> if_f11fda.execute\n        modulo_038fce.result -> if_f11fda.predicate\n\n        if_f11fda.then -> continue_8ba06b\n        if_f11fda.else -> continue_8ba06b\n        if_f11fda.value -> out_f3db9f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -245, name: \"input\") property(String) input_7a3d6f\n        in(x: 10, y: -198, name: \"search\") property(String) search_7a3d6f\n        in(x: 10, y: -152, name: \"replace\") property(String) replace_7a3d6f\n        in(x: 10, y: -104, name: \"execute\") trigger() execute_9b8c2e\n\n        out(x: 10, y: 10, name: \"output\") property(String) output_7a3d6f\n        out(x: 10, y: 58, name: \"continue\") trigger() continue_9b8c2e\n\n        instance(x: 140, y: -104) replace_7a3d6f root.Std_k98ojb.Strings.Replace {}\n        input_7a3d6f -> replace_7a3d6f.input\n        search_7a3d6f -> replace_7a3d6f.search\n        replace_7a3d6f -> replace_7a3d6f.replace\n        execute_9b8c2e -> replace_7a3d6f.execute\n        replace_7a3d6f.output -> output_7a3d6f\n        replace_7a3d6f.done -> continue_9b8c2e\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 100, name: \"input\") property(String) input_7f3a5d\n    out(x: 600, y: 100, name: \"output\") property(String) output_4e2b8c\n\n    instance(x: 350, y: 100) tolower_9f8a7d root.Std_k98ojb.Strings.ToLower {}\n    input_7f3a5d -> tolower_9f8a7d.input\n    tolower_9f8a7d.output -> output_4e2b8c\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3a7d6c\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_8b7f6e\n\n        out(x: 1080, y: -254, name: \"product\") property(Number) product_f3db9f\n        out(x: 1080, y: -198, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 270, y: -254) unique_numbers_6a4dcb root.Std_k98ojb.Sets.Difference {}\n        instance(x: 530, y: -254) reduce_1f9eac root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 790, y: -254) mul_6a4dcb root.Std_k98ojb.Math.Mul {}\n\n        numbers_3a7d6c -> unique_numbers_6a4dcb.left\n        List.Empty() -> unique_numbers_6a4dcb.right\n        unique_numbers_6a4dcb.difference -> reduce_1f9eac.items\n\n        func() {\n            in(x: 20, y: -35, name: \"accumulator\") property(Number) accumulator_7c8b9f\n            in(x: 20, y: 10, name: \"current\") property(Number) current_6a4dcb\n\n            out(x: 20, y: 55, name: \"result\") property(Number) result_f3db9f\n\n            accumulator_7c8b9f -> mul_6a4dcb.first\n            current_6a4dcb -> mul_6a4dcb.second\n            mul_6a4dcb.result -> result_f3db9f\n        } -> reduce_1f9eac.handler\n\n        1 -> reduce_1f9eac.initialValue\n        execute_8b7f6e -> reduce_1f9eac.execute\n        reduce_1f9eac.result -> product_f3db9f\n        reduce_1f9eac.done -> continue_8ba06b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 354, y: -106, name: \"list1\") property(List) list1_27a2c6\n        in(x: 354, y: -28, name: \"list2\") property(List) list2_f9d6e4\n        in(x: 354, y: 50, name: \"execute\") trigger() execute_1b7a1c\n\n        out(x: 1894, y: -10, name: \"out\") property(List) out_2f9d6e\n        out(x: 1894, y: 135, name: \"continue\") trigger() continue_2b7a1c\n\n        instance(x: 591, y: -106) difference_left_3b5d7a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 591, y: 14) difference_right_3b5d7a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 926, y: -106) concat_lists_3b5d7a root.Std_k98ojb.List.Concat {}\n\n        list1_27a2c6 -> difference_left_3b5d7a.left\n        list2_f9d6e4 -> difference_left_3b5d7a.right\n\n        list2_f9d6e4 -> difference_right_3b5d7a.left\n        list1_27a2c6 -> difference_right_3b5d7a.right\n\n        difference_left_3b5d7a.difference -> concat_lists_3b5d7a.list1\n        difference_right_3b5d7a.difference -> concat_lists_3b5d7a.list2\n\n        execute_1b7a1c -> difference_left_3b5d7a.execute\n        execute_1b7a1c -> difference_right_3b5d7a.execute\n\n        concat_lists_3b5d7a.concatenatedList -> out_2f9d6e\n        continue_2b7a1c -> concat_lists_3b5d7a.execute\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7a4c3d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_bf9b8e\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1560, y: -10, name: \"rotated_list\") property(List) output_rotated_list_9f4a5d\n        out(x: 1560, y: 50, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 237, y: -100) length_4c4b5e root.Std_k98ojb.List.Length {}\n        instance(x: 464, y: -100) modulo_3d5a1f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 721, y: -100) sub_3e2b5c root.Std_k98ojb.Math.Sub {}\n        instance(x: 946, y: -100) slice_1f7a3d root.Std_k98ojb.List.Slice {}\n        instance(x: 1171, y: -100) slice_2e5c3d root.Std_k98ojb.List.Slice {}\n        instance(x: 1406, y: -100) concat_3f5a5e root.Std_k98ojb.List.Concat {}\n\n        input_list_7a4c3d -> length_4c4b5e.list\n        execute_27b8c3 -> length_4c4b5e.trigger\n        input_rotate_by_bf9b8e -> modulo_3d5a1f.value\n        length_4c4b5e.length -> modulo_3d5a1f.divisor\n        length_4c4b5e.length -> sub_3e2b5c.first\n        modulo_3d5a1f.result -> sub_3e2b5c.second\n        input_list_7a4c3d -> slice_1f7a3d.list\n        sub_3e2b5c.result -> slice_1f7a3d.start\n        length_4c4b5e.length -> slice_1f7a3d.end\n        input_list_7a4c3d -> slice_2e5c3d.list\n        0 -> slice_2e5c3d.start\n        sub_3e2b5c.result -> slice_2e5c3d.end\n        slice_1f7a3d.slice -> concat_3f5a5e.first\n        slice_2e5c3d.slice -> concat_3f5a5e.second\n        concat_3f5a5e.concatenated -> output_rotated_list_9f4a5d\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 354, y: -106, name: \"array\") property(List<Number>) array_27b8c3\n        in(x: 354, y: -198, name: \"execute\") trigger() execute_f5c03d\n\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n        out(x: 1748, y: -10, name: \"sum\") property(Number) sum_f3db9f\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1375, y: -10) reduce_6030c9 root.Std_k98ojb.Iteration.Reduce {\n            func() {\n                in(x: -20, y: -10, name: \"accumulator\") property(Number) accumulator_4f7a1d\n                in(x: -20, y: 56, name: \"currentValue\") property(Number) currentValue_b4554f\n\n                out(x: 198, y: -10, name: \"result\") property(Number) result_3b4e7c\n\n                instance(x: 99, y: -20) add_6030c9 root.Std_k98ojb.Math.Add {}\n                accumulator_4f7a1d -> add_6030c9.first\n                currentValue_b4554f -> add_6030c9.second\n                add_6030c9.result -> result_3b4e7c\n            } -> handler\n        }\n        0 -> generaterange_038fce.from\n        array_27b8c3 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        0 -> add_b4554f.first\n        array_27b8c3 -> reduce_6030c9.items\n        0 -> reduce_6030c9.initialValue\n        for_8cb3f6.onItem -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> add_b4554f.second\n        execute_f5c03d -> reduce_6030c9.execute\n        reduce_6030c9.result -> sum_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) sum_array_f0be66 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7a3d6f\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8b3c4e\n\n        out(x: 1150, y: -20, name: \"out\") property(Bool) out_7a3d6f\n        out(x: 1150, y: 30, name: \"continue\") trigger() continue_8b3c4e\n\n        instance(x: 10, y: -120) generaterange_e9a2fb root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 10, y: -75) for_6f2d3a root.Std_k98ojb.Std.For {}\n        instance(x: 450, y: -100) modulo_4c2e75 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 650, y: -100) equal_3d2fcb root.Std_k98ojb.Logic.Equal {}\n        instance(x: 850, y: -100) if_4a7e8c root.Std_k98ojb.Std.If {}\n\n        input_7a3d6f -> generaterange_e9a2fb.to\n        2 -> generaterange_e9a2fb.from\n        generaterange_e9a2fb.list -> for_6f2d3a.items\n\n        execute_8b3c4e -> for_6f2d3a.reset\n        for_6f2d3a.onItem -> if_4a7e8c.execute\n\n        input_7a3d6f -> modulo_4c2e75.value\n        for_6f2d3a.item -> modulo_4c2e75.divisor\n        modulo_4c2e75.result -> equal_3d2fcb.left\n        0 -> equal_3d2fcb.right\n        equal_3d2fcb.result -> if_4a7e8c.predicate\n\n        if_4a7e8c.then -> for_6f2d3a.next\n        if_4a7e8c.else -> continue_8b3c4e\n        if_4a7e8c.value -> out_7a3d6f\n\n        for_6f2d3a.done -> continue_8b3c4e\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_5f6d4c\n        in(x: 10, y: -80, name: \"b\") property(Number) b_9e7b3a\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_2a8b5f\n\n        out(x: 10, y: 160, name: \"out\") property(Bool) out_4c9d7e\n        out(x: 10, y: 220, name: \"continue\") trigger() continue_3b9a8d\n\n        instance(x: 10, y: -40) mul_6f5b4a root.Std_k98ojb.Math.Mul {}\n        a_5f6d4c -> mul_6f5b4a.first\n        b_9e7b3a -> mul_6f5b4a.second\n\n        instance(x: 10, y: 20) less_than_2b8f3c root.Std_k98ojb.Math.LessThanOrEqual {}\n        0 -> less_than_2b8f3c.left\n        mul_6f5b4a.result -> less_than_2b8f3c.right\n\n        instance(x: 10, y: 100) not_7d9e2b root.Std_k98ojb.Logic.Not {}\n        less_than_2b8f3c.result -> not_7d9e2b.input\n        not_7d9e2b.output -> out_4c9d7e\n\n        execute_2a8b5f -> continue_3b9a8d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -46, name: \"input\") property(Number) input_7c3f5e\n        in(x: -20, y: -98, name: \"execute\") trigger() execute_3b4d4a\n\n        out(x: 100, y: 10, name: \"result\") property(Bool) result_6a7c7f\n        out(x: 100, y: 50, name: \"continue\") trigger() continue_2e9b3d\n\n        instance(x: -20, y: 48) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        input_7c3f5e -> modulo_f11fda.value\n        11 -> modulo_f11fda.divisor\n        instance(x: -20, y: 146) equal_ba7dcb root.Std_k98ojb.Logic.Equal {}\n        modulo_f11fda.result -> equal_ba7dcb.left\n        0 -> equal_ba7dcb.right\n        equal_ba7dcb.result -> result_6a7c7f\n        execute_3b4d4a -> continue_2e9b3d\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_5a4f7d\n        in(x: 10, y: 60, name: \"search\") property(String) search_3b9c8e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2a5b6f\n        in(x: 10, y: 220, name: \"execute\") trigger() execute_7d3a9c\n\n        out(x: 810, y: -20, name: \"output\") property(String) output_4e2b5d\n        out(x: 810, y: 60, name: \"continue\") trigger() continue_8f7a3b\n\n        instance(x: 190, y: -20) replace_d1c18c root.Std_k98ojb.Strings.Replace {}\n        input_5a4f7d -> replace_d1c18c.input\n        search_3b9c8e -> replace_d1c18c.search\n        replace_2a5b6f -> replace_d1c18c.replace\n        execute_7d3a9c -> replace_d1c18c.execute\n        replace_d1c18c.output -> output_4e2b5d\n        replace_d1c18c.done -> continue_8f7a3b\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_4a2c3d\n    out(x: 700, y: 50, name: \"output\") property(String) output_8f9b2e\n\n    instance(x: 400, y: 50) toLower_1a2b3c root.Std_k98ojb.Strings.ToLower {}\n\n    input_4a2c3d -> toLower_1a2b3c.input\n    toLower_1a2b3c.output -> output_8f9b2e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_6a3d7c\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_4b1e2f\n\n        out(x: 1016, y: -56, name: \"product\") property(Number) product_2b0a3d\n        out(x: 1172, y: -198, name: \"continue\") trigger() continue_4c5e0f\n\n        instance(x: 204, y: -16) unique_numbers_1d23db root.Std_k98ojb.Sets.Difference {}\n        instance(x: 478, y: -16) reduce_3a1b7d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 750, y: -16) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n\n        numbers_6a3d7c -> unique_numbers_1d23db.left\n        numbers_6a3d7c -> unique_numbers_1d23db.right\n        unique_numbers_1d23db.difference -> reduce_3a1b7d.items\n\n        func() {\n            in(x: -90, y: 48, name: \"accumulator\") property(Number) accumulator_6e5c4f\n            in(x: -90, y: 112, name: \"current\") property(Number) current_f3b7d1\n\n            out(x: 108, y: 80, name: \"result\") property(Number) result_2a6e5c\n\n            accumulator_6e5c4f -> mul_2f9d09.first\n            current_f3b7d1 -> mul_2f9d09.second\n            mul_2f9d09.result -> result_2a6e5c\n        } -> reduce_3a1b7d.handler\n\n        1 -> reduce_3a1b7d.initialValue\n        execute_4b1e2f -> unique_numbers_1d23db.execute\n        unique_numbers_1d23db.difference -> reduce_3a1b7d.items\n        reduce_3a1b7d.result -> product_2b0a3d\n        reduce_3a1b7d.done -> continue_4c5e0f\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -254, name: \"list1\") property(List) list1_6a3d7c\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_4b3e5f\n        in(x: 10, y: -124, name: \"execute\") trigger() execute_6a2d7c\n\n        out(x: 10, y: 189, name: \"out\") property(List) out_4b3e5f\n        out(x: 10, y: 254, name: \"continue\") trigger() continue_6a2d7c\n\n        instance(x: 10, y: -39) difference_8b3e5f root.Std_k98ojb.Sets.Difference {}\n        list1_6a3d7c -> difference_8b3e5f.left\n        list2_4b3e5f -> difference_8b3e5f.right\n        instance(x: 10, y: 10) difference_b3e5f root.Std_k98ojb.Sets.Difference {}\n        list2_4b3e5f -> difference_b3e5f.left\n        list1_6a3d7c -> difference_b3e5f.right\n        instance(x: 10, y: 79) concat_3e5f root.Std_k98ojb.List.Concat {}\n        difference_8b3e5f.difference -> concat_3e5f.left\n        difference_b3e5f.difference -> concat_3e5f.right\n        execute_6a2d7c -> continue_6a2d7c\n        concat_3e5f.list -> out_4b3e5f\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list_right {\n        in(x: 10, y: -264, name: \"list\") property(List) input_7e5a3c\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_d6b5d5\n        in(x: 10, y: -128, name: \"execute\") trigger() execute_4b7e2f\n\n        out(x: 1350, y: -192, name: \"rotated_list\") property(List) rotated_list_6d7c3a\n        out(x: 1350, y: -118, name: \"continue\") trigger() continue_4b7e2f\n\n        instance(x: 210, y: -90) length_4b7e2f root.Std_k98ojb.List.Length {}\n        instance(x: 350, y: -90) modulo_4b7e2f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 610, y: -90) sub_4b7e2f root.Std_k98ojb.Math.Sub {}\n        instance(x: 750, y: -90) slice_4b7e2f root.Std_k98ojb.List.Slice {}\n        instance(x: 890, y: -90) slice_23a1c6 root.Std_k98ojb.List.Slice {}\n        instance(x: 1030, y: -90) concat_4b7e2f root.Std_k98ojb.List.Concat {}\n\n        input_7e5a3c -> length_4b7e2f.list\n        input_d6b5d5 -> modulo_4b7e2f.value\n        length_4b7e2f.length -> modulo_4b7e2f.divisor\n        length_4b7e2f.length -> sub_4b7e2f.first\n        modulo_4b7e2f.result -> sub_4b7e2f.second\n        input_7e5a3c -> slice_4b7e2f.list\n        sub_4b7e2f.result -> slice_4b7e2f.start\n        length_4b7e2f.length -> slice_4b7e2f.end\n        input_7e5a3c -> slice_23a1c6.list\n        0 -> slice_23a1c6.start\n        sub_4b7e2f.result -> slice_23a1c6.end\n        slice_4b7e2f.slice -> concat_4b7e2f.first\n        slice_23a1c6.slice -> concat_4b7e2f.second\n        execute_4b7e2f -> length_4b7e2f.execute\n        concat_4b7e2f.concatenated -> rotated_list_6d7c3a\n        continue_4b7e2f -> continue_4b7e2f\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 10, y: -25, name: \"array\") property(List(Number)) array_7d3e4c\n        in(x: 10, y: 50, name: \"execute\") trigger() execute_8f9b6a\n\n        out(x: 10, y: 125, name: \"sum\") property(Number) sum_f3db9f\n        out(x: 10, y: 175, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 10, y: -100) reduce_2c4a5d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 10, y: -75, name: \"accumulator\") property(Number) accumulator_3f6e2a\n            in(x: 10, y: 0, name: \"current_value\") property(Number) current_value_8d4b9c\n\n            out(x: 10, y: 75, name: \"result\") property(Number) result_3f6e2a\n\n            instance(x: 10, y: -25) add_2f9d09 root.Std_k98ojb.Math.Add {}\n            accumulator_3f6e2a -> add_2f9d09.first\n            current_value_8d4b9c -> add_2f9d09.second\n            add_2f9d09.result -> result_3f6e2a\n        } -> reduce_2c4a5d.reducer\n\n        0 -> reduce_2c4a5d.initial_value\n        array_7d3e4c -> reduce_2c4a5d.items\n        execute_8f9b6a -> reduce_2c4a5d.execute\n        reduce_2c4a5d.result -> sum_f3db9f\n        reduce_2c4a5d.done -> continue_8ba06b\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7f3a6c\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8d3b6e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_f24f7a\n        out(x: 10, y: 60, name: \"continue\") trigger() continue_5c8b9d\n\n        instance(x: 10, y: -135) if_0e430a root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -75) for_2f6e85 root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: -15) expression_8c2d43 root.Std_k98ojb.Math.Expression {\n            expression: \"input % i == 0\"\n        }\n        instance(x: 10, y: 45) if_7f6e1a root.Std_k98ojb.Std.If {}\n        input_7f3a6c -> if_0e430a.predicate\n        execute_8d3b6e -> if_0e430a.execute\n        if_0e430a.else -> for_2f6e85.reset\n        2 -> for_2f6e85.from\n        input_7f3a6c -> for_2f6e85.to\n        for_2f6e85.onItem -> expression_8c2d43.execute\n        for_2f6e85.item -> expression_8c2d43.gen_0\n        input_7f3a6c -> expression_8c2d43.gen_1\n        expression_8c2d43.result -> if_7f6e1a.predicate\n        for_2f6e85.onItem -> if_7f6e1a.execute\n        if_7f6e1a.then -> continue_5c8b9d\n        false -> is_prime_f24f7a\n        if_7f6e1a.else -> for_2f6e85.next\n        for_2f6e85.done -> continue_5c8b9d\n        true -> is_prime_f24f7a\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d7e\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9d\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b9a3f\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6e8c4f\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1d9b4a\n\n        instance(x: 10, y: -140) expression_3f5d7e root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3f5d7e -> expression_3f5d7e.gen_0\n        b_8c4a9d -> expression_3f5d7e.gen_1\n        execute_2b9a3f -> expression_3f5d7e.execute\n        expression_3f5d7e.result -> out_6e8c4f\n        continue_1d9b4a -> expression_3f5d7e.continue\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7a5d4c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7a5d4c.value\n        11 -> modulo_7a5d4c.divisor\n\n        instance(x: 20, y: -40) equal_6f5e4a root.Std_k98ojb.Logic.Equal {}\n        modulo_7a5d4c.result -> equal_6f5e4a.left\n        0 -> equal_6f5e4a.right\n\n        instance(x: 20, y: 40) if_31b2c7 root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_31b2c7.execute\n        equal_6f5e4a.result -> if_31b2c7.predicate\n\n        if_31b2c7.value -> out_f3db9f\n        if_31b2c7.then -> continue_8ba06b\n        if_31b2c7.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3d4c\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9f5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3d\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_6b8a9f\n\n        instance(x: 150, y: -20) replace_3e4a5b root.Std_k98ojb.Strings.Replace {}\n        input_7a3d4c -> replace_3e4a5b.input\n        search_8b9f5e -> replace_3e4a5b.search\n        replace_2c7a3d -> replace_3e4a5b.replace\n        replace_3e4a5b.output -> output_6b8a9f\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e6f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 74, name: \"continue\") trigger() continue_8a9d2b\n\n        instance(x: 160, y: -122) unique_numbers_3f5e6a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 310, y: -122) reduce_product_7c4d6a root.Std_k98ojb.Iteration.Reduce {\n            func() {\n                in(x: -10, y: -10, name: \"accumulator\") property(Number) accumulator_5f5e6a\n                in(x: -10, y: 34, name: \"current_value\") property(Number) current_value_7c5e6a\n\n                out(x: 10, y: -10, name: \"result\") property(Number) result_9f5e6a\n\n                instance(x: 80, y: -10) mul_3f5e6a root.Std_k98ojb.Math.Mul {}\n                accumulator_5f5e6a -> mul_3f5e6a.first\n                current_value_7c5e6a -> mul_3f5e6a.second\n                mul_3f5e6a.result -> result_9f5e6a\n            }\n        }\n        1 -> reduce_product_7c4d6a.accumulator\n        numbers_3c7d6a -> unique_numbers_3f5e6a.left\n        List.Empty() -> unique_numbers_3f5e6a.right\n        unique_numbers_3f5e6a.difference -> reduce_product_7c4d6a.items\n        execute_2b5e6f -> reduce_product_7c4d6a.execute\n        reduce_product_7c4d6a.result -> product_4b53c7\n        reduce_product_7c4d6a.done -> continue_8a9d2b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7f\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_4c3d7f\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6b5a4e\n\n        out(x: 10, y: 10, name: \"out\") property(List) out_89b4c3\n        out(x: 10, y: 79, name: \"continue\") trigger() continue_2d6f5c\n\n        instance(x: 10, y: -50) difference_0a2ebe root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7f -> difference_0a2ebe.left\n        list2_4c3d7f -> difference_0a2ebe.right\n        instance(x: 10, y: 50) difference_b968b7 root.Std_k98ojb.Sets.Difference {}\n        list2_4c3d7f -> difference_b968b7.left\n        list1_4c3d7f -> difference_b968b7.right\n        instance(x: 10, y: 150) concat_7a2ebe root.Std_k98ojb.List.Concat {}\n        difference_0a2ebe.difference -> concat_7a2ebe.left\n        difference_b968b7.difference -> concat_7a2ebe.right\n        execute_6b5a4e -> continue_2d6f5c\n        concat_7a2ebe.list -> out_89b4c3\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b4e1f\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1560, y: -198, name: \"rotated_list\") property(List) output_rotated_list_2b4e1f\n        out(x: 1560, y: -140, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 200, y: -80) length_9fba8c root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -80) modulo_6e1b4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 700, y: -80) sub_2f9d09 root.Std_k98ojb.Math.Sub {}\n        instance(x: 950, y: -80) slice_1a3e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 950, y: -160) slice_2f9d09 root.Std_k98ojb.List.Slice {}\n        instance(x: 1200, y: -120) concat_3e4c2f root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_9fba8c.list\n        input_rotate_by_2b4e1f -> modulo_6e1b4d.value\n        length_9fba8c.length -> modulo_6e1b4d.divisor\n        modulo_6e1b4d.result -> sub_2f9d09.first\n        length_9fba8c.length -> sub_2f9d09.second\n        input_list_7c3a4d -> slice_1a3e4c.list\n        sub_2f9d09.result -> slice_1a3e4c.start\n        0 -> slice_1a3e4c.end\n        input_list_7c3a4d -> slice_2f9d09.list\n        0 -> slice_2f9d09.start\n        sub_2f9d09.result -> slice_2f9d09.end\n        slice_1a3e4c.slice -> concat_3e4c2f.first\n        slice_2f9d09.slice -> concat_3e4c2f.second\n        concat_3e4c2f.concatenated_list -> output_rotated_list_2b4e1f\n        execute_7c3a4d -> continue_7c3a4d\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -245, name: \"array\") property(List<Number>) array_7c3a6d\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_7b3e6f\n\n        out(x: 10, y: 245, name: \"sum\") property(Number) sum_7b3e6f\n        out(x: 10, y: 298, name: \"continue\") trigger() continue_7b3e6f\n\n        instance(x: 10, y: -100) reduce_4a5d6c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 10, y: -245, name: \"accumulator\") property(Number) accumulator_7c3a6d\n            in(x: 10, y: -198, name: \"current_value\") property(Number) current_value_7b3e6f\n\n            out(x: 10, y: 245, name: \"result\") property(Number) result_7b3e6f\n            instance(x: 10, y: -100) add_4a5d6c root.Std_k98ojb.Math.Add {}\n            accumulator_7c3a6d -> add_4a5d6c.first\n            current_value_7b3e6f -> add_4a5d6c.second\n            add_4a5d6c.result -> result_7b3e6f\n        } -> reduce_4a5d6c.reducer\n        0 -> reduce_4a5d6c.initial_value\n        array_7c3a6d -> reduce_4a5d6c.items\n        execute_7b3e6f -> reduce_4a5d6c.execute\n        reduce_4a5d6c.result -> sum_7b3e6f\n        reduce_4a5d6c.done -> continue_7b3e6f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c7e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_5f3a4d\n        out(x: 10, y: 50, name: \"continue\") trigger() continue_2f9d09\n\n        instance(x: 10, y: -180) for_7f3a4d root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: -140) if_7f3a4d root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -100) modulo_7f3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: -60) equal_7f3a4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: -20) if_5f3a4d root.Std_k98ojb.Std.If {}\n        input_7f3a4d -> for_7f3a4d.items\n        execute_8b6c7e -> for_7f3a4d.reset\n        1 -> for_7f3a4d.start\n        for_7f3a4d.item -> modulo_7f3a4d.value\n        input_7f3a4d -> modulo_7f3a4d.divisor\n        modulo_7f3a4d.result -> equal_7f3a4d.left\n        0 -> equal_7f3a4d.right\n        equal_7f3a4d.result -> if_5f3a4d.predicate\n        for_7f3a4d.onItem -> if_5f3a4d.execute\n        if_5f3a4d.then -> continue_2f9d09\n        1 -> if_7f3a4d.value\n        input_7f3a4d -> if_7f3a4d.predicate\n        for_7f3a4d.onItem -> if_7f3a4d.execute\n        if_7f3a4d.else -> modulo_7f3a4d.execute\n        if_5f3a4d.else -> for_7f3a4d.next\n        0 -> is_prime_5f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d6c\n        in(x: 10, y: -40, name: \"b\") property(Number) b_7e9a8b\n        in(x: 10, y: -60, name: \"execute\") trigger() execute_2c4a3f\n\n        out(x: 510, y: -10, name: \"out\") property(Bool) out_3d7e9f\n        out(x: 510, y: 20, name: \"continue\") trigger() continue_8b6c4a\n\n        instance(x: 10, y: -100) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        a_3f5d6c -> mul_2f9d09.first\n        b_7e9a8b -> mul_2f9d09.second\n\n        instance(x: 10, y: -140) less_than_0 root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        mul_2f9d09.result -> less_than_0.left\n\n        instance(x: 10, y: -180) not_0 root.Std_k98ojb.Logic.Not {}\n        less_than_0.result -> not_0.input\n\n        not_0.output -> out_3d7e9f\n        execute_2c4a3f -> continue_8b6c4a\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -36, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 49, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 112, y: -14, name: \"out\") property(Bool) out_f3db9f\n        out(x: 112, y: 65, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 17, y: -139) modulo_4c1dcb root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_4c1dcb.value\n        11 -> modulo_4c1dcb.divisor\n\n        instance(x: 17, y: -26) equal_4c1dcb root.Std_k98ojb.Logic.Equal {}\n        modulo_4c1dcb.result -> equal_4c1dcb.left\n        0 -> equal_4c1dcb.right\n\n        execute_27b8c3 -> modulo_4c1dcb.execute\n        equal_4c1dcb.result -> out_f3db9f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -245, name: \"input\") property(String) input_7a3d6c\n        in(x: 10, y: -198, name: \"search\") property(String) search_2b0eac\n        in(x: 10, y: -151, name: \"replace\") property(String) replace_4f7a3d\n        in(x: 10, y: -104, name: \"execute\") trigger() execute_6c829b\n\n        out(x: 10, y: 10, name: \"output\") property(String) output_5e0c1f\n        out(x: 10, y: 63, name: \"continue\") trigger() continue_4a7d12\n\n        instance(x: 198, y: -125) replace_3b3b74 root.Std_k98ojb.Strings.Replace {}\n        input_7a3d6c -> replace_3b3b74.input\n        search_2b0eac -> replace_3b3b74.search\n        replace_4f7a3d -> replace_3b3b74.replace\n        execute_6c829b -> replace_3b3b74.execute\n        replace_3b3b74.output -> output_5e0c1f\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 100, name: \"input\") property(String) input_7f3a5d\n    out(x: 600, y: 100, name: \"output\") property(String) output_4e2b8c\n\n    instance(x: 350, y: 100) tolower_9f8a7d root.Std_k98ojb.Strings.ToLower {}\n    input_7f3a5d -> tolower_9f8a7d.input\n    tolower_9f8a7d.output -> output_4e2b8c\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3a7d6e\n        in(x: 10, y: -189, name: \"execute\") trigger() execute_2c4b9f\n\n        out(x: 1114, y: -154, name: \"product\") property(Number) product_3a7d6e\n        out(x: 1086, y: -86, name: \"continue\") trigger() continue_2c4b9f\n\n        instance(x: 178, y: -154) unique_numbers_3a7d6e root.Std_k98ojb.Sets.Difference {}\n        instance(x: 360, y: -154) reduce_3a7d6e root.Std_k98ojb.Iteration.Reduce {\n            func() {\n                in(x: -22, y: -154, name: \"accumulator\") property(Number) accumulator_3a7d6e\n                in(x: -22, y: -90, name: \"current_value\") property(Number) current_value_3a7d6e\n\n                out(x: 182, y: -154, name: \"result\") property(Number) result_3a7d6e\n\n                instance(x: 80, y: -154) mul_3a7d6e root.Std_k98ojb.Math.Mul {}\n                accumulator_3a7d6e -> mul_3a7d6e.first\n                current_value_3a7d6e -> mul_3a7d6e.second\n                mul_3a7d6e.result -> result_3a7d6e\n            }\n        }\n        1 -> reduce_3a7d6e.initial_value\n        numbers_3a7d6e -> unique_numbers_3a7d6e.left\n        numbers_3a7d6e -> unique_numbers_3a7d6e.right\n        unique_numbers_3a7d6e.difference -> reduce_3a7d6e.items\n        execute_2c4b9f -> reduce_3a7d6e.execute\n        reduce_3a7d6e.result -> product_3a7d6e\n        reduce_3a7d6e.done -> continue_2c4b9f\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 354, y: -106, name: \"list1\") property(List) list1_27a2c6\n        in(x: 354, y: -28, name: \"list2\") property(List) list2_f9d6e4\n        in(x: 354, y: 50, name: \"execute\") trigger() execute_1b7a1c\n\n        out(x: 1894, y: -10, name: \"out\") property(List) out_2f9d6e\n        out(x: 1894, y: 135, name: \"continue\") trigger() continue_2b7a1c\n\n        instance(x: 591, y: -106) difference_left_3b6a1c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 591, y: 14) difference_right_3b6a1c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 728, y: -106) concat_3b6a1c root.Std_k98ojb.List.Concat {}\n\n        list1_27a2c6 -> difference_left_3b6a1c.left\n        list2_f9d6e4 -> difference_left_3b6a1c.right\n\n        list2_f9d6e4 -> difference_right_3b6a1c.left\n        list1_27a2c6 -> difference_right_3b6a1c.right\n\n        difference_left_3b6a1c.difference -> concat_3b6a1c.list1\n        difference_right_3b6a1c.difference -> concat_3b6a1c.list2\n\n        concat_3b6a1c.concatenatedList -> out_2f9d6e\n\n        execute_1b7a1c -> continue_2b7a1c\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7a4c3d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) rotate_by_8b3f4e\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1650, y: -190, name: \"rotated_list\") property(List) rotated_list_f3db9f\n        out(x: 1650, y: -140, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 270, y: -100) length_7a4c3d root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -100) modulo_7a4c3d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 620, y: -100) sub_7a4c3d root.Std_k98ojb.Math.Sub {}\n        instance(x: 790, y: -100) slice_start_7a4c3d root.Std_k98ojb.List.Slice {}\n        instance(x: 790, y: -50) slice_end_7a4c3d root.Std_k98ojb.List.Slice {}\n        instance(x: 960, y: -25) concat_7a4c3d root.Std_k98ojb.List.Concat {}\n\n        input_list_7a4c3d -> length_7a4c3d.list\n        rotate_by_8b3f4e -> modulo_7a4c3d.value\n        length_7a4c3d.length -> modulo_7a4c3d.divisor\n        modulo_7a4c3d.result -> sub_7a4c3d.first\n        length_7a4c3d.length -> sub_7a4c3d.second\n        input_list_7a4c3d -> slice_start_7a4c3d.list\n        sub_7a4c3d.result -> slice_start_7a4c3d.start\n        length_7a4c3d.length -> slice_start_7a4c3d.end\n        input_list_7a4c3d -> slice_end_7a4c3d.list\n        0 -> slice_end_7a4c3d.start\n        sub_7a4c3d.result -> slice_end_7a4c3d.end\n        slice_start_7a4c3d.slice -> concat_7a4c3d.first\n        slice_end_7a4c3d.slice -> concat_7a4c3d.second\n        concat_7a4c3d.concatenated -> rotated_list_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_list_right_f0be66 root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 354, y: -106, name: \"array\") property(List<Number>) array_2f7d8a\n        in(x: 354, y: -196, name: \"execute\") trigger() execute_2c7b8e\n\n        out(x: 1894, y: 10, name: \"sum\") property(Number) sum_f3db9f\n        out(x: 1894, y: 150, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 714, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1496, y: -187) reduce_9fba8c root.Std_k98ojb.Iteration.Reduce {\n            handler: \"add_b4554f\"\n        }\n        array_2f7d8a -> for_8cb3f6.items\n        execute_2c7b8e -> for_8cb3f6.reset\n        0 -> reduce_9fba8c.accumulator\n        for_8cb3f6.item -> add_b4554f.first\n        reduce_9fba8c.accumulator -> add_b4554f.second\n        for_8cb3f6.onItem -> reduce_9fba8c.reduce\n        for_8cb3f6.done -> continue_8ba06b\n        reduce_9fba8c.result -> sum_f3db9f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7a3d6f\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8b0e7c\n\n        out(x: 1150, y: -245, name: \"is_prime\") property(Bool) is_prime_f3db9f\n        out(x: 1150, y: -195, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 170, y: -245) greater_than_2_ea7d8c root.Std_k98ojb.Math.GreaterThan {}\n        input_7a3d6f -> greater_than_2_ea7d8c.left\n        2 -> greater_than_2_ea7d8c.right\n\n        instance(x: 170, y: -145) if_greater_than_2_f9b7e1 root.Std_k98ojb.Std.If {}\n        greater_than_2_ea7d8c.result -> if_greater_than_2_f9b7e1.predicate\n        execute_8b0e7c -> if_greater_than_2_f9b7e1.execute\n\n        instance(x: 340, y: -245) generate_range_2_to_n_minus_1_6a4fbc root.Std_k98ojb.List.GenerateRange {}\n        input_7a3d6f -> generate_range_2_to_n_minus_1_6a4fbc.to\n        2 -> generate_range_2_to_n_minus_1_6a4fbc.from\n\n        instance(x: 500, y: -245) for_loop_8cb3f6 root.Std_k98ojb.Std.For {}\n        if_greater_than_2_f9b7e1.then -> for_loop_8cb3f6.reset\n        generate_range_2_to_n_minus_1_6a4fbc.list -> for_loop_8cb3f6.items\n\n        instance(x: 650, y: -245) modulo_operation_4d9c7b root.Std_k98ojb.Math.Modulo {}\n        input_7a3d6f -> modulo_operation_4d9c7b.value\n        for_loop_8cb3f6.item -> modulo_operation_4d9c7b.divisor\n\n        instance(x: 800, y: -245) equal_to_zero_1e2d1a root.Std_k98ojb.Math.EqualTo {}\n        modulo_operation_4d9c7b.result -> equal_to_zero_1e2d1a.left\n        0 -> equal_to_zero_1e2d1a.right\n\n        instance(x: 950, y: -245) if_equal_to_zero_3f86a7 root.Std_k98ojb.Std.If {}\n        equal_to_zero_1e2d1a.result -> if_equal_to_zero_3f86a7.predicate\n        for_loop_8cb3f6.onItem -> if_equal_to_zero_3f86a7.execute\n\n        instance(x: 1050, y: -245) set_false_9b0e7c root.Std_k98ojb.Property.Set {}\n        false -> set_false_9b0e7c.value\n        is_prime_f3db9f -> set_false_9b0e7c.target\n\n        if_equal_to_zero_3f86a7.then -> set_false_9b0e7c.execute\n        if_equal_to_zero_3f86a7.else -> for_loop_8cb3f6.next\n\n        instance(x: 1050, y: -145) set_true_2d7c8b root.Std_k98ojb.Property.Set {}\n        true -> set_true_2d7c8b.value\n        is_prime_f3db9f -> set_true_2d7c8b.target\n\n        if_greater_than_2_f9b7e1.else -> set_true_2d7c8b.execute\n        for_loop_8cb3f6.done -> set_true_2d7c8b.execute\n\n        set_false_9b0e7c.done -> continue_8ba06b\n        set_true_2d7c8b.done -> continue_8ba06b\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_5f6d4c\n        in(x: 10, y: -80, name: \"b\") property(Number) b_9e7b3a\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_2d6f5b\n\n        out(x: 10, y: 100, name: \"out\") property(Bool) out_8c9e73\n        out(x: 10, y: 180, name: \"continue\") trigger() continue_4a2d6f\n\n        instance(x: 10, y: -200) expression_5b9e4a root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_5f6d4c -> expression_5b9e4a.gen_0\n        b_9e7b3a -> expression_5b9e4a.gen_1\n        execute_2d6f5b -> expression_5b9e4a.execute\n        expression_5b9e4a.result -> out_8c9e73\n        continue_4a2d6f -> continue_4a2d6f\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -46, name: \"input\") property(Number) input_7c3f5e\n        in(x: -20, y: -98, name: \"execute\") trigger() execute_8b2d4a\n\n        out(x: 100, y: 10, name: \"result\") property(Bool) result_6a7c3f\n        out(x: 100, y: 50, name: \"continue\") trigger() continue_d9e82b\n\n        instance(x: -20, y: 40) modulo_b9d2eb root.Std_k98ojb.Math.Modulo {}\n        input_7c3f5e -> modulo_b9d2eb.value\n        11 -> modulo_b9d2eb.divisor\n        execute_8b2d4a -> modulo_b9d2eb.execute\n\n        instance(x: -20, y: 100) equal_d6b7c3 root.Std_k98ojb.Logic.Equal {}\n        modulo_b9d2eb.result -> equal_d6b7c3.left\n        0 -> equal_d6b7c3.right\n        equal_d6b7c3.result -> result_6a7c3f\n\n        execute_8b2d4a -> continue_d9e82b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_5a4f7d\n        in(x: 10, y: 60, name: \"search\") property(String) search_3b9c8e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2a5b6f\n        in(x: 10, y: 220, name: \"execute\") trigger() execute_7d3a9c\n\n        out(x: 810, y: -20, name: \"output\") property(String) output_4e2b5a\n        out(x: 810, y: 60, name: \"continue\") trigger() continue_1f7d3b\n\n        instance(x: 190, y: -20) replace_8c5b9d root.Std_k98ojb.Strings.Replace {}\n        input_5a4f7d -> replace_8c5b9d.input\n        search_3b9c8e -> replace_8c5b9d.search\n        replace_2a5b6f -> replace_8c5b9d.replace\n        execute_7d3a9c -> replace_8c5b9d.execute\n        replace_8c5b9d.output -> output_4e2b5a\n        replace_8c5b9d.done -> continue_1f7d3b\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_4a2c3d\n    out(x: 700, y: 50, name: \"output\") property(String) output_8f9b2e\n\n    instance(x: 400, y: 50) toLower_1a2b3c root.Std_k98ojb.Strings.ToLower {}\n\n    input_4a2c3d -> toLower_1a2b3c.input\n    toLower_1a2b3c.output -> output_8f9b2e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_6a3d7c\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_4b1e2f\n\n        out(x: 1016, y: -56, name: \"product\") property(Number) product_2b7a3d\n        out(x: 1016, y: 98, name: \"continue\") trigger() continue_4c4e4f\n\n        instance(x: 168, y: -125) unique_numbers_2c9b5f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 370, y: -125) reduce_2d3a6b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 548, y: -125) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n\n        numbers_6a3d7c -> unique_numbers_2c9b5f.left\n        numbers_6a3d7c -> unique_numbers_2c9b5f.right\n\n        1 -> mul_2f9d09.first\n        reduce_2d3a6b.accumulator -> mul_2f9d09.second\n        mul_2f9d09.result -> reduce_2d3a6b.next_accumulator\n\n        unique_numbers_2c9b5f.difference -> reduce_2d3a6b.items\n        1 -> reduce_2d3a6b.initial_value\n        execute_4b1e2f -> reduce_2d3a6b.execute\n        reduce_2d3a6b.result -> product_2b7a3d\n\n        reduce_2d3a6b.done -> continue_4c4e4f\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -254, name: \"list1\") property(List) list1_6a3d7c\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_4b3e6f\n        in(x: 10, y: -125, name: \"execute\") trigger() execute_0a1d7c\n\n        out(x: 10, y: 10, name: \"out\") property(List) out_b8954b\n        out(x: 10, y: 136, name: \"continue\") trigger() continue_2f1e2a\n\n        instance(x: 270, y: -254) difference_left_0c6d83 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 270, y: -189) difference_right_0c6d83 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 540, y: -222) concat_dissimilar_0c6d83 root.Std_k98ojb.List.Concat {}\n\n        list1_6a3d7c -> difference_left_0c6d83.left\n        list2_4b3e6f -> difference_left_0c6d83.right\n\n        list2_4b3e6f -> difference_right_0c6d83.left\n        list1_6a3d7c -> difference_right_0c6d83.right\n\n        execute_0a1d7c -> difference_left_0c6d83.execute\n        execute_0a1d7c -> difference_right_0c6d83.execute\n\n        difference_left_0c6d83.difference -> concat_dissimilar_0c6d83.left\n        difference_right_0c6d83.difference -> concat_dissimilar_0c6d83.right\n\n        concat_dissimilar_0c6d83.list -> out_b8954b\n        concat_dissimilar_0c6d83.done -> continue_2f1e2a\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list_right {\n        in(x: 10, y: -264, name: \"list\") property(List) list_5d3c7e\n        in(x: 10, y: -189, name: \"rotate_by\") property(Number) rotate_by_2b5a7f\n        in(x: 10, y: -114, name: \"execute\") trigger() execute_6d3cde\n\n        out(x: 10, y: 10, name: \"rotated_list\") property(List) rotated_list_c82b9a\n        out(x: 10, y: 135, name: \"continue\") trigger() continue_7e6f4c\n\n        instance(x: 250, y: -189) length_8d3e28 root.Std_k98ojb.List.Length {}\n        instance(x: 490, y: -189) modulo_4a2b0f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 730, y: -189) sub_6d5e6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 970, y: -189) slice_2a4f57 root.Std_k98ojb.List.Slice {}\n        instance(x: 970, y: -30) slice_b3d6c3 root.Std_k98ojb.List.Slice {}\n        instance(x: 1210, y: -110) concat_4f5a7e root.Std_k98ojb.List.Concat {}\n\n        list_5d3c7e -> length_8d3e28.list\n        rotate_by_2b5a7f -> modulo_4a2b0f.value\n        length_8d3e28.length -> modulo_4a2b0f.divisor\n        modulo_4a2b0f.result -> sub_6d5e6c.first\n        length_8d3e28.length -> sub_6d5e6c.second\n        list_5d3c7e -> slice_2a4f57.list\n        sub_6d5e6c.result -> slice_2a4f57.start\n        modulo_4a2b0f.result -> slice_b3d6c3.start\n        -1 -> slice_b3d6c3.end\n        list_5d3c7e -> slice_b3d6c3.list\n        slice_2a4f57.slice -> concat_4f5a7e.first\n        slice_b3d6c3.slice -> concat_4f5a7e.second\n        execute_6d3cde -> length_8d3e28.execute\n        continue_7e6f4c <- concat_4f5a7e.execute\n        rotated_list_c82b9a <- concat_4f5a7e.concatenatedList\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 10, y: -25, name: \"array\") property(List(Number)) array_7d3e4c\n        in(x: 10, y: 50, name: \"execute\") trigger() execute_8f9b6a\n\n        out(x: 10, y: 125, name: \"sum\") property(Number) sum_f3db9f\n        out(x: 10, y: 175, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 10, y: -100) reduce_2cb3f6 root.Std_k98ojb.Iteration.Reduce {}\n        array_7d3e4c -> reduce_2cb3f6.items\n        execute_8f9b6a -> reduce_2cb3f6.execute\n\n        func() {\n            in(x: -10, y: 50, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: -10, y: 100, name: \"currentValue\") property(Number) currentValue_4e2b8d\n\n            out(x: 10, y: 150, name: \"result\") property(Number) result_d0fd24\n\n            instance(x: 10, y: -10) add_b4554f root.Std_k98ojb.Math.Add {}\n            accumulator_5f51f7 -> add_b4554f.first\n            currentValue_4e2b8d -> add_b4554f.second\n            add_b4554f.result -> result_d0fd24\n        } -> reduce_2cb3f6.handler\n\n        0 -> reduce_2cb3f6.initialValue\n        reduce_2cb3f6.result -> sum_f3db9f\n        reduce_2cb3f6.done -> continue_8ba06b\n    }\n\n    instance(x: -189, y: 222) sum_array_f0be66 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7f3a6c\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8d3b6e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_f24f7a\n        out(x: 10, y: 60, name: \"continue\") trigger() continue_5c8b9d\n\n        instance(x: 10, y: -135) if_0e48da root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -75) if_2f6a45 root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -15) for_3d7e6c root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 45) modulo_2e4f7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 105) if_3d7e6c root.Std_k98ojb.Std.If {}\n\n        input_7f3a6c -> if_0e48da.value\n        execute_8d3b6e -> if_0e48da.execute\n\n        2 -> if_2f6a45.value\n        if_0e48da.then -> if_2f6a45.execute\n\n        input_7f3a6c -> for_3d7e6c.items\n        if_2f6a45.then -> for_3d7e6c.trigger\n\n        for_3d7e6c.item -> modulo_2e4f7a.value\n        input_7f3a6c -> modulo_2e4f7a.divisor\n\n        0 -> if_3d7e6c.value\n        modulo_2e4f7a.result -> if_3d7e6c.predicate\n\n        for_3d7e6c.onItem -> if_3d7e6c.execute\n\n        if_3d7e6c.then -> continue_5c8b9d\n        if_3d7e6c.else -> for_3d7e6c.next\n\n        for_3d7e6c.done -> is_prime_f24f7a\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d7e\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9d\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b9a3f\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6e8c4f\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1d9b4a\n\n        instance(x: 10, y: -140) expression_3f5d7e root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3f5d7e -> expression_3f5d7e.gen_0\n        b_8c4a9d -> expression_3f5d7e.gen_1\n        execute_2b9a3f -> expression_3f5d7e.execute\n        expression_3f5d7e.result -> out_6e8c4f\n        continue_1d9b4a -> expression_3f5d7e.continue\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7a5d4c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7a5d4c.value\n        11 -> modulo_7a5d4c.divisor\n\n        instance(x: 20, y: -40) equal_6f5e4a root.Std_k98ojb.Logic.Equal {}\n        modulo_7a5d4c.result -> equal_6f5e4a.left\n        0 -> equal_6f5e4a.right\n\n        instance(x: 20, y: 40) if_31b2c7 root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_31b2c7.execute\n        equal_6f5e4a.result -> if_31b2c7.predicate\n\n        if_31b2c7.value -> out_f3db9f\n        if_31b2c7.then -> continue_8ba06b\n        if_31b2c7.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3f4d\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9c5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3f\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_6d8b9c\n\n        instance(x: 150, y: -20) replace_3e2b1d root.Std_k98ojb.Strings.Replace {}\n        input_7a3f4d -> replace_3e2b1d.input\n        search_8b9c5e -> replace_3e2b1d.search\n        replace_2c7a3f -> replace_3e2b1d.replace\n        replace_3e2b1d.output -> output_6d8b9c\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e6f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 74, name: \"continue\") trigger() continue_8a9d2b\n\n        instance(x: 160, y: -122) unique_numbers_3f5e6a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 310, y: -122) reduce_product_7c4d6a root.Std_k98ojb.Iteration.Reduce {\n            func() {\n                in(x: -10, y: -10, name: \"accumulator\") property(Number) accumulator_5f5e6a\n                in(x: -10, y: 34, name: \"current_value\") property(Number) current_value_7c5e6a\n\n                out(x: 10, y: -10, name: \"result\") property(Number) result_9f5e6a\n\n                instance(x: 80, y: -10) mul_3f5e6a root.Std_k98ojb.Math.Mul {}\n                accumulator_5f5e6a -> mul_3f5e6a.first\n                current_value_7c5e6a -> mul_3f5e6a.second\n                mul_3f5e6a.result -> result_9f5e6a\n            }\n        }\n        1 -> reduce_product_7c4d6a.accumulator\n        numbers_3c7d6a -> unique_numbers_3f5e6a.left\n        List.Empty() -> unique_numbers_3f5e6a.right\n        unique_numbers_3f5e6a.difference -> reduce_product_7c4d6a.items\n        execute_2b5e6f -> reduce_product_7c4d6a.execute\n        reduce_product_7c4d6a.result -> product_4b53c7\n        reduce_product_7c4d6a.done -> continue_8a9d2b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7f\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_4c3d7f\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6b5a4e\n\n        out(x: 10, y: 10, name: \"out\") property(List) out_89b4c3\n        out(x: 10, y: 79, name: \"continue\") trigger() continue_2d6f5c\n\n        instance(x: 10, y: -50) difference_0a7ebe root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7f -> difference_0a7ebe.left\n        list2_4c3d7f -> difference_0a7ebe.right\n        instance(x: 10, y: 50) difference_b968b7 root.Std_k98ojb.Sets.Difference {}\n        list2_4c3d7f -> difference_b968b7.left\n        list1_4c3d7f -> difference_b968b7.right\n        instance(x: 10, y: 150) concat_2a7ebe root.Std_k98ojb.List.Concat {}\n        difference_0a7ebe.difference -> concat_2a7ebe.left\n        difference_b968b7.difference -> concat_2a7ebe.right\n        execute_6b5a4e -> continue_2d6f5c\n        concat_2a7ebe.list -> out_89b4c3\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b4e1f\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1560, y: -198, name: \"rotated_list\") property(List) output_rotated_list_2b4e1f\n        out(x: 1560, y: -140, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 200, y: -80) length_9fba8c root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -80) modulo_6e1b4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 700, y: -80) sub_2f9d09 root.Std_k98ojb.Math.Sub {}\n        instance(x: 950, y: -80) slice_1a3e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 950, y: -160) slice_2f9d09 root.Std_k98ojb.List.Slice {}\n        instance(x: 1200, y: -120) concat_3e4c2f root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_9fba8c.list\n        input_rotate_by_2b4e1f -> modulo_6e1b4d.value\n        length_9fba8c.length -> modulo_6e1b4d.divisor\n        modulo_6e1b4d.result -> sub_2f9d09.first\n        length_9fba8c.length -> sub_2f9d09.second\n        input_list_7c3a4d -> slice_1a3e4c.list\n        sub_2f9d09.result -> slice_1a3e4c.start\n        0 -> slice_1a3e4c.end\n        input_list_7c3a4d -> slice_2f9d09.list\n        0 -> slice_2f9d09.start\n        sub_2f9d09.result -> slice_2f9d09.end\n        slice_1a3e4c.slice -> concat_3e4c2f.first\n        slice_2f9d09.slice -> concat_3e4c2f.second\n        concat_3e4c2f.concatenated_list -> output_rotated_list_2b4e1f\n        execute_7c3a4d -> continue_7c3a4d\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -245, name: \"array\") property(List<Number>) array_7c3a6d\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_7b3e6f\n\n        out(x: 10, y: 245, name: \"sum\") property(Number) sum_7b3e6f\n        out(x: 10, y: 298, name: \"continue\") trigger() continue_7b3e6f\n\n        instance(x: 10, y: -100) reduce_4a5d6c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 10, y: -245, name: \"accumulator\") property(Number) accumulator_7c3a6d\n            in(x: 10, y: -198, name: \"current_value\") property(Number) current_value_7b3e6f\n\n            out(x: 10, y: 245, name: \"result\") property(Number) result_7b3e6f\n            instance(x: 10, y: -100) add_4a5d6c root.Std_k98ojb.Math.Add {}\n            accumulator_7c3a6d -> add_4a5d6c.first\n            current_value_7b3e6f -> add_4a5d6c.second\n            add_4a5d6c.result -> result_7b3e6f\n        } -> reduce_4a5d6c.reducer\n        0 -> reduce_4a5d6c.initial_value\n        array_7c3a6d -> reduce_4a5d6c.items\n        execute_7b3e6f -> reduce_4a5d6c.execute\n        reduce_4a5d6c.result -> sum_7b3e6f\n        reduce_4a5d6c.done -> continue_7b3e6f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c7e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_5f3a4d\n        out(x: 10, y: 50, name: \"continue\") trigger() continue_2f9d09\n\n        instance(x: 10, y: -180) for_7f3a4d root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: -140) if_7f3a4d root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -100) modulo_7f3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: -60) equal_7f3a4d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: -20) if_5f3a4d root.Std_k98ojb.Std.If {}\n        input_7f3a4d -> for_7f3a4d.items\n        execute_8b6c7e -> for_7f3a4d.reset\n        1 -> for_7f3a4d.start\n        for_7f3a4d.item -> modulo_7f3a4d.value\n        input_7f3a4d -> modulo_7f3a4d.divisor\n        modulo_7f3a4d.result -> equal_7f3a4d.left\n        0 -> equal_7f3a4d.right\n        equal_7f3a4d.result -> if_5f3a4d.predicate\n        for_7f3a4d.onItem -> if_5f3a4d.execute\n        if_5f3a4d.then -> continue_2f9d09\n        1 -> if_7f3a4d.value\n        input_7f3a4d -> if_7f3a4d.predicate\n        for_7f3a4d.onItem -> if_7f3a4d.execute\n        if_7f3a4d.else -> modulo_7f3a4d.execute\n        if_5f3a4d.else -> for_7f3a4d.next\n        0 -> is_prime_5f3a4d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d6c\n        in(x: 10, y: -40, name: \"b\") property(Number) b_7e9a8b\n        in(x: 10, y: -60, name: \"execute\") trigger() execute_2c4a3f\n\n        out(x: 510, y: -10, name: \"out\") property(Bool) out_3d7e9f\n        out(x: 510, y: 20, name: \"continue\") trigger() continue_8b6c4a\n\n        instance(x: 10, y: -100) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        a_3f5d6c -> mul_2f9d09.first\n        b_7e9a8b -> mul_2f9d09.second\n\n        instance(x: 10, y: -140) less_than_0 root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        mul_2f9d09.result -> less_than_0.left\n\n        instance(x: 10, y: -180) not_0 root.Std_k98ojb.Logic.Not {}\n        less_than_0.result -> not_0.input\n\n        not_0.output -> out_3d7e9f\n        execute_2c4a3f -> continue_8b6c4a\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -36, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 49, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 112, y: -14, name: \"out\") property(Bool) out_f3db9f\n        out(x: 112, y: 65, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 17, y: -139) modulo_4c1dcb root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_4c1dcb.value\n        11 -> modulo_4c1dcb.divisor\n\n        instance(x: 17, y: -26) equal_4c1dcb root.Std_k98ojb.Logic.Equal {}\n        modulo_4c1dcb.result -> equal_4c1dcb.left\n        0 -> equal_4c1dcb.right\n\n        execute_27b8c3 -> modulo_4c1dcb.execute\n        equal_4c1dcb.result -> out_f3db9f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -245, name: \"input\") property(String) input_7a3d6c\n        in(x: 10, y: -198, name: \"search\") property(String) search_2b0eac\n        in(x: 10, y: -151, name: \"replace\") property(String) replace_4f7a3d\n        in(x: 10, y: -104, name: \"execute\") trigger() execute_6c829b\n\n        out(x: 10, y: 10, name: \"output\") property(String) output_5e0c1f\n        out(x: 10, y: 63, name: \"continue\") trigger() continue_4a7d12\n\n        instance(x: 198, y: -125) replace_3b3b74 root.Std_k98ojb.Strings.Replace {}\n        input_7a3d6c -> replace_3b3b74.input\n        search_2b0eac -> replace_3b3b74.search\n        replace_4f7a3d -> replace_3b3b74.replace\n        execute_6c829b -> replace_3b3b74.execute\n        replace_3b3b74.output -> output_5e0c1f\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 100, name: \"input\") property(String) input_7f3a5d\n    out(x: 600, y: 100, name: \"output\") property(String) output_4e2b8c\n\n    instance(x: 350, y: 100) tolower_9f8a7d root.Std_k98ojb.Strings.ToLower {}\n    input_7f3a5d -> tolower_9f8a7d.input\n    tolower_9f8a7d.output -> output_4e2b8c\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3a7d6e\n        in(x: 10, y: -189, name: \"execute\") trigger() execute_2c4b9f\n\n        out(x: 1114, y: -154, name: \"product\") property(Number) product_3a7d6e\n        out(x: 1086, y: -86, name: \"continue\") trigger() continue_2c4b9f\n\n        instance(x: 178, y: -154) unique_numbers_2c4b9f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 340, y: -154) reduce_2c4b9f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 167, y: -10, name: \"current\") property(Number) current_2c4b9f\n            in(x: 153, y: -79, name: \"index\") property(Number) index_2c4b9f\n            in(x: 186, y: -147, name: \"context\") property(Number) context_2c4b9f\n\n            out(x: 305, y: -10, name: \"result\") property(Number) result_2c4b9f\n\n            instance(x: 286, y: -107) mul_2c4b9f root.Std_k98ojb.Math.Mul {}\n            context_2c4b9f -> mul_2c4b9f.first\n            current_2c4b9f -> mul_2c4b9f.second\n            mul_2c4b9f.result -> result_2c4b9f\n        } -> reduce_2c4b9f.handler\n        1 -> reduce_2c4b9f.initial_value\n        numbers_3a7d6e -> unique_numbers_2c4b9f.left\n        instance(x: 508, y: -154) empty_list_2c4b9f root.Std_k98ojb.List.Empty {}\n        empty_list_2c4b9f.list -> unique_numbers_2c4b9f.right\n        unique_numbers_2c4b9f.difference -> reduce_2c4b9f.items\n        execute_2c4b9f -> reduce_2c4b9f.execute\n        reduce_2c4b9f.result -> product_3a7d6e\n        reduce_2c4b9f.done -> continue_2c4b9f\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 354, y: -106, name: \"list1\") property(List) list1_27a2c6\n        in(x: 354, y: -28, name: \"list2\") property(List) list2_f9d6e4\n        in(x: 354, y: 50, name: \"execute\") trigger() execute_1b7a1c\n\n        out(x: 1894, y: -10, name: \"out\") property(List) out_2f9d6e\n        out(x: 1894, y: 135, name: \"continue\") trigger() continue_2b7a1c\n\n        instance(x: 591, y: -106) difference_left_3b6a2c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 591, y: 14) difference_right_3b6a2c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 791, y: -106) concat_dissimilar_3b6a2c root.Std_k98ojb.List.Concat {}\n\n        list1_27a2c6 -> difference_left_3b6a2c.left\n        list2_f9d6e4 -> difference_left_3b6a2c.right\n\n        list2_f9d6e4 -> difference_right_3b6a2c.left\n        list1_27a2c6 -> difference_right_3b6a2c.right\n\n        difference_left_3b6a2c.difference -> concat_dissimilar_3b6a2c.first\n        difference_right_3b6a2c.difference -> concat_dissimilar_3b6a2c.second\n\n        concat_dissimilar_3b6a2c.concatenatedList -> out_2f9d6e\n\n        execute_1b7a1c -> continue_2b7a1c\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by a specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7a4c3d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) rotate_by_8b3f4e\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1650, y: -190, name: \"rotated_list\") property(List) rotated_list_f3db9f\n        out(x: 1650, y: -140, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 270, y: -100) length_7a4c3d root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -100) modulo_7a4c3d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 620, y: -100) sub_7a4c3d root.Std_k98ojb.Math.Sub {}\n        instance(x: 790, y: -100) slice_start_7a4c3d root.Std_k98ojb.List.Slice {}\n        instance(x: 790, y: -50) slice_end_7a4c3d root.Std_k98ojb.List.Slice {}\n        instance(x: 960, y: -25) concat_7a4c3d root.Std_k98ojb.List.Concat {}\n\n        input_list_7a4c3d -> length_7a4c3d.list\n        rotate_by_8b3f4e -> modulo_7a4c3d.value\n        length_7a4c3d.length -> modulo_7a4c3d.divisor\n        modulo_7a4c3d.result -> sub_7a4c3d.first\n        length_7a4c3d.length -> sub_7a4c3d.second\n        input_list_7a4c3d -> slice_start_7a4c3d.list\n        sub_7a4c3d.result -> slice_start_7a4c3d.start\n        length_7a4c3d.length -> slice_start_7a4c3d.end\n        input_list_7a4c3d -> slice_end_7a4c3d.list\n        0 -> slice_end_7a4c3d.start\n        sub_7a4c3d.result -> slice_end_7a4c3d.end\n        slice_start_7a4c3d.slice -> concat_7a4c3d.first\n        slice_end_7a4c3d.slice -> concat_7a4c3d.second\n        concat_7a4c3d.concatenated -> rotated_list_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_list_right_f0be66 root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 354, y: -106, name: \"array\") property(List<Number>) array_2f7d8a\n        in(x: 354, y: -196, name: \"execute\") trigger() execute_2c7b8e\n\n        out(x: 1894, y: 10, name: \"sum\") property(Number) sum_f3db9f\n        out(x: 1894, y: 150, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 714, y: -256) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1496, y: -187) reduce_9fba8c root.Std_k98ojb.Iteration.Reduce {\n            handler: \"add_b4554f\"\n        }\n        array_2f7d8a -> for_8cb3f6.items\n        execute_2c7b8e -> for_8cb3f6.reset\n        0 -> reduce_9fba8c.accumulator\n        for_8cb3f6.item -> add_b4554f.first\n        reduce_9fba8c.accumulator -> add_b4554f.second\n        for_8cb3f6.onItem -> reduce_9fba8c.reduce\n        for_8cb3f6.done -> continue_8ba06b\n        reduce_9fba8c.result -> sum_f3db9f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7a3d6f\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8b0e7c\n\n        out(x: 1150, y: -245, name: \"is_prime\") property(Bool) is_prime_f3db9f\n        out(x: 1150, y: -195, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 170, y: -245) greater_than_2_ea7d8c root.Std_k98ojb.Math.GreaterThan {}\n        input_7a3d6f -> greater_than_2_ea7d8c.left\n        2 -> greater_than_2_ea7d8c.right\n\n        instance(x: 170, y: -145) if_greater_than_2_f9b7e1 root.Std_k98ojb.Std.If {}\n        greater_than_2_ea7d8c.result -> if_greater_than_2_f9b7e1.predicate\n        execute_8b0e7c -> if_greater_than_2_f9b7e1.execute\n\n        instance(x: 340, y: -245) generate_range_2_to_n_minus_1_6a4fbc root.Std_k98ojb.List.GenerateRange {}\n        input_7a3d6f -> generate_range_2_to_n_minus_1_6a4fbc.to\n        2 -> generate_range_2_to_n_minus_1_6a4fbc.from\n\n        instance(x: 500, y: -245) for_loop_8cb3f6 root.Std_k98ojb.Std.For {}\n        if_greater_than_2_f9b7e1.then -> for_loop_8cb3f6.reset\n        generate_range_2_to_n_minus_1_6a4fbc.list -> for_loop_8cb3f6.items\n\n        instance(x: 650, y: -245) modulo_operation_4d9c7b root.Std_k98ojb.Math.Modulo {}\n        input_7a3d6f -> modulo_operation_4d9c7b.value\n        for_loop_8cb3f6.item -> modulo_operation_4d9c7b.divisor\n\n        instance(x: 800, y: -245) equal_to_zero_1e2d1a root.Std_k98ojb.Math.EqualTo {}\n        modulo_operation_4d9c7b.result -> equal_to_zero_1e2d1a.left\n        0 -> equal_to_zero_1e2d1a.right\n\n        instance(x: 950, y: -245) if_equal_to_zero_3f86a7 root.Std_k98ojb.Std.If {}\n        equal_to_zero_1e2d1a.result -> if_equal_to_zero_3f86a7.predicate\n        for_loop_8cb3f6.onItem -> if_equal_to_zero_3f86a7.execute\n\n        instance(x: 1050, y: -245) set_false_9b0e7c root.Std_k98ojb.Property.Set {}\n        false -> set_false_9b0e7c.value\n        is_prime_f3db9f -> set_false_9b0e7c.target\n\n        if_equal_to_zero_3f86a7.then -> set_false_9b0e7c.execute\n        if_equal_to_zero_3f86a7.else -> for_loop_8cb3f6.next\n\n        instance(x: 1050, y: -145) set_true_2d7c8b root.Std_k98ojb.Property.Set {}\n        true -> set_true_2d7c8b.value\n        is_prime_f3db9f -> set_true_2d7c8b.target\n\n        if_greater_than_2_f9b7e1.else -> set_true_2d7c8b.execute\n        for_loop_8cb3f6.done -> set_true_2d7c8b.execute\n\n        set_false_9b0e7c.done -> continue_8ba06b\n        set_true_2d7c8b.done -> continue_8ba06b\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_5f6d4c\n        in(x: 10, y: -80, name: \"b\") property(Number) b_9e7b3a\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_2d6f5b\n\n        out(x: 10, y: 100, name: \"out\") property(Bool) out_8c9e73\n        out(x: 10, y: 180, name: \"continue\") trigger() continue_4a2d6f\n\n        instance(x: 10, y: -200) expression_5b9e4a root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_5f6d4c -> expression_5b9e4a.gen_0\n        b_9e7b3a -> expression_5b9e4a.gen_1\n        execute_2d6f5b -> expression_5b9e4a.execute\n        expression_5b9e4a.result -> out_8c9e73\n        continue_4a2d6f -> continue_4a2d6f\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -46, name: \"input\") property(Number) input_7c3f5e\n        in(x: -20, y: -98, name: \"execute\") trigger() execute_8b2d4a\n\n        out(x: 100, y: 10, name: \"result\") property(Bool) result_6a7c3f\n        out(x: 100, y: 50, name: \"continue\") trigger() continue_d9e82b\n\n        instance(x: -20, y: 40) modulo_b9d2eb root.Std_k98ojb.Math.Modulo {}\n        input_7c3f5e -> modulo_b9d2eb.value\n        11 -> modulo_b9d2eb.divisor\n        execute_8b2d4a -> modulo_b9d2eb.execute\n\n        instance(x: -20, y: 100) equal_d6b7c3 root.Std_k98ojb.Logic.Equal {}\n        modulo_b9d2eb.result -> equal_d6b7c3.left\n        0 -> equal_d6b7c3.right\n        equal_d6b7c3.result -> result_6a7c3f\n\n        execute_8b2d4a -> continue_d9e82b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_5a4f7d\n        in(x: 10, y: 60, name: \"search\") property(String) search_3b9c8e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2a5b6f\n        in(x: 10, y: 220, name: \"execute\") trigger() execute_7d3a9c\n\n        out(x: 810, y: -20, name: \"output\") property(String) output_4e2b5a\n        out(x: 810, y: 60, name: \"continue\") trigger() continue_1f7d3b\n\n        instance(x: 190, y: -20) replace_8c5b9d root.Std_k98ojb.Strings.Replace {}\n        input_5a4f7d -> replace_8c5b9d.input\n        search_3b9c8e -> replace_8c5b9d.search\n        replace_2a5b6f -> replace_8c5b9d.replace\n        execute_7d3a9c -> replace_8c5b9d.execute\n        replace_8c5b9d.output -> output_4e2b5a\n        replace_8c5b9d.done -> continue_1f7d3b\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_4a2c3d\n    out(x: 700, y: 50, name: \"output\") property(String) output_8f9b2e\n\n    instance(x: 400, y: 50) toLower_1a2b3c root.Std_k98ojb.Strings.ToLower {}\n\n    input_4a2c3d -> toLower_1a2b3c.input\n    toLower_1a2b3c.output -> output_8f9b2e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_6a3d7c\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_4b1e2f\n\n        out(x: 1016, y: -56, name: \"product\") property(Number) product_2b7a3d\n        out(x: 1016, y: 98, name: \"continue\") trigger() continue_4c4e4f\n\n        instance(x: 168, y: -125) unique_numbers_2c9b5f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 370, y: -125) reduce_2d3a6b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 548, y: -125) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n\n        numbers_6a3d7c -> unique_numbers_2c9b5f.left\n        numbers_6a3d7c -> unique_numbers_2c9b5f.right\n\n        1 -> mul_2f9d09.first\n        reduce_2d3a6b.accumulator -> mul_2f9d09.second\n        mul_2f9d09.result -> reduce_2d3a6b.next_accumulator\n\n        unique_numbers_2c9b5f.difference -> reduce_2d3a6b.items\n        1 -> reduce_2d3a6b.initial_value\n        execute_4b1e2f -> reduce_2d3a6b.execute\n        reduce_2d3a6b.result -> product_2b7a3d\n\n        reduce_2d3a6b.done -> continue_4c4e4f\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -254, name: \"list1\") property(List) list1_6a3d7c\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_4b3e6f\n        in(x: 10, y: -125, name: \"execute\") trigger() execute_0a1d7c\n\n        out(x: 10, y: 10, name: \"out\") property(List) out_b8954b\n        out(x: 10, y: 136, name: \"continue\") trigger() continue_2f1e2a\n\n        instance(x: 270, y: -254) difference_left_0c6d83 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 270, y: -189) difference_right_0c6d83 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 540, y: -222) concat_dissimilar_0c6d83 root.Std_k98ojb.List.Concat {}\n\n        list1_6a3d7c -> difference_left_0c6d83.left\n        list2_4b3e6f -> difference_left_0c6d83.right\n\n        list2_4b3e6f -> difference_right_0c6d83.left\n        list1_6a3d7c -> difference_right_0c6d83.right\n\n        execute_0a1d7c -> difference_left_0c6d83.execute\n        execute_0a1d7c -> difference_right_0c6d83.execute\n\n        difference_left_0c6d83.difference -> concat_dissimilar_0c6d83.left\n        difference_right_0c6d83.difference -> concat_dissimilar_0c6d83.right\n\n        concat_dissimilar_0c6d83.list -> out_b8954b\n        concat_dissimilar_0c6d83.done -> continue_2f1e2a\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list_right {\n        in(x: 10, y: -264, name: \"list\") property(List) list_5d3c7e\n        in(x: 10, y: -189, name: \"rotate_by\") property(Number) rotate_by_2b5a7f\n        in(x: 10, y: -114, name: \"execute\") trigger() execute_6d3cde\n\n        out(x: 10, y: 10, name: \"rotated_list\") property(List) rotated_list_c82b9a\n        out(x: 10, y: 135, name: \"continue\") trigger() continue_7e6f4c\n\n        instance(x: 250, y: -189) length_8d3e28 root.Std_k98ojb.List.Length {}\n        instance(x: 490, y: -189) modulo_4a2b0f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 730, y: -189) sub_6d5e6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 970, y: -189) slice_2a4f57 root.Std_k98ojb.List.Slice {}\n        instance(x: 970, y: -30) slice_b3d6c3 root.Std_k98ojb.List.Slice {}\n        instance(x: 1210, y: -110) concat_4f5a7e root.Std_k98ojb.List.Concat {}\n\n        list_5d3c7e -> length_8d3e28.list\n        rotate_by_2b5a7f -> modulo_4a2b0f.value\n        length_8d3e28.length -> modulo_4a2b0f.divisor\n        modulo_4a2b0f.result -> sub_6d5e6c.first\n        length_8d3e28.length -> sub_6d5e6c.second\n        list_5d3c7e -> slice_2a4f57.list\n        sub_6d5e6c.result -> slice_2a4f57.start\n        modulo_4a2b0f.result -> slice_b3d6c3.start\n        -1 -> slice_b3d6c3.end\n        list_5d3c7e -> slice_b3d6c3.list\n        slice_2a4f57.slice -> concat_4f5a7e.first\n        slice_b3d6c3.slice -> concat_4f5a7e.second\n        execute_6d3cde -> length_8d3e28.execute\n        continue_7e6f4c <- concat_4f5a7e.execute\n        rotated_list_c82b9a <- concat_4f5a7e.concatenatedList\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 10, y: -25, name: \"array\") property(List(Number)) array_7d3e4c\n        in(x: 10, y: 50, name: \"execute\") trigger() execute_8f9b6a\n\n        out(x: 10, y: 125, name: \"sum\") property(Number) sum_f3db9f\n        out(x: 10, y: 175, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 10, y: -100) reduce_2cb3f6 root.Std_k98ojb.Iteration.Reduce {}\n        array_7d3e4c -> reduce_2cb3f6.items\n        execute_8f9b6a -> reduce_2cb3f6.execute\n\n        func() {\n            in(x: -10, y: 50, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: -10, y: 100, name: \"currentValue\") property(Number) currentValue_4e2b8d\n\n            out(x: 10, y: 150, name: \"result\") property(Number) result_d0fd24\n\n            instance(x: 10, y: -10) add_b4554f root.Std_k98ojb.Math.Add {}\n            accumulator_5f51f7 -> add_b4554f.first\n            currentValue_4e2b8d -> add_b4554f.second\n            add_b4554f.result -> result_d0fd24\n        } -> reduce_2cb3f6.handler\n\n        0 -> reduce_2cb3f6.initialValue\n        reduce_2cb3f6.result -> sum_f3db9f\n        reduce_2cb3f6.done -> continue_8ba06b\n    }\n\n    instance(x: -189, y: 222) sum_array_f0be66 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -245, name: \"input\") property(Number) input_7f3a6c\n        in(x: 10, y: -195, name: \"execute\") trigger() execute_8d3b6e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_f24f7a\n        out(x: 10, y: 60, name: \"continue\") trigger() continue_5c8b9d\n\n        instance(x: 10, y: -135) if_0e48da root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -75) if_2f6a45 root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: -15) for_3d7e6c root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 45) modulo_2e4f7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 105) if_3d7e6c root.Std_k98ojb.Std.If {}\n\n        input_7f3a6c -> if_0e48da.value\n        execute_8d3b6e -> if_0e48da.execute\n\n        2 -> if_2f6a45.value\n        if_0e48da.then -> if_2f6a45.execute\n\n        input_7f3a6c -> for_3d7e6c.items\n        if_2f6a45.then -> for_3d7e6c.trigger\n\n        for_3d7e6c.item -> modulo_2e4f7a.value\n        input_7f3a6c -> modulo_2e4f7a.divisor\n\n        0 -> if_3d7e6c.value\n        modulo_2e4f7a.result -> if_3d7e6c.predicate\n\n        for_3d7e6c.onItem -> if_3d7e6c.execute\n\n        if_3d7e6c.then -> continue_5c8b9d\n        if_3d7e6c.else -> for_3d7e6c.next\n\n        for_3d7e6c.done -> is_prime_f24f7a\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5f7d\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b4f3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6d8c1a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_9f3b4d\n\n        instance(x: 10, y: -140) expression_4e2b1c root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3e5f7d -> expression_4e2b1c.gen_0\n        b_8c4a9b -> expression_4e2b1c.gen_1\n        execute_2b4f3e -> expression_4e2b1c.execute\n        expression_4e2b1c.result -> out_6d8c1a\n        continue_9f3b4d -> expression_4e2b1c.continue\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4d5a root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4d5a.value\n        11 -> modulo_7c4d5a.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4b root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4d5a.result -> equal_6f3e4b.left\n        0 -> equal_6f3e4b.right\n\n        instance(x: 20, y: 40) if_1a2b3c root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_1a2b3c.execute\n        equal_6f3e4b.result -> if_1a2b3c.predicate\n\n        if_1a2b3c.value -> out_f3db9f\n        if_1a2b3c.then -> continue_8ba06b\n        if_1a2b3c.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3d4c\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9f5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3d\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_6b8a9f\n\n        instance(x: 150, y: -20) replace_3e4a5b root.Std_k98ojb.Strings.Replace {}\n        input_7a3d4c -> replace_3e4a5b.input\n        search_8b9f5e -> replace_3e4a5b.search\n        replace_2c7a3d -> replace_3e4a5b.replace\n        replace_3e4a5b.output -> output_6b8a9f\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e2f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 66, name: \"continue\") trigger() continue_8a9d6f\n\n        instance(x: 200, y: -100) unique_numbers_3e2d6a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: -100) reduce_product_7c5d6a root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 600, y: -100) initial_value_3e2d6a root.Std_k98ojb.Math.Mul {}\n\n        numbers_3c7d6a -> unique_numbers_3e2d6a.left\n        numbers_3c7d6a -> unique_numbers_3e2d6a.right\n        unique_numbers_3e2d6a.difference -> reduce_product_7c5d6a.items\n\n        1 -> initial_value_3e2d6a.first\n        1 -> initial_value_3e2d6a.second\n        initial_value_3e2d6a.result -> reduce_product_7c5d6a.accumulator\n\n        func() {\n            in(x: -10, y: -10, name: \"current\") property(Number) current_4b53c7\n            in(x: -10, y: 66, name: \"index\") property(Number) index_8a9d6f\n\n            out(x: 10, y: 10, name: \"result\") property(Number) result_2b5e2f\n\n            instance(x: 100, y: -100) mul_3c7d6a root.Std_k98ojb.Math.Mul {}\n            current_4b53c7 -> mul_3c7d6a.first\n            result_2b5e2f -> mul_3c7d6a.second\n            mul_3c7d6a.result -> result_2b5e2f\n        } -> reduce_product_7c5d6a.handler\n\n        execute_2b5e2f -> unique_numbers_3e2d6a.execute\n        unique_numbers_3e2d6a.done -> reduce_product_7c5d6a.execute\n        reduce_product_7c5d6a.result -> product_4b53c7\n        reduce_product_7c5d6a.done -> continue_8a9d6f\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7a\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_2b4f5e\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6c3d7a\n\n        out(x: 10, y: 10, name: \"out\") property(List) out_894f5e\n        out(x: 10, y: 82, name: \"continue\") trigger() continue_6c3d7a\n\n        instance(x: 10, y: -50) difference_2b4f5e root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7a -> difference_2b4f5e.left\n        list2_2b4f5e -> difference_2b4f5e.right\n        instance(x: 10, y: 60) difference_4c3d7a root.Std_k98ojb.Sets.Difference {}\n        list2_2b4f5e -> difference_4c3d7a.left\n        list1_4c3d7a -> difference_4c3d7a.right\n        instance(x: 10, y: 170) concat_6c3d7a root.Std_k98ojb.List.Concat {}\n        difference_2b4f5e.difference -> concat_6c3d7a.left\n        difference_4c3d7a.difference -> concat_6c3d7a.right\n        concat_6c3d7a.list -> out_894f5e\n        execute_6c3d7a -> continue_6c3d7a\n    }\n\n    \n\n    instance(x: -10, y: 220) dissimilar_elements_f0be66 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b5e1f\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1610, y: -198, name: \"rotated_list\") property(List) output_rotated_list_2b5e1f\n        out(x: 1610, y: -140, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 210, y: -89) length_7c3a4d root.Std_k98ojb.List.Length {}\n        instance(x: 560, y: -89) modulo_7c3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 910, y: -89) sub_7c3a4d root.Std_k98ojb.Math.Sub {}\n        instance(x: 1260, y: -89) slice_7c3a4d root.Std_k98ojb.List.Slice {}\n        instance(x: 1260, y: -15) slice_2b5e1f root.Std_k98ojb.List.Slice {}\n        instance(x: 1410, y: -198) concat_7c3a4d root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_7c3a4d.list\n        input_rotate_by_2b5e1f -> modulo_7c3a4d.value\n        length_7c3a4d.length -> modulo_7c3a4d.divisor\n        modulo_7c3a4d.result -> sub_7c3a4d.first\n        length_7c3a4d.length -> sub_7c3a4d.second\n        input_list_7c3a4d -> slice_7c3a4d.list\n        sub_7c3a4d.result -> slice_7c3a4d.start\n        -1 -> slice_7c3a4d.end\n        input_list_7c3a4d -> slice_2b5e1f.list\n        0 -> slice_2b5e1f.start\n        sub_7c3a4d.result -> slice_2b5e1f.end\n        slice_7c3a4d.slice -> concat_7c3a4d.first\n        slice_2b5e1f.slice -> concat_7c3a4d.second\n        execute_7c3a4d -> length_7c3a4d.execute\n        continue_7c3a4d -> concat_7c3a4d.execute\n        concat_7c3a4d.concatenated_list -> output_rotated_list_2b5e1f\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -256, name: \"array\") property(List<Number>) array_7f3a4d\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_4b4c0e\n\n        out(x: 10, y: 256, name: \"sum\") property(Number) sum_2b7f3a\n        out(x: 10, y: 324, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 10, y: -96) reduce_5c3d2e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -170, y: -44, name: \"accumulator\") property(Number) accumulator_2f9d09\n            in(x: -170, y: 26, name: \"current_value\") property(Number) current_value_5c3d2e\n\n            out(x: -170, y: 148, name: \"result\") property(Number) result_2f9d09\n\n            instance(x: -170, y: 86) add_2f9d09 root.Std_k98ojb.Math.Add {}\n            accumulator_2f9d09 -> add_2f9d09.first\n            current_value_5c3d2e -> add_2f9d09.second\n            add_2f9d09.result -> result_2f9d09\n        } -> reduce_5c3d2e.reducer\n        0 -> reduce_5c3d2e.initial_value\n        array_7f3a4d -> reduce_5c3d2e.items\n        execute_4b4c0e -> reduce_5c3d2e.execute\n        reduce_5c3d2e.result -> sum_2b7f3a\n        reduce_5c3d2e.done -> continue_8ba06b\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -256, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -389, name: \"execute\") trigger() execute_7b9e1c\n\n        out(x: 1890, y: -256, name: \"out\") property(Bool) out_7f3a4d\n        out(x: 1890, y: -389, name: \"continue\") trigger() continue_7b9e1c\n\n        instance(x: 10, y: -125) lessthanorequal_6b2a1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10, y: -43) equal_2d7d6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 58) greaterthan_4c4a1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 10, y: 138) generaterange_2d7d6e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 10, y: 254) for_2d7d6e root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 370) modulo_2d7d6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 486) equal_4c4a1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 593) if_2d7d6e root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: 709) and_2d7d6e root.Std_k98ojb.Logic.And {}\n\n        input_7f3a4d -> lessthanorequal_6b2a1f.left\n        2 -> lessthanorequal_6b2a1f.right\n\n        input_7f3a4d -> equal_2d7d6e.left\n        2 -> equal_2d7d6e.right\n\n        input_7f3a4d -> greaterthan_4c4a1f.left\n        2 -> greaterthan_4c4a1f.right\n\n        2 -> generaterange_2d7d6e.from\n        input_7f3a4d -> generaterange_2d7d6e.to\n\n        generaterange_2d7d6e.list -> for_2d7d6e.items\n\n        input_7f3a4d -> modulo_2d7d6e.left\n        for_2d7d6e.item -> modulo_2d7d6e.right\n\n        0 -> equal_4c4a1f.left\n        modulo_2d7d6e.result -> equal_4c4a1f.right\n\n        equal_4c4a1f.result -> if_2d7d6e.predicate\n        for_2d7d6e.onItem -> if_2d7d6e.execute\n\n        lessthanorequal_6b2a1f.result -> and_2d7d6e.left\n        equal_2d7d6e.result -> and_2d7d6e.right\n\n        and_2d7d6e.result -> out_7f3a4d\n\n        if_2d7d6e.then -> for_2d7d6e.next\n        if_2d7d6e.else -> continue_7b9e1c\n\n        greaterthan_4c4a1f.result -> for_2d7d6e.execute\n        for_2d7d6e.done -> continue_7b9e1c\n\n        execute_7b9e1c -> lessthanorequal_6b2a1f.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 354, y: -53, name: \"a\") property(Number) a_27c03d\n        in(x: 161, y: -211, name: \"b\") property(Number) b_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) mul_038fce root.Std_k98ojb.Math.Mul {}\n        instance(x: 933, y: 25) less_than_zero_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_27c03d -> mul_038fce.first\n        b_27b8c3 -> mul_038fce.second\n        mul_038fce.result -> less_than_zero_f11fda.left\n        0 -> less_than_zero_f11fda.right\n\n        less_than_zero_f11fda.result -> out_f3db9f\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -247, y: 53, name: \"input\") property(Number) input_f5c03d\n        in(x: -247, y: 119, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 628, y: 53, name: \"result\") property(Bool) result_3f3a0d\n        out(x: 628, y: 119, name: \"continue\") trigger() continue_4e7b1c\n\n        instance(x: -247, y: 251) modulo_5b1fcb root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_5b1fcb.value\n        11 -> modulo_5b1fcb.divisor\n\n        instance(x: -247, y: 363) equal_8e1a2c root.Std_k98ojb.Logic.Equal {}\n        modulo_5b1fcb.result -> equal_8e1a2c.left\n        0 -> equal_8e1a2c.right\n\n        instance(x: -247, y: 463) if_7d4b9c root.Std_k98ojb.Std.If {}\n        equal_8e1a2c.result -> if_7d4b9c.predicate\n        execute_27b8c3 -> if_7d4b9c.execute\n\n        instance(x: -247, y: 563) true_0f3a4b root.Std_k98ojb.Logic.True {}\n        true_0f3a4b.value -> result_3f3a0d\n        if_7d4b9c.then -> continue_4e7b1c\n\n        instance(x: -247, y: 663) false_5d1b8c root.Std_k98ojb.Logic.False {}\n        false_5d1b8c.value -> result_3f3a0d\n        if_7d4b9c.else -> continue_4e7b1c\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 120, y: -140, name: \"input\") property(String) input_7a3d5f\n        in(x: 120, y: -80, name: \"search\") property(String) search_f9b6e7\n        in(x: 120, y: -20, name: \"replace\") property(String) replace_b4c3a9\n        in(x: 120, y: 40, name: \"execute\") trigger() execute_8d5f6b\n\n        out(x: 1272, y: -100, name: \"output\") property(String) output_8e6b39\n        out(x: 1272, y: 40, name: \"continue\") trigger() continue_7c5f6d\n\n        instance(x: 480, y: -100) replace_4a4d9f root.Std_k98ojb.Strings.Replace {}\n        input_7a3d5f -> replace_4a4d9f.input\n        search_f9b6e7 -> replace_4a4d9f.search\n        replace_b4c3a9 -> replace_4a4d9f.replace\n        execute_8d5f6b -> replace_4a4d9f.execute\n        replace_4a4d9f.output -> output_8e6b39\n        replace_4a4d9f.execute -> continue_7c5f6d\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 103, y: -465, name: \"input\") property(String) input_2a7d7e\n    in(x: 103, y: -365, name: \"execute\") trigger() execute_c89f7c\n\n    out(x: 103, y: -245, name: \"output\") property(String) output_f3db9f\n    out(x: 103, y: -145, name: \"continue\") trigger() continue_8ba06b\n\n    instance(x: 103, y: -75) tolower_2a7d7e root.Std_k98ojb.Strings.ToLower {}\n    input_2a7d7e -> tolower_2a7d7e.input\n    execute_c89f7c -> tolower_2a7d7e.execute\n    tolower_2a7d7e.output -> output_f3db9f\n    tolower_2a7d7e.done -> continue_8ba06b\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 340, y: -215, name: \"numbers\") property(List<Number>) numbers_7f6a8c\n        in(x: 349, y: -136, name: \"execute\") trigger() execute_f7d2b6\n\n        out(x: 1702, y: -155, name: \"product\") property(Number) product_2f5a8e\n        out(x: 1799, y: -49, name: \"continue\") trigger() continue_3d7b6c\n\n        instance(x: 580, y: -244) unique_numbers_1e4a6c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 830, y: -253) reduce_7f4a4d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1139, y: -262) mul_e1c2e2 root.Std_k98ojb.Math.Mul {}\n        numbers_7f6a8c -> unique_numbers_1e4a6c.left\n        func() {\n            in(x: -50, y: 13, name: \"number\") property(Number) number_e1c2e2\n\n            out(x: 296, y: 17, name: \"out\") property(List<Number>) out_84f5a4\n            instance(x: 109, y: -113) list_empty_2b5d05 root.Std_k98ojb.List.Empty {}\n            number_e1c2e2 -> list_empty_2b5d05.list\n        } -> unique_numbers_1e4a6c.right\n        func() {\n            in(x: -73, y: 12, name: \"accumulator\") property(Number) accumulator_d98f55\n            in(x: -73, y: 72, name: \"current_value\") property(Number) current_value_46a0c5\n\n            out(x: 325, y: 12, name: \"out\") property(Number) out_8b9d0f\n            accumulator_d98f55 -> mul_e1c2e2.first\n            current_value_46a0c5 -> mul_e1c2e2.second\n            mul_e1c2e2.result -> out_8b9d0f\n        } -> reduce_7f4a4d.handler\n        1 -> reduce_7f4a4d.initial_value\n        unique_numbers_1e4a6c.list -> reduce_7f4a4d.items\n        execute_f7d2b6 -> unique_numbers_1e4a6c.execute\n        unique_numbers_1e4a6c.execute -> reduce_7f4a4d.reset\n        reduce_7f4a4d.result -> product_2f5a8e\n        reduce_7f4a4d.done -> continue_3d7b6c\n    }\n\n    \n\n    instance(x: -190, y: 221) product_of_unique_numbers_e4550b root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: 263, y: -154, name: \"list1\") property(List) list1_07f4d7\n        in(x: 268, y: -90, name: \"list2\") property(List) list2_5c7a5e\n        in(x: 339, y: -216, name: \"execute\") trigger() execute_7b4d6f\n\n        out(x: 1834, y: -104, name: \"out\") property(List) out_6b45e6\n        out(x: 1990, y: -232, name: \"continue\") trigger() continue_ea47c6\n\n        instance(x: 828, y: -115) difference_f5f405 root.Std_k98ojb.Sets.Difference {}\n        list1_07f4d7 -> difference_f5f405.left\n        list2_5c7a5e -> difference_f5f405.right\n        instance(x: 1364, y: -115) difference_e8b964 root.Std_k98ojb.Sets.Difference {}\n        list2_5c7a5e -> difference_e8b964.left\n        list1_07f4d7 -> difference_e8b964.right\n        instance(x: 1634, y: -115) concat_6a2d6f root.Std_k98ojb.List.Concat {}\n        difference_f5f405.difference -> concat_6a2d6f.left\n        difference_e8b964.difference -> concat_6a2d6f.right\n        execute_7b4d6f -> continue_ea47c6\n        concat_6a2d6f.list -> out_6b45e6\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 216, y: -304, name: \"list\") property(List) input_list_7f5a8d\n        in(x: 216, y: -395, name: \"rotate_by\") property(Number) rotate_by_d2c1b8\n        in(x: 216, y: -486, name: \"execute\") trigger() execute_0f7a4d\n\n        out(x: 1688, y: -395, name: \"rotated_list\") property(List) rotated_list_7e2c5b\n        out(x: 1688, y: -486, name: \"continue\") trigger() continue_0f7a4d\n\n        instance(x: 442, y: -395) length_0d2c4c root.Std_k98ojb.List.Length {}\n        instance(x: 668, y: -395) modulo_b5e16c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 894, y: -395) sub_2a7d0f root.Std_k98ojb.Math.Sub {}\n        instance(x: 1120, y: -395) slice_6c2e0e root.Std_k98ojb.List.Slice {}\n        instance(x: 1346, y: -395) concat_f7a1d3 root.Std_k98ojb.List.Concat {}\n\n        input_list_7f5a8d -> length_0d2c4c.list\n        rotate_by_d2c1b8 -> modulo_b5e16c.value\n        length_0d2c4c.length -> modulo_b5e16c.divisor\n        modulo_b5e16c.result -> sub_2a7d0f.first\n        length_0d2c4c.length -> sub_2a7d0f.second\n        input_list_7f5a8d -> slice_6c2e0e.list\n        sub_2a7d0f.result -> slice_6c2e0e.start\n        0 -> slice_6c2e0e.end\n        input_list_7f5a8d -> concat_f7a1d3.left\n        slice_6c2e0e.slice -> concat_f7a1d3.right\n        execute_0f7a4d -> length_0d2c4c.execute\n        sub_2a7d0f.result -> slice_6c2e0e.execute\n        concat_f7a1d3.concatenated -> rotated_list_7e2c5b\n        continue_0f7a4d -> execute_0f7a4d\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_list_right_6c2e0e root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 30, y: -20, name: \"array\") property(List<Number>) array_1a5d4c\n        in(x: 60, y: -80, name: \"execute\") trigger() execute_7f9b4e\n\n        out(x: 1230, y: -10, name: \"sum\") property(Number) sum_f3db9f\n        out(x: 1350, y: 60, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 240, y: -170) reduce_8cb3f6 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 450, y: -100) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        func() {\n            in(x: 120, y: 10, name: \"current\") property(Number) current_7a3d4c\n            in(x: 160, y: -40, name: \"accumulator\") property(Number) accumulator_9f5b8e\n\n            out(x: 300, y: 20, name: \"out\") property(Number) out_d0fd24\n\n            current_7a3d4c -> add_b4554f.first\n            accumulator_9f5b8e -> add_b4554f.second\n            add_b4554f.result -> out_d0fd24\n        } -> reduce_8cb3f6.handler\n\n        0 -> reduce_8cb3f6.accumulator\n        array_1a5d4c -> reduce_8cb3f6.items\n        execute_7f9b4e -> reduce_8cb3f6.execute\n        reduce_8cb3f6.result -> sum_f3db9f\n        reduce_8cb3f6.done -> continue_8ba06b\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -210, name: \"input\") property(Number) input_7f6a2d\n        in(x: 598, y: -210, name: \"execute\") trigger() execute_3e9b8c\n\n        out(x: 1642, y: -120, name: \"out\") property(Bool) out_f7a2d8\n        out(x: 1850, y: -120, name: \"continue\") trigger() continue_3f9b8c\n\n        instance(x: 604, y: -78, name: \"lessthanorequal_0\") Math.LessThanOrEqual {}\n        instance(x: 604, y: 152, name: \"greaterthan_0\") Math.GreaterThan {}\n        instance(x: 832, y: -9, name: \"if_0\") Std.If {}\n        instance(x: 1078, y: -201, name: \"for_0\") Std.For {}\n        instance(x: 1065, y: -42, name: \"mod_0\") Math.Modulo {}\n        instance(x: 1309, y: -183, name: \"if_1\") Std.If {}\n        input_7f6a2d -> lessthanorequal_0.left\n        1 -> lessthanorequal_0.right\n        lessthanorequal_0.result -> if_0.predicate\n        execute_3e9b8c -> if_0.execute\n        input_7f6a2d -> greaterthan_0.left\n        2 -> greaterthan_0.right\n        greaterthan_0.result -> for_0.trigger\n        input_7f6a2d -> for_0.items\n        for_0.item -> mod_0.value\n        2 -> mod_0.divisor\n        if_0.then -> for_0.reset\n        mod_0.result -> if_1.predicate\n        for_0.onItem -> if_1.execute\n        if_1.else -> for_0.next\n        if_1.then -> continue_3f9b8c\n        if_0.value -> out_f7a2d8\n        for_0.done -> continue_3f9b8c\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") has_opposite_signs {\n        in(x: 10, y: -5, name: \"a\") property(Number) a_4e7d6c\n        in(x: 20, y: -5, name: \"b\") property(Number) b_3f8a9d\n        in(x: 30, y: -5, name: \"execute\") trigger() execute_123abc\n\n        out(x: 60, y: 20, name: \"result\") property(Bool) result_f4b7c2\n        out(x: 80, y: 40, name: \"continue\") trigger() continue_ba9f5d\n\n        instance(x: 100, y: -30) mul_567def root.Std_k98ojb.Math.Mul {}\n        a_4e7d6c -> mul_567def.first\n        b_3f8a9d -> mul_567def.second\n\n        instance(x: 120, y: -70) less_than_zero_987fed root.Std_k98ojb.Math.LessThanOrEqual {\n            left: mul_567def.result\n            right: 0\n        }\n\n        less_than_zero_987fed.result -> result_f4b7c2\n        execute_123abc -> continue_ba9f5d\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -30, name: \"input\") property(Number) input_e4d5e6\n        in(x: -20, y: 90, name: \"execute\") trigger() execute_c8c7a5\n\n        out(x: 1000, y: -30, name: \"out\") property(Bool) out_4f8b6d\n        out(x: 1000, y: 90, name: \"continue\") trigger() continue_e2c7e5\n\n        instance(x: 280, y: -30) modulo_7a564b root.Std_k98ojb.Math.Modulo {}\n        input_e4d5e6 -> modulo_7a564b.value\n        11 -> modulo_7a564b.divisor\n\n        instance(x: 600, y: -30) equal_2f3c39 root.Std_k98ojb.Logic.Equal {}\n        modulo_7a564b.result -> equal_2f3c39.left\n        0 -> equal_2f3c39.right\n\n        instance(x: 720, y: -30) if_e4d15e root.Std_k98ojb.Std.If {}\n        execute_c8c7a5 -> if_e4d15e.execute\n        equal_2f3c39.result -> if_e4d15e.predicate\n\n        instance(x: 840, y: -30) true_6a5a4c root.Std_k98ojb.Logic.Equal {\n            left: true\n            right: true\n        }\n        if_e4d15e.then -> true_6a5a4c.execute\n\n        instance(x: 840, y: 90) false_7a3b2f root.Std_k98ojb.Logic.Equal {\n            left: false\n            right: false\n        }\n        if_e4d15e.else -> false_7a3b2f.execute\n\n        true_6a5a4c.result -> out_4f8b6d\n        false_7a3b2f.result -> out_4f8b6d\n        if_e4d15e.value -> continue_e2c7e5\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 30, y: -214, name: \"input\") property(String) input_5a6f7c\n        in(x: 30, y: -169, name: \"search\") property(String) search_8b3d6e\n        in(x: 30, y: -124, name: \"replace\") property(String) replace_4e5d4a\n\n        out(x: 1755, y: -192, name: \"out\") property(String) output_d7f8b5\n        out(x: 1609, y: -135, name: \"execute\") trigger() execute_2e2c3a\n\n        instance(x: 447, y: -200) characters_84d51e root.Std_k98ojb.Strings.Characters {}\n        instance(x: 677, y: -196) map_32f495 root.Std_k98ojb.Iteration.Map {}\n\n        func(doc: \"replaces a single character if it matches the search string.\") replace_char {\n            in(x: -110, y: -20, name: \"char\") property(String) char_d7e6c6\n            in(x: -110, y: 35, name: \"search\") property(String) search_4b9d3a\n            in(x: -110, y: 90, name: \"replace\") property(String) replace_28f41c\n\n            out(x: 360, y: 70, name: \"out\") property(String) output_85b4d5\n\n            instance(x: 29, y: -11) ifexpression_e80b9b root.Std_k98ojb.Std.IfExpression {\n                expression: \"char == search ? replace : char\"\n            }\n            char_d7e6c6 -> ifexpression_e80b9b.gen_0\n            search_4b9d3a -> ifexpression_e80b9b.gen_1\n            replace_28f41c -> ifexpression_e80b9b.gen_2\n            ifexpression_e80b9b.result -> output_85b4d5\n        } -> map_32f495.handler\n\n        instance(x: 1126, y: -197) join_0e2c44 root.Std_k98ojb.List.Concat {}\n        instance(x: 907, y: -196) emptystring_157a3f root.Std_k98ojb.List.EmptyString {}\n\n        input_5a6f7c -> characters_84d51e.string\n        search_8b3d6e -> map_32f495.search\n        replace_4e5d4a -> map_32f495.replace\n        characters_84d51e.list -> map_32f495.items\n\n        emptystring_157a3f.string -> join_0e2c44.first\n        map_32f495.output_list -> join_0e2c44.second\n        join_0e2c44.result -> output_d7f8b5\n    }\n\n    instance(x: 61, y: -10) replace_characters_f0be66 root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: 10, y: -20, name: \"input\") property(String) input_5a4d7c\n        in(x: 30, y: -80, name: \"execute\") trigger() execute_c9f6e2\n\n        out(x: 310, y: -20, name: \"output\") property(String) output_2b53a1\n\n        instance(x: 160, y: -20) tolower_e4d8c7 root.Std_k98ojb.Strings.ToLower {}\n        input_5a4d7c -> tolower_e4d8c7.input\n        execute_c9f6e2 -> tolower_e4d8c7.execute\n        tolower_e4d8c7.output -> output_2b53a1\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 354, y: -102, name: \"list\") property(List(Number)) input_list\n        in(x: 698, y: -370, name: \"execute\") trigger() execute\n\n        out(x: 1875, y: -150, name: \"product\") property(Number) product_out\n        out(x: 2041, y: -42, name: \"done\") trigger() done\n\n        instance(x: 563, y: -249) unique_numbers_3d87c3 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 852, y: -199) reduce_product_e0e7a5 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1164, y: -337) multiply_3c7a3d root.Std_k98ojb.Math.Mul {}\n\n        input_list -> unique_numbers_3d87c3.left\n        List.Empty() -> unique_numbers_3d87c3.right\n\n        unique_numbers_3d87c3.difference -> reduce_product_e0e7a5.items\n        1 -> reduce_product_e0e7a5.initial_value\n        execute -> reduce_product_e0e7a5.execute\n\n        func() {\n            in(x: -29, y: 64, name: \"acc\") property(Number) acc\n            in(x: -38, y: 137, name: \"value\") property(Number) value\n\n            out(x: 208, y: 100, name: \"result\") property(Number) result_out\n\n            acc -> multiply_3c7a3d.first\n            value -> multiply_3c7a3d.second\n            multiply_3c7a3d.result -> result_out\n        } -> reduce_product_e0e7a5.reducer\n\n        reduce_product_e0e7a5.result -> product_out\n        reduce_product_e0e7a5.done -> done\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the dissimilar elements between two lists.\") find_dissimilar_elements {\n        in(x: 100, y: -250, name: \"list_a\") property(List) list_a_3e7f6d\n        in(x: 100, y: -150, name: \"list_b\") property(List) list_b_8b4a9c\n        in(x: 100, y: -50, name: \"execute\") trigger() execute_23f1e7\n\n        out(x: 1100, y: -100, name: \"dissimilar_elements\") property(List) dissimilar_elements_e46a8b\n        out(x: 1100, y: 50, name: \"continue\") trigger() continue_9f2b7c\n\n        instance(x: 300, y: -150) difference_ab_a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: -50) difference_ba_b root.Std_k98ojb.Sets.Difference {}\n        instance(x: 600, y: -100) concat_dissimilarities root.Std_k98ojb.List.Concat {}\n\n        list_a_3e7f6d -> difference_ab_a.left\n        list_b_8b4a9c -> difference_ab_a.right\n\n        list_b_8b4a9c -> difference_ba_b.left\n        list_a_3e7f6d -> difference_ba_b.right\n\n        difference_ab_a.difference -> concat_dissimilarities.left\n        difference_ba_b.difference -> concat_dissimilarities.right\n\n        execute_23f1e7 -> difference_ab_a.execute\n        execute_23f1e7 -> difference_ba_b.execute\n\n        concat_dissimilarities.list -> dissimilar_elements_e46a8b\n        concat_dissimilarities.done -> continue_9f2b7c\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 143, y: -207, name: \"list\") property(List) input_list_5e6d8c\n        in(x: 197, y: -295, name: \"rotate_by\") property(Number) rotate_by_2b9a1e\n        in(x: 340, y: -331, name: \"execute\") trigger() execute_6f8d0c\n\n        out(x: 2733, y: -156, name: \"rotated_list\") property(List) rotated_list_f9e3a7\n        out(x: 2413, y: -256, name: \"continue\") trigger() continue_8b0f8c\n\n        instance(x: 428, y: -359) length_6b0d55 root.Std_k98ojb.List.Length {}\n        instance(x: 717, y: -287) mod_5e93a9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1043, y: -267) sub_b5d0f4 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1328, y: -232) slice_2e0c8a root.Std_k98ojb.List.Slice {}\n        instance(x: 1613, y: -175) slice_4f86d3 root.Std_k98ojb.List.Slice {}\n        instance(x: 1887, y: -129) concat_0c3a1a root.Std_k98ojb.List.Concat {}\n\n        input_list_5e6d8c -> length_6b0d55.list\n        rotate_by_2b9a1e -> mod_5e93a9.value\n        length_6b0d55.length -> mod_5e93a9.divisor\n        length_6b0d55.length -> sub_b5d0f4.first\n        mod_5e93a9.result -> sub_b5d0f4.second\n        input_list_5e6d8c -> slice_2e0c8a.list\n        sub_b5d0f4.result -> slice_2e0c8a.start\n        0 -> slice_2e0c8a.end\n        input_list_5e6d8c -> slice_4f86d3.list\n        0 -> slice_4f86d3.start\n        sub_b5d0f4.result -> slice_4f86d3.end\n        slice_2e0c8a.slice -> concat_0c3a1a.first\n        slice_4f86d3.slice -> concat_0c3a1a.second\n        concat_0c3a1a.concatenated_list -> rotated_list_f9e3a7\n        execute_6f8d0c -> continue_8b0f8c\n    }\n\n    \n\n    instance(x: -52, y: 46) rotate_list_right_b4c355 root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_of_array {\n        in(x: 10, y: -265, name: \"array\") property(List<Number>) input_3a7f4c\n        in(x: 298, y: -280, name: \"execute\") trigger() execute_7d5b1e\n\n        out(x: 1834, y: -60, name: \"out\") property(Number) out_4c5f5a\n        out(x: 1898, y: -210, name: \"continue\") trigger() continue_7d02e5\n\n        instance(x: 341, y: -26) reduce_7f4b64 root.Std_k98ojb.Iteration.Reduce {\n            handler: func() {\n                in(x: 60, y: 30, name: \"acc\") property(Number) acc_5c4a1e\n                in(x: -20, y: 30, name: \"item\") property(Number) item_f82b7f\n\n                out(x: 197, y: 62, name: \"out\") property(Number) out_b8d35c\n\n                instance(x: 42, y: -12) add_10a7e0 root.Std_k98ojb.Math.Add {}\n                acc_5c4a1e -> add_10a7e0.first\n                item_f82b7f -> add_10a7e0.second\n                add_10a7e0.result -> out_b8d35c\n            }\n        }\n        0 -> reduce_7f4b64.accumulator\n        input_3a7f4c -> reduce_7f4b64.items\n        execute_7d5b1e -> reduce_7f4b64.execute\n        reduce_7f4b64.result -> out_4c5f5a\n        reduce_7f4b64.done -> continue_7d02e5\n    }\n\n    \n\n    instance(x: -389, y: 14) sum_of_array_25792a root.main.sum_of_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 20, y: -160, name: \"input\") property(Number) input_4f7a5d\n        in(x: 193, y: -188, name: \"execute\") trigger() execute_c8c1e5\n\n        out(x: 1742, y: -160, name: \"out\") property(Bool) out_1f6b6a\n        out(x: 1936, y: -40, name: \"continue\") trigger() continue_e78e3d\n\n        instance(x: 542, y: -261) expression_22392c root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i > input)\"\n        }\n        instance(x: 540, y: -67) expression_92d5a1 root.Std_k98ojb.Math.Expression {\n            expression: \"(input % i == 0)\"\n        }\n        instance(x: 735, y: -160) if_f8f3e4 root.Std_k98ojb.Std.If {}\n        instance(x: 898, y: -252) if_1a2d2c root.Std_k98ojb.Std.If {}\n        instance(x: 1179, y: -60) and_b3e44f root.Std_k98ojb.Logic.And {}\n        instance(x: 1342, y: -351) if_8d7a4c root.Std_k98ojb.Std.If {}\n        instance(x: 1004, y: -69) add_2f1b4e root.Std_k98ojb.Math.Add {}\n        instance(x: 1289, y: -351) not_74a9d8 root.Std_k98ojb.Logic.Not {}\n        input_4f7a5d -> if_f8f3e4.value\n        execute_c8c1e5 -> if_f8f3e4.execute\n        2 -> expression_22392c.gen_0\n        input_4f7a5d -> expression_22392c.gen_1\n        2 -> expression_92d5a1.gen_0\n        input_4f7a5d -> expression_92d5a1.gen_1\n        if_f8f3e4.then -> add_2f1b4e.first\n        1 -> add_2f1b4e.second\n        add_2f1b4e.result -> expression_92d5a1.i\n        add_2f1b4e.result -> if_f8f3e4.value\n        if_f8f3e4.else -> continue_e78e3d\n        1 == input_4f7a5d -> if_1a2d2c.predicate\n        expression_92d5a1.result -> and_b3e44f.left\n        expression_22392c.result -> and_b3e44f.right\n        and_b3e44f.result -> not_74a9d8.a\n        if_f8f3e4.then -> if_1a2d2c.execute\n        0 == input_4f7a5d -> if_8d7a4c.predicate\n        if_1a2d2c.then -> continue_e78e3d\n        not_74a9d8.result -> out_1f6b6a\n        if_8d7a4c.else -> continue_e78e3d\n        if_8d7a4c.then -> if_f8f3e4.execute\n    }\n\n    \n\n    instance(x: -205, y: 222) is_prime_6b1a9d root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5d7f\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2c4b3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6f8d9a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1c4b3e\n\n        instance(x: 10, y: -140) expression_1c4b3e root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3e5d7f -> expression_1c4b3e.gen_0\n        b_8c4a9b -> expression_1c4b3e.gen_1\n        execute_2c4b3e -> expression_1c4b3e.execute\n        expression_1c4b3e.result -> out_6f8d9a\n        expression_1c4b3e.done -> continue_1c4b3e\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4a5d root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4a5d.value\n        11 -> modulo_7c4a5d.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4a5d.result -> equal_6f3e4c.left\n        0 -> equal_6f3e4c.right\n\n        instance(x: 20, y: 40) if_123abc root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_123abc.execute\n        equal_6f3e4c.result -> if_123abc.predicate\n\n        if_123abc.value -> out_f3db9f\n        if_123abc.then -> continue_8ba06b\n        if_123abc.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3d4c\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9f5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3d\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_6b8a9f\n\n        instance(x: 150, y: -20) replace_3e4a5b root.Std_k98ojb.Strings.Replace {}\n        input_7a3d4c -> replace_3e4a5b.input\n        search_8b9f5e -> replace_3e4a5b.search\n        replace_2c7a3d -> replace_3e4a5b.replace\n        replace_3e4a5b.output -> output_6b8a9f\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e6f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 74, name: \"continue\") trigger() continue_8d9a2b\n\n        instance(x: 160, y: -122) unique_numbers_7f3e2d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 310, y: -122) reduce_product_5c4f6a root.Std_k98ojb.Iteration.Reduce {}\n        numbers_3c7d6a -> unique_numbers_7f3e2d.left\n        numbers_3c7d6a -> unique_numbers_7f3e2d.right\n        unique_numbers_7f3e2d.difference -> reduce_product_5c4f6a.items\n        func() {\n            in(x: 10, y: -10, name: \"accumulator\") property(Number) accumulator_8b9e6f\n            in(x: 10, y: 74, name: \"current_value\") property(Number) current_value_2d5c3a\n\n            out(x: 10, y: 158, name: \"result\") property(Number) result_2b9e6f\n\n            instance(x: 160, y: -10) mul_7f4e2d root.Std_k98ojb.Math.Mul {}\n            accumulator_8b9e6f -> mul_7f4e2d.first\n            current_value_2d5c3a -> mul_7f4e2d.second\n            1 -> result_2b9e6f\n        } -> reduce_product_5c4f6a.handler\n        execute_2b5e6f -> unique_numbers_7f3e2d.execute\n        unique_numbers_7f3e2d.done -> reduce_product_5c4f6a.execute\n        1 -> reduce_product_5c4f6a.initial_value\n        reduce_product_5c4f6a.result -> product_4b53c7\n        reduce_product_5c4f6a.done -> continue_8d9a2b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7f\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_2b4a4e\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6c3d7f\n\n        out(x: 1500, y: -189, name: \"out\") property(List) out_2b4a4e\n        out(x: 1500, y: -122, name: \"continue\") trigger() continue_6c3d7f\n\n        instance(x: 200, y: -89) difference_1 root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7f -> difference_1.left\n        list2_2b4a4e -> difference_1.right\n        instance(x: 200, y: -256) difference_2 root.Std_k98ojb.Sets.Difference {}\n        list2_2b4a4e -> difference_2.left\n        list1_4c3d7f -> difference_2.right\n        instance(x: 400, y: -172) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n        concat_1.concatenatedList -> out_2b4a4e\n        execute_6c3d7f -> continue_6c3d7f\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b4e1f\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1560, y: -198, name: \"rotated_list\") property(List) output_rotated_list_2b4e1f\n        out(x: 1560, y: -140, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 200, y: -80) length_9fba8c root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -80) modulo_6e1d7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 700, y: -80) sub_2f9d09 root.Std_k98ojb.Math.Sub {}\n        instance(x: 950, y: -80) slice_start_6e1d7a root.Std_k98ojb.List.Slice {}\n        instance(x: 950, y: -30) slice_end_2f9d09 root.Std_k98ojb.List.Slice {}\n        instance(x: 1200, y: -55) concat_6e1d7a root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_9fba8c.list\n        input_rotate_by_2b4e1f -> modulo_6e1d7a.value\n        length_9fba8c.length -> modulo_6e1d7a.divisor\n        length_9fba8c.length -> sub_2f9d09.first\n        modulo_6e1d7a.result -> sub_2f9d09.second\n        input_list_7c3a4d -> slice_start_6e1d7a.list\n        sub_2f9d09.result -> slice_start_6e1d7a.start\n        length_9fba8c.length -> slice_start_6e1d7a.end\n        input_list_7c3a4d -> slice_end_2f9d09.list\n        0 -> slice_end_2f9d09.start\n        sub_2f9d09.result -> slice_end_2f9d09.end\n        slice_start_6e1d7a.slice -> concat_6e1d7a.first\n        slice_end_2f9d09.slice -> concat_6e1d7a.second\n        execute_7c3a4d -> length_9fba8c.execute\n        concat_6e1d7a.concatenated -> output_rotated_list_2b4e1f\n        concat_6e1d7a.execute -> continue_7c3a4d\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -256, name: \"array\") property(List<Number>) array_7f3c4a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_7b5d0e\n\n        out(x: 10, y: 206, name: \"sum\") property(Number) sum_7b5d0e\n        out(x: 10, y: 243, name: \"continue\") trigger() continue_7b5d0e\n\n        instance(x: 10, y: -98) reduce_6f3c4a root.Std_k98ojb.Iteration.Reduce {}\n        func(doc: \"adds two numbers.\") add_numbers {\n            in(x: 20, y: -170, name: \"first\") property(Number) first_5d0e\n            in(x: 20, y: -134, name: \"second\") property(Number) second_5d0e\n\n            out(x: 20, y: 168, name: \"result\") property(Number) result_5d0e\n\n            instance(x: 20, y: -79) add_5d0e root.Std_k98ojb.Math.Add {}\n            first_5d0e -> add_5d0e.first\n            second_5d0e -> add_5d0e.second\n            add_5d0e.result -> result_5d0e\n        } -> reduce_6f3c4a.handler\n        0 -> reduce_6f3c4a.initial_value\n        array_7f3c4a -> reduce_6f3c4a.items\n        execute_7b5d0e -> reduce_6f3c4a.execute\n        reduce_6f3c4a.result -> sum_7b5d0e\n        reduce_6f3c4a.done -> continue_7b5d0e\n    }\n\n    \n\n    instance(x: -189, y: 222) sum_array_f0be66 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c4e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_7f3a4d\n        out(x: 10, y: 50, name: \"continue\") trigger() continue_8b6c4e\n\n        instance(x: 10, y: -210) ifExpression_9fba8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input <= 1 ? false : input == 2 || input % 2 != 0\"\n        }\n        execute_8b6c4e -> ifExpression_9fba8c.execute\n        input_7f3a4d -> ifExpression_9fba8c.input\n\n        instance(x: 10, y: -150) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        execute_8b6c4e -> for_8cb3f6.reset\n        input_7f3a4d -> for_8cb3f6.items\n\n        instance(x: 10, y: -100) ifExpression_b720d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % item == 0\"\n        }\n        for_8cb3f6.onItem -> ifExpression_b720d7.execute\n        input_7f3a4d -> ifExpression_b720d7.input\n        for_8cb3f6.item -> ifExpression_b720d7.item\n\n        instance(x: 10, y: -50) not_80a119 root.Std_k98ojb.Logic.Not {}\n        ifExpression_b720d7.value -> not_80a119.input\n        not_80a119.output -> is_prime_7f3a4d\n\n        instance(x: 10, y: -5) if_07b8c7 root.Std_k98ojb.Std.If {}\n        for_8cb3f6.done -> if_07b8c7.execute\n        not_80a119.output -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_8b6c4e\n\n        instance(x: 10, y: 50) and_80a119 root.Std_k98ojb.Logic.And {}\n        for_8cb3f6.onItem -> and_80a119.execute\n        ifExpression_b720d7.value -> and_80a119.left\n        not_80a119.output -> and_80a119.right\n\n        instance(x: 10, y: 100) if_e19a62 root.Std_k98ojb.Std.If {}\n        and_80a119.output -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_8b6c4e\n\n        instance(x: 10, y: 150) add_b4554f root.Std_k98ojb.Math.Add {}\n        for_8cb3f6.index -> add_b4554f.first\n        2 -> add_b4554f.second\n        add_b4554f.result -> ifExpression_b720d7.item\n\n        instance(x: 10, y: 200) lessThan_9fba8c root.Std_k98ojb.Math.LessThan {}\n        for_8cb3f6.index -> lessThan_9fba8c.left\n        input_7f3a4d -> lessThan_9fba8c.right\n\n        instance(x: 10, y: 250) ifExpression_b720d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < Math.sqrt(input)\"\n        }\n        for_8cb3f6.onItem -> ifExpression_b720d7.execute\n        lessThan_9fba8c.result -> ifExpression_b720d7.predicate\n\n        instance(x: 10, y: 300) next_8b6c4e root.Std_k98ojb.Std.For {}\n        for_8cb3f6.onItem -> next_8b6c4e.execute\n        ifExpression_b720d7.then -> next_8b6c4e.next\n\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 354, y: -53, name: \"a\") property(Number) a_27c03d\n        in(x: 161, y: -211, name: \"b\") property(Number) b_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) mul_038fce root.Std_k98ojb.Math.Mul {}\n        instance(x: 933, y: 25) less_than_zero_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_27c03d -> mul_038fce.first\n        b_27b8c3 -> mul_038fce.second\n        mul_038fce.result -> less_than_zero_f11fda.left\n        0 -> less_than_zero_f11fda.right\n\n        less_than_zero_f11fda.result -> out_f3db9f\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -247, y: 53, name: \"input\") property(Number) input_f5c03d\n        in(x: -247, y: 119, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 628, y: 53, name: \"result\") property(Bool) result_3a10e5\n        out(x: 628, y: 119, name: \"continue\") trigger() continue_4d7f5b\n\n        instance(x: -247, y: 203) modulo_d4c6eb root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_d4c6eb.value\n        11 -> modulo_d4c6eb.divisor\n        instance(x: -247, y: 337) equal_2f4a1e root.Std_k98ojb.Logic.Equal {}\n        modulo_d4c6eb.result -> equal_2f4a1e.left\n        0 -> equal_2f4a1e.right\n        execute_27b8c3 -> modulo_d4c6eb.execute\n        equal_2f4a1e.result -> result_3a10e5\n        execute_27b8c3 -> continue_4d7f5b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 120, y: -140, name: \"input\") property(String) input_7a3d5f\n        in(x: 120, y: -80, name: \"search\") property(String) search_f9b6e7\n        in(x: 120, y: -20, name: \"replace\") property(String) replace_b4c1a3\n        in(x: 120, y: 40, name: \"execute\") trigger() execute_8d5f9b\n\n        out(x: 1160, y: -100, name: \"output\") property(String) output_7e4f7a\n        out(x: 1160, y: 20, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 320, y: -100) replace_5c9d18 root.Std_k98ojb.Strings.Replace {}\n        input_7a3d5f -> replace_5c9d18.input\n        search_f9b6e7 -> replace_5c9d18.search\n        replace_b4c1a3 -> replace_5c9d18.replace\n        execute_8d5f9b -> replace_5c9d18.execute\n        replace_5c9d18.output -> output_7e4f7a\n        replace_5c9d18.done -> continue_8ba06b\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 103, y: -465, name: \"input\") property(String) input_2a7d4e\n    in(x: 121, y: -363, name: \"execute\") trigger() execute_9c8f1b\n\n    out(x: 1012, y: -454, name: \"output\") property(String) output_8a7d4e\n    out(x: 1024, y: -363, name: \"continue\") trigger() continue_9c8f1b\n\n    instance(x: 512, y: -459) tolower_7c2d1f root.Std_k98ojb.Strings.ToLower {}\n    input_2a7d4e -> tolower_7c2d1f.input\n    execute_9c8f1b -> tolower_7c2d1f.execute\n    tolower_7c2d1f.output -> output_8a7d4e\n    tolower_7c2d1f.done -> continue_9c8f1b\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 340, y: -215, name: \"numbers\") property(List<Number>) numbers_7f6a5d\n        in(x: 349, y: -168, name: \"execute\") trigger() execute_f2e6c4\n\n        out(x: 1702, y: -149, name: \"product\") property(Number) product_2b5a5b\n        out(x: 1737, y: -91, name: \"continue\") trigger() continue_e8f6d7\n\n        instance(x: 537, y: -204) intersection_f7e6c6 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 706, y: -211) reduce_7783a5 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 896, y: -414) difference_bf20d3 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 536, y: -417) unique_2e0c6a root.Std_k98ojb.List.Flatten {}\n        instance(x: 1077, y: -351) mul_d7f8d8 root.Std_k98ojb.Math.Mul {}\n        numbers_7f6a5d -> intersection_f7e6c6.left\n        numbers_7f6a5d -> difference_bf20d3.left\n        execute_f2e6c4 -> unique_2e0c6a.execute\n        numbers_7f6a5d -> unique_2e0c6a.list\n        numbers_7f6a5d -> intersection_f7e6c6.right\n        difference_bf20d3.left -> reduce_7783a5.items\n        1 -> reduce_7783a5.initial_value\n        unique_2e0c6a.flattened_list -> difference_bf20d3.right\n        intersection_f7e6c6.intersect -> difference_bf20d3.left\n        func() {\n            in(x: -14, y: 18, name: \"current\") property(Number) current_59b6a5\n            in(x: -14, y: 59, name: \"accumulated\") property(Number) accumulated_2c0b7e\n\n            out(x: 368, y: 41, name: \"out\") property(Number) out_1f3d5a\n\n            instance(x: 167, y: 39) mul_402b1a root.Std_k98ojb.Math.Mul {}\n            current_59b6a5 -> mul_402b1a.first\n            accumulated_2c0b7e -> mul_402b1a.second\n            mul_402b1a.result -> out_1f3d5a\n        } -> reduce_7783a5.reducer\n        unique_2e0c6a.flattened_list -> intersection_f7e6c6.left\n        difference_bf20d3.difference -> reduce_7783a5.items\n        numbers_7f6a5d -> unique_2e0c6a.list\n        execute_f2e6c4 -> reduce_7783a5.execute\n        reduce_7783a5.result -> product_2b5a5b\n        execute_f2e6c4 -> continue_e8f6d7\n    }\n\n    \n\n    instance(x: -109, y: 161) product_of_unique_numbers_470f7b root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: 263, y: -154, name: \"list1\") property(List) list1_07e0a5\n        in(x: 268, y: -90, name: \"list2\") property(List) list2_6d3c2f\n        in(x: 266, y: -4, name: \"execute\") trigger() execute_1b7e5a\n\n        out(x: 1648, y: -190, name: \"out\") property(List) out_d75d3c\n        out(x: 1648, y: -52, name: \"continue\") trigger() continue_36f3e6\n\n        instance(x: 532, y: -259) difference_0a81c4 root.Std_k98ojb.Sets.Difference {}\n        list1_07e0a5 -> difference_0a81c4.left\n        list2_6d3c2f -> difference_0a81c4.right\n        instance(x: 532, y: -103) difference_9387b6 root.Std_k98ojb.Sets.Difference {}\n        list2_6d3c2f -> difference_9387b6.left\n        list1_07e0a5 -> difference_9387b6.right\n        instance(x: 943, y: -182) concat_1b1cbe root.Std_k98ojb.List.Concat {}\n        difference_0a81c4.difference -> concat_1b1cbe.left\n        difference_9387b6.difference -> concat_1b1cbe.right\n        concat_1b1cbe.list -> out_d75d3c\n        execute_1b7e5a -> continue_36f3e6\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 216, y: -304, name: \"list\") property(List) input_list_75d6f5\n        in(x: 218, y: -393, name: \"rotate_by\") property(Number) rotate_by_d7a7c8\n        in(x: 216, y: -480, name: \"execute\") trigger() execute_2b9f5d\n\n        out(x: 1265, y: -312, name: \"rotated_list\") property(List) rotated_list_f7a7c8\n        out(x: 1265, y: -402, name: \"continue\") trigger() continue_9b4b4d\n\n        instance(x: 474, y: -344) length_d9e20b root.Std_k98ojb.List.Length {}\n        instance(x: 685, y: -341) modulo_f7a7c8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 921, y: -342) sub_304fbb root.Std_k98ojb.Math.Sub {}\n        instance(x: 1156, y: -341) slice_end_7a7c8d root.Std_k98ojb.List.Slice {}\n        instance(x: 1156, y: -230) slice_start_7a7c8e root.Std_k98ojb.List.Slice {}\n        instance(x: 1156, y: -451) concat_7a7c8f root.Std_k98ojb.List.Concat {}\n\n        input_list_75d6f5 -> length_d9e20b.list\n        rotate_by_d7a7c8 -> modulo_f7a7c8.value\n        length_d9e20b.length -> modulo_f7a7c8.divisor\n        length_d9e20b.length -> sub_304fbb.first\n        modulo_f7a7c8.result -> sub_304fbb.second\n        input_list_75d6f5 -> slice_end_7a7c8d.list\n        0 -> slice_end_7a7c8d.start\n        sub_304fbb.result -> slice_end_7a7c8d.end\n        input_list_75d6f5 -> slice_start_7a7c8e.list\n        sub_304fbb.result -> slice_start_7a7c8e.start\n        length_d9e20b.length -> slice_start_7a7c8e.end\n        slice_end_7a7c8d.slice -> concat_7a7c8f.first\n        slice_start_7a7c8e.slice -> concat_7a7c8f.second\n        concat_7a7c8f.concatenated_list -> rotated_list_f7a7c8\n        execute_2b9f5d -> continue_9b4b4d\n    }\n\n    \n\n    instance(x: -136, y: 10) rotate_list_right_c9e20b root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 30, y: -20, name: \"array\") property(List<Number>) array_1a5d4c\n        in(x: 60, y: -80, name: \"execute\") trigger() execute_eb7f9e\n\n        out(x: 970, y: -30, name: \"sum\") property(Number) sum_f2d2c1\n        out(x: 1040, y: -110, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 250, y: -170) reduce_9f3a2e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 470, y: -170) add_7c8d0c root.Std_k98ojb.Math.Add {}\n\n        func() {\n            in(x: 60, y: 30, name: \"accumulator\") property(Number) accumulator_e2e2f5\n            in(x: 60, y: 100, name: \"current_value\") property(Number) current_value_7c8d0c\n\n            out(x: 490, y: -130, name: \"result\") property(Number) result_e2e2f5\n            accumulator_e2e2f5 -> add_7c8d0c.first\n            current_value_7c8d0c -> add_7c8d0c.second\n            add_7c8d0c.result -> result_e2e2f5\n        } -> reduce_9f3a2e.reducer\n\n        0 -> reduce_9f3a2e.accumulator\n        array_1a5d4c -> reduce_9f3a2e.items\n        execute_eb7f9e -> reduce_9f3a2e.execute\n        reduce_9f3a2e.result -> sum_f2d2c1\n        reduce_9f3a2e.done -> continue_8ba06b\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -210, name: \"input\") property(Number) input_7f6a2d\n        in(x: 598, y: -210, name: \"execute\") trigger() execute_3e9b0c\n\n        out(x: 1642, y: -120, name: \"out\") property(Bool) out_b7a2f7\n        out(x: 1850, y: -120, name: \"continue\") trigger() continue_3d9b8c\n\n        instance(x: 764, y: -185) generaterange_7152ca root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1026, y: -150) for_3a1e2f root.Std_k98ojb.Std.For {}\n        instance(x: 1294, y: -175) modulo_45d5c2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1462, y: -100) equal_3e2a1d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1630, y: -75) if_3f9c0a root.Std_k98ojb.Std.If {}\n        instance(x: 1462, y: -225) lessthanorequal_eb3e8d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1798, y: -200) if_2c8a7f root.Std_k98ojb.Std.If {}\n\n        input_7f6a2d -> generaterange_7152ca.to\n        2 -> generaterange_7152ca.from\n        generaterange_7152ca.list -> for_3a1e2f.items\n        execute_3e9b0c -> for_3a1e2f.reset\n        input_7f6a2d -> modulo_45d5c2.value\n        for_3a1e2f.item -> modulo_45d5c2.divisor\n        0 -> equal_3e2a1d.right\n        modulo_45d5c2.result -> equal_3e2a1d.left\n        equal_3e2a1d.result -> if_3f9c0a.predicate\n        for_3a1e2f.onItem -> if_3f9c0a.execute\n        input_7f6a2d -> lessthanorequal_eb3e8d.left\n        for_3a1e2f.item -> lessthanorequal_eb3e8d.right\n        lessthanorequal_eb3e8d.result -> if_2c8a7f.predicate\n        for_3a1e2f.onItem -> if_2c8a7f.execute\n\n        false -> out_b7a2f7\n        true -> if_2c8a7f.then\n        continue_3d9b8c -> if_2c8a7f.else\n        for_3a1e2f.done -> if_2c8a7f.execute\n\n        false -> if_3f9c0a.then\n        true -> if_3f9c0a.value\n        continue_3d9b8c -> if_3f9c0a.else\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") has_opposite_signs {\n        in(x: 10, y: -5, name: \"a\") property(Number) a_4e7d6c\n        in(x: 20, y: -5, name: \"b\") property(Number) b_e9831a\n        in(x: 15, y: -15, name: \"execute\") trigger() execute_7f7c53\n\n        out(x: 445, y: -5, name: \"result\") property(Bool) result_f2b6ca\n\n        instance(x: 150, y: -50) mul_8e9cda root.Std_k98ojb.Math.Mul {}\n        a_4e7d6c -> mul_8e9cda.first\n        b_e9831a -> mul_8e9cda.second\n\n        instance(x: 290, y: -50) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_8e9cda.result -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n\n        instance(x: 425, y: -50) not_d3a6b4 root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_f11fda.result -> not_d3a6b4.input\n        not_d3a6b4.output -> result_f2b6ca\n\n        execute_7f7c53 -> mul_8e9cda.execute\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -30, name: \"input\") property(Number) input_e4c5e7\n        in(x: -20, y: 90, name: \"execute\") trigger() execute_c8a6d4\n\n        out(x: 1000, y: -30, name: \"out\") property(Bool) out_1f0bba\n        out(x: 1000, y: 90, name: \"continue\") trigger() continue_7956fb\n\n        instance(x: 240, y: -30) modulo_f9d8e4 Std_k98ojb.Math.Modulo {\n            divisor: 11\n        }\n        input_e4c5e7 -> modulo_f9d8e4.value\n        execute_c8a6d4 -> modulo_f9d8e4.execute\n\n        instance(x: 600, y: -30) equal_2a6b3b Std_k98ojb.Logic.Equal {}\n        0 -> equal_2a6b3b.right\n        modulo_f9d8e4.result -> equal_2a6b3b.left\n\n        instance(x: 750, y: -30) if_e19a62 Std_k98ojb.Std.If {}\n        equal_2a6b3b.result -> if_e19a62.predicate\n        execute_c8a6d4 -> if_e19a62.execute\n\n        instance(x: 900, y: -75) true_d0fd24 Std_k98ojb.Logic.Not {}\n        true_d0fd24.result -> out_1f0bba\n        if_e19a62.then -> continue_7956fb\n\n        instance(x: 900, y: 30) false_d0fd24 Std_k98ojb.Logic.Not {}\n        false_d0fd24.result -> out_1f0bba\n        if_e19a62.else -> continue_7956fb\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 30, y: -214, name: \"input\") property(String) input_5a6f7c\n        in(x: 30, y: -169, name: \"search\") property(String) search_8b6d7e\n        in(x: 30, y: -124, name: \"replace\") property(String) replace_31a5ee\n        in(x: 26, y: -79, name: \"execute\") trigger() execute_e4c5ce\n\n        out(x: 1815, y: -10, name: \"output\") property(String) output_89e2f7\n\n        instance(x: 230, y: -60) replace_a1d4ff root.Std_k98ojb.Strings.Replace {}\n        input_5a6f7c -> replace_a1d4ff.input\n        search_8b6d7e -> replace_a1d4ff.search\n        replace_31a5ee -> replace_a1d4ff.replace\n        execute_e4c5ce -> replace_a1d4ff.execute\n        replace_a1d4ff.output -> output_89e2f7\n    }\n\n    \n\n    instance(x: 60, y: 212) replace_characters_3a2b0e root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: 10, y: -20, name: \"input\") property(String) input_5a4d7c\n        in(x: 30, y: -80, name: \"execute\") trigger() execute_c9f6e2\n\n        out(x: 310, y: -20, name: \"output\") property(String) output_2b815a\n        out(x: 330, y: -80, name: \"continue\") trigger() continue_7c4d9f\n\n        instance(x: 160, y: -20) tolower_eab4e4 root.Std_k98ojb.Strings.ToLower {}\n        input_5a4d7c -> tolower_eab4e4.input\n        execute_c9f6e2 -> tolower_eab4e4.execute\n        tolower_eab4e4.output -> output_2b815a\n        tolower_eab4e4.done -> continue_7c4d9f\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 354, y: -102, name: \"list\") property(List(Number)) input_list\n        in(x: 698, y: -373, name: \"execute\") trigger() execute\n\n        out(x: 1819, y: -25, name: \"product\") property(Number) product_out\n        out(x: 1840, y: 136, name: \"done\") trigger() done\n\n        instance(x: 472, y: -179) unique_6d2dfc root.Std_k98ojb.Sets.Difference {}\n        instance(x: 579, y: -70) reduce_6143a2 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 583, y: 50) mul_f1f8df root.Std_k98ojb.Math.Mul {}\n\n        input_list -> unique_6d2dfc.left\n        List.Empty() -> unique_6d2dfc.right\n        unique_6d2dfc.difference -> reduce_6143a2.items\n\n        1 -> mul_f1f8df.first\n        func() {\n            in(x: -57, y: -109, name: \"value\") property(Number) value_6eac2a\n            in(x: -51, y: 34, name: \"acc\") property(Number) acc_1c84b0\n\n            out(x: 372, y: -37, name: \"result\") property(Number) result_a9d561\n\n            value_6eac2a -> mul_f1f8df.second\n            acc_1c84b0 -> mul_f1f8df.first\n            mul_f1f8df.result -> result_a9d561\n        } -> reduce_6143a2.handler\n\n        execute -> unique_6d2dfc.execute\n        unique_6d2dfc.done -> reduce_6143a2.reset\n        reduce_6143a2.result -> product_out\n        reduce_6143a2.done -> done\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the dissimilar elements between two lists.\") find_dissimilar_elements {\n        in(x: 100, y: -250, name: \"list_a\") property(List) list_a_3d7f6c\n        in(x: 100, y: -150, name: \"list_b\") property(List) list_b_8e4a9b\n        in(x: 100, y: -50, name: \"execute\") trigger() execute_e2d3f1\n\n        out(x: 700, y: -250, name: \"dissimilar_elements\") property(List) dissimilar_elements_6a2b8c\n        out(x: 700, y: -150, name: \"continue\") trigger() continue_34e9f1\n\n        instance(x: 200, y: -100) difference_ab_aebd root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: -200) difference_ba_5377ab root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: -150) concat_differences_f2c6d5 root.Std_k98ojb.List.Concat {}\n\n        list_a_3d7f6c -> difference_ab_aebd.left\n        list_b_8e4a9b -> difference_ab_aebd.right\n\n        list_b_8e4a9b -> difference_ba_5377ab.left\n        list_a_3d7f6c -> difference_ba_5377ab.right\n\n        difference_ab_aebd.difference -> concat_differences_f2c6d5.list1\n        difference_ba_5377ab.difference -> concat_differences_f2c6d5.list2\n\n        concat_differences_f2c6d5.concatenatedList -> dissimilar_elements_6a2b8c\n\n        execute_e2d3f1 -> continue_34e9f1\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 143, y: -207, name: \"list\") property(List) input_list_56f5a5\n        in(x: 189, y: -312, name: \"rotate_by\") property(Number) input_rotate_by_2b94d2\n        in(x: 126, y: -407, name: \"execute\") trigger() execute_1c51e0\n\n        out(x: 988, y: -315, name: \"rotated_list\") property(List) rotated_list_c0b1f2\n        out(x: 1068, y: -474, name: \"done\") trigger() done_7e3e4d\n\n        instance(x: 402, y: -459) length_ea3c47 root.Std_k98ojb.List.Length {}\n        instance(x: 561, y: -373) mod_cad0aa root.Std_k98ojb.Math.Modulo {}\n        instance(x: 713, y: -277) sub_4ab7e0 root.Std_k98ojb.Math.Sub {}\n        instance(x: 865, y: -185) slice_2e8d6a root.Std_k98ojb.List.Slice {}\n        instance(x: 869, y: -37) slice_a45f0c root.Std_k98ojb.List.Slice {}\n        instance(x: 1012, y: -112) concat_8e2dca root.Std_k98ojb.List.Concat {}\n\n        input_list_56f5a5 -> length_ea3c47.list\n        execute_1c51e0 -> length_ea3c47.execute\n        input_rotate_by_2b94d2 -> mod_cad0aa.value\n        length_ea3c47.length -> mod_cad0aa.divisor\n        length_ea3c47.length -> sub_4ab7e0.first\n        mod_cad0aa.result -> sub_4ab7e0.second\n        input_list_56f5a5 -> slice_2e8d6a.list\n        0 -> slice_2e8d6a.start\n        sub_4ab7e0.result -> slice_2e8d6a.end\n        execute_1c51e0 -> slice_2e8d6a.execute\n        input_list_56f5a5 -> slice_a45f0c.list\n        sub_4ab7e0.result -> slice_a45f0c.start\n        length_ea3c47.length -> slice_a45f0c.end\n        execute_1c51e0 -> slice_a45f0c.execute\n        slice_a45f0c.slice -> concat_8e2dca.first\n        slice_2e8d6a.slice -> concat_8e2dca.second\n        execute_1c51e0 -> concat_8e2dca.execute\n        concat_8e2dca.concatenated -> rotated_list_c0b1f2\n        done_7e3e4d -> concat_8e2dca.done\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_of_array {\n        in(x: 10, y: -265, name: \"array\") property(List<Number>) input_3a7f4c\n        in(x: 298, y: -280, name: \"execute\") trigger() execute_7e4b1d\n\n        out(x: 1148, y: -65, name: \"result\") property(Number) result_d3a9f1\n        out(x: 1368, y: 52, name: \"continue\") trigger() continue_075c96\n\n        instance(x: 615, y: -250) reduce_4b9be5 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 360, y: -67, name: \"accumulator\") property(Number) accumulator_23e8d4\n            in(x: 361, y: 45, name: \"currentValue\") property(Number) currentValue_4f6a9e\n\n            out(x: 740, y: -10, name: \"out\") property(Number) out_d2b9c8\n\n            instance(x: 553, y: -72) add_2d2bda root.Std_k98ojb.Math.Add {}\n            accumulator_23e8d4 -> add_2d2bda.first\n            currentValue_4f6a9e -> add_2d2bda.second\n            add_2d2bda.result -> out_d2b9c8\n        } -> reduce_4b9be5.handler\n        0 -> reduce_4b9be5.initial_value\n        input_3a7f4c -> reduce_4b9be5.items\n        execute_7e4b1d -> reduce_4b9be5.execute\n        reduce_4b9be5.result -> result_d3a9f1\n        reduce_4b9be5.done -> continue_075c96\n    }\n\n    \n\n    instance(x: -28, y: 26) sum_of_array_2ad4e7 root.main.sum_of_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 20, y: -160, name: \"input\") property(Number) input_4f7a5d\n        in(x: 193, y: -188, name: \"execute\") trigger() execute_c3c10b\n\n        out(x: 1742, y: -16, name: \"out\") property(Bool) out_1d9a0e\n        out(x: 1852, y: 104, name: \"continue\") trigger() continue_ea3bba\n\n        instance(x: 373, y: -136) for_c8c5b9 root.Std_k98ojb.Std.For {}\n        instance(x: 1129, y: -180) if_41d4db root.Std_k98ojb.Std.If {}\n        instance(x: 771, y: -369) generaterange_b5f2c4 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1540, y: -335) not_82a0d0 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1367, y: -315) expression_35e74c root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        2 -> generaterange_b5f2c4.from\n        input_4f7a5d -> generaterange_b5f2c4.to\n        generaterange_b5f2c4.list -> for_c8c5b9.items\n        for_c8c5b9.item -> expression_35e74c.gen_1\n        input_4f7a5d -> expression_35e74c.gen_0\n        expression_35e74c.result -> not_82a0d0.input\n        not_82a0d0.output -> if_41d4db.predicate\n        for_c8c5b9.onItem -> if_41d4db.execute\n        if_41d4db.else -> for_c8c5b9.next\n        if_41d4db.then -> continue_ea3bba\n        for_c8c5b9.done -> continue_ea3bba\n        execute_c3c10b -> for_c8c5b9.reset\n        if_41d4db.value -> out_1d9a0e\n    }\n\n    \n\n    instance(x: -267, y: 248) is_prime_0fcb64 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5d7f\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2c4b3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6f8d9a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1c4b3e\n\n        instance(x: 10, y: -140) expression_1c4b3e root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3e5d7f -> expression_1c4b3e.gen_0\n        b_8c4a9b -> expression_1c4b3e.gen_1\n        execute_2c4b3e -> expression_1c4b3e.execute\n        expression_1c4b3e.result -> out_6f8d9a\n        expression_1c4b3e.done -> continue_1c4b3e\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4a5d root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4a5d.value\n        11 -> modulo_7c4a5d.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4a5d.result -> equal_6f3e4c.left\n        0 -> equal_6f3e4c.right\n\n        instance(x: 20, y: 40) if_123abc root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_123abc.execute\n        equal_6f3e4c.result -> if_123abc.predicate\n\n        if_123abc.value -> out_f3db9f\n        if_123abc.then -> continue_8ba06b\n        if_123abc.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3f4d\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9c5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3f\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_6d8b9c\n\n        instance(x: 150, y: -20) replace_3e2b1d root.Std_k98ojb.Strings.Replace {}\n        input_7a3f4d -> replace_3e2b1d.input\n        search_8b9c5e -> replace_3e2b1d.search\n        replace_2c7a3f -> replace_3e2b1d.replace\n        replace_3e2b1d.output -> output_6d8b9c\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e6f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 74, name: \"continue\") trigger() continue_8d9a2b\n\n        instance(x: 164, y: -122) sets_intersection_1e4f1a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 305, y: -71) list_empty_2c3d1d root.Std_k98ojb.List.Empty {}\n        instance(x: 461, y: -122) sets_difference_2f4a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: 607, y: -122) iteration_reduce_3c5d1f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 10, y: 10, name: \"accumulator\") property(Number) accumulator_4a5d1e\n            in(x: 10, y: 74, name: \"current\") property(Number) current_2b5e6f\n\n            out(x: 10, y: 138, name: \"result\") property(Number) result_8d9a2b\n\n            instance(x: 164, y: -122) math_mul_7c7d6a root.Std_k98ojb.Math.Mul {}\n            accumulator_4a5d1e -> math_mul_7c7d6a.first\n            current_2b5e6f -> math_mul_7c7d6a.second\n            math_mul_7c7d6a.result -> result_8d9a2b\n        } -> iteration_reduce_3c5d1f.reducer\n        1 -> iteration_reduce_3c5d1f.initialValue\n        numbers_3c7d6a -> sets_intersection_1e4f1a.left\n        list_empty_2c3d1d.list -> sets_intersection_1e4f1a.right\n        numbers_3c7d6a -> sets_difference_2f4a1e.left\n        sets_intersection_1e4f1a.intersection -> sets_difference_2f4a1e.right\n        sets_difference_2f4a1e.difference -> iteration_reduce_3c5d1f.items\n        execute_2b5e6f -> continue_8d9a2b\n        iteration_reduce_3c5d1f.result -> product_4b53c7\n    }\n\n    \n\n    instance(x: -189, y: 222) product_of_unique_numbers_f0be66 root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7f\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_2b4a4e\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6c3d7f\n\n        out(x: 1500, y: -189, name: \"out\") property(List) out_2b4a4e\n        out(x: 1500, y: -122, name: \"continue\") trigger() continue_6c3d7f\n\n        instance(x: 200, y: -89) difference_1 root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7f -> difference_1.left\n        list2_2b4a4e -> difference_1.right\n        instance(x: 200, y: -256) difference_2 root.Std_k98ojb.Sets.Difference {}\n        list2_2b4a4e -> difference_2.left\n        list1_4c3d7f -> difference_2.right\n        instance(x: 400, y: -172) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n        concat_1.concatenatedList -> out_2b4a4e\n        execute_6c3d7f -> continue_6c3d7f\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b4e1f\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1560, y: -198, name: \"rotated_list\") property(List) output_rotated_list_2b4e1f\n        out(x: 1560, y: -140, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 200, y: -80) length_9fba8c root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -80) modulo_6e1d7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 700, y: -80) sub_2f9d09 root.Std_k98ojb.Math.Sub {}\n        instance(x: 950, y: -80) slice_start_6e1d7a root.Std_k98ojb.List.Slice {}\n        instance(x: 950, y: -30) slice_end_2f9d09 root.Std_k98ojb.List.Slice {}\n        instance(x: 1200, y: -55) concat_6e1d7a root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_9fba8c.list\n        input_rotate_by_2b4e1f -> modulo_6e1d7a.value\n        length_9fba8c.length -> modulo_6e1d7a.divisor\n        length_9fba8c.length -> sub_2f9d09.first\n        modulo_6e1d7a.result -> sub_2f9d09.second\n        input_list_7c3a4d -> slice_start_6e1d7a.list\n        sub_2f9d09.result -> slice_start_6e1d7a.start\n        length_9fba8c.length -> slice_start_6e1d7a.end\n        input_list_7c3a4d -> slice_end_2f9d09.list\n        0 -> slice_end_2f9d09.start\n        sub_2f9d09.result -> slice_end_2f9d09.end\n        slice_start_6e1d7a.slice -> concat_6e1d7a.first\n        slice_end_2f9d09.slice -> concat_6e1d7a.second\n        execute_7c3a4d -> length_9fba8c.execute\n        concat_6e1d7a.concatenated -> output_rotated_list_2b4e1f\n        concat_6e1d7a.execute -> continue_7c3a4d\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -256, name: \"array\") property(List<Number>) array_7f3c4a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_7b5d0e\n\n        out(x: 10, y: 206, name: \"sum\") property(Number) sum_7b5d0e\n        out(x: 10, y: 243, name: \"continue\") trigger() continue_7b5d0e\n\n        instance(x: 10, y: -98) reduce_6f3c4a root.Std_k98ojb.Iteration.Reduce {}\n        func(doc: \"adds two numbers.\") add_numbers {\n            in(x: 20, y: -170, name: \"first\") property(Number) first_5d0e\n            in(x: 20, y: -134, name: \"second\") property(Number) second_5d0e\n\n            out(x: 20, y: 168, name: \"result\") property(Number) result_5d0e\n\n            instance(x: 20, y: -79) add_5d0e root.Std_k98ojb.Math.Add {}\n            first_5d0e -> add_5d0e.first\n            second_5d0e -> add_5d0e.second\n            add_5d0e.result -> result_5d0e\n        } -> reduce_6f3c4a.handler\n        0 -> reduce_6f3c4a.initial_value\n        array_7f3c4a -> reduce_6f3c4a.items\n        execute_7b5d0e -> reduce_6f3c4a.execute\n        reduce_6f3c4a.result -> sum_7b5d0e\n        reduce_6f3c4a.done -> continue_7b5d0e\n    }\n\n    \n\n    instance(x: -189, y: 222) sum_array_f0be66 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c4e\n\n        out(x: 10, y: 10, name: \"is_prime\") property(Bool) is_prime_7f3a4d\n        out(x: 10, y: 50, name: \"continue\") trigger() continue_8b6c4e\n\n        instance(x: 10, y: -210) ifExpression_9fba8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input <= 1 ? false : input == 2 || input % 2 != 0\"\n        }\n        execute_8b6c4e -> ifExpression_9fba8c.execute\n        input_7f3a4d -> ifExpression_9fba8c.input\n\n        instance(x: 10, y: -150) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        execute_8b6c4e -> for_8cb3f6.reset\n        input_7f3a4d -> for_8cb3f6.items\n\n        instance(x: 10, y: -100) ifExpression_b720d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input % item == 0\"\n        }\n        for_8cb3f6.onItem -> ifExpression_b720d7.execute\n        input_7f3a4d -> ifExpression_b720d7.input\n        for_8cb3f6.item -> ifExpression_b720d7.item\n\n        instance(x: 10, y: -50) not_80a119 root.Std_k98ojb.Logic.Not {}\n        ifExpression_b720d7.value -> not_80a119.input\n        not_80a119.output -> is_prime_7f3a4d\n\n        instance(x: 10, y: -5) if_07b8c7 root.Std_k98ojb.Std.If {}\n        for_8cb3f6.done -> if_07b8c7.execute\n        not_80a119.output -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_8b6c4e\n\n        instance(x: 10, y: 50) and_80a119 root.Std_k98ojb.Logic.And {}\n        for_8cb3f6.onItem -> and_80a119.execute\n        ifExpression_b720d7.value -> and_80a119.left\n        not_80a119.output -> and_80a119.right\n\n        instance(x: 10, y: 100) if_e19a62 root.Std_k98ojb.Std.If {}\n        and_80a119.output -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_8b6c4e\n\n        instance(x: 10, y: 150) add_b4554f root.Std_k98ojb.Math.Add {}\n        for_8cb3f6.index -> add_b4554f.first\n        2 -> add_b4554f.second\n        add_b4554f.result -> ifExpression_b720d7.item\n\n        instance(x: 10, y: 200) lessThan_9fba8c root.Std_k98ojb.Math.LessThan {}\n        for_8cb3f6.index -> lessThan_9fba8c.left\n        input_7f3a4d -> lessThan_9fba8c.right\n\n        instance(x: 10, y: 250) ifExpression_b720d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index < Math.sqrt(input)\"\n        }\n        for_8cb3f6.onItem -> ifExpression_b720d7.execute\n        lessThan_9fba8c.result -> ifExpression_b720d7.predicate\n\n        instance(x: 10, y: 300) next_8b6c4e root.Std_k98ojb.Std.For {}\n        for_8cb3f6.onItem -> next_8b6c4e.execute\n        ifExpression_b720d7.then -> next_8b6c4e.next\n\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 354, y: -53, name: \"a\") property(Number) a_27c03d\n        in(x: 161, y: -211, name: \"b\") property(Number) b_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) mul_038fce root.Std_k98ojb.Math.Mul {}\n        instance(x: 933, y: 25) less_than_zero_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_27c03d -> mul_038fce.first\n        b_27b8c3 -> mul_038fce.second\n        mul_038fce.result -> less_than_zero_f11fda.left\n        0 -> less_than_zero_f11fda.right\n\n        less_than_zero_f11fda.result -> out_f3db9f\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -247, y: 53, name: \"input\") property(Number) input_f5c03d\n        in(x: -247, y: 119, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 628, y: 53, name: \"result\") property(Bool) result_3a10e5\n        out(x: 628, y: 119, name: \"continue\") trigger() continue_4d7f5b\n\n        instance(x: -247, y: 203) modulo_d4c6eb root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_d4c6eb.value\n        11 -> modulo_d4c6eb.divisor\n        instance(x: -247, y: 337) equal_2f4a1e root.Std_k98ojb.Logic.Equal {}\n        modulo_d4c6eb.result -> equal_2f4a1e.left\n        0 -> equal_2f4a1e.right\n        execute_27b8c3 -> modulo_d4c6eb.execute\n        equal_2f4a1e.result -> result_3a10e5\n        execute_27b8c3 -> continue_4d7f5b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 120, y: -140, name: \"input\") property(String) input_7a3d5f\n        in(x: 120, y: -80, name: \"search\") property(String) search_f9b6e7\n        in(x: 120, y: -20, name: \"replace\") property(String) replace_b4c1a3\n        in(x: 120, y: 40, name: \"execute\") trigger() execute_8d5f9b\n\n        out(x: 1160, y: -100, name: \"output\") property(String) output_7e4f7a\n        out(x: 1160, y: 20, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 320, y: -100) replace_5c9d18 root.Std_k98ojb.Strings.Replace {}\n        input_7a3d5f -> replace_5c9d18.input\n        search_f9b6e7 -> replace_5c9d18.search\n        replace_b4c1a3 -> replace_5c9d18.replace\n        execute_8d5f9b -> replace_5c9d18.execute\n        replace_5c9d18.output -> output_7e4f7a\n        replace_5c9d18.done -> continue_8ba06b\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 103, y: -465, name: \"input\") property(String) input_2a7d4e\n    in(x: 121, y: -363, name: \"execute\") trigger() execute_9c8f1b\n\n    out(x: 1012, y: -454, name: \"output\") property(String) output_8a7d4e\n    out(x: 1024, y: -363, name: \"continue\") trigger() continue_9c8f1b\n\n    instance(x: 512, y: -459) tolower_7c2d1f root.Std_k98ojb.Strings.ToLower {}\n    input_2a7d4e -> tolower_7c2d1f.input\n    execute_9c8f1b -> tolower_7c2d1f.execute\n    tolower_7c2d1f.output -> output_8a7d4e\n    tolower_7c2d1f.done -> continue_9c8f1b\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 340, y: -215, name: \"numbers\") property(List<Number>) numbers_7e6c3d\n        in(x: 348, y: -169, name: \"execute\") trigger() execute_f7a8b4\n\n        out(x: 1704, y: -256, name: \"product\") property(Number) product_7e6c3d\n        out(x: 1704, y: -197, name: \"continue\") trigger() continue_f7a8b4\n\n        instance(x: 576, y: -242) unique_numbers_2f9d09 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 812, y: -347) reduce_8cb3f6 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1052, y: -418) mul_b4554f root.Std_k98ojb.Math.Mul {}\n        numbers_7e6c3d -> unique_numbers_2f9d09.left\n        numbers_7e6c3d -> unique_numbers_2f9d09.right\n        1 -> reduce_8cb3f6.accumulator\n        execute_f7a8b4 -> unique_numbers_2f9d09.execute\n        unique_numbers_2f9d09.difference -> reduce_8cb3f6.items\n\n        func() {\n            in(x: -5, y: 11, name: \"current\") property(Number) current_e7a8b4\n            in(x: -5, y: 46, name: \"accumulator\") property(Number) accumulator_f7a8b4\n\n            out(x: 320, y: 46, name: \"result\") property(Number) result_7e6c3d\n\n            instance(x: 139, y: -5) mul_b4554f root.Std_k98ojb.Math.Mul {}\n            accumulator_f7a8b4 -> mul_b4554f.first\n            current_e7a8b4 -> mul_b4554f.second\n            mul_b4554f.result -> result_7e6c3d\n        } -> reduce_8cb3f6.handler\n\n        reduce_8cb3f6.accumulator -> product_7e6c3d\n        reduce_8cb3f6.done -> continue_f7a8b4\n    }\n\n    instance(x: -195, y: 209) test_product_of_unique_numbers root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: 263, y: -154, name: \"list1\") property(List) list1_0c7a29\n        in(x: 263, y: -86, name: \"list2\") property(List) list2_bf2d4e\n        in(x: 263, y: -250, name: \"execute\") trigger() execute_1c7b5a\n\n        out(x: 1927, y: -286, name: \"out\") property(List) out_bf604d\n        out(x: 1927, y: -37, name: \"continue\") trigger() continue_775e8c\n\n        instance(x: 527, y: -124) difference_e62b7b root.Std_k98ojb.Sets.Difference {}\n        list1_0c7a29 -> difference_e62b7b.left\n        list2_bf2d4e -> difference_e62b7b.right\n\n        instance(x: 527, y: -30) difference_6886e0 root.Std_k98ojb.Sets.Difference {}\n        list2_bf2d4e -> difference_6886e0.left\n        list1_0c7a29 -> difference_6886e0.right\n\n        instance(x: 751, y: -73) concat_d6b4ad root.Std_k98ojb.List.Concat {}\n        difference_e62b7b.difference -> concat_d6b4ad.left\n        difference_6886e0.difference -> concat_d6b4ad.right\n\n        instance(x: 1053, y: -73) unique_elements_9d5c5a root.Std_k98ojb.Query.Filter {\n            where: \"not List.Contains(list, it)\"\n        }\n        concat_d6b4ad.list -> unique_elements_9d5c5a.items\n        concat_d6b4ad.left -> unique_elements_9d5c5a.list\n\n        instance(x: 1372, y: -73) sort_b8e4f0 root.Std_k98ojb.List.Sort {}\n        unique_elements_9d5c5a.items -> sort_b8e4f0.list\n\n        execute_1c7b5a -> difference_e62b7b.execute\n        execute_1c7b5a -> difference_6886e0.execute\n        continue_775e8c -> unique_elements_9d5c5a.execute\n        sort_b8e4f0.list -> out_bf604d\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 216, y: -304, name: \"list\") property(List) input_list_75d6f5\n        in(x: 218, y: -393, name: \"rotate_by\") property(Number) rotate_by_d7a7c8\n        in(x: 216, y: -480, name: \"execute\") trigger() execute_2b9f5d\n\n        out(x: 1265, y: -312, name: \"rotated_list\") property(List) rotated_list_f7a7c8\n        out(x: 1265, y: -402, name: \"continue\") trigger() continue_9b4b4d\n\n        instance(x: 474, y: -344) length_d9e20b root.Std_k98ojb.List.Length {}\n        instance(x: 685, y: -341) modulo_f7a7c8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 921, y: -342) sub_304fbb root.Std_k98ojb.Math.Sub {}\n        instance(x: 1156, y: -341) slice_end_7a7c8d root.Std_k98ojb.List.Slice {}\n        instance(x: 1156, y: -230) slice_start_7a7c8e root.Std_k98ojb.List.Slice {}\n        instance(x: 1156, y: -451) concat_7a7c8f root.Std_k98ojb.List.Concat {}\n\n        input_list_75d6f5 -> length_d9e20b.list\n        rotate_by_d7a7c8 -> modulo_f7a7c8.value\n        length_d9e20b.length -> modulo_f7a7c8.divisor\n        length_d9e20b.length -> sub_304fbb.first\n        modulo_f7a7c8.result -> sub_304fbb.second\n        input_list_75d6f5 -> slice_end_7a7c8d.list\n        0 -> slice_end_7a7c8d.start\n        sub_304fbb.result -> slice_end_7a7c8d.end\n        input_list_75d6f5 -> slice_start_7a7c8e.list\n        sub_304fbb.result -> slice_start_7a7c8e.start\n        length_d9e20b.length -> slice_start_7a7c8e.end\n        slice_end_7a7c8d.slice -> concat_7a7c8f.first\n        slice_start_7a7c8e.slice -> concat_7a7c8f.second\n        concat_7a7c8f.concatenated_list -> rotated_list_f7a7c8\n        execute_2b9f5d -> continue_9b4b4d\n    }\n\n    \n\n    instance(x: -136, y: 10) rotate_list_right_c9e20b root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 30, y: -20, name: \"array\") property(List<Number>) array_1a5d4c\n        in(x: 60, y: -80, name: \"execute\") trigger() execute_eb7f9e\n\n        out(x: 970, y: -30, name: \"sum\") property(Number) sum_f2d2c1\n        out(x: 1040, y: -110, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 250, y: -170) reduce_9f3a2e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 470, y: -170) add_7c8d0c root.Std_k98ojb.Math.Add {}\n\n        func() {\n            in(x: 60, y: 30, name: \"accumulator\") property(Number) accumulator_e2e2f5\n            in(x: 60, y: 100, name: \"current_value\") property(Number) current_value_7c8d0c\n\n            out(x: 490, y: -130, name: \"result\") property(Number) result_e2e2f5\n            accumulator_e2e2f5 -> add_7c8d0c.first\n            current_value_7c8d0c -> add_7c8d0c.second\n            add_7c8d0c.result -> result_e2e2f5\n        } -> reduce_9f3a2e.reducer\n\n        0 -> reduce_9f3a2e.accumulator\n        array_1a5d4c -> reduce_9f3a2e.items\n        execute_eb7f9e -> reduce_9f3a2e.execute\n        reduce_9f3a2e.result -> sum_f2d2c1\n        reduce_9f3a2e.done -> continue_8ba06b\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -210, name: \"input\") property(Number) input_7f6a2d\n        in(x: 598, y: -210, name: \"execute\") trigger() execute_3e9b0c\n\n        out(x: 1642, y: -120, name: \"out\") property(Bool) out_b7a2f7\n        out(x: 1850, y: -120, name: \"continue\") trigger() continue_3d9b8c\n\n        instance(x: 764, y: -185) generaterange_70d7fb root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1026, y: -155) for_3a1e2f root.Std_k98ojb.Std.For {}\n        instance(x: 1294, y: -125) if_75d0c6 root.Std_k98ojb.Std.If {}\n        instance(x: 1466, y: -300) expression_3a8e0f root.Std_k98ojb.Math.Expression {\n            expression: \"input % i == 0\"\n        }\n        instance(x: 1725, y: -240) not_e5d1c6 root.Std_k98ojb.Logic.Not {}\n        generaterange_70d7fb.list -> for_3a1e2f.items\n        execute_3e9b0c -> for_3a1e2f.reset\n        input_7f6a2d -> generaterange_70d7fb.to\n        2 -> generaterange_70d7fb.from\n        for_3a1e2f.item -> expression_3a8e0f.gen_1\n        input_7f6a2d -> expression_3a8e0f.gen_0\n        expression_3a8e0f.result -> if_75d0c6.predicate\n        for_3a1e2f.onItem -> if_75d0c6.execute\n        if_75d0c6.then -> continue_3d9b8c\n        if_75d0c6.else -> not_e5d1c6.input\n        not_e5d1c6.output -> out_b7a2f7\n        for_3a1e2f.done -> continue_3d9b8c\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") has_opposite_signs {\n        in(x: 10, y: -5, name: \"a\") property(Number) a_4e7d6c\n        in(x: 20, y: -5, name: \"b\") property(Number) b_e9831a\n        in(x: 15, y: -15, name: \"execute\") trigger() execute_7f7c53\n\n        out(x: 445, y: -5, name: \"result\") property(Bool) result_f2b6ef\n        out(x: 470, y: -90, name: \"continue\") trigger() continue_e1e1a8\n\n        instance(x: 100, y: -70) mul_3d3f5c root.Std_k98ojb.Math.Mul {}\n        a_4e7d6c -> mul_3d3f5c.first\n        b_e9831a -> mul_3d3f5c.second\n\n        instance(x: 200, y: -70) lessthanorequal_bdbb4a root.Std_k98ojb.Math.LessThanOrEqual {}\n        0 -> lessthanorequal_bdbb4a.left\n        mul_3d3f5c.result -> lessthanorequal_bdbb4a.right\n\n        instance(x: 300, y: -70) not_81e26d root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_bdbb4a.result -> not_81e26d.input\n\n        not_81e26d.output -> result_f2b6ef\n        execute_7f7c53 -> continue_e1e1a8\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -30, name: \"input\") property(Number) input_e4c5e7\n        in(x: -20, y: 90, name: \"execute\") trigger() execute_c8a6d4\n\n        out(x: 1000, y: -30, name: \"out\") property(Bool) out_1f0bba\n        out(x: 1000, y: 90, name: \"continue\") trigger() continue_7728aa\n\n        instance(x: 150, y: -60) modulo_f6e4a5 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -60) equal_baf7c3 root.Std_k98ojb.Logic.Equal {}\n\n        input_e4c5e7 -> modulo_f6e4a5.value\n        11 -> modulo_f6e4a5.divisor\n        modulo_f6e4a5.result -> equal_baf7c3.left\n        0 -> equal_baf7c3.right\n        equal_baf7c3.result -> out_1f0bba\n        execute_c8a6d4 -> continue_7728aa\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 30, y: -214, name: \"input\") property(String) input_5a6f7c\n        in(x: 30, y: -169, name: \"search\") property(String) search_8b6d7e\n        in(x: 30, y: -124, name: \"replace\") property(String) replace_31a5ee\n        in(x: 26, y: -79, name: \"execute\") trigger() execute_e4c5ce\n\n        out(x: 1815, y: -10, name: \"output\") property(String) output_81e2f7\n\n        instance(x: 230, y: -60) replace_a9d2bb root.Std_k98ojb.Strings.Replace {}\n        input_5a6f7c -> replace_a9d2bb.input\n        search_8b6d7e -> replace_a9d2bb.search\n        replace_31a5ee -> replace_a9d2bb.replace\n        execute_e4c5ce -> replace_a9d2bb.execute\n        replace_a9d2bb.output -> output_81e2f7\n    }\n\n    \n\n    instance(x: 60, y: 212) replace_characters_3a2b0e root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: 10, y: -20, name: \"input\") property(String) input_5a4d7c\n        in(x: 30, y: -80, name: \"execute\") trigger() execute_c9f6e2\n\n        out(x: 310, y: -20, name: \"output\") property(String) output_2b875a\n        out(x: 330, y: -80, name: \"continue\") trigger() continue_4c7d9f\n\n        instance(x: 160, y: -20) tolower_ebe0e4 root.Std_k98ojb.Strings.ToLower {}\n        input_5a4d7c -> tolower_ebe0e4.input\n        execute_c9f6e2 -> tolower_ebe0e4.execute\n        tolower_ebe0e4.lower -> output_2b875a\n        tolower_ebe0e4.done -> continue_4c7d9f\n    }\n\n    \n\n    instance(x: -189, y: 222) to_lower_case_d63b8a root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 354, y: -102, name: \"list\") property(List(Number)) input_list\n        in(x: 698, y: -373, name: \"execute\") trigger() execute\n\n        out(x: 1819, y: -25, name: \"product\") property(Number) product_out\n        out(x: 1840, y: 136, name: \"done\") trigger() done\n\n        instance(x: 472, y: -179) unique_6d2dbf root.Std_k98ojb.Sets.Difference {}\n        instance(x: 579, y: -60) reduce_6ab8c3 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 408, y: -136) emptylist_d268d6 root.Std_k98ojb.List.Empty {}\n\n        func() {\n            in(x: -75, y: 11, name: \"current\") property(Number) current\n            in(x: -75, y: 44, name: \"accumulator\") property(Number) accumulator\n\n            out(x: 369, y: -28, name: \"result\") property(Number) result_out\n\n            instance(x: 101, y: -32) mul_4f27a5 root.Std_k98ojb.Math.Mul {}\n            current -> mul_4f27a5.first\n            accumulator -> mul_4f27a5.second\n            mul_4f27a5.result -> result_out\n        } -> reduce_6ab8c3.reducer\n\n        1 -> reduce_6ab8c3.initial_value\n        unique_6d2dbf.difference -> reduce_6ab8c3.items\n        input_list -> unique_6d2dbf.left\n        emptylist_d268d6.list -> unique_6d2dbf.right\n\n        execute -> unique_6d2dbf.execute\n        unique_6d2dbf.done -> reduce_6ab8c3.reset\n        reduce_6ab8c3.result -> product_out\n        reduce_6ab8c3.done -> done\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the dissimilar elements between two lists.\") find_dissimilar_elements {\n        in(x: 100, y: -250, name: \"list_a\") property(List) list_a_3d7f6c\n        in(x: 100, y: -150, name: \"list_b\") property(List) list_b_8e4a9b\n        in(x: 100, y: -50, name: \"execute\") trigger() execute_e2d3f1\n\n        out(x: 700, y: -250, name: \"dissimilar_elements\") property(List) dissimilar_elements_6a2b8c\n        out(x: 700, y: -150, name: \"continue\") trigger() continue_34e9f1\n\n        instance(x: 200, y: -100) difference_ab_aebd root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: -200) difference_ba_52669c root.Std_k98ojb.Sets.Difference {}\n\n        list_a_3d7f6c -> difference_ab_aebd.left\n        list_b_8e4a9b -> difference_ab_aebd.right\n\n        list_b_8e4a9b -> difference_ba_52669c.left\n        list_a_3d7f6c -> difference_ba_52669c.right\n\n        instance(x: 300, y: -100) concat_differences_4f28db root.Std_k98ojb.List.Concat {}\n        \n        difference_ab_aebd.difference -> concat_differences_4f28db.list1\n        difference_ba_52669c.difference -> concat_differences_4f28db.list2\n\n        instance(x: 400, y: -100) unique_elements_3e7b4d root.Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n\n        concat_differences_4f28db.concatenated -> unique_elements_3e7b4d.items\n\n        unique_elements_3e7b4d.filtered -> dissimilar_elements_6a2b8c\n        execute_e2d3f1 -> continue_34e9f1\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 143, y: -207, name: \"list\") property(List) input_list_56f5a5\n        in(x: 189, y: -312, name: \"rotate_by\") property(Number) input_rotate_by_2b96d5\n        in(x: 488, y: -370, name: \"execute\") trigger() execute_1a3ebf\n\n        out(x: 1164, y: -229, name: \"rotated_list\") property(List) output_rotated_list_c5b3e0\n        out(x: 1389, y: -373, name: \"continue\") trigger() continue_8d9f94\n\n        instance(x: 601, y: -219) length_d0c54a root.Std_k98ojb.List.Length {}\n        instance(x: 836, y: -220) modulo_c7ebff root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1035, y: -125) slice_8f4a5d root.Std_k98ojb.List.Slice {}\n        instance(x: 1036, y: -317) slice_f0c4e2 root.Std_k98ojb.List.Slice {}\n        instance(x: 1228, y: -228) concat_5f5d7e root.Std_k98ojb.List.Concat {}\n\n        input_list_56f5a5 -> length_d0c54a.list\n        input_rotate_by_2b96d5 -> modulo_c7ebff.value\n        length_d0c54a.length -> modulo_c7ebff.divisor\n        execute_1a3ebf -> length_d0c54a.trigger\n        execute_1a3ebb -> modulo_c7ebff.execute\n\n        input_list_56f5a5 -> slice_8f4a5d.list\n        0 -> slice_8f4a5d.start\n        modulo_c7ebff.result -> slice_8f4a5d.end\n\n        input_list_56f5a5 -> slice_f0c4e2.list\n        modulo_c7ebff.result -> slice_f0c4e2.start\n        -1 -> slice_f0c4e2.end\n\n        execute_1a3ebb -> slice_8f4a5d.execute\n        execute_1a3ebb -> slice_f0c4e2.execute\n\n        slice_f0c4e2.slice -> concat_5f5d7e.first_list\n        slice_8f4a5d.slice -> concat_5f5d7e.second_list\n        execute_1a3ebb -> concat_5f5d7e.execute\n        concat_5f5d7e.concatenated_list -> output_rotated_list_c5b3e0\n\n        length_d0c54a.trigger -> continue_8d9f94\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_of_array {\n        in(x: 10, y: -265, name: \"array\") property(List<Number>) input_3a7f4c\n        in(x: 298, y: -280, name: \"execute\") trigger() execute_7e4b1d\n\n        out(x: 1148, y: -65, name: \"result\") property(Number) result_d3a9f1\n        out(x: 1368, y: 52, name: \"continue\") trigger() continue_074c96\n\n        instance(x: 615, y: -279) reduce_8b1dc7 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 362, y: -63, name: \"accumulator\") property(Number) accumulator_45f20d\n            in(x: 362, y: 33, name: \"current_value\") property(Number) current_value_f83a9e\n\n            out(x: 576, y: -13, name: \"result\") property(Number) result_1c4f0d\n\n            instance(x: 452, y: 117) add_2b1bda root.Std_k98ojb.Math.Add {}\n            accumulator_45f20d -> add_2b1bda.first\n            current_value_f83a9e -> add_2b1bda.second\n            add_2b1bda.result -> result_1c4f0d\n        } -> reduce_8b1dc7.reducer\n        0 -> reduce_8b1dc7.initial\n        input_3a7f4c -> reduce_8b1dc7.items\n        execute_7e4b1d -> reduce_8b1dc7.execute\n        reduce_8b1dc7.result -> result_d3a9f1\n        reduce_8b1dc7.done -> continue_074c96\n    }\n\n    \n\n    instance(x: -25, y: 17) sum_of_array_2ee6e5 root.main.sum_of_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 20, y: -160, name: \"input\") property(Number) input_4f7a5d\n        in(x: 193, y: -188, name: \"execute\") trigger() execute_c0c1e5\n\n        out(x: 1742, y: -16, name: \"out\") property(Bool) out_1f0bda\n        out(x: 1893, y: 114, name: \"continue\") trigger() continue_6cb8e3\n\n        instance(x: 257, y: -369) for_e2d300 root.Std_k98ojb.Std.For {}\n        instance(x: 729, y: -310) lessthanorequal_b61c46 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 580, y: -123) generaterange_0d7f1a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1116, y: -243) expression_d8bdc5 root.Std_k98ojb.Math.Expression {\n            expression: \"input % i == 0\"\n        }\n        instance(x: 1378, y: -144) if_3f65d4 root.Std_k98ojb.Std.If {}\n        instance(x: 2137, y: -353) not_4cde5e root.Std_k98ojb.Logic.Not {}\n        input_4f7a5d -> generaterange_0d7f1a.to\n        2 -> generaterange_0d7f1a.from\n        generaterange_0d7f1a.list -> for_e2d300.items\n        for_e2d300.item -> lessthanorequal_b61c46.left\n        input_4f7a5d -> lessthanorequal_b61c46.right\n        lessthanorequal_b61c46.result -> if_3f65d4.predicate\n        for_e2d300.onItem -> if_3f65d4.execute\n        input_4f7a5d -> expression_d8bdc5.gen_0\n        for_e2d300.item -> expression_d8bdc5.gen_1\n        expression_d8bdc5.result -> not_4cde5e.input\n        if_3f65d4.value -> out_1f0bda\n        if_3f65d4.else -> continue_6cb8e3\n        for_e2d300.done -> continue_6cb8e3\n        not_4cde5e.result -> if_3f65d4.value\n        execute_c0c1e5 -> for_e2d300.reset\n        if_3f65d4.then -> for_e2d300.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_79cb3a root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5f7d\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b4f3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6d8c1a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_9f3b4d\n\n        instance(x: 10, y: -140) expression_4e2b1c root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3e5f7d -> expression_4e2b1c.gen_0\n        b_8c4a9b -> expression_4e2b1c.gen_1\n        execute_2b4f3e -> expression_4e2b1c.execute\n        expression_4e2b1c.result -> out_6d8c1a\n        continue_9f3b4d -> expression_4e2b1c.continue\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4d5a root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4d5a.value\n        11 -> modulo_7c4d5a.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4b root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4d5a.result -> equal_6f3e4b.left\n        0 -> equal_6f3e4b.right\n\n        instance(x: 20, y: 40) if_1a2b3c root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_1a2b3c.execute\n        equal_6f3e4b.result -> if_1a2b3c.predicate\n\n        if_1a2b3c.value -> out_f3db9f\n        if_1a2b3c.then -> continue_8ba06b\n        if_1a2b3c.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3d4c\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9f5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3d\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_6b8a9f\n\n        instance(x: 150, y: -20) replace_3e4a5b root.Std_k98ojb.Strings.Replace {}\n        input_7a3d4c -> replace_3e4a5b.input\n        search_8b9f5e -> replace_3e4a5b.search\n        replace_2c7a3d -> replace_3e4a5b.replace\n        replace_3e4a5b.output -> output_6b8a9f\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e2f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 66, name: \"continue\") trigger() continue_8a9d6f\n\n        instance(x: 200, y: -100) unique_numbers_3e2d6a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: -100) reduce_product_7c5d6a root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 600, y: -100) initial_value_3e2d6a root.Std_k98ojb.Math.Mul {}\n\n        numbers_3c7d6a -> unique_numbers_3e2d6a.left\n        numbers_3c7d6a -> unique_numbers_3e2d6a.right\n        unique_numbers_3e2d6a.difference -> reduce_product_7c5d6a.items\n\n        1 -> initial_value_3e2d6a.first\n        1 -> initial_value_3e2d6a.second\n        initial_value_3e2d6a.result -> reduce_product_7c5d6a.accumulator\n\n        func() {\n            in(x: -10, y: -10, name: \"current\") property(Number) current_4b53c7\n            in(x: -10, y: 66, name: \"index\") property(Number) index_8a9d6f\n\n            out(x: 10, y: 10, name: \"result\") property(Number) result_2b5e2f\n\n            instance(x: 100, y: -100) mul_3c7d6a root.Std_k98ojb.Math.Mul {}\n            current_4b53c7 -> mul_3c7d6a.first\n            result_2b5e2f -> mul_3c7d6a.second\n            mul_3c7d6a.result -> result_2b5e2f\n        } -> reduce_product_7c5d6a.handler\n\n        execute_2b5e2f -> unique_numbers_3e2d6a.execute\n        unique_numbers_3e2d6a.done -> reduce_product_7c5d6a.execute\n        reduce_product_7c5d6a.result -> product_4b53c7\n        reduce_product_7c5d6a.done -> continue_8a9d6f\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7a\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_2b4f5e\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6c3d7a\n\n        out(x: 10, y: 10, name: \"out\") property(List) out_894f5e\n        out(x: 10, y: 82, name: \"continue\") trigger() continue_6c3d7a\n\n        instance(x: 10, y: -50) difference_2b4f5e root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7a -> difference_2b4f5e.left\n        list2_2b4f5e -> difference_2b4f5e.right\n        instance(x: 10, y: 60) difference_4c3d7a root.Std_k98ojb.Sets.Difference {}\n        list2_2b4f5e -> difference_4c3d7a.left\n        list1_4c3d7a -> difference_4c3d7a.right\n        instance(x: 10, y: 170) concat_6c3d7a root.Std_k98ojb.List.Concat {}\n        difference_2b4f5e.difference -> concat_6c3d7a.left\n        difference_4c3d7a.difference -> concat_6c3d7a.right\n        concat_6c3d7a.list -> out_894f5e\n        execute_6c3d7a -> continue_6c3d7a\n    }\n\n    \n\n    instance(x: -10, y: 220) dissimilar_elements_f0be66 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b5e1f\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1610, y: -198, name: \"rotated_list\") property(List) output_rotated_list_2b5e1f\n        out(x: 1610, y: -140, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 210, y: -89) length_7c3a4d root.Std_k98ojb.List.Length {}\n        instance(x: 560, y: -89) modulo_7c3a4d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 910, y: -89) sub_7c3a4d root.Std_k98ojb.Math.Sub {}\n        instance(x: 1260, y: -89) slice_7c3a4d root.Std_k98ojb.List.Slice {}\n        instance(x: 1260, y: -15) slice_2b5e1f root.Std_k98ojb.List.Slice {}\n        instance(x: 1410, y: -198) concat_7c3a4d root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_7c3a4d.list\n        input_rotate_by_2b5e1f -> modulo_7c3a4d.value\n        length_7c3a4d.length -> modulo_7c3a4d.divisor\n        modulo_7c3a4d.result -> sub_7c3a4d.first\n        length_7c3a4d.length -> sub_7c3a4d.second\n        input_list_7c3a4d -> slice_7c3a4d.list\n        sub_7c3a4d.result -> slice_7c3a4d.start\n        -1 -> slice_7c3a4d.end\n        input_list_7c3a4d -> slice_2b5e1f.list\n        0 -> slice_2b5e1f.start\n        sub_7c3a4d.result -> slice_2b5e1f.end\n        slice_7c3a4d.slice -> concat_7c3a4d.first\n        slice_2b5e1f.slice -> concat_7c3a4d.second\n        execute_7c3a4d -> length_7c3a4d.execute\n        continue_7c3a4d -> concat_7c3a4d.execute\n        concat_7c3a4d.concatenated_list -> output_rotated_list_2b5e1f\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -256, name: \"array\") property(List<Number>) array_7f3a4d\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_4b4c0e\n\n        out(x: 10, y: 256, name: \"sum\") property(Number) sum_2b7f3a\n        out(x: 10, y: 324, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 10, y: -96) reduce_5c3d2e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -170, y: -44, name: \"accumulator\") property(Number) accumulator_2f9d09\n            in(x: -170, y: 26, name: \"current_value\") property(Number) current_value_5c3d2e\n\n            out(x: -170, y: 148, name: \"result\") property(Number) result_2f9d09\n\n            instance(x: -170, y: 86) add_2f9d09 root.Std_k98ojb.Math.Add {}\n            accumulator_2f9d09 -> add_2f9d09.first\n            current_value_5c3d2e -> add_2f9d09.second\n            add_2f9d09.result -> result_2f9d09\n        } -> reduce_5c3d2e.reducer\n        0 -> reduce_5c3d2e.initial_value\n        array_7f3a4d -> reduce_5c3d2e.items\n        execute_4b4c0e -> reduce_5c3d2e.execute\n        reduce_5c3d2e.result -> sum_2b7f3a\n        reduce_5c3d2e.done -> continue_8ba06b\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -256, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -389, name: \"execute\") trigger() execute_7b9e1c\n\n        out(x: 1890, y: -256, name: \"out\") property(Bool) out_7f3a4d\n        out(x: 1890, y: -389, name: \"continue\") trigger() continue_7b9e1c\n\n        instance(x: 10, y: -125) lessthanorequal_6b2a1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10, y: -43) equal_2d7d6e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 58) greaterthan_4c4a1f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 10, y: 138) generaterange_2d7d6e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 10, y: 254) for_2d7d6e root.Std_k98ojb.Std.For {}\n        instance(x: 10, y: 370) modulo_2d7d6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 10, y: 486) equal_4c4a1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: 593) if_2d7d6e root.Std_k98ojb.Std.If {}\n        instance(x: 10, y: 709) and_2d7d6e root.Std_k98ojb.Logic.And {}\n\n        input_7f3a4d -> lessthanorequal_6b2a1f.left\n        2 -> lessthanorequal_6b2a1f.right\n\n        input_7f3a4d -> equal_2d7d6e.left\n        2 -> equal_2d7d6e.right\n\n        input_7f3a4d -> greaterthan_4c4a1f.left\n        2 -> greaterthan_4c4a1f.right\n\n        2 -> generaterange_2d7d6e.from\n        input_7f3a4d -> generaterange_2d7d6e.to\n\n        generaterange_2d7d6e.list -> for_2d7d6e.items\n\n        input_7f3a4d -> modulo_2d7d6e.left\n        for_2d7d6e.item -> modulo_2d7d6e.right\n\n        0 -> equal_4c4a1f.left\n        modulo_2d7d6e.result -> equal_4c4a1f.right\n\n        equal_4c4a1f.result -> if_2d7d6e.predicate\n        for_2d7d6e.onItem -> if_2d7d6e.execute\n\n        lessthanorequal_6b2a1f.result -> and_2d7d6e.left\n        equal_2d7d6e.result -> and_2d7d6e.right\n\n        and_2d7d6e.result -> out_7f3a4d\n\n        if_2d7d6e.then -> for_2d7d6e.next\n        if_2d7d6e.else -> continue_7b9e1c\n\n        greaterthan_4c4a1f.result -> for_2d7d6e.execute\n        for_2d7d6e.done -> continue_7b9e1c\n\n        execute_7b9e1c -> lessthanorequal_6b2a1f.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 345, y: -210, name: \"a\") property(Number) a_7f6eac\n        in(x: 345, y: -285, name: \"b\") property(Number) b_2d59c5\n        in(x: 345, y: -360, name: \"execute\") trigger() execute_e17b0f\n\n        out(x: 1455, y: -285, name: \"out\") property(Bool) out_7d5a9b\n        out(x: 1455, y: -360, name: \"continue\") trigger() continue_c6c3f4\n\n        instance(x: 690, y: -285) mul_f6e16a root.Std_k98ojb.Math.Mul {}\n        a_7f6eac -> mul_f6e16a.first\n        b_2d59c5 -> mul_f6e16a.second\n\n        instance(x: 1035, y: -285) less_than_zero root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_f6e16a.result -> less_than_zero.left\n        0 -> less_than_zero.right\n\n        less_than_zero.result -> out_7d5a9b\n        execute_e17b0f -> continue_c6c3f4\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -25, y: -64, name: \"input\") property(Number) input_f3db9f\n        in(x: -25, y: 80, name: \"execute\") trigger() execute_e7c3b3\n\n        out(x: 1205, y: -220, name: \"out\") property(Bool) out_6e4a79\n        out(x: 1205, y: -80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 342, y: -240) mod_1f2c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 735, y: -240) equal_d3a7e5 root.Std_k98ojb.Logic.Equal {}\n        input_f3db9f -> mod_1f2c6d.value\n        11 -> mod_1f2c6d.divisor\n        mod_1f2c6d.result -> equal_d3a7e5.left\n        0 -> equal_d3a7e5.right\n        execute_e7c3b3 -> mod_1f2c6d.execute\n        equal_d3a7e5.result -> out_6e4a79\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 32, y: -160, name: \"input\") property(String) input_7a4e5c\n        in(x: 89, y: -95, name: \"search\") property(String) search_bf7d1b\n        in(x: 154, y: -32, name: \"replace\") property(String) replace_e6d01a\n\n        out(x: 1000, y: -180, name: \"output\") property(String) output_9c2e6f\n        instance(x: 374, y: -154) strings_replace_f9c4b4 root.Std_k98ojb.Strings.Replace {}\n        input_7a4e5c -> strings_replace_f9c4b4.input\n        search_bf7d1b -> strings_replace_f9c4b4.search\n        replace_e6d01a -> strings_replace_f9c4b4.replace\n        strings_replace_f9c4b4.output -> output_9c2e6f\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 106, y: -345, name: \"input\") property(String) input_2a7dcb\n    in(x: 105, y: -256, name: \"execute\") trigger() execute_c8e9f6\n\n    out(x: 1122, y: -234, name: \"output\") property(String) output_f3db9f\n    out(x: 1120, y: -145, name: \"continue\") trigger() continue_8ba06b\n\n    instance(x: 670, y: -255) tolower_2a7dcb root.Std_k98ojb.Strings.ToLower {}\n    input_2a7dcb -> tolower_2a7dcb.input\n    execute_c8e9f6 -> tolower_2a7dcb.execute\n    tolower_2a7dcb.output -> output_f3db9f\n    tolower_2a7dcb.done -> continue_8ba06b\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 342, y: -156, name: \"numbers\") property(List<Number>) numbers_7f0a8d\n        in(x: 349, y: -244, name: \"execute\") trigger() execute_eb0e5c\n\n        out(x: 1852, y: -16, name: \"product\") property(Number) product_47f70a\n        out(x: 1869, y: 123, name: \"continue\") trigger() continue_4d0b0e\n\n        instance(x: 615, y: -34) intersection_eb2c4f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 797, y: -238) reduce_2a206d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 511, y: -145) unique_c2b9c5 root.Std_k98ojb.Query.Filter {\n            where: \"it\"\n        }\n        numbers_7f0a8d -> unique_c2b9c5.items\n        execute_eb0e5c -> unique_c2b9c5.execute\n        unique_c2b9c5.output_list -> intersection_eb2c4f.left\n        unique_c2b9c5.output_list -> intersection_eb2c4f.right\n        intersection_eb2c4f.intersect -> reduce_2a206d.items\n        func() {\n            in(x: -137, y: 81, name: \"accumulator\") property(Number) accumulator_9e535f\n            in(x: -143, y: 158, name: \"current\") property(Number) current_6d2b0b\n\n            out(x: 247, y: 118, name: \"result\") property(Number) result_ea29c8\n\n            instance(x: -4, y: 134) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_9e535f -> mul_2f9d09.first\n            current_6d2b0b -> mul_2f9d09.second\n            mul_2f9d09.result -> result_ea29c8\n        } -> reduce_2a206d.handler\n        1 -> reduce_2a206d.initialValue\n        reduce_2a206d.result -> product_47f70a\n        unique_c2b9c5.done -> continue_4d0b0e\n    }\n\n    \n\n    instance(x: -38, y: 191) product_of_unique_numbers_f0be66 root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: 263, y: -154, name: \"list1\") property(List) list1_07f4d6\n        in(x: 268, y: -90, name: \"list2\") property(List) list2_6c7a5e\n        in(x: 339, y: -216, name: \"execute\") trigger() execute_6b4d6f\n\n        out(x: 1834, y: -205, name: \"out\") property(List) out_67c2e6\n        out(x: 1990, y: -99, name: \"continue\") trigger() continue_ea1d5b\n\n        instance(x: 685, y: -344) difference_left_7f722b root.Std_k98ojb.Sets.Difference {}\n        instance(x: 680, y: -181) difference_right_c4e7a2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 1356, y: -255) concat_dissimilar_2d65f3 root.Std_k98ojb.List.Concat {}\n\n        list1_07f4d6 -> difference_left_7f722b.left\n        list2_6c7a5e -> difference_left_7f722b.right\n        list2_6c7a5e -> difference_right_c4e7a2.left\n        list1_07f4d6 -> difference_right_c4e7a2.right\n        execute_6b4d6f -> difference_left_7f722b.execute\n        execute_6b4d6f -> difference_right_c4e7a2.execute\n        difference_left_7f722b.difference -> concat_dissimilar_2d65f3.left\n        difference_right_c4e7a2.difference -> concat_dissimilar_2d65f3.right\n        concat_dissimilar_2d65f3.list -> out_67c2e6\n        continue_ea1d5b -> execute_6b4d6f\n    }\n\n    \n\n    instance(x: -189, y: 222) find_dissimilar_elements_0eb65a root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 216, y: -304, name: \"list\") property(List) input_list_7f5a8d\n        in(x: 229, y: -428, name: \"rotate_by\") property(Number) rotate_by_d2c4b8\n        in(x: 166, y: -304, name: \"execute\") trigger() execute_7f5a8d\n\n        out(x: 1925, y: -180, name: \"out_list\") property(List) output_list_8c2b4e\n        out(x: 1926, y: -311, name: \"continue\") trigger() continue_ea7f4d\n\n        instance(x: 539, y: -269) length_0d04bb root.Std_k98ojb.List.Length {}\n        instance(x: 804, y: -266) modulo_1553c6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1078, y: -269) sub_bf4d7e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1362, y: -269) slice_5a7b9c root.Std_k98ojb.List.Slice {}\n        instance(x: 1630, y: -269) concat_eb4f9d root.Std_k98ojb.List.Concat {}\n\n        input_list_7f5a8d -> length_0d04bb.list\n        rotate_by_d2c4b8 -> modulo_1553c6.value\n        length_0d04bb.length -> modulo_1553c6.divisor\n        length_0d04bb.length -> sub_bf4d7e.first\n        modulo_1553c6.result -> sub_bf4d7e.second\n        input_list_7f5a8d -> slice_5a7b9c.list\n        sub_bf4d7e.result -> slice_5a7b9c.start\n        0 -> slice_5a7b9c.end\n        input_list_7f5a8d -> concat_eb4f9d.left\n        slice_5a7b9c.slice -> concat_eb4f9d.right\n        concat_eb4f9d.concatenatedList -> output_list_8c2b4e\n        execute_7f5a8d -> continue_ea7f4d\n    }\n\n    \n\n    instance(x: -136, y: 220) rotate_list_right_f5a78c root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 342, y: -157, name: \"array\") property(List<Number>) array_0f5c6a\n        in(x: 398, y: -305, name: \"execute\") trigger() execute_e2b5e6\n\n        out(x: 1462, y: -272, name: \"sum\") property(Number) sum_7d5c6a\n        out(x: 1698, y: -380, name: \"continue\") trigger() continue_b5f7b4\n\n        instance(x: 626, y: -144) reduce_f3e65a root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 960, y: -112) add_3c8c0d root.Std_k98ojb.Math.Add {}\n\n        array_0f5c6a -> reduce_f3e65a.items\n        execute_e2b5e6 -> reduce_f3e65a.execute\n\n        func() {\n            in(x: 41, y: -179, name: \"accumulated\") property(Number) accumulated_8b0b7d\n            in(x: 124, y: -26, name: \"item\") property(Number) item_e53c4e\n\n            out(x: 278, y: -103, name: \"result\") property(Number) result_f5f39a\n\n            accumulated_8b0b7d -> add_3c8c0d.first\n            item_e53c4e -> add_3c8c0d.second\n            add_3c8c0d.result -> result_f5f39a\n        } -> reduce_f3e65a.reducer\n\n        0 -> reduce_f3e65a.initial_value\n        reduce_f3e65a.result -> sum_7d5c6a\n        reduce_f3e65a.done -> continue_b5f7b4\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 30, y: -250, name: \"input\") property(Number) input_1a7d6e\n        in(x: 30, y: -190, name: \"execute\") trigger() execute_e4f8c4\n\n        out(x: 1750, y: -10, name: \"out\") property(Bool) out_f2b4a7\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_3f3c6b\n\n        instance(x: 350, y: -100) generaterange_4e4d05 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 700, y: -50) for_2a4c6b root.Std_k98ojb.Std.For {}\n        instance(x: 1030, y: -50) mod_f2e5f1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1370, y: -50) if_4d6c7a root.Std_k98ojb.Std.If {}\n        instance(x: 1570, y: -200) and_e5e1f5 root.Std_k98ojb.Logic.And {}\n        instance(x: 1370, y: 100) not_4d6c7a root.Std_k98ojb.Logic.Not {}\n\n        2 -> generaterange_4e4d05.from\n        input_1a7d6e -> generaterange_4e4d05.to\n        generaterange_4e4d05.list -> for_2a4c6b.items\n        execute_e4f8c4 -> for_2a4c6b.reset\n        for_2a4c6b.item -> mod_f2e5f1.value\n        input_1a7d6e -> mod_f2e5f1.divisor\n        0 -> if_4d6c7a.predicate\n        mod_f2e5f1.result -> if_4d6c7a.value\n        for_2a4c6b.onItem -> if_4d6c7a.execute\n        if_4d6c7a.then -> not_4d6c7a.left\n        1 -> and_e5e1f5.right\n        input_1a7d6e -> and_e5e1f5.left\n        for_2a4c6b.done -> continue_3f3c6b\n        if_4d6c7a.else -> for_2a4c6b.next\n        not_4d6c7a.right -> out_f2b4a7\n        and_e5e1f5.result -> out_f2b4a7\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") opposite_signs {\n        in(x: 10, y: -54, name: \"a\") property(Number) a_3c2a76\n        in(x: 120, y: -84, name: \"b\") property(Number) b_c2f9e8\n        in(x: 120, y: -126, name: \"execute\") trigger() execute_e2f325\n\n        out(x: 702, y: -6, name: \"out\") property(Bool) out_b543c4\n        out(x: 844, y: 134, name: \"continue\") trigger() continue_9a6f6b\n\n        instance(x: 287, y: 60) mul_d8d36c root.Std_k98ojb.Math.Mul {}\n        instance(x: 457, y: -14) lessthanorequal_0b732e root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_3c2a76 -> mul_d8d36c.first\n        b_c2f9e8 -> mul_d8d36c.second\n        0 -> lessthanorequal_0b732e.right\n        execute_e2f325 -> mul_d8d36c.execute\n        mul_d8d36c.result -> lessthanorequal_0b732e.left\n        lessthanorequal_0b732e.result -> out_b543c4\n        continue_9a6f6b -> execute_e2f325\n    }\n\n    \n\n    instance(x: -189, y: 222) opposite_signs_d9b5d1 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1920, y: -54, name: \"is_divisible_by_11\") property(Bool) is_divisible_by_11_8ba06b\n        out(x: 2066, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 573, y: -119) mod_e4c6f1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 953, y: 32) eq_c6b2e0 root.Std_k98ojb.Logic.Equal {}\n\n        input_f5c03d -> mod_e4c6f1.value\n        11 -> mod_e4c6f1.divisor\n        mod_e4c6f1.result -> eq_c6b2e0.left\n        0 -> eq_c6b2e0.right\n        eq_c6b2e0.result -> is_divisible_by_11_8ba06b\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -45, y: 175) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 216, y: -507, name: \"input\") property(String) input_7c5a7e\n        in(x: 228, y: -449, name: \"search\") property(String) search_f3dbb7\n        in(x: 221, y: -390, name: \"replace\") property(String) replace_d652d2\n        in(x: 213, y: -338, name: \"execute\") trigger() execute_6f72a7\n\n        out(x: 1641, y: -445, name: \"output\") property(String) output_9e83c0\n        out(x: 1796, y: -501, name: \"continue\") trigger() continue_c9b452\n\n        instance(x: 252, y: -272) replace_ba4b1f root.Std_k98ojb.Strings.Replace {}\n        input_7c5a7e -> replace_ba4b1f.input\n        search_f3dbb7 -> replace_ba4b1f.search\n        replace_d652d2 -> replace_ba4b1f.replace\n        execute_6f72a7 -> replace_ba4b1f.execute\n        replace_ba4b1f.output -> output_9e83c0\n    }\n\n    \n\n    instance(x: -226, y: 3) replace_characters_f653d1 root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: 10, y: -372, name: \"input\") property(String) input_5a6f2d\n        in(x: 448, y: -452, name: \"execute\") trigger() execute_e5b9c2\n\n        out(x: 1094, y: -375, name: \"out\") property(String) out_6a55f6\n        out(x: 1182, y: -513, name: \"continue\") trigger() continue_d7d4e6\n\n        instance(x: 602, y: -494) tolower_ba6c1c root.Std_k98ojb.Strings.ToLower {}\n        input_5a6f2d -> tolower_ba6c1c.input\n        execute_e5b9c2 -> tolower_ba6c1c.execute\n        tolower_ba6c1c.lowercase -> out_6a55f6\n        tolower_ba6c1c.done -> continue_d7d4e6\n    }\n\n    \n\n    instance(x: 380, y: -232) to_lower_case_9b647d root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 354, y: -120, name: \"numbers\") property(List<Number>) input_8e2d9b\n        in(x: 612, y: -173, name: \"execute\") trigger() execute_7c4a1f\n\n        out(x: 1563, y: -240, name: \"out\") property(Number) out_8e9d9b\n        out(x: 1843, y: 22, name: \"continue\") trigger() continue_b7c98c\n\n        instance(x: 756, y: -78) sets_difference_f0a0f1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 952, y: -334) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1237, y: -155) reduce_6f6a7a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -80, y: 54, name: \"element\") property(Number) element_f4d66e\n\n            out(x: 321, y: 24, name: \"out\") property(Bool) out_7a3b9f\n\n            instance(x: 168, y: -103) notequal_e5b267 root.Std_k98ojb.Logic.NotEqual {}\n            element_f4d66e -> notequal_e5b267.left\n            input_8e2d9b -> notequal_e5b267.right\n            notequal_e5b267.result -> out_7a3b9f\n        } -> sets_difference_f0a0f1.filter_func\n        func() {\n            in(x: -47, y: 48, name: \"element\") property(Number) element_252b9c\n\n            out(x: 364, y: 45, name: \"out\") property(Number) out_b7e0a9\n            element_252b9c -> out_b7e0a9\n        } -> map_6030c9.handler\n        input_8e2d9b -> sets_difference_f0a0f1.left\n        sets_difference_f0a0f1.difference -> map_6030c9.items\n        func() {\n            in(x: -47, y: 48, name: \"element\") property(Number) element_a52b9e\n            in(x: -47, y: 88, name: \"acc\") property(Number) acc_23d1a6\n\n            out(x: 301, y: 45, name: \"out\") property(Number) out_b7e1f9\n\n            instance(x: 166, y: -18) mul_d1a1b2 root.Std_k98ojb.Math.Mul {}\n            element_a52b9e -> mul_d1a1b2.first\n            acc_23d1a6 -> mul_d1a1b2.second\n            1 -> acc_23d1a6.default_value\n            mul_d1a1b2.result -> out_b7e1f9\n        } -> reduce_6f6a7a.handler\n        map_6030c9.output_list -> reduce_6f6a7a.items\n        sets_difference_f0a0f1.difference -> input_8e2d9b\n        1 -> reduce_6f6a7a.init_value\n        execute_7c4a1f -> map_6030c9.execute\n        map_6030c9.output_list -> sets_difference_f0a0f1.right\n        reduce_6f6a7a.result -> out_8e9d9b\n        reduce_6f6a7a.done -> continue_b7c98c\n    }\n\n    \n\n    instance(x: -43, y: 225) product_of_unique_numbers_e105da root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the dissimilar elements between two lists.\") find_dissimilar_elements {\n        in(x: 125, y: -167, name: \"listA\") property(List) listA_e43c7f\n        in(x: 108, y: -94, name: \"listB\") property(List) listB_0b5a7d\n        in(x: 122, y: -6, name: \"execute\") trigger() execute_a8e023\n\n        out(x: 1083, y: -339, name: \"out\") property(List) out_e4c045\n        out(x: 1191, y: -276, name: \"continue\") trigger() continue_0d1e84\n\n        instance(x: 343, y: -47) difference_ab3f8b root.Std_k98ojb.Sets.Difference {}\n        listA_e43c7f -> difference_ab3f8b.left\n        listB_0b5a7d -> difference_ab3f8b.right\n\n        instance(x: 612, y: -13) difference_1052e5 root.Std_k98ojb.Sets.Difference {}\n        listA_e43c7f -> difference_1052e5.right\n        listB_0b5a7d -> difference_1052e5.left\n\n        instance(x: 904, y: -61) concat_a82c65 root.Std_k98ojb.List.Concat {}\n        difference_ab3f8b.difference -> concat_a82c65.listA\n        difference_1052e5.difference -> concat_a82c65.listB\n\n        execute_a8e023 -> concat_a82c65.execute\n        concat_a82c65.listC -> out_e4c045\n        concat_a82c65.done -> continue_0d1e84\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 143, y: -207, name: \"list\") property(List) list_7a8d5f\n        in(x: 216, y: -109, name: \"rotate_by\") property(Number) rotate_by_eb5e5c\n        in(x: 235, y: 49, name: \"execute\") trigger() execute_7b7a8d\n\n        out(x: 1074, y: 262, name: \"out_list\") property(List) out_list_5c6f0f\n        out(x: 1059, y: -307, name: \"execute_out\") trigger() execute_out_ea538e\n\n        instance(x: 421, y: 101) modulo_b1b91d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 638, y: -127) slice_52f8c3 root.Std_k98ojb.List.Slice {}\n        instance(x: 641, y: 79) slice_e0e5a6 root.Std_k98ojb.List.Slice {}\n        instance(x: 865, y: -35) concat_7d27c7 root.Std_k98ojb.List.Concat {}\n\n        list_7a8d5f -> modulo_b1b91d.left\n        rotate_by_eb5e5c -> modulo_b1b91d.right\n        list_7a8d5f -> slice_52f8c3.list\n        list_7a8d5f -> slice_e0e5a6.list\n        modulo_b1b91d.result -> slice_52f8c3.start\n        0 -> slice_52f8c3.end\n        -1 -> slice_e0e5a6.end\n        slice_52f8c3.list -> concat_7d27c7.first_list\n        slice_e0e5a6.list -> concat_7d27c7.second_list\n        concat_7d27c7.concatenated_list -> out_list_5c6f0f\n        execute_7b7a8d -> modulo_b1b91d.execute\n        execute_7b7a8d -> slice_52f8c3.execute\n        execute_7b7a8d -> slice_e0e5a6.execute\n        execute_7b7a8d -> concat_7d27c7.execute\n        concat_7d27c7.execute_out -> execute_out_ea538e\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array\") sum_of_array {\n        in(x: 10, y: -365, name: \"array\") property(List) array_4b27a8\n        in(x: 10, y: -315, name: \"execute\") trigger() execute_b9e4f7\n\n        out(x: 1110, y: -45, name: \"result\") property(Number) result_56d5c4\n        out(x: 1240, y: -45, name: \"continue\") trigger() continue_e3a98c\n\n        instance(x: 420, y: -197) reduce_7b90f1 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -130, y: 45, name: \"accumulator\") property(Number) accumulator_1e5d6a\n            in(x: -120, y: 125, name: \"currentValue\") property(Number) current_value_d9807a\n\n            out(x: 130, y: 105, name: \"result\") property(Number) result_4f5d5c\n\n            instance(x: -20, y: 165) add_eb8b1e root.Std_k98ojb.Math.Add {}\n            accumulator_1e5d6a -> add_eb8b1e.first\n            current_value_d9807a -> add_eb8b1e.second\n            add_eb8b1e.result -> result_4f5d5c\n        } -> reduce_7b90f1.handler\n        0 -> reduce_7b90f1.initialValue\n        array_4b27a8 -> reduce_7b90f1.items\n        execute_b9e4f7 -> reduce_7b90f1.execute\n        reduce_7b90f1.result -> result_56d5c4\n        continue_e3a98c -> reduce_7b90f1.continue\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 245, y: -160, name: \"input\") property(Number) input_7c1d3a\n        in(x: 394, y: -271, name: \"execute\") trigger() execute_b3f81b\n\n        out(x: 1645, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1856, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 713, y: 242) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 954, y: -48) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 734, y: -206) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1519, y: -382) not_f72c54 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1121, y: -44) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1368, y: -189) modulo_f15f4d root.Std_k98ojb.Math.Modulo {}\n\n        2 -> generaterange_038fce.from\n        input_7c1d3a -> generaterange_038fce.to\n\n        generaterange_038fce.list -> for_8cb3f6.items\n        execute_b3f81b -> for_8cb3f6.reset\n        for_8cb3f6.item -> modulo_f15f4d.value\n        input_7c1d3a -> modulo_f15f4d.divisor\n\n        1 -> lessthanorequal_f11fda.left\n        modulo_f15f4d.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.value -> not_f72c54.input\n        not_f72c54.output -> out_f3db9f\n\n        for_8cb3f6.done -> continue_8ba06b\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5d7f\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2c4b3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6f8d7a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_9f1c4b\n\n        instance(x: 130, y: -20, name: \"mul_ab\") Math.Mul {}\n        a_3e5d7f -> mul_ab.first\n        b_8c4a9b -> mul_ab.second\n\n        instance(x: 260, y: -20, name: \"less_than_zero\") Math.LessThanOrEqual {}\n        mul_ab.result -> less_than_zero.left\n        0 -> less_than_zero.right\n\n        less_than_zero.result -> out_6f8d7a\n        execute_2c4b3e -> continue_9f1c4b\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4a5d root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4a5d.value\n        11 -> modulo_7c4a5d.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4a5d.result -> equal_6f3e4c.left\n        0 -> equal_6f3e4c.right\n\n        instance(x: 20, y: 40) if_123abc root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_123abc.execute\n        equal_6f3e4c.result -> if_123abc.predicate\n\n        if_123abc.value -> out_f3db9f\n        if_123abc.then -> continue_8ba06b\n        if_123abc.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3d4c\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9f5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3d\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_6b8a9f\n\n        instance(x: 150, y: -20) replace_3e4a5b root.Std_k98ojb.Strings.Replace {}\n        input_7a3d4c -> replace_3e4a5b.input\n        search_8b9f5e -> replace_3e4a5b.search\n        replace_2c7a3d -> replace_3e4a5b.replace\n        replace_3e4a5b.output -> output_6b8a9f\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e6f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 74, name: \"continue\") trigger() continue_8d9a2b\n\n        instance(x: 160, y: -122) unique_numbers_7f3e2d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 310, y: -122) reduce_product_5c4f6a root.Std_k98ojb.Iteration.Reduce {}\n        numbers_3c7d6a -> unique_numbers_7f3e2d.left\n        numbers_3c7d6a -> unique_numbers_7f3e2d.right\n        unique_numbers_7f3e2d.difference -> reduce_product_5c4f6a.items\n        func() {\n            in(x: 10, y: -10, name: \"accumulator\") property(Number) accumulator_8b9e6f\n            in(x: 10, y: 74, name: \"current_value\") property(Number) current_value_2d5c3a\n\n            out(x: 10, y: 158, name: \"result\") property(Number) result_2b9e6f\n\n            instance(x: 160, y: -10) mul_7f4e2d root.Std_k98ojb.Math.Mul {}\n            accumulator_8b9e6f -> mul_7f4e2d.first\n            current_value_2d5c3a -> mul_7f4e2d.second\n            1 -> result_2b9e6f\n        } -> reduce_product_5c4f6a.handler\n        execute_2b5e6f -> unique_numbers_7f3e2d.execute\n        unique_numbers_7f3e2d.done -> reduce_product_5c4f6a.execute\n        1 -> reduce_product_5c4f6a.initial_value\n        reduce_product_5c4f6a.result -> product_4b53c7\n        reduce_product_5c4f6a.done -> continue_8d9a2b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7f\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_2b4a4e\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6c3d7f\n\n        out(x: 1500, y: -189, name: \"out\") property(List) out_2b4a4e\n        out(x: 1500, y: -122, name: \"continue\") trigger() continue_6c3d7f\n\n        instance(x: 200, y: -89) difference_1 root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7f -> difference_1.left\n        list2_2b4a4e -> difference_1.right\n        instance(x: 200, y: -256) difference_2 root.Std_k98ojb.Sets.Difference {}\n        list2_2b4a4e -> difference_2.left\n        list1_4c3d7f -> difference_2.right\n        instance(x: 400, y: -172) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n        concat_1.concatenatedList -> out_2b4a4e\n        execute_6c3d7f -> continue_6c3d7f\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b4e1f\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1560, y: -198, name: \"rotated_list\") property(List) output_rotated_list_2b4e1f\n        out(x: 1560, y: -140, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 200, y: -80) length_9fba8c root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -80) modulo_6e1d7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 700, y: -80) sub_2f9d09 root.Std_k98ojb.Math.Sub {}\n        instance(x: 950, y: -80) slice_start_6e1d7a root.Std_k98ojb.List.Slice {}\n        instance(x: 950, y: -30) slice_end_2f9d09 root.Std_k98ojb.List.Slice {}\n        instance(x: 1200, y: -55) concat_6e1d7a root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_9fba8c.list\n        input_rotate_by_2b4e1f -> modulo_6e1d7a.value\n        length_9fba8c.length -> modulo_6e1d7a.divisor\n        length_9fba8c.length -> sub_2f9d09.first\n        modulo_6e1d7a.result -> sub_2f9d09.second\n        input_list_7c3a4d -> slice_start_6e1d7a.list\n        sub_2f9d09.result -> slice_start_6e1d7a.start\n        length_9fba8c.length -> slice_start_6e1d7a.end\n        input_list_7c3a4d -> slice_end_2f9d09.list\n        0 -> slice_end_2f9d09.start\n        sub_2f9d09.result -> slice_end_2f9d09.end\n        slice_start_6e1d7a.slice -> concat_6e1d7a.first\n        slice_end_2f9d09.slice -> concat_6e1d7a.second\n        execute_7c3a4d -> length_9fba8c.execute\n        concat_6e1d7a.concatenated -> output_rotated_list_2b4e1f\n        concat_6e1d7a.execute -> continue_7c3a4d\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -256, name: \"array\") property(List<Number>) array_7f3c4a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_7b5d0e\n\n        out(x: 10, y: 206, name: \"sum\") property(Number) sum_7b5d0e\n        out(x: 10, y: 243, name: \"continue\") trigger() continue_7b5d0e\n\n        instance(x: 10, y: -98) reduce_6f3c4a root.Std_k98ojb.Iteration.Reduce {}\n        func(doc: \"adds two numbers.\") add_numbers {\n            in(x: 20, y: -170, name: \"first\") property(Number) first_5d0e\n            in(x: 20, y: -134, name: \"second\") property(Number) second_5d0e\n\n            out(x: 20, y: 168, name: \"result\") property(Number) result_5d0e\n\n            instance(x: 20, y: -79) add_5d0e root.Std_k98ojb.Math.Add {}\n            first_5d0e -> add_5d0e.first\n            second_5d0e -> add_5d0e.second\n            add_5d0e.result -> result_5d0e\n        } -> reduce_6f3c4a.handler\n        0 -> reduce_6f3c4a.initial_value\n        array_7f3c4a -> reduce_6f3c4a.items\n        execute_7b5d0e -> reduce_6f3c4a.execute\n        reduce_6f3c4a.result -> sum_7b5d0e\n        reduce_6f3c4a.done -> continue_7b5d0e\n    }\n\n    \n\n    instance(x: -189, y: 222) sum_array_f0be66 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c4e\n\n        out(x: 1110, y: -150, name: \"is_prime\") property(Bool) is_prime_7f3a4d\n        out(x: 1110, y: -210, name: \"continue\") trigger() continue_8b6c4e\n\n        instance(x: 190, y: -150) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 370, y: -150) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 550, y: -150) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        instance(x: 730, y: -150) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 910, y: -150) and_80a119 root.Std_k98ojb.Logic.And {}\n\n        input_7f3a4d -> generaterange_038fce.from\n        2 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n\n        execute_8b6c4e -> for_8cb3f6.reset\n\n        input_7f3a4d -> modulo_f11fda.value\n        for_8cb3f6.item -> modulo_f11fda.divisor\n        modulo_f11fda.result -> if_07b8c7.predicate\n\n        1 -> and_80a119.left\n        input_7f3a4d -> and_80a119.right\n\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> for_8cb3f6.next\n        if_07b8c7.then -> continue_8b6c4e\n        and_80a119.result -> is_prime_7f3a4d\n\n        for_8cb3f6.done -> if_07b8c7.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 345, y: -210, name: \"a\") property(Number) a_7f6e1d\n        in(x: 345, y: -150, name: \"b\") property(Number) b_b8e97c\n        in(x: 345, y: -90, name: \"execute\") trigger() execute_e2a3f6\n\n        out(x: 1645, y: -150, name: \"out\") property(Bool) out_7b4e8d\n        out(x: 1645, y: -90, name: \"continue\") trigger() continue_2e2a3c\n\n        instance(x: 545, y: -150) mul_f6f9ac root.Std_k98ojb.Math.Mul {}\n        a_7f6e1d -> mul_f6f9ac.first\n        b_b8e97c -> mul_f6f9ac.second\n\n        instance(x: 945, y: -150) less_than_zero_e3a2d7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_f6f9ac.result -> less_than_zero_e3a2d7.left\n        0 -> less_than_zero_e3a2d7.right\n\n        instance(x: 1345, y: -150) not_5c2b8e root.Std_k98ojb.Logic.Not {}\n        less_than_zero_e3a2d7.result -> not_5c2b8e.input\n        not_5c2b8e.output -> out_7b4e8d\n\n        execute_e2a3f6 -> mul_f6f9ac.execute\n        continue_2e2a3c -> less_than_zero_e3a2d7.execute\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -25, y: -64, name: \"input\") property(Number) input_f3db9f\n        in(x: -20, y: -175, name: \"execute\") trigger() execute_8ba06b\n\n        out(x: 205, y: -130, name: \"result\") property(Bool) result_b4554f\n        out(x: 210, y: -200, name: \"continue\") trigger() continue_7d9e8c\n\n        instance(x: 160, y: -100) modulo_3b9d9a root.Std_k98ojb.Math.Modulo {}\n        input_f3db9f -> modulo_3b9d9a.value\n        11 -> modulo_3b9d9a.divisor\n        instance(x: 205, y: -64) equal_7e0a4f root.Std_k98ojb.Logic.Equal {}\n        modulo_3b9d9a.result -> equal_7e0a4f.left\n        0 -> equal_7e0a4f.right\n        execute_8ba06b -> modulo_3b9d9a.execute\n        equal_7e0a4f.result -> result_b4554f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 32, y: -160, name: \"input\") property(String) input_7c4f5a\n        in(x: 89, y: -95, name: \"search\") property(String) search_c60e7d\n        in(x: 154, y: -32, name: \"replace\") property(String) replace_e23b7c\n\n        out(x: 1000, y: -180, name: \"output\") property(String) output_96e2c8\n        instance(x: 324, y: -155) replace_f88f6a root.Std_k98ojb.Strings.Replace {}\n        input_7c4f5a -> replace_f88f6a.input\n        search_c60e7d -> replace_f88f6a.search\n        replace_e23b7c -> replace_f88f6a.replace\n        replace_f88f6a.output -> output_96e2c8\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 106, y: -345, name: \"input\") property(String) input_2a7f9d\n    in(x: 126, y: -246, name: \"execute\") trigger() execute_b84e7c\n\n    out(x: 1207, y: -325, name: \"output\") property(String) output_2b5f9d\n    out(x: 1205, y: -216, name: \"continue\") trigger() continue_c87a4c\n\n    instance(x: 579, y: -346) tolower_d76d7b root.Std_k98ojb.Strings.ToLower {}\n    input_2a7f9d -> tolower_d76d7b.input\n    execute_b84e7c -> tolower_d76d7b.execute\n    tolower_d76d7b.output -> output_2b5f9d\n    tolower_d76d7b.done -> continue_c87a4c\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 342, y: -156, name: \"numbers\") property(List<Number>) numbers_7f0c5d\n        in(x: 588, y: -156, name: \"execute\") trigger() execute_f5e9a3\n\n        out(x: 1248, y: -12, name: \"product\") property(Number) product_7b9f5c\n        out(x: 1402, y: 120, name: \"continue\") trigger() continue_e6e71d\n\n        instance(x: 342, y: -36) reduce_d4b80d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 588, y: 12) filter_2f74b4 root.Std_k98ojb.Query.Filter {}\n        instance(x: 834, y: -60) unique_numbers_ea7b2b root.Std_k98ojb.Sets.Difference {}\n        instance(x: 1080, y: -60) expression_5b0c6d root.Std_k98ojb.Math.Expression {\n            expression: \"a * b\"\n        }\n        numbers_7f0c5d -> unique_numbers_ea7b2b.left\n        numbers_7f0c5d -> filter_2f74b4.items\n        func() {\n            in(x: -68, y: 13, name: \"it\") property(Number) it_9c5b1a\n\n            out(x: 232, y: 13, name: \"out\") property(Bool) out_bf760e\n\n            instance(x: 40, y: -81) lessthanorequal_f24d54 root.Std_k98ojb.Math.LessThanOrEqual {}\n            it_9c5b1a -> lessthanorequal_f24d54.left\n            0 -> lessthanorequal_f24d54.right\n            lessthanorequal_f24d54.result -> out_bf760e\n        } -> filter_2f74b4.where\n        numbers_7f0c5d -> unique_numbers_ea7b2b.right\n        filter_2f74b4.output_list -> reduce_d4b80d.items\n        1 -> reduce_d4b80d.accumulator\n        expression_5b0c6d.result -> reduce_d4b80d.reducer\n        unique_numbers_ea7b2b.list -> filter_2f74b4.items\n        execute_f5e9a3 -> filter_2f74b4.execute\n        reduce_d4b80d.result -> product_7b9f5c\n        continue_e6e71d -> reduce_d4b80d.continue\n    }\n\n    \n\n    instance(x: -189, y: 222) product_of_unique_numbers_f0be66 root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: 263, y: -154, name: \"list1\") property(List) list1_0c4f79\n        in(x: 263, y: -86, name: \"list2\") property(List) list2_ba6e1d\n        in(x: 263, y: 25, name: \"execute\") trigger() execute_eb0c1f\n\n        out(x: 1749, y: -118, name: \"out\") property(List) out_31a17e\n        out(x: 1762, y: 15, name: \"continue\") trigger() continue_c356d0\n\n        instance(x: 479, y: -216) difference_e8b164 root.Std_k98ojb.Sets.Difference {}\n        list1_0c4f79 -> difference_e8b164.left\n        list2_ba6e1d -> difference_e8b164.right\n        instance(x: 479, y: -53) difference_2c8d17 root.Std_k98ojb.Sets.Difference {}\n        list2_ba6e1d -> difference_2c8d17.left\n        list1_0c4f79 -> difference_2c8d17.right\n        instance(x: 895, y: -134) concat_f691b7 root.Std_k98ojb.List.Concat {}\n        difference_e8b164.difference -> concat_f691b7.left\n        difference_2c8d17.difference -> concat_f691b7.right\n        concat_f691b7.concatenated -> out_31a17e\n        execute_eb0c1f -> continue_c356d0\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 210, y: -345, name: \"list\") property(List) input_list_7e6c5d\n        in(x: 208, y: -499, name: \"rotate_by\") property(Number) rotate_by_f6f21d\n        in(x: 208, y: -397, name: \"execute\") trigger() execute_4b5a8e\n\n        out(x: 1622, y: -429, name: \"rotated_list\") property(List) rotated_list_e8c22a\n        out(x: 1602, y: -337, name: \"continue\") trigger() continue_5f9d4e\n\n        instance(x: 536, y: -417) length_b04b9b root.Std_k98ojb.List.Length {}\n        instance(x: 752, y: -416) mod_e20b84 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 938, y: -416) sub_3a9c5e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1170, y: -416) slice_e5d2b4 root.Std_k98ojb.List.Slice {}\n        instance(x: 1164, y: -556) slice_35f9a4 root.Std_k98ojb.List.Slice {}\n        instance(x: 1380, y: -478) concat_e2e7c8 root.Std_k98ojb.List.Concat {}\n\n        input_list_7e6c5d -> length_b04b9b.list\n        rotate_by_f6f21d -> mod_e20b84.value\n        length_b04b9b.length -> mod_e20b84.divisor\n        mod_e20b84.result -> sub_3a9c5e.first\n        length_b04b9b.length -> sub_3a9c5e.second\n        input_list_7e6c5d -> slice_e5d2b4.list\n        0 -> slice_e5d2b4.start\n        sub_3a9c5e.result -> slice_e5d2b4.end\n        input_list_7e6c5d -> slice_35f9a4.list\n        sub_3a9c5e.result -> slice_35f9a4.start\n        length_b04b9b.length -> slice_35f9a4.end\n        slice_e5d2b4.slice -> concat_e2e7c8.first\n        slice_35f9a4.slice -> concat_e2e7c8.second\n        concat_e2e7c8.concatenated -> rotated_list_e8c22a\n        execute_4b5a8e -> continue_5f9d4e\n    }\n\n    \n\n    instance(x: -160, y: 302) rotate_list_right_7b4664 root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 342, y: -157, name: \"array\") property(List<Number>) array_0c3a6e\n        in(x: 398, y: -306, name: \"execute\") trigger() execute_6d031f\n\n        out(x: 2042, y: -57, name: \"sum\") property(Number) sum_7b5a0e\n        out(x: 2089, y: 222, name: \"continue\") trigger() continue_6b3d15\n\n        instance(x: 1409, y: -145) reduce_d2d26c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1736, y: -204) add_ea49e6 root.Std_k98ojb.Math.Add {}\n        array_0c3a6e -> reduce_d2d26c.items\n        execute_6d031f -> reduce_d2d26c.execute\n        0 -> reduce_d2d26c.accumulator\n        func() {\n            in(x: -89, y: 74, name: \"current\") property(Number) current_5e9b1c\n            in(x: -38, y: 174, name: \"accumulator\") property(Number) accumulator_f22a60\n\n            out(x: 319, y: 125, name: \"out\") property(Number) out_6c5e5d\n\n            current_5e9b1c -> add_ea49e6.first\n            accumulator_f22a60 -> add_ea49e6.second\n            add_ea49e6.result -> out_6c5e5d\n        } -> reduce_d2d26c.handler\n        reduce_d2d26c.accumulator -> sum_7b5a0e\n        reduce_d2d26c.done -> continue_6b3d15\n    }\n\n    \n\n    instance(x: -48, y: 292) sum_array_c5f4b7 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 30, y: -250, name: \"input\") property(Number) input_1a7d6e\n        in(x: 30, y: -190, name: \"execute\") trigger() execute_e48b2f\n\n        out(x: 1260, y: -250, name: \"is_prime\") property(Bool) is_prime_7a7d6e\n        out(x: 1390, y: -190, name: \"continue\") trigger() continue_e48b2f\n\n        instance(x: 120, y: -100) generaterange_5c4f55 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 360, y: -50) for_7d7d7a root.Std_k98ojb.Std.For {}\n        instance(x: 620, y: -100) mod_f3f3f3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 840, y: -50) if_9d9d9a root.Std_k98ojb.Std.If {}\n        instance(x: 1060, y: -100) and_7f7f7e root.Std_k98ojb.Logic.And {}\n        input_1a7d6e -> generaterange_5c4f55.to\n        2 -> generaterange_5c4f55.from\n        generaterange_5c4f55.list -> for_7d7d7a.items\n        execute_e48b2f -> for_7d7d7a.reset\n        input_1a7d6e -> mod_f3f3f3.value\n        for_7d7d7a.item -> mod_f3f3f3.divisor\n        0 -> if_9d9d9a.predicate\n        mod_f3f3f3.result -> and_7f7f7e.left\n        input_1a7d6e -> math_expression_5c4f55.gen_0\n        for_7d7d7a.item -> math_expression_5c4f55.gen_1\n        math_expression_5c4f55.result -> and_7f7f7e.right\n        if_9d9d9a.then -> continue_e48b2f\n        for_7d7d7a.onItem -> if_9d9d9a.execute\n        if_9d9d9a.value -> is_prime_7a7d6e\n        and_7f7f7e.result -> if_9d9d9a.predicate\n        for_7d7d7a.done -> continue_e48b2f\n    }\n\n    instance(x: 30, y: -50) math_expression_5c4f55 root.Std_k98ojb.Math.Expression {\n        expression: \"(input / i == Math.floor(input / i))\"\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") opposite_signs {\n        in(x: 10, y: -54, name: \"a\") property(Number) a_32c9d4\n        in(x: 176, y: -83, name: \"b\") property(Number) b_f96f9e\n        in(x: 101, y: -173, name: \"execute\") trigger() execute_ea65ce\n\n        out(x: 248, y: -109, name: \"result\") property(Bool) result_6ed9d4\n        out(x: 342, y: 4, name: \"continue\") trigger() continue_fba3e7\n\n        instance(x: 154, y: 18) mathexpression_0e6eb3 root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_32c9d4 -> mathexpression_0e6eb3.gen_0\n        b_f96f9e -> mathexpression_0e6eb3.gen_1\n        execute_ea65ce -> mathexpression_0e6eb3.execute\n        mathexpression_0e6eb3.result -> result_6ed9d4\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1920, y: -54, name: \"out\") property(Bool) out_1c7c5b\n        out(x: 1867, y: 120, name: \"continue\") trigger() continue_6ab7f2\n\n        instance(x: 374, y: -209) modulo_4da570 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 744, y: -123) expression_ea97aa root.Std_k98ojb.Math.Expression {\n            expression: \"result == 0\"\n        }\n        input_f5c03d -> modulo_4da570.value\n        11 -> modulo_4da570.divisor\n        execute_27b8c3 -> continue_6ab7f2\n        modulo_4da570.result -> expression_ea97aa.gen_0\n        expression_ea97aa.result -> out_1c7c5b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 216, y: -507, name: \"input\") property(String) input_7a74a9\n        in(x: 228, y: -357, name: \"search\") property(String) search_f34d0c\n        in(x: 216, y: -249, name: \"replace\") property(String) replace_8bcbdb\n        in(x: 230, y: -135, name: \"execute\") trigger() execute_a42bf4\n\n        out(x: 1766, y: -367, name: \"output\") property(String) output_25dcbb\n        out(x: 1894, y: -260, name: \"continue\") trigger() continue_e691d4\n\n        instance(x: 637, y: -507) characters_c09c4f root.Std_k98ojb.Strings.Characters {}\n        instance(x: 639, y: -357) replace_77df32 root.Std_k98ojb.Strings.Replace {}\n        input_7a74a9 -> characters_c09c4f.input\n        search_f34d0c -> replace_77df32.search\n        replace_8bcbdb -> replace_77df32.replace\n\n        instance(x: 1156, y: -507) map_0630eb root.Std_k98ojb.Iteration.Map {}\n        characters_c09c4f.characters -> map_0630eb.items\n        func() {\n            in(x: -78, y: 20, name: \"character\") property(String) character_a1d5a1\n\n            out(x: 392, y: 20, name: \"output_character\") property(String) output_character_47a76b\n\n            instance(x: 118, y: -113) equal_c23e6c root.Std_k98ojb.Logic.Equal {}\n            character_a1d5a1 -> equal_c23e6c.left\n            search_f34d0c -> equal_c23e6c.right\n\n            instance(x: 214, y: -7) if_6ef6df root.Std_k98ojb.Std.If {}\n            character_a1d5a1 -> if_6ef6df.then\n            replace_8bcbdb -> if_6ef6df.else\n            equal_c23e6c.result -> if_6ef6df.predicate\n\n            if_6ef6df.value -> output_character_47a76b\n        } -> map_0630eb.handler\n\n        instance(x: 1598, y: -370) join_2becc2 root.Std_k98ojb.Strings.Join {}\n        \"\" -> join_2becc2.separator\n        map_0630eb.output_list -> join_2becc2.list\n        join_2becc2.result -> output_25dcbb\n\n        execute_a42bf4 -> continue_e691d4\n    }\n\n    \n\n    instance(x: -80, y: 7) replace_characters_f3a8ab root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: 10, y: -372, name: \"input\") property(String) input_5a6dcb\n        in(x: 344, y: -390, name: \"execute\") trigger() execute_c73b0c\n\n        out(x: 1890, y: -387, name: \"out\") property(String) out_f1e8f5\n        out(x: 1626, y: -189, name: \"continue\") trigger() continue_c6b99d\n\n        instance(x: 1023, y: -401) tolower_bca7c6 root.Std_k98ojb.Strings.ToLower {}\n        input_5a6dcb -> tolower_bca7c6.input\n        execute_c73b0c -> tolower_bca7c6.execute\n        tolower_bca7c6.value -> out_f1e8f5\n        tolower_bca7c6.done -> continue_c6b99d\n    }\n\n    \n\n    instance(x: 242, y: -46) to_lower_case_0f4f3c root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 354, y: -120, name: \"numbers\") property(List<Number>) input_84a6d3\n        in(x: 354, y: -72, name: \"execute\") trigger() execute_b9e4f2\n\n        out(x: 1628, y: -40, name: \"result\") property(Number) result_6c2b3d\n        out(x: 1628, y: 16, name: \"continue\") trigger() continue_a7594a\n\n        instance(x: 601, y: 32) intersection_dcb3f5 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 866, y: -218) for_615eb0 root.Std_k98ojb.Std.For {}\n        instance(x: 1149, y: -76) reduce_e3a4e0 root.Std_k98ojb.Iteration.Reduce {}\n        input_84a6d3 -> intersection_dcb3f5.left\n        input_84a6d3 -> intersection_dcb3f5.right\n        1 -> reduce_e3a4e0.accumulator\n        func() {\n            in(x: -79, y: -120, name: \"previous\") property(Number) previous_b1c5e4\n            in(x: -81, y: -66, name: \"current\") property(Number) current_e3b70d\n\n            out(x: 412, y: -93, name: \"out\") property(Number) out_6d6566\n\n            instance(x: 76, y: -80) mul_c8a2dd root.Std_k98ojb.Math.Mul {}\n            previous_b1c5e4 -> mul_c8a2dd.first\n            current_e3b70d -> mul_c8a2dd.second\n            mul_c8a2dd.result -> out_6d6566\n        } -> reduce_e3a4e0.reducer\n        intersection_dcb3f5.intersect -> for_615eb0.items\n        execute_b9e4f2 -> for_615eb0.reset\n        for_615eb0.onItem -> reduce_e3a4e0.execute\n        for_615eb0.done -> continue_a7594a\n        intersection_dcb3f5.intersect -> reduce_e3a4e0.items\n        reduce_e3a4e0.accumulator -> result_6c2b3d\n    }\n\n    \n\n    instance(x: -189, y: 222) product_of_unique_numbers_bda2d3 root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the dissimilar elements between two lists.\") find_dissimilar_elements {\n        in(x: 125, y: -167, name: \"listA\") property(List) listA_b4b37f\n        in(x: 108, y: -93, name: \"listB\") property(List) listB_6c2e0d\n        in(x: 350, y: 185, name: \"execute\") trigger() execute_498a7a\n\n        out(x: 664, y: 239, name: \"result\") property(List) result_d4eaa3\n        out(x: 693, y: -201, name: \"continue\") trigger() continue_ebf5f2\n\n        instance(x: 867, y: -65, name: \"DifferenceAB\") root.Std_k98ojb.Sets.Difference {}\n        instance(x: 871, y: 43, name: \"DifferenceBA\") root.Std_k98ojb.Sets.Difference {}\n        instance(x: 870, y: -256) concat_e7cbef root.Std_k98ojb.List.Concat {}\n\n        listA_b4b37f -> DifferenceAB.left\n        listB_6c2e0d -> DifferenceAB.right\n\n        listB_6c2e0d -> DifferenceBA.left\n        listA_b4b37f -> DifferenceBA.right\n        \n        DifferenceAB.difference -> concat_e7cbef.first\n        DifferenceBA.difference -> concat_e7cbef.second\n\n        execute_498a7a -> concat_e7cbef.trigger\n\n        concat_e7cbef.list -> result_d4eaa3\n        concat_e7cbef.trigger -> continue_ebf5f2\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 143, y: -207, name: \"list\") property(List) list_3a86b7\n        in(x: 549, y: -223, name: \"execute\") trigger() execute_6d5e5c\n        in(x: 173, y: -90, name: \"k\") property(Number) k_d53d5f\n\n        out(x: 1718, y: -54, name: \"out\") property(List) out_ba7ab5\n        out(x: 1845, y: 126, name: \"continue\") trigger() continue_6c96ee\n\n        instance(x: 1016, y: -50) slice_07c3e2 root.Std_k98ojb.List.Slice {}\n        instance(x: 1406, y: -147) concat_c1dbaf root.Std_k98ojb.List.Concat {}\n        instance(x: 895, y: -249) slice_d10a3e root.Std_k98ojb.List.Slice {}\n        instance(x: 566, y: -145) mod_7f9dca root.Std_k98ojb.Math.Modulo {}\n        instance(x: 729, y: -88) length_e055ee root.Std_k98ojb.List.Length {}\n        list_3a86b7 -> length_e055ee.list\n        k_d53d5f -> mod_7f9dca.value\n        length_e055ee.length -> mod_7f9dca.divisor\n        execute_6d5e5c -> continue_6c96ee\n        list_3a86b7 -> slice_d10a3e.list\n        list_3a86b7 -> slice_07c3e2.list\n        length_e055ee.length -> slice_d10a3e.start\n        mod_7f9dca.result -> slice_d10a3e.end\n        0 -> slice_07c3e2.start\n        mod_7f9dca.result -> slice_07c3e2.end\n        slice_07c3e2.slice -> concat_c1dbaf.first\n        slice_d10a3e.slice -> concat_c1dbaf.second\n        concat_c1dbaf.concatenatedList -> out_ba7ab5\n    }\n\n    \n\n    instance(x: 69, y: -4) rotate_list_right_f846ad root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array\") sum_of_array {\n        in(x: 10, y: -365, name: \"array\") property(List<Number>) array_4c07b7\n        in(x: 189, y: -211, name: \"execute\") trigger() execute_ea6f1d\n\n        out(x: 1677, y: -52, name: \"out\") property(Number) sum_f3b90c\n        out(x: 1588, y: -144, name: \"continue\") trigger() continue_6b6ed3\n\n        instance(x: 337, y: -57) reduce_2eaf0f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -38, y: 41, name: \"accumulator\") property(Number) accumulator_d016a8\n            in(x: -41, y: 157, name: \"current_value\") property(Number) current_value_7e9dc2\n\n            out(x: 325, y: 68, name: \"out\") property(Number) out_12c25d\n\n            instance(x: 124, y: -20) add_9f7b11 root.Std_k98ojb.Math.Add {}\n            accumulator_d016a8 -> add_9f7b11.first\n            current_value_7e9dc2 -> add_9f7b11.second\n            add_9f7b11.result -> out_12c25d\n        } -> reduce_2eaf0f.reducer\n        0 -> reduce_2eaf0f.initialValue\n        array_4c07b7 -> reduce_2eaf0f.items\n        execute_ea6f1d -> reduce_2eaf0f.execute\n        reduce_2eaf0f.result -> sum_f3b90c\n        continue_6b6ed3 -> reduce_2eaf0f.continue\n    }\n\n    \n\n    instance(x: 58, y: -47) sum_of_array_f8a10d root.main.sum_of_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 245, y: -160, name: \"input\") property(Number) input_7d9fcb\n        in(x: 308, y: -316, name: \"execute\") trigger() execute_b7d4e0\n\n        out(x: 1523, y: -160, name: \"is_prime\") property(Bool) is_prime_f3a0b6\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 569, y: -148) generaterange_e5f4d0 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 873, y: -143) for_c5c2a8 root.Std_k98ojb.Std.For {}\n        instance(x: 673, y: -16) mod_d7caea root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1086, y: -4) if_0e509d root.Std_k98ojb.Std.If {}\n        instance(x: 1243, y: 263) and_a78b8a root.Std_k98ojb.Logic.And {}\n        instance(x: 1074, y: -182) not_05e1ae root.Std_k98ojb.Logic.Not {}\n        input_7d9fcb -> generaterange_e5f4d0.from\n        2 -> generaterange_e5f4d0.to\n        generaterange_e5f4d0.list -> for_c5c2a8.items\n        input_7d9fcb -> mod_d7caea.value\n        for_c5c2a8.item -> mod_d7caea.divisor\n        0 -> if_0e509d.predicate\n        not_05e1ae.result -> and_a78b8a.left\n        input_7d9fcb -> if_0e509d.value\n        for_c5c2a8.onItem -> mod_d7caea.execute\n        mod_d7caea.result -> if_0e509d.execute\n        1 == input_7d9fcb -> not_05e1ae.input\n        and_a78b8a.right <- for_c5c2a8.done\n        is_prime_f3a0b6 <- and_a78b8a.result\n        if_0e509d.then -> continue_8ba06b\n        if_0e509d.else -> not_05e1ae.execute\n        execute_b7d4e0 -> for_c5c2a8.reset\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5d7f\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2c4b3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6f8d7a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_9f1c4b\n\n        instance(x: 130, y: -20, name: \"mul_ab\") Math.Mul {}\n        a_3e5d7f -> mul_ab.first\n        b_8c4a9b -> mul_ab.second\n\n        instance(x: 260, y: -20, name: \"less_than_zero\") Math.LessThanOrEqual {}\n        mul_ab.result -> less_than_zero.left\n        0 -> less_than_zero.right\n\n        less_than_zero.result -> out_6f8d7a\n        execute_2c4b3e -> continue_9f1c4b\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -20, y: -40, name: \"input\") property(Number) input_f5c03d\n        in(x: -20, y: 80, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 160, y: -40, name: \"out\") property(Bool) out_f3db9f\n        out(x: 160, y: 80, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 20, y: -120) modulo_7c4a5d root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7c4a5d.value\n        11 -> modulo_7c4a5d.divisor\n\n        instance(x: 20, y: -40) equal_6f3e4c root.Std_k98ojb.Logic.Equal {}\n        modulo_7c4a5d.result -> equal_6f3e4c.left\n        0 -> equal_6f3e4c.right\n\n        instance(x: 20, y: 40) if_123abc root.Std_k98ojb.Std.If {}\n        execute_27b8c3 -> if_123abc.execute\n        equal_6f3e4c.result -> if_123abc.predicate\n\n        if_123abc.value -> out_f3db9f\n        if_123abc.then -> continue_8ba06b\n        if_123abc.else -> continue_8ba06b\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 10, y: -20, name: \"input\") property(String) input_7a3f4d\n        in(x: 10, y: 60, name: \"search\") property(String) search_8b9c5e\n        in(x: 10, y: 140, name: \"replace\") property(String) replace_2c7a3f\n\n        out(x: 10, y: -140, name: \"output\") property(String) output_6d8b9c\n\n        instance(x: 150, y: -20) replace_3e2b1d root.Std_k98ojb.Strings.Replace {}\n        input_7a3f4d -> replace_3e2b1d.input\n        search_8b9c5e -> replace_3e2b1d.search\n        replace_2c7a3f -> replace_3e2b1d.replace\n        replace_3e2b1d.output -> output_6d8b9c\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 100, y: 50, name: \"input\") property(String) input_7a2f3d\n    out(x: 600, y: 50, name: \"output\") property(String) output_4c8b9e\n\n    instance(x: 350, y: 50) tolower_1a2f3d root.Std_k98ojb.Strings.ToLower {}\n    \n    input_7a2f3d -> tolower_1a2f3d.input\n    tolower_1a2f3d.output -> output_4c8b9e\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 10, y: -254, name: \"numbers\") property(List<Number>) numbers_3c7d6a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_2b5e6f\n\n        out(x: 10, y: 10, name: \"product\") property(Number) product_4b53c7\n        out(x: 10, y: 74, name: \"continue\") trigger() continue_8d9a2b\n\n        instance(x: 164, y: -122) sets_intersection_1e4f1a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 305, y: -71) list_empty_2c3d1d root.Std_k98ojb.List.Empty {}\n        instance(x: 461, y: -122) sets_difference_2f4a1e root.Std_k98ojb.Sets.Difference {}\n        instance(x: 607, y: -122) iteration_reduce_3c5d1f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 10, y: 10, name: \"accumulator\") property(Number) accumulator_4a5d1e\n            in(x: 10, y: 74, name: \"current\") property(Number) current_2b5e6f\n\n            out(x: 10, y: 138, name: \"result\") property(Number) result_8d9a2b\n\n            instance(x: 164, y: -122) math_mul_7c7d6a root.Std_k98ojb.Math.Mul {}\n            accumulator_4a5d1e -> math_mul_7c7d6a.first\n            current_2b5e6f -> math_mul_7c7d6a.second\n            math_mul_7c7d6a.result -> result_8d9a2b\n        } -> iteration_reduce_3c5d1f.reducer\n        1 -> iteration_reduce_3c5d1f.initialValue\n        numbers_3c7d6a -> sets_intersection_1e4f1a.left\n        list_empty_2c3d1d.list -> sets_intersection_1e4f1a.right\n        numbers_3c7d6a -> sets_difference_2f4a1e.left\n        sets_intersection_1e4f1a.intersection -> sets_difference_2f4a1e.right\n        sets_difference_2f4a1e.difference -> iteration_reduce_3c5d1f.items\n        execute_2b5e6f -> continue_8d9a2b\n        iteration_reduce_3c5d1f.result -> product_4b53c7\n    }\n\n    \n\n    instance(x: -189, y: 222) product_of_unique_numbers_f0be66 root.main.product_of_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: 10, y: -256, name: \"list1\") property(List) list1_4c3d7f\n        in(x: 10, y: -189, name: \"list2\") property(List) list2_2b4a4e\n        in(x: 10, y: -122, name: \"execute\") trigger() execute_6c3d7f\n\n        out(x: 1500, y: -189, name: \"out\") property(List) out_2b4a4e\n        out(x: 1500, y: -122, name: \"continue\") trigger() continue_6c3d7f\n\n        instance(x: 200, y: -89) difference_1 root.Std_k98ojb.Sets.Difference {}\n        list1_4c3d7f -> difference_1.left\n        list2_2b4a4e -> difference_1.right\n        instance(x: 200, y: -256) difference_2 root.Std_k98ojb.Sets.Difference {}\n        list2_2b4a4e -> difference_2.left\n        list1_4c3d7f -> difference_2.right\n        instance(x: 400, y: -172) concat_1 root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n        concat_1.concatenatedList -> out_2b4a4e\n        execute_6c3d7f -> continue_6c3d7f\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 10, y: -256, name: \"list\") property(List) input_list_7c3a4d\n        in(x: 10, y: -198, name: \"rotate_by\") property(Number) input_rotate_by_2b4e1f\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_7c3a4d\n\n        out(x: 1560, y: -198, name: \"rotated_list\") property(List) output_rotated_list_2b4e1f\n        out(x: 1560, y: -140, name: \"continue\") trigger() continue_7c3a4d\n\n        instance(x: 200, y: -80) length_9fba8c root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -80) modulo_6e1d7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 700, y: -80) sub_2f9d09 root.Std_k98ojb.Math.Sub {}\n        instance(x: 950, y: -80) slice_start_6e1d7a root.Std_k98ojb.List.Slice {}\n        instance(x: 950, y: -30) slice_end_2f9d09 root.Std_k98ojb.List.Slice {}\n        instance(x: 1200, y: -55) concat_6e1d7a root.Std_k98ojb.List.Concat {}\n\n        input_list_7c3a4d -> length_9fba8c.list\n        input_rotate_by_2b4e1f -> modulo_6e1d7a.value\n        length_9fba8c.length -> modulo_6e1d7a.divisor\n        length_9fba8c.length -> sub_2f9d09.first\n        modulo_6e1d7a.result -> sub_2f9d09.second\n        input_list_7c3a4d -> slice_start_6e1d7a.list\n        sub_2f9d09.result -> slice_start_6e1d7a.start\n        length_9fba8c.length -> slice_start_6e1d7a.end\n        input_list_7c3a4d -> slice_end_2f9d09.list\n        0 -> slice_end_2f9d09.start\n        sub_2f9d09.result -> slice_end_2f9d09.end\n        slice_start_6e1d7a.slice -> concat_6e1d7a.first\n        slice_end_2f9d09.slice -> concat_6e1d7a.second\n        execute_7c3a4d -> length_9fba8c.execute\n        concat_6e1d7a.concatenated -> output_rotated_list_2b4e1f\n        concat_6e1d7a.execute -> continue_7c3a4d\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: 10, y: -256, name: \"array\") property(List<Number>) array_7f3c4a\n        in(x: 10, y: -198, name: \"execute\") trigger() execute_7b5d0e\n\n        out(x: 10, y: 206, name: \"sum\") property(Number) sum_7b5d0e\n        out(x: 10, y: 243, name: \"continue\") trigger() continue_7b5d0e\n\n        instance(x: 10, y: -98) reduce_6f3c4a root.Std_k98ojb.Iteration.Reduce {}\n        func(doc: \"adds two numbers.\") add_numbers {\n            in(x: 20, y: -170, name: \"first\") property(Number) first_5d0e\n            in(x: 20, y: -134, name: \"second\") property(Number) second_5d0e\n\n            out(x: 20, y: 168, name: \"result\") property(Number) result_5d0e\n\n            instance(x: 20, y: -79) add_5d0e root.Std_k98ojb.Math.Add {}\n            first_5d0e -> add_5d0e.first\n            second_5d0e -> add_5d0e.second\n            add_5d0e.result -> result_5d0e\n        } -> reduce_6f3c4a.handler\n        0 -> reduce_6f3c4a.initial_value\n        array_7f3c4a -> reduce_6f3c4a.items\n        execute_7b5d0e -> reduce_6f3c4a.execute\n        reduce_6f3c4a.result -> sum_7b5d0e\n        reduce_6f3c4a.done -> continue_7b5d0e\n    }\n\n    \n\n    instance(x: -189, y: 222) sum_array_f0be66 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 10, y: -250, name: \"input\") property(Number) input_7f3a4d\n        in(x: 10, y: -290, name: \"execute\") trigger() execute_8b6c4e\n\n        out(x: 1110, y: -150, name: \"is_prime\") property(Bool) is_prime_7f3a4d\n        out(x: 1110, y: -210, name: \"continue\") trigger() continue_8b6c4e\n\n        instance(x: 190, y: -150) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 370, y: -150) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 550, y: -150) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        instance(x: 730, y: -150) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 910, y: -150) and_80a119 root.Std_k98ojb.Logic.And {}\n\n        input_7f3a4d -> generaterange_038fce.from\n        2 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n\n        execute_8b6c4e -> for_8cb3f6.reset\n\n        input_7f3a4d -> modulo_f11fda.value\n        for_8cb3f6.item -> modulo_f11fda.divisor\n        modulo_f11fda.result -> if_07b8c7.predicate\n\n        1 -> and_80a119.left\n        input_7f3a4d -> and_80a119.right\n\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> for_8cb3f6.next\n        if_07b8c7.then -> continue_8b6c4e\n        and_80a119.result -> is_prime_7f3a4d\n\n        for_8cb3f6.done -> if_07b8c7.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 345, y: -210, name: \"a\") property(Number) a_7f6e1d\n        in(x: 345, y: -150, name: \"b\") property(Number) b_b8e97c\n        in(x: 345, y: -90, name: \"execute\") trigger() execute_e2a3f6\n\n        out(x: 1645, y: -150, name: \"out\") property(Bool) out_7b4e8d\n        out(x: 1645, y: -90, name: \"continue\") trigger() continue_2e2a3c\n\n        instance(x: 545, y: -150) mul_f6f9ac root.Std_k98ojb.Math.Mul {}\n        a_7f6e1d -> mul_f6f9ac.first\n        b_b8e97c -> mul_f6f9ac.second\n\n        instance(x: 945, y: -150) less_than_zero_e3a2d7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_f6f9ac.result -> less_than_zero_e3a2d7.left\n        0 -> less_than_zero_e3a2d7.right\n\n        instance(x: 1345, y: -150) not_5c2b8e root.Std_k98ojb.Logic.Not {}\n        less_than_zero_e3a2d7.result -> not_5c2b8e.input\n        not_5c2b8e.output -> out_7b4e8d\n\n        execute_e2a3f6 -> mul_f6f9ac.execute\n        continue_2e2a3c -> less_than_zero_e3a2d7.execute\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -25, y: -64, name: \"input\") property(Number) input_f3db9f\n        in(x: -20, y: -175, name: \"execute\") trigger() execute_8ba06b\n\n        out(x: 205, y: -130, name: \"result\") property(Bool) result_b4554f\n        out(x: 210, y: -200, name: \"continue\") trigger() continue_7d9e8c\n\n        instance(x: 160, y: -100) modulo_3b9d9a root.Std_k98ojb.Math.Modulo {}\n        input_f3db9f -> modulo_3b9d9a.value\n        11 -> modulo_3b9d9a.divisor\n        instance(x: 205, y: -64) equal_7e0a4f root.Std_k98ojb.Logic.Equal {}\n        modulo_3b9d9a.result -> equal_7e0a4f.left\n        0 -> equal_7e0a4f.right\n        execute_8ba06b -> modulo_3b9d9a.execute\n        equal_7e0a4f.result -> result_b4554f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 32, y: -160, name: \"input\") property(String) input_7c4f5a\n        in(x: 89, y: -95, name: \"search\") property(String) search_c60e7d\n        in(x: 154, y: -32, name: \"replace\") property(String) replace_e23b7c\n\n        out(x: 1000, y: -180, name: \"output\") property(String) output_968a6d\n        instance(x: 324, y: -155) replace_f670e7 root.Std_k98ojb.Strings.Replace {}\n        input_7c4f5a -> replace_f670e7.input\n        search_c60e7d -> replace_f670e7.search\n        replace_e23b7c -> replace_f670e7.replace\n        replace_f670e7.output -> output_968a6d\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    in(x: 106, y: -345, name: \"input\") property(String) input_2a7f9d\n    in(x: 126, y: -246, name: \"execute\") trigger() execute_b84e7c\n\n    out(x: 1207, y: -325, name: \"output\") property(String) output_2b5f9d\n    out(x: 1205, y: -216, name: \"continue\") trigger() continue_c8d4c6\n\n    instance(x: 579, y: -346) tolower_d7374e root.Std_k98ojb.Strings.ToLower {}\n    input_2a7f9d -> tolower_d7374e.input\n    execute_b84e7c -> tolower_d7374e.execute\n    tolower_d7374e.output -> output_2b5f9d\n    tolower_d7374e.done -> continue_c8d4c6\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 342, y: -156, name: \"numbers\") property(List<Number>) numbers_7f0c5d\n        in(x: 588, y: -156, name: \"execute\") trigger() execute_f5e9a3\n\n        out(x: 1248, y: -12, name: \"product\") property(Number) product_7b9f5c\n        out(x: 1402, y: 120, name: \"continue\") trigger() continue_e6e71d\n\n        instance(x: 342, y: -36) reduce_d4b82d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 588, y: 120) difference_3c1d35 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 834, y: -60) expression_c7e5d3 root.Std_k98ojb.Math.Expression {\n            expression: \"acc * it\"\n        }\n        instance(x: 1121, y: -60) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        numbers_7f0c5d -> difference_3c1d35.left\n        numbers_7f0c5d -> difference_3c1d35.right\n        1 -> reduce_d4b82d.initial_value\n        difference_3c1d35.difference -> reduce_d4b82d.items\n        func() {\n            in(x: -69, y: 70, name: \"acc\") property(Number) acc_7b501b\n\n            out(x: 265, y: 70, name: \"result\") property(Number) result_3f42a4\n            expression_c7e5d3.result -> mul_2f9d09.first\n            acc_7b501b -> mul_2f9d09.second\n            mul_2f9d09.result -> result_3f42a4\n        } -> reduce_d4b82d.reducer\n        execute_f5e9a3 -> difference_3c1d35.execute\n        reduce_d4b82d.result -> product_7b9f5c\n        continue_e6e71d -> reduce_d4b82d.continue\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: 263, y: -154, name: \"list1\") property(List) list1_0c4f79\n        in(x: 263, y: -86, name: \"list2\") property(List) list2_ba6e1d\n        in(x: 263, y: 25, name: \"execute\") trigger() execute_eb0c1f\n\n        out(x: 1749, y: -118, name: \"out\") property(List) out_3a787e\n        out(x: 1762, y: 15, name: \"continue\") trigger() continue_c357d0\n\n        instance(x: 479, y: -216) difference_eb0c1f root.Std_k98ojb.Sets.Difference {}\n        list1_0c4f79 -> difference_eb0c1f.left\n        list2_ba6e1d -> difference_eb0c1f.right\n\n        instance(x: 592, y: -36) difference_2ba8bf root.Std_k98ojb.Sets.Difference {}\n        list2_ba6e1d -> difference_2ba8bf.left\n        list1_0c4f79 -> difference_2ba8bf.right\n\n        instance(x: 703, y: -154) concat_eb0c1f root.Std_k98ojb.List.Concat {}\n        difference_eb0c1f.difference -> concat_eb0c1f.left\n        difference_2ba8bf.difference -> concat_eb0c1f.right\n\n        instance(x: 853, y: -76) unique_eb0c1f root.Std_k98ojb.List.Flatten {}\n        concat_eb0c1f.concatenatedList -> unique_eb0c1f.list\n\n        execute_eb0c1f -> continue_c357d0\n        unique_eb0c1f.flattenedList -> out_3a787e\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 210, y: -345, name: \"list\") property(List) input_list_7e6c5d\n        in(x: 208, y: -499, name: \"rotate_by\") property(Number) rotate_by_f6f21d\n        in(x: 208, y: -397, name: \"execute\") trigger() execute_4b5a8e\n\n        out(x: 1622, y: -429, name: \"rotated_list\") property(List) rotated_list_e8c22a\n        out(x: 1602, y: -337, name: \"continue\") trigger() continue_5f9d4e\n\n        instance(x: 536, y: -417) length_b04b9b root.Std_k98ojb.List.Length {}\n        instance(x: 752, y: -416) mod_e270cb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 983, y: -416) sub_25e1d6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1215, y: -416) slice_ea7c50 root.Std_k98ojb.List.Slice {}\n        instance(x: 1374, y: -319) concat_3e0f67 root.Std_k98ojb.List.Concat {}\n\n        input_list_7e6c5d -> length_b04b9b.list\n        rotate_by_f6f21d -> mod_e270cb.value\n        length_b04b9b.length -> mod_e270cb.divisor\n        mod_e270cb.result -> sub_25e1d6.first\n        length_b04b9b.length -> sub_25e1d6.second\n        input_list_7e6c5d -> slice_ea7c50.list\n        sub_25e1d6.result -> slice_ea7c50.start\n        mod_e270cb.result -> slice_ea7c50.end\n        input_list_7e6c5d -> concat_3e0f67.left\n        slice_ea7c50.slice -> concat_3e0f67.right\n        execute_4b5a8e -> length_b04b9b.execute\n        concat_3e0f67.concatenated -> rotated_list_e8c22a\n        continue_5f9d4e -> slice_ea7c50.execute\n    }\n\n    \n\n    instance(x: -199, y: 19) rotate_list_right_0b8d13 root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: 342, y: -157, name: \"array\") property(List<Number>) array_0c3a6e\n        in(x: 398, y: -306, name: \"execute\") trigger() execute_6d0c2f\n\n        out(x: 1492, y: -175, name: \"sum\") property(Number) sum_7b5d8e\n        out(x: 1574, y: -343, name: \"continue\") trigger() continue_65b0c6\n\n        instance(x: 692, y: -158) reduce_1a8b27 root.Std_k98ojb.Iteration.Reduce {}\n        func(doc: \"Reducer function to add two numbers.\") add_reducer {\n            in(x: 341, y: -305, name: \"accumulator\") property(Number) accumulator_eb76e2\n            in(x: 378, y: -191, name: \"currentValue\") property(Number) currentValue_1c7b5a\n\n            out(x: 476, y: -248, name: \"result\") property(Number) result_b0657f\n            out(x: 436, y: -99, name: \"continue\") trigger() continue_49b7d1\n\n            instance(x: 575, y: -222) add_8b3c1e root.Std_k98ojb.Math.Add {}\n            accumulator_eb76e2 -> add_8b3c1e.first\n            currentValue_1c7b5a -> add_8b3c1e.second\n            add_8b3c1e.result -> result_b0657f\n        } -> reduce_1a8b27.reducer\n        0 -> reduce_1a8b27.initialValue\n        array_0c3a6e -> reduce_1a8b27.items\n        execute_6d0c2f -> reduce_1a8b27.execute\n        reduce_1a8b27.result -> sum_7b5d8e\n        reduce_1a8b27.done -> continue_65b0c6\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given integer is a prime number.\") is_prime {\n        in(x: 30, y: -250, name: \"input\") property(Number) input_1a7d6e\n        in(x: 30, y: -190, name: \"execute\") trigger() execute_e48b2f\n\n        out(x: 1260, y: -250, name: \"is_prime\") property(Bool) is_prime_7a7d6e\n        out(x: 1390, y: -190, name: \"continue\") trigger() continue_e48b2f\n\n        instance(x: 120, y: -100) generaterange_5c4f55 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 360, y: -50) for_7d7d7a root.Std_k98ojb.Std.For {}\n        instance(x: 620, y: -100) mod_f3f3f3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 840, y: -50) if_9d9d9a root.Std_k98ojb.Std.If {}\n        instance(x: 1060, y: -100) and_7f7f7e root.Std_k98ojb.Logic.And {}\n        input_1a7d6e -> generaterange_5c4f55.to\n        2 -> generaterange_5c4f55.from\n        generaterange_5c4f55.list -> for_7d7d7a.items\n        execute_e48b2f -> for_7d7d7a.reset\n        input_1a7d6e -> mod_f3f3f3.value\n        for_7d7d7a.item -> mod_f3f3f3.divisor\n        0 -> if_9d9d9a.predicate\n        mod_f3f3f3.result -> and_7f7f7e.left\n        input_1a7d6e -> math_expression_5c4f55.gen_0\n        for_7d7d7a.item -> math_expression_5c4f55.gen_1\n        math_expression_5c4f55.result -> and_7f7f7e.right\n        if_9d9d9a.then -> continue_e48b2f\n        for_7d7d7a.onItem -> if_9d9d9a.execute\n        if_9d9d9a.value -> is_prime_7a7d6e\n        and_7f7f7e.result -> if_9d9d9a.predicate\n        for_7d7d7a.done -> continue_e48b2f\n    }\n\n    instance(x: 30, y: -50) math_expression_5c4f55 root.Std_k98ojb.Math.Expression {\n        expression: \"(input / i == Math.floor(input / i))\"\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3929,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") opposite_signs {\n        in(x: 10, y: -54, name: \"a\") property(Number) a_32c9d4\n        in(x: 176, y: -83, name: \"b\") property(Number) b_f90e1f\n        in(x: 94, y: -194, name: \"execute\") trigger() execute_e3c2df\n\n        out(x: 505, y: -69, name: \"out\") property(Bool) out_74ef28\n\n        instance(x: 188, y: -108) expression_a3b333 root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_32c9d4 -> expression_a3b333.gen_0\n        b_f90e1f -> expression_a3b333.gen_1\n        execute_e3c2df -> expression_a3b333.execute\n        expression_a3b333.result -> out_74ef28\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11 or not.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1920, y: -54, name: \"out\") property(Bool) out_1c7c5b\n        out(x: 1867, y: 120, name: \"continue\") trigger() continue_6cb4e8\n\n        instance(x: 374, y: -209) modulo_4cfb83 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 564, y: -115) ifexpression_67efdf root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        input_f5c03d -> modulo_4cfb83.value\n        11 -> modulo_4cfb83.divisor\n        modulo_4cfb83.result -> ifexpression_67efdf.gen_0\n        execute_27b8c3 -> ifexpression_67efdf.execute\n        ifexpression_67efdf.value -> out_1c7c5b\n        continue_6cb4e8 -> ifexpression_67efdf.trigger\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"replaces all occurrences of 'search' with 'replace' in the input string.\") replace_characters {\n        in(x: 216, y: -507, name: \"input\") property(String) input_7a74a9\n        in(x: 228, y: -357, name: \"search\") property(String) search_f33d0c\n        in(x: 216, y: -249, name: \"replace\") property(String) replace_8bcbad\n        in(x: 230, y: -135, name: \"execute\") trigger() execute_a40ee6\n\n        out(x: 1766, y: -368, name: \"output\") property(String) output_94aeab\n        out(x: 1872, y: -207, name: \"continue\") trigger() continue_bcaefb\n\n        instance(x: 573, y: -549) replace_0b8c6f root.Std_k98ojb.Strings.Replace {}\n        input_7a74a9 -> replace_0b8c6f.input\n        search_f33d0c -> replace_0b8c6f.search\n        replace_8bcbad -> replace_0b8c6f.replace\n        execute_a40ee6 -> replace_0b8c6f.execute\n        replace_0b8c6f.output -> output_94aeab\n        replace_0b8c6f.done -> continue_bcaefb\n    }\n\n    \n\n    instance(x: -25, y: 136) replace_characters_270a73 root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: 10, y: -372, name: \"input\") property(String) input_5a6dcb\n        in(x: 344, y: -390, name: \"execute\") trigger() execute_c73b0c\n\n        out(x: 1890, y: -387, name: \"out\") property(String) out_f1e8f5\n        out(x: 1626, y: -189, name: \"continue\") trigger() continue_c2b99d\n\n        instance(x: 1023, y: -401) tolower_bdf47a root.Std_k98ojb.Strings.ToLower {}\n        input_5a6dcb -> tolower_bdf47a.input\n        execute_c73b0c -> tolower_bdf47a.execute\n        tolower_bdf47a.value -> out_f1e8f5\n        tolower_bdf47a.done -> continue_c2b99d\n    }\n\n    \n\n    instance(x: 646, y: -44) to_lower_case_0eb0ae root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculate the product of the unique numbers in a given list.\") product_of_unique_numbers {\n        in(x: 354, y: -120, name: \"numbers\") property(List<Number>) input_84a6d3\n        in(x: 354, y: -72, name: \"execute\") trigger() execute_b9e4f2\n\n        out(x: 1628, y: -40, name: \"result\") property(Number) result_6c2b3d\n        out(x: 1628, y: 16, name: \"continue\") trigger() continue_a7594a\n\n        instance(x: 601, y: 32) intersection_dcb3f5 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 770, y: -40) for_b450e3 root.Std_k98ojb.Std.For {}\n        instance(x: 601, y: -168) reduce_2f3a1b root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: 14, y: -178, name: \"accumulator\") property(Number) accumulator_d5f3d9\n            in(x: 14, y: -120, name: \"current_value\") property(Number) current_value_6a1cb5\n\n            out(x: 254, y: -208, name: \"result\") property(Number) result_9f7c3b\n            instance(x: 144, y: -118) mul_e5dca2 root.Std_k98ojb.Math.Mul {}\n            accumulator_d5f3d9 -> mul_e5dca2.first\n            current_value_6a1cb5 -> mul_e5dca2.second\n            mul_e5dca2.result -> result_9f7c3b\n        } -> reduce_2f3a1b.reducer\n        1 -> reduce_2f3a1b.initialValue\n        input_84a6d3 -> intersection_dcb3f5.right\n        for_b450e3.items -> intersection_dcb3f5.left\n        execute_b9e4f2 -> for_b450e3.reset\n        for_b450e3.onItem -> reduce_2f3a1b.execute\n        input_84a6d3 -> for_b450e3.items\n        reduce_2f3a1b.result -> result_6c2b3d\n        for_b450e3.done -> continue_a7594a\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the dissimilar elements between two lists.\") find_dissimilar_elements {\n        in(x: 125, y: -167, name: \"listA\") property(List) listA_b42f5c\n        in(x: 390, y: -186, name: \"listB\") property(List) listB_5d3a2b\n        in(x: 622, y: -172, name: \"execute\") trigger() execute_9d4eac\n\n        out(x: 1056, y: 215, name: \"result\") property(List) result_f4f73f\n        out(x: 845, y: 226, name: \"continue\") trigger() continue_6b9cf4\n\n        instance(x: 244, y: -60) difference_8dbd1c root.Std_k98ojb.Sets.Difference {}\n        listA_b42f5c -> difference_8dbd1c.left\n        listB_5d3a2b -> difference_8dbd1c.right\n\n        instance(x: 706, y: -4) difference_64b4df root.Std_k98ojb.Sets.Difference {}\n        listB_5d3a2b -> difference_64b4df.left\n        listA_b42f5c -> difference_64b4df.right\n\n        instance(x: 902, y: 157) concat_d88543 root.Std_k98ojb.List.Concat {}\n        difference_8dbd1c.difference -> concat_d88543.listA\n        difference_64b4df.difference -> concat_d88543.listB\n\n        execute_9d4eac -> continue_6b9cf4\n        concat_d88543.concatenatedList -> result_f4f73f\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right.\") rotate_list_right {\n        in(x: 143, y: -207, name: \"list\") property(List) list_3a86b7\n        in(x: 549, y: -223, name: \"execute\") trigger() execute_6d5e5c\n        in(x: 173, y: -90, name: \"k\") property(Number) k_d53d5f\n\n        out(x: 1718, y: -54, name: \"out\") property(List) out_ba7dd5\n        out(x: 1845, y: 126, name: \"continue\") trigger() continue_6c96ee\n\n        instance(x: 1029, y: -52) concat_10c3e2 root.Std_k98ojb.List.Concat {}\n        instance(x: 744, y: -53) slice_c3cafb root.Std_k98ojb.List.Slice {\n            start: \"-(k % len)\"\n            end: \"len\"\n        }\n        instance(x: 910, y: -260) length_00a8cb root.Std_k98ojb.List.Length {}\n        instance(x: 475, y: -237) slice_4dca2f root.Std_k98ojb.List.Slice {\n            start: \"0\"\n            end: \"-(k % len)\"\n        }\n        length_00a8cb.length -> slice_c3cafb.gen_1\n        k_d53d5f -> slice_c3cafb.gen_0\n        list_3a86b7 -> length_00a8cb.list\n        length_00a8cb.length -> slice_4dca2f.gen_1\n        k_d53d5f -> slice_4dca2f.gen_0\n        list_3a86b7 -> slice_c3cafb.list\n        execute_6d5e5c -> length_00a8cb.execute\n        list_3a86b7 -> slice_4dca2f.list\n        slice_4dca2f.slice -> concat_10c3e2.left\n        slice_c3cafb.slice -> concat_10c3e2.right\n        execute_6d5e5c -> slice_c3cafb.execute\n        concat_10c3e2.list -> out_ba7dd5\n        execute_6d5e5c -> slice_4dca2f.execute\n    }\n\n    \n\n    instance(x: 58, y: 199) rotate_list_right_ff58ab root.main.rotate_list_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array\") sum_of_array {\n        in(x: 10, y: -365, name: \"array\") property(List<Number>) array_4c079f\n        in(x: 12, y: -418, name: \"execute\") trigger() execute_eb8a2e\n\n        out(x: 1093, y: -125, name: \"out\") property(Number) sum_f573c6\n        out(x: 1253, y: 142, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 559, y: -340) reduce_2e2fcd root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 723, y: -163) add_cdc4d7 root.Std_k98ojb.Math.Add {}\n        func() {\n            in(x: -152, y: -30, name: \"accumulator\") property(Number) accumulator_0eb9ab\n            in(x: 27, y: -106, name: \"current\") property(Number) current_d2a4c4\n\n            out(x: 182, y: -57, name: \"result\") property(Number) result_3f6bdc\n\n            accumulator_0eb9ab -> add_cdc4d7.first\n            current_d2a4c4 -> add_cdc4d7.second\n            add_cdc4d7.result -> result_3f6bdc\n        } -> reduce_2e2fcd.reducer\n        0 -> reduce_2e2fcd.accumulator\n        array_4c079f -> reduce_2e2fcd.items\n        execute_eb8a2e -> reduce_2e2fcd.execute\n        reduce_2e2fcd.result -> sum_f573c6\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 245, y: -160, name: \"input\") property(Number) input_7d9fcb\n        in(x: 308, y: -316, name: \"execute\") trigger() execute_b05e75\n\n        out(x: 1522, y: -42, name: \"out\") property(Bool) out_fca1a3\n        out(x: 1489, y: 234, name: \"continue\") trigger() continue_2da2e9\n\n        instance(x: 760, y: -125) lessthanorequal_bf97bf root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 632, y: -240) for_d0cbf7 root.Std_k98ojb.Std.For {}\n        instance(x: 984, y: 215) if_b1f4a6 root.Std_k98ojb.Std.If {}\n        instance(x: 1309, y: -162) modulo_d9dfad root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1479, y: -25) and_65c16a root.Std_k98ojb.Logic.And {}\n        instance(x: 1313, y: 101) equal_df7f6d root.Std_k98ojb.Logic.Equal {}\n\n        input_7d9fcb -> for_d0cbf7.items\n        execute_b05e75 -> for_d0cbf7.reset\n\n        func() {\n            in(x: 234, y: -172, name: \"element\") property(Number) element_1c6b8a\n\n            out(x: 987, y: -22, name: \"out\") property(Bool) out_bfeaae\n            instance(x: 521, y: -420) greatthan_3f20e3 root.Std_k98ojb.Math.GreaterThan {}\n            element_1c6b8a -> greatthan_3f20e3.left\n            1 -> greatthan_3f20e3.right\n\n            instance(x: 450, y: -327) equal_cda356 root.Std_k98ojb.Logic.Equal {}\n            element_1c6b8a -> equal_cda356.left\n            input_7d9fcb -> equal_cda356.right\n\n            greatthan_3f20e3.result -> if_b1f4a6.predicate\n            for_d0cbf7.onItem -> if_b1f4a6.execute\n            if_b1f4a6.else -> out_bfeaae\n        } -> for_d0cbf7.handler\n\n        input_7d9fcb -> modulo_d9dfad.left\n        for_d0cbf7.index -> modulo_d9dfad.right\n\n        2 -> lessthanorequal_bf97bf.left\n        for_d0cbf7.index -> lessthanorequal_bf97bf.right\n\n        if_b1f4a6.value -> equal_df7f6d.left\n        input_7d9fcb -> equal_df7f6d.right\n        modulo_d9dfad.result -> and_65c16a.left\n        lessthanorequal_bf97bf.result -> and_65c16a.right\n\n        for_d0cbf7.done -> if_b1f4a6.then\n        equal_df7f6d.result -> continue_2da2e9\n        and_65c16a.result -> out_fca1a3\n    }\n}"
            ]
        }
    }
]