[
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 94, y: -104) ifexpression_b4d2c1 root.Std_k98ojb.Std.If {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 196, y: 256) ifexpression_8f5a3e root.Std_k98ojb.Std.If {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: -200, y: 39) not_6d4c7b root.Std_k98ojb.Logic.Not {}\n        output_3339a3.value -> ifexpression_b4d2c1.predicate\n        ifexpression_b4d2c1.then -> output_3339a3.execute\n        ifexpression_8f5a3e.then -> output_3339a3.execute\n        not_6d4c7b.input -> ifexpression_b4d2c1.value\n        not_6d4c7b.input -> ifexpression_8f5a3e.value\n        not_6d4c7b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -92, y: 45) opposite_signs_0e2f1a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 10, y: -44) modulo_8d7e5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 11, y: -23, name: \"divisor\") property(Number) divisor_9c6f1d\n        instance(x: 3, y: -13, name: \"alternating_sum\") property(Number) alternating_sum_8e5a4b\n\n        n_27f29c -> modulo_8d7e5a.value\n        divisor_9c6f1d -> modulo_8d7e5a.divisor\n        10 -> modulo_8d7e5a.modulus\n        alternating_sum_8e5a4b -> modulo_8d7e5a.result\n        0 -> modulo_8d7e5a.new_value\n        n_27f29c -> modulo_8d7e5a.input\n        modulo_8d7e5a.continue -> output_f2630f.execute\n        divisor_9c6f1d -> alternating_sum_8e5a4b.divisor\n        11 -> alternating_sum_8e5a4b.modulus\n        alternating_sum_8e5a4b.result -> output_f2630f.value\n    }\n\n    \n\n    instance(x: -14, y: 21) is_diff_9d7c2a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -23) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 395, y: 74) replace_char_9f2a5e root.main.replace_char {}\n        instance(x: 97, y: -127) Strings.Replace_8d4c7b root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\"\n            search: search_ai\n            replace: replace_ai\n        }\n        output_ai -> replace_char_9f2a5e.output\n    }\n\n    \n\n    instance(x: 94, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n    instance(x: 395, y: 74) replace_char_9f2a5e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 94, y: -23) tolower_5f2d7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 201, y: 134) ifexpression_ba8c9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 272, y: -14) not_4f5d7b root.Std_k98ojb.Logic.Not {}\n        instance(x: 343, y: 246) and_80a119 root.Std_k98ojb.Logic.And {}\n        input_ai -> tolower_5f2d7b.input\n        tolower_5f2d7b.result -> ifexpression_ba8c9e.predicate\n        ifexpression_ba8c9e.then -> output_ai\n        not_4f5d7b.value -> and_80a119.left\n        input_ai -> and_80a119.right\n        and_80a119.result -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: 45) is_lower_6c9e3b root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 394, y: -193) filter_9f5d7a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f5d7a.list\n        instance(x: 215, y: 100) unique_8e3c4a root.Std_k98ojb.List.Uniq {}\n        instance(x: 96, y: -23) product_6d0f2d root.Std_k98ojb.Math.Product {}\n        setter(x: -43, y: -48, name: \"setter_5f1f8e\") setter_5f1f8e = unique\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = unique\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = unique\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = unique\n        list_5fda54 -> filter_9f5d7a.list\n        filter_9f5d7a.result -> unique\n        unique.value -> product_6d0f2d.input\n        1 -> product_6d0f2d.index\n        execute_19300c -> setter_5f1f8e.execute\n        k_1e19fb -> setter_5f1f8e.new_value\n        setter_5f1f8e.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -97, y: -68) unique_product_4d3a2c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 94, y: -104) filter_8f6d4b root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_8f6d4b.items\n        list2_ai -> filter_8f6d4b.list\n        func() {\n            in(x: -131, y: 34, name: \"x\") property(Number) x_9e5c7a\n\n            out(x: 333, y: -50, name: \"\") property(Boolean) dissimilar_e1f2eb\n\n            instance(x: 92, y: -22) not_8d4b3 root.Std_k98ojb.Logic.Not {}\n            instance(x: 196, y: 256) contains_9c7e5a root.Std_k98ojb.Strings.Contains {}\n            setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = dissimilar\n            getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = dissimilar\n            getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = dissimilar\n            setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = dissimilar\n            list1_ai -> filter_8f6d4b.items\n            list2_ai -> filter_8f6d4b.list\n            not_8d4b3.value -> contains_9c7e5a.predicate\n            contains_9c7e5a.result -> setter_d09207\n            setter_d09207.continue -> dissimilar_e1f2eb.execute\n            getter_44a047.value -> filter_8f6d4b.index\n            filter_8f6d4b.itemAtIndex -> x_9e5c7a\n            not_8d4b3.result -> setter_d09207\n            contains_9c7e5a.result -> setter_d09207\n            dissimilar_e1f2eb.value -> setter_d09207\n        } -> filter_8f6d4b.handler\n        filter_8f6d4b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) find_dissimilar_5c7a3e root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 394, y: -115) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_8cb3f6.items\n        instance(x: 215, y: -23) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == n\"\n        }\n        instance(x: 196, y: 256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        instance(x: -200, y: 39) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        setter_d09207.continue -> for_8cb3f6.reset\n        execute_1e159f -> setter_d09207.execute\n        for_8cb3f6.onItem -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> add_14921d.execute\n        add_14921d.listWithItem -> concat_9b38cc.right\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        getter_c18a69.value -> sub_9ff257.first\n        ifexpression_a2fa90.else -> setter_29a5c8.execute\n        sub_9ff257.result -> setter_29a5c8.new_value\n        n_68068c -> ifexpression_a2fa90.gen_0\n        setter_29a5c8.continue -> continue_c95bcb\n        concat_9b38cc.result -> output_823209\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4f6d7e root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 94, y: -104) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_2c62ab -> map_f2330d.items\n        func() {\n            in(x: -212, y: -36, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) add_88bb8a root.Std_k98ojb.Math.Add {}\n            x_8ee839 -> add_88bb8a.first\n            _7dd980 -> add_88bb8a.second\n            add_88bb8a.result -> sum_2a848f\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> sum_2a848f\n    }\n\n    \n\n    instance(x: -92, y: 45) _sum_b9ff6b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 83, y: -43) ifexpression_d2d4f8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 201, y: 19) not_5c7e3b root.Std_k98ojb.Logic.Not {}\n        instance(x: 275, y: -202) greaterthan_8f6d4a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 94, y: -234) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -46, name: \"setter_3c7e5a\") setter_3c7e5a = is_prime\n        getter(x: 102, y: -269, name: \"getter_4f2d6a\") getter_4f2d6a = is_prime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> div_547f34.second\n        execute_b7b391 -> setter_3c7e5a.execute\n        num_5c0677 -> setter_3c7e5a.new_value\n        setter_3c7e5a.continue -> ifexpression_d2d4f8.execute\n        ifexpression_d2d4f8.then -> continue_9a54bb\n        not_5c7e3b.value -> greaterthan_8f6d4a.left\n        num_5c0677 -> greaterthan_8f6d4a.right\n        greaterthan_8f6d4a.result -> div_547f34.first\n        ifexpression_d2d4f8.else -> setter_3c7e5a.execute_cdac2a\n        floor_61b38d.output -> div_547f34.second\n        is_prime.value -> output_c457b3\n        not_5c7e3b.value -> continue_9a54bb\n        greaterthan_8f6d4a.result -> setter_3c7e5a.gen_0\n    }\n\n    \n\n    instance(x: -96, y: 44) num_prime_1f2f66 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 93, y: -143) ifexpression_2d7c8b root.Std_k98ojb.Std.If {}\n        x_853326 -> ifexpression_2d7c8b.input\n        y_5390f5 -> ifexpression_2d7c8b.y\n        ifexpression_2d7c8b.then -> output_3339a3.execute\n        ifexpression_2d7c8b.else -> continue_6e4d1f\n    }\n\n    \n\n    instance(x: -97, y: 44) opposite_signs_5d0d14 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 13, y: -38) modulo_9d4e8a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 15, y: 24) add_7c3d2a root.Std_k98ojb.Math.Add {}\n        instance(x: 17, y: 10) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 19, y: -11, name: \"alternating_sum\") property(Number) alternating_sum_7f5d4a\n        instance(x: 21, y: 2, name: \"divisor\") property(Number) divisor_3c8e6c\n\n        modulo_9d4e8a.divisor -> divisor_3c8e6c\n        n_27f29c -> add_7c3d2a.first\n        alternating_sum_7f5d4a -> sub_9ff257.result\n        11 -> sub_9ff257.second\n        add_7c3d2a.result -> alternating_sum_7f5d4a\n        modulo_9d4e8a.result -> output_f2630f\n        divisor_3c8e6c -> modulo_9d4e8a.value\n    }\n\n    \n\n    instance(x: 23, y: -15) is_diff_b2b1ab root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 90, y: 121) ifexpression_5c4a7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 394, y: -14) replace_char_8d9e0b root.main.replace_char {}\n        instance(x: 90, y: 121) then_5c4a7f root.Std_k98ojb.Std.IfThenElse {\n            then: \"output_ai = input_ai\"\n            else: \"output_ai = input_ai.replace(search_ai, replace_ai)\"\n        }\n        ifexpression_5c4a7f.then -> then_5c4a7f.execute\n        replace_char_8d9e0b.continue -> then_5c4a7f.else\n        replace_char_8d9e0b.input -> input_ai\n        replace_char_8d9e0b.search -> search_ai\n        replace_char_8d9e0b.replace -> replace_ai\n    }\n\n    \n\n    instance(x: -95, y: 44) replace_char_5f7c6a root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 93, y: -14) tolower_5f8d4b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5f8d4b.input\n        tolower_5f8d4b.output -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 45) is_lower_b9a3e1 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 294, y: -215) filter_8f5d7c root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_8f5d7c.list\n        instance(x: 93, y: -141) unique_6e2a9a root.Std_k98ojb.List.Unique {}\n        instance(x: 196, y: 26) map_3c4f1d root.Std_k98ojb.Iteration.Map {}\n        list_5fda54 -> map_3c4f1d.items\n        instance(x: -201, y: 59) prod_9a2e0f root.Std_k98ojb.Math.Prod {}\n        unique_6e2a9a.list -> map_3c4f1d.output_list\n        map_3c4f1d.output_list -> prod_9a2e0f.inputs\n        1 -> prod_9a2e0f.index\n        execute_19300c -> filter_8f5d7c.execute\n        list_5fda54 -> filter_8f5d7c.where\n        unique_6e2a9a.list -> prod_9a2e0f.value\n        prod_9a2e0f.result -> output_cffcc2\n        filter_8f5d7c.result -> continue_45190b\n    }\n\n    \n\n    instance(x: -92, y: 41) unique_product_b3f1ad root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 91, y: 85) filter_8f5d7a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_8f5d7a.items\n        list2_ai -> filter_8f5d7a.list\n        getter(x: -215, y: 55, name: \"getter_9c0e3a\") getter_9c0e3a = dissimilar_list\n        instance(x: 94, y: 123) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        output_ai -> concat_9b38cc.result\n        filter_8f5d7a.output_list -> concat_9b38cc.left\n        list1_ai -> concat_9b38cc.right\n        instance(x: 200, y: -22) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        concat_9b38cc.list -> map_6030c9.items\n        func() {\n            in(x: -530, y: 2, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) not_9f6e4b root.Std_k98ojb.Logic.Not {}\n            x_8ee839 -> not_9f6e4b.input\n            getter_9c0e3a.value -> _7dd980\n        } -> map_6030c9.handler\n    }\n\n    \n\n    instance(x: -92, y: 45) find_dissimilar_5d1f2b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 294, y: -117) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 64) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: 6, y: -64, name: \"setter_8c6eda\") setter_8c6eda = list\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 825, y: -223, name: \"zeroList\") property(List) zeroList\n        getter(x: 252, y: -246, name: \"getter_e808a2\") getter_e808a2 = zeroList\n        getter(x: 313, y: 269, name: \"getter_c18a69\") getter_c18a69 = zeroList\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        setter_8c6eda.continue -> for_9ab286.reset\n        execute_1e159f -> setter_8c6eda.execute\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        ifexpression_5c4634.then -> setter_29a5c8.execute\n        ifexpression_5c4634.else -> for_9ab286.next\n        setter_29a5c8.continue -> for_9ab286.next\n        list_48148f -> for_9ab286.items\n        concat_9b38cc.result -> output_823209\n        empty_ea3a3a.list -> setter_8c6eda.new_value\n        0 -> add_14921d.item\n        add_14921d.listWithItem -> setter_29a5c8.new_value\n        for_9ab286.done -> continue_c95bcb\n        getter_c18a69.value -> concat_9b38cc.right\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        getter_e808a2.value -> add_14921d.list\n        ifexpression_5c4634.then -> setter_29a5c8.execute_cdac2a\n        for_9ab286.index -> add_14921d.first\n        1 -> add_14921d.second\n        add_14921d.result -> ifexpression_5c4634.gen_1\n        ifexpression_5c4634.result -> setter_29a5c8.gen_0\n        setter_29a5c8.continue -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_9f2d6e root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 80, y: 35) add_8d4e9b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_8d4e9b.items\n        0 -> add_8d4e9b.first\n        sum_2a848f.result -> add_8d4e9b.second\n    }\n\n    \n\n    instance(x: -93, y: 51) _sum_1c7a3b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -41) ifexpression_d2d5f6 root.Std_k98ojb.Std.If {\n            expression: \"num == 0 || num == 1\"\n        }\n        instance(x: 201, y: 21) not_e4e3a9 root.Std_k98ojb.Logic.Not {}\n        instance(x: 292, y: -215) greaterthan_5f2d8c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 104, y: -246) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 93, y: -269) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        setter(x: -35, y: -48, name: \"setter_8a4c5e\") setter_8a4c5e = local_num\n        getter(x: 123, y: 210, name: \"getter_d7f1d3\") getter_d7f1d3 = local_num\n        getter(x: -27, y: 253, name: \"getter_b2b9d0\") getter_b2b9d0 = local_num\n        instance(x: 201, y: -41) isprime_4a8c6e root.Std_k98ojb.Std.IfExpression {\n            expression: \"(div_547f34.result == 1)\"\n        }\n        setter_8a4c5e.continue -> ifexpression_d2d5f6.execute\n        ifexpression_d2d5f6.then -> continue_9a54bb\n        execute_b7b391 -> setter_8a4c5e.execute\n        not_e4e3a9.value -> greaterthan_5f2d8c.left\n        num_5c0677 -> greaterthan_5f2d8c.right\n        greaterthan_5f2d8c.result -> isprime_4a8c6e.predicate\n        ifexpression_d2d5f6.else -> setter_b2b9d0.execute\n        mul_2f9d09.first -> div_547f34.first\n        2 -> div_547f34.second\n        div_547f34.result -> isprime_4a8c6e.gen_0\n        isprime_4a8c6e.then -> output_c457b3.execute\n        output_c457b3.value -> setter_b2b9d0.new_value\n        continue_9a54bb -> setter_8a4c5e.execute\n    }\n\n    \n\n    instance(x: -34, y: 21) num_prime_6f7e1b root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 96, y: -215) ifexpression_b4d7e2 root.Std_k98ojb.Std.If {}\n        x_853326 -> ifexpression_b4d7e2.input\n        y_5390f5 -> ifexpression_b4d7e2.y\n        ifexpression_b4d7e2.then -> output_3339a3.execute\n        instance(x: 194, y: -242) not_8c6eda root.Std_k98ojb.Logic.Not {}\n        x_853326 -> not_8c6eda.input\n        y_5390f5 -> not_8c6eda.y\n        ifexpression_b4d7e2.else -> output_3339a3.execute\n    }\n\n    \n\n    instance(x: -93, y: 47) opposite_signs_d1b9ac root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 12, y: -33) modulo_9d7a8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 11, y: -44) add_6c4e3f root.Std_k98ojb.Math.Add {}\n        instance(x: 10, y: -55) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 8, y: -66) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 7, y: -77) sum_4e3c5a root.Std_k98ojb.List.Sum {}\n        instance(x: 6, y: -88) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 5, y: -99) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"pow_584bfd.result % 11 == 0\"\n        }\n        output_f2630f -> ifexpression_a2fa90.value\n        n_27f29c -> sub_9ff257.input\n        add_6c4e3f.first -> pow_584bfd.x\n        mul_2f9d09.second -> sum_4e3c5a.item\n        11 -> pow_584bfd.y\n        sum_4e3c5a.list -> ifexpression_a2fa90.gen_0\n    }\n\n    \n\n    instance(x: -13, y: 1) is_diff_6b9f8d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 93, y: -22) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 394, y: 246) replace_8f9d0a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 215, y: -64) tolower_5c7e4b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 196, y: 540) toupper_6d3f2f root.Std_k98ojb.Strings.ToUpper {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = output\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = input_ai\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = search_ai\n        getter(x: 491, y: 194, name: \"getter_29a5c8\") getter_29a5c8 = replace_ai\n        ifexpression_5c4634.then -> replace_8f9d0a.execute\n        replace_8f9d0a.result -> tolower_5c7e4b.input\n        tolower_5c7e4b.result -> toupper_6d3f2f.input\n        toupper_6d3f2f.result -> output_ai\n        ifexpression_5c4634.else -> setter_d09207.execute\n    }\n\n    \n\n    instance(x: -97, y: -68) replace_char_9e0b1a root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 83, y: -14) tolower_5f2e3b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5f2e3b.input\n        tolower_5f2e3b.output -> output_ai\n    }\n\n    \n\n    instance(x: -93, y: 43) is_lower_9c6d7a root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 342, y: 247) filter_8f6e9a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_8f6e9a.items\n        instance(x: -200, y: 104) map_0d3c4f root.Std_k98ojb.Iteration.Map {}\n        map_0d3c4f.output_list -> unique_product.list\n        instance(x: 91, y: 22) prod_5e9a7f root.Std_k98ojb.Math.Prod {}\n        setter(x: -43, y: -44, name: \"setter_e2c1df\") setter_e2c1df = product\n        getter(x: 104, y: 246, name: \"getter_3b4e5a\") getter_3b4e5a = product\n        instance(x: -201, y: 101) ifexpression_b6f0d8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != 0\"\n        }\n        setter_e2c1df.continue -> filter_8f6e9a.execute\n        execute_19300c -> setter_e2c1df.execute\n        filter_8f6e9a.then -> map_0d3c4f.execute\n        map_0d3c4f.handler -> prod_5e9a7f\n        prod_5e9a7f.result -> getter_3b4e5a\n        filter_8f6e9a.else -> setter_e2c1df.execute_cdac2a\n    }\n\n    \n\n    instance(x: -96, y: 59) unique_product_0d1f47 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 93, y: 54) filter_8f6c4d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -200, y: 22) map_5e2a9a root.Std_k98ojb.Iteration.Map {}\n        list1_ai -> filter_8f6c4d.items\n        list2_ai -> filter_8f6c4d.items\n        filter_8f6c4d.predicate -> function(x: Number) { return !Std_k98ojb.List.Contains(list1_ai, x) && Std_k98ojb.List.Contains(list2_ai, x) }\n        map_5e2a9a.handler -> output_ai\n        output_ai.listWithItem -> filter_8f6c4d.output_list\n    }\n\n    \n\n    instance(x: -92, y: 41) find_dissimilar_7f3b1b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 292, y: -113) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 457, y: 23) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 97, y: -134) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 538, y: 25) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        list_48148f -> for_8cb3f6.items\n        n_68068c -> sub_9ff257.second\n        execute_1e159f -> setter_d09207.execute\n        k_1e19fb -> setter_d09207.new_value\n        setter_d09207.continue -> ifexpression_a2fa90.execute\n        for_8cb3f6.onItem -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> concat_9b38cc.result\n        sub_9ff257.result -> concat_9b38cc.left\n        list_48148f -> concat_9b38cc.right\n        getter_44a047.value -> setter_29a5c8.new_value\n        ifexpression_a2fa90.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4e7d1b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 83, y: -35) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 64) add_88bb8a root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> for_8cb3f6.items\n        0 -> add_88bb8a.first\n        execute() {\n            in(x: -212, y: 29, name: \"item\") property(Number) item_9d4e5d\n\n            out(x: 566, y: 2, name: \"\") property(Number) _7dd980\n\n            instance(x: 81, y: 62) add_88bb8a root.Std_k98ojb.Math.Add {}\n            item_9d4e5d -> add_88bb8a.first\n            _7dd980 -> add_88bb8a.second\n        } -> for_8cb3f6.handler\n        sum_2a848f.result -> _7dd980\n    }\n\n    \n\n    instance(x: -92, y: 71) _sum_5c9d4b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 92, y: -215) ifexpression_d2f6d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 0 || num == 1\"\n        }\n        instance(x: 395, y: 74) isprime_8c7a5e root.main.num_prime {}\n        instance(x: 93, y: -236) not_6f3d4b root.Std_k98ojb.Logic.Not {}\n        instance(x: 246, y: -278) less_than_9dd2f1 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 123, y: -251) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -201, y: -342, name: \"setter_b5e8d4\") setter_b5e8d4 = local_num\n        getter(x: -130, y: 210, name: \"getter_e0c3f9\") getter_e0c3f9 = local_num\n        instance(x: 96, y: -246) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 97, y: -255) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 99, y: -264) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 100, y: -273) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 101, y: -282) greaterthan_3f1d0a root.Std_k98ojb.Math.GreaterThan {}\n        setter_b5e8d4.continue -> ifexpression_d2f6d4.execute\n        execute_b7b391 -> setter_b5e8d4.execute\n        ifexpression_d2f6d4.then -> continue_9a54bb\n        isprime_8c7a5e.k_1e19fb -> getter_e0c3f9.new_value\n        not_6f3d4b.value -> less_than_9dd2f1.predicate\n        less_than_9dd2f1.left -> div_547f34.first\n        div_547f34.right -> mul_2f9d09.second\n        mul_2f9d09.result -> sub_9ff257.first\n        sub_9ff257.result -> modulo_adfa16.value\n        greaterthan_3f1d0a.left -> output_c457b3\n        output_c457b3.value -> isprime_8c7a5e.predicate\n        ifexpression_d2f6d4.else -> setter_b5e8d4.execute\n        sub_9ff257.result -> not_6f3d4b.value\n        div_547f34.result -> greaterthan_3f1d0a.result\n        mul_2f9d09.result -> isprime_8c7a5e.output_732a8a\n    }\n\n    \n\n    instance(x: -98, y: 43) num_prime_6b4e23 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 91, y: -221) ifexpression_d4d7c1 root.Std_k98ojb.Std.If {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 94, y: -193) ifexpression_5f2e3a root.Std_k98ojb.Std.If {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 97, y: -165) ifexpression_b8d4c9 root.Std_k98ojb.Std.If {\n            expression: \"x == 0 || y == 0\"\n        }\n        setter(x: -37, y: -48, name: \"setter_7f1a2e\") setter_7f1a2e = opposite\n        getter(x: -130, y: 211, name: \"getter_8c5d3b\") getter_8c5d3b = opposite\n        instance(x: 118, y: 540, name: \"setter_9c6f4f\") setter_9c6f4f = output\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = opposite\n        instance(x: 118, y: 540, name: \"setter_c2d5e1\") setter_c2d5e1 = output\n        x_853326 -> ifexpression_d4d7c1.input\n        y_5390f5 -> ifexpression_b8d4c9.input\n        ifexpression_d4d7c1.then -> setter_7f1a2e.execute\n        ifexpression_5f2e3a.then -> setter_c2d5e1.execute\n        ifexpression_b8d4c9.then -> setter_9c6f4f.execute\n        setter_7f1a2e.continue -> ifexpression_d4d7c1.execute\n        ifexpression_5f2e3a.else -> ifexpression_b8d4c9.execute\n        ifexpression_b8d4c9.else -> setter_9c6f4f.execute\n    }\n\n    \n\n    instance(x: -97, y: -68) opposite_signs_0b7f1a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 23, y: -38) modulo_8d4e5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 13, y: -104) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 15, y: -28) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 11, y: -54) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -31, y: -48, name: \"setter_4c5d3e\") setter_4c5d3e = diff\n        getter(x: 20, y: -104, name: \"getter_7a2f1f\") getter_7a2f1f = diff\n        instance(x: 15, y: -28) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"diff == 0\"\n        }\n        output_f2630f -> setter_4c5d3e.output\n        n_27f29c -> sub_9ff257.input\n        modulo_8d4e5a.divisor -> add_88bb8a.first\n        11 -> div_547f34.second\n        execute -> setter_4c5d3e.execute\n        diff -> ifexpression_a2fa90.gen_0\n    }\n\n    \n\n    instance(x: -28, y: 1) is_diff_6b9d7a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -104) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 395, y: 74) replace_char_9f8c5a root.main.replace_char {}\n        instance(x: 97, y: -127) Strings.Replace_4d7e0b root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\"\n            search: search_ai\n            replace: replace_ai\n        }\n        output_ai -> replace_char_9f8c5a.output\n    }\n\n    \n\n    instance(x: 94, y: -105) ifexpression_3d7de6_def root.Std_k98ojb.Std.IfExpression {\n        expression: \"input_ai == search_ai\"\n    }\n\n    \n\n    instance(x: -97, y: -68) replace_char_9f8c5a root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 94, y: -104) tolower_5c8f6a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 201, y: 246) ifexpression_b9d0e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 272, y: -18) is_lower_4f8c2a root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = output_ai\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = output_ai\n        instance(x: 491, y: 194, name: \"input_string\") property(String) input_string_4c8d0a\n        input_string_4c8d0a -> tolower_5c8f6a.input\n        tolower_5c8f6a.result -> ifexpression_b9d0e1.predicate\n        ifexpression_b9d0e1.then -> setter_d09207.execute\n        is_lower_4f8c2a.left -> getter_7f13b7.value\n        input_ai -> getter_7f13b7.value\n        is_lower_4f8c2a.right -> getter_7f13b7.value\n        ifexpression_b9d0e1.else -> setter_d09207.execute\n    }\n\n    \n\n    instance(x: -97, y: -68) is_lower_5c6a3a root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 394, y: -186) filter_9d7f8a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9d7f8a.items\n        instance(x: 215, y: 100) unique_4c6e3b root.Std_k98ojb.List.Uniq {}\n        instance(x: 91, y: -23) product_1f0f2d root.Std_k98ojb.Math.Product {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = unique_list\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = unique_list\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = unique_list\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = unique_list\n        list_5fda54 -> filter_9d7f8a.list\n        filter_9d7f8a.result -> unique_4c6e3b.items\n        unique_4c6e3b.list -> product_1f0f2d.input\n        1 -> product_1f0f2d.factor\n        execute_19300c -> setter_d09207.execute\n        k_5fda54 -> setter_d09207.new_value\n        setter_d09207.continue -> filter_9d7f8a.execute\n        getter_7f13b7.value -> product_1f0f2d.result\n        ifexpression_a2fa90.then -> continue_45190b\n        unique_list.value -> output_cffcc2\n        filter_9d7f8a.result -> product_1f0f2d.input\n    }\n\n    \n\n    instance(x: -97, y: -68) unique_product_4c6e3a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 94, y: -104) filter_9d7f8a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_9d7f8a.items\n        list2_ai -> filter_9d7f8a.list\n        instance(x: 215, y: 256) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list1_ai\"\n        }\n        instance(x: 196, y: 340) add_88bb8a root.Std_k98ojb.List.Add {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = dissimilarList\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = dissimilarList\n        instance(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = dissimilarList\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = dissimilarList\n        filter_9d7f8a.output_list -> output_ai\n        list1_ai -> add_88bb8a.listWithItem\n        list2_ai -> add_88bb8a.listWithoutItem\n        0 -> add_88bb8a.item\n        add_88bb8a.result -> setter_d09207.new_value\n        dissimilarList -> getter_44a047.value\n    }\n\n    \n\n    instance(x: -97, y: -68) find_dissimilar_9f2d5b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 394, y: -104) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_9ab286.items\n        instance(x: 94, y: -23) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        instance(x: 196, y: 256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        instance(x: -200, y: 39) slice_9f2d7b root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_9f2d7b.list\n        n_68068c -> slice_9f2d7b.start\n        slice_9f2d7b.length -> slice_9f2d7b.end\n        instance(x: 300, y: -23) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 97, y: -127) append_8c6eda root.Std_k98ojb.List.Append {}\n        setter_d09207.continue -> for_9ab286.reset\n        execute_1e159f -> setter_d09207.execute\n        n_68068c -> setter_d09207.new_value\n        ifexpression_a2fa90.then -> continue_c95bcb\n        sub_9ff257.result -> setter_29a5c8.first\n        0 -> append_8c6eda.item\n        append_8c6eda.listWithItem -> output_823209\n        for_9ab286.onItem -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.gen_0 -> setter_29a5c8.second\n        slice_9f2d7b.start -> sub_9ff257.first\n        n_68068c -> sub_9ff257.second\n        sub_9ff257.result -> getter_44a047.value\n        ifexpression_a2fa90.else -> continue_c95bcb\n        concat_9b38cc.result -> output_823209\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_5f6d4c root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 91, y: 53) add_9d5e8b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_9d5e8b.items\n        0 -> add_9d5e8b.first\n        sum_2a848f.result -> add_9d5e8b.second\n    }\n\n    \n\n    instance(x: -92, y: 73) _sum_1c7f3a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 91, y: -47) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 341, y: 104) not_8f5d7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 246, y: -193) less_than_9e3a6b root.Std_k98ojb.Math.LessThan {}\n        instance(x: 123, y: -275) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_num\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_num\n        instance(x: 196, y: 256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 215, y: -22) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_num\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_num\n        instance(x: -200, y: 39) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        2 -> div_547f34.second\n        execute_b7b391 -> setter_d09207.execute\n        num_5c0677 -> setter_d09207.new_value\n        setter_d09207.continue -> ifexpression_a2fa90.execute\n        not_8f5d7c.value -> less_than_9e3a6b.left\n        getter_7f13b7.value -> sub_9ff257.first\n        ifexpression_a2fa90.then -> continue_9a54bb\n        pow_584bfd.result -> div_547f34.first\n        1 -> div_547f34.second\n        div_547f34.result -> less_than_9e3a6b.right\n        less_than_9e3a6b.result -> output_c457b3\n        sub_9ff257.result -> setter_29a5c8.new_value\n        pow_584bfd.result -> setter_29a5c8.gen_1\n        num_5c0677 -> setter_29a5c8.gen_0\n        setter_29a5c8.continue -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -97, y: -68) num_prime_4f6d3b root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 83, y: -201) ifexpression_d2d4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 191, y: -134) ifexpression_7f1c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 97, y: -249) else_8d4e3b root.Std_k98ojb.Logic.Else {}\n        output_3339a3.value -> ifexpression_d2d4e.predicate\n        ifexpression_d2d4e.then -> ifexpression_7f1c5a.execute\n        ifexpression_7f1c5a.then -> else_8d4e3b.execute\n        x_853326 -> ifexpression_d2d4e.gen_0\n        y_5390f5 -> ifexpression_7f1c5a.gen_0\n    }\n\n    \n\n    instance(x: -92, y: 35) opposite_signs_8c9f3b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 19, y: 44) modulo_9d7a5b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 23, y: -202) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 35, y: 187) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 13, y: 247) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 21, y: -221) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 19, y: 46) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a % 11 == 0\"\n        }\n        output_f2630f -> ifexpression_a2fa90.value\n        n_27f29c -> sum_digits_96023e.n_6b655b\n        sum_digits_96023e.result -> modulo_9d7a5b.value\n        mul_2f9d09.first -> add_88bb8a.first\n        11 -> sub_9ff257.second\n        sum_digits_96023e.list -> add_88bb8a.list\n        ifexpression_a2fa90.then -> output_f2630f.execute\n        execute -> ifexpression_a2fa90.execute\n    }\n\n    \n\n    instance(x: -15, y: 45) is_diff_b1d5b9 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 83, y: 243) ifexpression_5c4a9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai.contains(search_ai)\"\n        }\n        instance(x: 394, y: -14) replace_8e2f6a root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -54) tolower_5c7d4b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 196, y: 19) toupper_5c7d4b root.Std_k98ojb.Strings.ToUpper {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = output\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = input\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = replace_ai\n        getter(x: 491, y: 194, name: \"getter_29a5c8\") getter_29a5c8 = search_ai\n        input_ai -> ifexpression_5c4a9d.input\n        ifexpression_5c4a9d.then -> replace_8e2f6a.execute\n        replace_8e2f6a.result -> tolower_5c7d4b.input\n        tolower_5c7d4b.result -> toupper_5c7d4b.input\n        toupper_5c7d4b.result -> output_ai\n        ifexpression_5c4a9d.else -> replace_8e2f6a.execute\n        replace_8e2f6a.result -> output_ai\n        search_ai -> tolower_5c7d4b.input\n        replace_ai -> toupper_5c7d4b.input\n        ifexpression_5c4a9d.value -> setter_d09207.execute\n    }\n\n    \n\n    instance(x: -97, y: -68) replace_char_6f8e3b root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 96, y: -25) tolower_5f2d4b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 246, y: 141) ifexpression_ba3e8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == input_ai\"\n        }\n        instance(x: 217, y: 253) equal_4f5d6b root.Std_k98ojb.Logic.Equal {}\n        setter(x: -44, y: -36, name: \"setter_3a2c7e\") setter_3a2c7e = output_ai\n        getter(x: 92, y: 272, name: \"getter_5f1d4a\") getter_5f1d4a = output_ai\n        input_ai -> tolower_5f2d4b.input\n        tolower_5f2d4b.output -> ifexpression_ba3e8c.left\n        equal_4f5d6b.left -> ifexpression_ba3e8c.right\n        equal_4f5d6b.right -> setter_3a2c7e.value\n        ifexpression_ba3e8c.then -> getter_5f1d4a.execute\n        tolower_5f2d4b.result -> ifexpression_ba3e8c.left\n    }\n\n    \n\n    instance(x: -93, y: 143) is_lower_6c9dd7 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 83, y: -222) filter_8f5d7c root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_8f5d7c.items\n        instance(x: 202, y: 19) map_1e0a9d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 446, y: -242) product_4f2f3d root.Std_k98ojb.Math.Product {}\n        setter(x: -38, y: -48, name: \"setter_5c7c6e\") setter_5c7c6e = unique\n        getter(x: 112, y: 23, name: \"getter_4a2f8d\") getter_4a2f8d = unique\n        instance(x: -204, y: 246) ifexpression_eb3d0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != 0\"\n        }\n        setter_5c7c6e.continue -> filter_8f5d7c.execute\n        execute_19300c -> setter_5c7c6e.execute\n        filter_8f5d7c.result -> map_1e0a9d.items\n        1 -> product_4f2f3d.factor\n        map_1e0a9d.output_list -> product_4f2f3d.input\n        product_4f2f3d.result -> output_cffcc2\n        filter_8f5d7c.result -> setter_5c7c6e.new_value\n    }\n\n    \n\n    instance(x: -91, y: 57) unique_product_b9a1b0 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 78, y: 73) filter_8f5d7a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_8f5d7a.items\n        list2_ai -> filter_8f5d7a.list\n        getter(x: -131, y: 55, name: \"getter_0e9c6a\") getter_0e9c6a = dissimilar_list\n        instance(x: 98, y: 44) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        output_ai -> concat_9b38cc.result\n        filter_8f5d7a.output_list -> concat_9b38cc.left\n        list1_ai -> concat_9b38cc.right\n        instance(x: 91, y: -12) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list1_ai\"\n        }\n        instance(x: 194, y: 21) ifexpression_b3d4c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list2_ai\"\n        }\n        filter_8f5d7a.handler -> dissimilar_list\n        ifexpression_a2fa90.then -> concat_9b38cc.left\n        ifexpression_b3d4c7.then -> concat_9b38cc.right\n    }\n\n    \n\n    instance(x: -93, y: 55) find_dissimilar_5f6e1a root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 395, y: 173) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 246) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 99, y: -123) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 196, y: 272) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        list_48148f -> for_8cb3f6.items\n        n_68068c -> sub_9ff257.second\n        execute_1e159f -> setter_d09207.execute\n        k_1e19fb -> setter_d09207.new_value\n        setter_d09207.continue -> ifexpression_a2fa90.execute\n        for_8cb3f6.itemAtIndex -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.then -> concat_9b38cc.right\n        sub_9ff257.result -> concat_9b38cc.left\n        list_48148f -> concat_9b38cc.list\n        getter_44a047.value -> setter_29a5c8.new_value\n        ifexpression_a2fa90.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4d1e9b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -13) add_8d4e6b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_8d4e6b.items\n        0 -> add_8d4e6b.first\n        sum_2a848f.result -> add_8d4e6b.second\n    }\n\n    \n\n    instance(x: -93, y: 44) _sum_b5c7ca root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 73, y: -173) ifexpression_d2d4f8 root.Std_k98ojb.Std.If {}\n        instance(x: 245, y: -43) isprime_b5e0c1 root.Std_k98ojb.Math.IsPrime {}\n        instance(x: 94, y: 256) less_than_9a3f6b root.Std_k98ojb.Math.LessThan {}\n        setter(x: -44, y: -64, name: \"setter_e8d5e4\") setter_e8d5e4 = num\n        getter(x: 102, y: 272, name: \"getter_1c6a2f\") getter_1c6a2f = num\n        instance(x: 112, y: -219) div_9b7b3b root.Std_k98ojb.Math.Div {}\n        instance(x: 104, y: -255) sub_8d4e0d root.Std_k98ojb.Math.Sub {}\n        instance(x: 96, y: -280) mul_1f6c2a root.Std_k98ojb.Math.Mul {}\n        instance(x: 73, y: -303) isprime_b5e0c1.isPrime -> less_than_9a3f6b.left\n        num_5c0677 -> sub_8d4e0d.input\n        div_9b7b3b.result -> mul_1f6c2a.first\n        2 -> div_9b7b3b.second\n        execute_b7b391 -> setter_e8d5e4.execute\n        num_5c0677 -> setter_e8d5e4.new_value\n        setter_e8d5e4.continue -> ifexpression_d2d4f8.execute\n        getter_1c6a2f.value -> sub_8d4e0d.first\n        isprime_b5e0c1.result -> less_than_9a3f6b.left\n        ifexpression_d2d4f8.then -> continue_9a54bb\n        getter_e8d5e4.value -> div_9b7b3b.first\n        1 -> sub_8d4e0d.second\n        mul_1f6c2a.result -> isprime_b5e0c1.right\n        ifexpression_d2d4f8.else -> setter_e8d5e4.execute\n        less_than_9a3f6b.result -> isprime_b5e0c1.isPrime\n        output_c457b3.value -> isprime_b5e0c1.value\n        continue_9a54bb.continue -> ifexpression_d2d4f8.execute\n    }\n\n    \n\n    instance(x: -63, y: 13) num_prime_6e7d25 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 95, y: -194) ifexpression_b4d7e2 root.Std_k98ojb.Std.If {}\n        x_853326 -> ifexpression_b4d7e2.input\n        y_5390f5 -> ifexpression_b4d7e2.y\n        ifexpression_b4d7e2.then -> output_3339a3.execute\n        instance(x: 173, y: -179) not_8c6eda root.Std_k98ojb.Logic.Not {}\n        x_853326 -> not_8c6eda.input\n        y_5390f5 -> not_8c6eda.y\n        ifexpression_b4d7e2.else -> output_3339a3.execute\n    }\n\n    \n\n    instance(x: -179, y: 28) opposite_signs_1b3f45 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 33, y: 17) modulo_9d7a8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 16, y: -15, name: \"sum\") property(Number) sum_5c2e3e\n        instance(x: 10, y: -13, name: \"alternating_sum\") property(Number) alternating_sum_6f7a4d\n\n        n_27f29c -> modulo_9d7a8b.n\n        11 -> modulo_9d7a8b.divisor\n        modulo_9d7a8b.result -> sum_5c2e3e\n        10 -> alternating_sum.second\n        1 -> alternating_sum.first\n        n_27f29c -> alternating_sum.gen_0\n        alternating_sum.index -> alternator_4bb6ec.gen_1\n        alternator_4bb6ec.list -> sum_5c2e3e\n        alternator_4bb6ec.index -> alternator_4bb6ec.gen_0\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_1\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_2\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_3\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_4\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_5\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_6\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_7\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_8\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_9\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_10\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_11\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_12\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_13\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_14\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_15\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_16\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_17\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_18\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_19\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_20\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_21\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_22\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_23\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_24\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_25\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_26\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_27\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_28\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_29\n        alternator_4bb6ec.value -> alternator_4bb6ec.gen_30\n\n        ifexpression_a2fa90.then -> is_diff.output_f2630f\n        sum_5c2e3e == 0 -> is_diff.output_f2630f\n        modulo_9d7a8b.result % 2 != 0 -> is_diff.output_f2630f\n    }\n\n    \n\n    instance(x: -21, y: -19) is_diff_4df6d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 82, y: 213) ifexpression_5f8d6a root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 395, y: -26) replace_char_9c4e3b root.main.replace_char {}\n        instance(x: 97, y: -127) strings_replace_5f7d8a root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\",\n            search: \"search_ai\",\n            replace: \"replace_ai\"\n        }\n        output_ai -> strings_replace_5f7d8a.output\n    }\n\n    \n\n    instance(x: -97, y: 45) replace_char_9c4e3b root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 89, y: -11) tolower_5f2e3b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 275, y: 141) ifexpression_b7c4d9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 342, y: -23) strings_contains_5a3f0e root.Std_k98ojb.Strings.Contains {}\n        instance(x: 450, y: 164) ifexpression_b7c4d9.execute()\n        input_ai -> tolower_5f2e3b.input\n        tolower_5f2e3b.output -> is_lower.output_ai\n        strings_contains_5a3f0e.contains -> is_lower.output_ai\n    }\n\n    \n\n    instance(x: -90, y: 59) is_lower_6c1d4b root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 446, y: -241) filter_8f6e9d root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_8f6e9d.items\n        instance(x: 215, y: 100) map_7c0a2f root.Std_k98ojb.Iteration.Map {}\n        instance(x: 96, y: -19) product_4f1d3f root.Std_k98ojb.Math.Product {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = unique\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = unique\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = unique\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = unique\n        filter_8f6e9d.result -> map_7c0a2f.items\n        instance(x: -200, y: 39) count_1b3f4f root.Std_k98ojb.Std.Count {}\n        list_5fda54 -> count_1b3f4f.list\n        count_1b3f4f.value -> map_7c0a2f.count\n        instance(x: -202, y: 100) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"count == 0\"\n        }\n        setter_d09207.continue -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> continue_45190b\n        execute_19300c -> setter_d09207.execute\n        ifexpression_a2fa90.else -> product_4f1d3f.execute\n        map_7c0a2f.output_list -> product_4f1d3f.items\n        product_4f1d3f.result -> output_cffcc2\n        unique.value -> setter_29a5c8.new_value\n    }\n\n    \n\n    instance(x: -97, y: -68) unique_product_9e0b7b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 341, y: 64) filter_8f6c4d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 194, y: -39) map_5e2a9a root.Std_k98ojb.Iteration.Map {}\n        list1_ai -> filter_8f6c4d.items\n        list2_ai -> filter_8f6c4d.items\n        filter_8f6c4d.predicate -> function(x: Number, y: Number) return x != y\n        map_5e2a9a.handler -> output_ai\n        instance(x: 194, y: -39) list_slice_1b3d7 root.Std_k98ojb.List.Slice {}\n        instance(x: 341, y: 64) concat_8f6c4d root.Std_k98ojb.List.Concat {}\n        filter_8f6c4d.output_list -> list_slice_1b3d7\n        list_slice_1b3d7.startIndex -> map_5e2a9a.gen_0\n        list_slice_1b3d7.endIndex -> map_5e2a9a.gen_1\n        concat_8f6c4d.left -> list_slice_1b3d7\n        concat_8f6c4d.right -> list_slice_1b3d7\n    }\n\n    \n\n    instance(x: -97, y: 44) find_dissimilar_5e2a9a root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 404, y: 540) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 563, y: 128) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = rotate\n        getter(x: 876, y: -518, name: \"getter_38583a\") getter_38583a = rotate\n        instance(x: -202, y: -236) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 215, y: -256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        getter(x: 313, y: 269, name: \"getter_c18a69\") getter_c18a69 = rotate\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        setter_41e4ad.continue -> for_8cb3f6.reset\n        execute_1ddb9f -> setter_41e4ad.execute\n        for_8cb3f6.onItem -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> concat_9b38cc.execute\n        rotate_29a5c8.continue -> for_8cb3f6.next\n        list_48148f -> for_8cb3f6.items\n        1 -> sub_9ff257.second\n        execute_1ddb9f -> setter_41e4ad.execute\n        n_68068c -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_a2fa90.execute\n        getter_c18a69.value -> output_823209\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        empty_ea3a3a.list -> setter_41e4ad.new_value\n        0 -> add_14921d.item\n        add_14921d.listWithItem -> setter_41e4c.execute\n        for_8cb3f6.done -> continue_a7f942\n        getter_38583a.value -> sub_9ff257.first\n        ifexpression_a2fa90.predicate -> concat_9b38cc.right\n        concat_9b38cc.result -> setter_41e4c.left\n        list_48148f -> concat_9b38cc.list\n        getter_c18a69.value -> add_14921d.list\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_49c6ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 92, y: -15) add_8d7b5e root.Std_k98ojb.Math.Add {}\n        instance(x: 199, y: 121) count_9c4e6a root.Std_k98ojb.Std.Count {}\n        list_2c62ab -> add_8d7b5e.items\n        0 -> count_9c4e6a.reset\n        execute_1e159f -> add_8d7b5e.execute\n        sum_2a848f -> add_8d7b5e.result\n    }\n\n    \n\n    instance(x: -89, y: 55) _sum_0c3f9d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 59, y: -129) ifexpression_d2f7d4 root.Std_k98ojb.Std.If {}\n        instance(x: 104, y: -204) isprime_5c6e1b root.main.num_prime {}\n        instance(x: 83, y: -28) less_than_8a9a3d root.Std_k98ojb.Math.LessThan {}\n        setter(x: -199, y: -48, name: \"setter_4f0c7e\") setter_4f0c7e = isprime\n        getter(x: 112, y: -219, name: \"getter_6a2d3b\") getter_6a2d3b = isprime\n        getter(x: 123, y: -110, name: \"getter_9f8c0b\") getter_9f8c0b = isprime\n        instance(x: -202, y: -234) div_4e7d1b root.Std_k98ojb.Math.Div {}\n        instance(x: 69, y: -193) sub_6a5e3d root.Std_k98ojb.Math.Sub {}\n        instance(x: 59, y: -129) mul_8f2c43 root.Std_k98ojb.Math.Mul {}\n        num_5c0677 -> div_4e7d1b.input\n        2 -> div_4e7d1b.second\n        div_4e7d1b.result -> sub_6a5e3d.first\n        sub_6a5e3d.result -> mul_8f2c43.first\n        2 -> mul_8f2c43.second\n        isprime_5c6e1b.n_6b655b -> mul_8f2c43.value\n        less_than_8a9a3d.left -> sub_6a5e3d.result\n        num_5c0677 -> less_than_8a9a3d.right\n        isprime_5c6e1b.predicate -> getter_4f0c7e.execute\n        div_4e7d1b.result -> ifexpression_d2f7d4.gen_0\n        sub_6a5e3d.result -> ifexpression_d2f7d4.gen_1\n        mul_8f2c43.result -> getter_9f8c0b.execute\n        isprime_5c6e1b.value -> less_than_8a9a3d.result\n        ifexpression_d2f7d4.then -> continue_9a54bb\n        isprime_5c6e1b.then -> output_c457b3.execute\n        less_than_8a9a3d.result -> getter_6a2d3b.execute\n    }\n\n    \n\n    instance(x: -202, y: 45) num_prime_4f0c7a root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 91, y: -142) ifexpression_d4d2c1 root.Std_k98ojb.Std.If {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 201, y: -193) ifexpression_8f6e5a root.Std_k98ojb.Std.If {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 93, y: -142) else_1d7c9b root.Std_k98ojb.Logic.Else {}\n        output_3339a3.value -> ifexpression_d4d2c1.predicate\n        ifexpression_d4d2c1.then -> ifexpression_8f6e5a.execute\n        ifexpression_8f6e5a.then -> else_1d7c9b.execute\n        else_1d7c9b.continue -> output_3339a3.execute\n    }\n\n    \n\n    instance(x: -95, y: 23) opposite_signs_0a2d4b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 13, y: -21) modulo_8d4e5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 11, y: -44) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 10, y: -67) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 5, y: -80) sum_0e8c1a root.Std_k98ojb.List.Sum {}\n        instance(x: 3, y: -93) add_88bb8a root.Std_k98ojb.List.Add {}\n        instance(x: 2, y: -106) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 1, y: -119) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a % 11 == 0\"\n        }\n        instance(x: 0, y: -132) not_7f5c6d root.Std_k98ojb.Logic.Not {}\n        output_f2630f -> ifexpression_a2fa90.value\n        n_27f29c -> sub_9ff257.input\n        mul_2f9d09.first -> sum_0e8c1a.input\n        11 -> div_547f34.divisor\n        add_88bb8a.item -> sum_0e8c1a.result\n        sum_0e8c1a.result -> ifexpression_a2fa90.gen_0\n    }\n\n    \n\n    instance(x: -4, y: -14) is_diff_5d7f6b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -104) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 395, y: 74) replace_char_9f8c5a root.main.replace_char {}\n        instance(x: 97, y: -127) Strings.Replace_4d0e2b root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\"\n            search: search_ai\n            replace: replace_ai\n        }\n        output_ai -> replace_char_9f8c5a.output\n    }\n\n    \n\n    instance(x: 94, y: -105) ifexpression_3d7de6_handler root.Std_k98ojb.Std.IfExpression {\n        expression: \"input_ai == search_ai\"\n    }\n    instance(x: 395, y: 74) replace_char_9f8c5a_handler root.replace_char_9f8c5a.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 90, y: 130) tolower_5c8f6a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -201, y: 19) ifexpression_b9d0e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 91, y: 260) strings_contains_5f8c3a root.Std_k98ojb.Strings.Contains {}\n        instance(x: -202, y: 245) ifexpression_b9d0e1.execute\n        input_ai -> tolower_5c8f6a.input\n        tolower_5c8f6a.output -> output_ai\n        strings_contains_5f8c3a.contains -> ifexpression_b9d0e1.gen_0\n        ifexpression_b9d0e1.then -> continue_4b2d7d\n        input_ai -> strings_contains_5f8c3a.input\n        strings_contains_5f8c3a.contains -> output_ai\n        ifexpression_b9d0e1.else -> tolower_5c8f6a.execute\n    }\n\n    \n\n    instance(x: -94, y: 43) is_lower_4b2d7d root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 394, y: -234) filter_9d3f8a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9d3f8a.items\n        instance(x: 215, y: 100) map_6c7e4f root.Std_k98ojb.Iteration.Map {}\n        map_6c7e4f.output_list -> output_cffcc2\n        instance(x: -200, y: 39) prod_5d3a0f root.Std_k98ojb.Math.Prod {}\n        filter_9d3f8a.result -> map_6c7e4f.items\n        list_5fda54 -> prod_5d3a0f.list\n    }\n\n    \n\n    instance(x: -93, y: 45) unique_product_b2d1b9 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 91, y: -102) filter_9d3f8a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_9d3f8a.items\n        list2_ai -> filter_9d3f8a.list\n        func() {\n            in(x: -131, y: 44, name: \"x\") property(Number) x_0e4c7b\n\n            out(x: 333, y: 19, name: \"\") property(Boolean) dissimilar_e2d1eb\n\n            instance(x: 92, y: -22) not_9f5a3b root.Std_k98ojb.Logic.Not {}\n            x_0e4c7b -> not_9f5a3b.input\n            list1_ai -> not_9f5a3b.right\n            list2_ai -> not_9f5a3b.left\n            not_9f5a3b.result -> dissimilar_e2d1eb\n        } -> filter_9d3f8a.handler\n        filter_9d3f8a.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 45) find_dissimilar_4c7e5b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 394, y: -116) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_9ab286.items\n        instance(x: 201, y: -28) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 275, y: 261) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        instance(x: -200, y: 39) list_slice_9f1d7b root.Std_k98ojb.List.Slice {}\n        list_48148f -> list_slice_9f1d7b.list\n        n_68068c -> list_slice_9f1d7b.start\n        instance(x: -201, y: 261) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 275, y: -28) append_8a3e2b root.Std_k98ojb.List.Append {}\n        setter_d09207.continue -> for_9ab286.reset\n        execute_1e159f -> setter_d09207.execute\n        n_68068c -> setter_d09207.new_value\n        ifexpression_a2fa90.then -> continue_c95bcb\n        sub_9ff257.result -> append_8a3e2b.first\n        list_slice_9f1d7b.end -> append_8a3e2b.second\n        append_8a3e2b.listWithItem -> concat_9b38cc.left\n        for_9ab286.item -> sub_9ff257.first\n        ifexpression_a2fa90.else -> continue_c95bcb\n        list_slice_9f1d7b.start -> setter_29a5c8.new_value\n        setter_29a5c8.continue -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4e3d6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 91, y: 46) add_9d5e8b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_9d5e8b.items\n        0 -> add_9d5e8b.first\n        sum_2a848f.result -> add_9d5e8b.second\n    }\n\n    \n\n    instance(x: -92, y: 55) _sum_1c7f3a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 394, y: -38) ifexpression_4d7f8e root.Std_k98ojb.Std.If {}\n        instance(x: 555, y: 101) isprime_6c2d3b root.Std_k98ojb.Math.Expression {\n            expression: \"(n == 1 || n == 0)\"\n        }\n        instance(x: 108, y: -234) not_8f5a4e root.Std_k98ojb.Logic.Not {}\n        instance(x: 281, y: 44) greaterthan_6d3c7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 106, y: -247) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -173, y: -43, name: \"setter_5a2e4f\") setter_5a2e4f = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        instance(x: 292, y: 53) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 94, y: -127) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 444, y: -201) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 105, y: -240) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 281, y: -330) lessThanOrEqual_8f5a4e root.Std_k98ojb.Math.LessThanOrEqual {}\n        setter_5a2e4f.continue -> ifexpression_4d7f8e.execute\n        execute_b7b391 -> setter_5a2e4f.execute\n        ifexpression_4d7f8e.then -> continue_9a54bb\n        isprime_6c2d3b.result -> not_8f5a4e.predicate\n        greaterthan_6d3c7.left -> div_547f34.first\n        div_547f34.second -> num_5c0677\n        lessThanOrEqual_8f5a4e.left -> modulo_adfa16.value\n        modulo_adfa16.result -> sub_9ff257.first\n        sub_9ff257.result -> add_88bb8a.first\n        add_88bb8a.second -> mul_2f9d09.second\n        mul_2f9d09.result -> greaterthan_6d3c7.result\n        not_8f5a4e.value -> isprime_6c2d3b.gen_0\n        ifexpression_4d7f8e.then -> output_c457b3.execute\n        output_c457b3.value -> setter_5a2e4f.new_value\n        continue_9a54bb -> setter_5a2e4f.continue\n    }\n\n    \n\n    instance(x: -92, y: 43) num_prime_8d0c6a root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 95, y: -186) ifexpression_d2d4e root.Std_k98ojb.Std.IfExpression {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 204, y: -222) ifexpression_7f1c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 161, y: -246) else_9d8e4b root.Std_k98ojb.Logic.Else {}\n        output_3339a3 -> ifexpression_d2d4e.then\n        x_853326 -> ifexpression_d2d4e.gen_0\n        y_5390f5 -> ifexpression_d2d4e.gen_1\n        ifexpression_7f1c5a.then -> else_9d8e4b.execute\n        y_5390f5 -> ifexpression_7f1c5a.gen_0\n        x_853326 -> ifexpression_7f1c5a.gen_1\n        else_9d8e4b.else -> output_3339a3.execute\n    }\n\n    \n\n    instance(x: -201, y: 34) opposite_signs_b2f6ec root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 33, y: 28) mod_1d4e8a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 15, y: -31) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 24, y: 46) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 23, y: 69) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -31, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        n_27f29c -> mod_1d4e8a.input\n        11 -> mod_1d4e8a.divisor\n        sub_9ff257.result -> add_88bb8a.first\n        add_88bb8a.result -> div_547f34.first\n        div_547f34.result -> output_f2630f\n        mod_1d4e8a.result -> setter_d09207.new_value\n        setter_d09207.continue -> output_f2630f.execute\n    }\n\n    \n\n    instance(x: -97, y: -68) is_diff_5c6b9a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 82, y: 253) ifexpression_5c4a9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai.contains(search_ai)\"\n        }\n        instance(x: 395, y: -20) replace_char_8e2f6b root.main.replace_char {}\n        instance(x: 94, y: 340) strings_replace_9d5c7a root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\",\n            search: \"search_ai\",\n            replace: \"replace_ai\"\n        }\n        output_ai -> strings_replace_9d5c7a.output\n    }\n\n    \n\n    instance(x: -97, y: 38) replace_char_8e2f6b root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 89, y: -104) tolower_5f2d4b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 292, y: 25) ifexpression_ba3e8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == input_ai\"\n        }\n        instance(x: 174, y: -216) continue_4f5d6d root.Std_k98ojb.Std.Continue {}\n        output_ai -> tolower_5f2d4b.output\n        tolower_5f2d4b.value -> ifexpression_ba3e8c.predicate\n        input_ai -> ifexpression_ba3e8c.execute\n        ifexpression_ba3e8c.then -> continue_4f5d6d\n    }\n\n    \n\n    instance(x: -93, y: 143) is_lower_0b2f7d root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 439, y: -179) filter_8f6e9a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_8f6e9a.items\n        instance(x: 93, y: 245) unique_7d2c3b root.Std_k98ojb.List.Unique {}\n        instance(x: 219, y: -141) map_4d0f1f root.Std_k98ojb.Iteration.Map {}\n        list_5fda54 -> map_4d0f1f.items\n        instance(x: 201, y: 25) prod_9a7c8e root.Std_k98ojb.Math.Prod {}\n        unique_7d2c3b.list -> map_4d0f1f.output_list\n        map_4d0f1f.output_list -> prod_9a7c8e.input\n        prod_9a7c8e.result -> output_cffcc2\n        filter_8f6e9a.continue -> unique_7d2c3b.execute\n        execute_19300c -> unique_7d2c3b.execute\n        unique_7d2c3b.output_list -> prod_9a7c8e.input\n    }\n\n    \n\n    instance(x: -94, y: 58) unique_product_5f1e0b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 114, y: -44) filter_8f5d7a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_8f5d7a.items\n        list2_ai -> filter_8f5d7a.list\n        instance(x: 201, y: 74) setdifference_6e3c4f root.Std_k98ojb.Set.Difference {}\n        filter_8f5d7a.result -> setdifference_6e3c4f.left\n        list2_ai -> setdifference_6e3c4f.right\n        instance(x: -202, y: 34) list_0c1a77 root.Std_k98ojb.List {}\n        setdifference_6e3c4f.result -> list_0c1a77\n        instance(x: 94, y: -47) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        list_0c1a77 -> map_6030c9.items\n        func() {\n            in(x: -531, y: -20, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) eq_5f2c1d root.Std_k98ojb.Logic.Equal {}\n            x_8ee839 -> eq_5f2c1d.left\n            list2_ai -> eq_5f2c1d.right\n            eq_5f2c1d.result -> _7dd980\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 45) find_dissimilar_b9ff6b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 404, y: 521) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_8cb3f6.items\n        instance(x: -200, y: 63) slice_9d2c4a root.Std_k98ojb.List.Slice {}\n        instance(x: 215, y: 102) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        instance(x: 118, y: 540, name: \"indexer_5c6d4a\") indexer_5c6d4 root.Std_k98ojb.List.Indexer {}\n        instance(x: -215, y: 256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 491, y: 194, name: \"rotator_2f8e7a\") rotator_2f8e7a root.Std_k98ojb.List.Rotator {}\n        instance(x: -200, y: 63) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it >= 0\"\n        }\n        setter_d09207.continue -> for_8cb3f6.reset\n        execute_1e159f -> setter_d09207.execute\n        n_68068c -> rotator_2f8e7a.n\n        rotator_2f8e7a.list -> list_48148f\n        rotator_2f8e7a.output -> output_823209\n        for_8cb3f6.onItem -> filter_875ddb.execute\n        filter_875ddb.result -> concat_9b38cc.left\n        filter_875ddb.list -> add_14921d.items\n        0 -> sub_9ff257.second\n        add_14921d.listWithItem -> setter_d09207.new_value\n        for_8cb3f6.item -> sub_9ff257.first\n        indexer_5c6d4.index -> rotator_2f8e7a.index\n        rotator_2f8e7a.output -> add_14921d.listWithItem\n        filter_875ddb.result -> concat_9b38cc.right\n        list_48148f -> concat_9b38cc.left\n        for_8cb3f6.done -> continue_c95bcb\n        rotator_2f8e7a.continue_d9efd7 -> setter_d09207.execute\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4c5d0a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 93, y: -45) add_8d4e6b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_8d4e6b.items\n        0 -> add_8d4e6b.first\n        sum_2a848f.result -> add_8d4e6b.second\n    }\n\n    \n\n    instance(x: -92, y: 54) _sum_b5c7ca root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 89, y: -139) ifexpression_d2d4f root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 201, y: 33) not_e0e5c6 root.Std_k98ojb.Logic.Not {}\n        instance(x: 83, y: -230) greaterthan_9f8d3a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 93, y: -261) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -194, y: -48, name: \"setter_6c1e5a\") setter_6c1e5a = is_prime\n        getter(x: 199, y: -201, name: \"getter_8f9d7a\") getter_8f9d7a = is_prime\n        instance(x: -111, y: -240) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        1 -> div_547f34.second\n        execute_b7b391 -> setter_6c1e5a.execute\n        num_5c0677 -> setter_6c1e5a.new_value\n        setter_6c1e5a.continue -> ifexpression_d2d4f.execute\n        ifexpression_d2d4f.then -> continue_9a54bb\n        not_e0e5c6.value -> greaterthan_9f8d3a.left\n        num_5c0677 -> greaterthan_9f8d3a.right\n        greaterthan_9f8d3a.result -> is_prime\n        ifexpression_d2d4f.else -> div_547f34.execute\n        floor_61b38d.output -> div_547f34.first\n        div_547f34.result -> setter_6c1e5a.gen_0\n        num_5c0677 -> setter_6c1e5a.gen_1\n        is_prime.value -> output_c457b3\n        greaterthan_9f8d3a.result -> not_e0e5c6.value\n        ifexpression_d2d4f.then -> continue_9a54bb\n        div_547f34.result -> setter_6c1e5a.gen_1\n    }\n\n    \n\n    instance(x: -94, y: 49) num_prime_8b7c43 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 82, y: -214) ifexpression_b2d7b1 root.Std_k98ojb.Std.If {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 91, y: -43) ifexpression_4f5e3a root.Std_k98ojb.Std.If {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 96, y: 11) not_8c6d7a root.Std_k98ojb.Logic.Not {}\n        instance(x: 93, y: -201) and_80a119 root.Std_k98ojb.Logic.And {}\n        output_3339a3.value -> ifexpression_b2d7b1.predicate\n        ifexpression_b2d7b1.then -> not_8c6d7a.execute\n        ifexpression_4f5e3a.then -> and_80a119.execute\n        and_80a119.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -73, y: 28) opposite_signs_0b1cd2 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 93, y: -41) modulo_9d7a8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 199, y: -109) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 191, y: -142) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 196, y: -215) is_diff_5f1d4e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 199, y: -216) not_8c6eda root.Std_k98ojb.Logic.Not {}\n        instance(x: 193, y: -213) and_80a119 root.Std_k98ojb.Logic.And {}\n        modulo_9d7a8b.divisor -> 11\n        n_27f29c -> add_88bb8a.first\n        sub_9ff257.result -> add_88bb8a.second\n        is_diff_5f1d4e.left -> not_8c6eda.left\n        is_diff_5f1d4e.right -> and_80a119.left\n        and_80a119.right -> modulo_9d7a8b.value\n        output_f2630f.value -> is_diff_5f1d4e.result\n        not_8c6eda.value -> is_diff_5f1d4e.gen_0\n    }\n\n    \n\n    instance(x: -86, y: 3) is_diff_9a2b7a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 82, y: 202) ifexpression_5c4a9d root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 395, y: 43) replace_char_8f6e3b root.main.replace_char {}\n        instance(x: 97, y: -23) strings_replace_9c4d2a root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\",\n            search: \"search_ai\",\n            replace: \"replace_ai\"\n        }\n        output_ai -> strings_replace_9c4d2a.output\n    }\n\n    \n\n    instance(x: -92, y: 54) replace_char_8f6e3b root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 80, y: -34) tolower_5f2e3b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 95, y: -23) ifexpression_b4d8c1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 101, y: 140) replace_9f0e3a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> tolower_5f2e3b.input\n        output_ai -> tolower_5f2e3b.output\n        tolower_5f2e3b.result -> ifexpression_b4d8c1.predicate\n        ifexpression_b4d8c1.then -> output_ai.value\n        replace_9f0e3a.search -> ifexpression_b4d8c1.gen_0\n        replace_9f0e3a.replace -> tolower_5f2e3b.output\n        input_ai -> replace_9f0e3a.input\n        replace_9f0e3a.result -> output_ai.value\n    }\n\n    \n\n    instance(x: -93, y: 55) is_lower_b4c8d1 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 278, y: -220) filter_8f6e9d root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_8f6e9d.list\n        instance(x: 201, y: 143) unique_1c4a2a root.Std_k98ojb.List.Unique {}\n        instance(x: 416, y: -194) map_3c0d7c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 522, y: -23) product_6f8e9b root.Std_k98ojb.Math.Product {}\n        setter(x: -157, y: -48, name: \"setter_d1a2df\") setter_d1a2df = unique_product\n        getter(x: 251, y: 178, name: \"getter_e5d3f8\") getter_e5d3f8 = unique_product\n        instance(x: 91, y: -159) add_9ff257 root.Std_k98ojb.Math.Add {}\n        setter(x: 586, y: -194) setter_d1a2df.continue -> filter_8f6e9d.execute\n        execute_19300c -> setter_d1a2df.execute\n        filter_8f6e9d.list -> unique_1c4a2a.items\n        unique_1c4a2a.unique_list -> map_3c0d7c.items\n        map_3c0d7c.output_list -> product_6f8e9b.input\n        1 -> add_9ff257.second\n        product_6f8e9b.result -> output_cffcc2\n        unique_1c4a2a.unique_list -> setter_d1a2df.new_value\n    }\n\n    \n\n    instance(x: -157, y: -68) unique_product_5d7c3a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 70, y: 81) filter_8f6c4d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -208, y: 130) map_5e2a9a root.Std_k98ojb.Iteration.Map {}\n        list1_ai -> filter_8f6c4d.items\n        list2_ai -> filter_8f6c4d.items\n        filter_8f6c4d.predicate -> function(x: Number, y: Number) {\n            return x != y\n        }\n        map_5e2a9a.handler -> output_ai\n        instance(x: 82, y: -33) list_flatten_7b1f3b root.Std_k98ojb.List.Flatten {}\n        output_ai -> list_flatten_7b1c6d\n        list_flatten_7b1c6d.list -> map_5e2a9a.output_list\n    }\n\n    \n\n    instance(x: -129, y: 45) find_dissimilar_4f3d0a root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 313, y: 249) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 562, y: -161) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: -215, y: -245, name: \"setter_41e4ad\") setter_41e4ad = rotated_list\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it < n\"\n        }\n        setter_41e4ad.continue -> for_8cb3f6.reset\n        execute_1e159f -> setter_41e4ad.execute\n        for_8cb3f6.onItem -> ifexpression_5c4634.execute\n        ifexpression_5c4634.then -> concat_9b38cc.execute\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        for_8cb3f6.item -> ifexpression_5c4634.gen_0\n        ifexpression_5c4634.else -> setter_41e4ad.next\n        setter_41e4ad.continue -> concat_9b38cc.next\n        concat_9b38cc.result -> output_823209\n    }\n\n    \n\n    instance(x: -193, y: 45) rotate_right_b5d1c3 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 92, y: -39) add_8d7b5e root.Std_k98ojb.Math.Add {}\n        instance(x: 193, y: 29) count_4c6c0b root.Std_k98ojb.Std.Count {}\n        list_2c62ab -> add_8d7b5e.list\n        1 -> count_4c6c0b.reset\n        execute_2a848f -> add_8d7b5e.execute\n        sum_2a848f -> add_8d7b5e.result\n    }\n\n    \n\n    instance(x: -203, y: 43) _sum_9c3f4f root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 44, y: -129) ifexpression_d2f7d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 0 || num == 1\"\n        }\n        instance(x: 85, y: 24) not_8c5e9a root.Std_k98ojb.Logic.Not {}\n        instance(x: 63, y: -193) greaterthan_f2d6f7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 55, y: -201) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 105, y: -231) isprime_5e8a3c root.main.num_prime {}\n        num_5c0677 -> not_8c5e9a.input\n        not_8c5e9a.value -> greaterthan_f2d6f7.left\n        num_5c0677 -> greaterthan_f2d6f7.right\n        greaterthan_f2d6f7.result -> div_547f34.first\n        1 -> div_547f34.second\n        not_8c5e9a.value -> isprime_5e8a3c.input\n        isprime_5e8a3c.output_list -> output_c457b3\n    }\n\n    \n\n    instance(x: -91, y: -22) num_prime_6d4f7a root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 91, y: -123) ifexpression_b4d2c1 root.Std_k98ojb.Std.If {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 196, y: -219) ifexpression_8f5a3e root.Std_k98ojb.Std.If {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 83, y: -246) ifexpression_d2d4c9 root.Std_k98ojb.Std.If {\n            expression: \"(x == 0 || y == 0)\"\n        }\n        setter(x: -34, y: -48, name: \"setter_3f8e5a\") setter_3f8e5a = opposite\n        getter(x: 121, y: -219, name: \"getter_4d2c7b\") getter_4d2c7b = opposite\n        instance(x: 159, y: -246) not_9f1d0b root.Std_k98ojb.Logic.Not {}\n        setter(x: 394, y: -123, name: \"setter_e5a3e8\") setter_e5a3e8 = not_\n        getter(x: 201, y: -219, name: \"getter_6f7c4d\") getter_6f7c4d = not_\n        instance(x: 91, y: -123) and_9b1f2a root.Std_k98ojb.Logic.And {}\n        setter_3f8e5a.continue -> ifexpression_b4d2c1.execute\n        ifexpression_b4d2c1.then -> output_3339a3.value = true\n        ifexpression_b4d2c1.else -> and_9b1f2a.execute\n        setter_e5a3e8.continue -> ifexpression_d2d4c9.execute\n        ifexpression_d2d4c9.then -> output_3339a3.value = false\n        ifexpression_d2d4c9.else -> and_9b1f2a.execute\n        and_9b1f2a.result -> setter_e5a3e8.new_value\n        getter_e5a3e8.value -> output_3339a3\n        x_853326 -> ifexpression_b4d2c1.gen_0\n        y_5390f5 -> ifexpression_d2d4c9.gen_0\n    }\n\n    \n\n    instance(x: -34, y: -48) opposite_6e8b7a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 15, y: -44) modulo_8d7e4b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 13, y: -23) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 11, y: -14) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 10, y: -5) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 1, y: -16) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: -7) sum_6c8e4a root.Std_k98ojb.List.Sum {}\n        instance(x: 9, y: -18) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sum % 11 == 0\"\n        }\n        output_f2630f -> ifexpression_a2fa90.predicate\n        n_27f29c -> sub_9ff257.first\n        11 -> mul_2f9d09.second\n        pow_584bfd.y -> sum_6c8e4a.gen_1\n        sum_6c8e4a.value -> add_88bb8a.first\n        ifexpression_a2fa90.then -> output_f2630f.execute\n        execute -> ifexpression_a2fa90.else\n    }\n\n    \n\n    instance(x: -14, y: 3) is_diff_5d7b9c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -23) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 395, y: 74) replace_char_9f2a5e root.main.replace_char {}\n        instance(x: 97, y: -127) Strings.Replace_8d4c7b root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\"\n            search: search_ai\n            replace: replace_ai\n        }\n        output_ai -> replace_char_9f2a5e.output\n    }\n\n    \n\n    instance(x: 94, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n    instance(x: 395, y: 74) replace_char_9f2a5e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 94, y: -23) tolower_5f2d7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 202, y: 134) ifexpression_ba8c9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != input_ai\"\n        }\n        instance(x: 275, y: -14) equal_4f2d7 root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = output\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = output\n        instance(x: 491, y: 194, name: \"input_ai\") property(String) input_ai\n        tolower_5f2d7b.input -> input_ai\n        equal_4f2d7.left -> getter_7f13b7.value\n        equal_4f2d7.right -> input_ai\n        ifexpression_ba8c9e.then -> output_ai\n        is_lower.continue -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) is_lower_5c6f3a root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 394, y: -193) filter_9f5d7a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f5d7a.list\n        instance(x: 215, y: 100) unique_8e3c4a root.Std_k98ojb.List.Uniq {}\n        instance(x: 96, y: -23) product_6d0f2d root.Std_k98ojb.Math.Product {}\n        setter(x: -43, y: -48, name: \"setter_5c7f8e\") setter_5c7f8e = unique\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = unique\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = unique\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = unique\n        list_5fda54 -> filter_9f5d7a.items\n        filter_9f5d7a.result -> unique.new_value\n        unique.list -> product_6d0f2d.input\n        1 -> product_6d0f2d.factor\n        execute_19300c -> setter_5c7f8e.execute\n        setter_5c7f8e.continue -> continue_45190b\n        getter_7f13b7.value -> product_6d0f2d.result\n        unique.list -> product_6d0f2d.input\n        1 -> product_6d0f2d.factor\n        setter_29a5c8.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -97, y: -68) unique_product_4e9d7a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 94, y: -104) filter_9f5d7b root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_9f5d7b.items\n        list2_ai -> filter_9f5d7b.list\n        func() {\n            in(x: -131, y: 34, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) not_9f5d7c root.Std_k98ojb.Logic.Not {}\n            instance(x: 196, y: 256) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                expression: \"x in list1_ai\"\n            }\n            instance(x: 215, y: 100) contains_9f5d7d root.Std_k98ojb.List.Contains {}\n            setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = dissimilar\n            getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = dissimilar\n            getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = dissimilar\n            setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = dissimilar\n            list1_ai -> filter_9f5d7b.items\n            list2_ai -> filter_9f5d7b.list\n            filter_9f5d7b.output_list -> output_ai\n        } -> filter_9f5d7b.handler\n    }\n\n    \n\n    instance(x: -92, y: 45) find_dissimilar_b9ff6b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 394, y: -115) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_8cb3f6.items\n        instance(x: 215, y: -23) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == n\"\n        }\n        instance(x: 196, y: 256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        instance(x: -200, y: 39) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        setter_d09207.continue -> for_8cb3f6.reset\n        execute_1e159f -> setter_d09207.execute\n        for_8cb3f6.onItem -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> add_14921d.execute\n        add_14921d.listWithItem -> concat_9b38cc.right\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        getter_c18a69.value -> sub_9ff257.first\n        ifexpression_a2fa90.else -> setter_29a5c8.execute\n        sub_9ff257.result -> setter_29a5c8.new_value\n        n_68068c -> ifexpression_a2fa90.gen_0\n        setter_29a5c8.continue -> continue_c95bcb\n        concat_9b38cc.result -> output_823209\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4f6d7e root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 94, y: -104) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_2c62ab -> map_f2330d.items\n        func() {\n            in(x: -212, y: -36, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) add_88bb8a root.Std_k98ojb.Math.Add {}\n            x_8ee839 -> add_88bb8a.first\n            _7dd980 -> add_88bb8a.second\n            add_88bb8a.result -> sum_2a848f\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> sum_2a848f\n    }\n\n    \n\n    instance(x: -92, y: 45) _sum_b9ff6b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 83, y: -43) ifexpression_d2d4f8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 201, y: 19) not_5c7e3b root.Std_k98ojb.Logic.Not {}\n        instance(x: 275, y: -202) greaterthan_8f6d4a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 94, y: -234) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -48, name: \"setter_5c9e2d\") setter_5c9e2d = is_prime\n        getter(x: 102, y: -251, name: \"getter_4f1a8a\") getter_4f1a8a = is_prime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        2 -> greaterthan_8f6d4a.right\n        num_5c0677 -> greaterthan_8f6d4a.left\n        greaterthan_8f6d4a.result -> div_547f34.first\n        1 -> div_547f34.second\n        div_547f34.result -> setter_5c9e2d.new_value\n        is_prime.continue -> continue_9a54bb\n        execute_b7b391 -> setter_5c9e2d.execute\n        ifexpression_d2d4f8.then -> output_c457b3\n        not_5c7e3b.value -> greaterthan_8f6d4a.result\n        is_prime.value -> output_c457b3\n        floor_61b38d.output -> div_547f34.first\n        ifexpression_d2d4f8.else -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -96, y: 45) num_prime_5c7e6 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 96, y: -193) ifexpression_2d7c8b root.Std_k98ojb.Std.IfExpression {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 189, y: -247) ifexpression_9f4e1a root.Std_k98ojb.Std.IfExpression {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 83, y: -222) not_6c7d5a root.Std_k98ojb.Logic.Not {}\n        instance(x: 157, y: -219) and_8f9e2f root.Std_k98ojb.Logic.And {}\n        output_3339a3 -> and_8f9e2f.left\n        not_6c7d5a.value -> and_8f9e2f.right\n        ifexpression_2d7c8b.then -> output_3339a3.execute\n        ifexpression_9f4e1a.then -> output_3339a3.execute\n        x_853326 -> ifexpression_2d7c8b.gen_0\n        y_5390f5 -> ifexpression_9f4e1a.gen_0\n    }\n\n    \n\n    instance(x: -91, y: 34) opposite_signs_6e9c43 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 13, y: 19) mod_1d4a9b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 14, y: -22) sum_8e5c6d root.Std_k98ojb.List.Sum {}\n        instance(x: 11, y: -44) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 3, y: -63) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 4, y: -74) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -23, y: -89, name: \"setter_1a8c0e\") setter_1a8c0e = diff\n        getter(x: -30, y: 13, name: \"getter_c4d7f2\") getter_c4d7f2 = diff\n        instance(x: 15, y: -26) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 11 == 0\"\n        }\n        setter_1a8c0e.continue -> is_diff.execute\n        n_27f29c -> mod_1d4a9b.input\n        mod_1d4a9b.result -> sum_8e5c6d.value\n        10 -> add_88bb8a.first\n        1 -> mul_2f9d09.second\n        sum_8e5c6d.list -> sub_9ff257.items\n        sub_9ff257.result -> getter_c4d7f2\n        ifexpression_a2fa90.then -> output_f2630f.execute\n        diff.value -> is_diff.output\n        add_88bb8a.result -> setter_1a8c0e.new_value\n    }\n\n    \n\n    instance(x: -28, y: 21) is_diff_d4d7b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 93, y: 121) ifexpression_8d7c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai.contains(search_ai)\"\n        }\n        instance(x: 394, y: -21) replace_char_4e3a2b root.main.replace_char {}\n        instance(x: 97, y: 261) strings_replace_a8d5c1 root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\",\n            search: \"search_ai\",\n            replace: \"replace_ai\"\n        }\n        output_ai -> strings_replace_a8d5c1.output\n    }\n\n    \n\n    instance(x: -97, y: 261) replace_char_4e3a2b root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 92, y: -24) tolower_5c8f6b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5c8f6b.input\n        tolower_5c8f6b.output -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: 46) is_lower_b2d0a3 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 91, y: -215) filter_9f8d5e root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f8d5e.items\n        instance(x: 202, y: 46) unique_4a3c6b root.Std_k98ojb.List.Unique {}\n        unique_4a3c6b.list -> filter_9f8d5e.list\n        instance(x: 91, y: -123) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_5fda54 -> map_f2330d.items\n        instance(x: 202, y: 46) prod_6c7a9f root.Std_k98ojb.Math.Prod {}\n        unique_4a3c6b.list -> map_f2330d.items\n        instance(x: 91, y: -123) list_5da8e1 root.Std_k98ojb.List {}\n        map_f2330d.output_list -> list_5da8e1\n        instance(x: 202, y: 46) prod_6c7a9f.output -> output_cffcc2\n        unique_4a3c6b.list -> filter_9f8d5e.list\n    }\n\n    \n\n    instance(x: -93, y: 54) unique_product_b0d4ac root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 104, y: -102) setdiff_8f5d7a root.Std_k98ojb.Set.Difference {}\n        instance(x: 292, y: 69) filter_9e4c0b root.Std_k98ojb.Query.Filter {\n            where: \"it in list1_ai\"\n        }\n        instance(x: 215, y: -44) setdiff_8f5d7a.left -> list2_ai\n        instance(x: 104, y: -102) filter_9e4c0b.right -> list1_ai\n        instance(x: 292, y: 69) output_ai -> setdiff_8f5d7a.result\n    }\n\n    \n\n    instance(x: -93, y: 46) find_dissimilar_f2df3b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 94, y: -106) slice_8f5d7b root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_8f5d7b.items\n        n_68068c -> slice_8f5d7b.length\n        0 -> slice_8f5d7b.start\n        slice_8f5d7b.result -> rotate_right_4a2e9b\n        instance(x: -202, y: -43) for_1c6c3d root.Std_k98ojb.Std.For {}\n        list_48148f -> for_1c6c3d.items\n        n_68068c -> for_1c6c3d.length\n        0 -> for_1c6c3d.index\n        rotate_right_4a2e9b.itemAtIndex -> output_823209\n        rotate_right_4a2e9b.itemAtIndex -> for_1c6c3d.next\n        instance(x: -202, y: -43) next_8f7d5f root.Std_k98ojb.List.Next {}\n        0 -> next_8f7d5f.index\n        list_48148f -> next_8f7d5f.items\n        rotate_right_4a2e9b.itemAtIndex -> next_8f7d5f.item\n        instance(x: -202, y: -43) prev_8c1a3f root.Std_k98ojb.List.Previous {}\n        0 -> prev_8c1a3f.index\n        list_48148f -> prev_8c1a3f.items\n        rotate_right_4a2e9b.itemAtIndex -> prev_8c1a3f.item\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_f6d7ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 83, y: -35) add_8d7e6b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_8d7e6b.items\n        0 -> add_8d7e6b.first\n        add_8d7e6b.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -92, y: 46) _sum_9c1d3a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -41) ifexpression_8d4e6f root.Std_k98ojb.Std.If {}\n        instance(x: 275, y: 19) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -54, name: \"setter_d0c7a1\") setter_d0c7a1 = isPrime\n        getter(x: 102, y: 55, name: \"getter_5d4f2e\") getter_5d4f2e = isPrime\n        instance(x: -193, y: 25) greaterthanorequal_6b9c0d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 96, y: -222) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        getter(x: 102, y: 55, name: \"getter_5d4f2e\") getter_5d4f2e = isPrime\n        list_b5d10a -> greaterthanorequal_6b9c0d.left\n        num_5c0677 -> greaterthanorequal_6b9c0d.right\n        greaterthanorequal_6b9c0d.result -> sub_9ff257.first\n        sub_9ff257.result -> isPrime.gen_1\n        2 -> div_547f34.second\n        execute_b7b391 -> setter_d0c7a1.execute\n        num_5c0677 -> setter_d0c7a1.new_value\n        setter_d0c7a1.continue -> ifexpression_8d4e6f.execute\n        isPrime.gen_0 -> output_c457b3.value\n        ifexpression_8d4e6f.then -> continue_9a54bb\n        greaterthanorequal_6b9c0d.result == 1 -> output_c457b3.value\n        sub_9ff257.result > 1 -> isPrime.gen_1\n    }\n\n    \n\n    instance(x: -198, y: -23) num_prime_4e8a2f root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 83, y: -121) ifexpression_d4d2c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x * y < 0\"\n        }\n        setter(x: -38, y: -144, name: \"setter_1e9f7a\") setter_1e9f7a = opposite\n        getter(x: 102, y: -201, name: \"getter_5c6f2d\") getter_5c6f2d = opposite\n        getter(x: 159, y: -219, name: \"getter_8b3f4a\") getter_8b3f4d = output_3339a3\n        instance(x: 41, y: -67) not_1f5c23 root.Std_k98ojb.Logic.Not {}\n        setter(x: 194, y: 13, name: \"setter_e2e0ca\") setter_e2e0ca = Logic_and\n        instance(x: 69, y: 142) and_80a119 root.Std_k98ojb.Logic.And {}\n        setter_1e9f7a.continue -> ifexpression_d4d2c6.execute\n        ifexpression_d4d2c6.then -> setter_e2e0ca.execute\n        setter_e2e0ca.left -> not_1f5c23.input\n        setter_e2e0ca.right -> y_5390f5\n        setter_e2e0ca.result -> getter_8b3f4d\n        setter_1e9f7a.continue -> continue_c6df95\n        ifexpression_d4d2c6.else -> setter_e2e0ca.continue\n        opposite_signs.output_3339a3 = getter_5c6f2d.value\n    }\n\n    \n\n    instance(x: -93, y: 46) opposite_signs_5b8b95 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 12, y: 21) mod_1d8b5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 19, y: -11, name: \"a\") property(Number) a_b7c2eb\n        instance(x: 17, y: 3, name: \"b\") property(Number) b_9e4f5d\n\n        mod_1d8b5a.divisor = 11\n        n_27f29c -> mod_1d8b5a.value\n        a_b7c2eb -> (n_27f29c % 10 * 2 + a_b7c2eb)\n        b_9e4f5d -> (a_b7c2eb % 10 * 2 + b_9e4f5d)\n        mod_1d8b5a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -15, y: -24) is_diff_d9dd3d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 92, y: 201) strings_replace_5c4a7f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_5c4a7f.input\n        search_ai -> strings_replace_5c4a7f.search\n        replace_ai -> strings_replace_5c4a7f.replace\n        strings_replace_5c4a7f.result -> output_ai\n    }\n\n    \n\n    instance(x: 91, y: 55) tolower_f3e8b9 root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_f3e8b9.input\n    tolower_f3e8b9.output -> strings_replace_5c4a7f.input\n\n    instance(x: 91, y: -11) toupper_b2cd34 root.Std_k98ojb.Strings.ToUpper {}\n    input_ai -> toupper_b2cd34.input\n    toupper_b2cd34.output -> strings_replace_5c4a7f.search\n\n    instance(x: 95, y: 200) strings_contains_f9d0e1 root.Std_k98ojb.Strings.Contains {}\n    strings_replace_5c4a7f.result -> strings_contains_f9d0e1.input\n    search_ai -> strings_contains_f9d0e1.contains\n\n    instance(x: 90, y: 209) ifexpression_8f6dd2 root.Std_k98ojb.Std.IfExpression {\n        expression: \"strings_contains_f9d0e1.result\"\n    }\n    instance(x: 92, y: -22) add_4c8a66 root.Std_k98ojb.Math.Add {}\n    strings_replace_5c4a7f.result -> add_4c8a66.first\n    replace_ai -> add_4c8a66.second\n    add_4c8a66.result -> strings_replace_5c4a7f.replace\n\n    instance(x: 93, y: 200) strings_isnumeric_a2b3e1 root.Std_k98ojb.Strings.IsNumeric {}\n    strings_replace_5c4a7f.result -> strings_isnumeric_a2b3e1.input\n    ifexpression_8f6dd2.then -> continue_0d9bdf\n    strings_isnumeric_a2b3e1.result -> output_ai\n    ifexpression_8f6dd2.else -> replace_ai\n\n    instance(x: -96, y: 209) if_e2c7a4 root.Std_k98ojb.Std.If {}\n    input_ai -> if_e2c7a4.input\n    if_e2c7a4.value -> output_ai\n    continue_0d9bdf -> strings_isnumeric_a2b3e1.execute\n\n    instance(x: 97, y: -22) replace_char_5f1e6d root.Std_k98ojb.Strings.Replace {}\n    input_ai -> replace_char_5f1e6d.input\n    ifexpression_8f6dd2.value -> replace_char_5f1e6d.search\n    strings_replace_5c4a7f.result -> replace_char_5f1e6d.replace\n\n    instance(x: 90, y: 209) tolower_f3e8b9 -> tolower_f3e8b9.input\n    ifexpression_8f6dd2.then -> continue_0d9bdf\n\n    instance(x: -96, y: 200) replace_char_5f1e6d -> replace_char_5f1e6d.execute\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 96, y: -19) tolower_5d8c7f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 394, y: -23) contains_1a3e2b root.Std_k98ojb.Strings.Contains {}\n        setter(x: -215, y: -48, name: \"setter_4f6c21\") setter_4f6c21 = local_lower\n        getter(x: 118, y: -20, name: \"getter_8a5d2a\") getter_8a5d2a = local_lower\n        instance(x: -201, y: -22) ifexpression_d3b3e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"output_ai == true\"\n        }\n        setter(x: 491, y: -29, name: \"setter_6c0a4f\") setter_6c0a4f = local_lower\n        list_63c248 -> tolower_5d8c7f.input\n        input_ai -> contains_1a3e2b.input\n        0 -> contains_1a3e2b.contains\n        contains_1a3e2b.result -> setter_4f6c21.value\n        ifexpression_d3b3e1.then -> output_ai\n        tolower_5d8c7f.result -> setter_6c0a4f.value\n        setter_4f6c21.continue -> ifexpression_d3b3e1.execute\n        setter_6c0a4f.continue -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 43) is_lower_5a2d8a root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 346, y: 151) filter_9f5c3a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f5c3a.list\n        instance(x: 217, y: 26) count_7e6d2f root.Std_k98ojb.List.Count {}\n        filter_9f5c3a.result -> count_7e6d2f.input\n        instance(x: 93, y: -202) list_not_empty_0a5a8a root.Std_k98ojb.List.NotEmpty {}\n        count_7e6d2f.value -> list_not_empty_0a5a8a.input\n        instance(x: 190, y: 59) itermap_9c3a4c root.Std_k98ojb.Iteration.Map {}\n        list_not_empty_0a5a8a.list -> itermap_9c3a4c.items\n        instance(x: 83, y: -233) product_1f7b6d root.Std_k98ojb.Math.Product {}\n        itermap_9c3a4c.output_list -> product_1f7b6d.inputs\n        1 -> product_1f7b6d.factor\n        execute_19300c -> product_1f7b6d.execute\n        filter_9f5c3a.result -> product_1f7b6d.input\n        count_7e6d2f.value -> itermap_9c3a4c.index\n        list_not_empty_0a5a8a.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -93, y: 59) unique_product_b3e38f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 93, y: 55) setdiff_9d5e3f root.Std_k98ojb.Set.Difference {}\n        instance(x: -199, y: 24) filter_e0a6c7 root.Std_k98ojb.Query.Filter {\n            where: \"it in list1 or it in list2\"\n        }\n        instance(x: 201, y: 46) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list1 and not it in list2\"\n        }\n        setter(x: -38, y: -24, name: \"setter_b5c9f8\") setter_b5c9f8 = dissimilar\n        getter(x: 121, y: 67, name: \"getter_7d0c21\") getter_7d0c21 = dissimilar\n        instance(x: 96, y: -11) flatten_6a1d4b root.Std_k98ojb.List.Flatten {}\n        instance(x: 208, y: -23) filter_e0a6c7(root.Std_k98ojb.Query.Filter {\n            where: \"it in list2\"\n        }) -> filter_e0a6c7.handler\n        setter_b5c9f8.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_6e4eb1\n        execute_1e159f -> setter_b5c9f8.execute\n        k_1e19fb -> setter_b5c9f8.new_value\n        setter_b5c9f8.continue -> continue_6e4eb1\n        filter_e0a6c7.list -> setdiff_9d5e3f.items\n        1 -> setdiff_9d5e3f.k\n        execute_1e159f -> setter_b5c9f8.execute\n        k_1e19fb -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> continue_6e4eb1\n        filter_e0a6c7.result -> dissimilar\n        dissimilar.listWithItem -> output_ai\n    }\n\n    \n\n    instance(x: -91, y: 44) find_dissimilar_9bfcf8 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 409, y: 49) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_8cb3f6.items\n        func() {\n            in(x: -185, y: -44, name: \"i\") property(Number) i_2d9c43\n\n            out(x: 332, y: -58, name: \"\") property(List) temp_list_4b1a5e\n            out(x: 742, y: -113, name=\"output_823209\") property(List) output_823209\n\n            instance(x: 410, y: 23) listSlice_6a2d3f root.Std_k98ojb.List.Slice {}\n            temp_list_4b1a5e -> listSlice_6a2d3f.list\n            i_2d9c43 -> listSlice_6a2d3f.start\n            -n_68068c -> listSlice_6a2d3f.end\n\n            instance(x: 74, y: 64) concat_9b38cc root.Std_k98ojb.List.Concat {}\n            concat_9b38cc.left -> temp_list_4b1a5e\n            for_8cb3f6.index -> concat_9b38cc.right\n\n            instance(x: -215, y: 21) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                expression: \"i == n_68068c\"\n            }\n            instance(x: 292, y: 59) setAt_7d9e6a root.Std_k98ojb.List.SetAt {}\n            temp_list_4b1a5e -> setAt_7d9e6a.list\n            for_8cb3f6.item -> setAt_7d9e6a.index\n            list_48148f -> setAt_7d9e6a.new_value\n\n            instance(x: 73, y: -26) ifexpression_a2fa90.execute\n            concat_9b38cc.result -> output_823209\n        } -> for_8cb3f6.handler\n        for_8cb3f6.done -> continue_f7d5c6\n        execute_1e159f -> for_8cb3f6.reset\n        ifexpression_a2fa90.then -> continue_f7d5c6\n    }\n\n    \n\n    instance(x: -92, y: 55) rotate_right_4b3a9b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 93, y: -44) add_8d5b4e root.Std_k98ojb.Math.Add {}\n        instance(x: 191, y: 101) count_b1f6c7 root.Std_k98ojb.Std.Count {}\n        instance(x: 246, y: 23) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        list_2c62ab -> add_8d5b4e.items\n        count_b1f6c7.count -> add_8d5b4e.list\n        1 -> count_b1f6c7.reset\n        execute_2a848f -> add_8d5b4e.execute\n    }\n\n    \n\n    instance(x: -93, y: 69) _sum_9c8693 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 394, y: 49) ifexpression_d2f4e8 root.Std_k98ojb.Std.If {}\n        instance(x: 555, y: -201) greaterthan_f0c3d1 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 102, y: 234) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 97, y: 28) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        setter(x: -186, y: -48, name: \"setter_a9d3a1\") setter_a9d3a1 = is_prime\n        getter(x: 106, y: 213, name: \"getter_4c6f7e\") getter_4c6f7e = is_prime\n        instance(x: -193, y: 27) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        modulo_adfa16.result -> div_547f34.first\n        num_5c0677 -> div_547f34.second\n        greaterthan_f0c3d1.left -> getter_a9d3a1.value\n        1 -> floor_61b38d.value\n        execute_b7b391 -> setter_a9d3a1.execute\n        num_5c0677 -> floor_61b38d.input\n        ifexpression_d2f4e8.then -> continue_9a54bb\n        output_c457b3.value -> greaterthan_f0c3d1.result\n        div_547f34.result -> getter_a9d3a1.new_value\n    }\n\n    \n\n    instance(x: -186, y: 27) is_prime_4e8e6f root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 90, y: -151) ifexpression_d4c7d1 root.Std_k98ojb.Std.If {}\n        x_853326 -> ifexpression_d4c7d1.input\n        y_5390f5 -> ifexpression_d4c7d1.input\n        ifexpression_d4c7d1.then -> output_3339a3.execute\n        ifexpression_d4c7d1.else -> output_3339a3.execute\n    }\n\n    \n\n    instance(x: -92, y: 46) opposite_signs_6f2e5b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 23, y: -41) mod_9e5d7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 13, y: -104) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 15, y: -64) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 7, y: -28) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 3, y: -13) sum_8c6eda root.Std_k98ojb.List.Sum {}\n        instance(x: 11, y: -4) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -31, y: -56, name: \"setter_5a2d3e\") setter_5a2d3e = diff\n        getter(x: 22, y: -29, name: \"getter_6c8f4f\") getter_6c8f4f = diff\n        instance(x: 10, y: -34) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a % 11 == 0\"\n        }\n        setter(x: 19, y: -44, name: \"setter_8d5f6e\") setter_8d5f6e = diff\n        getter(x: 14, y: -59, name: \"getter_b2c9a1\") getter_b2c9a1 = diff\n        instance(x: 4, y: -11) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        n_27f29c -> mul_2f9d09.first\n        10 -> mul_2f9d09.second\n        mul_2f9d09.result -> sum_8c6eda.input\n        sum_8c6eda.value -> add_88bb8a.first\n        add_88bb8a.result -> sub_9ff257.first\n        sub_9ff257.result -> mod_9e5d7a.value\n        mod_9e5d7a.result -> div_547f34.first\n        div_547f34.result -> getter_b2c9a1\n        ifexpression_a2fa90.then -> output_f2630f.execute\n        setter_5a2d3e.continue -> continue_f4d6b8\n        execute_27b8c3 -> setter_5a2d3e.execute\n        ifexpression_a2fa90.else -> diff.execute_cdac2a\n        diff.continue_cdac2a -> output_f2630f.execute\n    }\n\n    \n\n    instance(x: -21, y: 11) is_diff_9c8b1 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 91, y: -26) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 396, y: 219) replace_9fba8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 97, y: -23) tolower_5c4634 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 574, y: 246) toupper_9fba8c root.Std_k98ojb.Strings.ToUpper {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = output\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = input\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = replace_ai\n        getter(x: 491, y: 194, name: \"getter_29a5c8\") getter_29a5c8 = search_ai\n        input_ai -> ifexpression_3d7de6.input\n        ifexpression_3d7de6.then -> tolower_5c4634.execute\n        replace_9fba8c.search -> tolower_5c4634.result\n        tolower_5c4634.result -> toupper_9fba8c.execute\n        toupper_9fba8c.result -> output_ai\n        ifexpression_3d7de6.else -> replace_9fba8c.execute\n        replace_9fba8c.search -> tolower_5c4634.input\n        tolower_5c4634.result -> output_ai\n        replace_9fba8c.replace -> toupper_9fba8c.result\n    }\n\n    \n\n    instance(x: -97, y: -68) replace_char_49c6ac root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 93, y: 121) tolower_6d7f8a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -201, y: 44) ifexpression_b5c4e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 196, y: 272) strings_contains_9f2d3a root.Std_k98ojb.Strings.Contains {}\n        instance(x: -289, y: 194) ifexpression_b5c4e1.execute()\n        input_ai -> tolower_6d7f8a.input\n        tolower_6d7f8a.output -> output_ai\n        strings_contains_9f2d3a.contains -> ifexpression_b5c4e1.value\n        ifexpression_b5c4e1.then -> continue_0b9d43\n        input_ai -> strings_contains_9f2d3a.input\n        strings_contains_9f2d3a.contains -> output_ai\n    }\n\n    \n\n    instance(x: -96, y: 59) is_lower_8c7d4e root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 342, y: -215) filter_9d7f5a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9d7f5a.list\n        instance(x: 191, y: 141) map_8c0e3d root.Std_k98ojb.Iteration.Map {}\n        filter_9d7f5a.result -> map_8c0e3d.items\n        instance(x: 294, y: -201) product_4d1f43 root.Std_k98ojb.Math.Product {}\n        map_8c0e3d.output_list -> product_4d1f43.input\n        instance(x: 94, y: -242) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        instance(x: 165, y: 269) add_88bb8a root.Std_k98ojb.Math.Add {}\n        product_4d1f43.result -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        execute_19300c -> product_4d1f43.execute\n        ifexpression_a2fa90.then -> continue_45190b\n        map_8c0e3d.handler -> output_cffcc2.execute\n        filter_9d7f5a.result -> add_88bb8a.input\n    }\n\n    \n\n    instance(x: -98, y: 44) unique_product_4f1f6a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 104, y: 69) filter_9d7f5a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_9d7f5a.items\n        list2_ai -> filter_9d7f5a.list\n        instance(x: -200, y: 53) setdiff_8c4e6b root.Std_k98ojb.Set.Difference {}\n        filter_9d7f5a.output_list -> setdiff_8c4e6b.left\n        list1_ai -> setdiff_8c4e6b.right\n        instance(x: 91, y: -215) flatten_2fdd0b root.Std_k98ojb.List.Flatten {}\n        setdiff_8c4e6b.result -> flatten_2fdd0b.list\n        instance(x: 194, y: 44) remove_9d7f5a root.Std_k98ojb.List.Remove {}\n        flatten_2fdd0b.list -> remove_9d7f5a.list\n        instance(x: -215, y: 76) output_8c4e6b root.Std_k98ojb.List.Output {}\n        remove_9d7f5a.output -> output_8c4e6b\n        output_8c4e6b.list -> output_ai\n    }\n\n    \n\n    instance(x: -93, y: 21) find_dissimilar_1f2d3b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 292, y: -117) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 565, y: -28) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: 6, y: -64, name: \"setter_8c6eda\") setter_8c6eda = list\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 825, y: -223, name: \"setter_95dd4c\") setter_95dd4c = empty\n        getter(x: 252, y: -246, name: \"getter_e808a2\") getter_e808a2 = list\n        getter(x: 313, y: 269, name: \"getter_c18a69\") getter_c18a69 = list\n        instance(x: -200, y: 39) empty_ea3a3 root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it >= n\"\n        }\n        setter_8c6eda.continue -> for_9ab286.reset\n        execute_1e159f -> setter_8c6eda.execute\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        ifexpression_5c4634.then -> setter_95dd4c.execute\n        concat_9b38cc.result -> output_823209\n        empty_ea3a3.list -> setter_8c6eda.new_value\n        0 -> add_14921d.item\n        add_14921d.listWithItem -> setter_95dd4c.new_value\n        for_9ab286.done -> continue_c95bcb\n        getter_c18a69.value -> concat_9b38cc.right\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        ifexpression_5c4634.then -> setter_8c6eda.new_value\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_0a3d7 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 82, y: 45) add_9d5e6b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_9d5e6b.items\n        0 -> add_9d5e6b.first\n        sum_2a848f.result -> add_9d5e6b.second\n    }\n\n    \n\n    instance(x: -93, y: 53) _sum_1c7d8a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 394, y: -201) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 219, y: 261) not_8f5d7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 292, y: -23) greaterthan_4a9e0b root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 105, y: 272) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -155, y: -44, name: \"setter_3d7c2a\") setter_3d7c2a = is_prime\n        getter(x: 101, y: 301, name: \"getter_5f1e8a\") getter_5f1e8a = is_prime\n        instance(x: -200, y: 34) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        2 -> greaterthan_4a9e0b.right\n        num_5c0677 -> greaterthan_4a9e0b.left\n        greaterthan_4a9e0b.result -> div_547f34.first\n        1 -> div_547f34.second\n        div_547f34.result -> setter_3d7c2a.new_value\n        is_prime.continue -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> continue_9a54bb\n        execute_b7b391 -> setter_3d7c2a.execute\n        ifexpression_a2fa90.else -> output_c457b3.value\n    }\n\n    \n\n    instance(x: -94, y: 43) num_prime_5f8e6a root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 89, y: -215) ifexpression_8d4e6c root.Std_k98ojb.Std.If {}\n        x_853326 -> ifexpression_8d4e6c.input\n        y_5390f5 -> ifexpression_8d4e6c.y\n        ifexpression_8d4e6c.then -> output_3339a3.execute\n        instance(x: 164, y: -191) not_5b3aeb root.Std_k98ojb.Logic.Not {}\n        output_3339a3.value -> not_5b3aeb.input\n        not_5b3aeb.result -> output_3339a3\n        instance(x: 201, y: -221) equal_6f2d0e root.Std_k98ojb.Logic.Equal {}\n        x_853326 -> equal_6f2d0e.left\n        y_5390f5 -> equal_6f2d0e.right\n        equal_6f2d0e.result -> ifexpression_8d4e6c.gen_0\n    }\n\n    \n\n    instance(x: -69, y: 43) opposite_signs_d3a9af root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 6, y: -14) mod_1d7e9b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 23, y: 29) add_8e5a2c root.Std_k98ojb.Math.Add {}\n        instance(x: 22, y: 35) sub_3fba0f root.Std_k98ojb.Math.Sub {}\n        instance(x: 11, y: -24) lessThanOrEqual_6a7d41 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 23, y: 29) ifexpression_d9c5f4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a % 2 == 0\"\n        }\n        setter(x: -20, y: -36, name: \"setter_8e6d48\") setter_8e6d48 = diff\n        getter(x: 1, y: -9, name: \"getter_b4f7c5\") getter_b4f7c5 = diff\n        getter(x: 11, y: 28, name: \"getter_d1c0b2\") getter_d1c0b2 = diff\n        instance(x: 23, y: 29) continue_8a3eef root.Std_k98ojb.Std.For {}\n        list_b5d10a -> mod_1d7e9b.input\n        n_27f29c -> mod_1d7e9b.value\n        add_8e5a2c.result -> sub_3fba0f.first\n        11 -> sub_3fba0f.second\n        sub_3fba0f.result -> lessThanOrEqual_6a7d41.left\n        mod_1d7e9b.result -> lessThanOrEqual_6a7d41.right\n        ifexpression_d9c5f4.then -> continue_8a3eef.reset\n        getter_b4f7c5.value -> add_8e5a2c.first\n        ifexpression_d9c5f4.else -> sub_3fba0f.execute\n        lessThanOrEqual_6a7d41.result -> diff\n        diff.continue_8a3eef -> continue_8a3eef.reset\n        continue_8a3eef.itemAtIndex -> output_f2630f\n        ifexpression_d9c5f4.else -> continue_8a3eef.next\n    }\n\n    \n\n    instance(x: -12, y: 10) is_diff_1d2bdf root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 89, y: 41) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 270, y: -12) replace_char_4e2f2a root.main.replace_char {}\n        instance(x: 85, y: 21) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"search_ai == ''\n            \"\n        }\n        instance(x: 264, y: -12) replace_4e8f5a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_4e8f5a.input\n        search_ai -> replace_4e8f5a.search\n        replace_ai -> replace_4e8f5a.replace\n        replace_4e8f5a.output -> output_ai\n        ifexpression_a2fa90.then -> continue_d9efd7\n        replace_char_4e2f2a.execute -> replace_4e8f5a.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n    }\n\n    \n\n    instance(x: -92, y: 57) tolower_0bfb33 root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_0bfb33.input\n    tolower_0bfb33.output -> replace_char_4e2f2a.input\n\n    instance(x: -76, y: 23) uppercase_1c6d66 root.Std_k98ojb.Strings.ToUpper {}\n    search_ai -> uppercase_1c6d66.input\n    uppercase_1c6d66.output -> replace_char_4e2f2a.search\n\n    instance(x: -60, y: 11) ifexpression_e9a3a5 root.Std_k98ojb.Std.IfExpression {\n        expression: \"search_ai == ''\n            \"\n    }\n    continue_d9efd7 -> ifexpression_e9a3a5.execute\n    ifexpression_e9a3a5.then -> replace_char_4e2f2a.execute\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 294, y: -31) tolower_5f8d3a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 544, y: 141) ifexpression_2a4e1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == input_ai\"\n        }\n        instance(x: 596, y: -213) continue_c95bcb root.Std_k98ojb.Std.Continue {}\n        instance(x: 76, y: 246) output_732a8a root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5f8d3a.input\n        tolower_5f8d3a.output -> ifexpression_2a4e1c.predicate\n        continue_c95bcb.continue -> output_732a8a.execute\n        ifexpression_2a4e1c.then -> output_732a8a.execute\n        is_lower.output_ai -> output_732a8a.value\n    }\n\n    \n\n    instance(x: -91, y: 39) is_lower_b5f9ca root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 104, y: -222) unique_9d4f7e root.Std_k98ojb.List.Union {}\n        list_5fda54 -> unique_9d4f7e.items\n        instance(x: 196, y: 261) filter_a8f6c2 root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        instance(x: 342, y: -137) product_ba3d33 root.Std_k98ojb.Math.Product {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = unique_product\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = unique_product\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = unique_product\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = product\n        getter(x: -215, y: -493, name: \"getter_85d3f6\") getter_85d3f6 = product\n        unique_9d4f7e.list -> filter_a8f6c2.list\n        1 -> product.divisor\n        execute_19300c -> setter_d09207.execute\n        unique_9d4f7e.continue -> setter_d09207.continue\n        filter_a8f6c2.result -> setter_d09207.input_f5da54\n        setter_d09207.continue -> continue_45190b\n        getter_7f13b7.value -> product.first\n        getter_44a047.value -> product.second\n        unique_9d4f7e.itemAtIndex -> output_cffcc2\n        product.result -> setter_29a5c8.new_value\n        setter_29a5c8.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -97, y: -68) unique_product_6e34d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 80, y: -46) setdiff_4d3f8a root.Std_k98ojb.Set.Difference {}\n        list1_ai -> setdiff_4d3f8a.left\n        list2_ai -> setdiff_4d3f8a.right\n        output_ai -> setdiff_4d3f8a.output\n    }\n\n    \n\n    instance(x: -83, y: 64) find_dissimilar_b5d0aa root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 334, y: 173) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 509, y: 241) list_slice_0e7d41 root.Std_k98ojb.List.Slice {}\n        instance(x: 88, y: -20) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 361, y: 253) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        list_48148f -> for_9ab286.items\n        n_68068c -> sub_9ff257.second\n        execute_1e159f -> setter_d09207.execute\n        k_1e19fb -> setter_d09207.new_value\n        setter_d09207.continue -> ifexpression_a2fa90.execute\n        for_9ab286.onItem -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> list_slice_0e7d41.execute\n        sub_9ff257.result -> list_slice_0e7d41.index\n        n_68068c -> ifexpression_a2fa90.gen_0\n        list_slice_0e7d41.slice -> output_823209\n        for_9ab286.itemAtIndex -> output_823209\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_5bfb1a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 84, y: -25) add_9d7e21 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_9d7e21.items\n        0 -> add_9d7e21.first\n        sum_2a848f.result -> add_9d7e21.second\n    }\n\n    \n\n    instance(x: -86, y: 46) _sum_b1ca4c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 123, y: -23) ifexpression_5f2c42 root.Std_k98ojb.Std.If {}\n        instance(x: 204, y: -202) div_4c8e6d root.Std_k98ojb.Math.Div {}\n        setter(x: -47, y: -36, name: \"setter_d7a1eb\") setter_d7a1eb = is_prime\n        getter(x: 173, y: -249, name: \"getter_5f9a8e\") getter_5f9a8e = is_prime\n        instance(x: 142, y: -193) ifexpression_5f2c42.then -> continue_9a54bb\n        instance(x: 143, y: -190) div_4c8e6d.first -> num_5c0677\n        div_4c8e6d.second -> setter_d7a1eb.new_value\n        ifexpression_5f2c42.else -> is_prime.execute\n        instance(x: 193, y: -236) less_than_e87d3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 137, y: -242) greaterthan_d9df0a root.Std_k98ojb.Math.GreaterThan {}\n        is_prime.execute -> output_c457b3.value\n        num_5c0677 -> less_than_e87d3.left\n        1 -> less_than_e87d3.right\n        less_than_e87d3.result -> greaterthan_d9df0a.predicate\n        is_prime.value -> output_c457b3.value\n        greaterthan_d9df0a.then -> continue_9a54bb\n        num_5c0677 -> greaterthan_d9df0a.left\n        1 -> greaterthan_d9df0a.right\n        greaterthan_d9df0a.result -> is_prime.value\n    }\n\n    \n\n    instance(x: -56, y: -14) num_prime_6f2d8b root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 87, y: -103) ifexpression_d2d6db root.Std_k98ojb.Std.IfExpression {\n            expression: \"x * y < 0\"\n        }\n        output_3339a3 -> ifexpression_d2d6db.value\n    }\n\n    \n\n    instance(x: -176, y: -41) opposite_signs_b7e5c4 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 40, y: 43) mod_1b4a9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 29, y: -28) sub_a7f6c8 root.Std_k98ojb.Math.Sub {}\n        instance(x: 38, y: -21) add_3e5a2b root.Std_k98ojb.Math.Add {}\n        instance(x: 47, y: 22) expression_b29d0a root.Std_k98ojb.Std.IfExpression {\n            expression: \"((a + b) % 11 == 0)\"\n        }\n        output_f2630f -> expression_b29d0a.output\n        mod_1b4a9d.result -> sub_a7f6c8.first\n        n_27f29c -> sub_a7f6c8.second\n        add_3e5a2b.result -> expression_b29d0a.gen_0\n    }\n\n    \n\n    instance(x: -16, y: 63) is_diff_4fdd47 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 70, y: -31) ifexpression_8d5a55 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 346, y: -21) replace_string_a1c2e3 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_string_a1c2e3.input\n        search_ai -> replace_string_a1c2e3.search\n        replace_ai -> replace_string_a1c2e3.replace\n        output_ai -> replace_string_a1c2e3.output\n        ifexpression_8d5a55.then -> continue_9f4aa7\n        execute_9f4aa7 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> execute_9f4aa7.input\n        search_ai -> execute_9f4aa7.search\n        replace_ai -> execute_9f4aa7.replace\n        execute_9f4aa7.output -> output_ai\n    }\n\n    \n\n    instance(x: -101, y: 52) strings_lower_a5e3c1 root.Std_k98ojb.Strings.ToLower {}\n    instance(x: 269, y: 25) strings_upper_e43a8d root.Std_k98ojb.Strings.ToUpper {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 79, y: -34) tolower_5d1c4e root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5d1c4e.input\n        tolower_5d1c4e.result -> output_ai\n    }\n\n    \n\n    instance(x: -96, y: 38) is_lower_7a6f64 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 384, y: 546) filter_9f1c31 root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f1c31.items\n        instance(x: -221, y: 120) map_d0a4e2 root.Std_k98ojb.Iteration.Map {}\n        filter_9f1c31.result -> map_d0a4e2.items\n        instance(x: 102, y: 253) prod_8d56c7 root.Std_k98ojb.Math Prod {}\n        map_d0a4e2.output_list -> prod_8d56c7.inputs\n        prod_8d56c7.result -> output_cffcc2\n        instance(x: -201, y: 186) count_11f6a5 root.Std_k98ojb.Std.Count {}\n        list_5fda54 -> count_11f6a5.list\n        1 -> count_11f6a5.reset\n        filter_9f1c31.result -> prod_8d56c7.items\n        instance(x: -221, y: 191) ifexpression_0c94e2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        prod_8d56c7.continue -> count_11f6a5.next\n        execute_19300c -> filter_9f1c31.execute\n        count_11f6a5.value -> prod_8d56c7.gen_0\n    }\n\n    \n\n    instance(x: -214, y: 73) unique_product_f3dd24 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 210, y: -38) ifexpression_9f7a47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list1_ai == list2_ai\"\n        }\n        instance(x: 419, y: 73) filter_e3e6c5 root.Std_k98ojb.Query.Filter {}\n        instance(x: -215, y: -21) map_8f4b95 root.Std_k98ojb.Iteration.Map {}\n        instance(x: -141, y: -53) add_0a7d41 root.Std_k98ojb.List.Add {}\n        output_ai -> filter_e3e6c5.output_list\n        instance(x: 189, y: 15) flatten_1f7fb2 root.Std_k98ojb.List.Flatten {}\n        list1_ai -> map_8f4b95.items\n        list2_ai -> map_8f4b95.items\n        add_0a7d41.listWithItem -> output_ai\n        filter_e3e6c5.result -> flatten_1f7fb2.input\n        instance(x: -210, y: 73) set_65dd47 root.Std_k98ojb.List.Set {}\n        list1_ai -> set_65dd47.items\n        0 -> add_0a7d41.item\n        add_0a7d41.listWithoutItem -> output_ai\n        flatten_1f7fb2.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -215, y: 53) find_dissimilar_c5a9c1 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 408, y: 543) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 194, y: 196) slice_5bbd00 root.Std_k98ojb.List.Slice {}\n        instance(x: 261, y: -115) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 91, y: -26) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 305, y: 474) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        getter(x: 118, y: 597, name: \"getter_44a047\") getter_44a047 = local_n\n        instance(x: -190, y: -102) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -17, y: -58, name: \"setter_d09207\") setter_d09207 = temp\n        getter(x: 118, y: 540, name: \"getter_7f13b7\") getter_7f13b7 = list\n        instance(x: 409, y: 555) indexof_6aee0c root.Std_k98ojb.List.IndexOf {}\n        temp -> sub_9ff257.first\n        n_68068c -> sub_9ff257.second\n        add_88bb8a.listWithItem -> concat_9b38cc.left\n        list_48148f -> concat_9b38cc.right\n        indexof_6aee0c.index -> for_8cb3f6.index\n        ifexpression_a2fa90.then -> continue_c95bcb\n        sub_9ff257.result -> setter_d09207.new_value\n        list_48148f -> setter_d09207.list\n        getter_44a047.value -> temp\n        add_88bb8a.listWithItem -> concat_9b38cc.left\n        indexof_6aee0c.index -> for_8cb3f6.index\n        ifexpression_a2fa90.else -> continue_c95bcb\n    }\n\n    \n\n    instance(x: 91, y: -68) rotate_right_5ea4d1 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 79, y: -22) add_8d6d9b root.Std_k98ojb.Math.Add {}\n        instance(x: 235, y: 52) count_c7f0ec root.Std_k98ojb.Std.Count {}\n        setter(x: -195, y: -21, name: \"setter_1c5a3e\") setter_1c5a3e = sum\n        getter(x: 583, y: 43, name: \"getter_51d4f9\") getter_51d4f9 = sum\n        list_2c62ab -> add_8d6d9b.list\n        0 -> count_c7f0ec.reset\n        execute -> setter_1c5a3e.execute\n        count_c7f0ec.count -> setter_1c5a3e.new_value\n        setter_1c5a3e.continue -> add_8d6d9b.next\n        add_8d6d9b.result -> getter_51d4f9\n    }\n\n    \n\n    instance(x: 221, y: -13) _sum_0c25b7 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 71, y: -29) ifexpression_d4f7e2 root.Std_k98ojb.Std.If {}\n        instance(x: 346, y: -215) greaterthan_f8c1eb root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 78, y: -144) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 109, y: -33) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -193, y: -62, name: \"setter_b9d6e4\") setter_b9d6e4 = is_prime\n        getter(x: -162, y: 251, name: \"getter_ac3f0c\") getter_ac3f0c = is_prime\n        instance(x: -197, y: 198) not_2ba38b root.Std_k98ojb.Logic.Not {}\n        instance(x: 91, y: -105) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 234, y: 27) lessThanOrEqual_e83f1d root.Std_k98ojb.Math.LessThanOrEqual {}\n        getter_ac3f0c.value -> greaterthan_f8c1eb.left\n        num_5c0677 -> greaterthan_f8c1eb.right\n        greaterthan_f8c1eb.result -> div_547f34.first\n        2 -> div_547f34.second\n        add_88bb8a.result -> is_prime.gen_0\n        ifexpression_d4f7e2.then -> continue_9a54bb\n        is_prime.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -194, y: 45) num_prime_b5d42c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 96, y: -142) ifexpression_d1c7d4 root.Std_k98ojb.Std.If {}\n        x_853326 -> ifexpression_d1c7d4.input\n        y_5390f5 -> ifexpression_d1c7d4.y\n        ifexpression_d1c7d4.then -> output_3339a3.execute\n        ifexpression_d1c7d4.else -> output_3339a3.execute\n    }\n\n    \n\n    instance(x: -92, y: 44) opposite_signs_6f8e0b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 12, y: -41) mod_8e9d7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 13, y: -29) sum_5c1a2a root.Std_k98ojb.Math.Sum {}\n        instance(x: 11, y: -22) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 12, y: -41) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -28, y: -49, name: \"setter_5f1c0d\") setter_5f1c0d = diff\n        getter(x: -25, y: 24, name: \"getter_4e8a2a\") getter_4e8a2a = diff\n        instance(x: 11, y: -22) less_than_or_equal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        output_f2630f -> less_than_or_equal_f11fda.result\n        n_27f29c -> mod_8e9d7b.input\n        11 -> mod_8e9d7b.divisor\n        sum_5c1a2a.list -> add_88bb8a.items\n        0 -> sub_9ff257.first\n        add_88bb8a.result -> sum_5c1a2a.value\n        sub_9ff257.result -> mod_8e9d7b.value\n        less_than_or_equal_f11fda.left -> getter_4e8a2a\n        less_than_or_equal_f11fda.right -> 0\n        setter_5f1c0d.continue -> diff.execute\n        execute_27b8c3 -> setter_5f1c0d.execute\n        diff.value -> output_f2630f\n    }\n\n    \n\n    instance(x: -23, y: 33) is_diff_9e7a6b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 93, y: -16) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 386, y: 209) replace_9fba8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -16) tolower_5c4634 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 97, y: -16) toupper_5c4634 root.Std_k98ojb.Strings.ToUpper {}\n        instance(x: 386, y: 209) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"search_ai == input_ai\"\n        }\n        instance(x: 93, y: -16) tolower_5c4634.input -> search_ai\n        instance(x: 97, y: -16) toupper_5c4634.input -> search_ai\n        replace_9fba8c.search -> ifexpression_a2fa90.gen_0\n        replace_9fba8c.replace -> ifexpression_a2fa90.gen_1\n        input_ai -> tolower_5c4634.input\n        tolower_5c4634.output -> ifexpression_a2fa90.gen_2\n        ifexpression_a2fa90.then -> output_ai\n        replace_9fba8c.result -> output_ai\n        ifexpression_a2fa90.else -> input_ai\n    }\n\n    \n\n    instance(x: -97, y: 45) replace_char_7d4a1b root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 92, y: 20) tolower_4f5d3b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -201, y: 141) ifexpression_b9c7a1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 394, y: 120) strings_contains_8f2d6e root.Std_k98ojb.Strings.Contains {}\n        instance(x: -193, y: 256) ifexpression_b9c7a1.execute()\n        input_ai -> tolower_4f5d3b.input\n        tolower_4f5d3b.output -> output_ai\n        strings_contains_8f2d6e.search -> tolower_4f5d3b.output\n        strings_contains_8f2d6e.contains -> ifexpression_b9c7a1.value\n        ifexpression_b9c7a1.then -> continue_8ba06b\n        output_ai -> is_lower.output\n    }\n\n    \n\n    instance(x: -94, y: 54) is_lower_5d0f3a root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 346, y: -141) filter_5c4f6d root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_5c4f6d.items\n        instance(x: 215, y: 100) unique_1e8a7b root.Std_k98ojb.List.Uniq {}\n        instance(x: 99, y: -37) product_9e3e0d root.Std_k98ojb.Math.Product {}\n        setter(x: -36, y: -46, name: \"setter_b5f6c4\") setter_b5f6c4 = unique_product\n        getter(x: 120, y: 246, name: \"getter_8a3e1d\") getter_8a3e1d = unique_product\n        instance(x: -200, y: 39) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != 0\"\n        }\n        setter_b5f6c4.continue -> filter_5c4f6d.execute\n        execute_19300c -> setter_b5f6c4.execute\n        ifexpression_a2fa90.then -> continue_45190b\n        unique_1e8a7b.list -> product_9e3e0d.input\n        1 -> product_9e3e0d.factor\n        filter_5c4f6d.result -> setter_b5f6c4.new_value\n        setter_b5f6c4.continue -> continue_45190b\n        getter_8a3e1d.value -> product_9e3e0d.result\n    }\n\n    \n\n    instance(x: -92, y: 45) unique_product_5c7c22 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 83, y: -108) filter_6d5f7a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_6d5f7a.items\n        list2_ai -> filter_6d5f7a.list\n        func() {\n            in(x: -531, y: 2, name: \"x\") property(Number) x_8ee839\n\n            out(x: 340, y: 77, name: \"\") property(Number) _7dd980\n\n            instance(x: 83, y: -108) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                expression: \"x in list1_ai\"\n            }\n            instance(x: 165, y: 68) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                expression: \"x in list2_ai\"\n            }\n            instance(x: 83, y: -108) not_8f6c5a root.Std_k98ojb.Logic.Not {}\n            setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = dissimilar\n            getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = dissimilar\n            getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = dissimilar\n            setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = dissimilar\n            list1_ai -> filter_6d5f7a.list\n            list2_ai -> filter_6d5f7a.list\n            ifexpression_a2fa90.then -> not_8f6c5a.execute\n            ifexpression_a2fa90.else -> setter_d09207.execute\n            not_8f6c5a.result -> setter_d09207.value\n            x_8ee839 -> filter_6d5f7a.item\n            filter_6d5f7a.output_list -> output_ai\n        } -> filter_6d5f7a.handler\n        filter_6d5f7a.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) find_dissimilar_9c4e0b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 392, y: -121) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 569, y: -47) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter(x: 6, y: -64, name: \"setter_8c6eda\") setter_8c6eda = list\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 215, y: -256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: 825, y: -223, name: \"setter_95dd4c\") setter_95dd4c = list\n        getter(x: 252, y: -246, name: \"getter_e808a2\") getter_e808a2 = list\n        getter(x: 313, y: 269, name: \"getter_c18a69\") getter_c18a69 = list\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it >= n\"\n        }\n        setter_8c6eda.continue -> for_9ab286.reset\n        execute_1ddb9f -> setter_8c6eda.execute\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        ifexpression_5c4634.then -> setter_95dd4c.execute\n        for_9ab286.next -> sub_9ff257.execute\n        setter_95dd4c.continue -> concat_9b38cc.reset\n        list_48148f -> concat_9b38cc.list\n        0 -> add_14921d.item\n        add_14921d.listWithItem -> setter_8c6eda.new_value\n        for_9ab286.done -> continue_a7f942\n        getter_c18a69.value -> sub_9ff257.first\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        getter_e808a2.value -> add_14921d.list\n        ifexpression_5c4634.then -> setter_8c6eda.execute_cdac2a\n        sub_9ff257.result -> setter_95dd4c.new_value\n        n_68068c -> ifexpression_5c4634.gen_0\n        setter_95dd4c.continue -> continue_a7f942\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_9d3a2b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 83, y: 53) add_1d5e6b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_1d5e6b.items\n        0 -> add_1d5e6b.first\n        sum_2a848f.result -> add_1d5e6b.second\n    }\n\n    \n\n    instance(x: -94, y: 69) _sum_8c9d3a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 92, y: -227) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 401, y: 21) isprime_5f8d4e root.main.num_prime {}\n        instance(x: 94, y: -227) ifexpression_a2fa90.then -> continue_9a54bb\n        execute_b7b391 -> isprime_5f8d4e.execute\n        num_5c0677 -> isprime_5f8d4e.num\n        isprime_5f8d4e.output_c457b3 -> output_c457b3\n        ifexpression_a2fa90.else -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -93, y: 46) num_prime_7c1d6a root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 69, y: -157) ifexpression_2d7c43 root.Std_k98ojb.Std.If {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 202, y: 39) else_1e8a6f root.Std_k98ojb.Logic.Else {}\n        instance(x: 81, y: -147) ifexpression_2d7c43.then {\n            output_3339a3.value -> true\n        }\n        instance(x: 249, y: -219) else_1e8a6f.then {\n            output_3339a3.value -> false\n        }\n    }\n\n    \n\n    instance(x: -88, y: -24) opposite_signs_b8c0af root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 83, y: 41) mod_1d4a55 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 104, y: -19) sum_8e9eb5 root.Std_k98ojb.Math.Sum {}\n        instance(x: 65, y: 44) ifexpression_d7c0f2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sum % 11 == 0\"\n        }\n        instance(x: 94, y: -22) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -41, y: -24, name: \"setter_eb3a1f\") setter_eb3a1f = diff\n        getter(x: 85, y: 38, name: \"getter_5d56e8\") getter_5d56e8 = diff\n        getter(x: 93, y: -14) getter_5d56e8 -> sub_9ff257.first\n        instance(x: 94, y: -22) sum_8e9eb5.init {}\n        n_27f29c -> sum_8e9eb5.input\n        0 -> sum_8e9eb5.index\n        execute -> setter_eb3a1f.execute\n        diff -> output_f2630f\n        ifexpression_d7c0f2.then -> output_f2630f.value\n    }\n\n    \n\n    instance(x: -54, y: -24) is_diff_bda47d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 73, y: 106) ifexpression_8d7c48 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 344, y: -26) replace_all_8f3a23 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_all_8f3a23.input\n        search_ai -> replace_all_8f3a23.search\n        replace_ai -> replace_all_8f3a23.replace\n        output_ai -> replace_all_8f3a23.output\n    }\n\n    \n\n    instance(x: -95, y: 63) replace_char_b9c7e5 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 79, y: -40) tolower_4d3f6a root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_4d3f6a.input\n        tolower_4d3f6a.output -> output_ai\n    }\n\n    \n\n    instance(x: -99, y: 45) is_lower_9dfc32 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 305, y: 234) filter_9f1c31 root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f1c31.list\n        instance(x: 97, y: -15) unique_set_0a6e45 root.Std_k98ojb.List.UniqueSet {}\n        setter(x: -155, y: -11, name: \"setter_8d2d4a\") setter_8d2d4a = unique_set\n        getter(x: 109, y: 249, name: \"getter_d5c869\") getter_d5c869 = unique_set\n        instance(x: 201, y: -32) product_9f0b7e root.Std_k98ojb.Math.Product {}\n        setter(x: 484, y: 166, name: \"setter_b2d8a1\") setter_b2d8a1 = product\n        getter(x: 522, y: 199, name: \"getter_3f4c8e\") getter_3f4c8e = product\n        instance(x: -192, y: 255) ifexpression_57b0e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"product == 1\"\n        }\n        setter_b2d8a1.continue -> filter_9f1c31.execute\n        execute_19300c -> setter_8d2d4a.execute\n        unique_set -> getter_d5c869.list\n        filter_9f1c31.result -> setter_b2d8a1.input_list\n        ifexpression_57b0e6.then -> continue_45190b\n        product_9f0b7e.n_6b655b -> setter_b2d8a1.input\n        setter_8d2d4a.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -184, y: 29) unique_product_d9dd48 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 141, y: 58) ifexpression_8f5a6c root.Std_k98ojb.Std.IfExpression {}\n        instance(x: 304, y: -124) filter_0a4d9e root.Std_k98ojb.Query.Filter {}\n        instance(x: 155, y: 200) list_concat_7df2db root.Std_k98ojb.List.Concat {}\n        instance(x: 246, y: 43) setdiff_e3c71f root.Std_k98ojb.Set.Difference {}\n\n        ifexpression_8f5a6c.expression = \"it in list1_ai\"\n        filter_0a4d9e.where = \"it not in list2_ai\"\n        list_concat_7df2db.left = filter_0a4d9e.output_list\n        list_concat_7df2db.right = list1_ai\n        setdiff_e3c71f.left = list_concat_7df2db.result\n        setdiff_e3c71f.right = list2_ai\n\n        output_ai -> setdiff_e3c71f.output\n    }\n\n    \n\n    instance(x: -147, y: 11) find_dissimilar_bda1a4 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 419, y: 94) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 599, y: -125) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 88, y: -222) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n < list.length\"\n        }\n        instance(x: 576, y: -173) slice_5d6c3a root.Std_k98ojb.List.Slice {}\n        instance(x: 74, y: -261) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -394, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 220, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 113, y: 532, name: \"getter_44a047\") getter_44a047 = local_n\n        instance(x: -202, y: -247) list_getAt_2e3df root.Std_k98ojb.List.GetAt {}\n        instance(x: 394, y: -294) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 91, y: -275) ifexpression_a2fa90.execute {}\n        instance(x: 576, y: -173) slice_5d6c3a.execute {}\n        instance(x: 74, y: -261) sub_9ff257.execute {}\n        setter_d09207.continue -> for_9ab286.reset\n        execute_1e159f -> setter_d09207.execute\n        n_68068c -> setter_d09207.new_value\n        ifexpression_a2fa90.then -> concat_9b38cc.execute\n        list_48148f -> concat_9b38cc.list\n        concat_9b38cc.result -> output_823209\n        for_9ab286.item -> sub_9ff257.first\n        n_68068c -> sub_9ff257.second\n        list_getAt_2e3df.index -> sub_9ff257.index\n        sub_9ff257.result -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> setter_d09207.execute_cdac2a\n        n_68068c -> ifexpression_a2fa90.gen_1\n        list_getAt_2e3df.itemAtIndex -> output_823209\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_b4b5f6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 79, y: -55) add_9d7e31 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_9d7e31.items\n        0 -> add_9d7e31.first\n        add_9d7e31.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -95, y: 69) _sum_77b9af root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 44, y: -191) ifexpression_5f2c67 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 0 || num == 1\"\n        }\n        instance(x: 85, y: -243) ifexpression_b6e7a4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % 2 == 0\"\n        }\n        instance(x: 118, y: -283) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 199, y: -349) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 269, y: -395) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -30, y: -408, name: \"setter_d7e4c6\") setter_d7e4c6 = local_p\n        getter(x: -113, y: 245, name: \"getter_c9a45f\") getter_c9a45f = local_p\n        instance(x: 74, y: -273) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 281, y: -312) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        getter_c9a45f.continue -> for_8cb3f6.reset\n        execute_b7b391 -> setter_d7e4c6.execute\n        num_5c0677 -> setter_d7e4c6.new_value\n        setter_d7e4c6.continue -> ifexpression_a2fa90.execute\n        ifexpression_b6e7a4.then -> continue_9a54bb\n        for_8cb3f6.item -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.then -> setter_d7e4c6.new_value\n        div_547f34.result -> output_c457b3\n        ifexpression_b6e7a4.else -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -96, y: 20) num_prime_58d23d root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 157, y: -198) ifexpression_d2d6db root.Std_k98ojb.Std.IfExpression {\n            expression: \"x * y < 0\"\n        }\n        setter(x: -245, y: -179, name: \"setter_f4e3c8\") setter_f4e3c8 = opposite\n        getter(x: 162, y: -231, name: \"getter_5f1a89\") getter_5f1a89 = opposite\n        instance(x: 124, y: -147) and_9bbaea root.Std_k98ojb.Logic.And {}\n        setter_f4e3c8.continue -> ifexpression_d2d6db.execute\n        ifexpression_d2d6db.then -> output_3339a3.execute\n        opposite_0f7eb5() {\n            in(x: -223, y: 30, name: \"x\") property(Number) x_e77bae\n\n            out(x: 154, y: -216, name: \"\") property(Number) _d43bf4\n\n            instance(x: 149, y: -96) less_than_8b7a9f root.Std_k98ojb.Math.LessThanOrEqual {}\n            x_e77bae -> less_than_8b7a9f.left\n            abs(y_5390f5) -> less_than_8b7a9f.right\n            less_than_8b7a9f.result -> _d43bf4\n        } -> ifexpression_d2d6db.handler\n        output_3339a3.value -> and_9bbaea.left\n        y_5390f5 -> and_9bbaea.right\n        and_9bbaea.result -> getter_5f1a89\n    }\n\n    \n\n    instance(x: -174, y: 30) opposite_0f7eb5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 37, y: -59) modulo_9d3bdf root.Std_k98ojb.Math.Modulo {}\n        instance(x: 66, y: -103) add_d1f7ec root.Std_k98ojb.Math.Add {}\n        instance(x: 22, y: -162) sub_c2a8c4 root.Std_k98ojb.Math.Sub {}\n        instance(x: 18, y: -211) mul_60d97e root.Std_k98ojb.Math.Mul {}\n        instance(x: 44, y: -263) sum_f55f33 root.Std_k98ojb.Math.Sum {}\n        instance(x: 16, y: -312) pow_b7c1bd root.Std_k98ojb.Math.Pow {}\n        setter(x: -42, y: -348, name: \"setter_d63e5a\") setter_d63e5a = diff\n        getter(x: 85, y: -397, name: \"getter_77b9d7\") getter_77b9d7 = diff\n        instance(x: -61, y: -440) ifexpression_f6d3f4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"pow == 0\"\n        }\n        instance(x: 66, y: -113) not_2e16a root.Std_k98ojb.Logic.Not {}\n        instance(x: 23, y: -163) equal_a9d8f5 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 10, y: -204) greaterthan_b1c4ab root.Std_k98ojb.Math.GreaterThan {}\n        set_7a3bc0 root.Std_k98ojb.Std.Set {}\n        instance(x: -44, y: -255) filter_f96d6f root.Std_k98ojb.Query.Filter {\n            where: \"it % 11 == 0\"\n        }\n        setter_d63e5a.continue -> ifexpression_f6d3f4.execute\n        execute_1e159f -> setter_d63e5a.execute\n        n_27f29c -> sub_c2a8c4.input\n        pow_b7c1bd.y -> sub_c2a8c4.second\n        sum_f55f33.value -> mul_60d97e.first\n        diff_x -> greaterthan_b1c4ab.left\n        greaterthan_b1c4ab.right -> equal_a9d8f5.left\n        equal_a9d8f5.right -> not_2e16a.input\n        ifexpression_f6d3f4.then -> set_x.execute\n        n_27f29c -> sub_c2a8c4.input\n        greaterthan_b1c4ab.left -> filter_f96d6f.list\n        equal_a9d8f5.right -> not_2e16a.input\n        ifexpression_f6d3f4.else -> set_x.execute\n        sum_f55f33.value -> mul_60d97e.first\n        pow_b7c1bd.y -> sub_c2a8c4.second\n        set_7a3bc0.list -> filter_f96d6f.output_list\n    }\n\n    \n\n    instance(x: -39, y: 5) is_diff_63b49 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 71, y: 136) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace.input\n        search_ai -> strings_replace.search\n        replace_ai -> strings_replace.replace\n        strings_replace.result -> output_ai\n    }\n\n    \n\n    instance(x: -427, y: 0) replace_char_4d29a6 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 390, y: 210) tolower_5d5c6a root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5d5c6a.input\n        tolower_5d5c6a.result -> output_ai\n    }\n\n    \n\n    instance(x: -93, y: -31) is_lower_def3e9 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 406, y: -233) filter_9f1c57 root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f1c57.items\n        instance(x: 95, y: -102) unique_6a7e35 root.Std_k98ojb.List.Uniq {}\n        unique_6a7e35.list -> filter_9f1c57.list\n        instance(x: 200, y: 21) product_5ca2eb root.Std_k98ojb.Math.Product {}\n        setter(x: -13, y: -52, name: \"setter_3c7d4b\") setter_3c7d4b = sum\n        getter(x: 178, y: 145, name: \"getter_e9f0a6\") getter_e9f0a6 = sum\n        instance(x: 74, y: -188) iter_1e2f23 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 249, y: -59) math_expression_bca5bf root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b)\"\n        }\n        setter(x: -141, y: -22, name: \"setter_6f4e9d\") setter_6f4e9d = local_product\n        getter(x: 159, y: 95, name: \"getter_e3dc7b\") getter_e3dc7b = local_product\n        getter(x: 222, y: -126) getter_f1c0db root.Std_k98ojb.List.FirstItem {}\n        getter(x: 173, y: 64) getter_8f22d5 root.Std_k98ojb.List.LastItem {}\n        instance(x: 196, y: -140) ifexpression_d7b36a root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        setter(x: -101, y: -193, name: \"setter_4f2e71\") setter_4f2e71 = sum\n        getter(x: 173, y: 140) getter_f3eb49 root.Std_k98ojb.List.Slice {}\n        instance(x: 249, y: -179) map_60a67d root.Std_k98ojb.Iteration.Map {}\n        list_5fda54 -> map_60a67d.items\n        iter_1e2f23.handler -> math_expression_bca5bf\n        math_expression_bca5bf.gen_0 -> product_5ca2eb.input_f6dd49\n        product_5ca2eb.result -> setter_3c7d4b.new_value\n        ifexpression_d7b36a.then -> continue_45190b\n        getter_e9f0a6.value -> output_cffcc2\n        ifexpression_d7b36a.else -> setter_6f4e9d.execute\n        product_5ca2eb.continue -> setter_3c7d4b.continue\n    }\n\n    \n\n    instance(x: -88, y: 39) unique_product_67c52b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 106, y: 117) setdiff_9d0e7f root.Std_k98ojb.Set.Difference {}\n        instance(x: -104, y: 136) filter_f8a1eb root.Std_k98ojb.Query.Filter {\n            where: \"it in list1_ai or it in list2_ai\"\n        }\n        instance(x: 194, y: 34) flatten_5db6f9 root.Std_k98ojb.List.Flatten {}\n        setter(x: -67, y: -48, name: \"setter_e24e25\") setter_e24e25 = output\n        getter(x: 231, y: 71, name: \"getter_c2a64c\") getter_c2a64c = output\n        list1_ai -> setdiff_9d0e7f.items\n        list2_ai -> setdiff_9d0e7f.right\n        filter_f8a1eb.list -> setdiff_9d0e7f\n        0 -> setdiff_9d0e7f.index\n        filter_f8a1eb.result -> flatten_5db6f9.items\n        setdiff_9d0e7f -> output_ai\n    }\n\n    \n\n    instance(x: -51, y: -53) find_dissimilar_9b3c2b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 82, y: -97) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_8cb3f6.items\n        func() {\n            in(x: -186, y: -89, name: \"x\") property(Number) x_0dfc17\n\n            out(x: 333, y: -50, name: \"\") property(List) temp_list_eb7d48\n            out(x: 735, y: -112, name: \"output_823209\") property(Any) output_823209\n\n            instance(x: 82, y: 39) slice_1e8f21 root.Std_k98ojb.List.Slice {}\n            x_0dfc17 -> slice_1e8f21.start\n            list_48148f.listLength -> slice_1e8f21.end\n            temp_list_eb7d48 = slice_1e8f21.slice()\n            for_8cb3f6.index -> add_b4554f\n            0 -> add_b4554f.first\n            n_68068c -> add_b4554f.second\n            ifexpression_a2fa90 root.Std_k98ojb.Logic.And {}\n            instance(x: -193, y: -219) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n            x_0dfc17 -> sub_9ff257.first\n            list_48148f.listLength -> sub_9ff257.second\n            ifexpression_a2fa90.then -> continue_c95bcb\n            instance(x: 82, y: -230) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n            temp_list_eb7d48 -> getat_8eae56.index\n            list_48148f.listLength -> getat_8eae56.listLength\n            getat_8eae56.itemAtIndex -> output_823209\n            ifexpression_a2fa90.else -> continue_c95bcb\n            instance(x: 82, y: -230) add_b4554f root.Std_k98ojb.List.Add {}\n            temp_list_eb7d48 -> add_b4554f.listWithItem\n            add_b4554f.item -> output_823209\n            ifexpression_a2fa90.then -> continue_c95bcb\n        } -> for_8cb3f6.handler\n        for_8cb3f6.output_list -> slice_1e8f21.result\n        temp_list_eb7d48 -> list_b5d10a\n        list_b5d10a.listLength -> n_68068c\n        ifexpression_a2fa90.then -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: 45) rotate_right_5bf7f6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -47) add_8d6d21 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_8d6d21.list\n        0 -> add_8d6d21.first\n        add_8d6d21.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -112, y: 72) _sum_66b7aa root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 33, y: -64) ifexpression_d4f9e2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num < 2\"\n        }\n        instance(x: 246, y: -214) not_e5c63d root.Std_k98ojb.Logic.Not {}\n        instance(x: 189, y: 46) greaterthan_9f70a8 root.Std_k98ojb.Math.GreaterThan {}\n        setter(x: -190, y: -43, name: \"setter_0e2f48\") setter_0e2f48 = num_is_prime\n        getter(x: 146, y: 209, name: \"getter_e9d6a8\") getter_e9d6a8 = num_is_prime\n        instance(x: -201, y: -71) pow_1b4c25 root.Std_k98ojb.Math.Pow {}\n        pow_1b4c25.x -> greaterthan_9f70a8.left\n        2 -> pow_1b4c25.y\n        greaterthan_9f70a8.result -> setter_0e2f48.value\n        instance(x: -217, y: 78) ifexpression_d4f9e2.execute -> not_e5c63d.execute\n        num_5c0677 -> not_e5c63d.input\n        greaterthan_9f70a8.right -> not_e5c63d.value\n        not_e5c63d.result -> setter_0e2f48.value\n        execute_b7b391 -> setter_0e2f48.execute\n        2 -> pow_1b4c25.y\n        num_5c0677 -> pow_1b4c25.x\n        pow_1b4c25.result -> greaterthan_9f70a8.value\n        ifexpression_d4f9e2.then -> continue_9a54bb\n        setter_0e2f48.continue -> output_c457b3.execute\n        output_c457b3.value -> getter_e9d6a8.value\n        num_is_prime -> greaterthan_9f70a8.result\n    }\n\n    \n\n    instance(x: -215, y: 69) num_prime_4e5dc root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 91, y: -123) ifexpression_b4d2c1 root.Std_k98ojb.Std.If {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 196, y: -219) ifexpression_8f5a3e root.Std_k98ojb.Std.If {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 83, y: -246) ifexpression_d2d4c9 root.Std_k98ojb.Std.If {\n            expression: \"(x == 0 || y == 0)\"\n        }\n        setter(x: -34, y: -48, name: \"setter_3f8e5a\") setter_3f8e5a = opposite\n        getter(x: 121, y: -219, name: \"getter_4d2c7b\") getter_4d2c7b = opposite\n        instance(x: 159, y: -246) not_9f1d0b root.Std_k98ojb.Logic.Not {}\n        setter(x: 394, y: -123, name: \"setter_e5a3e8\") setter_e5a3e8 = not_\n        getter(x: 201, y: -219, name: \"getter_6f7c4d\") getter_6f7c4d = not_\n        instance(x: 91, y: -123) and_9b1f2a root.Std_k98ojb.Logic.And {}\n        setter_3f8e5a.continue -> ifexpression_b4d2c1.execute\n        ifexpression_b4d2c1.then -> output_3339a3.value = true\n        ifexpression_b4d2c1.else -> and_9b1f2a.execute\n        setter_e5a3e8.continue -> ifexpression_d2d4c9.execute\n        ifexpression_d2d4c9.then -> output_3339a3.value = false\n        ifexpression_d2d4c9.else -> and_9b1f2a.execute\n        and_9b1f2a.result -> setter_e5a3e8.new_value\n        getter_e5a3e8.value -> output_3339a3\n        x_853326 -> ifexpression_b4d2c1.gen_0\n        y_5390f5 -> ifexpression_d2d4c9.gen_0\n    }\n\n    \n\n    instance(x: -34, y: -48) opposite_6e8b7a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 15, y: -44) modulo_8d7e4b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 13, y: -23) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 11, y: -14) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 10, y: -5) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 1, y: -16) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        instance(x: 0, y: -7) sum_6c8e4a root.Std_k98ojb.List.Sum {}\n        instance(x: 9, y: -18) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"sum % 11 == 0\"\n        }\n        output_f2630f -> ifexpression_a2fa90.predicate\n        n_27f29c -> sub_9ff257.first\n        11 -> mul_2f9d09.second\n        pow_584bfd.y -> sum_6c8e4a.gen_1\n        sum_6c8e4a.value -> add_88bb8a.first\n        ifexpression_a2fa90.then -> output_f2630f.execute\n        execute -> ifexpression_a2fa90.else\n    }\n\n    \n\n    instance(x: -14, y: 3) is_diff_5d7b9c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 94, y: -23) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 395, y: 74) replace_char_9f2a5e root.main.replace_char {}\n        instance(x: 97, y: -127) Strings.Replace_8d4c7b root.Std_k98ojb.Strings.Replace {\n            input: \"input_ai\"\n            search: search_ai\n            replace: replace_ai\n        }\n        output_ai -> replace_char_9f2a5e.output\n    }\n\n    \n\n    instance(x: 94, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n    instance(x: 395, y: 74) replace_char_9f2a5e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 94, y: -23) tolower_5f2d7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 202, y: 134) ifexpression_ba8c9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != input_ai\"\n        }\n        instance(x: 275, y: -14) equal_4f2d7 root.Std_k98ojb.Logic.Equal {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = output\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = output\n        instance(x: 491, y: 194, name: \"input_ai\") property(String) input_ai\n        tolower_5f2d7b.input -> input_ai\n        equal_4f2d7.left -> getter_7f13b7.value\n        equal_4f2d7.right -> input_ai\n        ifexpression_ba8c9e.then -> output_ai\n        is_lower.continue -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) is_lower_5c6f3a root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 394, y: -193) filter_9f5d7a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f5d7a.list\n        instance(x: 215, y: 100) unique_8e3c4a root.Std_k98ojb.List.Uniq {}\n        instance(x: 96, y: -23) product_6d0f2d root.Std_k98ojb.Math.Product {}\n        setter(x: -43, y: -48, name: \"setter_5c7f8e\") setter_5c7f8e = unique\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = unique\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = unique\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = unique\n        list_5fda54 -> filter_9f5d7a.items\n        filter_9f5d7a.result -> unique.new_value\n        unique.list -> product_6d0f2d.input\n        1 -> product_6d0f2d.factor\n        execute_19300c -> setter_5c7f8e.execute\n        setter_5c7f8e.continue -> continue_45190b\n        getter_7f13b7.value -> product_6d0f2d.result\n        unique.list -> product_6d0f2d.input\n        1 -> product_6d0f2d.factor\n        setter_29a5c8.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -97, y: -68) unique_product_4e9d7a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 94, y: -104) filter_9f5d7b root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_9f5d7b.items\n        list2_ai -> filter_9f5d7b.list\n        func() {\n            in(x: -131, y: 34, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) not_9f5d7c root.Std_k98ojb.Logic.Not {}\n            instance(x: 196, y: 256) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                expression: \"x in list1_ai\"\n            }\n            instance(x: 215, y: 100) contains_9f5d7d root.Std_k98ojb.List.Contains {}\n            setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = dissimilar\n            getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = dissimilar\n            getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = dissimilar\n            setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = dissimilar\n            list1_ai -> filter_9f5d7b.items\n            list2_ai -> filter_9f5d7b.list\n            filter_9f5d7b.output_list -> output_ai\n        } -> filter_9f5d7b.handler\n    }\n\n    \n\n    instance(x: -92, y: 45) find_dissimilar_b9ff6b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 394, y: -115) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_8cb3f6.items\n        instance(x: 215, y: -23) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == n\"\n        }\n        instance(x: 196, y: 256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        instance(x: -200, y: 39) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        setter_d09207.continue -> for_8cb3f6.reset\n        execute_1e159f -> setter_d09207.execute\n        for_8cb3f6.onItem -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> add_14921d.execute\n        add_14921d.listWithItem -> concat_9b38cc.right\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        getter_c18a69.value -> sub_9ff257.first\n        ifexpression_a2fa90.else -> setter_29a5c8.execute\n        sub_9ff257.result -> setter_29a5c8.new_value\n        n_68068c -> ifexpression_a2fa90.gen_0\n        setter_29a5c8.continue -> continue_c95bcb\n        concat_9b38cc.result -> output_823209\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4f6d7e root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 91, y: 43) add_9d7e4b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_9d7e4b.items\n        0 -> add_9d7e4b.first\n        sum_2a848f.result -> add_9d7e4b.second\n    }\n\n    \n\n    instance(x: -92, y: 55) _sum_1c8f5a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 83, y: -43) ifexpression_d2d4f8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 201, y: 19) not_5c7e3b root.Std_k98ojb.Logic.Not {}\n        instance(x: 275, y: -202) greaterthan_8f6d4a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 94, y: -234) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -48, name: \"setter_5c9e2d\") setter_5c9e2d = is_prime\n        getter(x: 102, y: -251, name: \"getter_4f1a8a\") getter_4f1a8a = is_prime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        2 -> greaterthan_8f6d4a.right\n        num_5c0677 -> greaterthan_8f6d4a.left\n        greaterthan_8f6d4a.result -> div_547f34.first\n        1 -> div_547f34.second\n        div_547f34.result -> setter_5c9e2d.new_value\n        is_prime.continue -> continue_9a54bb\n        execute_b7b391 -> setter_5c9e2d.execute\n        ifexpression_d2d4f8.then -> output_c457b3\n        not_5c7e3b.value -> greaterthan_8f6d4a.result\n        is_prime.value -> output_c457b3\n        floor_61b38d.output -> div_547f34.first\n        ifexpression_d2d4f8.else -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -96, y: 45) num_prime_5c7e6 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 96, y: -193) ifexpression_2d4e1b root.Std_k98ojb.Std.If {}\n        instance(x: 269, y: 19) and_8c7f6f root.Std_k98ojb.Logic.And {}\n        setter(x: -38, y: -24, name: \"setter_e0f5a3\") setter_e0f5a3 = opposite\n        getter(x: 142, y: 43, name: \"getter_8c9e2d\") getter_8c9e2d = opposite\n        instance(x: -199, y: -242) less_than_f4b1f7 root.Std_k98ojb.Math.LessThan {}\n        instance(x: -194, y: 22) sub_5a6d23 root.Std_k98ojb.Math.Sub {}\n        setter(x: 157, y: -275, name: \"setter_d2e9df\") setter_d2e9df = abs\n        getter(x: 162, y: 251, name: \"getter_4c7f1a\") getter_4c7f1a = abs\n        instance(x: 94, y: -191) ifexpression_a2fa90 root.Std_k98ojb.Std.If {}\n        instance(x: 270, y: 18) or_8d3f0e root.Std_k98ojb.Logic.Or {}\n        setter_e0f5a3.continue -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> output_3339a3.execute\n        x_853326 -> sub_5a6d23.input\n        y_5390f5 -> sub_5a6d23.second\n        less_than_f4b1f7.left -> setter_d2e9df.value\n        abs_4c7f1a -> setter_e0f5a3.value\n        ifexpression_a2fa90.else -> or_8d3f0e.execute\n        output_3339a3.value -> and_8c7f6f.left\n        setter_d2e9df.continue -> or_8d3f0e.next\n        sub_5a6d23.result -> ifexpression_a2fa90.gen_0\n        abs_4c7f1a.result -> setter_e0f5a3.new_value\n    }\n\n    \n\n    instance(x: -98, y: 46) opposite_signs_5b8e9b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 21, y: 15) mod_1d4a9b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 14, y: -22) add_8c3e7a root.Std_k98ojb.Math.Add {}\n        instance(x: 12, y: 13) sub_6f5f0d root.Std_k98ojb.Math.Sub {}\n        instance(x: 11, y: 10) mul_2d9a4d root.Std_k98ojb.Math.Mul {}\n        instance(x: -24, y: -16) sum_1e3c21 root.Std_k98ojb.List.Sum {}\n        setter(x: -27, y: -29, name: \"setter_b7f0ea\") setter_b7f0ea = local_n\n        getter(x: 2, y: -24, name: \"getter_c5a8d4\") getter_c5a8d4 = local_n\n        instance(x: 12, y: 10) lessThanOrEqual_1c6b9b root.Std_k98ojb.Logic.LessThanOrEqual {}\n        output_f2630f -> lessThanOrEqual_1c6b9b.left\n        sum_1e3c21.result -> mul_2d9a4d.first\n        11 -> lessThanOrEqual_1c6b9b.right\n        setter_b7f0ea.continue -> lessThanOrEqual_1c6b9b.execute\n        n_27f29c -> sum_1e3c21.input\n        mul_2d9a4d.result -> add_8c3e7a.first\n        sub_6f5f0d.result -> add_8c3e7a.second\n        add_8c3e7a.result -> mod_1d4a9b.value\n        mod_1d4a9b.result -> getter_c5a8d4\n        sum_1e3c21.list -> lessThanOrEqual_1c6b9b.list\n    }\n\n    \n\n    instance(x: 2, y: -22) is_diff_7f0e15 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 93, y: 23) ifexpression_8d7c0f root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai.contains(search_ai)\"\n        }\n        instance(x: 446, y: -104) replace_chars_4e3a6a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_chars_4e3a6a.input\n        search_ai -> replace_chars_4e3a6a.search\n        replace_ai -> replace_chars_4e3a6a.replace\n        replace_chars_4e3a6a.result -> output_ai\n        ifexpression_8d7c0f.then -> continue_1b2d5f\n        input_ai -> replace_chars_4e3a6a.input\n        search_ai -> replace_chars_4e3a6a.search\n        replace_ai -> replace_chars_4e3a6a.replace\n        replace_chars_4e3a6a.result -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 43) tolower_1d7b8f root.Std_k98ojb.Strings.ToLower {}\n    input_ai -> tolower_1d7b8f.input\n    tolower_1d7b8f.output -> replace_char.input_ai\n\n    instance(x: -93, y: 123) uppercase_a9e2eb root.Std_k98ojb.Strings.ToUpper {}\n    input_ai -> uppercase_a9e2eb.input\n    uppercase_a9e2eb.output -> replace_char.input_ai\n\n    instance(x: -92, y: 204) isnumeric_6f7d3c root.Std_k98ojb.Strings.IsNumeric {}\n    input_ai -> isnumeric_6f7d3c.input\n    isnumeric_6f7d3c.result -> replace_char.search_ai\n\n    instance(x: -93, y: 285) contains_a1e8a4 root.Std_k98ojb.Strings.Contains {}\n    input_ai -> contains_a1e8a4.input\n    search_ai -> contains_a1e8a4.contains\n    contains_a1e8a4.result -> replace_char.search_ai\n\n    instance(x: -92, y: 366) characters_7f9c3d root.Std_k98ojb.Strings.Characters {}\n    input_ai -> characters_7f9c3d.input\n    characters_7f9c3d.output -> replace_char.search_ai\n\n    instance(x: -93, y: 447) isnumeric_6f7d3c(root.std_k98ojb.List.IsEmpty()) {\n        if (true) { continue_1b2d5f }\n        else { return \"Error: Input string is empty\" }\n    }\n\n    continue_1b2d5f -> replace_char.output_ai\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 92, y: -24) tolower_6d7f8a root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_6d7f8a.input\n        tolower_6d7f8a.output -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: 46) is_lower_b1c0e3 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 346, y: 155) filter_9f5c4d root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f5c4d.items\n        instance(x: -201, y: 44) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        map_f2330d.output_list -> unique_product_list\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = product\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = product\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = product\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = product\n        instance(x: -202, y: 36) count_6f9d4b root.Std_k98ojb.Std.Count {}\n        list_5fda54 -> count_6f9d4b.list\n        count_6f9d4b.count -> unique_product_list.length\n        setter_d09207.continue -> filter_9f5c4d.execute\n        execute_19300c -> setter_d09207.execute\n        filter_9f5c4d.result -> map_f2330d.items\n        product.value -> output_cffcc2\n        unique_product_list -> product\n    }\n\n    \n\n    instance(x: -97, y: -68) unique_product_8a1b6a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 104, y: -102) setdiff_8f5d3e root.Std_k98ojb.Set.Difference {}\n        instance(x: 275, y: 201) filter_0a4f6c root.Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        list1_ai -> setdiff_8f5d3e.left\n        list2_ai -> setdiff_8f5d3e.right\n        setdiff_8f5d3e.result -> filter_0a4f6c.output_list\n    }\n\n    \n\n    instance(x: -98, y: 44) find_dissimilar_b9f7b1 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 94, y: -106) slice_8f5d7b root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_8f5d7b.items\n        n_68068c -> slice_8f5d7b.length\n        0 -> slice_8f5d7b.start\n        slice_8f5d7b.result -> rotate_right_4a2f6e\n        instance(x: -202, y: -112) reverse_9c3e1b root.Std_k98ojb.List.Reverse {}\n        rotate_right_4a2f6e -> reverse_9c3e1b.items\n        reverse_9c3e1b.result -> output_823209\n    }\n\n    \n\n    instance(x: 94, y: -101) slice_8f5d7 root.Std_k98ojb.List.Slice {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 83, y: -21) ifexpression_8d7e1b root.Std_k98ojb.Std.IfExpression {\n            expression: \"list.length == 0\"\n        }\n        instance(x: 346, y: 121) add_b9d4ec root.Std_k98ojb.Math.Add {}\n        setter(x: -201, y: -46, name: \"setter_6e3c7a\") setter_6e3c7a = sum\n        getter(x: 513, y: 19, name: \"getter_bf2d4a\") getter_bf2d4a = sum\n        list_2c62ab -> ifexpression_8d7e1b.list\n        0 -> add_b9d4ec.first\n        execute_3d4e5b -> setter_6e3c7a.execute\n        list_2c62ab -> add_b9d4ec.second\n        add_b9d4ec.result -> getter_bf2d4a\n        ifexpression_8d7e1b.then -> continue_c0a95b\n        sum_2a848f -> setter_6e3c7a.new_value\n        execute_3d4e5b -> continue_c0a95b\n    }\n\n    \n\n    instance(x: -96, y: 59) _sum_b9c1d4 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -47) ifexpression_5f2c6d root.Std_k98ojb.Std.If {}\n        instance(x: 269, y: 20) less_than_0e7c1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        setter(x: -35, y: -68, name: \"setter_d4a3d5\") setter_d4a3d5 = is_prime\n        getter(x: 102, y: 43, name: \"getter_6f9c2e\") getter_6f9c2e = is_prime\n        instance(x: -114, y: -222) sub_8b7e1f root.Std_k98ojb.Math.Sub {}\n        instance(x: 102, y: 22) mul_3d5a0b root.Std_k98ojb.Math.Mul {}\n        instance(x: 103, y: -216) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 269, y: 20) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        setter_d4a3d5.continue -> ifexpression_5f2c6d.execute\n        ifexpression_5f2c6d.then -> continue_9a54bb\n        execute_b7b391 -> setter_d4a3d5.execute\n        is_prime_6f9c2e.value -> output_c457b3\n        num_5c0677 -> sub_8b7e1f.input\n        1 -> mul_3d5a0b.first\n        execute_b7b391 -> div_547f34.execute\n        pow_584bfd.result -> is_prime_6f9c2e.gen_0\n        num_5c0677 -> sub_8b7e1f.input\n        2 -> mul_3d5a0b.second\n        less_than_0e7c1f.left -> is_prime_6f9c2e.value\n        div_547f34.result -> output_c457b3\n        div_547f34.result -> is_prime_6f9c2e.gen_1\n        pow_584bfd.y -> sub_8b7e1f.input\n        2 -> mul_3d5a0b.second\n        ifexpression_5f2c6d.predicate -> less_than_0e7c1f.execute\n        is_prime_6f9c2e.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -95, y: 29) num_prime_5a4c8f root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 83, y: -134) ifexpression_b4c1e8 root.Std_k98ojb.Std.If {}\n        x_853326 -> ifexpression_b4c1e8.input_f5f6cd\n        y_5390f5 -> ifexpression_b4c1e8.y_a7a4d2\n        0 -> ifexpression_b4c1e8.value\n        ifexpression_b4c1e8.then -> output_3339a3.execute\n        execute_cdac2a -> output_3339a3.continue\n    }\n\n    \n\n    instance(x: -99, y: 43) opposite_signs_f5f7d0 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 34, y: 15) ifexpression_d4d8f5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod(i, 11) == 0\"\n        }\n        instance(x: 61, y: -14) sum_9e3a7c root.Std_k98ojb.Math.Sum {}\n        instance(x: 34, y: -27) diff_bfdd1d root.Std_k98ojb.Math.Diff {}\n        getter(x: 59, y: -28, name: \"getter_d8bf5b\") getter_d8bf5b = sum\n        getter(x: 33, y: -42, name: \"getter_f9c0a7\") getter_f9c0a7 = diff\n        instance(x: 64, y: -10) sub_2d1c23 root.Std_k98ojb.Math.Sub {}\n        setter(x: -25, y: -38, name: \"setter_a8f5db\") setter_a8f5db = is_diff\n        getter(x: 39, y: -46, name: \"getter_c9a6e7\") getter_c9a6e7 = output_f2630f\n        sum_9e3a7c.input -> n_27f29c\n        diff.basis -> n_27f29c\n        sub.subtractor -> diff\n        11 -> sub.divisor\n        is_diff.execute -> getter_a8f5db.execute\n        ifexpression_d4d8f5.then -> output_f2630f.continue\n    }\n\n    \n\n    instance(x: -28, y: -24) is_diff_9c7dfb root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 82, y: -44) ifexpression_5c0e8a root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == null\"\n        }\n        instance(x: 346, y: -13) replace_1d2f4b root.Std_k98ojb.Strings.Replace {}\n        instance(x: 83, y: -44) tolower_0a7df9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 348, y: -15) contains_8e2fdd root.Std_k98ojb.Strings.Contains {}\n        output_ai -> replace_1d2f4b.input\n        search_ai -> replace_1d2f4b.search\n        replace_ai -> replace_1d2f4b.replace\n        ifexpression_5c0e8a.then -> tolower_0a7df9.execute\n        contains_8e2fdd.value -> replace_1d2f4b.result\n        replace_1d2f4b.inputWith -> output_ai\n        tolower_0a7df9.output -> ifexpression_5c0e8a.gen_0\n        ifexpression_5c0e8a.else -> replace_1d2f4b.execute_cdac2a\n        replace_1d2f4b.result -> output_ai\n    }\n\n    \n\n    instance(x: -94, y: 47) replace_char_a7df9f root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 96, y: 136) tolower_5d8e9c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -202, y: -23) strings_contains_b7a0ec root.Std_k98ojb.Strings.Contains {}\n        instance(x: 91, y: -26) ifexpression_e1f5df root.Std_k98ojb.Std.IfExpression {\n            expression: \"strings_contains_b7a0ec == false\"\n        }\n        tolower_5d8e9c.output -> output_ai\n        strings_contains_b7a0ec.input -> input_ai\n        strings_contains_b7a0ec.contains -> input_ai\n        ifexpression_e1f5df.then -> output_ai\n        tolower_5d8e9c.result -> strings_contains_b7a0ec.value\n    }\n\n    \n\n    instance(x: -96, y: 59) is_lower_f2fdd5 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 391, y: 143) unique_9f5c43 root.Std_k98ojb.List.Uniq {}\n        list_5fda54 -> unique_9f5c43.list\n        instance(x: -200, y: -44) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == 0\"\n        }\n        instance(x: 196, y: 261) product_f1d3e4 root.Std_k98ojb.Math.Product {}\n        setter(x: -41, y: -48, name: \"setter_b9f5f2\") setter_b9f5f2 = unique_product\n        getter(x: 119, y: 214, name: \"getter_f6c0e1\") getter_f6c0e1 = unique_product\n        instance(x: 493, y: -22) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it > 0\"\n        }\n        instance(x: 215, y: 100) map_c4d8ca root.Std_k98ojb.Iteration.Map {}\n        getter_f6c0e1.value -> product_f1d3e4.gen_0\n        list_5fda54 -> filter_875ddb.list\n        1 -> map_c4d8ca.index\n        product_f1d3e4.result -> setter_b9f5f2.new_value\n        unique_9f5c43.list -> filter_875ddb.output_list\n        filter_875ddb.result -> setter_b9f5f2.value\n    }\n\n    \n\n    instance(x: -91, y: 44) product_f1d3e4 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 93, y: 55) ifexpression_9f5a1b root.Std_k98ojb.Std.IfExpression {\n            expression: \"it in list2\"\n        }\n        instance(x: 275, y: 102) not_4c3d8e root.Std_k98ojb.Logic.Not {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = dissimilarList\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = dissimilarList\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = dissimilarList\n        instance(x: 491, y: 194, name: \"setter_d09207\") setter_d09207 = empty_list\n        list1_ai -> ifexpression_9f5a1b.output_list\n        0 -> not_4c3d8e.it\n        execute_2eb6af -> setter_d09207.execute\n        k_1e19fb -> setter_d09207.new_value\n        setter_d09207.continue -> continue_f4e7ac\n        ifexpression_9f5a1b.then -> continue_f4e7ac\n        dissimilarList -> getter_44a047.value\n        list2_ai -> not_4c3d8e.input\n        not_4c3d8e.result -> setter_d09207\n        ifexpression_9f5a1b.else -> empty_list.execute\n        continue_f4e7ac -> empty_list.continue\n    }\n\n    \n\n    instance(x: -97, y: -68) find_dissimilar_6fdd45 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 409, y: 58) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_8cb3f6.items\n        func() {\n            in(x: -185, y: 20, name: \"i\") property(Number) i_2d9c43\n\n            out(x: 334, y: 44, name: \"\") property(Number) temp_eb4e5a\n            out(x: 735, y: -112, name=\"output\") property(Any) output_c8cd0f\n\n            instance(x: 411, y: 23) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                expression: \"i == n_68068c\"\n            }\n            setter(x: -184, y: 17, name: \"setter_d3d6d1\") setter_d3d6d1 = temp\n            getter(x: 327, y: 55, name: \"getter_ba5f7a\") getter_ba5f7a = temp\n            instance(x: 415, y: -11) listRemove_0a8e4c root.Std_k98ojb.List.Remove {}\n            i_2d9c43 -> listRemove_0a8e4c.index\n            n_68068c -> listRemove_0a8e4c.count\n            listRemove_0a8e4c.itemAtIndex -> temp_eb4e5a\n            ifexpression_a2fa90.then -> continue_c95bcb\n            for_8cb3f6.next -> setter_d3d6d1.execute\n            i_2d9c43 -> getter_ba5f7a.index\n        } -> for_8cb3f6.handler\n\n        instance(x: 91, y: -114) list_concaten_4e5d66 root.Std_k98ojb.List.Concat {}\n        output_c8cd0f.result -> list_concaten_4e5d66.left\n        list_concaten_4e5d66.right -> list_48148f\n        instance(x: 91, y: -113) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"list_48148f.isEmpty\"\n        }\n        output_c8cd0f.value -> list_concaten_4e5d66.output\n        ifexpression_a2fa90.then -> continue_c95bcb\n        list_concaten_4e5d66.list -> setter_d3d6d1.new_value\n        for_8cb3f6.done -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -96, y: 47) rotate_right_f0a9c2 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 394, y: -16) add_8d5d0b root.Std_k98ojb.Math.Add {}\n        setter(x: -210, y: -31, name: \"setter_7e1c43\") setter_7e1c43 = local_sum\n        getter(x: 563, y: 13, name: \"getter_9f2d4a\") getter_9f2d4a = local_sum\n        instance(x: -203, y: -44) sum_0b6a5f root.Std_k98ojb.Math.Sum {}\n        list_2c62ab -> add_8d5d0b.list\n        setter_7e1c43.continue -> add_8d5d0b.execute\n        0 -> add_8d5d0b.first\n        sum_0b6a5f.result -> getter_9f2d4a.value\n    }\n\n    \n\n    instance(x: -193, y: -21) _sum_e5e3ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -233) ifexpression_d4f7e2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 313, y: -26, name: \"prime\") property(Number) prime_9c8a5d\n        instance(x: 93, y: -194, name: \"divisor\") property(Number) divisor_b0f8b3\n        setter(x: -142, y: -251, name: \"setter_d3d6ec\") setter_d3d6ec = not_prime\n        getter(x: 103, y: -287, name: \"getter_f9c2a3\") getter_f9c2a3 = prime\n        instance(x: 91, y: -216, name: \"setter_7a8e21\") setter_7a8e21 = divisor\n        list_empty_5fdd55 root.Std_k98ojb.List.Empty {}\n        instance(x: 314, y: -26, name: \"adder_6c0df2\") adder_6c0df2 = std.Std_add\n        setter_d3d6ec.continue -> ifexpression_d4f7e2.execute\n        ifexpression_d4f7e2.then -> continue_9a54bb\n        execute_b7b391 -> setter_d3d6ec.execute\n        divisor_b0f8b3.value -> adder_6c0df2.first\n        num_5c0677 -> adder_6c0df2.second\n        1 -> adder_6c0df2.addend\n        adder_6c0df2.result -> prime_9c8a5d\n        ifexpression_d4f7e2.else -> setter_7a8e21.execute\n        divisor_b0f8b3.value -> setter_7a8e21.first\n        num_5c0677 -> setter_7a8e21.second\n        prime_9c8a5d -> getter_f9c2a3.new_value\n    }\n\n    \n\n    instance(x: -91, y: 24) num_prime_6f2e4b root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 93, y: -142) ifexpression_d4c7d1 root.Std_k98ojb.Std.If {}\n        x_853326 -> ifexpression_d4c7d1.input\n        y_5390f5 -> ifexpression_d4c7d1.input\n        ifexpression_d4c7d1.then -> output_3339a3.execute\n        ifexpression_d4c7d1.else -> output_3339a3.execute\n    }\n\n    \n\n    instance(x: -97, y: 45) opposite_signs_6f2e5b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 23, y: -41) mod_9e4d5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 13, y: -64) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 14, y: -67) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 10, y: -74) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 3, y: -79) sum_digits_96023e root.main.sum_digits {}\n        instance(x: 1, y: -82) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 11, y: -85) less_than_or_equal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        setter(x: -28, y: -48, name: \"setter_8c6eda\") setter_8c6eda = diff\n        getter(x: 7, y: -61, name: \"getter_e808a2\") getter_e808a2 = diff\n        instance(x: 5, y: -25) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 11 == 0\"\n        }\n        setter_8c6eda.continue -> is_diff.execute\n        execute_1e159f -> setter_8c6eda.execute\n        n_27f29c -> sum_digits_96023e.n_6b655b\n        sum_digits_96023e.result -> add_88bb8a.first\n        11 -> div_547f34.second\n        div_547f34.result -> mod_9e4d5a.value\n        less_than_or_equal_f11fda.left -> mul_2f9d09.first\n        sum_digits_96023e.result -> mul_2f9d09.second\n        0 -> sub_9ff257.first\n        add_88bb8a.result -> sub_9ff257.second\n        mod_9e4d5a.result -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.then -> output_f2630f.execute\n        is_diff.continue_d9efd7 -> output_f2630f.execute\n    }\n\n    \n\n    instance(x: -18, y: 29) sum_digits_86117a root.main.sum_digits {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 91, y: -26) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 396, y: 219) replace_9fba8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -27) tolower_0a3d4e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 93, y: -28) toupper_1f7f6d root.Std_k98ojb.Strings.ToUpper {}\n        setter(x: -43, y: -49, name: \"setter_e2c5ca\") setter_e2c5ca = output\n        getter(x: 103, y: 240, name: \"getter_8a3e0f\") getter_8a3e0f = input\n        getter(x: 104, y: 261, name: \"getter_9d4b1f\") getter_9d4b1f = search\n        getter(x: 105, y: 282, name: \"getter_b5c6d2\") getter_b5c6d2 = replace\n        instance(x: -44, y: -50) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 397, y: 220) replace_9fba8c.execute {}\n        input_ai -> replace_9fba8c.input\n        search_ai -> replace_9fba8c.search\n        replace_ai -> replace_9fba8c.replace\n        ifexpression_a2fa90.then -> output_ai.value = tolower_0a3d4e(input_ai)\n        ifexpression_a2fa90.else -> output_ai.value = toupper_1f7f6d(input_ai)\n        replace_9fba8c.result -> setter_e2c5ca\n        ifexpression_3d7de6.then -> continue_c95bcb\n        else -> setter_e2c5ca.value = input_ai\n    }\n\n    \n\n    instance(x: -96, y: 23) replace_char_4e9f0a root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 93, y: 121) tolower_6d7f8a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -201, y: 55) ifexpression_b5c4e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 196, y: 246) strings_contains_8f2d6a root.Std_k98ojb.Strings.Contains {}\n        instance(x: -289, y: 191) ifexpression_b5c4e1.execute\n        input_ai -> tolower_6d7f8a.input\n        tolower_6d7f8a.output -> output_ai\n        ifexpression_b5c4e1.then -> strings_contains_8f2d6a.execute\n        strings_contains_8f2d6a.contains -> input_ai\n        \"a\" -> strings_contains_8f2d6a.contains\n        strings_contains_8f2d6a.result -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 47) is_lower_5b9c4e root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 342, y: -215) filter_9d7f5a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9d7f5a.list\n        instance(x: 191, y: 141) map_8c0e3d root.Std_k98ojb.Iteration.Map {}\n        filter_9d7f5a.result -> map_8c0e3d.items\n        instance(x: 294, y: -201) product_4d1f43 root.Std_k98ojb.Math.Product {}\n        map_8c0e3d.output_list -> product_4d1f43.input\n        instance(x: 94, y: -242) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        instance(x: 165, y: 155) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -39, y: -48, name: \"setter_d09207\") setter_d09207 = local_p\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_p\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_p\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_p\n        product_4d1f43.result -> output_cffcc2\n        filter_9d7f5a.result -> map_8c0e3d.items\n        map_8c0e3d.output_list -> product_4d1f43.input\n        ifexpression_a2fa90.then -> continue_45190b\n        sub_9ff257.result -> setter_d09207.new_value\n        k_1e19fb -> ifexpression_a2fa90.gen_0\n        setter_d09207.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -97, y: -68) unique_product_5f8d3a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 104, y: 69) filter_9d7f5a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_9d7f5a.items\n        list2_ai -> filter_9d7f5a.list\n        instance(x: -202, y: 54) map_8c4e0d root.Std_k98ojb.Iteration.Map {}\n        filter_9d7f5a.output_list -> map_8c4e0d.items\n        list1_ai -> map_8c4e0d.list\n        instance(x: -202, y: 54) setdiff_6e3e42 root.Std_k98ojb.Set.Difference {}\n        map_8c4e0d.output_list -> setdiff_6e3e42.result\n        list1_ai -> setdiff_6e3e42.left\n        list2_ai -> setdiff_6e3e42.right\n        instance(x: -202, y: 54) flatten_9f5a7b root.Std_k98ojb.List.Flatten {}\n        setdiff_6e3e42.result -> flatten_9f5a7b.list\n        instance(x: -202, y: 54) remove_8c4e0d root.Std_k98ojb.List.Remove {}\n        flatten_9f5a7b.list -> remove_8c4e0d.list\n        instance(x: -202, y: 54) list_8c4e0d root.Std_k98ojb.List.List {}\n        remove_8c4e0d.listWithoutItem -> list_8c4e0d.new_value\n        output_ai -> list_8c4e0d\n    }\n\n    \n\n    instance(x: -202, y: 54) find_dissimilar_9f5a7b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 94, y: -109) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_9ab286.items\n        instance(x: 196, y: -26) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        instance(x: 177, y: 255) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        instance(x: -200, y: 39) slice_9f7d0b root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_9f7d0b.list\n        n_68068c -> slice_9f7d0b.start\n        slice_9f7d0b.length -> slice_9f7d0b.end\n        instance(x: 215, y: -256) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        setter_d09207.continue -> for_9ab286.reset\n        execute_1e159f -> setter_d09207.execute\n        n_68068c -> sub_9ff257.first\n        for_9ab286.item -> sub_9ff257.second\n        ifexpression_a2fa90.then -> continue_c95bcb\n        slice_9f7d0b.start -> setter_29a5c8.new_value\n        execute_1e159f -> setter_d09207.execute\n        n_68068c -> sub_9ff257.first\n        for_9ab286.item -> sub_9ff257.second\n        ifexpression_a2fa90.else -> continue_c95bcb\n        concat_9b38cc.result -> output_823209\n        filter_875ddb.result -> concat_9b38cc.left\n        list_48148f -> filter_875ddb.list\n        getter_44a047.value -> slice_9f7d0b.start\n        slice_9f7d0b.end -> setter_29a5c8.new_value\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4e2d1a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 80, y: -21) add_9d7e5b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_9d7e5b.items\n        0 -> add_9d7e5b.first\n        sum_2a848f.result -> add_9d7e5b.second\n    }\n\n    \n\n    instance(x: -92, y: 45) _sum_1c4a8a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 394, y: -201) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 219, y: 261) not_8f5d7c root.Std_k98ojb.Logic.Not {}\n        instance(x: 292, y: -215) greaterthan_4a9e0b root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 105, y: 246) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -44, y: -46, name: \"setter_d09207\") setter_d09207 = local_num\n        getter(x: -131, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_num\n        getter(x: 117, y: 540, name: \"getter_44a047\") getter_44a047 = local_num\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_num\n        list_b5d10a -> ifexpression_a2fa90.list\n        0 -> not_8f5d7c.value\n        execute_b7b391 -> setter_d09207.execute\n        num_5c0677 -> setter_d09207.new_value\n        setter_d09207.continue -> continue_9a54bb\n        ifexpression_a2fa90.then -> output_c457b3.output\n        greaterthan_4a9e0b.left -> getter_44a047.value\n        div_547f34.first -> not_8f5d7c.value\n        2 -> setter_29a5c8.new_value\n        continue_9a54bb -> ifexpression_a2fa90.execute\n        output_c457b3.result -> greaterthan_4a9e0b.result\n        num_5c0677 -> greaterthan_4a9e0b.gen_0\n        not_8f5d7c.value -> setter_29a5c8.gen_1\n    }\n\n    \n\n    instance(x: -97, y: -68) num_prime_6d2a95 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 394, y: -176) lessThanOrEqual_f7d2e8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 246, y: -201) ifexpression_a1f7eb root.Std_k98ojb.Std.IfExpression {\n            expression: \"x * y < 0\"\n        }\n        instance(x: 142, y: -269) not_6c8e4d root.Std_k98ojb.Logic.Not {}\n        instance(x: 191, y: -281) and_80a119 root.Std_k98ojb.Logic.And {}\n        setter(x: -216, y: -334, name: \"setter_b0f6cd\") setter_b0f6cd = opposite\n        getter(x: 215, y: -297, name: \"getter_d7c5df\") getter_d7c5df = opposite\n        instance(x: 101, y: -255) if_e2a8b9 root.Std_k98ojb.Std.If {}\n        setter_b0f6cd.continue -> if_e2a8b9.execute\n        output_3339a3.value -> and_80a119.result\n        lessThanOrEqual_f7d2e8.left -> x_853326\n        y_5390f5 -> lessThanOrEqual_f7d2e8.right\n        if_e2a8b9.then -> setter_b0f6cd.execute\n        and_80a119.result -> not_6c8e4d.value\n        not_6c8e4d.value -> opposite\n        x_853326 -> if_e2a8b9.gen_0\n        y_5390f5 -> if_e2a8b9.gen_1\n    }\n\n    \n\n    instance(x: -187, y: 43) opposite_signs_d0eb3e root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 6, y: -14) sum_4d7e1a root.Std_k98ojb.Math.Sum {}\n        instance(x: 23, y: 18) modulo_85c2ac root.Std_k98ojb.Math.Modulo {}\n        instance(x: 8, y: 30) add_0df5eb root.Std_k98ojb.Math.Add {}\n        instance(x: -15, y: 21) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -33, y: -38, name: \"setter_b3f5a4\") setter_b3f5a4 = diff\n        getter(x: 0, y: 19, name: \"getter_2df8e1\") getter_2df8e1 = diff\n        instance(x: 14, y: -26) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"diff == 0\"\n        }\n        output_f2630f -> setter_b3f5a4.output\n        n_27f29c -> sub_9ff257.first\n        modulo_85c2ac.divisor -> add_0df5eb.second\n        sum_4d7e1a.result -> add_0df5eb.first\n        ifexpression_a2fa90.then -> output_f2630f.continue\n        diff -> sub_9ff257.result\n        11 -> modulo_85c2ac.divisor\n    }\n\n    \n\n    instance(x: -20, y: -19) is_diff_b6d1ec root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 89, y: -33) ifexpression_8d5c34 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 386, y: 246) replace_string_2fdd6e root.Std_k98ojb.Strings.Replace {}\n        instance(x: 219, y: -20) tolower_9a3c5d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: 141) upper_8d4ba1 root.Std_k98ojb.Strings.ToUpper {}\n        getter(x: -430, y: 190) -> replace_string_2fdd6e.input\n        input_ai -> tolower_9a3c5d.input\n        search_ai -> upper_8d4ba1.search\n        replace_ai -> replace_string_2fdd6e.replace\n        tolower_9a3c5d.output -> replace_string_2fdd6e.value\n        replace_string_2fdd6e.result -> output_ai\n    }\n\n    \n\n    instance(x: -96, y: 59) replace_char_1bfc4d root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 85, y: -18) tolower_9d3f2a root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_9d3f2a.input\n        tolower_9d3f2a.output -> output_ai\n    }\n\n    \n\n    instance(x: -86, y: 56) is_lower_8dfc23 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 278, y: 173) filter_9f1c71 root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_9f1c71.items\n        instance(x: -142, y: 253) unique_5d5a42 root.Std_k98ojb.List.Unique {}\n        unique_5d5a42.list -> filter_9f1c71.output_list\n        instance(x: 109, y: 44) prod_8f6b2e root.Std_k98ojb.Math.Prod {}\n        setter(x: -215, y: -292, name: \"setter_eba0ca\") setter_eba0ca = product\n        getter(x: 1014, y: 201, name: \"getter_1a8f43\") getter_1a8f43 = product\n        unique_5d5a42.list -> prod_8f6b2e.input\n        instance(x: -140, y: 266) add_0c5c74 root.Std_k98ojb.Math.Add {}\n        1 -> add_0c5c74.first\n        execute_19300c -> setter_eba0ca.execute\n        unique_5d5a42.list -> prod_8f6b2e.input\n        setter_eba0ca.continue -> continue_45190b\n        prod_8f6b2e.result -> output_cffcc2\n        product -> getter_1a8f43.value\n    }\n\n    \n\n    instance(x: -141, y: 25) unique_product_4b5c66 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 80, y: -110) setdiff_6d3f1b root.Std_k98ojb.Set.Difference {}\n        list1_ai -> setdiff_6d3f1b.left\n        list2_ai -> setdiff_6d3f1b.right\n        output_ai -> setdiff_6d3f1b.output\n    }\n\n    \n\n    instance(x: -96, y: 34) find_dissimilar_f9a8ec root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 334, y: 140) slice_8d4f1a root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_8d4f1a.list\n        n_68068c -> slice_8d4f1a.length\n        0 -> slice_8d4f1a.start\n        slice_8d4f1a.length - n_68068c -> slice_8d4f1a.end\n        instance(x: 155, y: 23) flatten_2b7aeb root.Std_k98ojb.List.Flatten {}\n        list_48148f -> flatten_2b7aeb.list\n        flatten_2b7aeb.output_list -> slice_8d4f1a.items\n        instance(x: -176, y: 44) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != null\"\n        }\n        list_48148f -> filter_875ddb.list\n        filter_875ddb.result -> slice_8d4f1a.items\n        instance(x: -201, y: 109) getat_8eae56 root.Std_k98ojb.List.GetAt {}\n        instance(x: 97, y: 242) add_14921d root.Std_k98ojb.List.Add {}\n        output_823209 -> add_14921d.listWithItem\n        filter_875ddb.result -> getat_8eae56.index\n        slice_8d4f1a.items -> getat_8eae56.itemAtIndex\n        instance(x: -193, y: 26) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        add_14921d.listWithItem -> sub_9ff257.first\n        n_68068c -> sub_9ff257.second\n        getat_8eae56.itemAtIndex -> sub_9ff257.result\n    }\n\n    \n\n    instance(x: -96, y: 49) rotate_right_b1b5ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 84, y: -104) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_2c62ab -> map_f2330d.items\n        func() {\n            in(x: -212, y: -35, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) add_88bb8a root.Std_k98ojb.Math.Add {}\n            x_8ee839 -> add_88bb8a.first\n            _7dd980 -> add_88bb8a.second\n            add_88bb8a.result -> sum_2a848f\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> sum_2a848f\n    }\n\n    \n\n    instance(x: -92, y: 45) _sum_6c8691 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 88, y: -230) ifexpression_8d7c48 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 475, y: 25) isprime_e2a4ac root.main.num_prime {}\n        instance(x: 109, y: -104) not_5e9d3c root.Std_k98ojb.Logic.Not {}\n        instance(x: 97, y: -27) greaterthan_3f6ec root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 69, y: -191) and_8a2dd0 root.Std_k98ojb.Logic.And {}\n        instance(x: 87, y: -253) not_5e9d3c.execute -> greaterthan_3f6ec.execute\n        instance(x: 87, y: -253) output_c457b3.value -> isprime_e2a4ac.result\n        isprime_e2a4ac.continue_9a54bb -> and_8a2dd0.execute\n        num_5c0677 -> not_5e9d3c.input\n        greaterthan_3f6ec.left -> and_8a2dd0.left\n        greaterthan_3f6ec.right -> and_8a2dd0.right\n        and_8a2dd0.left -> isprime_e2a4ac.value\n        not_5e9d3c.value -> output_c457b3\n        ifexpression_8d7c48.then -> continue_9a54bb\n        execute_b7b391 -> num_prime.execute\n        num_5c0677 -> isprime_e2a4ac.n\n    }\n\n    \n\n    instance(x: -84, y: 22) isprime_0f6cd3 root.main.isprime_e2a4ac {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 292, y: 29) ifexpression_b8e41d root.Std_k98ojb.Std.If {\n            expression: \"it < 0 and Std.K > 0 or it >= 0 and Std.K <= 0\"\n        }\n        setter(x: -47, y: -48, name: \"setter_e5c7b1\") setter_e5c7b1 = opposite\n        getter(x: 118, y: 219, name: \"getter_2ff8cf\") getter_2ff8cf = opposite\n        instance(x: 194, y: -106) and_96aa25 root.Std_k98ojb.Logic.And {}\n        x_853326 -> setter_e5c7b1.x\n        y_5390f5 -> setter_e5c7b1.y\n        setter_e5c7b1.continue -> ifexpression_b8e41d.execute\n        ifexpression_b8e41d.then -> output_3339a3.execute\n        opposite_signs -> ifexpression_b8e41d.then\n        y_5390f5 -> getter_2ff8cf.y\n        x_853326 -> getter_2ff8cf.x\n        getter_2ff8cf.output -> and_96aa25.left\n        1 -> and_96aa25.right\n        ifexpression_b8e41d.then -> output_3339a3.execute\n    }\n\n    \n\n    instance(x: -49, y: -32) opposite_signs_def98b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 40, y: 31) ifexpression_d4a7ca root.Std_k98ojb.Std.IfExpression {\n            expression: \"(pow(n_27f29c, 10) - n_27f29c * 11 % 10 == 0)\"\n        }\n        instance(x: 57, y: 26) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 65, y: 32) pow_6d42c9 root.Std_k98ojb.Math.Pow {}\n        instance(x: -17, y: 19) add_bc1aaf root.Std_k98ojb.Math.Add {}\n        setter(x: -25, y: -45, name: \"setter_d3db51\") setter_d3db51 = local_n\n        getter(x: 18, y: 56, name: \"getter_b2f9d6\") getter_b2f9d6 = local_n\n        output_f2630f.value -> modulo_adfa16.result\n        n_27f29c -> pow_6d42c9.input\n        10 -> pow_6d42c9.y\n        11 -> add_bc1aaf.second\n        add_bc1aaf.result -> setter_d3db51.new_value\n        pow_6d42c9.result -> modulo_adfa16.value\n        modulo_adfa16.modulus -> 10\n        ifexpression_d4a7ca.then -> output_f2630f.execute\n        output_f2630f.value -> modulo_adfa16.result\n    }\n\n    \n\n    instance(x: -11, y: 37) is_diff_50b1ba root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 102, y: -141) ifexpression_5c3c1a root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == null\"\n        }\n        instance(x: 246, y: -121) Strings.Replace_f0e34d root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -191) tolower_64a6bf root.Std_k98ojb.Strings.ToLower {}\n        getter(x: 101, y: 215, name: \"getter_5c89b9\") getter_5c89b9 = input_ai\n        Strings.Contains_f7e2df getter_5c89b9 -> search_ai\n        getter_5c89b9 -> replace_ai\n        tolower_64a6bf.input_ai -> Strings.Replace_f0e34d.input\n        ifexpression_5c3c1a.then -> output_ai\n        instance(x: 99, y: -239) set_1caee1 root.Std_k98ojb.List.Set {}\n        getter(x: 242, y: 216, name: \"getter_e0e9d4\") getter_e0e9d4 = replace_ai\n        ifexpression_5c3c1a.else -> set_1caee1.input\n        instance(x: 246, y: -161) append_c53f35 root.Std_k98ojb.List.Append {}\n        Strings.Replace_f0e34d.result -> append_c53f35.item\n        set_1caee1.value -> append_c53f35.list\n        getter_e0e9d4 -> append_c53f35.replace\n        append_c53f35.output -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: 42) replace_char_69a5b3 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 76, y: -33) tolower_6c63a1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 193, y: -206) islower_b3e3ad root.Std_k98ojb.Logic.Equal {}\n        setter(x: -203, y: -43, name: \"setter_e5f0ba\") setter_e5f0ba = output_ai\n        getter(x: -129, y: 143, name: \"getter_4dcd45\") getter_4dcd45 = output_ai\n        input_ai -> tolower_6c63a1.input\n        result -> islower_b3e3ad.predicate\n        tolower_6c63a1.result -> setter_e5f0ba.value\n        ifexpression_9b0aa5 root.Std_k98ojb.Logic.And {}\n        instance(x: 195, y: -186) ifexpression_9b0aa5.handler is_lower {\n            handler: func() {\n                in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n                out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n                instance(x: 76, y: -33) tolower_6c63a1 root.Std_k98ojb.Strings.ToLower {}\n                instance(x: 193, y: -206) islower_b3e3ad root.Std_k98ojb.Logic.Equal {}\n                setter(x: -203, y: -43, name: \"setter_e5f0ba\") setter_e5f0ba = output_ai\n                getter(x: -129, y: 143, name: \"getter_4dcd45\") getter_4dcd45 = output_ai\n                input_ai -> tolower_6c63a1.input\n                result -> islower_b3e3ad.predicate\n                tolower_6c63a1.result -> setter_e5f0ba.value\n\n                out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n                ifexpression_9b0aa5.execute()\n            }\n        } \n        instance(x: -201, y: -186) else {\n            execute_9a99f1 root.Std_k98ojb.Std.If {}\n            list_b3e3ad -> ifexpression_9b0aa5.left\n            1 -> ifexpression_9b0aa5.right\n            ifexpression_9b0aa5.execute()\n        } -> islower_b3e3ad.then\n    }\n\n    \n\n    instance(x: -91, y: -68) is_lower_def2c4 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 384, y: 56) unique_1f7e24 root.Std_k98ojb.List.Uniq {}\n        list_5fda54 -> unique_1f7e24.list\n        instance(x: -202, y: -216) flatten_b1df77 root.Std_k98ojb.List.Flatten {}\n        unique_1f7e24.output_list -> flatten_b1df77.input\n        instance(x: 91, y: -141) product_4ca0a2 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 313, y: 34) mul_2bb2b1 root.Std_k98ojb.Math.Mul {}\n        instance(x: 102, y: 210) div_547f34 root.Std_k98ojb.Math.Div {}\n        getter(x: -221, y: -246, name: \"getter_b15dbd\") getter_b15dbd = unique\n        getter(x: 83, y: 247, name: \"getter_c77ea5\") getter_c77ea5 = unique\n        setter(x: -243, y: 191, name: \"setter_4d1d8a\") setter_4d1d8a = product\n        instance(x: 94, y: 189) ifexpression_d35c11 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x == 0\"\n        }\n        instance(x: 292, y: -217) getat_6e8e3d root.Std_k98ojb.List.GetAt {}\n        getter_b15dbd.value -> product\n        getter_c77ea5.value -> div_547f34.first\n        product_4ca0a2.input_list -> [1]\n        1 -> mul_2bb2b1.first\n        unique_1f7e24.output_list[0] -> div_547f34.second\n        execute_19300c -> setter_4d1d8a.execute\n        ifexpression_d35c11.then -> continue_45190b\n        product_4ca0a2.result -> getter_c77ea5.value\n    }\n\n    \n\n    instance(x: -87, y: 59) unique_product_3f7bf5 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 313, y: -63) intersection_5f7a47 root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 493, y: -121) dissimilar_set_58c1ca root.Std_k98ojb.List.Flatten {}\n        instance(x: 198, y: -221) filter_8d6ab3 root.Std_k98ojb.Query.Filter {}\n        list2_ai -> filter_8d6ab3.list\n        filter_8d6ab3.where -> intersection_5f7a47.left\n        list1_ai -> intersection_5f7a47.right\n\n        instance(x: 196, y: -233) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == false\"\n        }\n        dissimilar_set_58c1ca -> filter_8d6ab3.output_list\n        filter_8d6ab3.filterList -> output_ai\n        instance(x: -197, y: 33) sort_f2a55f root.Std_k98ojb.List.Sort {}\n        sort_f2a55f.input -> dissimilar_set_58c1ca.list\n\n        intersection_5f7a47.result -> filter_8d6ab3.output_list\n        filter_8d6ab3.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -176, y: 67) find_dissimilar_e83da0 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 83, y: 69) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 253, y: -216) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i >= list_48148f.length\"\n        }\n        instance(x: 230, y: 275) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 89, y: -201) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -137, y: -248, name: \"setter_d09207\") setter_d09207 = output\n        getter(x: 122, y: 343, name: \"getter_7f13b7\") getter_7f13b7 = output\n        instance(x: 292, y: 216) add_88bb8a2 root.Std_k98ojb.List.Add {}\n        instance(x: 95, y: -203) listslice_b0d7aa root.Std_k98ojb.List.Slice {}\n        list_48148f -> for_8cb3f6.items\n        n_68068c -> sub_9ff257.second\n        execute_1e159f -> setter_d09207.execute\n        k_1e19fb -> setter_d09207.new_value\n        ifexpression_a2fa90.then -> continue_c95bcb\n        sub_9ff257.result -> getter_7f13b7\n        add_88bb8a.addItems -> add_88bb8a2.listWithItem\n        0 -> listslice_b0d7aa.start\n        n_68068c -> listslice_b0d7aa.end\n        for_8cb3f6.index -> sub_9ff257.first\n        listslice_b0d7aa.slice -> add_88bb8a2.new_value\n        add_88bb8a2.list -> getter_7f13b7\n        setter_d09207.continue -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -94, y: 25) rotate_right_b4df3d root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 73, y: -46) add_8e6bb1 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_8e6bb1.inputs\n        sum_2a848f.result -> add_8e6bb1.value\n    }\n\n    \n\n    instance(x: -64, y: 65) _sum_b2ff44 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 43, y: -233) ifexpression_d7c85e root.Std_k98ojb.Std.If {}\n        instance(x: 97, y: -255) isless_or_equal_a5e38d root.Std_k98ojb.Math.LessThanOrEqual {}\n        setter(x: -176, y: -287, name: \"setter_6f7c2a\") setter_6f7c2a = divisor\n        getter(x: 122, y: 201, name: \"getter_a0d8ad\") getter_a0d8ad = divisor\n        instance(x: 83, y: -299) div_13f4f9 root.Std_k98ojb.Math.Div {}\n        instance(x: 94, y: 187) ifexpression_d7c85e.then -> continue_9a54bb\n        0 -> isless_or_equal_a5e38d.left\n        num_5c0677 -> isless_or_equal_a5e38d.right\n        isless_or_equal_a5e38d.result -> setter_6f7c2a\n        ifexpression_d7c85e.else -> sumprime_f9df57\n        sumprime_f9df57 -> divisor\n        instance(x: 55, y: -310) sub_0b8eaa root.Std_k98ojb.Math.Sub {}\n        instance(x: 43, y: -247) mul_c3ff38 root.Std_k98ojb.Math.Mul {}\n        instance(x: 61, y: -202) div_13f4f9.root -> ifexpression_d7c85e.gen_0\n        sumprime_f9df57 -> sub_0b8eaa.first\n        num_5c0677 -> sub_0b8eaa.second\n        sub_0b8eaa.result -> mul_c3ff38.first\n        2 -> mul_c3ff38.second\n        div_13f4f9.result -> getter_a0d8ad\n        ifexpression_d7c85e.value -> ifexpression_d7c85e.execute\n    }\n\n    \n\n    instance(x: -192, y: -15) sumprime_f9df57 root.main.sumprime_f9df57 {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 80, y: -233) ifexpression_d1c7d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x < 0 && y > 0\"\n        }\n        instance(x: 94, y: -221) ifexpression_5f9e8a root.Std_k98ojb.Std.IfExpression {\n            expression: \"x > 0 && y < 0\"\n        }\n        instance(x: 97, y: -208) not_4d6c2b root.Std_k98ojb.Logic.Not {}\n        instance(x: 104, y: -194) and_9f5a7e root.Std_k98ojb.Logic.And {}\n        output_3339a3 -> not_4d6c2b.value\n        ifexpression_d1c7d4.then -> and_9f5a7e.execute\n        ifexpression_5f9e8a.then -> and_9f5a7e.execute\n        x_853326 -> ifexpression_d1c7d4.gen_0\n        y_5390f5 -> ifexpression_5f9e8a.gen_0\n    }\n\n    \n\n    instance(x: -88, y: 25) opposite_signs_3b6a2a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 12, y: -41) mod_8e9d7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 13, y: -33) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 11, y: -29) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 7, y: -35) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 5, y: -31) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 4, y: -27) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        setter(x: -25, y: -48, name: \"setter_8c6eda\") setter_8c6eda = diff\n        getter(x: 10, y: -23) getter_38583a = diff\n        instance(x: 11, y: -19) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"diff == 0\"\n        }\n        output_f2630f -> ifexpression_a2fa90.execute\n        n_27f29c -> mod_8e9d7b.input\n        11 -> mod_8e9d7b.divisor\n        mod_8e9d7b.result -> add_88bb8a.first\n        sub_9ff257.result -> mul_2f9d09.second\n        mul_2f9d09.result -> div_547f34.first\n        floor_61b38d.output -> ifexpression_a2fa90.gen_0\n        diff -> sub_9ff257.result\n    }\n\n    \n\n    instance(x: -25, y: 15) is_diff_5c7a4e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 93, y: -16) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == search_ai\"\n        }\n        instance(x: 386, y: 209) replace_9fba8c root.Std_k98ojb.Strings.Replace {}\n        instance(x: 94, y: -16) tolower_5c4634 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 97, y: -16) toupper_5c4634 root.Std_k98ojb.Strings.ToUpper {}\n        instance(x: 386, y: 209) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"search_ai == input_ai\"\n        }\n        instance(x: 97, y: -16) tolower_5c4634.input -> search_ai\n        instance(x: 97, y: -16) tolower_5c4634.output -> replace_ai\n        instance(x: 386, y: 209) ifexpression_a2fa90.then -> output_ai\n        instance(x: 386, y: 209) else -> replace_char\n        replace_9fba8c.input -> input_ai\n        replace_9fba8c.search -> search_ai\n        replace_9fba8c.replace -> replace_ai\n        replace_9fba8c.output -> output_ai\n        tolower_5c4634.output -> ifexpression_a2fa90.gen_0\n        tolower_5c4634.output -> ifexpression_a2fa90.gen_1\n        tolower_5c4634.output -> ifexpression_a2fa90.gen_2\n        tolower_5c4634.output -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: 45) replace_char_49c6ac root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 92, y: 20) tolower_4f5d3b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -201, y: 140) ifexpression_b9c7a1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != null\"\n        }\n        instance(x: 91, y: 270) strings_contains_8f2d6e root.Std_k98ojb.Strings.Contains {}\n        instance(x: -203, y: 220) ifexpression_b9c7a1.execute\n        tolower_4f5d3b.input -> input_ai\n        output_ai -> ifexpression_b9c7a1.value\n        strings_contains_8f2d6e.search -> ifexpression_b9c7a1.gen_0\n        strings_contains_8f2d6e.contains -> ifexpression_b9c7a1.gen_1\n        tolower_4f5d3b.result -> output_ai\n    }\n\n    \n\n    instance(x: -93, y: 30) is_lower_4a95ab root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 93, y: -246) filter_6d3f8a root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> filter_6d3f8a.items\n        instance(x: 201, y: 100) map_7c0e2d root.Std_k98ojb.Iteration.Map {}\n        map_7c0e2d.output_list -> output_cffcc2\n        instance(x: -289, y: 34) product_5f1a6d root.Std_k98ojb.Math.Product {}\n        filter_6d3f8a.result -> map_7c0e2d.items\n        instance(x: 215, y: 44) ifexpression_bf9e15 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != 0\"\n        }\n        product_5f1a6d.input_list -> filter_6d3f8a.list\n        execute_19300c -> map_7c0e2d.execute\n        map_7c0e2d.output_list -> product_5f1a6d.input_list\n        ifexpression_bf9e15.then -> continue_45190b\n        product_5f1a6d.result -> output_cffcc2\n        filter_6d3f8a.list -> product_5f1a6d.output_list\n    }\n\n    \n\n    instance(x: -91, y: 54) unique_product_9c7e0a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 292, y: 54) filter_6d3f8a root.Std_k98ojb.Iteration.Filter {}\n        list1_ai -> filter_6d3f8a.items\n        list2_ai -> filter_6d3f8a.list\n        func() {\n            in(x: -530, y: -4, name: \"x\") property(Number) x_0e9c5b\n\n            out(x: 333, y: 77, name: \"\") property(Boolean) dissimilar_7e2a95\n\n            instance(x: 291, y: 41) not_6f1d14 root.Std_k98ojb.Logic.Not {}\n            x_0e9c5b -> not_6f1d14.input\n            list1_ai -> not_6f1d14.list\n            list2_ai -> not_6f1d14.right\n            not_6f1d14.result -> dissimilar_7e2a95\n        } -> filter_6d3f8a.handler\n        filter_6d3f8a.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: 43) find_dissimilar_5c4b0a root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 342, y: -121) for_9ab286 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_9ab286.items\n        instance(x: 217, y: -26) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 198, y: 256) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -37, y: -48, name: \"setter_d09207\") setter_d09207 = local_n\n        getter(x: -130, y: 211, name: \"getter_7f13b7\") getter_7f13b7 = local_n\n        getter(x: 118, y: 540, name: \"getter_44a047\") getter_44a047 = local_n\n        setter(x: 491, y: 194, name: \"setter_29a5c8\") setter_29a5c8 = local_n\n        instance(x: -200, y: 39) slice_4f7d0b root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_4f7d0b.list\n        n_68068c -> slice_4f7d0b.start\n        slice_4f7d0b.length -> sub_9ff257.second\n        instance(x: 93, y: -22) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        setter_d09207.continue -> ifexpression_a2fa90.execute\n        for_9ab286.item -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.then -> continue_c95bcb\n        sub_9ff257.result -> setter_29a5c8.new_value\n        n_68068c -> ifexpression_a2fa90.gen_1\n        slice_4f7d0b.slice -> concat_9b38cc.left\n        list_48148f -> concat_9b38cc.right\n        concat_9b38cc.result -> output_823209\n        for_9ab286.done -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_right_4d2c6a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 96, y: 46) add_1d5e6b root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_1d5e6b.items\n        0 -> add_1d5e6b.first\n        sum_2a848f.result -> add_1d5e6b.second\n    }\n\n    \n\n    instance(x: -93, y: 55) _sum_8c9d14 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 92, y: -227) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 401, y: 43) isprime_5f8d3e root.main.num_prime {}\n        instance(x: 99, y: -245) not_7c4a9a root.Std_k98ojb.Logic.Not {}\n        instance(x: 106, y: -176) less_than_1f0c45 root.Std_k98ojb.Math.LessThan {}\n        setter(x: -216, y: -292, name: \"setter_e2d3e5\") setter_e2d3e5 = not_prime\n        getter(x: 121, y: 210, name: \"getter_7f1c9a\") getter_7f1c9a = not_prime\n        instance(x: -202, y: -236) less_than_1f0c45 root.Std_k98ojb.Math.LessThan {}\n        num_5c0677 -> less_than_1f0c45.num\n        1 -> less_than_1f0c45.right\n        execute_b7b391 -> setter_e2d3e5.execute\n        num_5c0677 -> setter_e2d3e5.new_value\n        setter_e2d3e5.continue -> ifexpression_a2fa90.execute\n        isprime_5f8d3e.output -> output_c457b3\n        not_7c4a9a.value -> output_c457b3\n        less_than_1f0c45.result -> isprime_5f8d3e.predicate\n        ifexpression_a2fa90.then -> continue_9a54bb\n        isprime_5f8d3e.output_list -> output_c457b3\n    }\n\n    \n\n    instance(x: -193, y: 15) num_prime_0c6c23 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 292, y: -214) lessThanOrEqual_f2d6c8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 160, y: -273) not_e1a0c5 root.Std_k98ojb.Logic.Not {}\n        instance(x: 181, y: -304) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 394, y: -292) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"x * y < 0\"\n        }\n        instance(x: 261, y: -305) not_e1a0c5_2 root.Std_k98ojb.Logic.Not {}\n        setter(x: -193, y: -283, name: \"setter_c8a5f6\") setter_c8a5f6 = opposite\n        getter(x: 314, y: -272, name: \"getter_7e85c9\") getter_7e85c9 = opposite\n        instance(x: 145, y: -249) if_e19a62 root.Std_k98ojb.Std.If {}\n        setter_c8a5f6.continue -> ifexpression_a2fa90.execute\n        ifexpression_a2fa90.then -> output_3339a3.execute\n        execute_opposite_signs -> setter_c8a5f6.execute\n        not_e1a0c5_2.value -> and_80a119.left\n        x_853326 -> lessThanOrEqual_f2d6c8.left\n        y_5390f5 -> lessThanOrEqual_f2d6c8.right\n        ifexpression_a2fa90.then -> and_80a119.execute\n        not_e1a0c5.value -> output_3339a3\n        output_3339a3.continue -> continue_opposite_signs\n    }\n\n    \n\n    instance(x: -189, y: 23) opposite_signs_b77d34 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 31, y: 176) diff_8d4e38 root.Std_k98ojb.Logic.Diff {}\n        instance(x: 55, y: -222) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 16, y: 43) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -39, y: -210, name: \"setter_e3c8f5\") setter_e3c8f5 = local_diff\n        getter(x: -23, y: 199, name: \"getter_4e58eb\") getter_4e58eb = local_diff\n        getter(x: 32, y: 272, name: \"getter_a6d0ec\") getter_a6d0ec = local_diff\n        setter(x: 61, y: -193) setter_e3c8f5.continue -> diff_8d4e38.execute\n        execute_1ddb9f -> setter_e3c8f5.execute\n        n_27f29c -> setter_e3c8f5.new_value\n        diff_8d4e38.result -> sub_9ff257.first\n        0 -> add_88bb8a.second\n        sub_9ff257.result -> getter_a6d0ec.value\n        diff_8d4e38.result -> output_f2630f\n        if(getter_e3c8f5.value == 0) {\n            n_27f29c -> output_f2630f\n        }\n    }\n\n    \n\n    instance(x: -46, y: -18) is_diff_1db9d2 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 54, y: 140) strings_replace root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace.input\n        search_ai -> strings_replace.search\n        replace_ai -> strings_replace.replace\n        strings_replace.result -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) replace_char_4e3d45 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 278, y: 147) stringstolower_6d4e1f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -234, y: 193) ifexpression_d37c55 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it == input_ai\"\n        }\n        instance(x: 292, y: 108) continue_7a0f3d root.Std_k98ojb.Std.Continue {}\n        stringstolower_6d4e1f.input -> ifexpression_d37c55.input\n        stringstolower_6d4e1f.output -> output_ai\n        ifexpression_d37c55.then -> continue_7a0f3d\n        is_lower.continue_7a0f3d -> continue_7a0f3d\n    }\n\n    \n\n    instance(x: -200, y: 67) is_lower_b0e63b root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 78, y: -134) unique_9d4f0e root.Std_k98ojb.List.Union {}\n        list_5fda54 -> unique_9d4f0e.items\n        instance(x: 244, y: 46) filter_b1b6ec root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        instance(x: 199, y: -15) map_58c2a3 root.Std_k98ojb.Iteration.Map {}\n        list_5fda54 -> map_58c2a3.items\n        instance(x: 194, y: 22) prod_f8e42d root.Std_k98ojb.Math.Prod {}\n        unique_9d4f0e.list -> map_58c2a3.output_list\n        1 -> prod_f8e42d.index\n        execute_19300c -> map_58c2a3.execute_cdac2a\n        map_58c2a3.output_list -> prod_f8e42d.input\n        prod_f8e42d.result -> output_cffcc2\n        filter_b1b6ec.result -> unique_9d4f0e.list\n    }\n\n    \n\n    instance(x: -41, y: 46) unique_product_d34cd3 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 261, y: 89) find_5c8d14 root.Std_k98ojb.Iteration.Map {}\n        list1_ai -> find_5c8d14.items\n        list2_ai -> find_5c8d14.right\n        instance(x: -194, y: 15) ifexpression_d3d9e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"it != it\"\n        }\n        instance(x: 174, y: 221) filter_2f3a4c root.Std_k98ojb.Query.Filter {}\n        find_5c8d14.output_list -> output_ai\n        filter_2f3a4c.where -> find_5c8d14.execute\n        list1_ai -> filter_2f3a4c.list\n        list2_ai -> filter_2f3a4c.right\n    }\n\n    \n\n    instance(x: -199, y: 31) find_dissimilar_3b7e3a root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 396, y: 134) slice_8d4f9a root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_8d4f9a.list\n        n_68068c -> slice_8d4f9a.start\n        n_68068c -> slice_8d4f9a.end\n        instance(x: 189, y: -247) concat_e2cd66 root.Std_k98ojb.List.Concat {}\n        output_823209 -> concat_e2cd66.result\n        instance(x: 401, y: 29) ifexpression_d1e3df root.Std_k98ojb.Std.IfExpression {\n            expression: \"n >= list.length\"\n        }\n        instance(x: 261, y: -174) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -141, y: -246, name: \"setter_b4a3db\") setter_b4a3db = local_n\n        getter(x: -230, y: 134, name: \"getter_e2d1aa\") getter_e2d1aa = local_n\n        getter(x: 342, y: 549, name: \"getter_7c4f15\") getter_7c4f15 = local_n\n        instance(x: -136, y: -245) add_14921d root.Std_k98ojb.List.Add {}\n        setter_b4a3db.continue -> ifexpression_d1e3df.execute\n        ifexpression_d1e3df.then -> continue_c95bcb\n        execute_1e159f -> setter_b4a3db.execute\n        n_68068c -> setter_b4a3db.new_value\n        setter_b4a3db.continue -> concat_e2cd66.execute\n        ifexpression_d1e3df.else -> slice_8d4f9a.start\n        sub_9ff257.result -> slice_8d4f9a.end\n        n_68068c -> ifexpression_d1e3df.gen_0\n        slice_8d4f9a.list -> concat_e2cd66.left\n        slice_8d4f9a.index -> add_14921d.item\n        list_48148f -> add_14921d.list\n        add_14921d.result -> concat_e2cd66.right\n    }\n\n    \n\n    instance(x: -174, y: 34) rotate_right_7c3e25 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 73, y: -59) map_f2330d root.Std_k98ojb.Iteration.Map {}\n        list_2c62ab -> map_f2330d.items\n        func() {\n            in(x: -212, y: -13, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) add_88bb8a root.Std_k98ojb.Math.Add {}\n            x_8ee839 -> add_88bb8a.first\n            _7dd980 -> add_88bb8a.second\n            add_88bb8a.result -> sum_2a848f\n        } -> map_f2330d.handler\n        map_f2330d.output_list -> sum_2a848f\n    }\n\n    \n\n    instance(x: -92, y: 45) _sum_7b7c25 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 292, y: -173) ifexpression_5c6d48 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 405, y: 40) not_e4a7c0 root.Std_k98ojb.Logic.Not {}\n        instance(x: 463, y: -248) less_than_5f7d8e root.Std_k98ojb.Math.LessThan {}\n        instance(x: 101, y: 261) add_d2ad59 root.Std_k98ojb.Math.Add {}\n        setter(x: -161, y: -273, name: \"setter_e3c8b1\") setter_e3c8b1 = local_p\n        getter(x: 419, y: 220, name: \"getter_6a2e0d\") getter_6a2e0d = local_p\n        instance(x: -164, y: 201) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: 521, y: -251, name: \"setter_b9c64e\") setter_b9c64e = local_p\n        getter(x: 535, y: 250, name: \"getter_c9d7af\") getter_c9d7af = local_p\n        instance(x: 96, y: -203) pow_584bfd root.Std_k98ojb.Math.Pow {}\n        num_5c0677 -> pow_584bfd.x\n        2 -> pow_584bfd.y\n        pow_584bfd.result -> add_d2ad59.first\n        2 -> div_547f34.second\n        div_547f34.result -> setter_e3c8b1.new_value\n        2 -> less_than_5f7d8e.right\n        execute_b7b391 -> getter_c9d7af.execute\n        num_5c0677 -> getter_e3c8b1.input\n        ifexpression_5c6d48.then -> continue_9a54bb\n        not_e4a7c0.value -> output_c457b3\n        less_than_5f7d8e.result -> setter_b9c64e.new_value\n        add_d2ad59.result -> getter_c9d7af.value\n        div_547f34.result -> setter_e3c8b1.value\n        ifexpression_5c6d48.else -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -170, y: 15) num_prime_d2cdab root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.2:3b-instruct-fp16",
        "largest_context": 10891,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 141, y: -144) ifexpression_b8ebed root.Std_k98ojb.Std.If {}\n        instance(x: 221, y: -115) not_equal_63c35d root.Std_k98ojb.Logic.NotEqual {}\n        setter(x: -203, y: -142, name: \"setter_d4bb3f\") setter_d4bb3f = opposite\n        getter(x: 208, y: 66, name: \"getter_c16a49\") getter_c16a49 = opposite\n        instance(x: 155, y: 71) less_than_84bda7 root.Std_k98ojb.Logic.LessThan {}\n        setter(x: -179, y: -108, name: \"setter_f74e5c\") setter_f74e5c = compare\n\n        x_853326 -> not_equal_63c35d.left\n        y_5390f5 -> not_equal_63c35d.right\n        less_than_84bda7.value = 0\n        not_equal_63c35d.result -> opposite_6ebec3\n        opposite_signs.output_3339a3 -> setter_f74e5c.value\n        compare.result -> setter_d4bb3f.value\n        ifexpression_b8ebed.then -> output_3339a3.execute\n        less_than_84bda7.itemAtIndex = setter_d4bb3f.list\n        setter_f74e5c.continue -> ifexpression_b8ebed.next\n    }\n\n    \n\n    instance(x: 178, y: -31) opposite_signs_def2ad root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 82, y: 40) mod_1b7da3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: -16, y: 94) minus_81c47d root.Std_k98ojb.Math.Sub {}\n        instance(x: 71, y: -14) sum_8f9e2a root.Std_k98ojb.Math.Add {}\n        setter(x: 4, y: 39, name: \"setter_7acba5\") setter_7acba5 = diff\n        getter(x: 27, y: 75, name: \"getter_accd47\") getter_accd47 = diff\n        instance(x: -34, y: 57) mod11_8c21bb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 23, y: 54) ifexpression_a0ba63 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod11_8c21bb.value == 1\"\n        }\n        instance(x: -22, y: 38) ifthenelse_7e9d3a root.Std_k98ojb.Logic.IfThenElse {}\n        output_f2630f -> ifthenelse_7e9d3a.then\n        diff -> minus_81c47d.first\n        sum_8f9e2a.first -> mod11_8c21bb.value\n        n_27f29c -> minus_81c47d.second\n        setvalue(x: 0, y: -45, name: \"setter_f6c38d\") setter_f6c38d = diff\n        ifthenelse_7e9d3a.then -> sum_8f9e2a.execute\n        mod11_8c21bb.value -> minus_81c47d.result\n        diff -> setvalue(x: 0, y: -45, name: \"setter_f6c38d\")\n        minus_81c47d.continue -> ifthenelse_7e9d3a.else\n        sum_8f9e2a.second -> output_f2630f\n        mod11_8c21bb.continue -> ifthenelse_7e9d3a.else\n    }\n\n    \n\n    instance(x: 78, y: 68) is_diff_57d5b4 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 16, y: 56) ifexpression_5c2df0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"Strings.Contains(input_ai, search_ai)\"\n        }\n        instance(x: -430, y: -12, name: \"index\") property(Number) index_a85e28\n        instance(x: 13, y: 234) strings_replace_4f5c01 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> strings_replace_4f5c01.input\n        search_ai -> strings_replace_4f5c01.search\n        replace_ai -> strings_replace_4f5c01.replace\n\n        ifexpression_5c2df0.then {\n            instance(x: 10, y: -55) count_94ce15 root.Std_k98ojb.Std.Count {}\n            list_93a66d <- input_ai.length()\n            index_a85e28 -> count_94ce15.reset\n            input_ai[1] -> strings_replace_4f5c01.replaceWith\n        }\n    }\n\n    \n\n    instance(x: 14, y: -37) replace_char_d51b2a root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 58, y: 114) tolower_9c64b3 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: -204, y: -34) filter_e96e57 root.Std_k98ojb.Query.Filter {\n            where: \"it\"\n        }\n        instance(x: 251, y: 272) ifexpression_f1d2f5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"input_ai == output_ai\"\n        }\n\n        input_ai -> tolower_9c64b3.input\n        tolower_9c64b3.output -> filter_e96e57.where\n        filter_e96e57.list -> is_lower.output\n\n        tolower_9c64b3.value -> output_ai\n        ifexpression_f1d2f5.then -> output_ai\n        input_ai -> ifexpression_f1d2f5.gen_0\n    }\n\n    \n\n    instance(x: -204, y: 115) is_lower_4a8a91 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 416, y: -128) unique_1f9e64 root.Std_k98ojb.List.Uniq {}\n        list_5fda54 -> unique_1f9e64.items\n        instance(x: 186, y: 17) filter_f9f44a root.Std_k98ojb.Query.Filter {}\n        instance(x: 292, y: -22) product_6d8ee3 root.Std_k98ojb.Math.Product {}\n        unique_1f9e64.list -> filter_f9f44a.items\n        product_6d8ee3.value -> output_cffcc2\n        1 -> product_6d8ee3.first\n    }\n\n    \n\n    instance(x: -210, y: -108) unique_product_b3a0ec root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 401, y: -118) find_5f6e60 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 236, y: 225) filter_a9eb55 root.Std_k98ojb.Query.Filter {\n            where: \"it not in list2\"\n        }\n        instance(x: 151, y: -21) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        list1_ai -> find_5f6e60.items\n        list2_ai -> filter_a9eb55.list\n        concat_9b38cc.right -> output_ai\n\n        instance(x: 83, y: -54) filter_e7d56d root.Std_k98ojb.Query.Filter {\n            where: \"it in list1\"\n        }\n        setter(x: -200, y: -108, name: \"setter_dce5b0\") setter_dce5b0 = dissimilar\n        getter(x: 143, y: -32, name: \"getter_4a3d39\") getter_4a3d39 = dissimilar\n        list2_ai -> filter_e7d56d.list\n        find_5f6e60.index -> setter_dce5b0.new_value\n\n        instance(x: 317, y: -140) add_14921d root.Std_k98ojb.List.Add {}\n        instance(x: 178, y: 54) list_merge_e4a2ca root.Std_k98ojb.List.Merge {}\n        output_ai -> list_merge_e4a2ca\n        find_5f6e60.output_list -> dissimilar\n        add_14921d.listWithItem -> filter_e7d56d.list\n    }\n\n    \n\n    instance(x: -215, y: -54) find_dissimilar_b8baf1 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 349, y: 64) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        list_48148f -> for_8cb3f6.items\n        func() {\n            in(x: -187, y: 17, name: \"x\") property(Number) x_30d51c\n\n            out(x: 309, y: 60, name: \"\") property(List) temp_82e1a7\n\n            instance(x: 347, y: 21) slice_41bfc6 root.Std_k98ojb.List.Slice {}\n            instance(x: -205, y: 85) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n                expression: \"x < n\"\n            }\n            setter(x: 59, y: 45, name: \"setter_e2a9aa\") setter_e2a9aa = temp\n            getter(x: 319, y: 29, name: \"getter_86ca23\") getter_86ca23 = temp\n            instance(x: -208, y: 34) add_14921d root.Std_k98ojb.List.Add {}\n            x -> add_14921d.item\n            list_48148f -> add_14921d.listWithItem\n            add_14921d.listWithoutItem -> temp\n        } -> for_8cb3f6.handler\n        instance(x: 349, y: -15) slice_41bfc6 root.Std_k98ojb.List.Slice {}\n        instance(x: -206, y: -48) concatenate_c1ab9e root.Std_k98ojb.List.Concatenate {}\n        temp -> concatenate_c1ab9e.left\n        list_48148f -> concatenate_c1ab9e.right\n        concatenat_c1ab9e.result -> output_823209\n    }\n\n    \n\n    instance(x: -78, y: 50) rotate_right_baa7b6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 391, y: -42) add_8e1ec7 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> add_8e1ec7.list\n        0 -> add_8e1ec7.first\n        add_8e1ec7.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -102, y: 78) _sum_b74cfa root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 201, y: -281) ifexpression_d7c33f root.Std_k98ojb.Std.If {\n            expression: \"n <= 2\"\n        }\n        instance(x: 202, y: -176) false_3df0f1 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 205, y: -230) for_48d40e root.Std_k98ojb.Std.For {}\n        instance(x: 258, y: 12) isprime_b19dd5 rootStd_k98ojb.Logic.Not {}\n        setter(x: -186, y: -44, name: \"setter_a54d4a\") setter_a54d4a = not\n        getter(x: -196, y: -251, name: \"getter_2be3e9\") getter_2be3e9 = isprime_b19dd5\n        instance(x: 199, y: 7) getitem_1f47ea root.Std_k98ojb.List.GetItem {}\n        instance(x: 196, y: -245) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: 208, y: -265, name: \"setter_e52a89\") setter_e52a89 = zero\n        getter(x: -187, y: 243, name: \"getter_c4c73d\") getter_c4c73d = not\n        instance(x: 199, y: 21) div_547f34 root.Std_k98ojb.Math.Div {}\n        num_5c0677 -> getitem_1f47ea.index\n        zero -> sub_9ff257.first\n        execute_b7b391 -> setter_a54d4a.execute\n        setZero -> setter_e52a89.execute\n        kth_element_49c6ac.execute_cdac2a <- zero\n        for_48d40e.itemAtIndex = div_547f34.result\n        ifexpression_d7c33f.then-> continue_9a54bb\n        isprime_b19dd5.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -180, y: 32) num_prime_6c6ef9 root.main.num_prime {}\n}"
            ]
        }
    }
]