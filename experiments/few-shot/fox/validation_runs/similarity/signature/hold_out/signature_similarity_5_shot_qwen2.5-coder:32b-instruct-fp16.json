[
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c5b3d root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c5b3d.first\n        y_5390f5 -> mul_2c5b3d.second\n        mul_2c5b3d.result -> less_than_zero_8f1e5a.left\n        0 -> less_than_zero_8f1e5a.right\n        less_than_zero_8f1e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_4d6b3c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5b2d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -24) equal_3c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5b2d1a.value\n        11 -> modulo_5b2d1a.divisor\n        modulo_5b2d1a.result -> equal_3c7e1b.left\n        0 -> equal_3c7e1b.right\n        equal_3c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 59) is_diff_15f9e9 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 177, y: 210) tolower_4b5c2a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 466, y: 210) equal_3f8e1d root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b5c2a.input\n        input_ai -> equal_3f8e1d.left\n        tolower_4b5c2a.output -> equal_3f8e1d.right\n        equal_3f8e1d.equal -> output_ai\n    }\n\n    \n\n    instance(x: -60, y: 179) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(List) _7dd980\n\n                instance(x: 0, y: 25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4a7c3f -> contains_node.list\n                item_9b1bc3 -> contains_node.item\n                instance(x: 0, y: -25) if_node root.Std_k98ojb.Std.If {}\n                contains_node.contains -> if_node.input\n                func() {\n                    acc_4a7c3f -> _7dd980\n                } -> if_node.then\n                func() {\n                    instance(x: 0, y: -25) add_node root.Std_k98ojb.List.Add {}\n                    item_9b1bc3 -> add_node.item\n                    acc_4a7c3f -> add_node.list\n                    add_node.listWithItem -> _7dd980\n                } -> if_node.else\n            }\n        }\n\n        instance(x: 200, y: -100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(Number) _7dd980\n\n                instance(x: 0, y: 25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4a7c3f -> mul_node.first\n                item_9b1bc3 -> mul_node.second\n                mul_node.result -> _7dd980\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        product_node.done -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -11) difference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a2b3c.left\n        list2_ai -> difference_1a2b3c.right\n\n        instance(x: 405, y: -11) difference_4d5e6f root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_4d5e6f.left\n        list1_ai -> difference_4d5e6f.right\n\n        instance(x: 305, y: 77) concat_7g8h9i root.Std_k98ojb.List.Concat {}\n        difference_1a2b3c.difference -> concat_7g8h9i.left\n        difference_4d5e6f.difference -> concat_7g8h9i.right\n\n        concat_7g8h9i.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -10, y: 30) find_dissimilar_jk root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -140) length_1b2d3a root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: -175) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -140) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 460, y: -175) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 460, y: -40) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 620, y: -105) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2d3a.list\n        length_1b2d3a.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b2d3a.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        sub_f133b2.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.right\n        slice_76ecda.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -122) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_4d2b1e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4d2b1e.items\n        0 -> reduce_4d2b1e.initialValue\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_8f9a1c\n            in(x: -167, y: 22, name: \"current\") property(Number) current_0b1dcd\n\n            out(x: 1072, y: -34, name: \"sum\") property(Number) sum_58f9a1\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_8f9a1c -> add_6e8af5.first\n            current_0b1dcd -> add_6e8af5.second\n            add_6e8af5.result -> sum_58f9a1\n        } -> reduce_4d2b1e.reducer\n        reduce_4d2b1e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -307, y: 16) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6d6c5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e1a8c root.Std_k98ojb.Std.If {}\n        instance(x: 144, y: -104) lessthanorequal_6d6c5f_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 327, y: -104) if_2e1a8c_1 root.Std_k98ojb.Std.If {}\n        instance(x: 534, y: -104) lessthanorequal_6d6c5f_2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 741, y: -104) if_2e1a8c_2 root.Std_k98ojb.Std.If {}\n        instance(x: 948, y: -104) lessthanorequal_6d6c5f_3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1155, y: -104) if_2e1a8c_3 root.Std_k98ojb.Std.If {}\n        instance(x: 1362, y: -104) lessthanorequal_6d6c5f_4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1569, y: -104) if_2e1a8c_4 root.Std_k98ojb.Std.If {}\n        instance(x: 1776, y: -104) lessthanorequal_6d6c5f_5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1983, y: -104) if_2e1a8c_5 root.Std_k98ojb.Std.If {}\n        instance(x: 2190, y: -104) lessthanorequal_6d6c5f_6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2397, y: -104) if_2e1a8c_6 root.Std_k98ojb.Std.If {}\n        instance(x: 2604, y: -104) lessthanorequal_6d6c5f_7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2811, y: -104) if_2e1a8c_7 root.Std_k98ojb.Std.If {}\n        instance(x: 3018, y: -104) lessthanorequal_6d6c5f_8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3225, y: -104) if_2e1a8c_8 root.Std_k98ojb.Std.If {}\n        instance(x: 3432, y: -104) lessthanorequal_6d6c5f_9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3639, y: -104) if_2e1a8c_9 root.Std_k98ojb.Std.If {}\n        instance(x: 3846, y: -104) lessthanorequal_6d6c5f_10 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4053, y: -104) if_2e1a8c_10 root.Std_k98ojb.Std.If {}\n        instance(x: 4260, y: -104) lessthanorequal_6d6c5f_11 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4467, y: -104) if_2e1a8c_11 root.Std_k98ojb.Std.If {}\n        instance(x: 4674, y: -104) lessthanorequal_6d6c5f_12 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4881, y: -104) if_2e1a8c_12 root.Std_k98ojb.Std.If {}\n        instance(x: 5088, y: -104) lessthanorequal_6d6c5f_13 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5295, y: -104) if_2e1a8c_13 root.Std_k98ojb.Std.If {}\n        instance(x: 5502, y: -104) lessthanorequal_6d6c5f_14 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5709, y: -104) if_2e1a8c_14 root.Std_k98ojb.Std.If {}\n        instance(x: 5916, y: -104) lessthanorequal_6d6c5f_15 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6123, y: -104) if_2e1a8c_15 root.Std_k98ojb.Std.If {}\n        instance(x: 6330, y: -104) lessthanorequal_6d6c5f_16 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6537, y: -104) if_2e1a8c_16 root.Std_k98ojb.Std.If {}\n        instance(x: 6744, y: -104) lessthanorequal_6d6c5f_17 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6951, y: -104) if_2e1a8c_17 root.Std_k98ojb.Std.If {}\n        instance(x: 7158, y: -104) lessthanorequal_6d6c5f_18 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7365, y: -104) if_2e1a8c_18 root.Std_k98ojb.Std.If {}\n        instance(x: 7572, y: -104) lessthanorequal_6d6c5f_19 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7779, y: -104) if_2e1a8c_19 root.Std_k98ojb.Std.If {}\n        instance(x: 7986, y: -104) lessthanorequal_6d6c5f_20 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8193, y: -104) if_2e1a8c_20 root.Std_k98ojb.Std.If {}\n        instance(x: 8376, y: -104) lessthanorequal_6d6c5f_21 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8573, y: -104) if_2e1a8c_21 root.Std_k98ojb.Std.If {}\n        instance(x: 8770, y: -104) lessthanorequal_6d6c5f_22 root.Std_k98ojb.Math.L"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -86, y: -174) mul_2b6c8e root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -180) less_than_zero_e1d6f4 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2b6c8e.first\n        y_5390f5 -> mul_2b6c8e.second\n        mul_2b6c8e.result -> less_than_zero_e1d6f4.left\n        0 -> less_than_zero_e1d6f4.right\n        less_than_zero_e1d6f4.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -172, y: 58) opposite_signs_7b3c7e root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_3b2a7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 345, y: -25) equal_1c2e4f root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_3b2a7d.value\n        11 -> modulo_3b2a7d.divisor\n        modulo_3b2a7d.result -> equal_1c2e4f.left\n        0 -> equal_1c2e4f.right\n        equal_1c2e4f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -8, y: 5) is_diff_7a9b3d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 278, y: 212) tolower_4b5f0a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 603, y: 214) equal_7c2d3e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b5f0a.input\n        input_ai -> equal_7c2d3e.left\n        tolower_4b5f0a.output -> equal_7c2d3e.right\n        equal_7c2d3e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 164) is_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4d7f3c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_6b2a89\n\n                out(x: 50, y: 0, name: \"\") property(List) _123456\n\n                instance(x: 0, y: 0) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4d7f3c -> contains_node.list\n                item_6b2a89 -> contains_node.item\n                instance(x: 0, y: 50) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _123456\n                        acc_4d7f3c -> _123456\n                    }\n                    else: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _123456\n                        instance(x: 0, y: 0) add_node root.Std_k98ojb.List.Add {}\n                        acc_4d7f3c -> add_node.list\n                        item_6b2a89 -> add_node.item\n                        add_node.listWithItem -> _123456\n                    }\n                }\n                contains_node.contains -> if_node.input\n            }\n        }\n\n        instance(x: 0, y: 0) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4d7f3c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_6b2a89\n\n                out(x: 50, y: 0, name: \"\") property(Number) _123456\n\n                instance(x: 0, y: 0) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4d7f3c -> mul_node.first\n                item_6b2a89 -> mul_node.second\n                mul_node.result -> _123456\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        [] -> unique_list_node.initialValue\n\n        unique_list_node.value -> product_node.items\n        1 -> product_node.initialValue\n\n        product_node.value -> output_cffcc2\n        continue_45190b -> execute_19300c\n    }\n\n    instance(x: -757, y: -167) unique_product_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -296, y: -10) difference_1a5b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5b3c.left\n        list2_ai -> difference_1a5b3c.right\n\n        instance(x: 47, y: -10) difference_2a5b3c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_2a5b3c.left\n        list1_ai -> difference_2a5b3c.right\n\n        instance(x: 247, y: -10) concat_1a5b3c root.Std_k98ojb.List.Concat {}\n        difference_1a5b3c.difference -> concat_1a5b3c.left\n        difference_2a5b3c.difference -> concat_1a5b3c.right\n\n        concat_1a5b3c.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 67) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -128) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: -128) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -128) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -128) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 500, y: -128) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 640, y: -128) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_4b8927.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_3f3ee6.end\n        list_48148f -> slice_3f3ee6.list\n        modulo_4e8c54.result -> slice_76ecda.start\n        -1 -> slice_76ecda.end\n        list_48148f -> slice_76ecda.list\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -128) rotate_right_496e5e root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -11) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3d7de6.initialValue\n        list_2c62ab -> reduce_3d7de6.items\n        func() {\n            in(x: -154, y: -12, name: \"accumulated\") property(Number) accumulated_8f9b2a\n            in(x: -140, y: 10, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 675, y: -14, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 89, y: 1) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_8f9b2a -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3d7de6.reducer\n        reduce_3d7de6.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -150, y: 10) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 83, y: -338) lessthanorequal_6d5c8e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 271, y: -330) greaterthan_bf1a49 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 478, y: -356) and_4d2c5e root.Std_k98ojb.Logic.And {}\n        instance(x: 699, y: -330) lessthanorequal_1a2f9b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 702, y: -456) greaterthan_3c7d5e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 877, y: -391) and_2a8f9c root.Std_k98ojb.Logic.And {}\n        instance(x: 1046, y: -330) and_e5d2e7 root.Std_k98ojb.Logic.And {}\n        instance(x: 1215, y: -330) if_1a2f9c root.Std_k98ojb.Std.If {}\n        instance(x: 1465, y: -330) for_e7d2e7 root.Std_k98ojb.Std.For {}\n        instance(x: 1745, y: -330) mathexpression_1a2f9c root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1965, y: -330) if_e5d2e7 root.Std_k98ojb.Std.If {}\n        instance(x: 2245, y: -330) not_1a2f9c root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> lessthanorequal_6d5c8e.left\n        1 -> lessthanorequal_6d5c8e.right\n        num_5c0677 -> greaterthan_bf1a49.left\n        1 -> greaterthan_bf1a49.right\n        lessthanorequal_6d5c8e.result -> and_4d2c5e.left\n        greaterthan_bf1a49.result -> and_4d2c5e.right\n        num_5c0677 -> lessthanorequal_1a2f9b.left\n        4 -> lessthanorequal_1a2f9b.right\n        num_5c0677 -> greaterthan_3c7d5e.left\n        2 -> greaterthan_3c7d5e.right\n        lessthanorequal_1a2f9b.result -> and_2a8f9c.left\n        greaterthan_3c7d5e.result -> and_2a8f9c.right\n        and_4d2c5e.result -> if_1a2f9c.predicate\n        and_2a8f9c.result -> if_e5d2e7.predicate\n        not_1a2f9c.result -> output_c457b3\n        2 -> for_e7d2e7.items\n        num_5c0677 -> mathexpression_1a2f9c.gen_0\n        for_e7d2e7.item -> mathexpression_1a2f9c.gen_1\n        mathexpression_1a2f9c.result -> if_e5d2e7.predicate\n        if_e5d2e7.then -> continue_9a54bb\n        if_e5d2e7.else -> not_1a2f9c.execute\n        for_e7d2e7.onItem -> mathexpression_1a2f9c.execute\n        for_e7d2e7.done -> not_1a2f9c.execute\n        execute_b7b391 -> if_1a2f9c.execute\n        if_1a2f9c.then -> and_e5d2e7.left\n        and_e5d2e7.right -> for_e7d2e7.reset\n    }\n\n    \n\n    instance(x: -84, y: 60) num_prime_3b2f9c root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -46, y: -187) mul_3d5b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 102, y: -191) less_than_zero_6f1e4a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_3d5b9c.first\n        y_5390f5 -> mul_3d5b9c.second\n        mul_3d5b9c.result -> less_than_zero_6f1e4a.left\n        0 -> less_than_zero_6f1e4a.right\n        less_than_zero_6f1e4a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -287, y: 5) opposite_signs_5d2b9c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_5b3a8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 327, y: -25) equal_4c3e1a root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5b3a8d.value\n        11 -> modulo_5b3a8d.divisor\n        modulo_5b3a8d.result -> equal_4c3e1a.left\n        0 -> equal_4c3e1a.right\n        equal_4c3e1a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -97, y: 5) is_diff_8d5b1f root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 279, y: 212) tolower_4a5b0f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: 216) equal_3c7d1e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a5b0f.input\n        input_ai -> equal_3c7d1e.left\n        tolower_4a5b0f.output -> equal_3c7d1e.right\n        equal_3c7d1e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -280, y: 136) is_lower_72ef29 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n            out(x: 50, y: 0, name: \"bool\") property(Bool) bool_8d2e5b\n\n            instance(x: 0, y: -50) index_node root.Std_k98ojb.List.IndexOf {}\n            item_7a3f4c -> index_node.item\n            unique_list_node.items -> index_node.list\n            instance(x: 0, y: 50) equal_node root.Std_k98ojb.Logic.Equal {}\n            index_node.index -> equal_node.left\n            unique_list_node.index -> equal_node.right\n            equal_node.result -> bool_8d2e5b\n        } -> unique_list_node.predicate\n\n        instance(x: 100, y: -100) reduce_node root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -50, y: 0, name: \"acc\") property(Number) acc_7a3f4c\n            in(x: 50, y: 0, name: \"item\") property(Number) item_8d2e5b\n            out(x: 100, y: 0, name: \"\") property(Number) _9e6f6c\n\n            instance(x: 0, y: -50) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_7a3f4c -> mul_node.first\n            item_8d2e5b -> mul_node.second\n            mul_node.result -> _9e6f6c\n        } -> reduce_node.reducer\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        unique_list_node.result -> reduce_node.items\n        1 -> reduce_node.initial_value\n        reduce_node.accumulated_value -> output_cffcc2\n        reduce_node.done -> continue_45190b\n    }\n\n    instance(x: -300, y: -300) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -196, y: -105) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 236, y: -104) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 356, y: -104) concat root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -73, y: 56) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -143) length_7a1b5f root.Std_k98ojb.List.Length {}\n        instance(x: 169, y: -145) modulo_9d4c8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -137) sub_6a9f1a root.Std_k98ojb.Math.Sub {}\n        instance(x: 419, y: -155) slice_8e5d1c root.Std_k98ojb.List.Slice {}\n        instance(x: 420, y: -37) slice_62f6a5 root.Std_k98ojb.List.Slice {}\n        instance(x: 556, y: -102) concat_9d3c5e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_7a1b5f.list\n        length_7a1b5f.length -> modulo_9d4c8e.first\n        n_68068c -> modulo_9d4c8e.divisor\n        modulo_9d4c8e.result -> sub_6a9f1a.second\n        length_7a1b5f.length -> sub_6a9f1a.first\n        sub_6a9f1a.result -> slice_8e5d1c.start\n        -1 -> slice_8e5d1c.end\n        list_48148f -> slice_8e5d1c.list\n        0 -> slice_62f6a5.start\n        sub_6a9f1a.result -> slice_62f6a5.end\n        list_48148f -> slice_62f6a5.list\n        slice_8e5d1c.slice -> concat_9d3c5e.left\n        slice_62f6a5.slice -> concat_9d3c5e.right\n        concat_9d3c5e.result -> output_823209\n    }\n\n    \n\n    instance(x: -47, y: -105) rotate_right_6b9d7c root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -10) reduce_4b2d2e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4b2d2e.items\n        0 -> reduce_4b2d2e.initialValue\n        func() {\n            in(x: -175, y: -35, name: \"accumulated\") property(Number) accumulated_8a9f8c\n            in(x: -167, y: 21, name: \"current\") property(Number) current_4d0e1b\n\n            out(x: 1072, y: -35, name: \"sum\") property(Number) sum_3a9f8c\n\n            instance(x: 74, y: 2) add_6f8b34 root.Std_k98ojb.Math.Add {}\n            accumulated_8a9f8c -> add_6f8b34.first\n            current_4d0e1b -> add_6f8b34.second\n            add_6f8b34.result -> sum_3a9f8c\n        } -> reduce_4b2d2e.reducer\n        reduce_4b2d2e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -170, y: 56) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 89, y: -145) lessthanorequal_f6d7e7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 326, y: -107) ifexpression_1f8c2a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 540, y: -110) ifexpression_2d8e3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 2\"\n        }\n        instance(x: 761, y: -110) ifexpression_4f4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 326, y: -350) ifexpression_8d7e3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 540, y: -350) ifexpression_ae4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 2\"\n        }\n        instance(x: 761, y: -350) ifexpression_ce4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 982, y: -350) ifexpression_ea4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 1203, y: -350) ifexpression_fa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 1424, y: -350) ifexpression_ga4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 1645, y: -350) ifexpression_ha4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 1866, y: -350) ifexpression_ia4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 2087, y: -350) ifexpression_ja4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 2308, y: -350) ifexpression_ka4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 2529, y: -350) ifexpression_la4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 2750, y: -350) ifexpression_ma4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 2971, y: -350) ifexpression_na4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 3192, y: -350) ifexpression_oa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 3413, y: -350) ifexpression_pa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 3634, y: -350) ifexpression_qa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 3855, y: -350) ifexpression_ra4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 4076, y: -350) ifexpression_sa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 4297, y: -350) ifexpression_ta4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 4518, y: -350) ifexpression_ua4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 4739, y: -350) ifexpression_va4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 4960, y: -350) ifexpression_wa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 5181, y: -350) ifexpression_xa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 5402, y: -350) ifexpression_ya4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 5623, y: -350) ifexpression_za4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 5844, y: -350) ifexpression_aaa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 6065, y: -350) ifexpression_baa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 6286, y: -350) ifexpression_caa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 6507, y: -350) ifexpression_daa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 6728, y: -350) ifexpression_eaa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 6949, y: -350) ifexpression_faa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 7170, y: -350) ifexpression_gaa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 7391, y: -350) ifexpression_haa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 7612, y: -350) ifexpression_iaa4c5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        instance(x: 7833, y: -350) if"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c8d5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c8d5b.first\n        y_5390f5 -> mul_2c8d5b.second\n        mul_2c8d5b.result -> less_than_zero_8f1e5a.left\n        0 -> less_than_zero_8f1e5a.right\n        less_than_zero_8f1e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_8b3d8c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5d3b9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -24) equal_8c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5d3b9a.value\n        11 -> modulo_5d3b9a.divisor\n        modulo_5d3b9a.result -> equal_8c7e1b.left\n        0 -> equal_8c7e1b.right\n        equal_8c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 15) is_diff_9a2d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 177, y: 210) tolower_45b2c9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 489, y: 216) equal_3f8a5d root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_45b2c9.input\n        input_ai -> equal_3f8a5d.left\n        tolower_45b2c9.output -> equal_3f8a5d.right\n        equal_3f8a5d.equal -> output_ai\n    }\n\n    \n\n    instance(x: -176, y: 108) is_lower_4e5b3a root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(List) _7dd980\n\n                instance(x: 0, y: 25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4a7c3f -> contains_node.list\n                item_9b1bc3 -> contains_node.item\n                instance(x: 0, y: -25) if_node root.Std_k98ojb.Std.If {}\n                contains_node.contains -> if_node.input\n                func() {\n                    acc_4a7c3f -> _7dd980\n                } -> if_node.then\n                func() {\n                    instance(x: 0, y: -25) add_node root.Std_k98ojb.List.Add {}\n                    item_9b1bc3 -> add_node.item\n                    acc_4a7c3f -> add_node.list\n                    add_node.listWithItem -> _7dd980\n                } -> if_node.else\n            }\n        }\n\n        instance(x: 200, y: -100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(Number) _7dd980\n\n                instance(x: 0, y: 25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4a7c3f -> mul_node.first\n                item_9b1bc3 -> mul_node.second\n                mul_node.result -> _7dd980\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        product_node.done -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -11) difference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a2b3c.left\n        list2_ai -> difference_1a2b3c.right\n\n        instance(x: 405, y: -11) difference_4d5e6f root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_4d5e6f.left\n        list1_ai -> difference_4d5e6f.right\n\n        instance(x: 305, y: 77) concat_7g8h9i root.Std_k98ojb.List.Concat {}\n        difference_1a2b3c.difference -> concat_7g8h9i.left\n        difference_4d5e6f.difference -> concat_7g8h9i.right\n\n        concat_7g8h9i.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -10, y: 30) find_dissimilar_jk root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -140) length_1b3a5f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -140) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 295, y: -140) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -140) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 650, y: -140) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 820, y: -140) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b3a5f.list\n        length_1b3a5f.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b3a5f.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        sub_f133b2.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.right\n        slice_76ecda.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -112) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_4b2d8e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4b2d8e.initialValue\n        list_2c62ab -> reduce_4b2d8e.items\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_9f1a0a\n            in(x: -167, y: 22, name: \"current\") property(Number) current_8d2b1c\n\n            out(x: 1052, y: -34, name: \"sum\") property(Number) sum_9f1a0a\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1a0a -> add_6e8af5.first\n            current_8d2b1c -> add_6e8af5.second\n            add_6e8af5.result -> sum_9f1a0a\n        } -> reduce_4b2d8e.reducer\n        reduce_4b2d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -37, y: 11) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6c5d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e2a89 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -104) lessthanorequal_f5d6c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -244) if_8a2e1f root.Std_k98ojb.Std.If {}\n        instance(x: 204, y: -245) lessthanorequal_6c5d8f_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -384) if_2e2a89_1 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -385) lessthanorequal_f5d6c9_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 402, y: -385) mathexpression_7a2e1f root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 602, y: -385) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 474, y: -245) mathexpression_7a2e1f_1 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 674, y: -245) if_e19a62_1 root.Std_k98ojb.Std.If {}\n        instance(x: 37, y: -524) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 37, y: -664) for_8cb3f6_1 root.Std_k98ojb.Std.For {}\n\n        num_5c0677 -> lessthanorequal_6c5d8f.left\n        2 -> lessthanorequal_6c5d8f.right\n        lessthanorequal_6c5d8f.result -> if_2e2a89.predicate\n        if_2e2a89.then -> continue_9a54bb\n        if_2e2a89.else -> lessthanorequal_f5d6c9.left\n        num_5c0677 -> lessthanorequal_f5d6c9.right\n        lessthanorequal_f5d6c9.result -> if_8a2e1f.predicate\n        if_8a2e1f.then -> continue_9a54bb\n        if_8a2e1f.else -> lessthanorequal_6c5d8f_1.left\n        num_5c0677 -> lessthanorequal_6c5d8f_1.right\n        lessthanorequal_6c5d8f_1.result -> if_2e2a89_1.predicate\n        if_2e2a89_1.then -> continue_9a54bb\n        if_2e2a89_1.else -> lessthanorequal_f5d6c9_1.left\n        num_5c0677 -> lessthanorequal_f5d6c9_1.right\n        lessthanorequal_f5d6c9_1.result -> for_8cb3f6.reset\n        2 -> for_8cb3f6.start\n        num_5c0677 -> mathexpression_7a2e1f.gen_1\n        for_8cb3f6.item -> mathexpression_7a2e1f.gen_0\n        mathexpression_7a2e1f.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> lessthanorequal_6c5d8f_1.left\n        num_5c0677 -> lessthanorequal_6c5d8f_1.right\n        lessthanorequal_6c5d8f_1.result -> if_2e2a89_1.predicate\n        if_2e2a89_1.then -> continue_9a54bb\n        if_2e2a89_1.else -> for_8cb3f6_1.reset\n        2 -> for_8cb3f6_1.start\n        num_5c0677 -> mathexpression_7a2e1f_1.gen_1\n        for_8cb3f6_1.item -> mathexpression_7a2e1f_1.gen_0\n        mathexpression_7a2e1f_1.result -> if_e19a62_1.predicate\n        if_e19a62_1.then -> continue_9a54bb\n        if_e19a62_1.else -> for_8cb3f6_1.next\n        for_8cb3f6_1.done -> output_c457b3\n        true -> output_c457b3\n        execute_b7b391 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -20, y: 11) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -186, y: -247) mul_4d6c2b root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -248) less_than_zero_9f1e4c root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_4d6c2b.first\n        y_5390f5 -> mul_4d6c2b.second\n        mul_4d6c2b.result -> less_than_zero_9f1e4c.left\n        0 -> less_than_zero_9f1e4c.right\n        less_than_zero_9f1e4c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -185, y: 26) opposite_signs_7b1d8c root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_3b2a7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 345, y: -25) equal_1c4e2b root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_3b2a7d.value\n        11 -> modulo_3b2a7d.divisor\n        modulo_3b2a7d.result -> equal_1c4e2b.left\n        0 -> equal_1c4e2b.right\n        equal_1c4e2b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -8, y: 5) is_diff_7a9d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 278, y: 212) tolower_4b5f0a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 603, y: 214) equal_7c2d3e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b5f0a.input\n        input_ai -> equal_7c2d3e.left\n        tolower_4b5f0a.output -> equal_7c2d3e.right\n        equal_7c2d3e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 164) is_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_7a3c2d\n                in(x: -50, y: 50, name: \"item\") property(Number) item_8b4d3e\n\n                out(x: 50, y: 0, name: \"\") property(List) _9c5e4f\n\n                instance(x: 100, y: -25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_7a3c2d -> contains_node.list\n                item_8b4d3e -> contains_node.item\n                instance(x: 100, y: 25) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _a1b2c3\n                        acc_7a3c2d -> _a1b2c3\n                    }\n                    else: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _d4e5f6\n\n                        instance(x: 100, y: 25) add_node root.Std_k98ojb.List.Add {}\n                        acc_7a3c2d -> add_node.list\n                        item_8b4d3e -> add_node.item\n                        add_node.listWithItem -> _d4e5f6\n                    }\n                }\n                contains_node.contains -> if_node.input\n                if_node.value -> _9c5e4f\n            }\n        }\n\n        instance(x: 100, y: -200) reduce_product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_7a3c2d\n                in(x: -50, y: 50, name: \"item\") property(Number) item_8b4d3e\n\n                out(x: 50, y: 0, name: \"\") property(Number) _9c5e4f\n\n                instance(x: 100, y: -25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_7a3c2d -> mul_node.first\n                item_8b4d3e -> mul_node.second\n                mul_node.result -> _9c5e4f\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initialValue\n\n        unique_list_node.value -> reduce_product_node.items\n        1 -> reduce_product_node.initialValue\n\n        reduce_product_node.value -> output_cffcc2\n        continue_45190b -> execute_19300c\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -296, y: -10) difference_1a5b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5b3c.left\n        list2_ai -> difference_1a5b3c.right\n\n        instance(x: 47, y: -10) difference_2a5b3c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_2a5b3c.left\n        list1_ai -> difference_2a5b3c.right\n\n        instance(x: 247, y: -10) concat_1a5b3c root.Std_k98ojb.List.Concat {}\n        difference_1a5b3c.difference -> concat_1a5b3c.left\n        difference_2a5b3c.difference -> concat_1a5b3c.right\n\n        concat_1a5b3c.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 67) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -125) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 163, y: -125) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -125) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 427, y: -125) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 570, y: -125) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 714, y: -125) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_4b8927.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_3f3ee6.end\n        list_48148f -> slice_3f3ee6.list\n        modulo_4e8c54.result -> slice_76ecda.start\n        -1 -> slice_76ecda.end\n        list_48148f -> slice_76ecda.list\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -125) rotate_right_496e5e root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -11) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3d7de6.initialValue\n        list_2c62ab -> reduce_3d7de6.items\n        func() {\n            in(x: -154, y: -12, name: \"accumulated\") property(Number) accumulated_8f9b2a\n            in(x: -140, y: 10, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 675, y: -10, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 89, y: 1) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_8f9b2a -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3d7de6.reducer\n        reduce_3d7de6.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -150, y: 11) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 80, y: -300) lessthanorequal_6d5f1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 275, y: -300) lessthanorequal_4a7e2d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 600, y: -100) ifexpression_8f4c5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 725, y: -300) lessthanorequal_3a6d1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 400, y: -100) ifexpression_1e5c6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 3\"\n        }\n        instance(x: 275, y: -100) ifexpression_6a7d2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % 2 == 0 || num % 3 == 0)\"\n        }\n        instance(x: 400, y: 100) for_5e5c6f root.Std_k98ojb.Std.For {}\n        instance(x: 700, y: -100) ifexpression_2e5d6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0 || num % (i + 2) == 0)\"\n        }\n        instance(x: 400, y: 300) add_1e5c6f root.Std_k98ojb.Math.Add {}\n        instance(x: 700, y: 100) ifexpression_3e5d6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"true\"\n        }\n        instance(x: 400, y: 200) add_2e5c6f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_6d5f1c.left\n        1 -> lessthanorequal_6d5f1c.right\n        lessthanorequal_6d5f1c.result -> ifexpression_8f4c5e.predicate\n        ifexpression_8f4c5e.then -> continue_9a54bb\n        num_5c0677 -> lessthanorequal_4a7e2d.left\n        3 -> lessthanorequal_4a7e2d.right\n        lessthanorequal_4a7e2d.result -> ifexpression_1e5c6f.predicate\n        ifexpression_1e5c6f.then -> ifexpression_3e5d6f.execute\n        num_5c0677 -> lessthanorequal_3a6d1f.left\n        2 -> lessthanorequal_3a6d1f.right\n        lessthanorequal_3a6d1f.result -> ifexpression_6a7d2d.predicate\n        num_5c0677 -> ifexpression_6a7d2d.gen_0\n        2 -> ifexpression_6a7d2d.gen_1\n        3 -> ifexpression_6a7d2d.gen_2\n        ifexpression_6a7d2d.then -> continue_9a54bb\n        num_5c0677 -> for_5e5c6f.items\n        5 -> add_1e5c6f.first\n        6 -> add_1e5c6f.second\n        add_1e5c6f.result -> for_5e5c6f.item\n        for_5e5c6f.index -> add_2e5c6f.first\n        2 -> add_2e5c6f.second\n        add_2e5c6f.result -> ifexpression_2e5d6f.gen_1\n        num_5c0677 -> ifexpression_2e5d6f.gen_0\n        for_5e5c6f.item -> ifexpression_2e5d6f.gen_2\n        ifexpression_2e5d6f.then -> continue_9a54bb\n        ifexpression_3e5d6f.result -> output_c457b3\n        execute_b7b391 -> for_5e5c6f.reset\n        for_5e5c6f.onItem -> ifexpression_2e5d6f.execute\n        for_5e5c6f.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 80, y: -177) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -46, y: -187) mul_3d5b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 102, y: -191) less_than_zero_6f1e4a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_3d5b9c.first\n        y_5390f5 -> mul_3d5b9c.second\n        mul_3d5b9c.result -> less_than_zero_6f1e4a.left\n        0 -> less_than_zero_6f1e4a.right\n        less_than_zero_6f1e4a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -287, y: 5) opposite_signs_0d2b6c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_6b3a8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 327, y: -25) equal_4c2e1a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_6b3a8d.value\n        11 -> modulo_6b3a8d.divisor\n        modulo_6b3a8d.result -> equal_4c2e1a.left\n        0 -> equal_4c2e1a.right\n        equal_4c2e1a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -5, y: 7) is_diff_8b9d9c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 279, y: 212) tolower_4a5b0f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: 216) equal_3c7d1e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a5b0f.input\n        input_ai -> equal_3c7d1e.left\n        tolower_4a5b0f.output -> equal_3c7d1e.right\n        equal_3c7d1e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -280, y: 136) is_lower_72ef29 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n            out(x: 50, y: 0, name: \"bool\") property(Bool) bool_8d2e5b\n\n            instance(x: 0, y: -50) index_node root.Std_k98ojb.List.IndexOf {}\n            item_7a3f4c -> index_node.item\n            unique_list_node.items -> index_node.list\n            instance(x: 0, y: 50) equal_node root.Std_k98ojb.Logic.Equal {}\n            index_node.index -> equal_node.left\n            unique_list_node.index -> equal_node.right\n            equal_node.result -> bool_8d2e5b\n        } -> unique_list_node.predicate\n\n        instance(x: 100, y: -100) reduce_node root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -50, y: 0, name: \"acc\") property(Number) acc_7a3f4c\n            in(x: 50, y: 0, name: \"item\") property(Number) item_8d2e5b\n            out(x: 100, y: 0, name: \"\") property(Number) _9e6f6c\n\n            instance(x: 0, y: -50) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_7a3f4c -> mul_node.first\n            item_8d2e5b -> mul_node.second\n            mul_node.result -> _9e6f6c\n        } -> reduce_node.reducer\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        unique_list_node.result -> reduce_node.items\n        1 -> reduce_node.initial_value\n        reduce_node.accumulated_value -> output_cffcc2\n        reduce_node.done -> continue_45190b\n    }\n\n    instance(x: -300, y: -300) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -196, y: -105) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 236, y: -104) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 356, y: -104) concat root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -73, y: 56) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -143) length_5b2d7a root.Std_k98ojb.List.Length {}\n        instance(x: 169, y: -145) modulo_7c5f6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 304, y: -146) sub_2d9a51 root.Std_k98ojb.Math.Sub {}\n        instance(x: 455, y: -147) slice_2e4c5f root.Std_k98ojb.List.Slice {}\n        instance(x: 453, y: -36) slice_0d7a52 root.Std_k98ojb.List.Slice {}\n        instance(x: 607, y: -148) concat_6e1c8f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_5b2d7a.list\n        length_5b2d7a.length -> modulo_7c5f6e.first\n        n_68068c -> modulo_7c5f6e.divisor\n        modulo_7c5f6e.result -> sub_2d9a51.second\n        length_5b2d7a.length -> sub_2d9a51.first\n        sub_2d9a51.result -> slice_2e4c5f.start\n        0 -> slice_2e4c5f.end\n        list_48148f -> slice_2e4c5f.list\n        modulo_7c5f6e.result -> slice_0d7a52.start\n        -1 -> slice_0d7a52.end\n        list_48148f -> slice_0d7a52.list\n        slice_2e4c5f.slice -> concat_6e1c8f.right\n        slice_0d7a52.slice -> concat_6e1c8f.left\n        concat_6e1c8f.result -> output_823209\n    }\n\n    \n\n    instance(x: -40, y: -128) rotate_right_7b8f1a root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -10) reduce_8d2b0e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_8d2b0e.initialValue\n        list_2c62ab -> reduce_8d2b0e.items\n        func() {\n            in(x: -175, y: -43, name: \"accumulated\") property(Number) accumulated_9a2f8e\n            in(x: -167, y: 21, name: \"current\") property(Number) current_0d2c9b\n\n            out(x: 1059, y: -36, name: \"sum\") property(Number) sum_4a3f8e\n\n            instance(x: 85, y: 2) add_7f2d8a root.Std_k98ojb.Math.Add {}\n            accumulated_9a2f8e -> add_7f2d8a.first\n            current_0d2c9b -> add_7f2d8a.second\n            add_7f2d8a.result -> sum_4a3f8e\n        } -> reduce_8d2b0e.reducer\n        reduce_8d2b0e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -195, y: 16) _sum_7c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 89, y: -145) lessthanorequal_f6d7e7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 321, y: -100) if_1c7a8f root.Std_k98ojb.Std.If {}\n        instance(x: 548, y: -168) lessthanorequal_5d9e5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 230, y: -373) if_ea6f99 root.Std_k98ojb.Std.If {}\n        instance(x: 416, y: -475) mathexpression_9d2c7e root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 330, y: -594) if_5f1a83 root.Std_k98ojb.Std.If {}\n        instance(x: 627, y: -594) mathexpression_7d3c8e root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 115, y: -678) add_8f8a72 root.Std_k98ojb.Math.Add {}\n        instance(x: 439, y: -678) add_b1d5e1 root.Std_k98ojb.Math.Add {}\n        instance(x: 704, y: -678) add_2a6f8c root.Std_k98ojb.Math.Add {}\n        instance(x: 354, y: -795) for_6d1e9b root.Std_k98ojb.Std.For {}\n\n        num_5c0677 -> lessthanorequal_f6d7e7.left\n        2 -> lessthanorequal_f6d7e7.right\n        lessthanorequal_f6d7e7.result -> if_1c7a8f.predicate\n        execute_b7b391 -> if_1c7a8f.execute\n        num_5c0677 -> lessthanorequal_5d9e5c.left\n        1 -> lessthanorequal_5d9e5c.right\n        lessthanorequal_5d9e5c.result -> if_ea6f99.predicate\n        if_1c7a8f.then -> if_ea6f99.execute\n        num_5c0677 -> mathexpression_9d2c7e.gen_0\n        for_6d1e9b.index -> mathexpression_9d2c7e.gen_1\n        mathexpression_9d2c7e.result -> if_5f1a83.predicate\n        if_ea6f99.then -> if_5f1a83.execute\n        num_5c0677 -> mathexpression_7d3c8e.gen_0\n        for_6d1e9b.index -> add_b1d5e1.first\n        2 -> add_b1d5e1.second\n        add_b1d5e1.result -> mathexpression_7d3c8e.gen_1\n        mathexpression_7d3c8e.result -> if_5f1a83.predicate\n        if_ea6f99.else -> for_6d1e9b.reset\n        2 -> add_8f8a72.first\n        1 -> add_8f8a72.second\n        add_8f8a72.result -> for_6d1e9b.items\n        if_5f1a83.then -> continue_9a54bb\n        if_5f1a83.else -> add_2a6f8c.first\n        for_6d1e9b.index -> add_2a6f8c.second\n        add_2a6f8c.result -> for_6d1e9b.next\n        for_6d1e9b.done -> continue_9a54bb\n        if_ea6f99.else -> output_c457b3\n        true -> output_c457b3\n    }\n\n    \n\n    instance(x: -20, y: 8) num_prime_8c1d7e root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c8d5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c8d5b.first\n        y_5390f5 -> mul_2c8d5b.second\n        mul_2c8d5b.result -> less_than_zero_8f1e5a.left\n        0 -> less_than_zero_8f1e5a.right\n        less_than_zero_8f1e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_8b3d8c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5d3b9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -24) equal_8c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5d3b9a.value\n        11 -> modulo_5d3b9a.divisor\n        modulo_5d3b9a.result -> equal_8c7e1b.left\n        0 -> equal_8c7e1b.right\n        equal_8c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 15) is_diff_9a2d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 177, y: 210) tolower_45b2c9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 489, y: 216) equal_3f8a5d root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_45b2c9.input\n        input_ai -> equal_3f8a5d.left\n        tolower_45b2c9.output -> equal_3f8a5d.right\n        equal_3f8a5d.equal -> output_ai\n    }\n\n    \n\n    instance(x: -176, y: 108) is_lower_4e5b3a root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(List) _7dd980\n\n                instance(x: 0, y: 25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4a7c3f -> contains_node.list\n                item_9b1bc3 -> contains_node.item\n                instance(x: 0, y: -25) if_node root.Std_k98ojb.Std.If {}\n                contains_node.contains -> if_node.input\n                func() {\n                    acc_4a7c3f -> _7dd980\n                } -> if_node.then\n                func() {\n                    instance(x: 0, y: -25) add_node root.Std_k98ojb.List.Add {}\n                    item_9b1bc3 -> add_node.item\n                    acc_4a7c3f -> add_node.list\n                    add_node.listWithItem -> _7dd980\n                } -> if_node.else\n            }\n        }\n\n        instance(x: 200, y: -100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4a7c3f\n                in(x: -50, y: 50, name: \"item\") property(Number) item_9b1bc3\n\n                out(x: 50, y: 0, name: \"\") property(Number) _7dd980\n\n                instance(x: 0, y: 25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4a7c3f -> mul_node.first\n                item_9b1bc3 -> mul_node.second\n                mul_node.result -> _7dd980\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        product_node.done -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -11) difference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a2b3c.left\n        list2_ai -> difference_1a2b3c.right\n\n        instance(x: 405, y: -11) difference_4d5e6f root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_4d5e6f.left\n        list1_ai -> difference_4d5e6f.right\n\n        instance(x: 305, y: 77) concat_7g8h9i root.Std_k98ojb.List.Concat {}\n        difference_1a2b3c.difference -> concat_7g8h9i.left\n        difference_4d5e6f.difference -> concat_7g8h9i.right\n\n        concat_7g8h9i.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -10, y: 30) find_dissimilar_jk root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -140) length_1b3a5f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -140) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 295, y: -140) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -140) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 650, y: -140) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 820, y: -140) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b3a5f.list\n        length_1b3a5f.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b3a5f.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        sub_f133b2.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.right\n        slice_76ecda.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -112) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_4b2d8e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4b2d8e.initialValue\n        list_2c62ab -> reduce_4b2d8e.items\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_9f1a0a\n            in(x: -167, y: 22, name: \"current\") property(Number) current_8d2b1c\n\n            out(x: 1052, y: -34, name: \"sum\") property(Number) sum_9f1a0a\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1a0a -> add_6e8af5.first\n            current_8d2b1c -> add_6e8af5.second\n            add_6e8af5.result -> sum_9f1a0a\n        } -> reduce_4b2d8e.reducer\n        reduce_4b2d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -37, y: 11) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6c5d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e2a89 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -104) lessthanorequal_f5d6c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -244) if_8a2e1f root.Std_k98ojb.Std.If {}\n        instance(x: 204, y: -245) lessthanorequal_6c5d8f_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -384) if_2e2a89_1 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -385) lessthanorequal_f5d6c9_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 402, y: -385) mathexpression_7a2e1f root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 602, y: -385) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 474, y: -245) mathexpression_7a2e1f_1 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 674, y: -245) if_e19a62_1 root.Std_k98ojb.Std.If {}\n        instance(x: 37, y: -524) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 37, y: -664) for_8cb3f6_1 root.Std_k98ojb.Std.For {}\n\n        num_5c0677 -> lessthanorequal_6c5d8f.left\n        2 -> lessthanorequal_6c5d8f.right\n        lessthanorequal_6c5d8f.result -> if_2e2a89.predicate\n        if_2e2a89.then -> continue_9a54bb\n        if_2e2a89.else -> lessthanorequal_f5d6c9.left\n        num_5c0677 -> lessthanorequal_f5d6c9.right\n        lessthanorequal_f5d6c9.result -> if_8a2e1f.predicate\n        if_8a2e1f.then -> continue_9a54bb\n        if_8a2e1f.else -> lessthanorequal_6c5d8f_1.left\n        num_5c0677 -> lessthanorequal_6c5d8f_1.right\n        lessthanorequal_6c5d8f_1.result -> if_2e2a89_1.predicate\n        if_2e2a89_1.then -> continue_9a54bb\n        if_2e2a89_1.else -> lessthanorequal_f5d6c9_1.left\n        num_5c0677 -> lessthanorequal_f5d6c9_1.right\n        lessthanorequal_f5d6c9_1.result -> for_8cb3f6.reset\n        2 -> for_8cb3f6.start\n        num_5c0677 -> mathexpression_7a2e1f.gen_1\n        for_8cb3f6.item -> mathexpression_7a2e1f.gen_0\n        mathexpression_7a2e1f.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> lessthanorequal_6c5d8f_1.left\n        num_5c0677 -> lessthanorequal_6c5d8f_1.right\n        lessthanorequal_6c5d8f_1.result -> if_2e2a89_1.predicate\n        if_2e2a89_1.then -> continue_9a54bb\n        if_2e2a89_1.else -> for_8cb3f6_1.reset\n        2 -> for_8cb3f6_1.start\n        num_5c0677 -> mathexpression_7a2e1f_1.gen_1\n        for_8cb3f6_1.item -> mathexpression_7a2e1f_1.gen_0\n        mathexpression_7a2e1f_1.result -> if_e19a62_1.predicate\n        if_e19a62_1.then -> continue_9a54bb\n        if_e19a62_1.else -> for_8cb3f6_1.next\n        for_8cb3f6_1.done -> output_c457b3\n        true -> output_c457b3\n        execute_b7b391 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -20, y: 11) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -186, y: -247) mul_4d6c2b root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -248) less_than_zero_9f1e4c root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_4d6c2b.first\n        y_5390f5 -> mul_4d6c2b.second\n        mul_4d6c2b.result -> less_than_zero_9f1e4c.left\n        0 -> less_than_zero_9f1e4c.right\n        less_than_zero_9f1e4c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -185, y: 26) opposite_signs_7b1d8c root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_3b2a7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 345, y: -25) equal_1c4e2b root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_3b2a7d.value\n        11 -> modulo_3b2a7d.divisor\n        modulo_3b2a7d.result -> equal_1c4e2b.left\n        0 -> equal_1c4e2b.right\n        equal_1c4e2b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -8, y: 5) is_diff_7a9d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 285) replace_char_407e1b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 278, y: 212) tolower_4b5f0a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 603, y: 214) equal_7c2d3e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b5f0a.input\n        input_ai -> equal_7c2d3e.left\n        tolower_4b5f0a.output -> equal_7c2d3e.right\n        equal_7c2d3e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 164) is_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_7a3c2d\n                in(x: -50, y: 50, name: \"item\") property(Number) item_8b4d3e\n\n                out(x: 50, y: 0, name: \"\") property(List) _9c5e4f\n\n                instance(x: 100, y: -25) contains_node root.Std_k98ojb.List.Contains {}\n                acc_7a3c2d -> contains_node.list\n                item_8b4d3e -> contains_node.item\n                instance(x: 100, y: 25) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _a1b2c3\n                        acc_7a3c2d -> _a1b2c3\n                    }\n                    else: func() {\n                        out(x: 50, y: 0, name: \"\") property(List) _d4e5f6\n\n                        instance(x: 100, y: 25) add_node root.Std_k98ojb.List.Add {}\n                        acc_7a3c2d -> add_node.list\n                        item_8b4d3e -> add_node.item\n                        add_node.listWithItem -> _d4e5f6\n                    }\n                }\n                contains_node.contains -> if_node.input\n                if_node.value -> _9c5e4f\n            }\n        }\n\n        instance(x: 100, y: -200) reduce_product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_7a3c2d\n                in(x: -50, y: 50, name: \"item\") property(Number) item_8b4d3e\n\n                out(x: 50, y: 0, name: \"\") property(Number) _9c5e4f\n\n                instance(x: 100, y: -25) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_7a3c2d -> mul_node.first\n                item_8b4d3e -> mul_node.second\n                mul_node.result -> _9c5e4f\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initialValue\n\n        unique_list_node.value -> reduce_product_node.items\n        1 -> reduce_product_node.initialValue\n\n        reduce_product_node.value -> output_cffcc2\n        continue_45190b -> execute_19300c\n    }\n\n    instance(x: -757, y: -167) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -296, y: -10) difference_1a5b3c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5b3c.left\n        list2_ai -> difference_1a5b3c.right\n\n        instance(x: 47, y: -10) difference_2a5b3c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_2a5b3c.left\n        list1_ai -> difference_2a5b3c.right\n\n        instance(x: 247, y: -10) concat_1a5b3c root.Std_k98ojb.List.Concat {}\n        difference_1a5b3c.difference -> concat_1a5b3c.left\n        difference_2a5b3c.difference -> concat_1a5b3c.right\n\n        concat_1a5b3c.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 67) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -125) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 163, y: -125) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 290, y: -125) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 427, y: -125) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 570, y: -125) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 714, y: -125) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_4b8927.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_3f3ee6.end\n        list_48148f -> slice_3f3ee6.list\n        modulo_4e8c54.result -> slice_76ecda.start\n        -1 -> slice_76ecda.end\n        list_48148f -> slice_76ecda.list\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -125) rotate_right_496e5e root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -11) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3d7de6.initialValue\n        list_2c62ab -> reduce_3d7de6.items\n        func() {\n            in(x: -154, y: -12, name: \"accumulated\") property(Number) accumulated_8f9b2a\n            in(x: -140, y: 10, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 675, y: -10, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 89, y: 1) add_8974a2 root.Std_k98ojb.Math.Add {}\n            accumulated_8f9b2a -> add_8974a2.first\n            current_3f11cd -> add_8974a2.second\n            add_8974a2.result -> sum_72dd2a\n        } -> reduce_3d7de6.reducer\n        reduce_3d7de6.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -150, y: 11) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 80, y: -300) lessthanorequal_6d5f1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 275, y: -300) lessthanorequal_4a7e2d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 600, y: -100) ifexpression_8f4c5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 725, y: -300) lessthanorequal_3a6d1f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 400, y: -100) ifexpression_1e5c6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 3\"\n        }\n        instance(x: 275, y: -100) ifexpression_6a7d2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % 2 == 0 || num % 3 == 0)\"\n        }\n        instance(x: 400, y: 100) for_5e5c6f root.Std_k98ojb.Std.For {}\n        instance(x: 700, y: -100) ifexpression_2e5d6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"(num % i == 0 || num % (i + 2) == 0)\"\n        }\n        instance(x: 400, y: 300) add_1e5c6f root.Std_k98ojb.Math.Add {}\n        instance(x: 700, y: 100) ifexpression_3e5d6f root.Std_k98ojb.Std.IfExpression {\n            expression: \"true\"\n        }\n        instance(x: 400, y: 200) add_2e5c6f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_6d5f1c.left\n        1 -> lessthanorequal_6d5f1c.right\n        lessthanorequal_6d5f1c.result -> ifexpression_8f4c5e.predicate\n        ifexpression_8f4c5e.then -> continue_9a54bb\n        num_5c0677 -> lessthanorequal_4a7e2d.left\n        3 -> lessthanorequal_4a7e2d.right\n        lessthanorequal_4a7e2d.result -> ifexpression_1e5c6f.predicate\n        ifexpression_1e5c6f.then -> ifexpression_3e5d6f.execute\n        num_5c0677 -> lessthanorequal_3a6d1f.left\n        2 -> lessthanorequal_3a6d1f.right\n        lessthanorequal_3a6d1f.result -> ifexpression_6a7d2d.predicate\n        num_5c0677 -> ifexpression_6a7d2d.gen_0\n        2 -> ifexpression_6a7d2d.gen_1\n        3 -> ifexpression_6a7d2d.gen_2\n        ifexpression_6a7d2d.then -> continue_9a54bb\n        num_5c0677 -> for_5e5c6f.items\n        5 -> add_1e5c6f.first\n        6 -> add_1e5c6f.second\n        add_1e5c6f.result -> for_5e5c6f.item\n        for_5e5c6f.index -> add_2e5c6f.first\n        2 -> add_2e5c6f.second\n        add_2e5c6f.result -> ifexpression_2e5d6f.gen_1\n        num_5c0677 -> ifexpression_2e5d6f.gen_0\n        for_5e5c6f.item -> ifexpression_2e5d6f.gen_2\n        ifexpression_2e5d6f.then -> continue_9a54bb\n        ifexpression_3e5d6f.result -> output_c457b3\n        execute_b7b391 -> for_5e5c6f.reset\n        for_5e5c6f.onItem -> ifexpression_2e5d6f.execute\n        for_5e5c6f.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 80, y: -177) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -46, y: -187) mul_3d5b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 102, y: -191) less_than_zero_6f1e4a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_3d5b9c.first\n        y_5390f5 -> mul_3d5b9c.second\n        mul_3d5b9c.result -> less_than_zero_6f1e4a.left\n        0 -> less_than_zero_6f1e4a.right\n        less_than_zero_6f1e4a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -287, y: 5) opposite_signs_0d2b6c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -25) modulo_6b3a8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 327, y: -25) equal_4c2e1a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_6b3a8d.value\n        11 -> modulo_6b3a8d.divisor\n        modulo_6b3a8d.result -> equal_4c2e1a.left\n        0 -> equal_4c2e1a.right\n        equal_4c2e1a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -5, y: 7) is_diff_8b9d9c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 1) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 279, y: 212) tolower_4a5b0f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 555, y: 216) equal_3c7d1e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a5b0f.input\n        input_ai -> equal_3c7d1e.left\n        tolower_4a5b0f.output -> equal_3c7d1e.right\n        equal_3c7d1e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -280, y: 136) is_lower_72ef29 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -50, y: 0, name: \"item\") property(Number) item_7a3f4c\n            out(x: 50, y: 0, name: \"bool\") property(Bool) bool_8d2e5b\n\n            instance(x: 0, y: -50) index_node root.Std_k98ojb.List.IndexOf {}\n            item_7a3f4c -> index_node.item\n            unique_list_node.items -> index_node.list\n            instance(x: 0, y: 50) equal_node root.Std_k98ojb.Logic.Equal {}\n            index_node.index -> equal_node.left\n            unique_list_node.index -> equal_node.right\n            equal_node.result -> bool_8d2e5b\n        } -> unique_list_node.predicate\n\n        instance(x: 100, y: -100) reduce_node root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -50, y: 0, name: \"acc\") property(Number) acc_7a3f4c\n            in(x: 50, y: 0, name: \"item\") property(Number) item_8d2e5b\n            out(x: 100, y: 0, name: \"\") property(Number) _9e6f6c\n\n            instance(x: 0, y: -50) mul_node root.Std_k98ojb.Math.Mul {}\n            acc_7a3f4c -> mul_node.first\n            item_8d2e5b -> mul_node.second\n            mul_node.result -> _9e6f6c\n        } -> reduce_node.reducer\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        unique_list_node.result -> reduce_node.items\n        1 -> reduce_node.initial_value\n        reduce_node.accumulated_value -> output_cffcc2\n        reduce_node.done -> continue_45190b\n    }\n\n    instance(x: -300, y: -300) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -196, y: -105) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 236, y: -104) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 356, y: -104) concat root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -73, y: 56) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -143) length_5b2d7a root.Std_k98ojb.List.Length {}\n        instance(x: 169, y: -145) modulo_7c5f6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 304, y: -146) sub_2d9a51 root.Std_k98ojb.Math.Sub {}\n        instance(x: 455, y: -147) slice_2e4c5f root.Std_k98ojb.List.Slice {}\n        instance(x: 453, y: -36) slice_0d7a52 root.Std_k98ojb.List.Slice {}\n        instance(x: 607, y: -148) concat_6e1c8f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_5b2d7a.list\n        length_5b2d7a.length -> modulo_7c5f6e.first\n        n_68068c -> modulo_7c5f6e.divisor\n        modulo_7c5f6e.result -> sub_2d9a51.second\n        length_5b2d7a.length -> sub_2d9a51.first\n        sub_2d9a51.result -> slice_2e4c5f.start\n        0 -> slice_2e4c5f.end\n        list_48148f -> slice_2e4c5f.list\n        modulo_7c5f6e.result -> slice_0d7a52.start\n        -1 -> slice_0d7a52.end\n        list_48148f -> slice_0d7a52.list\n        slice_2e4c5f.slice -> concat_6e1c8f.right\n        slice_0d7a52.slice -> concat_6e1c8f.left\n        concat_6e1c8f.result -> output_823209\n    }\n\n    \n\n    instance(x: -40, y: -128) rotate_right_7b8f1a root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -10) reduce_8d2b0e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_8d2b0e.initialValue\n        list_2c62ab -> reduce_8d2b0e.items\n        func() {\n            in(x: -175, y: -43, name: \"accumulated\") property(Number) accumulated_9a2f8e\n            in(x: -167, y: 21, name: \"current\") property(Number) current_0d2c9b\n\n            out(x: 1059, y: -36, name: \"sum\") property(Number) sum_4a3f8e\n\n            instance(x: 85, y: 2) add_7f2d8a root.Std_k98ojb.Math.Add {}\n            accumulated_9a2f8e -> add_7f2d8a.first\n            current_0d2c9b -> add_7f2d8a.second\n            add_7f2d8a.result -> sum_4a3f8e\n        } -> reduce_8d2b0e.reducer\n        reduce_8d2b0e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -195, y: 16) _sum_7c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 89, y: -145) lessthanorequal_f6d7e7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 321, y: -100) if_1c7a8f root.Std_k98ojb.Std.If {}\n        instance(x: 548, y: -168) lessthanorequal_5d9e5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 230, y: -373) if_ea6f99 root.Std_k98ojb.Std.If {}\n        instance(x: 416, y: -475) mathexpression_9d2c7e root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 330, y: -594) if_5f1a83 root.Std_k98ojb.Std.If {}\n        instance(x: 627, y: -594) mathexpression_7d3c8e root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 115, y: -678) add_8f8a72 root.Std_k98ojb.Math.Add {}\n        instance(x: 439, y: -678) add_b1d5e1 root.Std_k98ojb.Math.Add {}\n        instance(x: 704, y: -678) add_2a6f8c root.Std_k98ojb.Math.Add {}\n        instance(x: 354, y: -795) for_6d1e9b root.Std_k98ojb.Std.For {}\n\n        num_5c0677 -> lessthanorequal_f6d7e7.left\n        2 -> lessthanorequal_f6d7e7.right\n        lessthanorequal_f6d7e7.result -> if_1c7a8f.predicate\n        execute_b7b391 -> if_1c7a8f.execute\n        num_5c0677 -> lessthanorequal_5d9e5c.left\n        1 -> lessthanorequal_5d9e5c.right\n        lessthanorequal_5d9e5c.result -> if_ea6f99.predicate\n        if_1c7a8f.then -> if_ea6f99.execute\n        num_5c0677 -> mathexpression_9d2c7e.gen_0\n        for_6d1e9b.index -> mathexpression_9d2c7e.gen_1\n        mathexpression_9d2c7e.result -> if_5f1a83.predicate\n        if_ea6f99.then -> if_5f1a83.execute\n        num_5c0677 -> mathexpression_7d3c8e.gen_0\n        for_6d1e9b.index -> add_b1d5e1.first\n        2 -> add_b1d5e1.second\n        add_b1d5e1.result -> mathexpression_7d3c8e.gen_1\n        mathexpression_7d3c8e.result -> if_5f1a83.predicate\n        if_ea6f99.else -> for_6d1e9b.reset\n        2 -> add_8f8a72.first\n        1 -> add_8f8a72.second\n        add_8f8a72.result -> for_6d1e9b.items\n        if_5f1a83.then -> continue_9a54bb\n        if_5f1a83.else -> add_2a6f8c.first\n        for_6d1e9b.index -> add_2a6f8c.second\n        add_2a6f8c.result -> for_6d1e9b.next\n        for_6d1e9b.done -> continue_9a54bb\n        if_ea6f99.else -> output_c457b3\n        true -> output_c457b3\n    }\n\n    \n\n    instance(x: -20, y: 8) num_prime_8c1d7e root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c5b3d root.Std_k98ojb.Math.Mul {}\n        instance(x: 105, y: -219) less_than_zero_8f1e5a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c5b3d.first\n        y_5390f5 -> mul_2c5b3d.second\n        mul_2c5b3d.result -> less_than_zero_8f1e5a.left\n        0 -> less_than_zero_8f1e5a.right\n        less_than_zero_8f1e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_4d6b3c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5b2d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -24) equal_3c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5b2d1a.value\n        11 -> modulo_5b2d1a.divisor\n        modulo_5b2d1a.result -> equal_3c7e1b.left\n        0 -> equal_3c7e1b.right\n        equal_3c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 59) is_diff_15f9e9 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 210) tolower_4b1c7a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 475, y: 210) equal_3f6d8e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b1c7a.input\n        input_ai -> equal_3f6d8e.left\n        tolower_4b1c7a.output -> equal_3f6d8e.right\n        equal_3f6d8e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -290, y: 150) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(List) _e4f1b9\n\n                instance(x: 0, y: 0) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4f6a7c -> contains_node.list\n                item_3b2d89 -> contains_node.item\n                instance(x: 50, y: 0) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _e4f1b9\n                        acc_4f6a7c -> _e4f1b9\n                    }\n                    else: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _e4f1b9\n                        instance(x: 50, y: 0) add_node root.Std_k98ojb.List.Add {}\n                        acc_4f6a7c -> add_node.list\n                        item_3b2d89 -> add_node.item\n                        add_node.listWithItem -> _e4f1b9\n                    }\n                }\n                contains_node.contains -> if_node.input\n            }\n        }\n\n        instance(x: 0, y: 50) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(Number) _e4f1b9\n\n                instance(x: 0, y: 0) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4f6a7c -> mul_node.first\n                item_3b2d89 -> mul_node.second\n                mul_node.result -> _e4f1b9\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.result -> product_node.items\n        1 -> product_node.initial\n\n        product_node.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -114) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 136) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 37) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 37) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 45, y: -120) length_1b3a5f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -120) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -120) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -120) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 590, y: -120) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 740, y: -120) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b3a5f.list\n        length_1b3a5f.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b3a5f.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        modulo_4e8c54.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_76ecda.slice -> concat_0234d2.left\n        slice_3f3ee6.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -157, y: -122) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -12) reduce_4d2b3e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4d2b3e.initialValue\n        list_2c62ab -> reduce_4d2b3e.items\n        func() {\n            in(x: -175, y: -100, name: \"accumulated\") property(Number) accumulated_8f9a1b\n            in(x: -167, y: 25, name: \"current\") property(Number) current_3d4c9e\n\n            out(x: 1072, y: -93, name: \"sum\") property(Number) sum_8f9a1b\n\n            instance(x: 74, y: 2) add_658b3c root.Std_k98ojb.Math.Add {}\n            accumulated_8f9a1b -> add_658b3c.first\n            current_3d4c9e -> add_658b3c.second\n            add_658b3c.result -> sum_8f9a1b\n        } -> reduce_4d2b3e.reducer\n        reduce_4d2b3e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -272, y: 115) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6d6c5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e1a8c root.Std_k98ojb.Std.If {}\n        instance(x: 144, y: -104) lessthanorequal_6d6c5f_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 327, y: -104) if_2e1a8c_1 root.Std_k98ojb.Std.If {}\n        instance(x: 534, y: -104) lessthanorequal_6d6c5f_2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 741, y: -104) if_2e1a8c_2 root.Std_k98ojb.Std.If {}\n        instance(x: 948, y: -104) lessthanorequal_6d6c5f_3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1155, y: -104) if_2e1a8c_3 root.Std_k98ojb.Std.If {}\n        instance(x: 1362, y: -104) lessthanorequal_6d6c5f_4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1569, y: -104) if_2e1a8c_4 root.Std_k98ojb.Std.If {}\n        instance(x: 1776, y: -104) lessthanorequal_6d6c5f_5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1983, y: -104) if_2e1a8c_5 root.Std_k98ojb.Std.If {}\n        instance(x: 2190, y: -104) lessthanorequal_6d6c5f_6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2397, y: -104) if_2e1a8c_6 root.Std_k98ojb.Std.If {}\n        instance(x: 2604, y: -104) lessthanorequal_6d6c5f_7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2811, y: -104) if_2e1a8c_7 root.Std_k98ojb.Std.If {}\n        instance(x: 3018, y: -104) lessthanorequal_6d6c5f_8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3225, y: -104) if_2e1a8c_8 root.Std_k98ojb.Std.If {}\n        instance(x: 3432, y: -104) lessthanorequal_6d6c5f_9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3639, y: -104) if_2e1a8c_9 root.Std_k98ojb.Std.If {}\n        instance(x: 3846, y: -104) lessthanorequal_6d6c5f_10 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4053, y: -104) if_2e1a8c_10 root.Std_k98ojb.Std.If {}\n        instance(x: 4260, y: -104) lessthanorequal_6d6c5f_11 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4467, y: -104) if_2e1a8c_11 root.Std_k98ojb.Std.If {}\n        instance(x: 4674, y: -104) lessthanorequal_6d6c5f_12 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4881, y: -104) if_2e1a8c_12 root.Std_k98ojb.Std.If {}\n        instance(x: 5088, y: -104) lessthanorequal_6d6c5f_13 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5295, y: -104) if_2e1a8c_13 root.Std_k98ojb.Std.If {}\n        instance(x: 5502, y: -104) lessthanorequal_6d6c5f_14 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5709, y: -104) if_2e1a8c_14 root.Std_k98ojb.Std.If {}\n        instance(x: 5916, y: -104) lessthanorequal_6d6c5f_15 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6123, y: -104) if_2e1a8c_15 root.Std_k98ojb.Std.If {}\n        instance(x: 6330, y: -104) lessthanorequal_6d6c5f_16 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6537, y: -104) if_2e1a8c_16 root.Std_k98ojb.Std.If {}\n        instance(x: 6744, y: -104) lessthanorequal_6d6c5f_17 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6951, y: -104) if_2e1a8c_17 root.Std_k98ojb.Std.If {}\n        instance(x: 7158, y: -104) lessthanorequal_6d6c5f_18 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7365, y: -104) if_2e1a8c_18 root.Std_k98ojb.Std.If {}\n        instance(x: 7572, y: -104) lessthanorequal_6d6c5f_19 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7779, y: -104) if_2e1a8c_19 root.Std_k98ojb.Std.If {}\n        instance(x: 7986, y: -104) lessthanorequal_6d6c5f_20 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8193, y: -104) if_2e1a8c_20 root.Std_k98ojb.Std.If {}\n        instance(x: 8376, y: -104) lessthanorequal_6d6c5f_21 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8573, y: -104) if_2e1a8c_21 root.Std_k98ojb.Std.If {}\n        instance(x: 8770, y: -104) lessthanorequal_6d6c5f_22 root.Std_k98ojb.Math.L"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -468, y: -177) mul_4d3c5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 207, y: -198) lessThanZero_c4e4f1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_4d3c5b.first\n        y_5390f5 -> mul_4d3c5b.second\n        mul_4d3c5b.result -> lessThanZero_c4e4f1.left\n        0 -> lessThanZero_c4e4f1.right\n        lessThanZero_c4e4f1.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -276, y: 58) opposite_signs_eb1c7d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -16) modulo_5b3a0d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -15) equal_c7e5b8 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b3a0d.value\n        11 -> modulo_5b3a0d.divisor\n        modulo_5b3a0d.result -> equal_c7e5b8.left\n        0 -> equal_c7e5b8.right\n        equal_c7e5b8.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -19, y: -4) is_diff_4c7d8a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 192) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 300, y: 200) tolower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 500, y: 200) equal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_node.input\n        input_ai -> equal_node.left\n        tolower_node.output -> equal_node.right\n        equal_node.equal -> output_ai\n    }\n\n    \n    instance(x: -150, y: 200) is_lower_instance root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -428, y: 116) flatten_4f6c2a root.Std_k98ojb.List.Flatten {}\n        instance(x: -507, y: 32) filter_unique_2d2b3e root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -105, y: 46, name: \"item\") property(Number) item_3c3a3f\n            out(x: 274, y: 47, name: \"bool\") property(Bool) bool_9e8b3d\n\n            instance(x: -105, y: 167) contains_3f2d3e root.Std_k98ojb.List.Contains {}\n            item_3c3a3f -> contains_3f2d3e.item\n            filter_unique_2d2b3e.context -> contains_3f2d3e.list\n            instance(x: 107, y: 46) not_85494e root.Std_k98ojb.Logic.Not {}\n            contains_3f2d3e.contains -> not_85494e.value\n            not_85494e.result -> bool_9e8b3d\n        } -> filter_unique_2d2b3e.handler\n        instance(x: 107, y: -167) reduce_product_ea3f2c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -54, y: 47, name: \"acc\") property(Number) acc_3d3e3f\n            in(x: 106, y: 47, name: \"item\") property(Number) item_9e8b3d\n\n            out(x: 274, y: 47, name: \"\") property(Number) _9e8b3d\n\n            instance(x: -54, y: 167) mul_a3f2c root.Std_k98ojb.Math.Mul {}\n            acc_3d3e3f -> mul_a3f2c.first\n            item_9e8b3d -> mul_a3f2c.second\n            mul_a3f2c.result -> _9e8b3d\n        } -> reduce_product_ea3f2c.reducer\n        1 -> reduce_product_ea3f2c.initial_value\n\n        execute_19300c -> flatten_4f6c2a.trigger\n        list_5fda54 -> flatten_4f6c2a.items\n        flatten_4f6c2a.flattened -> filter_unique_2d2b3e.items\n        filter_unique_2d2b3e.result -> reduce_product_ea3f2c.items\n        reduce_product_ea3f2c.output_list -> output_cffcc2\n        reduce_product_ea3f2c.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 107, y: -67) unique_product_496e5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -339, y: -24) difference_1a5b9c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5b9c.left\n        list2_ai -> difference_1a5b9c.right\n\n        instance(x: 167, y: -34) difference_2a6c0d root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_2a6c0d.left\n        list1_ai -> difference_2a6c0d.right\n\n        instance(x: 537, y: -24) concat_ae5f8b root.Std_k98ojb.List.Concat {}\n        difference_1a5b9c.difference -> concat_ae5f8b.left\n        difference_2a6c0d.difference -> concat_ae5f8b.right\n\n        concat_ae5f8b.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -37, y: 14) find_dissimilar_9b8c0d root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 423, y: -125) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 632, y: -127) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 807, y: -126) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 1008, y: -127) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 1254, y: -126) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 1460, y: -125) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_4b8927.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_3f3ee6.end\n        list_48148f -> slice_3f3ee6.list\n        modulo_4e8c54.result -> slice_76ecda.start\n        -1 -> slice_76ecda.end\n        list_48148f -> slice_76ecda.list\n        slice_76ecda.slice -> concat_0234d2.left\n        slice_3f3ee6.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -157, y: -65) rotate_right_9a1b2c root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 195, y: -20) reduce_3d2e8b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_3d2e8b.items\n        0 -> reduce_3d2e8b.initialValue\n        func() {\n            in(x: -175, y: -46, name: \"accumulated\") property(Number) accumulated_49f8a2\n            in(x: -170, y: 10, name: \"current\") property(Number) current_3d2e8b\n\n            out(x: 1075, y: -67, name: \"sum\") property(Number) sum_29f4c1\n\n            instance(x: 74, y: 1) add_e3a7b4 root.Std_k98ojb.Math.Add {}\n            accumulated_49f8a2 -> add_e3a7b4.first\n            current_3d2e8b -> add_e3a7b4.second\n            add_e3a7b4.result -> sum_29f4c1\n        } -> reduce_3d2e8b.reducer\n        reduce_3d2e8b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -256, y: 10) _sum_a5f7b8 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 186, y: -208) lessthanorequal_2f8d2c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 376, y: -196) if_e2e5a4 root.Std_k98ojb.Std.If {}\n        instance(x: 604, y: -184) lessthanorequal_6d2c2f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 730, y: -175) ifexpression_3e3a88 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i != 0\"\n        }\n        instance(x: 864, y: -221) add_8d4c2c root.Std_k98ojb.Math.Add {}\n        instance(x: 735, y: -256) ifexpression_8f2a5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i <= num\"\n        }\n        instance(x: 1004, y: -264) and_b9d67e root.Std_k98ojb.Logic.And {}\n        instance(x: 359, y: -300) if_1a6f9a root.Std_k98ojb.Std.If {}\n        num_5c0677 -> lessthanorequal_2f8d2c.left\n        1 -> lessthanorequal_2f8d2c.right\n        lessthanorequal_2f8d2c.result -> if_e2e5a4.predicate\n        execute_b7b391 -> if_e2e5a4.execute\n        num_5c0677 -> lessthanorequal_6d2c2f.left\n        3 -> lessthanorequal_6d2c2f.right\n        lessthanorequal_6d2c2f.result -> ifexpression_8f2a5c.gen_1\n        num_5c0677 -> ifexpression_8f2a5c.gen_0\n        ifexpression_8f2a5c.result -> and_b9d67e.left\n        if_e2e5a4.then -> add_8d4c2c.first\n        1 -> add_8d4c2c.second\n        add_8d4c2c.result -> setter_0b3f1a.new_value\n        add_8d4c2c.result -> ifexpression_3e3a88.gen_1\n        num_5c0677 -> ifexpression_3e3a88.gen_0\n        ifexpression_3e3a88.result -> and_b9d67e.right\n        and_b9d67e.result -> if_1a6f9a.predicate\n        if_e2e5a4.else -> setter_0b3f1a.new_value\n        if_e2e5a4.else -> continue_9a54bb\n        ifexpression_8f2a5c.result -> if_1a6f9a.execute\n        if_1a6f9a.then -> setter_0b3f1a.execute\n        if_1a6f9a.then -> ifexpression_3e3a88.execute\n        if_1a6f9a.else -> continue_9a54bb\n        if_1a6f9a.value -> output_c457b3\n        setter(x: 20, y: -250, name: \"setter_0b3f1a\") setter_0b3f1a = i\n        2 -> setter_0b3f1a.new_value\n    }\n\n    \n\n    instance(x: -87, y: 49) num_prime_6e4c5f root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -147) mul_b3c0d2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 35, y: -135) less_than_zero_a8e1f5 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_b3c0d2.first\n        y_5390f5 -> mul_b3c0d2.second\n        mul_b3c0d2.result -> less_than_zero_a8e1f5.left\n        0 -> less_than_zero_a8e1f5.right\n        less_than_zero_a8e1f5.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -46, y: -172) opposite_signs_5c7b6d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -25) modulo_c1a5d2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -26) equal_1e52c1 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_c1a5d2.value\n        11 -> modulo_c1a5d2.divisor\n        modulo_c1a5d2.result -> equal_1e52c1.left\n        0 -> equal_1e52c1.right\n        equal_1e52c1.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 7) is_diff_b9a6d6 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 390, y: 270) replace_2a8f54 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2a8f54.input\n        search_ai -> replace_2a8f54.search\n        replace_ai -> replace_2a8f54.replace\n        replace_2a8f54.output -> output_ai\n    }\n\n    \n\n    instance(x: -173, y: 306) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -234, y: 274) tolower_8f5d0b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 489, y: 162) equal_8c8e1a root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_8f5d0b.input\n        tolower_8f5d0b.output -> equal_8c8e1a.left\n        input_ai -> equal_8c8e1a.right\n        equal_8c8e1a.equal -> output_ai\n    }\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -379, y: -103) flatten_e1a3e7 root.Std_k98ojb.List.Flatten {}\n        instance(x: -514, y: 65) unique_9f6d5c root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -209, y: 63, name: \"item\") property(Number) item_5a7e7b\n            out(x: 114, y: 51, name: \"bool\") property(Bool) bool_a8d4c1\n            instance(x: -12, y: 19) contains_6301f6 root.Std_k98ojb.List.Contains {}\n            item_5a7e7b -> contains_6301f6.item\n            flatten_e1a3e7.flattened -> contains_6301f6.list\n            contains_6301f6.contains -> bool_a8d4c1\n        } -> unique_9f6d5c.handler\n        list_5fda54 -> flatten_e1a3e7.items\n        list_5fda54 -> unique_9f6d5c.items\n        instance(x: 207, y: -8) reduce_a2b3c1 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -222, y: 54, name: \"acc\") property(Number) acc_e6f4e8\n            in(x: -90, y: 71, name: \"item\") property(Number) item_3b8a7c\n            out(x: 204, y: 55, name: \"\") property(Number) _5d6281\n\n            instance(x: 48, y: 44) mul_b9e134 root.Std_k98ojb.Math.Mul {}\n            acc_e6f4e8 -> mul_b9e134.first\n            item_3b8a7c -> mul_b9e134.second\n            mul_b9e134.result -> _5d6281\n        } -> reduce_a2b3c1.reducer\n        unique_9f6d5c.output_list -> flatten_e1a3e7.items\n        1 -> reduce_a2b3c1.initial_value\n        reduce_a2b3c1.accumulated_value -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    \n\n    instance(x: -68, y: 48) unique_product_bf4d7e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -90, y: -11) difference_3f1c5e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3f1c5e.left\n        list2_ai -> difference_3f1c5e.right\n        instance(x: 74, y: 106) difference_1d6a1b root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_1d6a1b.left\n        list1_ai -> difference_1d6a1b.right\n        instance(x: 34, y: -50) concat_f7e0c6 root.Std_k98ojb.List.Concat {}\n        difference_3f1c5e.difference -> concat_f7e0c6.left\n        difference_1d6a1b.difference -> concat_f7e0c6.right\n        concat_f7e0c6.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 24, y: -83) find_dissimilar_b529f9 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 149, y: -148) length_3e4d81 root.Std_k98ojb.List.Length {}\n        instance(x: 375, y: -161) modulo_8f1c52 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 608, y: -164) sub_9e15a8 root.Std_k98ojb.Math.Sub {}\n        instance(x: 783, y: -162) slice_c0c1f8 root.Std_k98ojb.List.Slice {}\n        instance(x: 784, y: -397) slice_4d513a root.Std_k98ojb.List.Slice {}\n        instance(x: 1088, y: -266) concat_b6c89e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_3e4d81.list\n        n_68068c -> modulo_8f1c52.value\n        length_3e4d81.length -> modulo_8f1c52.divisor\n        length_3e4d81.length -> sub_9e15a8.first\n        modulo_8f1c52.result -> sub_9e15a8.second\n        list_48148f -> slice_c0c1f8.list\n        sub_9e15a8.result -> slice_c0c1f8.start\n        -1 -> slice_c0c1f8.end\n        list_48148f -> slice_4d513a.list\n        0 -> slice_4d513a.start\n        modulo_8f1c52.result -> slice_4d513a.end\n        slice_c0c1f8.slice -> concat_b6c89e.left\n        slice_4d513a.slice -> concat_b6c89e.right\n        concat_b6c89e.result -> output_823209\n    }\n\n    \n\n    instance(x: -37, y: -127) rotate_right_eb2c88 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 293, y: -10) reduce_6e5b0d root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_6e5b0d.items\n        0 -> reduce_6e5b0d.initialValue\n        func() {\n            in(x: -173, y: -146, name: \"accumulated\") property(Number) accumulated_c8a9f4\n            in(x: -200, y: 127, name: \"current\") property(Number) current_957d3c\n\n            out(x: 758, y: -106, name: \"sum\") property(Number) sum_d1b8e4\n\n            instance(x: 317, y: -20) add_b64f8a root.Std_k98ojb.Math.Add {}\n            accumulated_c8a9f4 -> add_b64f8a.first\n            current_957d3c -> add_b64f8a.second\n            add_b64f8a.result -> sum_d1b8e4\n        } -> reduce_6e5b0d.reducer\n        reduce_6e5b0d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -35, y: 7) _sum_b6c9b8 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 348, y: -186) lessthanorequal_e3c0d2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 172, y: -26) lessthanorequal_45f4e5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 534, y: -304) for_5a0c9d root.Std_k98ojb.Std.For {}\n        instance(x: 721, y: -68) if_f3e59f root.Std_k98ojb.Std.If {}\n        instance(x: 969, y: -245) expression_e5a0c7 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        lessthanorequal_45f4e5.result -> if_f3e59f.predicate\n        num_5c0677 -> lessthanorequal_45f4e5.left\n        2 -> lessthanorequal_45f4e5.right\n        expression_e5a0c7.result -> if_f3e59f.else\n        if_f3e59f.then -> continue_9a54bb\n        for_5a0c9d.item -> expression_e5a0c7.gen_1\n        num_5c0677 -> expression_e5a0c7.gen_0\n        2 -> for_5a0c9d.items\n        if_f3e59f.execute -> for_5a0c9d.reset\n        lessthanorequal_e3c0d2.result -> for_5a0c9d.next\n        num_5c0677 -> lessthanorequal_e3c0d2.left\n        1 -> lessthanorequal_e3c0d2.right\n        execute_b7b391 -> if_f3e59f.execute\n        for_5a0c9d.done -> continue_9a54bb\n        expression_e5a0c7.result.not -> output_c457b3\n    }\n\n    \n\n    instance(x: -82, y: 6) num_prime_e184e7 root.main.num_prime {}\n\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c8d5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5c root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c8d5b.first\n        y_5390f5 -> mul_2c8d5b.second\n        mul_2c8d5b.result -> less_than_zero_8f1e5c.left\n        0 -> less_than_zero_8f1e5c.right\n        less_than_zero_8f1e5c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_8b3d8a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5d3b9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -24) equal_8c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5d3b9a.value\n        11 -> modulo_5d3b9a.divisor\n        modulo_5d3b9a.result -> equal_8c7e1b.left\n        0 -> equal_8c7e1b.right\n        equal_8c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 15) is_diff_9a2d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 210) tolower_4a2b3c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 475, y: 210) equal_6d7e8f root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a2b3c.input\n        input_ai -> equal_6d7e8f.left\n        tolower_4a2b3c.output -> equal_6d7e8f.right\n        equal_6d7e8f.equal -> output_ai\n    }\n\n    \n\n    instance(x: -100, y: 150) is_lower_instance root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n\n                instance(x: 0, y: 0) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4f6a7c -> contains_node.list\n                item_3b2d89 -> contains_node.item\n                instance(x: 100, y: -50) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n                        acc_4f6a7c -> _4e5b8c\n                    }\n                    else: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n                        instance(x: 0, y: 0) add_node root.Std_k98ojb.List.Add {}\n                        acc_4f6a7c -> add_node.list\n                        item_3b2d89 -> add_node.item\n                        add_node.listWithItem -> _4e5b8c\n                    }\n                }\n                contains_node.contains -> if_node.input\n            }\n        }\n\n        instance(x: 100, y: 100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(Number) _4e5b8c\n\n                instance(x: 0, y: 0) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4f6a7c -> mul_node.first\n                item_3b2d89 -> mul_node.second\n                mul_node.result -> _4e5b8c\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -114) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 136) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 37) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 37) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 45, y: -120) length_1b2d3a root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -120) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -120) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -120) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 590, y: -120) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 740, y: -120) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2d3a.list\n        length_1b2d3a.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b2d3a.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        modulo_4e8c54.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -120) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -12) reduce_4b2d8e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4b2d8e.items\n        0 -> reduce_4b2d8e.initialValue\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_9f1a2c\n            in(x: -167, y: 22, name: \"current\") property(Number) current_8d0b1e\n\n            out(x: 1052, y: -34, name: \"sum\") property(Number) sum_9f1a2c\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1a2c -> add_6e8af5.first\n            current_8d0b1e -> add_6e8af5.second\n            add_6e8af5.result -> sum_9f1a2c\n        } -> reduce_4b2d8e.reducer\n        reduce_4b2d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -307, y: 16) _sum_5d3c9a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6c5d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e2a89 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -104) lessthanorequal_f5d6c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -240) if_8f4e5a root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -240) lessthanorequal_4c7d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -356) if_2e2a89_copy root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -356) lessthanorequal_f5d6c9_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 407, y: -240) for_2e2a89 root.Std_k98ojb.Std.For {}\n        instance(x: 314, y: -526) ifexpression_2e2a89 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 715, y: -240) and_2e2a89 root.Std_k98ojb.Logic.And {}\n        instance(x: 634, y: -240) not_2e2a89 root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> lessthanorequal_6c5d8f.left\n        1 -> lessthanorequal_6c5d8f.right\n        lessthanorequal_6c5d8f.result -> if_2e2a89.predicate\n        if_2e2a89.then -> continue_9a54bb\n        if_2e2a89.else -> lessthanorequal_f5d6c9.left\n        num_5c0677 -> lessthanorequal_f5d6c9.right\n        lessthanorequal_f5d6c9.result -> if_8f4e5a.predicate\n        if_8f4e5a.then -> continue_9a54bb\n        if_8f4e5a.else -> lessthanorequal_4c7d8f.left\n        2 -> lessthanorequal_4c7d8f.right\n        lessthanorequal_4c7d8f.result -> if_2e2a89_copy.predicate\n        if_2e2a89_copy.then -> continue_9a54bb\n        if_2e2a89_copy.else -> for_2e2a89.reset\n        num_5c0677 -> for_2e2a89.items\n        for_2e2a89.item -> ifexpression_2e2a89.gen_1\n        num_5c0677 -> ifexpression_2e2a89.gen_0\n        ifexpression_2e2a89.result -> not_2e2a89.input\n        not_2e2a89.output -> and_2e2a89.left\n        for_2e2a89.done -> continue_9a54bb\n        and_2e2a89.right -> output_c457b3\n        and_2e2a89.result -> output_c457b3\n        execute_b7b391 -> for_2e2a89.reset\n    }\n\n    \n\n    instance(x: -60, y: 10) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -86, y: -147) mul_4c3e8b root.Std_k98ojb.Math.Mul {}\n        instance(x: 150, y: -215) less_than_zero_e2f439 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_4c3e8b.first\n        y_5390f5 -> mul_4c3e8b.second\n        mul_4c3e8b.result -> less_than_zero_e2f439.left\n        0 -> less_than_zero_e2f439.right\n        less_than_zero_e2f439.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -167, y: 85) opposite_signs_ae3b1c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -16) modulo_5b2a5d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -15) equal_e13c6e root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b2a5d.value\n        11 -> modulo_5b2a5d.divisor\n        modulo_5b2a5d.result -> equal_e13c6e.left\n        0 -> equal_e13c6e.right\n        equal_e13c6e.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -84, y: 79) is_diff_7a5d1b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 192) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 300, y: 200) tolower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 500, y: 200) equal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_node.input\n        input_ai -> equal_node.left\n        tolower_node.output -> equal_node.right\n        equal_node.equal -> output_ai\n    }\n\n    \n    instance(x: -150, y: 200) is_lower_instance root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -428, y: 116) flatten_4e4c6a root.Std_k98ojb.List.Flatten {}\n        instance(x: -506, y: 37) difference_288f3d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -601, y: 115) intersection_45c84a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -317, y: 228) reduce_4e7f45 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -600, y: 229) emptylist_c7a128 root.Std_k98ojb.List.Empty {}\n\n        execute_19300c -> flatten_4e4c6a.trigger\n        list_5fda54 -> flatten_4e4c6a.items\n\n        flatten_4e4c6a.flattened -> difference_288f3d.left\n        flatten_4e4c6a.flattened -> intersection_45c84a.left\n        emptylist_c7a128.list -> difference_288f3d.right\n\n        difference_288f3d.difference -> reduce_4e7f45.items\n        1 -> reduce_4e7f45.initial_value\n        func() {\n            in(x: -109, y: -26, name: \"acc\") property(Number) acc_c147a8\n            in(x: -103, y: 67, name: \"item\") property(Number) item_65c7e9\n\n            out(x: 127, y: 23, name: \"\") property(Number) _f24d2b\n\n            instance(x: 8, y: 20) mul_c775a9 root.Std_k98ojb.Math.Mul {}\n            acc_c147a8 -> mul_c775a9.first\n            item_65c7e9 -> mul_c775a9.second\n            mul_c775a9.result -> _f24d2b\n        } -> reduce_4e7f45.reducer\n\n        reduce_4e7f45.accumulated_value -> output_cffcc2\n        execute_19300c -> continue_45190b.trigger\n    }\n\n    instance(x: 86, y: -134) unique_product_4a7d7a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -339, y: -24) difference_1a5b0c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5b0c.left\n        list2_ai -> difference_1a5b0c.right\n\n        instance(x: 67, y: -34) difference_2f8e1d root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_2f8e1d.left\n        list1_ai -> difference_2f8e1d.right\n\n        instance(x: 507, y: -34) concat_a6c3e4 root.Std_k98ojb.List.Concat {}\n        difference_1a5b0c.difference -> concat_a6c3e4.left\n        difference_2f8e1d.difference -> concat_a6c3e4.right\n\n        concat_a6c3e4.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -197, y: 50) find_dissimilar_8a2b9c root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 423, y: -125) length_4d7e2a root.Std_k98ojb.List.Length {}\n        instance(x: 633, y: -125) modulo_c3d11c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 840, y: -125) sub_7f4a3e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1060, y: -125) slice_8d7c1c root.Std_k98ojb.List.Slice {}\n        instance(x: 1060, y: -45) slice_3e5a1f root.Std_k98ojb.List.Slice {}\n        instance(x: 1300, y: -85) concat_c7d2a3 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4d7e2a.list\n        length_4d7e2a.length -> modulo_c3d11c.divisor\n        n_68068c -> modulo_c3d11c.value\n        modulo_c3d11c.result -> sub_7f4a3e.second\n        length_4d7e2a.length -> sub_7f4a3e.first\n        sub_7f4a3e.result -> slice_8d7c1c.start\n        0 -> slice_3e5a1f.end\n        sub_7f4a3e.result -> slice_3e5a1f.start\n        list_48148f -> slice_8d7c1c.list\n        list_48148f -> slice_3e5a1f.list\n        -1 -> slice_8d7c1c.end\n        slice_3e5a1f.slice -> concat_c7d2a3.left\n        slice_8d7c1c.slice -> concat_c7d2a3.right\n        concat_c7d2a3.result -> output_823209\n    }\n\n    \n\n    instance(x: -46, y: -54) rotate_right_f7b2e1 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 195, y: -20) reduce_3d2e8b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_3d2e8b.items\n        0 -> reduce_3d2e8b.initialValue\n        func() {\n            in(x: -175, y: -46, name: \"accumulated\") property(Number) accumulated_3a3f9c\n            in(x: -170, y: 10, name: \"current\") property(Number) current_8d2b1e\n\n            out(x: 115, y: -41, name: \"sum\") property(Number) sum_82632f\n\n            instance(x: 90, y: 2) add_a74a8c root.Std_k98ojb.Math.Add {}\n            accumulated_3a3f9c -> add_a74a8c.first\n            current_8d2b1e -> add_a74a8c.second\n            add_a74a8c.result -> sum_82632f\n        } -> reduce_3d2e8b.reducer\n        reduce_3d2e8b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -159, y: 107) _sum_b9c183 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 186, y: -208) lessthanorequal_62f63c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 373, y: -222) greaterthan_b4a5e7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 104, y: -164) equal_3d33c5 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 467, y: -219) and_b1a2f7 root.Std_k98ojb.Logic.And {}\n        instance(x: 594, y: -207) not_31c40e root.Std_k98ojb.Logic.Not {}\n        instance(x: 696, y: -224) and_2d37f1 root.Std_k98ojb.Logic.And {}\n        instance(x: 856, y: -222) not_510c7e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1015, y: -244) and_3f4a6d root.Std_k98ojb.Logic.And {}\n        instance(x: 1226, y: -235) not_7e5c54 root.Std_k98ojb.Logic.Not {}\n        instance(x: 109, y: -328) for_a4d40a root.Std_k98ojb.Std.For {}\n        instance(x: 618, y: -352) mathexpression_7c0f9e root.Std_k98ojb.Math.Expression {\n            expression: \"i * i <= num\"\n        }\n        instance(x: 443, y: -328) mathexpression_41d262 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 754, y: -328) if_1e2a2c root.Std_k98ojb.Std.If {}\n        num_5c0677 -> lessthanorequal_62f63c.left\n        1 -> lessthanorequal_62f63c.right\n        lessthanorequal_62f63c.result -> and_b1a2f7.left\n        num_5c0677 -> greaterthan_b4a5e7.left\n        1 -> greaterthan_b4a5e7.right\n        greaterthan_b4a5e7.result -> and_b1a2f7.right\n        and_b1a2f7.result -> not_31c40e.input\n        num_5c0677 -> equal_3d33c5.left\n        2 -> equal_3d33c5.right\n        equal_3d33c5.result -> and_2d37f1.left\n        not_31c40e.output -> and_2d37f1.right\n        and_2d37f1.result -> not_510c7e.input\n        not_510c7e.output -> and_3f4a6d.left\n        mathexpression_41d262.result -> if_1e2a2c.predicate\n        if_1e2a2c.else -> continue_9a54bb\n        if_1e2a2c.then -> not_7e5c54.input\n        num_5c0677 -> for_a4d40a.items\n        2 -> mathexpression_7c0f9e.gen_1\n        for_a4d40a.item -> mathexpression_7c0f9e.gen_0\n        for_a4d40a.item -> mathexpression_41d262.gen_1\n        num_5c0677 -> mathexpression_41d262.gen_0\n        mathexpression_7c0f9e.result -> if_1e2a2c.execute\n        not_7e5c54.output -> and_3f4a6d.right\n        and_3f4a6d.result -> output_c457b3\n        for_a4d40a.onItem -> mathexpression_7c0f9e.execute\n        for_a4d40a.done -> continue_9a54bb\n        execute_b7b391 -> for_a4d40a.reset\n    }\n\n    \n\n    instance(x: -26, y: 18) num_prime_ded2c5 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -147) mul_b0c0e2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 35, y: -135) less_than_zero_e0f4d4 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_b0c0e2.first\n        y_5390f5 -> mul_b0c0e2.second\n        mul_b0c0e2.result -> less_than_zero_e0f4d4.left\n        0 -> less_than_zero_e0f4d4.right\n        less_than_zero_e0f4d4.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -187, y: -265) opposite_signs_07b12c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -25) modulo_c2a28b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -26) equal_18e0d8 root.Std_k98ojb.Logic.Equal {}\n        11 -> modulo_c2a28b.divisor\n        n_27f29c -> modulo_c2a28b.value\n        modulo_c2a28b.result -> equal_18e0d8.left\n        0 -> equal_18e0d8.right\n        equal_18e0d8.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -45, y: 7) is_diff_9d28b1 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 390, y: 270) replace_2c8d9f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2c8d9f.input\n        search_ai -> replace_2c8d9f.search\n        replace_ai -> replace_2c8d9f.replace\n        replace_2c8d9f.output -> output_ai\n    }\n\n    \n\n    instance(x: -164, y: 350) replace_char_a7e8a9 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -234, y: 274) tolower_8f5d0b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 489, y: 162) equal_8e3b1c root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_8f5d0b.input\n        tolower_8f5d0b.output -> equal_8e3b1c.left\n        input_ai -> equal_8e3b1c.right\n        equal_8e3b1c.equal -> output_ai\n    }\n\n    \n    instance(x: -425, y: 209) is_lower_node root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -379, y: -103) flatten_e2c6d7 root.Std_k98ojb.List.Flatten {}\n        instance(x: -514, y: 15) intersection_6e7a2f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -169, y: -103) list_empty_d9d4e2 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 95, y: -65) reduce_7a7c4d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 583, y: -104) set_difference_b9c12e root.Std_k98ojb.Sets.Difference {}\n\n        execute_19300c -> intersection_6e7a2f.left\n        list_5fda54 -> flatten_e2c6d7.items\n        flatten_e2c6d7.flattened -> intersection_6e7a2f.right\n        flatten_e2c6d7.flattened -> set_difference_b9c12e.left\n        intersection_6e7a2f.intersect -> set_difference_b9c12e.right\n        set_difference_b9c12e.difference -> reduce_7a7c4d.items\n        1 -> reduce_7a7c4d.initial_value\n        func() {\n            in(x: -80, y: -6) name: \"accumulated\") property(Number) accumulated_53f7b9\n            in(x: -23, y: 43) name: \"current\") property(Number) current_f1a8c9\n\n            out(x: 413, y: 36) name: \"\") property(Number) _e0d371\n\n            instance(x: 253, y: -31) mul_4bdf9f root.Std_k98ojb.Math.Mul {}\n            accumulated_53f7b9 -> mul_4bdf9f.first\n            current_f1a8c9 -> mul_4bdf9f.second\n            mul_4bdf9f.result -> _e0d371\n        } -> reduce_7a7c4d.reducer\n        reduce_7a7c4d.reduced_value -> output_cffcc2\n        reduce_7a7c4d.reduced_value -> continue_45190b\n    }\n\n    instance(x: -63, y: 28) unique_product_2bcf53 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -91, y: -11) difference_4d85b8 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_4d85b8.left\n        list2_ai -> difference_4d85b8.right\n        instance(x: 607, y: -37) difference_7f9e1a root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_7f9e1a.left\n        list1_ai -> difference_7f9e1a.right\n        instance(x: 405, y: -36) concat_81d5f9 root.Std_k98ojb.List.Concat {}\n        difference_4d85b8.difference -> concat_81d5f9.list1\n        difference_7f9e1a.difference -> concat_81d5f9.list2\n        concat_81d5f9.concatenatedList -> output_ai\n    }\n\n    \n\n    instance(x: -43, y: 30) find_dissimilar_bbc6b6 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 149, y: -148) length_38b9d6 root.Std_k98ojb.List.Length {}\n        instance(x: 375, y: -153) modulo_87c4a7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 204, y: -272) sub_fdb6df root.Std_k98ojb.Math.Sub {}\n        instance(x: 488, y: -153) slice_4e9a05 root.Std_k98ojb.List.Slice {}\n        instance(x: 713, y: -152) slice_eae6d2 root.Std_k98ojb.List.Slice {}\n        instance(x: 968, y: -153) concat_4fb3e2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_38b9d6.list\n        n_68068c -> modulo_87c4a7.value\n        length_38b9d6.length -> modulo_87c4a7.divisor\n\n        length_38b9d6.length -> sub_fdb6df.first\n        modulo_87c4a7.result -> sub_fdb6df.second\n\n        list_48148f -> slice_4e9a05.list\n        modulo_87c4a7.result -> slice_4e9a05.start\n        -1 -> slice_4e9a05.end\n\n        list_48148f -> slice_eae6d2.list\n        0 -> slice_eae6d2.start\n        sub_fdb6df.result -> slice_eae6d2.end\n\n        slice_4e9a05.slice -> concat_4fb3e2.left\n        slice_eae6d2.slice -> concat_4fb3e2.right\n\n        concat_4fb3e2.result -> output_823209\n    }\n\n    \n\n    instance(x: -176, y: -125) rotate_right_3b3a6f root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 29, y: -10) reduce_2e3b0d root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_2e3b0d.initialValue\n        list_2c62ab -> reduce_2e3b0d.items\n        func() {\n            in(x: -174, y: -52, name: \"accumulated\") property(Number) accumulated_a8f49a\n            in(x: -166, y: 20, name: \"current\") property(Number) current_7b30d4\n\n            out(x: 1074, y: -52, name: \"sum\") property(Number) sum_eed2f2\n\n            instance(x: 89, y: 1) add_b6d9c7 root.Std_k98ojb.Math.Add {}\n            accumulated_a8f49a -> add_b6d9c7.first\n            current_7b30d4 -> add_b6d9c7.second\n            add_b6d9c7.result -> sum_eed2f2\n        } -> reduce_2e3b0d.reducer\n        reduce_2e3b0d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -151, y: 94) _sum_6c7ba5 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 348, y: -186) lessthanorequal_b4f9d5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 625, y: -187) if_097c9a root.Std_k98ojb.Std.If {}\n        instance(x: 839, y: -184) lessthanorequal_b2e8d3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1053, y: -186) if_ea7ba7 root.Std_k98ojb.Std.If {}\n        instance(x: 1443, y: -187) add_2e0eb1 root.Std_k98ojb.Math.Add {}\n        instance(x: 1567, y: -190) for_cdebaa root.Std_k98ojb.Std.For {}\n        instance(x: 1784, y: -384) ifexpression_23d5f1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 2066, y: -376) and_f3efc2 root.Std_k98ojb.Logic.And {}\n        instance(x: 2412, y: -185) if_1f85a5 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_b4f9d5.left\n        1 -> lessthanorequal_b4f9d5.right\n        lessthanorequal_b4f9d5.result -> if_097c9a.predicate\n        if_097c9a.then -> continue_9a54bb\n        execute_b7b391 -> if_097c9a.execute\n\n        num_5c0677 -> lessthanorequal_b2e8d3.left\n        3 -> lessthanorequal_b2e8d3.right\n        lessthanorequal_b2e8d3.result -> if_ea7ba7.predicate\n        if_ea7ba7.then -> and_f3efc2.right\n        if_ea7ba7.execute -> continue_9a54bb\n\n        num_5c0677 -> add_2e0eb1.first\n        1 -> add_2e0eb1.second\n        add_2e0eb1.result -> for_cdebaa.items\n\n        for_cdebaa.item -> ifexpression_23d5f1.gen_0\n        ifexpression_23d5f1.value -> and_f3efc2.left\n        ifexpression_23d5f1.then -> continue_9a54bb\n        and_f3efc2.result -> if_1f85a5.predicate\n\n        num_5c0677 -> if_1f85a5.execute\n        if_1f85a5.else -> for_cdebaa.next\n        if_1f85a5.then -> continue_9a54bb\n        if_1f85a5.value -> output_c457b3\n\n        execute_b7b391 -> for_cdebaa.reset\n    }\n\n    \n\n    instance(x: 60, y: -267) num_prime_3dbd1a root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c8d5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5c root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c8d5b.first\n        y_5390f5 -> mul_2c8d5b.second\n        mul_2c8d5b.result -> less_than_zero_8f1e5c.left\n        0 -> less_than_zero_8f1e5c.right\n        less_than_zero_8f1e5c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_8b3d8a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5d3b9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -24) equal_8c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5d3b9a.value\n        11 -> modulo_5d3b9a.divisor\n        modulo_5d3b9a.result -> equal_8c7e1b.left\n        0 -> equal_8c7e1b.right\n        equal_8c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 15) is_diff_9a2d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 210) tolower_4a2b3c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 475, y: 210) equal_6d7e8f root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a2b3c.input\n        input_ai -> equal_6d7e8f.left\n        tolower_4a2b3c.output -> equal_6d7e8f.right\n        equal_6d7e8f.equal -> output_ai\n    }\n\n    \n\n    instance(x: -100, y: 150) is_lower_instance root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n\n                instance(x: 0, y: 0) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4f6a7c -> contains_node.list\n                item_3b2d89 -> contains_node.item\n                instance(x: 100, y: -50) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n                        acc_4f6a7c -> _4e5b8c\n                    }\n                    else: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n                        instance(x: 0, y: 0) add_node root.Std_k98ojb.List.Add {}\n                        acc_4f6a7c -> add_node.list\n                        item_3b2d89 -> add_node.item\n                        add_node.listWithItem -> _4e5b8c\n                    }\n                }\n                contains_node.contains -> if_node.input\n            }\n        }\n\n        instance(x: 100, y: 100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(Number) _4e5b8c\n\n                instance(x: 0, y: 0) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4f6a7c -> mul_node.first\n                item_3b2d89 -> mul_node.second\n                mul_node.result -> _4e5b8c\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -114) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 136) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 37) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 37) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 45, y: -120) length_1b2d3a root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -120) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -120) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -120) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 590, y: -120) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 740, y: -120) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2d3a.list\n        length_1b2d3a.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b2d3a.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        modulo_4e8c54.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -120) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -12) reduce_4b2d8e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4b2d8e.items\n        0 -> reduce_4b2d8e.initialValue\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_9f1a2c\n            in(x: -167, y: 22, name: \"current\") property(Number) current_8d0b1e\n\n            out(x: 1052, y: -34, name: \"sum\") property(Number) sum_9f1a2c\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1a2c -> add_6e8af5.first\n            current_8d0b1e -> add_6e8af5.second\n            add_6e8af5.result -> sum_9f1a2c\n        } -> reduce_4b2d8e.reducer\n        reduce_4b2d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -307, y: 16) _sum_5d3c9a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6c5d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e2a89 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -104) lessthanorequal_f5d6c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -240) if_8f4e5a root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -240) lessthanorequal_4c7d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -356) if_2e2a89_copy root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -356) lessthanorequal_f5d6c9_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 407, y: -240) for_2e2a89 root.Std_k98ojb.Std.For {}\n        instance(x: 314, y: -526) ifexpression_2e2a89 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 715, y: -240) and_2e2a89 root.Std_k98ojb.Logic.And {}\n        instance(x: 634, y: -240) not_2e2a89 root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> lessthanorequal_6c5d8f.left\n        1 -> lessthanorequal_6c5d8f.right\n        lessthanorequal_6c5d8f.result -> if_2e2a89.predicate\n        if_2e2a89.then -> continue_9a54bb\n        if_2e2a89.else -> lessthanorequal_f5d6c9.left\n        num_5c0677 -> lessthanorequal_f5d6c9.right\n        lessthanorequal_f5d6c9.result -> if_8f4e5a.predicate\n        if_8f4e5a.then -> continue_9a54bb\n        if_8f4e5a.else -> lessthanorequal_4c7d8f.left\n        2 -> lessthanorequal_4c7d8f.right\n        lessthanorequal_4c7d8f.result -> if_2e2a89_copy.predicate\n        if_2e2a89_copy.then -> continue_9a54bb\n        if_2e2a89_copy.else -> for_2e2a89.reset\n        num_5c0677 -> for_2e2a89.items\n        for_2e2a89.item -> ifexpression_2e2a89.gen_1\n        num_5c0677 -> ifexpression_2e2a89.gen_0\n        ifexpression_2e2a89.result -> not_2e2a89.input\n        not_2e2a89.output -> and_2e2a89.left\n        for_2e2a89.done -> continue_9a54bb\n        and_2e2a89.right -> output_c457b3\n        and_2e2a89.result -> output_c457b3\n        execute_b7b391 -> for_2e2a89.reset\n    }\n\n    \n\n    instance(x: -60, y: 10) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -86, y: -147) mul_4c3e8b root.Std_k98ojb.Math.Mul {}\n        instance(x: 150, y: -215) less_than_zero_e2f439 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_4c3e8b.first\n        y_5390f5 -> mul_4c3e8b.second\n        mul_4c3e8b.result -> less_than_zero_e2f439.left\n        0 -> less_than_zero_e2f439.right\n        less_than_zero_e2f439.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -167, y: 85) opposite_signs_ae3b1c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -16) modulo_5b2a5d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -15) equal_e13c6e root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b2a5d.value\n        11 -> modulo_5b2a5d.divisor\n        modulo_5b2a5d.result -> equal_e13c6e.left\n        0 -> equal_e13c6e.right\n        equal_e13c6e.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -84, y: 79) is_diff_7a5d1b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 192) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 300, y: 200) tolower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 500, y: 200) equal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_node.input\n        input_ai -> equal_node.left\n        tolower_node.output -> equal_node.right\n        equal_node.equal -> output_ai\n    }\n\n    \n    instance(x: -150, y: 200) is_lower_instance root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -428, y: 116) flatten_4e4c6a root.Std_k98ojb.List.Flatten {}\n        instance(x: -506, y: 37) difference_234f5d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -601, y: 115) intersection_26c81a root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -317, y: 245) reduce_86e5b2 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -507, y: 247) filter_4f339c root.Std_k98ojb.Query.Filter {}\n\n        execute_19300c -> flatten_4e4c6a.trigger\n        list_5fda54 -> flatten_4e4c6a.items\n\n        flatten_4e4c6a.flattened -> filter_4f339c.items\n        filter_4f339c.where: \"it != null\"\n\n        filter_4f339c.result -> difference_234f5d.left\n        filter_4f339c.result -> intersection_26c81a.left\n\n        difference_234f5d.right: []\n        intersection_26c81a.right: []\n\n        difference_234f5d.difference -> reduce_86e5b2.items\n        1 -> reduce_86e5b2.accumulator\n        func() {\n            in(x: -109, y: 34, name: \"acc\") property(Number) acc_7a7c2f\n            in(x: -109, y: 103, name: \"item\") property(Number) item_6b853a\n\n            out(x: 277, y: 68, name: \"\") property(Number) _47d6c5\n\n            instance(x: 88, y: 69) mul_1f0e38 root.Std_k98ojb.Math.Mul {}\n            acc_7a7c2f -> mul_1f0e38.first\n            item_6b853a -> mul_1f0e38.second\n            mul_1f0e38.result -> _47d6c5\n        } -> reduce_86e5b2.reducer\n\n        reduce_86e5b2.accumulated_value -> output_cffcc2\n        reduce_86e5b2.done -> continue_45190b\n    }\n\n    instance(x: -37, y: 10) unique_product_ea5f6b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -339, y: -24) difference_1a5b0c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5b0c.left\n        list2_ai -> difference_1a5b0c.right\n\n        instance(x: 67, y: -34) difference_2f8e1d root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_2f8e1d.left\n        list1_ai -> difference_2f8e1d.right\n\n        instance(x: 507, y: -34) concat_a6c3e4 root.Std_k98ojb.List.Concat {}\n        difference_1a5b0c.difference -> concat_a6c3e4.left\n        difference_2f8e1d.difference -> concat_a6c3e4.right\n\n        concat_a6c3e4.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -197, y: 50) find_dissimilar_8a2b9c root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 423, y: -125) length_4d7e2a root.Std_k98ojb.List.Length {}\n        instance(x: 633, y: -125) modulo_c3d15c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 840, y: -125) sub_7f4a7e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1060, y: -125) slice_3d7c9c root.Std_k98ojb.List.Slice {}\n        instance(x: 1060, y: -45) slice_4e2a1f root.Std_k98ojb.List.Slice {}\n        instance(x: 1300, y: -85) concat_c7d34c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4d7e2a.list\n        length_4d7e2a.length -> modulo_c3d15c.divisor\n        n_68068c -> modulo_c3d15c.value\n        modulo_c3d15c.result -> sub_7f4a7e.second\n        length_4d7e2a.length -> sub_7f4a7e.first\n        sub_7f4a7e.result -> slice_3d7c9c.start\n        0 -> slice_4e2a1f.end\n        slice_3d7c9c.start -> slice_4e2a1f.start\n        list_48148f -> slice_3d7c9c.list\n        list_48148f -> slice_4e2a1f.list\n        -1 -> slice_3d7c9c.end\n        slice_4e2a1f.slice -> concat_c7d34c.left\n        slice_3d7c9c.slice -> concat_c7d34c.right\n        concat_c7d34c.result -> output_823209\n    }\n\n    \n\n    instance(x: -365, y: -102) rotate_right_f8a7b1 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 195, y: -20) reduce_3d2e8b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_3d2e8b.items\n        0 -> reduce_3d2e8b.initialValue\n        func() {\n            in(x: -175, y: -46, name: \"accumulated\") property(Number) accumulated_3a3f9c\n            in(x: -170, y: 10, name: \"current\") property(Number) current_8d2b1e\n\n            out(x: 115, y: -41, name: \"sum\") property(Number) sum_82632f\n\n            instance(x: 90, y: 2) add_a74a8c root.Std_k98ojb.Math.Add {}\n            accumulated_3a3f9c -> add_a74a8c.first\n            current_8d2b1e -> add_a74a8c.second\n            add_a74a8c.result -> sum_82632f\n        } -> reduce_3d2e8b.reducer\n        reduce_3d2e8b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -159, y: 107) _sum_b9c183 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 186, y: -208) lessthanorequal_62f63c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 373, y: -222) greaterthan_b4a5e7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 104, y: -164) equal_3d30c8 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 467, y: -219) and_ba5f92 root.Std_k98ojb.Logic.And {}\n        instance(x: 576, y: -221) not_3e050d root.Std_k98ojb.Logic.Not {}\n        instance(x: 415, y: -338) for_ea6b3f root.Std_k98ojb.Std.For {}\n        instance(x: 716, y: -208) lessthanorequal_7c91d9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 547, y: -328) mathexpression_ea8f91 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 659, y: -334) not_234d3c root.Std_k98ojb.Logic.Not {}\n        instance(x: 781, y: -338) and_bf3e5a root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthanorequal_62f63c.left\n        1 -> lessthanorequal_62f63c.right\n\n        num_5c0677 -> greaterthan_b4a5e7.left\n        1 -> greaterthan_b4a5e7.right\n\n        num_5c0677 -> equal_3d30c8.left\n        2 -> equal_3d30c8.right\n\n        lessthanorequal_62f63c.result -> and_ba5f92.left\n        greaterthan_b4a5e7.result -> and_ba5f92.right\n\n        and_ba5f92.result -> not_3e050d.value\n\n        num_5c0677 -> mathexpression_ea8f91.gen_0\n        for_ea6b3f.index -> mathexpression_ea8f91.gen_1\n\n        mathexpression_ea8f91.result -> not_234d3c.value\n\n        num_5c0677 -> lessthanorequal_7c91d9.right\n        for_ea6b3f.index -> lessthanorequal_7c91d9.left\n\n        lessthanorequal_7c91d9.result -> and_bf3e5a.left\n        not_234d3c.result -> and_bf3e5a.right\n\n        and_bf3e5a.result -> for_ea6b3f.continue\n\n        not_3e050d.result -> output_c457b3\n        and_bf3e5a.result -> continue_9a54bb\n\n        execute_b7b391 -> for_ea6b3f.reset\n        2 -> for_ea6b3f.items\n    }\n\n    \n\n    instance(x: -84, y: 10) num_prime_f0be66 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -147) mul_b0c0e2 root.Std_k98ojb.Math.Mul {}\n        instance(x: 35, y: -135) less_than_zero_e0f4d4 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_b0c0e2.first\n        y_5390f5 -> mul_b0c0e2.second\n        mul_b0c0e2.result -> less_than_zero_e0f4d4.left\n        0 -> less_than_zero_e0f4d4.right\n        less_than_zero_e0f4d4.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -187, y: -265) opposite_signs_07b12c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -25) modulo_c2a29b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -26) equal_18e6d7 root.Std_k98ojb.Logic.Equal {}\n        11 -> modulo_c2a29b.divisor\n        n_27f29c -> modulo_c2a29b.value\n        modulo_c2a29b.result -> equal_18e6d7.left\n        0 -> equal_18e6d7.right\n        equal_18e6d7.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -45, y: 16) is_diff_95bfa7 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 390, y: 270) replace_2c8d9f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2c8d9f.input\n        search_ai -> replace_2c8d9f.search\n        replace_ai -> replace_2c8d9f.replace\n        replace_2c8d9f.output -> output_ai\n    }\n\n    \n\n    instance(x: -164, y: 350) replace_char_a7e8a9 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -234, y: 274) tolower_8f5d0b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 489, y: 162) equal_8e3b1c root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_8f5d0b.input\n        tolower_8f5d0b.output -> equal_8e3b1c.left\n        input_ai -> equal_8e3b1c.right\n        equal_8e3b1c.equal -> output_ai\n    }\n\n    \n    instance(x: -425, y: 209) is_lower_node root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -379, y: -103) flatten_e2c6d7 root.Std_k98ojb.List.Flatten {}\n        instance(x: -514, y: 15) intersection_6e7a2f root.Std_k98ojb.Sets.Intersection {}\n        instance(x: -169, y: -103) list_empty_d9d4e2 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 95, y: -65) reduce_7a7c4d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 583, y: -104) flatten_190b2e root.Std_k98ojb.List.Flatten {}\n\n        list_5fda54 -> intersection_6e7a2f.left\n        list_5fda54 -> intersection_6e7a2f.right\n\n        intersection_6e7a2f.intersect -> flatten_e2c6d7.items\n        flatten_e2c6d7.flattened -> reduce_7a7c4d.items\n\n        1 -> reduce_7a7c4d.initial_value\n        func() {\n            in(x: -35, y: -38, name: \"acc\") property(Number) acc_c07e82\n            in(x: -46, y: 10, name: \"item\") property(Number) item_bf9a8b\n\n            out(x: 36, y: 52, name: \"\") property(Number) _3f1c9a\n\n            instance(x: -4, y: 7) mul_0d56e5 root.Std_k98ojb.Math.Mul {}\n            acc_c07e82 -> mul_0d56e5.first\n            item_bf9a8b -> mul_0d56e5.second\n\n            mul_0d56e5.result -> _3f1c9a\n        } -> reduce_7a7c4d.reducer\n\n        flatten_e2c6d7.flattened -> list_empty_d9d4e2.list\n\n        list_empty_d9d4e2.isEmpty -> Std.If {\n            then: {\n                0 -> output_cffcc2\n            }\n            else: {\n                reduce_7a7c4d.result -> output_cffcc2\n            }\n        }\n\n        execute_19300c -> continue_45190b\n    }\n\n    instance(x: -68, y: 1) unique_product_eab1f3 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -91, y: -11) difference_4d85b8 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_4d85b8.left\n        list2_ai -> difference_4d85b8.right\n        instance(x: 607, y: -37) difference_7f9e1a root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_7f9e1a.left\n        list1_ai -> difference_7f9e1a.right\n        instance(x: 405, y: -36) concat_81d5ef root.Std_k98ojb.List.Concat {}\n        difference_4d85b8.difference -> concat_81d5ef.left\n        difference_7f9e1a.difference -> concat_81d5ef.right\n        concat_81d5ef.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 26, y: -43) find_dissimilar_b70bdf root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 149, y: -148) length_31b9d3 root.Std_k98ojb.List.Length {}\n        instance(x: 375, y: -168) modulo_83c4e7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 204, y: -321) sub_e7d0f1 root.Std_k98ojb.Math.Sub {}\n        instance(x: 517, y: -262) slice_68cd1c root.Std_k98ojb.List.Slice {}\n        instance(x: 749, y: -312) slice_c9d205 root.Std_k98ojb.List.Slice {}\n        instance(x: 1003, y: -206) concat_1860e4 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_31b9d3.list\n        length_31b9d3.length -> modulo_83c4e7.value\n        n_68068c -> modulo_83c4e7.divisor\n        modulo_83c4e7.result -> sub_e7d0f1.second\n        length_31b9d3.length -> sub_e7d0f1.first\n        sub_e7d0f1.result -> slice_c9d205.start\n        0 -> slice_c9d205.end\n        list_48148f -> slice_c9d205.list\n        sub_e7d0f1.result -> slice_68cd1c.start\n        -1 -> slice_68cd1c.end\n        list_48148f -> slice_68cd1c.list\n        slice_c9d205.slice -> concat_1860e4.left\n        slice_68cd1c.slice -> concat_1860e4.right\n        concat_1860e4.result -> output_823209\n    }\n\n    \n\n    instance(x: -275, y: -142) rotate_right_a0b4f6 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 29, y: -10) reduce_2e3b0d root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_2e3b0d.initialValue\n        list_2c62ab -> reduce_2e3b0d.items\n        func() {\n            in(x: -174, y: -52, name: \"accumulated\") property(Number) accumulated_a8f49a\n            in(x: -166, y: 20, name: \"current\") property(Number) current_7b30d4\n\n            out(x: 1074, y: -52, name: \"sum\") property(Number) sum_eed2f2\n\n            instance(x: 89, y: 1) add_b6d9c7 root.Std_k98ojb.Math.Add {}\n            accumulated_a8f49a -> add_b6d9c7.first\n            current_7b30d4 -> add_b6d9c7.second\n            add_b6d9c7.result -> sum_eed2f2\n        } -> reduce_2e3b0d.reducer\n        reduce_2e3b0d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -151, y: 94) _sum_6c7ae5 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 348, y: -186) lessthanorequal_b4f9d5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 625, y: -187) if_097c9a root.Std_k98ojb.Std.If {}\n        instance(x: 839, y: -184) lessthanorequal_b2e8d3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1053, y: -186) if_ea7bcf root.Std_k98ojb.Std.If {}\n        instance(x: 1443, y: -187) mod_272ec8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1509, y: -168) equal_e89c9e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1743, y: -184) if_2d8a2f root.Std_k98ojb.Std.If {}\n        instance(x: 2055, y: -186) add_c62af9 root.Std_k98ojb.Math.Add {}\n        instance(x: 2378, y: -184) if_1d4e2c root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_b4f9d5.left\n        1 -> lessthanorequal_b4f9d5.right\n        lessthanorequal_b4f9d5.result -> if_097c9a.predicate\n        if_097c9a.then -> output_c457b3\n        false -> output_c457b3\n        true -> if_097c9a.else\n        num_5c0677 -> lessthanorequal_b2e8d3.left\n        3 -> lessthanorequal_b2e8d3.right\n        lessthanorequal_b2e8d3.result -> if_ea7bcf.predicate\n        true -> output_c457b3\n        false -> if_ea7bcf.else\n        num_5c0677 -> mod_272ec8.value\n        2 -> mod_272ec8.divisor\n        mod_272ec8.result -> equal_e89c9e.left\n        0 -> equal_e89c9e.right\n        equal_e89c9e.result -> if_2d8a2f.predicate\n        false -> output_c457b3\n        true -> if_2d8a2f.else\n        num_5c0677 -> mod_272ec8.value\n        3 -> mod_272ec8.divisor\n        mod_272ec8.result -> equal_e89c9e.left\n        0 -> equal_e89c9e.right\n        equal_e89c9e.result -> if_1d4e2c.predicate\n        false -> output_c457b3\n        true -> if_1d4e2c.else\n        execute_b7b391 -> if_097c9a.execute\n        2 -> add_c62af9.first\n        1 -> add_c62af9.second\n        add_c62af9.result -> mod_272ec8.divisor\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c5b3d root.Std_k98ojb.Math.Mul {}\n        instance(x: 105, y: -219) less_than_zero_8f1e5a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c5b3d.first\n        y_5390f5 -> mul_2c5b3d.second\n        mul_2c5b3d.result -> less_than_zero_8f1e5a.left\n        0 -> less_than_zero_8f1e5a.right\n        less_than_zero_8f1e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_4d6b3c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5b2d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -24) equal_3c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5b2d1a.value\n        11 -> modulo_5b2d1a.divisor\n        modulo_5b2d1a.result -> equal_3c7e1b.left\n        0 -> equal_3c7e1b.right\n        equal_3c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 59) is_diff_15f9e9 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 210) tolower_4b1c7a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 475, y: 210) equal_3f6d8e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b1c7a.input\n        input_ai -> equal_3f6d8e.left\n        tolower_4b1c7a.output -> equal_3f6d8e.right\n        equal_3f6d8e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -290, y: 150) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(List) _e4f1b9\n\n                instance(x: 0, y: 0) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4f6a7c -> contains_node.list\n                item_3b2d89 -> contains_node.item\n                instance(x: 50, y: 0) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _e4f1b9\n                        acc_4f6a7c -> _e4f1b9\n                    }\n                    else: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _e4f1b9\n                        instance(x: 50, y: 0) add_node root.Std_k98ojb.List.Add {}\n                        acc_4f6a7c -> add_node.list\n                        item_3b2d89 -> add_node.item\n                        add_node.listWithItem -> _e4f1b9\n                    }\n                }\n                contains_node.contains -> if_node.input\n            }\n        }\n\n        instance(x: 0, y: 50) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(Number) _e4f1b9\n\n                instance(x: 0, y: 0) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4f6a7c -> mul_node.first\n                item_3b2d89 -> mul_node.second\n                mul_node.result -> _e4f1b9\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.result -> product_node.items\n        1 -> product_node.initial\n\n        product_node.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -114) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 136) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 37) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 37) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 45, y: -120) length_1b3a5f root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -120) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -120) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -120) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 590, y: -120) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 740, y: -120) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b3a5f.list\n        length_1b3a5f.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b3a5f.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        modulo_4e8c54.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_76ecda.slice -> concat_0234d2.left\n        slice_3f3ee6.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -157, y: -122) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -12) reduce_4d2b3e root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4d2b3e.initialValue\n        list_2c62ab -> reduce_4d2b3e.items\n        func() {\n            in(x: -175, y: -100, name: \"accumulated\") property(Number) accumulated_8f9a1b\n            in(x: -167, y: 25, name: \"current\") property(Number) current_3d4c9e\n\n            out(x: 1072, y: -93, name: \"sum\") property(Number) sum_8f9a1b\n\n            instance(x: 74, y: 2) add_658b3c root.Std_k98ojb.Math.Add {}\n            accumulated_8f9a1b -> add_658b3c.first\n            current_3d4c9e -> add_658b3c.second\n            add_658b3c.result -> sum_8f9a1b\n        } -> reduce_4d2b3e.reducer\n        reduce_4d2b3e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -272, y: 115) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6d6c5f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_2e1a8c root.Std_k98ojb.Std.If {}\n        instance(x: 144, y: -104) lessthanorequal_6d6c5f_1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 327, y: -104) if_2e1a8c_1 root.Std_k98ojb.Std.If {}\n        instance(x: 534, y: -104) lessthanorequal_6d6c5f_2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 741, y: -104) if_2e1a8c_2 root.Std_k98ojb.Std.If {}\n        instance(x: 948, y: -104) lessthanorequal_6d6c5f_3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1155, y: -104) if_2e1a8c_3 root.Std_k98ojb.Std.If {}\n        instance(x: 1362, y: -104) lessthanorequal_6d6c5f_4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1569, y: -104) if_2e1a8c_4 root.Std_k98ojb.Std.If {}\n        instance(x: 1776, y: -104) lessthanorequal_6d6c5f_5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1983, y: -104) if_2e1a8c_5 root.Std_k98ojb.Std.If {}\n        instance(x: 2190, y: -104) lessthanorequal_6d6c5f_6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2397, y: -104) if_2e1a8c_6 root.Std_k98ojb.Std.If {}\n        instance(x: 2604, y: -104) lessthanorequal_6d6c5f_7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2811, y: -104) if_2e1a8c_7 root.Std_k98ojb.Std.If {}\n        instance(x: 3018, y: -104) lessthanorequal_6d6c5f_8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3225, y: -104) if_2e1a8c_8 root.Std_k98ojb.Std.If {}\n        instance(x: 3432, y: -104) lessthanorequal_6d6c5f_9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3639, y: -104) if_2e1a8c_9 root.Std_k98ojb.Std.If {}\n        instance(x: 3846, y: -104) lessthanorequal_6d6c5f_10 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4053, y: -104) if_2e1a8c_10 root.Std_k98ojb.Std.If {}\n        instance(x: 4260, y: -104) lessthanorequal_6d6c5f_11 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4467, y: -104) if_2e1a8c_11 root.Std_k98ojb.Std.If {}\n        instance(x: 4674, y: -104) lessthanorequal_6d6c5f_12 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4881, y: -104) if_2e1a8c_12 root.Std_k98ojb.Std.If {}\n        instance(x: 5088, y: -104) lessthanorequal_6d6c5f_13 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5295, y: -104) if_2e1a8c_13 root.Std_k98ojb.Std.If {}\n        instance(x: 5502, y: -104) lessthanorequal_6d6c5f_14 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5709, y: -104) if_2e1a8c_14 root.Std_k98ojb.Std.If {}\n        instance(x: 5916, y: -104) lessthanorequal_6d6c5f_15 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6123, y: -104) if_2e1a8c_15 root.Std_k98ojb.Std.If {}\n        instance(x: 6330, y: -104) lessthanorequal_6d6c5f_16 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6537, y: -104) if_2e1a8c_16 root.Std_k98ojb.Std.If {}\n        instance(x: 6744, y: -104) lessthanorequal_6d6c5f_17 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6951, y: -104) if_2e1a8c_17 root.Std_k98ojb.Std.If {}\n        instance(x: 7158, y: -104) lessthanorequal_6d6c5f_18 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7365, y: -104) if_2e1a8c_18 root.Std_k98ojb.Std.If {}\n        instance(x: 7572, y: -104) lessthanorequal_6d6c5f_19 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7779, y: -104) if_2e1a8c_19 root.Std_k98ojb.Std.If {}\n        instance(x: 7986, y: -104) lessthanorequal_6d6c5f_20 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8193, y: -104) if_2e1a8c_20 root.Std_k98ojb.Std.If {}\n        instance(x: 8376, y: -104) lessthanorequal_6d6c5f_21 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8573, y: -104) if_2e1a8c_21 root.Std_k98ojb.Std.If {}\n        instance(x: 8770, y: -104) lessthanorequal_6d6c5f_22 root.Std_k98ojb.Math.L"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -468, y: -177) mul_4d3e2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 105, y: -220) lessThanZero_e2388f root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_4d3e2c.first\n        y_5390f5 -> mul_4d3e2c.second\n        mul_4d3e2c.result -> lessThanZero_e2388f.left\n        0 -> lessThanZero_e2388f.right\n        lessThanZero_e2388f.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -156, y: 47) opposite_signs_b3d4e7 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -16) modulo_5b2a0e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 307, y: -15) equal_c7c83d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b2a0e.value\n        11 -> modulo_5b2a0e.divisor\n        modulo_5b2a0e.result -> equal_c7c83d.left\n        0 -> equal_c7c83d.right\n        equal_c7c83d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -19, y: 4) is_diff_5b9a0e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 198) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 315, y: 178) tolower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 485, y: 132) equal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_node.input\n        input_ai -> equal_node.left\n        tolower_node.output -> equal_node.right\n        equal_node.value -> output_ai\n    }\n\n    \n    instance(x: -425, y: 209) is_lower_instance root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -428, y: 116) flatten_4f6c2a root.Std_k98ojb.List.Flatten {}\n        instance(x: -507, y: 32) filter_unique_2e4b1d root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -364, y: 32, name: \"item\") property(Number) item_1f6a1a\n            out(x: -207, y: 54, name: \"result\") property(Bool) result_ae9b1c\n\n            instance(x: -286, y: 53) contains_8a7b1d root.Std_k98ojb.List.Contains {}\n            item_1f6a1a -> contains_8a7b1d.item\n            filter_unique_2e4b1d.context -> contains_8a7b1d.list\n            instance(x: -105, y: 32) not_9c2b1d root.Std_k98ojb.Logic.Not {}\n            contains_8a7b1d.contains -> not_9c2b1d.input\n            not_9c2b1d.result -> result_ae9b1c\n        } -> filter_unique_2e4b1d.handler\n        list_5fda54 -> flatten_4f6c2a.items\n        flatten_4f6c2a.flattened -> filter_unique_2e4b1d.items\n        instance(x: 178, y: -3) reduce_product_b2c1d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -105, y: 32, name: \"acc\") property(Number) acc_1f6a1a\n            in(x: -364, y: 32, name: \"item\") property(Number) item_1f6a1b\n            out(x: -207, y: 54, name: \"result\") property(Number) result_ae9b1c\n\n            instance(x: -185, y: 32) mul_c2d1d root.Std_k98ojb.Math.Mul {}\n            acc_1f6a1a -> mul_c2d1d.first\n            item_1f6a1b -> mul_c2d1d.second\n            mul_c2d1d.result -> result_ae9b1c\n        } -> reduce_product_b2c1d.reducer\n        1 -> reduce_product_b2c1d.initial\n        filter_unique_2e4b1d.output_list -> reduce_product_b2c1d.items\n        reduce_product_b2c1d.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -56, y: -38) unique_product_7a9f1d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -324, y: -109) difference_5b3c3f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b3c3f.left\n        list2_ai -> difference_5b3c3f.right\n\n        instance(x: 67, y: -104) difference_8e2a21 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_8e2a21.left\n        list1_ai -> difference_8e2a21.right\n\n        instance(x: 367, y: -105) concat_a4f1c1 root.Std_k98ojb.List.Concat {}\n        difference_5b3c3f.difference -> concat_a4f1c1.left\n        difference_8e2a21.difference -> concat_a4f1c1.right\n\n        concat_a4f1c1.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: 50) find_dissimilar_b3b6c3 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 439, y: -224) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 659, y: -168) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 303, y: -155) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 173, y: -268) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 490, y: -153) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 735, y: -225) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> modulo_4e8c54.first\n        n_68068c -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_4b8927.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_3f3ee6.end\n        list_48148f -> slice_3f3ee6.list\n        modulo_4e8c54.result -> slice_76ecda.start\n        -1 -> slice_76ecda.end\n        list_48148f -> slice_76ecda.list\n        slice_76ecda.slice -> concat_0234d2.left\n        slice_3f3ee6.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -517, y: -115) rotate_right_cbc0b6 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 198, y: -20) reduce_3d2e4b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_3d2e4b.items\n        0 -> reduce_3d2e4b.initialValue\n        func() {\n            in(x: -175, y: -101, name: \"accumulated\") property(Number) accumulated_98f8c7\n            in(x: -169, y: 25, name: \"current\") property(Number) current_43b3d9\n\n            out(x: 1071, y: -101, name: \"sum\") property(Number) sum_a7f4c8\n\n            instance(x: 84, y: 12) add_5e6a52 root.Std_k98ojb.Math.Add {}\n            accumulated_98f8c7 -> add_5e6a52.first\n            current_43b3d9 -> add_5e6a52.second\n            add_5e6a52.result -> sum_a7f4c8\n        } -> reduce_3d2e4b.reducer\n        reduce_3d2e4b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -190, y: 10) _sum_52c6b1 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 204, y: -88) lessthanorequal_6c2f1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 379, y: -134) expression_b3e4d5 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 624, y: -136) if_4a5c9f root.Std_k98ojb.Std.If {}\n        instance(x: 773, y: -155) not_6e2d2f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1022, y: -154) and_8a329c root.Std_k98ojb.Logic.And {}\n        instance(x: 766, y: -278) for_42f6e7 root.Std_k98ojb.Std.For {}\n        instance(x: 503, y: -156) generaterange_a2a23d root.Std_k98ojb.List.GenerateRange {}\n\n        num_5c0677 -> lessthanorequal_6c2f1a.left\n        1 -> lessthanorequal_6c2f1a.right\n        lessthanorequal_6c2f1a.result -> not_6e2d2f.input\n        not_6e2d2f.output -> and_8a329c.left\n\n        num_5c0677 -> generaterange_a2a23d.to\n        2 -> generaterange_a2a23d.from\n        generaterange_a2a23d.list -> for_42f6e7.items\n\n        for_42f6e7.item -> expression_b3e4d5.gen_1\n        num_5c0677 -> expression_b3e4d5.gen_0\n        expression_b3e4d5.result -> if_4a5c9f.predicate\n\n        if_4a5c9f.then -> continue_9a54bb\n        false -> if_4a5c9f.else\n\n        for_42f6e7.onItem -> if_4a5c9f.execute\n        for_42f6e7.done -> and_8a329c.right\n\n        and_8a329c.result -> output_c457b3\n\n        execute_b7b391 -> for_42f6e7.reset\n    }\n\n    \n\n    instance(x: 10, y: -278) num_prime_e2f8d1 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -69, y: -174) mul_a5d83c root.Std_k98ojb.Math.Mul {}\n        instance(x: 205, y: -154) less_than_zero_f2b0e9 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_a5d83c.first\n        y_5390f5 -> mul_a5d83c.second\n        mul_a5d83c.result -> less_than_zero_f2b0e9.left\n        0 -> less_than_zero_f2b0e9.right\n        less_than_zero_f2b0e9.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -174, y: 56) opposite_signs_c487d3 root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 158, y: -24) modulo_c1a5d2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 387, y: -25) equal_68323c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_c1a5d2.value\n        11 -> modulo_c1a5d2.divisor\n        modulo_c1a5d2.result -> equal_68323c.left\n        0 -> equal_68323c.right\n        equal_68323c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 7) is_diff_49a3d4 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 490, y: 270) replace_2a8d1f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2a8d1f.input\n        search_ai -> replace_2a8d1f.search\n        replace_ai -> replace_2a8d1f.replace\n        replace_2a8d1f.output -> output_ai\n    }\n\n    \n\n    instance(x: -50, y: 367) replace_char_9e5b6c root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -250, y: 270) tolower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 150, y: 180) equal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_node.input\n        tolower_node.output -> equal_node.left\n        input_ai -> equal_node.right\n\n        equal_node.equal -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 46, y: -105) reduce_b1a0d5 root.Std_k98ojb.Iteration.Reduce {}\n        list_5fda54 -> reduce_b1a0d5.items\n        func() {\n            in(x: -117, y: -27, name: \"acc\") property(Number) acc_c3e69c\n            in(x: 84, y: -21, name: \"val\") property(Number) val_507f6b\n\n            out(x: 259, y: -32, name: \"result\") property(Number) result_b5a738\n\n            instance(x: 116, y: -20) mul_e4e067 root.Std_k98ojb.Math.Mul {}\n            acc_c3e69c -> mul_e4e067.first\n            val_507f6b -> mul_e4e067.second\n            mul_e4e067.result -> result_b5a738\n        } -> reduce_b1a0d5.reducer\n        1 -> reduce_b1a0d5.initial_value\n        instance(x: -208, y: -98) flatten_9d2c78 root.Std_k98ojb.List.Flatten {}\n        instance(x: -346, y: -98) unique_12e259 root.Std_k98ojb.Query.Filter {}\n        list_5fda54 -> unique_12e259.list\n        func() {\n            in(x: -405, y: -74, name: \"item\") property(Number) item_d6c73a\n\n            out(x: -286, y: -73, name: \"\") property(Bool) _41b1e9\n\n            instance(x: -285, y: -106) contains_7d3b01 root.Std_k98ojb.List.Contains {}\n            flatten_9d2c78.flattened -> contains_7d3b01.list\n            item_d6c73a -> contains_7d3b01.item\n            instance(x: -257, y: -74) not_45e3f6 root.Std_k98ojb.Logic.Not {}\n            contains_7d3b01.contains -> not_45e3f6.input\n            not_45e3f6.result -> _41b1e9\n        } -> unique_12e259.where\n        instance(x: -485, y: -108) listempty_b17a88 root.Std_k98ojb.List.IsEmpty {}\n        list_5fda54 -> listempty_b17a88.list\n        instance(x: 169, y: -23) if_a82c7e root.Std_k98ojb.Std.If {\n            condition: true\n        }\n        listempty_b17a88.isEmpty -> if_a82c7e.input\n        func() {\n            1 -> output_cffcc2\n        } -> if_a82c7e.then\n        instance(x: -360, y: -94) concat_538b28 root.Std_k98ojb.List.Concat {}\n        unique_12e259.result -> concat_538b28.left\n        data_instance(x: -273, y: -103) empty_list_a6f68a  = []\n        empty_list_a6f68a -> concat_538b28.right\n        concat_538b28.result -> flatten_9d2c78.items\n        reduce_b1a0d5.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 41, y: -67) unique_product_f0a5f7 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -90, y: -11) difference_3f6c54 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3f6c54.left\n        list2_ai -> difference_3f6c54.right\n        instance(x: 473, y: -13) difference_7e20a9 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_7e20a9.left\n        list1_ai -> difference_7e20a9.right\n        instance(x: 465, y: 134) concat_a0f2a1 root.Std_k98ojb.List.Concat {}\n        difference_3f6c54.difference -> concat_a0f2a1.list1\n        difference_7e20a9.difference -> concat_a0f2a1.list2\n        concat_a0f2a1.concatenatedList -> output_ai\n    }\n\n    \n\n    instance(x: -38, y: 46) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -20, y: -142) length_9a7d9b root.Std_k98ojb.List.Length {}\n        instance(x: 168, y: -141) modulo_b3c5e6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 304, y: -204) slice_3476f8 root.Std_k98ojb.List.Slice {}\n        instance(x: 314, y: 137) slice_e47a5d root.Std_k98ojb.List.Slice {}\n        instance(x: 525, y: -115) concat_0e4356 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_9a7d9b.list\n        length_9a7d9b.length -> modulo_b3c5e6.divisor\n        n_68068c -> modulo_b3c5e6.value\n        modulo_b3c5e6.result -> slice_e47a5d.start\n\n        list_48148f -> slice_3476f8.list\n        0 -> slice_3476f8.start\n        slice_e47a5d.start -> slice_3476f8.end\n\n        list_48148f -> slice_e47a5d.list\n        -1 -> slice_e47a5d.end\n\n        slice_3476f8.slice -> concat_0e4356.left\n        slice_e47a5d.slice -> concat_0e4356.right\n\n        concat_0e4356.result -> output_823209\n    }\n\n    instance(x: 10, y: -177) rotate_right_f1b3c2 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 324, y: -10) reduce_39d52e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_39d52e.items\n        0 -> reduce_39d52e.initialValue\n        func() {\n            in(x: -164, y: -73, name: \"accumulated\") property(Number) accumulated_ba228b\n            in(x: -176, y: 19, name: \"current\") property(Number) current_2d045a\n\n            out(x: 922, y: -83, name: \"sum\") property(Number) sum_93424e\n\n            instance(x: 370, y: -16) add_d5b631 root.Std_k98ojb.Math.Add {}\n            accumulated_ba228b -> add_d5b631.first\n            current_2d045a -> add_d5b631.second\n            add_d5b631.result -> sum_93424e\n        } -> reduce_39d52e.reducer\n        reduce_39d52e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -17, y: 104) _sum_1c416c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 41, y: -188) lessthanorequal_bf64e2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 232, y: -74) expression_c2c3d9 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 165, y: -340) mathfloor_a5a82c root.Std_k98ojb.Math.Floor {}\n        instance(x: 373, y: -438) squareroot_4e0f3d root.Std_k98ojb.Math.Pow {\n            power: 0.5\n        }\n        instance(x: 412, y: -193) greaterthan_e6a2d6 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 739, y: -375) and_f358e8 root.Std_k98ojb.Logic.And {}\n        instance(x: 412, y: -309) if_4d3a6a root.Std_k98ojb.Std.If {}\n        instance(x: 766, y: -347) ifexpression_e25f0e root.Std_k98ojb.Std.IfExpression {\n            expression: \"i > sqrt\"\n        }\n        instance(x: 1164, y: -211) and_8c78d1 root.Std_k98ojb.Logic.And {}\n        instance(x: 1345, y: -309) if_91a8e4 root.Std_k98ojb.Std.If {}\n        instance(x: 654, y: -522) for_e7d749 root.Std_k98ojb.Std.For {}\n        instance(x: 1018, y: -428) add_f3a64c root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> squareroot_4e0f3d.base\n        squareroot_4e0f3d.result -> mathfloor_a5a82c.input\n        mathfloor_a5a82c.result -> greaterthan_e6a2d6.right\n        1 -> greaterthan_e6a2d6.left\n        greaterthan_e6a2d6.result -> if_4d3a6a.predicate\n        execute_b7b391 -> for_e7d749.reset\n\n        num_5c0677 -> lessthanorequal_bf64e2.right\n        2 -> lessthanorequal_bf64e2.left\n        lessthanorequal_bf64e2.result -> ifexpression_e25f0e.value\n\n        ifexpression_e25f0e.then -> continue_9a54bb\n        ifexpression_e25f0e.else -> if_4d3a6a.execute\n        if_4d3a6a.then -> output_c457b3\n        if_4d3a6a.value -> output_c457b3\n\n        for_e7d749.item -> expression_c2c3d9.gen_1\n        num_5c0677 -> expression_c2c3d9.gen_0\n        mathfloor_a5a82c.result -> add_f3a64c.first\n        1 -> add_f3a64c.second\n\n        expression_c2c3d9.result -> and_8c78d1.left\n        add_f3a64c.result -> ifexpression_e25f0e.gen_0\n\n        and_8c78d1.right -> if_91a8e4.predicate\n        and_8c78d1.value -> output_c457b3\n        if_91a8e4.then -> continue_9a54bb\n        if_91a8e4.else -> for_e7d749.next\n\n        2 -> for_e7d749.items\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c8d5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5c root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c8d5b.first\n        y_5390f5 -> mul_2c8d5b.second\n        mul_2c8d5b.result -> less_than_zero_8f1e5c.left\n        0 -> less_than_zero_8f1e5c.right\n        less_than_zero_8f1e5c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_8b3d8a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5d3b9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -24) equal_8c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5d3b9a.value\n        11 -> modulo_5d3b9a.divisor\n        modulo_5d3b9a.result -> equal_8c7e1b.left\n        0 -> equal_8c7e1b.right\n        equal_8c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 15) is_diff_9a2d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 210) tolower_4a2b3c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 475, y: 210) equal_6d7e8f root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a2b3c.input\n        input_ai -> equal_6d7e8f.left\n        tolower_4a2b3c.output -> equal_6d7e8f.right\n        equal_6d7e8f.equal -> output_ai\n    }\n\n    \n\n    instance(x: -100, y: 150) is_lower_instance root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n\n                instance(x: 0, y: 0) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4f6a7c -> contains_node.list\n                item_3b2d89 -> contains_node.item\n                instance(x: 100, y: -50) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n                        acc_4f6a7c -> _4e5b8c\n                    }\n                    else: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n                        instance(x: 0, y: 0) add_node root.Std_k98ojb.List.Add {}\n                        acc_4f6a7c -> add_node.list\n                        item_3b2d89 -> add_node.item\n                        add_node.listWithItem -> _4e5b8c\n                    }\n                }\n                contains_node.contains -> if_node.input\n            }\n        }\n\n        instance(x: 100, y: 100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(Number) _4e5b8c\n\n                instance(x: 0, y: 0) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4f6a7c -> mul_node.first\n                item_3b2d89 -> mul_node.second\n                mul_node.result -> _4e5b8c\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -114) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 136) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 37) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 37) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 45, y: -120) length_1b2d3a root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -120) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -120) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -120) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 590, y: -120) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 740, y: -120) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2d3a.list\n        length_1b2d3a.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b2d3a.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        modulo_4e8c54.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -120) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -12) reduce_4b2d8e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4b2d8e.items\n        0 -> reduce_4b2d8e.initialValue\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_9f1a2c\n            in(x: -167, y: 22, name: \"current\") property(Number) current_8d0b1e\n\n            out(x: 1052, y: -34, name: \"sum\") property(Number) sum_9f1a2c\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1a2c -> add_6e8af5.first\n            current_8d0b1e -> add_6e8af5.second\n            add_6e8af5.result -> sum_9f1a2c\n        } -> reduce_4b2d8e.reducer\n        reduce_4b2d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -307, y: 16) _sum_5d3c9a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6c5d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_228a8c root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -104) lessthanorequal_f5d6e8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -240) if_8c5f8a root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -240) lessthanorequal_4e1d8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -356) if_4a8f8c root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -356) lessthanorequal_1d8e8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -472) if_ea8f8c root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -472) lessthanorequal_1d8e8c_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -588) if_ea8f8c_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -588) lessthanorequal_1d8e8c_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -704) if_ea8f8c_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -704) lessthanorequal_1d8e8c_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -820) if_ea8f8c_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -820) lessthanorequal_1d8e8c_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -936) if_ea8f8c_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -936) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1052) if_ea8f8c_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1052) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1168) if_ea8f8c_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1168) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1284) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1284) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1400) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1400) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1516) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1516) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1632) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1632) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1748) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1748) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1864) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1864) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1980) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1980) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -2096) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -2096) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -2212) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -2212) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -2328) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -2328) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -2444) if_ea"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -468, y: -177) mul_4c35e8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 201, y: -220) lessThanZero_c2419d root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_4c35e8.first\n        y_5390f5 -> mul_4c35e8.second\n        mul_4c35e8.result -> lessThanZero_c2419d.left\n        0 -> lessThanZero_c2419d.right\n        lessThanZero_c2419d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -367, y: 5) opposite_signs_8c7b29 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -16) modulo_5b2a5e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 307, y: -15) equal_e41d6c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b2a5e.value\n        11 -> modulo_5b2a5e.divisor\n        modulo_5b2a5e.result -> equal_e41d6c.left\n        0 -> equal_e41d6c.right\n        equal_e41d6c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -97, y: 8) is_diff_485a7e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 198) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 315, y: 178) tolower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 485, y: 132) isequal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_node.input\n        input_ai -> isequal_node.left\n        tolower_node.output -> isequal_node.right\n        isequal_node.equal -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -428, y: 116) flatten_4e5d5a root.Std_k98ojb.List.Flatten {}\n        instance(x: -406, y: -37) filter_4d6f9c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -200, y: 116) reduce_5a8e31 root.Std_k98ojb.Iteration.Reduce {}\n\n        func() {\n            in(x: -278, y: 45, name: \"item\") property(Number) item_4c2f42\n            out(x: 106, y: 38, name: \"\") property(Bool) _9e8d5b\n\n            instance(x: -135, y: 37) contains_5b9a18 root.Std_k98ojb.List.Contains {}\n            flatten_4e5d5a.flattened -> contains_5b9a18.list\n            item_4c2f42 -> contains_5b9a18.item\n            instance(x: -73, y: 68) not_860584 root.Std_k98ojb.Logic.Not {}\n            contains_5b9a18.contains -> not_860584.input\n            not_860584.result -> _9e8d5b\n        } -> filter_4d6f9c.handler\n\n        func() {\n            in(x: -237, y: 39, name: \"acc\") property(Number) acc_1a324b\n            in(x: -209, y: 88, name: \"item\") property(Number) item_b53d8f\n\n            out(x: 67, y: 69, name: \"\") property(Number) _462c89\n\n            instance(x: -118, y: 60) mul_837b1a root.Std_k98ojb.Math.Mul {}\n            acc_1a324b -> mul_837b1a.first\n            item_b53d8f -> mul_837b1a.second\n            mul_837b1a.result -> _462c89\n        } -> reduce_5a8e31.reducer\n\n        execute_19300c -> filter_4d6f9c.trigger\n        list_5fda54 -> flatten_4e5d5a.items\n        list_5fda54 -> filter_4d6f9c.items\n        filter_4d6f9c.output_list -> reduce_5a8e31.items\n        1 -> reduce_5a8e31.initial_value\n        reduce_5a8e31.accumulated_value -> output_cffcc2\n        reduce_5a8e31.done -> continue_45190b\n    }\n\n    instance(x: -67, y: 4) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -324, y: -109) difference_5b3c1f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b3c1f.left\n        list2_ai -> difference_5b3c1f.right\n\n        instance(x: 67, y: -109) difference_4b3d2e root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_4b3d2e.left\n        list1_ai -> difference_4b3d2e.right\n\n        instance(x: 176, y: -50) concat_c3a4b5 root.Std_k98ojb.List.Concat {}\n        difference_5b3c1f.difference -> concat_c3a4b5.left\n        difference_4b3d2e.difference -> concat_c3a4b5.right\n\n        concat_c3a4b5.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -98, y: 60) find_dissimilar_1b2c3d root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 439, y: -224) length_4d34b2 root.Std_k98ojb.List.Length {}\n        instance(x: 657, y: -182) modulo_9f3a34 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 905, y: -223) sub_8d2c5e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1076, y: -221) slice_a4f26a root.Std_k98ojb.List.Slice {}\n        instance(x: 1077, y: -131) slice_8c521e root.Std_k98ojb.List.Slice {}\n        instance(x: 1286, y: -164) concat_8266f9 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4d34b2.list\n        length_4d34b2.length -> modulo_9f3a34.first\n        n_68068c -> modulo_9f3a34.divisor\n        modulo_9f3a34.result -> sub_8d2c5e.second\n        length_4d34b2.length -> sub_8d2c5e.first\n        sub_8d2c5e.result -> slice_a4f26a.start\n        0 -> slice_a4f26a.end\n        list_48148f -> slice_a4f26a.list\n        modulo_9f3a34.result -> slice_8c521e.start\n        -1 -> slice_8c521e.end\n        list_48148f -> slice_8c521e.list\n        slice_a4f26a.slice -> concat_8266f9.right\n        slice_8c521e.slice -> concat_8266f9.left\n        concat_8266f9.result -> output_823209\n    }\n\n    \n\n    instance(x: -427, y: -120) rotate_right_c4a3d7 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 198, y: -20) reduce_3d2a7b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_3d2a7b.items\n        0 -> reduce_3d2a7b.initialValue\n        func() {\n            in(x: -154, y: -13, name: \"accumulated\") property(Number) accumulated_b9d83a\n            in(x: -163, y: 20, name: \"current\") property(Number) current_7f3b1c\n\n            out(x: 1059, y: -4, name: \"sum\") property(Number) sum_f4c3d8\n\n            instance(x: 91, y: 1) add_e6e42a root.Std_k98ojb.Math.Add {}\n            accumulated_b9d83a -> add_e6e42a.first\n            current_7f3b1c -> add_e6e42a.second\n            add_e6e42a.result -> sum_f4c3d8\n        } -> reduce_3d2a7b.reducer\n        reduce_3d2a7b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -190, y: 55) _sum_13d6c1 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 204, y: -88) lessthanorequal_6f2c88 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 371, y: -154) expression_b4469d root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 264, y: -263) if_4a5f5c root.Std_k98ojb.Std.If {}\n        instance(x: 117, y: -259) for_f9d202 root.Std_k98ojb.Std.For {}\n        instance(x: 187, y: -368) floordiv_4a8f32 root.Std_k98ojb.Math.Floor {}\n        instance(x: 127, y: -530) mathexpression_2c30e7 root.Std_k98ojb.Math.Expression {\n            expression: \"sqrt(num)\"\n        }\n        lessthanorequal_6f2c88.result -> if_4a5f5c.predicate\n        execute_b7b391 -> for_f9d202.reset\n        num_5c0677 -> mathexpression_2c30e7.gen_0\n        mathexpression_2c30e7.result -> floordiv_4a8f32.input\n        2 -> floordiv_4a8f32.divisor\n        floordiv_4a8f32.result -> for_f9d202.items\n        num_5c0677 -> lessthanorequal_6f2c88.left\n        1 -> lessthanorequal_6f2c88.right\n        expression_b4469d.result -> if_4a5f5c.predicate\n        for_f9d202.item -> expression_b4469d.gen_1\n        num_5c0677 -> expression_b4469d.gen_0\n        if_4a5f5c.then -> continue_9a54bb\n        if_4a5f5c.else -> for_f9d202.next\n        for_f9d202.done -> output_c457b3\n    }\n\n    \n\n    instance(x: 18, y: -164) num_prime_8e5158 root.main.num_prime {}\n\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -69, y: -174) mul_a3c8f8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 152, y: -159) less_than_zero_c50b2a root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_a3c8f8.first\n        y_5390f5 -> mul_a3c8f8.second\n        mul_a3c8f8.result -> less_than_zero_c50b2a.left\n        0 -> less_than_zero_c50b2a.right\n        less_than_zero_c50b2a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -174, y: 6) opposite_signs_fd78ce root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 158, y: -24) modulo_b5b81a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 387, y: -25) equal_1335b9 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_b5b81a.value\n        11 -> modulo_b5b81a.divisor\n        modulo_b5b81a.result -> equal_1335b9.left\n        0 -> equal_1335b9.right\n        equal_1335b9.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 7) is_diff_a1e2df root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 490, y: 270) replace_49e40f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_49e40f.input\n        search_ai -> replace_49e40f.search\n        replace_ai -> replace_49e40f.replace\n        replace_49e40f.output -> output_ai\n    }\n\n    \n\n    instance(x: -86, y: 270) replace_char_1d5c4a root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -256, y: 274) tolower_2c1f8e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 290, y: 326) equal_b9d40a root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_2c1f8e.input\n        input_ai -> equal_b9d40a.left\n        tolower_2c1f8e.output -> equal_b9d40a.right\n        equal_b9d40a.equal -> output_ai\n    }\n\n    \n    instance(x: -63, y: 75) is_lower_8b2448 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 46, y: -105) reduce_d1a6c8 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> reduce_d1a6c8.initial_value\n        func() {\n            in(x: -175, y: -28, name: \"acc\") property(Number) acc_4603f9\n            in(x: -115, y: -5, name: \"current\") property(Number) current_eb813c\n\n            out(x: 302, y: -32, name: \"\") property(Number) _a765b1\n\n            instance(x: 139, y: -44) mul_0ee5d2 root.Std_k98ojb.Math.Mul {}\n            acc_4603f9 -> mul_0ee5d2.first\n            current_eb813c -> mul_0ee5d2.second\n            mul_0ee5d2.result -> _a765b1\n        } -> reduce_d1a6c8.reducer\n\n        instance(x: 46, y: -176) unique_f090ba root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_f090ba.left\n        instance(x: 46, y: -236) flatten_e2a0c5 root.Std_k98ojb.List.Flatten {}\n\n        execute_19300c -> reduce_d1a6c8.trigger\n\n        func() {\n            in(x: -175, y: -28, name: \"item\") property(Number) item_ca3e1f\n            out(x: 302, y: -32, name: \"\") property(List) _44f9a6\n\n            instance(x: 100, y: -44) filter_b5b7c8 root.Std_k98ojb.Query.Filter {}\n            list_5fda54 -> filter_b5b7c8.list\n            func() {\n                in(x: -175, y: -28, name: \"it\") property(Number) it_d6a350\n\n                out(x: 302, y: -32, name: \"\") property(Bool) _44f9a6\n\n                instance(x: 100, y: -75) notequal_8b1d99 root.Std_k98ojb.Logic.NotEqual {}\n                item_ca3e1f -> notequal_8b1d99.right\n                it_d6a350 -> notequal_8b1d99.left\n                notequal_8b1d99.result -> _44f9a6\n            } -> filter_b5b7c8.where\n            filter_b5b7c8.result -> flatten_e2a0c5.items\n        } :> unique_f090ba.right\n\n        reduce_d1a6c8.trigger\n        flatten_e2a0c5.flattened -> unique_f090ba.left\n        unique_f090ba.difference -> reduce_d1a6c8.items\n\n        reduce_d1a6c8.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 437, y: -41) unique_product_3f1f5b root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -91, y: -11) difference_3f9a57 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3f9a57.left\n        list2_ai -> difference_3f9a57.right\n        instance(x: 301, y: -10) difference_643c9d root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_643c9d.left\n        list1_ai -> difference_643c9d.right\n        instance(x: 571, y: -10) concat_86e88a root.Std_k98ojb.List.Concat {}\n        difference_3f9a57.difference -> concat_86e88a.list1\n        difference_643c9d.difference -> concat_86e88a.list2\n        concat_86e88a.concatenatedList -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 76) find_dissimilar_c9ae1f root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -20, y: -142) length_cde34f root.Std_k98ojb.List.Length {}\n        instance(x: 367, y: -128) mod_f9c45d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 140, y: -143) sub_937ccf root.Std_k98ojb.Math.Sub {}\n        instance(x: 265, y: -187) slice_ae790d root.Std_k98ojb.List.Slice {}\n        instance(x: 127, y: -41) slice_02310b root.Std_k98ojb.List.Slice {}\n        instance(x: 456, y: -127) concat_df2f02 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_cde34f.list\n        length_cde34f.length -> mod_f9c45d.divisor\n        n_68068c -> mod_f9c45d.value\n        mod_f9c45d.result -> sub_937ccf.first\n        length_cde34f.length -> sub_937ccf.second\n        sub_937ccf.result -> slice_ae790d.start\n        0 -> slice_ae790d.end\n        list_48148f -> slice_ae790d.list\n\n        mod_f9c45d.result -> slice_02310b.start\n        -1 -> slice_02310b.end\n        list_48148f -> slice_02310b.list\n\n        slice_ae790d.slice -> concat_df2f02.left\n        slice_02310b.slice -> concat_df2f02.right\n        concat_df2f02.result -> output_823209\n    }\n\n    \n\n    instance(x: -54, y: -65) rotate_right_ae2a4d root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 322, y: -10) reduce_3f9d9b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_3f9d9b.items\n        0 -> reduce_3f9d9b.initialValue\n        func() {\n            in(x: -177, y: -15, name: \"accumulated\") property(Number) accumulated_a5a4e2\n            in(x: -168, y: 12, name: \"current\") property(Any) current_0a3ebf\n\n            out(x: 973, y: -12, name: \"sum\") property(Number) sum_db83be\n\n            instance(x: 454, y: 12) add_a90e6d root.Std_k98ojb.Math.Add {}\n            accumulated_a5a4e2 -> add_a90e6d.first\n            current_0a3ebf -> add_a90e6d.second\n            add_a90e6d.result -> sum_db83be\n        } -> reduce_3f9d9b.reducer\n        reduce_3f9d9b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 51, y: -7) _sum_aaa03d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 41, y: -188) lessthanorequal_b1d7e8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 623, y: -307) and_a05c2a root.Std_k98ojb.Logic.And {}\n        instance(x: 148, y: -329) lessthanorequal_9d00e9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 276, y: -549) mathexpression_df6f49 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 335, y: -172) mathexpression_a4a8d8 root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i) <= num\"\n        }\n        instance(x: 376, y: -131) stdif_0c95ae root.Std_k98ojb.Std.If {}\n        instance(x: 426, y: -392) mathexpression_a8f717 root.Std_k98ojb.Math.Expression {\n            expression: \"num > 1\"\n        }\n        instance(x: 520, y: -182) for_76c31e root.Std_k98ojb.Std.For {}\n        instance(x: 545, y: -298) stdif_f4bb9a root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> mathexpression_a8f717.gen_0\n        mathexpression_a8f717.result -> and_a05c2a.left\n        2 -> lessthanorequal_b1d7e8.right\n        num_5c0677 -> lessthanorequal_b1d7e8.left\n        lessthanorequal_b1d7e8.result -> and_a05c2a.right\n        and_a05c2a.result -> stdif_0c95ae.input\n        2 -> for_76c31e.index\n        num_5c0677 -> mathexpression_a4a8d8.gen_0\n        for_76c31e.item -> mathexpression_a4a8d8.gen_1\n        mathexpression_a4a8d8.result -> stdif_f4bb9a.input\n        for_76c31e.item -> mathexpression_df6f49.gen_0\n        num_5c0677 -> mathexpression_df6f49.gen_1\n        mathexpression_df6f49.result -> stdif_f4bb9a.predicate\n        stdif_f4bb9a.then -> continue_9a54bb\n        for_76c31e.items -> list_ec88cd.list\n        stdif_0c95ae.then -> for_76c31e.trigger\n        2 -> for_76c31e.item\n        for_76c31e.next -> mathexpression_a4a8d8.execute\n        for_76c31e.done -> output_c457b3\n        stdif_f4bb9a.else -> and_a05c2a.right\n        for_76c31e.onItem -> mathexpression_df6f49.execute\n        execute_b7b391 -> stdif_0c95ae.execute\n    }\n\n    \n\n    instance(x: 48, y: -131) num_prime_fc79d5 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -247) mul_2c8d5b root.Std_k98ojb.Math.Mul {}\n        instance(x: 108, y: -219) less_than_zero_8f1e5c root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_2c8d5b.first\n        y_5390f5 -> mul_2c8d5b.second\n        mul_2c8d5b.result -> less_than_zero_8f1e5c.left\n        0 -> less_than_zero_8f1e5c.right\n        less_than_zero_8f1e5c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -246, y: 7) opposite_signs_8b3d8a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -24) modulo_5d3b9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -24) equal_8c7e1b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5d3b9a.value\n        11 -> modulo_5d3b9a.divisor\n        modulo_5d3b9a.result -> equal_8c7e1b.left\n        0 -> equal_8c7e1b.right\n        equal_8c7e1b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: 15) is_diff_9a2d3b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 210) tolower_4a2b3c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 475, y: 210) equal_6d7e8f root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4a2b3c.input\n        input_ai -> equal_6d7e8f.left\n        tolower_4a2b3c.output -> equal_6d7e8f.right\n        equal_6d7e8f.equal -> output_ai\n    }\n\n    \n\n    instance(x: -100, y: 150) is_lower_instance root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: -100) unique_list_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(List) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n\n                instance(x: 0, y: 0) contains_node root.Std_k98ojb.List.Contains {}\n                acc_4f6a7c -> contains_node.list\n                item_3b2d89 -> contains_node.item\n                instance(x: 100, y: -50) if_node root.Std_k98ojb.Std.If {\n                    then: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n                        acc_4f6a7c -> _4e5b8c\n                    }\n                    else: func() {\n                        out(x: 100, y: 0, name: \"\") property(List) _4e5b8c\n                        instance(x: 0, y: 0) add_node root.Std_k98ojb.List.Add {}\n                        acc_4f6a7c -> add_node.list\n                        item_3b2d89 -> add_node.item\n                        add_node.listWithItem -> _4e5b8c\n                    }\n                }\n                contains_node.contains -> if_node.input\n            }\n        }\n\n        instance(x: 100, y: 100) product_node root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -50, y: 0, name: \"acc\") property(Number) acc_4f6a7c\n                in(x: -50, y: 50, name: \"item\") property(Number) item_3b2d89\n\n                out(x: 100, y: 0, name: \"\") property(Number) _4e5b8c\n\n                instance(x: 0, y: 0) mul_node root.Std_k98ojb.Math.Mul {}\n                acc_4f6a7c -> mul_node.first\n                item_3b2d89 -> mul_node.second\n                mul_node.result -> _4e5b8c\n            }\n        }\n\n        execute_19300c -> unique_list_node.trigger\n        list_5fda54 -> unique_list_node.items\n        List.Empty() -> unique_list_node.initial\n\n        unique_list_node.accumulated -> product_node.items\n        1 -> product_node.initial\n\n        product_node.accumulated -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    instance(x: -757, y: -167) unique_product_instance root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: -114) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 136) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 37) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -40, y: 37) find_dissimilar_instance root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 45, y: -120) length_1b2d3a root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -120) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -120) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 467, y: -120) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 590, y: -120) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 740, y: -120) concat_0234d2 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1b2d3a.list\n        length_1b2d3a.length -> modulo_4e8c54.divisor\n        n_68068c -> modulo_4e8c54.value\n        modulo_4e8c54.result -> sub_f133b2.second\n        length_1b2d3a.length -> sub_f133b2.first\n        sub_f133b2.result -> slice_3f3ee6.start\n        0 -> slice_76ecda.start\n        modulo_4e8c54.result -> slice_76ecda.end\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_76ecda.list\n        -1 -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -120) rotate_right_72ef29 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -12) reduce_4b2d8e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_4b2d8e.items\n        0 -> reduce_4b2d8e.initialValue\n        func() {\n            in(x: -175, y: -34, name: \"accumulated\") property(Number) accumulated_9f1a2c\n            in(x: -167, y: 22, name: \"current\") property(Number) current_8d0b1e\n\n            out(x: 1052, y: -34, name: \"sum\") property(Number) sum_9f1a2c\n\n            instance(x: 74, y: 2) add_6e8af5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1a2c -> add_6e8af5.first\n            current_8d0b1e -> add_6e8af5.second\n            add_6e8af5.result -> sum_9f1a2c\n        } -> reduce_4b2d8e.reducer\n        reduce_4b2d8e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -307, y: 16) _sum_5d3c9a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -124) lessthanorequal_6c5d8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -104) if_228a8c root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -104) lessthanorequal_f5d6e8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -240) if_8c5f8a root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -240) lessthanorequal_4e1d8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -356) if_4a8f8c root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -356) lessthanorequal_1d8e8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -472) if_ea8f8c root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -472) lessthanorequal_1d8e8c_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -588) if_ea8f8c_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -588) lessthanorequal_1d8e8c_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -704) if_ea8f8c_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -704) lessthanorequal_1d8e8c_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -820) if_ea8f8c_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -820) lessthanorequal_1d8e8c_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -936) if_ea8f8c_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -936) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1052) if_ea8f8c_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1052) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1168) if_ea8f8c_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1168) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1284) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1284) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1400) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1400) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1516) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1516) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1632) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1632) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1748) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1748) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1864) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1864) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -1980) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -1980) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -2096) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -2096) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -2212) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -2212) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -2328) if_ea8f8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Std.If {}\n        instance(x: 208, y: -2328) lessthanorequal_1d8e8c_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy_copy root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 37, y: -2444) if_ea"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -468, y: -177) mul_4c35e8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 201, y: -220) lessThanZero_c2476d root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_4c35e8.first\n        y_5390f5 -> mul_4c35e8.second\n        mul_4c35e8.result -> lessThanZero_c2476d.left\n        0 -> lessThanZero_c2476d.right\n        lessThanZero_c2476d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -168, y: 54) opposite_signs_4c7b12 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 143, y: -16) modulo_5b2a5e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 307, y: -15) equal_e41d6c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b2a5e.value\n        11 -> modulo_5b2a5e.divisor\n        modulo_5b2a5e.result -> equal_e41d6c.left\n        0 -> equal_e41d6c.right\n        equal_e41d6c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -97, y: 8) is_diff_485a7e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 198) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 315, y: 178) tolower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 485, y: 132) isequal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_node.input\n        input_ai -> isequal_node.left\n        tolower_node.output -> isequal_node.right\n        isequal_node.equal -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -428, y: 116) flatten_4e5d5a root.Std_k98ojb.List.Flatten {}\n        instance(x: -406, y: -37) reduce_a1f2a7 root.Std_k98ojb.Iteration.Reduce {\n            handler: func() {\n                in(x: 20, y: 25, name: \"acc\") property(Number) acc_8c1e24\n                in(x: 163, y: 24, name: \"it\") property(Number) it_e97f0b\n\n                out(x: 255, y: 25, name: \"\") property(Number) _1d8201\n\n                instance(x: 145, y: 30) mul_22c68a root.Std_k98ojb.Math.Mul {}\n                acc_8c1e24 -> mul_22c68a.first\n                it_e97f0b -> mul_22c68a.second\n                mul_22c68a.result -> _1d8201\n            }\n        }\n        instance(x: -583, y: 46) set_difference_2059ca root.Std_k98ojb.Sets.Difference {}\n        instance(x: -714, y: 47) flatten_3e1c8f root.Std_k98ojb.List.Flatten {}\n\n        execute_19300c -> flatten_3e1c8f.trigger\n        list_5fda54 -> set_difference_2059ca.left\n        list_5fda54 -> flatten_3e1c8f.items\n        flatten_3e1c8f.flattened -> set_difference_2059ca.right\n        set_difference_2059ca.difference -> flatten_4e5d5a.items\n        flatten_4e5d5a.flattened -> reduce_a1f2a7.items\n        1 -> reduce_a1f2a7.initial_value\n        reduce_a1f2a7.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    \n\n    instance(x: -86, y: -23) unique_product_2e3d81 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -324, y: -109) difference_5b3c1f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b3c1f.left\n        list2_ai -> difference_5b3c1f.right\n\n        instance(x: 67, y: -109) difference_4b3d2e root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_4b3d2e.left\n        list1_ai -> difference_4b3d2e.right\n\n        instance(x: 176, y: -50) concat_c3a4b5 root.Std_k98ojb.List.Concat {}\n        difference_5b3c1f.difference -> concat_c3a4b5.left\n        difference_4b3d2e.difference -> concat_c3a4b5.right\n\n        concat_c3a4b5.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -98, y: 60) find_dissimilar_1b2c3d root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 439, y: -224) length_4d34b2 root.Std_k98ojb.List.Length {}\n        instance(x: 657, y: -182) modulo_9f3a34 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 905, y: -223) sub_8d2c5e root.Std_k98ojb.Math.Sub {}\n        instance(x: 1076, y: -221) slice_a4f26a root.Std_k98ojb.List.Slice {}\n        instance(x: 1077, y: -131) slice_8c521e root.Std_k98ojb.List.Slice {}\n        instance(x: 1286, y: -164) concat_8898f1 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4d34b2.list\n        length_4d34b2.length -> modulo_9f3a34.first\n        n_68068c -> modulo_9f3a34.divisor\n        modulo_9f3a34.result -> sub_8d2c5e.second\n        length_4d34b2.length -> sub_8d2c5e.first\n        sub_8d2c5e.result -> slice_a4f26a.start\n        0 -> slice_a4f26a.end\n        list_48148f -> slice_a4f26a.list\n        modulo_9f3a34.result -> slice_8c521e.start\n        -1 -> slice_8c521e.end\n        list_48148f -> slice_8c521e.list\n        slice_a4f26a.slice -> concat_8898f1.right\n        slice_8c521e.slice -> concat_8898f1.left\n        concat_8898f1.result -> output_823209\n    }\n\n    \n\n    instance(x: -476, y: -101) rotate_right_c6b8f7 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 198, y: -20) reduce_3d2c9e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_3d2c9e.items\n        0 -> reduce_3d2c9e.initialValue\n        func() {\n            in(x: -174, y: -56, name: \"accumulated\") property(Number) accumulated_2f1a18\n            in(x: -170, y: 44, name: \"current\") property(Number) current_b3c9d9\n\n            out(x: 1060, y: -51, name: \"sum\") property(Number) sum_a4243a\n\n            instance(x: 88, y: 27) add_3f6c3e root.Std_k98ojb.Math.Add {}\n            accumulated_2f1a18 -> add_3f6c3e.first\n            current_b3c9d9 -> add_3f6c3e.second\n            add_3f6c3e.result -> sum_a4243a\n        } -> reduce_3d2c9e.reducer\n        reduce_3d2c9e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -105, y: 75) _sum_e64b68 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 204, y: -88) lessthanorequal_6f2c88 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 371, y: -154) expression_b6419d root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 234, y: -263) if_4a5f5c root.Std_k98ojb.Std.If {}\n        instance(x: 117, y: -424) for_f9d204 root.Std_k98ojb.Std.For {}\n        instance(x: 362, y: -365) expression_38f07c root.Std_k98ojb.Math.Expression {\n            expression: \"Math.Floor(Math.Sqrt(num))\"\n        }\n        instance(x: 166, y: -469) ifexpression_ea80e5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num < 2\"\n        }\n\n        num_5c0677 -> lessthanorequal_6f2c88.left\n        1 -> lessthanorequal_6f2c88.right\n        lessthanorequal_6f2c88.result -> ifexpression_ea80e5.value\n\n        num_5c0677 -> expression_38f07c.gen_0\n        expression_38f07c.result -> for_f9d204.items\n\n        2 -> for_f9d204.start\n        1 -> for_f9d204.step\n\n        for_f9d204.item -> expression_b6419d.gen_1\n        num_5c0677 -> expression_b6419d.gen_0\n        expression_b6419d.result -> if_4a5f5c.predicate\n\n        if_4a5f5c.then -> continue_9a54bb\n        false -> if_4a5f5c.else\n\n        for_f9d204.onItem -> if_4a5f5c.execute\n        for_f9d204.done -> true -> output_c457b3\n\n        execute_b7b391 -> for_f9d204.reset\n        ifexpression_ea80e5.then -> false -> output_c457b3\n        ifexpression_ea80e5.else -> for_f9d204.execute\n    }\n\n    \n\n    instance(x: 16, y: -19) num_prime_8c23f8 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -69, y: -174) mul_a3c8f8 root.Std_k98ojb.Math.Mul {}\n        instance(x: 152, y: -159) less_than_zero_c500d8 root.Std_k98ojb.Math.LessThan {}\n        x_853326 -> mul_a3c8f8.first\n        y_5390f5 -> mul_a3c8f8.second\n        mul_a3c8f8.result -> less_than_zero_c500d8.left\n        0 -> less_than_zero_c500d8.right\n        less_than_zero_c500d8.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -217, y: 46) opposite_signs_c7e0b7 root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 158, y: -24) modulo_b5b81a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 387, y: -25) equal_1111b9 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_b5b81a.value\n        11 -> modulo_b5b81a.divisor\n        modulo_b5b81a.result -> equal_1111b9.left\n        0 -> equal_1111b9.right\n        equal_1111b9.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: 7) is_diff_a0e8bb root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 490, y: 270) replace_40e50c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_40e50c.input\n        search_ai -> replace_40e50c.search\n        replace_ai -> replace_40e50c.replace\n        replace_40e50c.output -> output_ai\n    }\n\n    \n\n    instance(x: -86, y: 270) replace_char_9d1a8f root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -256, y: 274) tolower_2c1f8e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 290, y: 326) equal_b9d40a root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_2c1f8e.input\n        input_ai -> equal_b9d40a.left\n        tolower_2c1f8e.output -> equal_b9d40a.right\n        equal_b9d40a.equal -> output_ai\n    }\n\n    \n    instance(x: -63, y: 75) is_lower_8b2448 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 46, y: -105) reduce_d1a6c8 root.Std_k98ojb.Iteration.Reduce {}\n        1 -> reduce_d1a6c8.initial_value\n        func() {\n            in(x: -175, y: -28, name: \"acc\") property(Number) acc_4603f9\n            in(x: -115, y: -5, name: \"current\") property(Number) current_eb813c\n\n            out(x: 302, y: -32, name: \"\") property(Number) _a765b1\n\n            instance(x: 139, y: -44) mul_0ef5d2 root.Std_k98ojb.Math.Mul {}\n            acc_4603f9 -> mul_0ef5d2.first\n            current_eb813c -> mul_0ef5d2.second\n            mul_0ef5d2.result -> _a765b1\n        } -> reduce_d1a6c8.reducer\n\n        instance(x: 46, y: -176) unique_feb2ee root.Std_k98ojb.Query.Filter {}\n        func() {\n            in(x: -133, y: -205, name: \"elem\") property(Number) elem_8c544f\n            in(x: 0, y: -187) ctx_7d7a62\n\n            out(x: 299, y: -214, name: \"\") property(Bool) _71b3ae\n\n            instance(x: 99, y: -255) contains_fd0f8c root.Std_k98ojb.List.Contains {}\n            elem_8c544f -> contains_fd0f8c.item\n            ctx_7d7a62 -> contains_fd0f8c.list\n            instance(x: 13, y: -208) not_ac7151 root.Std_k98ojb.Logic.Not {}\n            contains_fd0f8c.result -> not_ac7151.input\n            not_ac7151.output -> _71b3ae\n        } -> unique_feb2ee.where\n        list_5fda54 -> unique_feb2ee.list\n        unique_feb2ee.result -> reduce_d1a6c8.items\n        reduce_d1a6c8.final_value -> output_cffcc2\n    }\n\n    \n\n    instance(x: -374, y: -290) unique_product_55cd7d root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -91, y: -11) difference_3f9a57 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3f9a57.left\n        list2_ai -> difference_3f9a57.right\n        instance(x: 301, y: -10) difference_64a2c1 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_64a2c1.left\n        list1_ai -> difference_64a2c1.right\n        instance(x: 357, y: -10) concat_a6e3bb root.Std_k98ojb.List.Concat {}\n        difference_3f9a57.difference -> concat_a6e3bb.left\n        difference_64a2c1.difference -> concat_a6e3bb.right\n        concat_a6e3bb.list -> output_ai\n    }\n\n    \n\n    instance(x: 87, y: -20) find_dissimilar_e7f9db root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -20, y: -142) length_cde34f root.Std_k98ojb.List.Length {}\n        instance(x: 367, y: -128) mod_f9c45d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 140, y: -143) sub_937ebf root.Std_k98ojb.Math.Sub {}\n        instance(x: 265, y: -187) slice_ae790d root.Std_k98ojb.List.Slice {}\n        instance(x: 127, y: -41) slice_063303 root.Std_k98ojb.List.Slice {}\n        instance(x: 455, y: -127) concat_df9f58 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_cde34f.list\n        length_cde34f.length -> mod_f9c45d.divisor\n        n_68068c -> mod_f9c45d.value\n        length_cde34f.length -> sub_937ebf.first\n        mod_f9c45d.result -> sub_937ebf.second\n        sub_937ebf.result -> slice_ae790d.start\n        0 -> slice_063303.start\n        mod_f9c45d.result -> slice_063303.end\n        list_48148f -> slice_ae790d.list\n        list_48148f -> slice_063303.list\n        -1 -> slice_ae790d.end\n        slice_063303.slice -> concat_df9f58.left\n        slice_ae790d.slice -> concat_df9f58.right\n        concat_df9f58.result -> output_823209\n    }\n\n    \n\n    instance(x: -14, y: -162) rotate_right_d103db root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 322, y: -10) reduce_3f9d9b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_3f9d9b.items\n        0 -> reduce_3f9d9b.initialValue\n        func() {\n            in(x: -177, y: -15, name: \"accumulated\") property(Number) accumulated_a5a4e2\n            in(x: -168, y: 12, name: \"current\") property(Any) current_0a3eeb\n\n            out(x: 973, y: -12, name: \"sum\") property(Number) sum_db45db\n\n            instance(x: 82, y: 12) add_a9de2c root.Std_k98ojb.Math.Add {}\n            accumulated_a5a4e2 -> add_a9de2c.first\n            current_0a3eeb -> add_a9de2c.second\n            add_a9de2c.result -> sum_db45db\n        } -> reduce_3f9d9b.reducer\n        reduce_3f9d9b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -201, y: 7) _sum_6bc72b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 41, y: -188) lessthanorequal_b1d7e8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 623, y: -307) and_a05c2a root.Std_k98ojb.Logic.And {}\n        instance(x: 148, y: -329) lessthanorequal_9d00e9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 276, y: -549) mathexpression_df0f49 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 335, y: -172) mathexpression_a4a8d8 root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i) <= num\"\n        }\n        instance(x: 376, y: -131) stdif_0c95ae root.Std_k98ojb.Std.If {}\n        instance(x: 426, y: -392) mathexpression_a8f716 root.Std_k98ojb.Math.Expression {\n            expression: \"num == 2 || num == 3\"\n        }\n        instance(x: 520, y: -306) stdif_3d6e58 root.Std_k98ojb.Std.If {}\n        instance(x: 713, y: -344) mathexpression_ea9f6c root.Std_k98ojb.Math.Expression {\n            expression: \"num <= 1 || num % 2 == 0\"\n        }\n        instance(x: 854, y: -441) for_87f55d root.Std_k98ojb.Std.For {}\n        instance(x: 563, y: -498) mathadd_c18e1c root.Std_k98ojb.Math.Add {}\n\n        2 -> lessthanorequal_b1d7e8.left\n        num_5c0677 -> lessthanorequal_b1d7e8.right\n        lessthanorequal_b1d7e8.result -> and_a05c2a.left\n\n        mathexpression_a4a8d8.result -> stdif_0c95ae.predicate\n        execute_b7b391 -> stdif_0c95ae.execute\n\n        num_5c0677 -> mathexpression_a4a8d8.gen_0\n        2 -> mathexpression_a4a8d8.gen_1\n\n        for_87f55d.index -> mathadd_c18e1c.first\n        2 -> mathadd_c18e1c.second\n        mathadd_c18e1c.result -> for_87f55d.items\n\n        stdif_0c95ae.then -> output_c457b3\n        stdif_0c95ae.value -> output_c457b3\n\n        mathexpression_ea9f6c.result -> stdif_3d6e58.predicate\n        stdif_0c95ae.else -> stdif_3d6e58.execute\n\n        num_5c0677 -> mathexpression_ea9f6c.gen_0\n\n        stdif_3d6e58.then -> output_c457b3\n        stdif_3d6e58.value -> output_c457b3\n\n        for_87f55d.item -> mathexpression_df0f49.gen_1\n        num_5c0677 -> mathexpression_df0f49.gen_0\n        mathexpression_df0f49.result -> and_a05c2a.right\n\n        3 -> lessthanorequal_9d00e9.left\n        for_87f55d.item -> lessthanorequal_9d00e9.right\n        lessthanorequal_9d00e9.result -> stdif_3d6e58.else\n\n        and_a05c2a.result -> continue_9a54bb\n\n        for_87f55d.item -> mathexpression_a8f716.gen_1\n        num_5c0677 -> mathexpression_a8f716.gen_0\n        mathexpression_a8f716.result -> stdif_3d6e58.else\n\n        for_87f55d.onItem -> and_a05c2a.execute\n    }\n\n    \n\n    instance(x: 9, y: -42) num_prime_7bafbc root.main.num_prime {}\n\n}"
            ]
        }
    }
]