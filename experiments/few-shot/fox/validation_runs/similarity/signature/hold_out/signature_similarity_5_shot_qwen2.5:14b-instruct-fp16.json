[
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_6d6bdf root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 409, y: -195) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 237, y: -265) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 401, y: -135) not_75283f root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_6d6bdf.left\n        0 -> greaterthan_6d6bdf.right\n        y_5390f5 -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        greaterthan_6d6bdf.result -> and_80a119.left\n        lessthanorequal_f11fda.result -> and_80a119.right\n        not_75283f.input -> output_3339a3\n        and_80a119.result -> not_75283f.input\n    }\n\n    \n\n    instance(x: -46, y: 10) opposite_signs_7d6e6b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6d6a2b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6d6a2b.value\n        11 -> modulo_6d6a2b.divisor\n        modulo_6d6a2b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -45, y: -7) is_diff_98eacf root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -178, y: 245) replace_char_6d6a4b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 176) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        func() {\n            in(x: -405, y: -108, name: \"input\") property(String) input_a2a6d5\n\n            out(x: 869, y: -104, name: \"output\") property(Bool) output_73f3b9\n\n            instance(x: 24, y: -110, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            input_a2a6d5 -> isnumeric_9cb360.input\n            func() {\n                in(x: -407, y: 10) name: \"input\" property(String) input_6f5e6c\n\n                out(x: 869, y: 14) name: \"output\" property(Bool) output_23d6b9\n\n                instance(x: 24, y: 12, stableId: \"dnbuj51ajiozratdcge1fc3s\") islower_7c8f0a root.Std_k98ojb.Strings.ToLower {}\n                input_6f5e6c -> islower_7c8f0a.input\n                instance(x: 24, y: -110, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n                input_a2a6d5 -> islower_7c8f0a.input\n            } -> output_23d6b9\n            isnumeric_9cb360.isNumeric -> output_73f3b9\n        } -> tolower_7b3b7b.output\n        tolower_7b3b7b.lowered -> output_ai\n    }\n\n    \n\n    instance(x: 14, y: -52) is_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -105, y: -167) unique_3f3ee6 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -432, y: -105) reduce_4b8927 root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> unique_3f3ee6.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Bool) _7dd980\n\n            instance(x: 92, y: -22) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            x_8ee839 -> contains_1088d5.item\n            x_8ee839 -> contains_1088d5.list\n            Logic.Not(contains_1088d5.contains) -> _7dd980\n        } -> unique_3f3ee6.handler\n\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n            in(x: 425, y: -37, name: \"acc\") property(Number) acc_0e6fbc\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            Math.Mul(acc_0e6fbc, x_8ee839) -> _7dd980\n        } -> reduce_4b8927.reducer\n\n        unique_3f3ee6.output_list -> reduce_4b8927.items\n        1 -> reduce_4b8927.context\n        execute_19300c -> unique_3f3ee6.execute\n        unique_3f3ee6.continue -> continue_45190b\n        reduce_4b8927.output -> output_cffcc2\n    }\n\n    \n\n    instance(x: -55, y: 529) unique_product_b9ff6b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 113) difference_5d6f4b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5d6f4b.left\n        list2_ai -> difference_5d6f4b.right\n        difference_5d6f4b.difference -> output_ai\n\n        instance(x: 307, y: -8) difference_9eacf5 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_9eacf5.right\n        list2_ai -> difference_9eacf5.left\n        difference_9eacf5.difference -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 67) find_dissimilar_08f3b9 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -121) slice_6f5dfe root.Std_k98ojb.List.Slice {}\n        instance(x: 47, y: -159) slice_0eacf5 root.Std_k98ojb.List.Slice {}\n        instance(x: 301, y: -121) concat_76f5d5 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_6f5dfe.list\n        n_68068c -> slice_6f5dfe.start\n        -1 -> slice_6f5dfe.end\n        list_48148f -> slice_0eacf5.list\n        0 -> slice_0eacf5.start\n        n_68068c -> slice_0eacf5.end\n        slice_6f5dfe.slice -> concat_76f5d5.right\n        slice_0eacf5.slice -> concat_76f5d5.left\n        concat_76f5d5.result -> output_823209\n    }\n\n    \n\n    instance(x: -14, y: -101) rotate_right_7a2bdc root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7d6bdf root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6bdf.items\n        0 -> reduce_7d6bdf.initialValue\n        func() {\n            in(x: -34, y: -15, name: \"accumulated\") property(Number) accumulated_8f9a2e\n            in(x: -34, y: 11, name: \"current\") property(Number) current_706dfe\n\n            out(x: 104, y: -15, name: \"sum\") property(Number) sum_6bddd8\n\n            instance(x: 29, y: -3) add_7f5a2c root.Std_k98ojb.Math.Add {}\n            accumulated_8f9a2e -> add_7f5a2c.first\n            current_706dfe -> add_7f5a2c.second\n            add_7f5a2c.result -> sum_6bddd8\n        } -> reduce_7d6bdf.reducer\n        reduce_7d6bdf.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 9) _sum_3e506c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_6f3dfe root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 75, y: -150) greaterthan_faae6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 244, y: -150) modulo_3f5dfe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 175, y: -150) lessthanorequal_f6a2c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 405, y: -150) and_3f3dfe root.Std_k98ojb.Logic.And {}\n        instance(x: 575, y: -150) ifexpression_f6a2c9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        instance(x: 435, y: -150) not_3f3dfe root.Std_k98ojb.Logic.Not {}\n        num_5c0677 -> generaterange_6f3dfe.from\n        2 -> generaterange_6f3dfe.to\n        generaterange_6f3dfe.list -> greaterthan_faae6c.left\n        num_5c0677 -> greaterthan_faae6c.right\n        greaterthan_faae6c.result -> lessthanorequal_f6a2c9.left\n        1 -> lessthanorequal_f6a2c9.right\n        lessthanorequal_f6a2c9.result -> and_3f3dfe.left\n        num_5c0677 -> modulo_3f5dfe.value\n        generaterange_6f3dfe.list -> modulo_3f5dfe.divisor\n        modulo_3f5dfe.result -> ifexpression_f6a2c9.gen_1\n        and_3f3dfe.right -> ifexpression_f6a2c9.gen_0\n        ifexpression_f6a2c9.value -> not_3f3dfe.input\n        not_3f3dfe.output -> output_c457b3\n        execute_b7b391 -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 8, y: -160) num_prime_2eacf4 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 68, y: -174) greaterthan_6bddd5 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 109, y: -201) lessthanorequal_f2d5f9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 347, y: -264) and_7eacf5 root.Std_k98ojb.Logic.And {}\n        x_853326 -> greaterthan_6bddd5.left\n        0 -> greaterthan_6bddd5.right\n        y_5390f5 -> lessthanorequal_f2d5f9.left\n        0 -> lessthanorequal_f2d5f9.right\n        greaterthan_6bddd5.result -> and_7eacf5.left\n        lessthanorequal_f2d5f9.result -> and_7eacf5.right\n        and_7eacf5.result -> output_3339a3\n\n        instance(x: 148, y: -160) greaterthan_d4bddd root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 215, y: -200) lessthanorequal_c7f7c5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 365, y: -247) or_7d4e6a root.Std_k98ojb.Logic.Or {}\n        y_5390f5 -> greaterthan_d4bddd.left\n        0 -> greaterthan_d4bddd.right\n        x_853326 -> lessthanorequal_c7f7c5.left\n        0 -> lessthanorequal_c7f7c5.right\n        greaterthan_d4bddd.result -> or_7d4e6a.left\n        lessthanorequal_c7f7c5.result -> or_7d4e6a.right\n        or_7d4e6a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -201, y: 8) opposite_signs_7bddd9 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 140, y: -22) modulo_5d6a6b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5d6a6b.value\n        11 -> modulo_5d6a6b.divisor\n        modulo_5d6a6b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -178, y: 254) replace_char_7b3b7b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 745, y: 132) to_lower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> to_lower_7b3b7b.input\n        func() {\n            in(x: -60, y: 104, name: \"current\") property(String) current_86a8fb\n\n            out(x: 250, y: 108, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: 109, stableId: \"dnbuj51ajiozratdcge1fc3s\") isnumeric_9cb360 root.Std_k98ojb.Strings.IsNumeric {}\n            current_86a8fb -> isnumeric_9cb360.input\n            instance(x: 24, y: 109, stableId: \"dnbuj51ajiozratdcge1fc3s\") to_lower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n            current_86a8fb -> to_lower_7b3b7b.input\n            instance(x: 24, y: 109, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_7b3b7b root.Std_k98ojb.Logic.Equal {}\n            isnumeric_9cb360.isNumeric -> equal_7b3b7b.left\n            to_lower_7b3b7b.output -> equal_7b3b7b.right\n            equal_7b3b7b.equal -> output_8ba733\n        } -> to_lower_7b3b7b.handler\n        to_lower_7b3b7b.lowered -> output_ai\n    }\n\n    \n\n    instance(x: 14, y: -52) is_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -208, y: -105) unique_2d9a2c root.Std_k98ojb.Iteration.Filter {}\n        list_5fda54 -> unique_2d9a2c.items\n        func() {\n            in(x: 376, y: 33, name: \"elem\") property(Number) elem_10eacf\n\n            out(x: -88, y: 104, name: \"\") property(Bool) _5d9f2b\n\n            instance(x: -104, y: 67) contains_5c3a9a root.Std_k98ojb.List.Contains {}\n            elem_10eacf -> contains_5c3a9a.item\n            false -> Logic.Not(left: contains_5c3a9a.contains)\n        } -> unique_2d9a2c.handler\n\n        instance(x: 46, y: -7) reduce_8f3b61 root.Std_k98ojb.Iteration.Reduce {}\n        unique_2d9a2c.output_list -> reduce_8f3b61.item\n        func() {\n            in(x: -50, y: 44, name: \"acc\") property(Number) acc_7eacf8\n\n            in(x: 144, y: 44, name: \"elem\") property(Number) elem_2d9f6a\n\n            out(x: 304, y: -56, name: \"\") property(Number) _bdddff\n\n            instance(x: 178, y: -12) mul_6c3e2b root.Std_k98ojb.Math.Mul {}\n            acc_7eacf8 -> mul_6c3e2b.first\n            elem_2d9f6a -> mul_6c3e2b.second\n            mul_6c3e2b.result -> _bdddff\n        } -> reduce_8f3b61.reducer\n\n        unique_2d9a2c.output_list -> reduce_8f3b61.item\n        1 -> reduce_8f3b61.accumulator\n        execute_19300c -> unique_2d9a2c.execute\n        unique_2d9a2c.continue -> continue_45190b\n        reduce_8f3b61.output_value -> output_cffcc2\n    }\n\n    \n\n    instance(x: -70, y: 11) unique_product_6eacf8 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 194, y: 10) difference_0f5e5d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_0f5e5d.left\n        list2_ai -> difference_0f5e5d.right\n        instance(x: -37, y: 64) reverse_d5a4c7 root.Std_k98ojb.List.Reversed {}\n        list2_ai -> reverse_d5a4c7.list\n        instance(x: 194, y: 64) difference_0f5e5d_2 root.Std_k98ojb.Sets.Difference {}\n        reverse_d5a4c7.reversed -> difference_0f5e5d_2.left\n        list1_ai -> difference_0f5e5d_2.right\n        instance(x: 369, y: -1) concat_082bdc root.Std_k98ojb.List.Concat {}\n        difference_0f5e5d.difference -> concat_082bdc.left\n        difference_0f5e5d_2.difference -> concat_082bdc.right\n        concat_082bdc.concat -> output_ai\n    }\n\n    \n\n    instance(x: -314, y: 6) find_dissimilar_a7a9c9 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 435, y: -112) concat_6f2dfe root.Std_k98ojb.List.Concat {}\n        instance(x: 178, y: -112) slice_6c3e7a root.Std_k98ojb.List.Slice {}\n        instance(x: 405, y: -112) slice_7f3dfe root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_6c3e7a.list\n        n_68068c -> slice_6c3e7a.end\n        0 -> slice_6c3e7a.start\n        list_48148f -> slice_7f3dfe.list\n        -1 -> slice_7f3dfe.end\n        n_68068c -> slice_7f3dfe.start\n        slice_6c3e7a.slice -> concat_6f2dfe.left\n        slice_7f3dfe.slice -> concat_6f2dfe.right\n        concat_6f2dfe.result -> output_823209\n    }\n\n    \n\n    instance(x: 15, y: -14) rotate_right_5a2bcb root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -14) reduce_7d9e2b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d9e2b.items\n        0 -> reduce_7d9e2b.initialValue\n        func() {\n            in(x: -153, y: -4) name: \"accumulated\") property(Number) current_a8a2f3\n            in(x: -163, y: 10) name: \"current\") property(Number) current_7d9e2b\n\n            out(x: 105, y: -4) name: \"sum\") property(Number) sum_bdfc48\n\n            instance(x: 10, y: 6) add_3f1a2b root.Std_k98ojb.Math.Add {}\n            current_a8a2f3 -> add_3f1a2b.first\n            current_7d9e2b -> add_3f1a2b.second\n            add_3f1a2b.result -> sum_bdfc48\n        } -> reduce_7d9e2b.reducer\n        reduce_7d9e2b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -65, y: 10) _sum_3a8e90 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -89, y: -194) generaterange_6f3dce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 271, y: -104) lessthanorequal_f4eacf root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 534, y: -167) greaterthan_7d9f6a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 209, y: -246) modulo_9c4e2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 135, y: -37) for_ea7f9d root.Std_k98ojb.Std.For {}\n        instance(x: 801, y: -67) and_04e2c4 root.Std_k98ojb.Logic.And {}\n        instance(x: 715, y: -30) ifexpression_ea2f4d root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        num_5c0677 -> generaterange_6f3dce.from\n        2 -> generaterange_6f3dce.to\n        generaterange_6f3dce.list -> for_ea7f9d.items\n        for_ea7f9d.item -> modulo_9c4e2c.value\n        num_5c0677 -> modulo_9c4e2c.divisor\n        modulo_9c4e2c.result -> lessthanorequal_f4eacf.left\n        1 -> lessthanorequal_f4eacf.right\n        lessthanorequal_f4eacf.result -> and_04e2c4.left\n        for_ea7f9d.item -> greaterthan_7d9f6a.left\n        num_5c0677 -> greaterthan_7d9f6a.right\n        greaterthan_7d9f6a.result -> and_04e2c4.right\n        and_04e2c4.result -> ifexpression_ea2f4d.gen_1\n        for_ea7f9d.onItem -> ifexpression_ea2f4d.execute\n        ifexpression_ea2f4d.value -> output_c457b3\n        ifexpression_ea2f4d.else -> continue_9a54bb\n        for_ea7f9d.done -> continue_9a54bb\n        execute_b7b391 -> for_ea7f9d.reset\n    }\n\n    \n\n    instance(x: 6, y: -180) num_prime_f2c3e6 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -174) greaterthan_f4d3b8 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 150, y: -217) and_e2f4e4 root.Std_k98ojb.Logic.And {}\n        instance(x: 62, y: -174) lessthanorequal_3d7aeb root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> greaterthan_f4d3b8.left\n        y_5390f5 -> greaterthan_f4d3b8.right\n        y_5390f5 -> lessthanorequal_3d7aeb.left\n        x_853326 -> lessthanorequal_3d7aeb.right\n        greaterthan_f4d3b8.result -> and_e2f4e4.left\n        lessthanorequal_3d7aeb.result -> and_e2f4e4.right\n        and_e2f4e4.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -156, y: 8) opposite_signs_d0b7c5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_0d3a5b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_0d3a5b.value\n        11 -> modulo_0d3a5b.divisor\n        modulo_0d3a5b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_2f4bdc root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2f4bdc.input\n        search_ai -> replace_2f4bdc.search\n        replace_ai -> replace_2f4bdc.replace\n        replace_2f4bdc.output -> output_ai\n    }\n\n    \n\n    instance(x: -139, y: 165) replace_char_80d7a2 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 76, y: 132) tolower_5b4d4a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 404, y: 132) isequal_7f3c9e root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_5b4d4a.input\n        tolower_5b4d4a.output -> isequal_7f3c9e.left\n        input_ai -> isequal_7f3c9e.right\n        isequal_7f3c9e.equal -> output_ai\n    }\n\n    \n\n    instance(x: -281, y: 156) is_lower_40d7a8 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -123, y: -115) unique_6d4f9e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 209, y: -17) reduce_7c2a82 root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> unique_6d4f9e.items\n        func() {\n            in(x: -331, y: 102, name: \"elem\") property(Number) elem_7c4a8a\n\n            out(x: 132, y: 102, name: \"\") property(Bool) _6d95b8\n\n            instance(x: -266, y: 102) contains_3f3ee6 root.Std_k98ojb.List.Contains {}\n            elem_7c4a8a -> contains_3f3ee6.item\n            list_5fda54 -> contains_3f3ee6.list\n\n            contains_3f3ee6.contains -> _6d95b8.not\n        } -> unique_6d4f9e.handler\n        unique_6d4f9e.output_list -> reduce_7c2a82.items\n        func() {\n            in(x: -103, y: 102, name: \"acc\") property(Number) acc_5bddd7\n\n            in(x: -331, y: 102, name: \"elem\") property(Number) elem_7c4a8a\n\n            out(x: 132, y: 102, name: \"\") property(Number) _6d95b8\n\n            instance(x: -266, y: 102) mul_3f3ee6 root.Std_k98ojb.Math.Mul {}\n            acc_5bddd7 -> mul_3f3ee6.first\n            elem_7c4a8a -> mul_3f3ee6.second\n\n            mul_3f3ee6.result -> _6d95b8\n        } -> reduce_7c2a82.reducer\n        1 -> reduce_7c2a82.initial_value\n        reduce_7c2a82.accumulated -> output_cffcc2\n    }\n\n    \n\n    instance(x: -40, y: -36) unique_product_5fda54 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 93, y: 104) difference_6e5a2c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_6e5a2c.left\n        list2_ai -> difference_6e5a2c.right\n        instance(x: 237, y: 104) reverse_difference_0f3d6d root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> reverse_difference_0f3d6d.left\n        list1_ai -> reverse_difference_0f3d6d.right\n        instance(x: 375, y: -4) concat_2eacf5 root.Std_k98ojb.List.Concat {}\n        difference_6e5a2c.difference -> concat_2eacf5.left\n        reverse_difference_0f3d6d.difference -> concat_2eacf5.right\n        concat_2eacf5.concat -> output_ai\n    }\n\n    \n\n    instance(x: -194, y: 7) find_dissimilar_8a9c5b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 44, y: -161) slice_4d5f1b root.Std_k98ojb.List.Slice {}\n        instance(x: 47, y: -221) slice_6eacf9 root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_4d5f1b.list\n        n_68068c -> slice_4d5f1b.start\n        -1 -> slice_4d5f1b.end\n        0 -> slice_6eacf9.start\n        list_48148f -> slice_6eacf9.list\n        n_68068c -> slice_6eacf9.end\n        slice_4d5f1b.slice -> output_823209\n        slice_6eacf9.slice -> append_7a916b.left\n    }\n\n    \n\n    func() {\n        in(x: 304, y: -151, name: \"left\") property(List) left_5c2fbc\n        in(x: 308, y: -211, name: \"right\") property(List) right_e69d7b\n\n        out(x: 429, y: -171, name: \"result\") property(List) result_ba5e6c\n\n        instance(x: 360, y: -182) concat_8f9fa4 root.Std_k98ojb.List.Concat {}\n        left_5c2fbc -> concat_8f9fa4.right\n        right_e69d7b -> concat_8f9fa4.left\n        concat_8f9fa4.result -> result_ba5e6c\n    } -> append_7a916b\n\n    instance(x: -203, y: -112) rotate_right_53f9d4 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -11) reduce_2d0e9b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 576, y: -3) expression_6c4faa root.Std_k98ojb.Math.Expression {\n            expression: \"acc + it\"\n        }\n        list_2c62ab -> reduce_2d0e9b.items\n        0 -> reduce_2d0e9b.initialValue\n        expression_6c4faa.result -> reduce_2d0e9b.reducer.output\n        reduce_2d0e9b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -137, y: 15) _sum_6db44c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -83, y: -145) generaterange_f6d6e9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 273, y: -103) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 151, y: -145) modulo_6f6c7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 273, y: -245) and_0eacf8 root.Std_k98ojb.Logic.And {}\n        instance(x: 532, y: -187) ifexpression_6a7d5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        instance(x: 432, y: -305) not_f8eacf root.Std_k98ojb.Logic.Not {}\n        generaterange_f6d6e9.from -> greaterthan_cb557a.right\n        num_5c0677 -> greaterthan_cb557a.left\n        greaterthan_cb557a.result -> ifexpression_6a7d5f.gen_1\n        modulo_6f6c7d.result -> ifexpression_6a7d5f.gen_2\n        1 -> generaterange_f6d6e9.to\n        num_5c0677 -> generaterange_f6d6e9.list\n        greaterthan_cb50ae.right -> modulo_6f6c7d.divisor\n        generaterange_f6d6e9.list -> modulo_6f6c7d.value\n        ifexpression_6a7d5f.result -> and_0eacf8.left\n        num_5c0677 -> greaterthan_cb50ae.left\n        greaterthan_cb50ae.right -> modulo_6f6c7d.divisor\n        generaterange_f6d6e9.list -> greaterthan_cb50ae.left\n        ifexpression_6a7d5f.result -> and_0eacf8.right\n        and_0eacf8.result -> not_f8eacf.value\n        not_f8eacf.value -> output_c457b3\n        execute_b7b391 -> generaterange_f6d6e9.reset\n        ifexpression_6a7d5f.then -> continue_9a54bb\n        and_0eacf8.result -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 2, y: -31) num_prime_7c2bdc root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_0d5e5b root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 461, y: -175) lessthanorequal_f1f3a7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 260, y: -219) and_7eacf4 root.Std_k98ojb.Logic.And {}\n        instance(x: 358, y: -219) or_f4d6a9 root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_0d5e5b.left\n        0 -> greaterthan_0d5e5b.right\n        y_5390f5 -> lessthanorequal_f1f3a7.left\n        0 -> lessthanorequal_f1f3a7.right\n        x_853326 -> lessthanorequal_f1f3a7.right\n        y_5390f5 -> greaterthan_0d5e5b.right\n        greaterthan_0d5e5b.result -> and_7eacf4.left\n        lessthanorequal_f1f3a7.result -> and_7eacf4.right\n        x_853326 -> lessthanorequal_f1f3a7.left\n        y_5390f5 -> greaterthan_0d5e5b.left\n        and_7eacf4.result -> or_f4d6a9.left\n        0 -> greaterthan_0d5e5b.right\n        x_853326 -> greaterthan_0d5e5b.left\n        y_5390f5 -> lessthanorequal_f1f3a7.right\n        lessthanorequal_f1f3a7.result -> and_7eacf4.right\n        0 -> lessthanorequal_f1f3a7.left\n        greaterthan_0d5e5b.result -> and_7eacf4.left\n        y_5390f5 -> greaterthan_0d5e5b.right\n        x_853326 -> lessthanorequal_f1f3a7.left\n        and_7eacf4.result -> or_f4d6a9.right\n        or_f4d6a9.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -85, y: 20) opposite_signs_1f5cdd root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6eacf5 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6eacf5.value\n        11 -> modulo_6eacf5.divisor\n        modulo_6eacf5.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 11) is_diff_7a4dad root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_3d3a7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3d3a7b.input\n        search_ai -> replace_3d3a7b.search\n        replace_ai -> replace_3d3a7b.replace\n        replace_3d3a7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -246, y: 185) replace_char_90f5c9 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 176) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        func() {\n            in(x: -405, y: -108, name: \"input\") property(String) input_a2a6d5\n\n            out(x: 869, y: -108, name: \"output\") property(Bool) output_73f4b0\n\n            instance(x: 124, y: -110, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_9cb360 root.Std_k98ojb.Logic.Equal {}\n            input_a2a6d5 -> tolower_7b3b7b.input\n            tolower_7b3b7b.output -> equal_9cb360.left\n            input_a2a6d5 -> equal_9cb360.right\n            equal_9cb360.equal -> output_73f4b0\n        } -> tolower_7b3b7b.compare\n        tolower_7b3b7b.isEqual -> output_ai\n    }\n\n    \n\n    instance(x: -185, y: 209) is_lower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -105, y: -167) unique_3f3ee6 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -432, y: -105) reduce_4b8927 root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> unique_3f3ee6.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Bool) _7dd980\n\n            instance(x: 92, y: -22) contains_1a4b6d root.Std_k98ojb.List.Contains {}\n            x_8ee839 -> contains_1a4b6d.item\n            unique_3f3ee6.items -> contains_1a4b6d.list\n\n            Logic.Not(root, contains_1a4b6d.contains) -> _7dd980\n        } -> unique_3f3ee6.handler\n        unique_3f3ee6.output_list -> reduce_4b8927.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_1a4b6d root.Std_k98ojb.Math.Mul {}\n            x_8ee839 -> mul_1a4b6d.first\n            reduce_4b8927.accumulated_value -> mul_1a4b6d.second\n\n            mul_1a4b6d.result -> _7dd980\n        } -> reduce_4b8927.reducer\n        1 -> reduce_4b8927.initial_value\n        execute_19300c -> unique_3f3ee6.execute\n        unique_3f3ee6.continue -> continue_45190b\n        reduce_4b8927.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -101, y: 101) unique_product_496e5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 113) difference_5d6f4b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5d6f4b.left\n        list2_ai -> difference_5d6f4b.right\n        difference_5d6f4b.difference -> output_ai\n\n        instance(x: 307, y: -8) difference_9a7c7e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_9a7c7e.right\n        list2_ai -> difference_9a7c7e.left\n        difference_9a7c7e.difference -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 68) find_dissimilar_0f5d1b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -121) slice_6f5dfe root.Std_k98ojb.List.Slice {}\n        instance(x: 47, y: -159) slice_faae5a root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_6f5dfe.list\n        n_68068c -> slice_6f5dfe.start\n        -1 -> slice_6f5dfe.end\n        list_48148f -> slice_faae5a.list\n        0 -> slice_faae5a.start\n        n_68068c -> slice_faae5a.end\n        slice_faae5a.slice -> output_823209\n        slice_6f5dfe.slice -> concat_7b417b.left\n        slice_faae5a.slice -> concat_7b417b.right\n        concat_7b417b.result -> output_823209\n    }\n\n    \n\n    instance(x: 16, y: -11) rotate_right_0d6f7c root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7d5e4b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d5e4b.items\n        0 -> reduce_7d5e4b.initialValue\n        func() {\n            in(x: -13, y: -10, name: \"accumulated\") property(Number) current_8f9a2a\n            in(x: -16, y: 10, name: \"current\") property(Number) current_7d54b4\n\n            out(x: 108, y: -3) name: \"sum\" property(Number) sum_7c9e2f\n\n            instance(x: 10, y: 10) add_6a401b root.Std_k98ojb.Math.Add {}\n            current_8f9a2a -> add_6a401b.first\n            current_7d54b4 -> add_6a401b.second\n            add_6a401b.result -> sum_7c9e2f\n        } -> reduce_7d5e4b.reducer\n        reduce_7d5e4b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -3, y: 11) _sum_60dbbf root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_f6d9f4 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 37, y: -150) greaterthan_0eacf4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 214, y: -151) modulo_6d6a7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 384, y: -150) and_6f6e2b root.Std_k98ojb.Logic.And {}\n        instance(x: 545, y: -150) ifexpression_f7d9a9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"not is_prime\"\n        }\n        num_5c0677 -> generaterange_f6d9f4.from\n        2 -> generaterange_f6d9f4.to\n        generaterange_f6d9f4.list -> greaterthan_0eacf4.left\n        num_5c0677 -> greaterthan_0eacf4.right\n        greaterthan_0eacf4.result -> modulo_6d6a7c.value\n        generaterange_f6d9f4.list -> modulo_6d6a7c.divisor\n        modulo_6d6a7c.result -> and_6f6e2b.left\n        0 -> and_6f6e2b.right\n        and_6f6e2b.result -> ifexpression_f7d9a9.else\n        ifexpression_f7d9a9.then -> continue_9a54bb\n        num_5c0677 -> ifexpression_f7d9a9.gen_1\n        1 -> ifexpression_f7d9a9.gen_0\n        ifexpression_f7d9a9.value -> output_c457b3\n        execute_b7b391 -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -26, y: -18) num_prime_7f4e9c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 68, y: -174) greaterthan_0eacf4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 151, y: -288) lessthanorequal_fbe7f7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 368, y: -240) and_7d9e5a root.Std_k98ojb.Logic.And {}\n        instance(x: 198, y: -175) not_8f5cde root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_0eacf4.left\n        0 -> greaterthan_0eacf4.right\n        y_5390f5 -> lessthanorequal_fbe7f7.left\n        0 -> lessthanorequal_fbe7f7.right\n        x_853326 -> lessthanorequal_fbe7f7.right\n        y_5390f5 -> greaterthan_0eacf4.right\n        not_8f5cde.input -> and_7d9e5a.left\n        greaterthan_0eacf4.result -> and_7d9e5a.right\n        lessthanorequal_fbe7f7.result -> not_8f5cde.input\n        and_7d9e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -126, y: 10) opposite_signs_4bddd4 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 140, y: -22) modulo_5d6a9b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5d6a9b.value\n        11 -> modulo_5d6a9b.divisor\n        modulo_5d6a9b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -178, y: 254) replace_char_7bddd4 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 749, y: 132) to_lower_5b3e0d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1109, y: 132) is_equal_6f7a5c root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_5b3e0d.input\n        func() {\n            in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n            out(x: 167, y: 281, name: \"output\") property(Bool) output_ai\n\n            instance(x: 31, y: 281) to_lower_5b3e0d root.Std_k98ojb.Strings.ToLower {}\n            input_ai -> to_lower_5b3e0d.input\n            to_lower_5b3e0d.output -> output_ai\n        } -> is_equal_6f7a5c.right\n        to_lower_5b3e0d.output -> is_equal_6f7a5c.left\n        is_equal_6f7a5c.equal -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_180424 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -208, y: -105) unique_2d9a2c root.Std_k98ojb.Iteration.Filter {}\n        list_5fda54 -> unique_2d9a2c.items\n        func() {\n            in(x: 376, y: 33, name: \"elem\") property(Number) elem_10eacf\n\n            out(x: -89, y: 104, name: \"\") property(Bool) _5d6f2b\n\n            instance(x: -108, y: 73) contains_2c1a64 root.Std_k98ojb.List.Contains {}\n            elem_10eacf -> contains_2c1a64.item\n            false -> contains_2c1a64.not\n            contains_2c1a64.contains -> _5d6f2b\n        } -> unique_2d9a2c.handler\n        instance(x: -308, y: 7) reduce_5e6db4 root.Std_k98ojb.Iteration.Reduce {}\n        unique_2d9a2c.output_list -> reduce_5e6db4.item\n        func() {\n            in(x: -108, y: 32, name: \"acc\") property(Number) acc_7f7fa5\n\n            in(x: -108, y: 119, name: \"elem\") property(Number) elem_6e4bdf\n\n            out(x: -108, y: 193, name: \"\") property(Number) _2d9a2c\n\n            instance(x: -108, y: 157) mul_5fda54 root.Std_k98ojb.Math.Mul {}\n            acc_7f7fa5 -> mul_5fda54.first\n            elem_6e4bdf -> mul_5fda54.second\n            mul_5fda54.result -> _2d9a2c\n        } -> reduce_5e6db4.reducer\n        1 -> reduce_5e6db4.initial_value\n        reduce_5e6db4.output_list -> output_cffcc2\n    }\n\n    \n\n    instance(x: -37, y: -80) unique_product_9d9f7b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 194, y: 10) difference_0f5e2a root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_0f5e2a.left\n        list2_ai -> difference_0f5e2a.right\n        instance(x: -37, y: 64) reverse_b0d3c7 root.Std_k98ojb.List.Reversed {}\n        list2_ai -> reverse_b0d3c7.list\n        instance(x: 194, y: 65) difference_0f5e2a_2 root.Std_k98ojb.Sets.Difference {}\n        reverse_b0d3c7.reversed -> difference_0f5e2a_2.left\n        list1_ai -> difference_0f5e2a_2.right\n        instance(x: 340, y: -6) concat_988bdf root.Std_k98ojb.List.Concat {}\n        difference_0f5e2a.difference -> concat_988bdf.left\n        difference_0f5e2a_2.difference -> concat_988bdf.right\n        concat_988bdf.concat -> output_ai\n    }\n\n    \n\n    instance(x: -147, y: 36) find_dissimilar_aaa5d7 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 439, y: -112) concat_6f7dfe root.Std_k98ojb.List.Concat {}\n        instance(x: 52, y: -112) slice_8eacf6 root.Std_k98ojb.List.Slice {}\n        instance(x: 204, y: -112) sub_3a7fbc root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_8eacf6.list\n        n_68068c -> sub_3a7fbc.first\n        0 -> sub_3a7fbc.second\n        sub_3a7fbc.result -> slice_8eacf6.end\n        list_48148f -> concat_6f7dfe.right\n        slice_8eacf6.slice -> concat_6f7dfe.left\n        concat_6f7dfe.result -> output_823209\n    }\n\n    \n\n    instance(x: -5, y: -104) rotate_right_ebddd4 root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -14) reduce_7d9e5b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d9e5b.items\n        0 -> reduce_7d9e5b.initialValue\n        func() {\n            in(x: -143, y: -14, name: \"accumulated\") property(Number) current_8f8a8c\n            in(x: -26, y: -14, name: \"current\") property(Number) current_b5079d\n\n            out(x: 110, y: -14, name: \"sum\") property(Number) sum_f3eacf\n\n            instance(x: 8, y: -14) add_2f6a8c root.Std_k98ojb.Math.Add {}\n            current_8f8a8c -> add_2f6a8c.first\n            current_b5079d -> add_2f6a8c.second\n            add_2f6a8c.result -> sum_f3eacf\n        } -> reduce_7d9e5b.reducer\n        reduce_7d9e5b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 11) _sum_603c7c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -81, y: -216) generaterange_6f7dfe root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 32, y: -140) greaterthan_f3eacf root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 54, y: -185) modulo_6f7dfe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 211, y: -107) ifexpression_f3eacf root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        num_5c0677 -> generaterange_6f7dfe.from\n        2 -> generaterange_6f7dfe.to\n        generaterange_6f7dfe.list -> greaterthan_f3eacf.left\n        num_5c0677 -> greaterthan_f3eacf.right\n        greaterthan_f3eacf.result -> ifexpression_f3eacf.gen_1\n        num_5c0677 -> modulo_6f7dfe.value\n        generaterange_6f7dfe.list -> modulo_6f7dfe.divisor\n        modulo_6f7dfe.result -> ifexpression_f3eacf.gen_0\n        execute_b7b391 -> generaterange_6f7dfe.reset\n        ifexpression_f3eacf.value -> output_c457b3\n        ifexpression_f3eacf.else -> continue_9a54bb\n        ifexpression_f3eacf.then -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 21, y: -68) num_prime_0f7dfe root.main.num_prime {}\n\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -174) greaterthan_f3d1b8 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 150, y: -217) and_eceee6 root.Std_k98ojb.Logic.And {}\n        instance(x: 150, y: -144) not_3a4d0c root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_f3d1b8.left\n        y_5390f5 -> greaterthan_f3d1b8.right\n        greaterthan_f3d1b8.result -> and_eceee6.left\n        not_3a4d0c.input -> and_eceee6.right\n        x_853326 -> not_3a4d0c.input\n        y_5390f5 -> not_3a4d0c.input\n        and_eceee6.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -174, y: 28) opposite_signs_9eacf5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -22) modulo_5d7b8a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5d7b8a.value\n        11 -> modulo_5d7b8a.divisor\n        modulo_5d7b8a.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_2f4bdc root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2f4bdc.input\n        search_ai -> replace_2f4bdc.search\n        replace_ai -> replace_2f4bdc.replace\n        replace_2f4bdc.output -> output_ai\n    }\n\n    \n\n    instance(x: -139, y: 165) replace_char_80d7a2 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 76, y: 132) tolower_5a4b6c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5a4b6c.input\n        func() {\n            in(x: -206, y: -136, name: \"input\") property(String) input_a7d3f4\n\n            out(x: 249, y: -138, name: \"output\") property(Bool) output_5eacf4\n\n            instance(x: 120, y: -138, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_7f6d9a root.Std_k98ojb.Logic.Equal {}\n            input_a7d3f4 -> equal_7f6d9a.left\n            input_a7d3f4 -> equal_7f6d9a.right\n            equal_7f6d9a.equal -> output_5eacf4\n        } -> tolower_5a4b6c.isLower\n        tolower_5a4b6c.lower -> output_ai\n    }\n\n    \n\n    instance(x: -108, y: 23) is_lower_7f6d9a root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -231, y: -144) unique_1f1e7a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 560, y: -144) reduce_6d1c31 root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> unique_1f1e7a.items\n        func() {\n            in(x: -231, y: 20) name(\"it\") property(Number) it_6d1c31\n\n            out(x: 560, y: 20) name(\"\") property(Bool) _6d1c31\n\n            instance(x: -231, y: 48) contains_7e9fdd root.Std_k98ojb.List.Contains {}\n            it_6d1c31 -> contains_7e9fdd.item\n            unique_1f1e7a.items -> contains_7e9fdd.list\n\n            Logic.Not(contains_7e9fdd.contains) -> _6d1c31\n        } -> unique_1f1e7a.handler\n        unique_1f1e7a.output_list -> reduce_6d1c31.item\n        func() {\n            in(x: -231, y: 80) name(\"acc\") property(Number) acc_6d1c31\n\n            in(x: -231, y: 95) name(\"it\") property(Number) it_6d1c31\n\n            out(x: 560, y: 95) name(\"\") property(Number) _6d1c31\n\n            Math.Mul(acc_6d1c31, it_6d1c31) -> _6d1c31.result\n        } -> reduce_6d1c31.reducer\n        execute_19300c -> unique_1f1e7a.execute\n        unique_1f1e7a.continue -> continue_45190b\n        reduce_6d1c31.output_value -> output_cffcc2\n    }\n\n    \n\n    instance(x: 8, y: -12) unique_product_700393 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 93, y: 104) difference_6e5a2c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_6e5a2c.left\n        list2_ai -> difference_6e5a2c.right\n        instance(x: 237, y: 104) reverse_difference_0f3d6d root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> reverse_difference_0f3d6d.left\n        list1_ai -> reverse_difference_0f3d6d.right\n        instance(x: 375, y: -4) concat_4eacf7 root.Std_k98ojb.List.Concat {}\n        difference_6e5a2c.difference -> concat_4eacf7.left\n        reverse_difference_0f3d6d.difference -> concat_4eacf7.right\n        concat_4eacf7.concat -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 10) find_dissimilar_2c5a5b root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 44, y: -161) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 475, y: -161) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_3f3ee6.list\n        n_68068c -> slice_3f3ee6.start\n        -1 -> slice_3f3ee6.end\n        list_48148f -> concat_0234d2.right\n        slice_3f3ee6.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -175, y: -10) rotate_right_6c3e1b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -11) reduce_2d0e7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 56, y: -30) add_5c4167 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> reduce_2d0e7b.items\n        0 -> reduce_2d0e7b.initialValue\n        func() {\n            in(x: -13, y: -5) property(Number) accumulated_4f98a9\n            in(x: -13, y: 6) property(Number) current_6c97ea\n\n            out(x: 20, y: 2) property(Number) sum_5bddd6\n\n            add_5c4167.first -> accumulated_4f98a9\n            add_5c4167.second -> current_6c97ea\n            add_5c4167.result -> sum_5bddd6\n        } -> reduce_2d0e7b.reducer\n        reduce_2d0e7b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -31, y: 9) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -83, y: -145) generaterange_f6d6e9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 277, y: -103) lessthanorequal_bf6c1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 454, y: -103) greaterthan_8d5e63 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 721, y: -103) modulo_fcafaa root.Std_k98ojb.Math.Modulo {}\n        instance(x: 548, y: -103) equal_4e6f4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 721, y: -216) ifexpression_f5a3d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 454, y: -216) if_7f5e5c root.Std_k98ojb.Std.If {}\n        num_5c0677 -> generaterange_f6d6e9.from\n        2 -> generaterange_f6d6e9.to\n        generaterange_f6d6e9.list -> lessthanorequal_bf6c1a.right\n        num_5c0677 -> lessthanorequal_bf6c1a.left\n        lessthanorequal_bf6c1a.result -> ifexpression_f5a3d6.else\n        generaterange_f6d6e9.list -> greaterthan_8d5e63.right\n        2 -> greaterthan_8d5e63.left\n        greaterthan_8d5e63.result -> ifexpression_f5a3d6.then\n        num_5c0677 -> modulo_fcafaa.value\n        generaterange_f6d6e9.list -> modulo_fcafaa.divisor\n        modulo_fcafaa.result -> equal_4e6f4c.left\n        0 -> equal_4e6f4c.right\n        equal_4e6f4c.result -> ifexpression_f5a3d6.value\n        ifexpression_f5a3d6.else -> continue_9a54bb\n        ifexpression_f5a3d6.then -> if_7f5e5c.execute\n        if_7f5e5c.predicate -> output_c457b3\n        execute_b7b391 -> generaterange_f6d6e9.reset\n    }\n\n    \n\n    instance(x: 20, y: -187) num_prime_6a7daa root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_0d5e5b root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 461, y: -175) lessthanorequal_f1f3a7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 260, y: -219) and_7eacf4 root.Std_k98ojb.Logic.And {}\n        instance(x: 358, y: -219) or_f4d6a9 root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_0d5e5b.left\n        0 -> greaterthan_0d5e5b.right\n        y_5390f5 -> lessthanorequal_f1f3a7.left\n        0 -> lessthanorequal_f1f3a7.right\n        x_853326 -> lessthanorequal_f1f3a7.right\n        y_5390f5 -> greaterthan_0d5e5b.right\n        greaterthan_0d5e5b.result -> and_7eacf4.left\n        lessthanorequal_f1f3a7.result -> and_7eacf4.right\n        x_853326 -> lessthanorequal_f1f3a7.left\n        y_5390f5 -> greaterthan_0d5e5b.left\n        and_7eacf4.result -> or_f4d6a9.left\n        0 -> greaterthan_0d5e5b.right\n        x_853326 -> greaterthan_0d5e5b.left\n        y_5390f5 -> lessthanorequal_f1f3a7.right\n        lessthanorequal_f1f3a7.result -> and_7eacf4.right\n        0 -> lessthanorequal_f1f3a7.left\n        greaterthan_0d5e5b.result -> and_7eacf4.left\n        y_5390f5 -> greaterthan_0d5e5b.right\n        x_853326 -> lessthanorequal_f1f3a7.left\n        and_7eacf4.result -> or_f4d6a9.right\n        or_f4d6a9.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -85, y: 20) opposite_signs_1f5cdd root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6eacf5 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6eacf5.value\n        11 -> modulo_6eacf5.divisor\n        modulo_6eacf5.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 11) is_diff_7a4dad root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_3d3a7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3d3a7b.input\n        search_ai -> replace_3d3a7b.search\n        replace_ai -> replace_3d3a7b.replace\n        replace_3d3a7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -246, y: 185) replace_char_90f5c9 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 176) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        func() {\n            in(x: -405, y: -108, name: \"input\") property(String) input_a2a6d5\n\n            out(x: 409, y: -112, name: \"output\") property(Bool) output_73eacf\n\n            instance(x: 14, y: -114, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_68f9a0 root.Std_k98ojb.Logic.Equal {}\n            input_a2a6d5 -> tolower_7b3b7b.input\n            tolower_7b3b7b.output -> equal_68f9a0.right\n            input_a2a6d5 -> equal_68f9a0.left\n            equal_68f9a0.equal -> output_73eacf\n        } -> tolower_7b3b7b.compare\n        tolower_7b3b7b.isEqual -> output_ai\n    }\n\n    \n\n    instance(x: -145, y: 209) is_lower_6d8f6a root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -105, y: -167) unique_3f3ee6 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -432, y: -105) reduce_4b8927 root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> unique_3f3ee6.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Bool) _7dd980\n\n            instance(x: 92, y: -22) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            x_8ee839 -> contains_1088d5.item\n            x_8ee839 -> contains_1088d5.list\n            Logic.Not(contains_1088d5.contains) -> _7dd980\n        } -> unique_3f3ee6.handler\n\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n            in(x: 44, y: -50, name: \"acc\") property(Number) acc_8f3e6b\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            Math.Mul(acc_8f3e6b, x_8ee839) -> _7dd980\n        } -> reduce_4b8927.reducer\n\n        unique_3f3ee6.output_list -> reduce_4b8927.items\n        1 -> reduce_4b8927.context\n        execute_19300c -> unique_3f3ee6.execute\n        unique_3f3ee6.continue -> continue_45190b\n        reduce_4b8927.output -> output_cffcc2\n    }\n\n    \n\n    instance(x: -55, y: 529) unique_product_b9ff6b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 113) difference_5d6f4b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5d6f4b.left\n        list2_ai -> difference_5d6f4b.right\n        difference_5d6f4b.difference -> output_ai\n\n        instance(x: 307, y: -8) difference_9a7c7e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_9a7c7e.right\n        list2_ai -> difference_9a7c7e.left\n        difference_9a7c7e.difference -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 68) find_dissimilar_0f5d1b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 41, y: -121) slice_6f5dfe root.Std_k98ojb.List.Slice {}\n        instance(x: 47, y: -159) slice_faae5a root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_6f5dfe.list\n        n_68068c -> slice_6f5dfe.start\n        -1 -> slice_6f5dfe.end\n        list_48148f -> slice_faae5a.list\n        0 -> slice_faae5a.start\n        n_68068c -> slice_faae5a.end\n        slice_faae5a.slice -> output_823209\n        slice_6f5dfe.slice -> concat_7b417b.left\n        slice_faae5a.slice -> concat_7b417b.right\n        concat_7b417b.result -> output_823209\n    }\n\n    \n\n    instance(x: 16, y: -11) rotate_right_0d6f7c root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7d5e4b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d5e4b.items\n        0 -> reduce_7d5e4b.initialValue\n        func() {\n            in(x: -13, y: -10, name: \"accumulated\") property(Number) current_8f9a2a\n            in(x: -16, y: 10, name: \"current\") property(Number) current_7d54b4\n\n            out(x: 108, y: -3) name: \"sum\" property(Number) sum_7c9e2f\n\n            instance(x: 10, y: 10) add_6a401b root.Std_k98ojb.Math.Add {}\n            current_8f9a2a -> add_6a401b.first\n            current_7d54b4 -> add_6a401b.second\n            add_6a401b.result -> sum_7c9e2f\n        } -> reduce_7d5e4b.reducer\n        reduce_7d5e4b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -3, y: 11) _sum_60dbbf root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_f6d9f4 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 37, y: -150) greaterthan_0eacf4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 214, y: -151) modulo_6d6a7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 384, y: -150) and_6f6e2b root.Std_k98ojb.Logic.And {}\n        instance(x: 545, y: -150) ifexpression_f7d9a9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"not is_prime\"\n        }\n        num_5c0677 -> generaterange_f6d9f4.from\n        2 -> generaterange_f6d9f4.to\n        generaterange_f6d9f4.list -> greaterthan_0eacf4.left\n        num_5c0677 -> greaterthan_0eacf4.right\n        greaterthan_0eacf4.result -> modulo_6d6a7c.value\n        generaterange_f6d9f4.list -> modulo_6d6a7c.divisor\n        modulo_6d6a7c.result -> and_6f6e2b.left\n        0 -> and_6f6e2b.right\n        and_6f6e2b.result -> ifexpression_f7d9a9.else\n        ifexpression_f7d9a9.then -> continue_9a54bb\n        num_5c0677 -> ifexpression_f7d9a9.gen_1\n        1 -> ifexpression_f7d9a9.gen_0\n        ifexpression_f7d9a9.value -> output_c457b3\n        execute_b7b391 -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -26, y: -18) num_prime_7f4e9c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 68, y: -174) greaterthan_0eacf4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 151, y: -288) lessthanorequal_fbe7f7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 368, y: -240) and_7d9e5a root.Std_k98ojb.Logic.And {}\n        instance(x: 198, y: -175) not_8f5cde root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_0eacf4.left\n        0 -> greaterthan_0eacf4.right\n        y_5390f5 -> lessthanorequal_fbe7f7.left\n        0 -> lessthanorequal_fbe7f7.right\n        x_853326 -> lessthanorequal_fbe7f7.right\n        y_5390f5 -> greaterthan_0eacf4.right\n        not_8f5cde.input -> and_7d9e5a.left\n        greaterthan_0eacf4.result -> and_7d9e5a.right\n        lessthanorequal_fbe7f7.result -> not_8f5cde.input\n        and_7d9e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -126, y: 10) opposite_signs_4bddd4 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 140, y: -22) modulo_5d6a9b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5d6a9b.value\n        11 -> modulo_5d6a9b.divisor\n        modulo_5d6a9b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n\n    \n\n    instance(x: -178, y: 254) replace_char_7bddd4 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 749, y: 132) to_lower_5b3e0d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1109, y: 132) is_equal_6f1a8c root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_5b3e0d.input\n        to_lower_5b3e0d.output -> is_equal_6f1a8c.left\n        input_ai -> is_equal_6f1a8c.right\n        is_equal_6f1a8c.equal -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_7e3bfb root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -208, y: -105) unique_2d9a2c root.Std_k98ojb.Iteration.Filter {}\n        list_5fda54 -> unique_2d9a2c.items\n        func() {\n            in(x: 376, y: 33, name: \"elem\") property(Number) elem_10eacf\n\n            out(x: -89, y: 104, name: \"\") property(Bool) _5d6f2b\n\n            instance(x: -108, y: 73) contains_2c1a64 root.Std_k98ojb.List.Contains {}\n            elem_10eacf -> contains_2c1a64.item\n            false -> contains_2c1a64.not\n            contains_2c1a64.contains -> _5d6f2b\n        } -> unique_2d9a2c.handler\n        instance(x: -308, y: 7) reduce_5e6a2d root.Std_k98ojb.Iteration.Reduce {}\n        unique_2d9a2c.output_list -> reduce_5e6a2d.item\n        func() {\n            in(x: -144, y: -30, name: \"acc\") property(Number) acc_f7f7ea\n\n            in(x: 8, y: -108, name: \"x\") property(Number) x_9e65b2\n\n            out(x: -129, y: -48, name: \"\") property(Number) _d3c6a6\n\n            instance(x: -73, y: -79) mul_20f104 root.Std_k98ojb.Math.Mul {}\n            acc_f7f7ea -> mul_20f104.first\n            x_9e65b2 -> mul_20f104.second\n            mul_20f104.result -> _d3c6a6\n        } -> reduce_5e6a2d.reducer\n        1 -> reduce_5e6a2d.initial_value\n        reduce_5e6a2d.output_list -> output_cffcc2\n    }\n\n    \n\n    instance(x: -48, y: -309) unique_product_f7f7ea root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 194, y: 10) difference_0f5e2a root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_0f5e2a.left\n        list2_ai -> difference_0f5e2a.right\n        instance(x: -37, y: 64) reverse_b0d3c7 root.Std_k98ojb.List.Reversed {}\n        list2_ai -> reverse_b0d3c7.list\n        instance(x: 194, y: 65) difference_0f5e2a_2 root.Std_k98ojb.Sets.Difference {}\n        reverse_b0d3c7.reversed -> difference_0f5e2a_2.left\n        list1_ai -> difference_0f5e2a_2.right\n        instance(x: 340, y: -6) concat_98bddd root.Std_k98ojb.List.Concat {}\n        difference_0f5e2a.difference -> concat_98bddd.left\n        difference_0f5e2a_2.difference -> concat_98bddd.right\n        concat_98bddd.concat -> output_ai\n    }\n\n    \n\n    instance(x: -134, y: 6) find_dissimilar_7d1c37 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 439, y: -112) concat_6f8bdc root.Std_k98ojb.List.Concat {}\n        instance(x: 175, y: -112) slice_0a4e7d root.Std_k98ojb.List.Slice {}\n        instance(x: 349, y: -112) slice_c6f5c4 root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_0a4e7d.list\n        n_68068c -> slice_0a4e7d.start\n        -1 -> slice_0a4e7d.end\n        list_48148f -> slice_c6f5c4.list\n        0 -> slice_c6f5c4.start\n        n_68068c -> slice_c6f5c4.end\n        slice_c6f5c4.slice -> concat_6f8bdc.right\n        slice_0a4e7d.slice -> concat_6f8bdc.left\n        concat_6f8bdc.result -> output_823209\n    }\n\n    \n\n    instance(x: 10, y: -155) rotate_right_8c6eda root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -14) reduce_7d9e5b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d9e5b.items\n        0 -> reduce_7d9e5b.initialValue\n        func() {\n            in(x: -143, y: -14, name: \"accumulated\") property(Number) current_8f8a8c\n            in(x: -26, y: -14, name: \"current\") property(Number) current_b5079d\n\n            out(x: 110, y: -14, name: \"sum\") property(Number) sum_f3eacf\n\n            instance(x: 8, y: -14) add_2f6a8c root.Std_k98ojb.Math.Add {}\n            current_8f8a8c -> add_2f6a8c.first\n            current_b5079d -> add_2f6a8c.second\n            add_2f6a8c.result -> sum_f3eacf\n        } -> reduce_7d9e5b.reducer\n        reduce_7d9e5b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 11) _sum_603c7c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -81, y: -216) generaterange_6f7dfe root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 32, y: -140) greaterthan_f3eacf root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 54, y: -185) modulo_6f7dfe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 211, y: -107) ifexpression_3c1e5a root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        instance(x: 462, y: -127) and_8ba06b root.Std_k98ojb.Logic.And {}\n        instance(x: 321, y: -250) if_f3eacf root.Std_k98ojb.Std.If {}\n        instance(x: 146, y: -185) lessthanorequal_7a6f9d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 280, y: -302) ifexpression_f3eacf root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 1\"\n        }\n        num_5c0677 -> generaterange_6f7dfe.from\n        2 -> generaterange_6f7dfe.to\n        generaterange_6f7dfe.list -> modulo_6f7dfe.divisor\n        num_5c0677 -> greaterthan_f3eacf.left\n        num_5c0677 -> lessthanorequal_7a6f9d.right\n        1 -> lessthanorequal_7a6f9d.left\n        modulo_6f7dfe.result -> ifexpression_3c1e5a.gen_0\n        greaterthan_f3eacf.result -> and_8ba06b.left\n        lessthanorequal_7a6f9d.result -> and_8ba06b.right\n        and_8ba06b.result -> ifexpression_f3eacf.gen_1\n        2 -> greaterthan_f3eacf.right\n        modulo_6f7dfe.value -> ifexpression_3c1e5a.gen_1\n        ifexpression_3c1e5a.value -> if_f3eacf.predicate\n        ifexpression_f3eacf.result -> if_f3eacf.predicate\n        execute_b7b391 -> modulo_6f7dfe.execute\n        ifexpression_3c1e5a.then -> if_f3eacf.execute\n        if_f3eacf.value -> output_c457b3\n        ifexpression_3c1e5a.else -> continue_9a54bb\n        if_f3eacf.else -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 20, y: -168) num_prime_bf5d7b root.main.num_prime {}\n\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -174) greaterthan_f3d1b8 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 150, y: -217) and_eceee6 root.Std_k98ojb.Logic.And {}\n        instance(x: 150, y: -144) not_3a4d0c root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_f3d1b8.left\n        y_5390f5 -> greaterthan_f3d1b8.right\n        greaterthan_f3d1b8.result -> and_eceee6.left\n        not_3a4d0c.input -> and_eceee6.right\n        x_853326 -> not_3a4d0c.input\n        y_5390f5 -> not_3a4d0c.input\n        and_eceee6.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -174, y: 28) opposite_signs_9eacf5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -22) modulo_5d7b8a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5d7b8a.value\n        11 -> modulo_5d7b8a.divisor\n        modulo_5d7b8a.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_2f4bdc root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2f4bdc.input\n        search_ai -> replace_2f4bdc.search\n        replace_ai -> replace_2f4bdc.replace\n        replace_2f4bdc.output -> output_ai\n    }\n\n    \n\n    instance(x: -139, y: 165) replace_char_80d7a2 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 76, y: 132) tolower_5a4b6c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5a4b6c.input\n        func() {\n            in(x: -206, y: -136, name: \"input\") property(String) input_a7d3f4\n\n            out(x: 249, y: -138, name: \"output\") property(Bool) output_5eacf4\n\n            instance(x: 120, y: -138, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_7f6d9a root.Std_k98ojb.Logic.Equal {}\n            input_a7d3f4 -> equal_7f6d9a.left\n            input_a7d3f4 -> equal_7f6d9a.right\n            equal_7f6d9a.equal -> output_5eacf4\n        } -> tolower_5a4b6c.isLower\n        tolower_5a4b6c.lower -> output_ai\n    }\n\n    \n\n    instance(x: -108, y: 23) is_lower_7f6d9a root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -231, y: -144) unique_1f1e7a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 560, y: -144) reduce_6d1c31 root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> unique_1f1e7a.items\n        func() {\n            in(x: -231, y: 20) name(\"it\") property(Number) it_6d1c31\n\n            out(x: 560, y: 20) name(\"\") property(Bool) _6d1c31\n\n            instance(x: -231, y: 48) contains_7e9fdd root.Std_k98ojb.List.Contains {}\n            it_6d1c31 -> contains_7e9fdd.item\n            unique_1f1e7a.items -> contains_7e9fdd.list\n\n            Logic.Not(contains_7e9fdd.contains) -> _6d1c31\n        } -> unique_1f1e7a.handler\n        unique_1f1e7a.output_list -> reduce_6d1c31.item\n        func() {\n            in(x: -231, y: 80) name(\"acc\") property(Number) acc_6d1c31\n\n            in(x: -231, y: 95) name(\"it\") property(Number) it_6d1c31\n\n            out(x: 560, y: 95) name(\"\") property(Number) _6d1c31\n\n            Math.Mul(acc_6d1c31, it_6d1c31) -> _6d1c31.result\n        } -> reduce_6d1c31.reducer\n        execute_19300c -> unique_1f1e7a.execute\n        unique_1f1e7a.continue -> continue_45190b\n        reduce_6d1c31.output_value -> output_cffcc2\n    }\n\n    \n\n    instance(x: 8, y: -12) unique_product_700393 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 93, y: 104) difference_6e5a2c root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_6e5a2c.left\n        list2_ai -> difference_6e5a2c.right\n        instance(x: 237, y: 104) reverse_difference_0f3d6d root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> reverse_difference_0f3d6d.left\n        list1_ai -> reverse_difference_0f3d6d.right\n        instance(x: 375, y: -4) concat_4eacf7 root.Std_k98ojb.List.Concat {}\n        difference_6e5a2c.difference -> concat_4eacf7.left\n        reverse_difference_0f3d6d.difference -> concat_4eacf7.right\n        concat_4eacf7.concat -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 10) find_dissimilar_2c5a5b root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 44, y: -161) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 475, y: -161) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_3f3ee6.list\n        n_68068c -> slice_3f3ee6.start\n        -1 -> slice_3f3ee6.end\n        list_48148f -> concat_0234d2.right\n        slice_3f3ee6.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -175, y: -10) rotate_right_6c3e1b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -11) reduce_2d0e7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 56, y: -30) add_5c4167 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> reduce_2d0e7b.items\n        0 -> reduce_2d0e7b.initialValue\n        func() {\n            in(x: -13, y: -5) property(Number) accumulated_4f98a9\n            in(x: -13, y: 6) property(Number) current_6c97ea\n\n            out(x: 20, y: 2) property(Number) sum_5bddd6\n\n            add_5c4167.first -> accumulated_4f98a9\n            add_5c4167.second -> current_6c97ea\n            add_5c4167.result -> sum_5bddd6\n        } -> reduce_2d0e7b.reducer\n        reduce_2d0e7b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -31, y: 9) _sum_6c92e0 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -83, y: -145) generaterange_f6d6e9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 277, y: -103) lessthanorequal_bf6c1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 454, y: -103) greaterthan_8d5e63 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 721, y: -103) modulo_fcafaa root.Std_k98ojb.Math.Modulo {}\n        instance(x: 548, y: -103) equal_4e6f4c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 721, y: -216) ifexpression_f5a3d6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 454, y: -216) if_7f5e5c root.Std_k98ojb.Std.If {}\n        num_5c0677 -> generaterange_f6d6e9.from\n        2 -> generaterange_f6d6e9.to\n        generaterange_f6d6e9.list -> lessthanorequal_bf6c1a.right\n        num_5c0677 -> lessthanorequal_bf6c1a.left\n        lessthanorequal_bf6c1a.result -> ifexpression_f5a3d6.else\n        generaterange_f6d6e9.list -> greaterthan_8d5e63.right\n        2 -> greaterthan_8d5e63.left\n        greaterthan_8d5e63.result -> ifexpression_f5a3d6.then\n        num_5c0677 -> modulo_fcafaa.value\n        generaterange_f6d6e9.list -> modulo_fcafaa.divisor\n        modulo_fcafaa.result -> equal_4e6f4c.left\n        0 -> equal_4e6f4c.right\n        equal_4e6f4c.result -> ifexpression_f5a3d6.value\n        ifexpression_f5a3d6.else -> continue_9a54bb\n        ifexpression_f5a3d6.then -> if_7f5e5c.execute\n        if_7f5e5c.predicate -> output_c457b3\n        execute_b7b391 -> generaterange_f6d6e9.reset\n    }\n\n    \n\n    instance(x: 20, y: -187) num_prime_6a7daa root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_6d6bdf root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 409, y: -195) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 237, y: -265) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 401, y: -135) not_75283f root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_6d6bdf.left\n        0 -> greaterthan_6d6bdf.right\n        y_5390f5 -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        greaterthan_6d6bdf.result -> and_80a119.left\n        lessthanorequal_f11fda.result -> and_80a119.right\n        not_75283f.input -> output_3339a3\n        and_80a119.result -> not_75283f.input\n    }\n\n    \n\n    instance(x: -46, y: 10) opposite_signs_7d6e6b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6d6a2b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6d6a2b.value\n        11 -> modulo_6d6a2b.divisor\n        modulo_6d6a2b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -45, y: -7) is_diff_98eacf root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_7d6f6a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7d6f6a.input\n        search_ai -> replace_7d6f6a.search\n        replace_ai -> replace_7d6f6a.replace\n        replace_7d6f6a.output -> output_ai\n    }\n\n    \n\n    instance(x: -240, y: 185) replace_char_93eacf root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 764, y: 176) to_lower_5d6b0e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1154, y: 173) is_equal_2f5a7c root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_5d6b0e.input\n        to_lower_5d6b0e.output -> is_equal_2f5a7c.left\n        input_ai -> is_equal_2f5a7c.right\n        is_equal_2f5a7c.equal -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_6e8d1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -115, y: -165) unique_5fda54 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -109, y: 37, name: \"elem\") property(Number) elem_2d9e5a\n\n            out(x: 113, y: 63, name: \"\") property(Bool) _4f8bdc\n\n            instance(x: 115, y: -10) contains_7c405d root.Std_k98ojb.List.Contains {}\n            elem_2d9e5a -> contains_7c405d.item\n            list_5fda54 -> contains_7c405d.list\n            Logic.Not(root, false) -> _4f8bdc\n        } -> unique_5fda54.handler\n        instance(x: -123, y: 69) reduce_5fda54 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -107, y: 37, name: \"acc\") property(Number) acc_2d9e5a\n\n            in(x: -109, y: 63, name: \"elem\") property(Number) elem_4f8bdc\n\n            out(x: 113, y: 63, name: \"\") property(Number) _7c405d\n\n            instance(x: 115, y: -10) mul_2d9e5a root.Std_k98ojb.Math.Mul {}\n            acc_2d9e5a -> mul_2d9e5a.first\n            elem_4f8bdc -> mul_2d9e5a.second\n            mul_2d9e5a.result -> _7c405d\n        } -> reduce_5fda54.reducer\n        list_5fda54 -> unique_5fda54.items\n        1 -> reduce_5fda54.initial_value\n        unique_5fda54.output_list -> reduce_5fda54.item\n        reduce_5fda54.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -36, y: -7) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 36) difference_1a5e2b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5e2b.left\n        list2_ai -> difference_1a5e2b.right\n        difference_1a5e2b.difference -> output_ai\n\n        instance(x: 304, y: -6) symmetric_difference_7f9d8c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> symmetric_difference_7f9d8c.left\n        list1_ai -> symmetric_difference_7f9d8c.right\n\n        instance(x: 304, y: -6) difference_5eacf8 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5eacf8.left\n        list2_ai -> difference_5eacf8.right\n\n        instance(x: 304, y: -6) concat_7f9d8c root.Std_k98ojb.List.Concat {}\n        symmetric_difference_7f9d8c.difference -> concat_7f9d8c.left\n        difference_5eacf8.difference -> concat_7f9d8c.right\n\n        concat_7f9d8c.concat -> output_ai\n    }\n\n    \n\n    instance(x: -132, y: 4) find_dissimilar_60a7b9 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -108) concat_6d9f5b root.Std_k98ojb.List.Concat {}\n        instance(x: 179, y: -108) slice_6eacf5 root.Std_k98ojb.List.Slice {}\n        instance(x: 243, y: -108) slice_7d6fbc root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_6eacf5b.list\n        n_68068c -> slice_6eacf5b.end\n        0 -> slice_6eacf5b.start\n        list_48148f -> slice_7d6fbc.list\n        -1 -> slice_7d6fbc.end\n        n_68068c -> slice_7d6fbc.start\n        slice_6eacf5b.slice -> concat_6d9f5b.left\n        slice_7d6fbc.slice -> concat_6d9f5b.right\n        concat_6d9f5b.result -> output_823209\n    }\n\n    \n\n    instance(x: 14, y: -101) rotate_right_7a2e4c root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7d6bdf root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6bdf.items\n        0 -> reduce_7d6bdf.initialValue\n        func() {\n            in(x: -34, y: -15, name: \"accumulated\") property(Number) accumulated_8f9a2e\n            in(x: -34, y: 11, name: \"current\") property(Number) current_706dfe\n\n            out(x: 104, y: -15, name: \"sum\") property(Number) sum_6bddd8\n\n            instance(x: 29, y: -3) add_7f5a2c root.Std_k98ojb.Math.Add {}\n            accumulated_8f9a2e -> add_7f5a2c.first\n            current_706dfe -> add_7f5a2c.second\n            add_7f5a2c.result -> sum_6bddd8\n        } -> reduce_7d6bdf.reducer\n        reduce_7d6bdf.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 9) _sum_3e506c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_6f3dfe root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 75, y: -150) greaterthan_faae6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 244, y: -150) modulo_3f5d6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 474, y: -150) and_7e9c9b root.Std_k98ojb.Logic.And {}\n        instance(x: 629, y: -150) ifexpression_3f3dfe root.Std_k98ojb.Std.IfExpression {\n            expression: \"not is_prime\"\n        }\n        num_5c0677 -> generaterange_6f3dfe.from\n        2 -> generaterange_6f3dfe.to\n        generaterange_6f3dfe.list -> greaterthan_faae6c.left\n        num_5c0677 -> greaterthan_faae6c.right\n        greaterthan_faae6c.result -> modulo_3f5d6a.value\n        2 -> modulo_3f5d6a.divisor\n        modulo_3f5d6a.result -> and_7e9c9b.left\n        num_5c0677 -> and_7e9c9b.right\n        and_7e9c9b.result -> ifexpression_3f3dfe.expression\n        ifexpression_3f3dfe.value -> output_c457b3\n        execute_b7b391 -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 20, y: -168) num_prime_6eacf4 root.main.num_prime {}\n\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -247) greaterthan_6b4e4c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 105, y: -218) lessthanorequal_c7d4f9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 326, y: -218) and_7c9a7e root.Std_k98ojb.Logic.And {}\n        x_853326 -> greaterthan_6b4e4c.left\n        0 -> greaterthan_6b4e4c.right\n        y_5390f5 -> lessthanorequal_c7d4f9.left\n        0 -> lessthanorequal_c7d4f9.right\n        greaterthan_6b4e4c.result -> and_7c9a7e.left\n        lessthanorequal_c7d4f9.result -> and_7c9a7e.right\n        and_7c9a7e.result -> output_3339a3\n\n        x_853326 -> lessthanorequal_c7d4f9.left\n        0 -> greaterthan_6b4e4c.right\n        y_5390f5 -> greaterthan_6b4e4c.right\n        y_5390f5 -> lessthanorequal_c7d4f9.right\n    }\n\n    \n\n    instance(x: -184, y: 21) opposite_signs_6a925c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -23) modulo_5d9e9b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5d9e9b.value\n        11 -> modulo_5d9e9b.divisor\n        modulo_5d9e9b.result -> output_f2630f\n    }\n    \n\n    instance(x: -48, y: 27) is_diff_a6c3a5 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 128) replace_7d9f84 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7d9f84.input\n        search_ai -> replace_7d9f84.search\n        replace_ai -> replace_7d9f84.replace\n        replace_7d9f84.output -> output_ai\n    }\n\n    \n\n    instance(x: -152, y: 306) replace_char_4a6b6c root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 749, y: 206) to_lower_5b3e7a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 750, y: -221) is_equal_2d3f8c root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_5b3e7a.input\n        to_lower_5b3e7a.output -> is_equal_2d3f8c.left\n        input_ai -> is_equal_2d3f8c.right\n        is_equal_2d3f8c.equal -> output_ai\n    }\n\n    \n\n    instance(x: -419, y: 105) is_lower_f7e6b4 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -315, y: -167) unique_list_6f4e9d root.Std_k98ojb.Iteration.Filter {\n            handler: \"\"\"\n                in(x: -300, y: 30, name: \"item\") property(Number) item_2a2c6b\n                out(x: 157, y: 31, name: \"\") property(Bool) _4e8f9d\n\n                instance(x: -280, y: 127) contains_f0226d root.Std_k98ojb.List.Contains {}\n                item_2a2c6b -> contains_f0226d.item\n                list_5fda54 -> contains_f0226d.list\n                contains_f0226d.contains -> _4e8f9d\n            \"\"\"\n        }\n        \n        instance(x: -13, y: 17) reduce_product_2a8b4c root.Std_k98ojb.Iteration.Reduce {\n            handler: \"\"\"\n                in(x: -50, y: 167, name: \"acc\") property(Number) acc_f3d6e7\n                in(x: -153, y: 167, name: \"item\") property(Number) item_2a8b4c\n\n                out(x: 98, y: 167, name: \"\") property(Number) _f3d6e7\n                \n                instance(x: -104, y: 167) mul_5d9db5 root.Std_k98ojb.Math.Mul {}\n                acc_f3d6e7 -> mul_5d9db5.first\n                item_2a8b4c -> mul_5d9db5.second\n                mul_5d9db5.result -> _f3d6e7\n            \"\"\"\n        }\n\n        list_5fda54 -> unique_list_6f4e9d.items\n        unique_list_6f4e9d.output_list -> reduce_product_2a8b4c.item\n        1 -> reduce_product_2a8b4c.acc\n        execute_19300c -> unique_list_6f4e9d.trigger\n        unique_list_6f4e9d.done -> continue_45190b\n        reduce_product_2a8b4c.output -> output_cffcc2\n    }\n\n    \n\n    instance(x: -27, y: 3) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 109, y: 10) difference_0f5e5d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_0f5e5d.left\n        list2_ai -> difference_0f5e5d.right\n        instance(x: -364, y: 10) difference_b7a9c7 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_b7a9c7.left\n        list1_ai -> difference_b7a9c7.right\n        instance(x: 259, y: -34) concat_60eacf root.Std_k98ojb.List.Concat {}\n        difference_0f5e5d.difference -> concat_60eacf.left\n        difference_b7a9c7.difference -> concat_60eacf.right\n        concat_60eacf.concat -> output_ai\n    }\n\n    \n\n    instance(x: -234, y: 12) find_dissimilar_5b8f5d root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 452, y: -108) concat_0a4f7d root.Std_k98ojb.List.Concat {}\n        instance(x: 263, y: -128) slice_c5c5e2 root.Std_k98ojb.List.Slice {}\n        instance(x: 105, y: -110) sub_4f7d65 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_c5c5e2.list\n        n_68068c -> sub_4f7d65.first\n        1 -> sub_4f7d65.second\n        sub_4f7d65.result -> slice_c5c5e2.end\n        -1 -> slice_c5c5e2.start\n        list_48148f -> concat_0a4f7d.right\n        slice_c5c5e2.slice -> concat_0a4f7d.left\n        concat_0a4f7d.result -> output_823209\n    }\n\n    \n\n    instance(x: 6, y: -136) rotate_right_7b334c root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -30) reduce_7d6b5e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6b5e.items\n        0 -> reduce_7d6b5e.initialValue\n        func() {\n            in(x: -134, y: -113, name: \"accumulated\") property(Number) accumulated_c8a9f9\n            in(x: -128, y: -74, name: \"current\") property(Number) current_05b6d9\n\n            out(x: 105, y: -27, name: \"sum\") property(Number) sum_f3e6c4\n\n            instance(x: 134, y: -84) add_c6a88f root.Std_k98ojb.Math.Add {}\n            accumulated_c8a9f9 -> add_c6a88f.first\n            current_05b6d9 -> add_c6a88f.second\n            add_c6a88f.result -> sum_f3e6c4\n        } -> reduce_7d6b5e.reducer\n        reduce_7d6b5e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -109, y: 11) _sum_2f6093 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -188, y: -126) generaterange_0d5f4c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 375, y: -151) greaterthan_2e45a7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 698, y: -105) modulo_6c3d8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 535, y: -224) ifexpression_f7e5a5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0\"\n        }\n        instance(x: 1065, y: -141) and_6f8c9d root.Std_k98ojb.Logic.And {}\n        instance(x: 792, y: -309) ifexpression_c3a4e7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == 1\"\n        }\n        instance(x: 659, y: -409) for_6d4f7c root.Std_k98ojb.Std.For {}\n        num_5c0677 -> generaterange_0d5f4c.from\n        2 -> generaterange_0d5f4c.to\n        generaterange_0d5f4c.list -> for_6d4f7c.items\n        greaterthan_2e45a7.left -> modulo_6c3d8f.value\n        num_5c0677 -> modulo_6c3d8f.divisor\n        modulo_6c3d8f.result -> ifexpression_f7e5a5.gen_1\n        greaterthan_2e45a7.right -> ifexpression_f7e5a5.gen_0\n        for_6d4f7c.item -> greaterthan_2e45a7.right\n        modulo_6c3d8f.result -> and_6f8c9d.left\n        num_5c0677 -> and_6f8c9d.right\n        ifexpression_f7e5a5.value -> ifexpression_c3a4e7.gen_1\n        for_6d4f7c.index -> ifexpression_c3a4e7.gen_0\n        and_6f8c9d.result -> ifexpression_c3a4e7.else\n        ifexpression_f7e5a5.then -> ifexpression_c3a4e7.execute\n        for_6d4f7c.onItem -> ifexpression_f7e5a5.execute\n        execute_b7b391 -> for_6d4f7c.reset\n        ifexpression_c3a4e7.else -> continue_9a54bb\n        ifexpression_c3a4e7.then -> output_c457b3\n        ifexpression_f7e5a5.else -> for_6d4f7c.next\n    }\n\n    \n\n    instance(x: -128, y: 10) num_prime_e92d5a root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -174) greaterthan_b4e7d7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: -124) lessthanorequal_d5c2f8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 361, y: -175) and_00a8e4 root.Std_k98ojb.Logic.And {}\n        instance(x: 494, y: -174) or_f2da7c root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_b4e7d7.left\n        0 -> greaterthan_b4e7d7.right\n        y_5390f5 -> lessthanorequal_d5c2f8.left\n        0 -> lessthanorequal_d5c2f8.right\n        x_853326 -> lessthanorequal_d5c2f8.right\n        y_5390f5 -> greaterthan_b4e7d7.right\n        greaterthan_b4e7d7.result -> and_00a8e4.left\n        lessthanorequal_d5c2f8.result -> and_00a8e4.right\n        and_00a8e4.result -> or_f2da7c.gen_1\n        y_5390f5 -> greaterthan_b4e7d7.left\n        0 -> greaterthan_b4e7d7.right\n        x_853326 -> lessthanorequal_d5c2f8.left\n        or_f2da7c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -151, y: 20) opposite_signs_42d4e0 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -22) modulo_d5e7d0 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_d5e7d0.value\n        11 -> modulo_d5e7d0.divisor\n        modulo_d5e7d0.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -34, y: 11) is_diff_9a8bfc root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 470, y: 298) replace_5f8a5d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5f8a5d.input\n        search_ai -> replace_5f8a5d.search\n        replace_ai -> replace_5f8a5d.replace\n        replace_5f8a5d.output -> output_ai\n    }\n\n    \n\n    instance(x: -347, y: 261) replace_char_f09bdf root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 476, y: 139) to_lower_5b8e8d root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> to_lower_5b8e8d.input\n        func() {\n            in(x: -200, y: 34, name: \"left\") property(String) left_a7f61a\n            in(x: -194, y: 170, name: \"right\") property(String) right_5e8dfe\n\n            out(x: 662, y: 62, name: \"output\") property(Bool) output_b3b6c3\n\n            instance(x: 219, y: -14, stableId: \"dnbuj51ajiozratdcge1fc3s\") equal_7f0e7a root.Std_k98ojb.Logic.Equal {}\n            left_a7f61a -> equal_7f0e7a.left\n            right_5e8dfe -> equal_7f0e7a.right\n            equal_7f0e7a.equal -> output_b3b6c3\n        } -> to_lower_5b8e8d.compare_to\n        to_lower_5b8e8d.is_less_than_or_equal -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_7a1f9d root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -288, y: -18) reduce_1d1aaf root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -456, y: 30, name: \"acc\") property(Number) acc_7c6e8f\n\n            in(x: -245, y: 108, name: \"it\") property(Number) it_e96a5d\n\n            out(x: 200, y: 134, name: \"\") property(Number) _3bcdbb\n\n            instance(x: 73, y: 127) mul_4c851e root.Std_k98ojb.Math.Mul {}\n            acc_7c6e8f -> mul_4c851e.first\n            it_e96a5d -> mul_4c851e.second\n            mul_4c851e.result -> _3bcdbb\n        } -> reduce_1d1aaf.reducer\n        list_5fda54 -> reduce_1d1aaf.item\n        1 -> reduce_1d1aaf.initial_value\n        instance(x: -279, y: -68) unique_3e05b3 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -456, y: -38, name: \"it\") property(Number) it_1f4a6d\n\n            out(x: 276, y: -12, name: \"\") property(Bool) _e950b9\n\n            instance(x: 54, y: -12) not_3e8c4c root.Std_k98ojb.Logic.Not {}\n            func() {\n                in(x: -167, y: 11, name: \"it\") property(Number) it_0a1dcd\n\n                out(x: 56, y: 23, name: \"\") property(Bool) _598e4b\n\n                instance(x: -142, y: -57) contains_6c61f5 root.Std_k98ojb.List.Contains {}\n                it_0a1dcd -> contains_6c61f5.item\n                1 -> contains_6c61f5.list\n                contains_6c61f5.isEmpty -> _598e4b\n            } -> not_3e8c4c.input\n            it_1f4a6d -> not_3e8c4c.input\n            not_3e8c4c.output -> _e950b9\n        } -> unique_3e05b3.handler\n        list_5fda54 -> unique_3e05b3.items\n        unique_3e05b3.output_list -> reduce_1d1aaf.item\n        continue_45190b << execute_19300c\n        output_cffcc2 <- reduce_1d1aaf.result\n    }\n\n    \n\n    instance(x: -178, y: 26) unique_product_1f7e89 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 193, y: 129) difference_5b7a3d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b7a3d.left\n        list2_ai -> difference_5b7a3d.right\n        difference_5b7a3d.difference -> output_ai\n\n        instance(x: 463, y: 129) reverse_difference_8f0c85 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> reverse_difference_8f0c85.left\n        list1_ai -> reverse_difference_8f0c85.right\n\n        instance(x: -36, y: 74) concat_ea4d47 root.Std_k98ojb.List.Concat {}\n        difference_5b7a3d.difference -> concat_ea4d47.left\n        reverse_difference_8f0c85.difference -> concat_ea4d47.right\n        concat_ea4d47.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -162, y: 9) find_dissimilar_f03bdf root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -44, y: -140) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 659, y: -137) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_3f3ee6.list\n        n_68068c -> slice_3f3ee6.start\n        -1 -> slice_3f3ee6.end\n        0 -> slice_3f3ee6.list\n        list_48148f -> concat_0234d2.right\n        slice_3f3ee6.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -175, y: -127) rotate_right_9eacf9 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 390, y: -11) reduce_ebddd0 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 313, y: -176) add_c5e4c9 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> reduce_ebddd0.items\n        0 -> reduce_ebddd0.initialValue\n        func() {\n            in(x: -213, y: -176, name: \"accumulated\") property(Number) current_a95e8d\n            in(x: -246, y: -183, name: \"current\") property(Number) current_d0a8c5\n\n            out(x: 484, y: -207, name: \"sum\") property(Number) sum_43b9f2\n\n            add_c5e4c9.result -> sum_43b9f2\n            current_a95e8d -> add_c5e4c9.first\n            current_d0a8c5.value -> add_c5e4c9.second\n        } -> reduce_ebddd0.reducer\n        reduce_ebddd0.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -13, y: 16) _sum_b7f1d4 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 348, y: -169) generaterange_bf9c4e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 524, y: -207) greaterthan_caf6d6 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 314, y: -264) modulo_8a9c90 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 596, y: -270) ifexpression_a7f1e6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        instance(x: 432, y: -341) for_ee4aeb root.Std_k98ojb.Std.For {}\n        greaterthan_caf6d6.result -> ifexpression_a7f1e6.gen_0\n        modulo_8a9c90.result -> ifexpression_a7f1e6.gen_1\n        num_5c0677 -> generaterange_bf9c4e.from\n        2 -> generaterange_bf9c4e.to\n        generaterange_bf9c4e.list -> for_ee4aeb.items\n        for_ee4aeb.item -> greaterthan_caf6d6.left\n        num_5c0677 -> greaterthan_caf6d6.right\n        greaterthan_caf6d6.result -> for_ee4aeb.predicate\n        modulo_8a9c90.divisor -> ifexpression_a7f1e6.gen_2\n        for_ee4aeb.onItem -> modulo_8a9c90.execute\n        num_5c0677 -> modulo_8a9c90.value\n        ifexpression_a7f1e6.result -> output_c457b3\n        execute_b7b391 -> for_ee4aeb.reset\n        continue_9a54bb -> for_ee4aeb.next\n    }\n\n    \n\n    instance(x: -28, y: 20) num_prime_a6e4c5 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_0b6e9d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 461, y: -175) lessthanorequal_f2c9a3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 250, y: -219) and_6d3f8e root.Std_k98ojb.Logic.And {}\n        instance(x: 47, y: -219) or_6c3a7b root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_0b6e9d.left\n        0 -> greaterthan_0b6e9d.right\n        y_5390f5 -> lessthanorequal_f2c9a3.left\n        0 -> lessthanorequal_f2c9a3.right\n        x_853326 -> lessthanorequal_f2c9a3.right\n        y_5390f5 -> greaterthan_0b6e9d.right\n        greaterthan_0b6e9d.result -> and_6d3f8e.left\n        lessthanorequal_f2c9a3.result -> and_6d3f8e.right\n        y_5390f5 -> greaterthan_0b6e9d.left\n        0 -> greaterthan_0b6e9d.right\n        x_853326 -> lessthanorequal_f2c9a3.left\n        and_6d3f8e.result -> or_6c3a7b.left\n        and_6d3f8e.result -> output_3339a3\n        greaterthan_0b6e9d.result -> lessthanorequal_f2c9a3.right\n        lessthanorequal_f2c9a3.result -> or_6c3a7b.right\n    }\n\n    \n\n    instance(x: -418, y: 5) opposite_signs_0f5e5d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6eacf5 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6eacf5.value\n        11 -> modulo_6eacf5.divisor\n        modulo_6eacf5.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 11) is_diff_7a4dad root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_7d3a2b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7d3a2b.input\n        search_ai -> replace_7d3a2b.search\n        replace_ai -> replace_7d3a2b.replace\n        replace_7d3a2b.output -> output_ai\n    }\n\n    \n\n    instance(x: -180, y: 265) replace_char_94f4c9 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 76, y: 175) to_lower_4b9e9d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 406, y: 175) is_equal_23f5c4 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_4b9e9d.input\n        to_lower_4b9e9d.lowered -> is_equal_23f5c4.left\n        input_ai -> is_equal_23f5c4.right\n        is_equal_23f5c4.equal -> output_ai\n    }\n\n    \n\n    instance(x: -106, y: 178) to_lower_9bddd4 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -115, y: -165) unique_5fda54 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -109, y: 37, name: \"elem\") property(Number) elem_2d9e4a\n\n            out(x: 113, y: 60, name: \"\") property(Bool) _5fda54\n\n            instance(x: -89, y: 55) not_5fda54 root.Std_k98ojb.Logic.Not {}\n            instance(x: -27, y: 53) contains_5fda54 root.Std_k98ojb.List.Contains {}\n            elem_2d9e4a -> contains_5fda54.item\n            unique_5fda54.items -> contains_5fda54.list\n            contains_5fda54.contains -> not_5fda54.input\n            not_5fda54.output -> _5fda54\n        } -> unique_5fda54.handler\n        list_5fda54 -> unique_5fda54.items\n\n        instance(x: 187, y: -203) reduce_6b9e4a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -119, y: -105, name: \"acc\") property(Number) acc_6b9e4a\n\n            in(x: -237, y: -105, name: \"elem\") property(Number) elem_6b9e4a\n\n            out(x: 89, y: -105, name: \"\") property(Number) _6b9e4a\n\n            instance(x: -109, y: -73) mul_6b9e4a root.Std_k98ojb.Math.Mul {}\n            acc_6b9e4a -> mul_6b9e4a.first\n            elem_6b9e4a -> mul_6b9e4a.second\n            mul_6b9e4a.result -> _6b9e4a\n        } -> reduce_6b9e4a.reducer\n        unique_5fda54.output_list -> reduce_6b9e4a.item\n\n        1 -> reduce_6b9e4a.initial_value\n        execute_19300c -> unique_5fda54.execute\n        unique_5fda54.continue -> continue_45190b\n        reduce_6b9e4a.output -> output_cffcc2\n    }\n\n    \n\n    instance(x: -78, y: 31) unique_product_5fda54 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 36) difference_1a5d5b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5d5b.left\n        list2_ai -> difference_1a5d5b.right\n        difference_1a5d5b.difference -> output_ai\n\n        instance(x: 304, y: -6) symmetric_difference_7f9e8c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> symmetric_difference_7f9e8c.left\n        list1_ai -> symmetric_difference_7f9e8c.right\n        symmetric_difference_7f9e8c.difference -> difference_1a5d5b.right\n    }\n\n    \n\n    instance(x: -34, y: 26) find_dissimilar_0f509d root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -108) concat_6d9fbc root.Std_k98ojb.List.Concat {}\n        instance(x: 57, y: -105) slice_6a4c4e root.Std_k98ojb.List.Slice {}\n        instance(x: 235, y: -105) sub_5d9f4b root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_6a4c4e.list\n        n_68068c -> sub_5d9f4b.first\n        0 -> sub_5d9f4b.second\n        sub_5d9f4b.result -> slice_6a4c4e.end\n        list_48148f -> concat_6d9fbc.right\n        slice_6a4c4e.slice -> concat_6d9fbc.left\n        concat_6d9fbc.result -> output_823209\n    }\n\n    \n\n    instance(x: 75, y: -105) rotate_right_7bddd9 root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7b9d6e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7b9d6e.items\n        0 -> reduce_7b9d6e.initialValue\n        func() {\n            in(x: -154, y: -34, name: \"accumulated\") property(Number) accumulated_8f5a4c\n            in(x: -204, y: -10, name: \"current\") property(Number) current_b697b9\n\n            out(x: 108, y: -13, name: \"sum\") property(Number) sum_7eacf6\n\n            instance(x: 54, y: -2) add_fdcf7a root.Std_k98ojb.Math.Add {}\n            accumulated_8f5a4c -> add_fdcf7a.first\n            current_b697b9 -> add_fdcf7a.second\n            add_fdcf7a.result -> sum_7eacf6\n        } -> reduce_7b9d6e.reducer\n        reduce_7b9d6e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 35) _sum_6c906d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_f6d6c9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 37, y: -150) greaterthan_0f3e6d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 245, y: -149) modulo_f2c3a7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 100, y: -139) if_6f5e6d root.Std_k98ojb.Std.If {}\n        instance(x: 454, y: -140) and_27a4c4 root.Std_k98ojb.Logic.And {}\n        num_5c0677 -> generaterange_f6d6c9.from\n        2 -> generaterange_f6d6c9.to\n        generaterange_f6d6c9.list -> greaterthan_0f3e6d.left\n        num_5c0677 -> greaterthan_0f3e6d.right\n        greaterthan_0f3e6d.result -> if_6f5e6d.predicate\n        generaterange_f6d6c9.list -> modulo_f2c3a7.value\n        num_5c0677 -> modulo_f2c3a7.divisor\n        modulo_f2c3a7.result -> and_27a4c4.left\n        0 -> and_27a4c4.right\n        and_27a4c4.result -> if_6f5e6d.predicate\n        execute_b7b391 -> if_6f5e6d.execute\n        if_6f5e6d.value -> output_c457b3\n        if_6f5e6d.else -> continue_9a54bb\n        if_6f5e6d.then -> if_6f5e6d.continue\n    }\n\n    \n\n    instance(x: 10, y: -28) num_prime_f73c4b root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -247) greaterthan_6b0c8e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 154, y: -219) and_f7f26a root.Std_k98ojb.Logic.And {}\n        instance(x: -30, y: -107) lessthanorequal_5d9e2c root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> greaterthan_6b0c8e.left\n        0 -> greaterthan_6b0c8e.right\n        y_5390f5 -> lessthanorequal_5d9e2c.left\n        0 -> lessthanorequal_5d9e2c.right\n        greaterthan_6b0c8e.result -> and_f7f7fa.root.Std_k98ojb.Logic.Not {}\n        y_5390f5 -> greaterthan_41a4ca.root.Std_k98ojb.Math.GreaterThan {}.left\n        0 -> greaterthan_41a4ca.root.Std_k98ojb.Math.GreaterThan {}.right\n        lessthanorequal_5d9e2c.result -> and_f7f26a.left\n        x_853326 -> lessthanorequal_cdf0a6.root.Std_k98ojb.Math.LessThanOrEqual {}.left\n        0 -> lessthanorequal_cdf0a6.root.Std_k98ojb.Math.LessThanOrEqual {}.right\n        greaterthan_41a4ca.root.Std_k98ojb.Math.GreaterThan {}.result -> and_f7f26a.right\n        and_f7f7fa.root.Std_k98ojb.Logic.Not {}.output -> output_3339a3\n        lessthanorequal_cdf0a6.root.Std_k98ojb.Math.LessThanOrEqual {}.result -> and_f7f7fa.root.Std_k98ojb.Logic.And {}\n    }\n\n    \n\n    instance(x: -421, y: 5) opposite_signs_3c8e4d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -23) modulo_5d9e8a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5d9e8a.value\n        11 -> modulo_5d9e8a.divisor\n        modulo_5d9e8a.result -> output_f2630f\n    }\n    \n\n    instance(x: -44, y: 27) is_diff_d0c61b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 128) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -168, y: 204) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 749, y: 206) to_lower_5b9e0a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 750, y: -21) is_empty_f3d55f root.Std_k98ojb.List.IsEmpty {}\n        input_ai -> to_lower_5b9e0a.input\n        to_lower_5b9e0a.output -> is_empty_f3d55f.list\n        is_empty_f3d55f.isEmpty -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_6871c4 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -314, y: -115) unique_4eacf8 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -600, y: 78, name: \"elem\") property(Number) elem_ba2c7d\n\n            out(x: -358, y: 109, name: \"\") property(Bool) _4f4e4b\n            \n            instance(x: -473, y: 63) count_738d5d root.Std_k98ojb.Std.Count {}\n            list_5fda54 -> count_738d5d.reset\n            elem_ba2c7d -> count_738d5d.count\n            instance(x: -106, y: 10) equal_6d2e95 root.Std_k98ojb.Logic.Equal {}\n            count_738d5d.value -> equal_6d2e95.left\n            1 -> equal_6d2e95.right\n            equal_6d2e95.result -> _4f4e4b\n            \n        } -> unique_4eacf8.handler\n        list_5fda54 -> unique_4eacf8.items\n        \n        instance(x: -317, y: 204) reduce_469a9c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -651, y: 184, name: \"acc\") property(Number) acc_aebfcb\n            in(x: -732, y: 184, name: \"value\") property(Number) value_9d0bde\n\n            out(x: -378, y: 215, name: \"\") property(Number) _4eacf8\n            \n            instance(x: -615, y: 199) mul_ba4f8c root.Std_k98ojb.Math.Mul {}\n            acc_aebfcb -> mul_ba4f8c.first\n            value_9d0bde -> mul_ba4f8c.second\n            mul_ba4f8c.result -> _4eacf8\n            \n        } -> reduce_469a9c.reducer\n        unique_4eacf8.output_list -> reduce_469a9c.items\n        \n        execute_19300c -> unique_4eacf8.execute\n        unique_4eacf8.continue -> continue_45190b\n        unique_4eacf8.done -> continue_45190b\n        reduce_469a9c.output_value -> output_cffcc2\n        \n    }\n\n    \n\n    instance(x: 37, y: -15) unique_product_f3f4d6 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 109, y: 10) difference_3b5c8e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3b5c8e.left\n        list2_ai -> difference_3b5c8e.right\n        difference_3b5c8e.difference -> output_ai\n\n        instance(x: 470, y: -9) difference_6a9dce root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_6a9dce.right\n        list2_ai -> difference_6a9dce.left\n        difference_6a9dce.difference -> output_ai\n    }\n\n    \n\n    instance(x: -437, y: 50) find_dissimilar_8f1e4b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 459, y: -108) concat_6f8b6e root.Std_k98ojb.List.Concat {}\n        instance(x: 279, y: -69) slice_a7c6a5 root.Std_k98ojb.List.Slice {}\n        instance(x: 341, y: -108) slice_6d6f6e root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_a7c6a5.list\n        n_68068c -> slice_a7c6a5.end\n        0 -> slice_a7c6a5.start\n        list_48148f -> slice_6d6f6e.list\n        -1 -> slice_6d6f6e.end\n        n_68068c -> slice_6d6f6e.start\n        slice_6d6f6e.slice -> concat_6f8b6e.left\n        slice_a7c6a5.slice -> concat_6f8b6e.right\n        concat_6f8b6e.result -> output_823209\n    }\n\n    \n\n    instance(x: -140, y: -123) rotate_right_55d45d root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -35) reduce_7d6e8b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6e8b.items\n        0 -> reduce_7d6e8b.initialValue\n        func() {\n            in(x: -135, y: -4) name: \"accumulated\") property(Number) accumulated_bf93a5\n            in(x: -127, y: 12) name: \"current\") property(Number) current_6d08c2\n\n            out(x: 113, y: -24) name: \"sum\") property(Number) sum_4e9f95\n\n            instance(x: 234, y: -7) add_f3a9b0 root.Std_k98ojb.Math.Add {}\n            accumulated_bf93a5 -> add_f3a9b0.first\n            current_6d08c2 -> add_f3a9b0.second\n            add_f3a9b0.result -> sum_4e9f95\n        } -> reduce_7d6e8b.reducer\n        reduce_7d6e8b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -17, y: 103) _sum_dce3c5 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -180, y: -146) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 27, y: -158) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -155, y: -46) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 274, y: -155) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 181, y: -306) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 724, y: -25) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 475, y: -279) ifexpression_b720d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 613, y: -262) not_5e4a8b root.Std_k98ojb.Logic.Not {}\n        generaterange_038fce.from -> greaterthan_cb557d.right\n        num_5c0677 -> greaterthan_cb557d.left\n        1 -> greaterthan_cb557d.left\n        greaterthan_cb557d.result -> lessthanorequal_f11fda.right\n        num_5c0677 -> lessthanorequal_f11fda.left\n        generaterange_038fce.to -> map_6030c9.items\n        func() {\n            in(x: -24, y: 25, name: \"element\") property(Number) element_d0fd24\n\n            out(x: 71, y: 23, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 68, y: 19) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_d0fd24 -> mul_2f9d09.first\n            element_d0fd24 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        lessthanorequal_f11fda.result -> ifexpression_b720d7.gen_0\n        greaterthan_cb557d.right -> generaterange_038fce.to\n        num_5c0677 -> generaterange_038fce.from\n        2 -> generaterange_038fce.from\n        map_6030c9.output_list -> ifexpression_b720d7.gen_1\n        for_8cb3f6.index -> ifexpression_b720d7.gen_2\n        num_5c0677 -> ifexpression_b720d7.gen_3\n        ifexpression_b720d7.value -> and_80a119.left\n        and_80a119.right -> not_5e4a8b.input\n        not_5e4a8b.result -> output_c457b3\n        for_8cb3f6.onItem -> ifexpression_b720d7.execute\n        ifexpression_b720d7.value -> and_80a119.left\n        and_80a119.result -> continue_9a54bb\n        execute_b7b391 -> for_8cb3f6.reset\n        for_8cb3f6.next -> ifexpression_b720d7.execute\n    }\n\n    \n\n    instance(x: -14, y: 1) num_prime_dca2c4 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -174) greaterthan_b9b1c3 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: -126) lessthanorequal_e5e6f9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 475, y: -173) and_5faa66 root.Std_k98ojb.Logic.And {}\n        instance(x: 620, y: -172) or_7cdaef root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_b9b1c3.left\n        0 -> greaterthan_b9b1c3.right\n        y_5390f5 -> lessthanorequal_e5e6f9.left\n        0 -> lessthanorequal_e5e6f9.right\n        x_853326 -> lessthanorequal_e5e6f9.right\n        y_5390f5 -> greaterthan_b9b1c3.right\n        greaterthan_b9b1c3.result -> and_5faa66.left\n        lessthanorequal_e5e6f9.result -> and_5faa66.right\n        x_853326 -> lessthanorequal_e5e6f9.left\n        y_5390f5 -> greaterthan_b9b1c3.left\n        and_5faa66.result -> or_7cdaef.gen_0\n        0 -> greaterthan_b9b1c3.right\n        x_853326 -> greaterthan_b9b1c3.left\n        y_5390f5 -> lessthanorequal_e5e6f9.right\n        greaterthan_b9b1c3.result -> and_5faa66.right\n        lessthanorequal_e5e6f9.result -> and_5faa66.left\n        y_5390f5 -> greaterthan_b9b1c3.right\n        x_853326 -> lessthanorequal_e5e6f9.left\n        and_5faa66.result -> or_7cdaef.gen_1\n        0 -> lessthanorequal_e5e6f9.left\n        or_7cdaef.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -84, y: -26) opposite_signs_98bdc0 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -20) modulo_c5a4e6 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_c5a4e6.value\n        11 -> modulo_c5a4e6.divisor\n        modulo_c5a4e6.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -38, y: -21) is_diff_7c9bdf root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 470, y: 298) replace_2e8d3a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2e8d3a.input\n        search_ai -> replace_2e8d3a.search\n        replace_ai -> replace_2e8d3a.replace\n        replace_2e8d3a.output -> output_ai\n    }\n\n    \n\n    instance(x: -405, y: 176) replace_char_f4f9b3 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 476, y: 139) to_lower_5b5e1d root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> to_lower_5b5e1d.input\n        func() {\n            in(x: -201, y: -25, name: \"left\") property(String) left_ai\n            in(x: 346, y: -79, name: \"right\") property(String) right_ai\n\n            out(x: 863, y: -110, name: \"output\") property(Bool) output_2bdcf5\n\n            instance(x: -201, y: -40, stableId: \"y7xkqy3g9c\") equal_ba9e30 root.Std_k98ojb.Logic.Equal {}\n            left_ai -> equal_ba9e30.left\n            right_ai -> equal_ba9e30.right\n            equal_ba9e30.equal -> output_2bdcf5\n        } -> to_lower_5b5e1d.output_eq_lower\n        instance(x: 487, y: -6) lower_case_check_47c8ad root.main.is_lower {}\n        input_ai -> lower_case_check_47c8ad.input\n        lower_case_check_47c8ad.output -> output_ai\n    }\n\n    \n\n    instance(x: -1359, y: 202) is_lower_f6a2d8 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -285, y: -29) length_1d1c5e root.Std_k98ojb.List.Length {}\n        list_5fda54 -> length_1d1c5e.list\n        0 -> length_1d1c5e.length\n        \n        instance(x: -367, y: -26) ifexpression_f2fa2a root.Std_k98ojb.Std.IfExpression {}\n        \n        \"list.length == 0 ? null : list\" -> ifexpression_f2fa2a.expression\n        length_1d1c5e.result -> ifexpression_f2fa2a.input\n        \n        instance(x: -367, y: -29) unique_list_a8df64 root.Std_k98ojb.Iteration.Filter {}\n        \n        func() {\n            in(x: -130, y: 57, name: \"elem\") property(Number) elem_1e17a2\n            out(x: 425, y: 57, name: \"\") property(Bool) _b96c85\n            \n            instance(x: -32, y: 30) contains_ee1f2d root.Std_k98ojb.List.Contains {}\n            \n            elem_1e17a2 -> contains_ee1f2d.item\n            list_5fda54 -> contains_ee1f2d.list\n            \n            instance(x: -32, y: 30) not_6d0be9 root.Std_k98ojb.Logic.Not {}\n            \n            contains_ee1f2d.result -> not_6d0be9.input\n            not_6d0be9.result -> _b96c85\n            \n        } -> unique_list_a8df64.handler\n        \n        ifexpression_f2fa2a.value -> unique_list_a8df64.items\n        \n        instance(x: -127, y: 33) product_6fda4e root.Std_k98ojb.Iteration.Reduce {}\n        \n        func() {\n            in(x: -105, y: 71, name: \"acc\") property(Number) acc_f7d6c8\n            in(x: -123, y: 103, name: \"currval\") property(Number) currval_4e9af2\n            \n            out(x: 405, y: 81, name: \"\") property(Number) _bddd75\n            \n            \n            instance(x: -26, y: 94) mul_d233a9 root.Std_k98ojb.Math.Mul {}\n            \n            acc_f7d6c8 -> mul_d233a9.first\n            currval_4e9af2 -> mul_d233a9.second\n            \n            mul_d233a9.result -> _bddd75\n            \n        } -> product_6fda4e.reducer\n        \n        1 -> product_6fda4e.initial_value\n        unique_list_a8df64.output_list -> product_6fda4e.items\n        \n        instance(x: -120, y: 93) nullcheck_c5b7a4 root.Std_k98ojb.Std.If {}\n        \n        \"product != null\" -> nullcheck_c5b7a4.input\n        product_6fda4e.result -> nullcheck_c5b7a4.value\n        \n        instance(x: -120, y: 93) iftrue_aebc2b root.Std_k98ojb.Std.If {}\n        \n        \"product != null\" -> iftrue_aebc2b.input\n        product_6fda4e.result -> iftrue_aebc2b.value\n        \n        instance(x: -120, y: 93) iffalse_df7d5a root.Std_k98ojb.Std.If {}\n        \n        \"product != null\" -> iffalse_df7d5a.input\n        product_6fda4e.result -> iffalse_df7d5a.value\n        \n        instance(x: -120, y: 93) output_dfa1c5 root.Std_k98ojb.Std.If {}\n        \n        \"product != null\" -> output_dfa1c5.input\n        product_6fda4e.result -> output_dfa1c5.value\n        \n        instance(x: -120, y: 93) output_if_df7d5a root.Std_k98ojb.Std.If {}\n        \n        \"product == null\" -> output_if_df7d5a.input\n        0 -> output_if_df7d5a.value\n        \n        product_6fda4e.result -> nullcheck_c5b7a4.value\n        continue_45190b -> iftrue_aebc2b.then\n        continue_45190b -> iffalse_df7d5a.else\n        output_if_df7d5a.value -> output_dfa1c5.value\n        \n        nullcheck_c5b7a4.then -> iftrue_aebc2b.input\n        nullcheck_c5b7a4.else -> iffalse_df7d5a.input\n        \n        iftrue_aebc2b.then -> output_dfa1c5.input\n        iffalse_df7d5a.then -> output_if_df7d5a.input\n        \n        output_dfa1c5.value -> output_cffcc2\n    }\n    \n    instance(x: -603, y: 48) unique_product_9bdeef root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 193, y: 124) difference_5bdfc0 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5bdfc0.left\n        list2_ai -> difference_5bdfc0.right\n        difference_5bdfc0.difference -> output_ai\n\n        instance(x: -37, y: 64) difference_c9f8d8 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_c9f8d8.right\n        list2_ai -> difference_c9f8d8.left\n        difference_c9f8d8.difference -> output_ai\n    }\n\n    \n\n    instance(x: -347, y: 6) find_dissimilar_08e5b4 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -44, y: -140) slice_9f2a0b root.Std_k98ojb.List.Slice {}\n        instance(x: 654, y: -117) concat_ea3dcd root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_9f2a0b.list\n        n_68068c -> slice_9f2a0b.end\n        0 -> slice_9f2a0b.start\n        list_48148f -> concat_ea3dcd.right\n        -1 -> slice_9f2a0b.end\n        n_68068c -> concat_ea3dcd.left\n        slice_9f2a0b.slice -> concat_ea3dcd.right\n        concat_ea3dcd.result -> output_823209\n    }\n\n    \n\n    instance(x: -145, y: 16) rotate_right_b7eacf root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 390, y: -11) reduce_c6b8d7 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_c6b8d7.items\n        0 -> reduce_c6b8d7.initialValue\n        func() {\n            in(x: -143, y: -115, name: \"accumulated\") property(Number) current_9f8a2e\n            in(x: -135, y: 126, name: \"current\") property(Number) current_f7d0c5\n\n            out(x: 450, y: -165, name: \"sum\") property(Number) sum_9b8a4c\n\n            instance(x: -33, y: -68) add_d2eacf root.Std_k98ojb.Math.Add {}\n            current_9f8a2e -> add_d2eacf.first\n            current_f7d0c5 -> add_d2eacf.second\n            add_d2eacf.result -> sum_9b8a4c\n        } -> reduce_c6b8d7.reducer\n        reduce_c6b8d7.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -51, y: 3) _sum_bce086 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 348, y: -169) lessthanorequal_e9f0c6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 179, y: -261) greaterthan_9a5dcd root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 348, y: -108) div_5dbfda root.Std_k98ojb.Math.Div {}\n        instance(x: 759, y: -261) and_a2eae7 root.Std_k98ojb.Logic.And {}\n        instance(x: 734, y: -140) if_f9d3f0 root.Std_k98ojb.Std.If {}\n        instance(x: 656, y: -183) expression_29dfc3 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 487, y: -261) for_2f2a2e root.Std_k98ojb.Std.For {}\n        num_5c0677 -> lessthanorequal_e9f0c6.left\n        num_5c0677 -> greaterthan_9a5dcd.right\n        num_5c0677 -> div_5dbfda.second\n        1 -> lessthanorequal_e9f0c6.right\n        for_2f2a2e.index -> div_5dbfda.first\n        greaterthan_9a5dcd.left -> lessthanorequal_e9f0c6.right\n        num_5c0677 -> expression_29dfc3.gen_1\n        for_2f2a2e.item -> expression_29dfc3.gen_0\n        greaterthan_9a5dcd.left -> div_5dbfda.second\n        lessthanorequal_e9f0c6.result -> if_f9d3f0.predicate\n        and_a2eae7.right -> output_c457b3\n        expression_29dfc3.result -> and_a2eae7.left\n        if_f9d3f0.else -> continue_9a54bb\n        for_2f2a2e.onItem -> if_f9d3f0.execute\n        execute_b7b391 -> for_2f2a2e.reset\n        and_a2eae7.left -> if_f9d3f0.value\n        div_5dbfda.result -> expression_29dfc3.gen_0\n        if_f9d3f0.then -> for_2f2a2e.next\n        1 -> output_c457b3\n        and_a2eae7.left -> continue_9a54bb\n        for_2f2a2e.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -68, y: -220) num_prime_f1d9c7 root.main.num_prime {}\n\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_0b9dfe root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 468, y: -175) lessthanorequal_f2eacf root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 318, y: -209) and_6d3f7a root.Std_k98ojb.Logic.And {}\n        instance(x: 465, y: -137) not_7eacf4 root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_0b9dfe.left\n        0 -> greaterthan_0b9dfe.right\n        y_5390f5 -> lessthanorequal_f2eacf.left\n        0 -> lessthanorequal_f2eacf.right\n        x_853326 -> not_7eacf4.input\n        greaterthan_0b9dfe.result -> and_6d3f7a.left\n        lessthanorequal_f2eacf.result -> and_6d3f7a.right\n        not_7eacf4.result -> and_6d3f7a.left\n        y_5390f5 -> greaterthan_0b9dfe.right\n        x_853326 -> lessthanorequal_f2eacf.right\n        and_6d3f7a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -418, y: 10) opposite_signs_7bddd9 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6eacf5 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6eacf5.value\n        11 -> modulo_6eacf5.divisor\n        modulo_6eacf5.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 11) is_diff_7a4dad root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_7d3a2b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7d3a2b.input\n        search_ai -> replace_7d3a2b.search\n        replace_ai -> replace_7d3a2b.replace\n        replace_7d3a2b.output -> output_ai\n    }\n\n    \n\n    instance(x: -180, y: 265) replace_char_94f4c9 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 76, y: 175) to_lower_4b9e9d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 406, y: 175) is_equal_23f5c4 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_4b9e9d.input\n        to_lower_4b9e9d.lowered -> is_equal_23f5c4.left\n        input_ai -> is_equal_23f5c4.right\n        is_equal_23f5c4.equal -> output_ai\n    }\n\n    \n\n    instance(x: -106, y: 178) to_lower_9bddd4 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -115, y: -165) unique_5fda54 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -109, y: 37, name: \"elem\") property(Number) elem_2d9e4a\n\n            out(x: 113, y: 60, name: \"\") property(Bool) _5fda54\n\n            instance(x: -89, y: 55) not_5fda54 root.Std_k98ojb.Logic.Not {}\n            instance(x: -27, y: 53) contains_5fda54 root.Std_k98ojb.List.Contains {}\n            elem_2d9e4a -> contains_5fda54.item\n            unique_5fda54.items -> contains_5fda54.list\n            contains_5fda54.contains -> not_5fda54.input\n            not_5fda54.output -> _5fda54\n        } -> unique_5fda54.handler\n        list_5fda54 -> unique_5fda54.items\n\n        instance(x: 187, y: -203) reduce_6b9e4a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -119, y: -105, name: \"acc\") property(Number) acc_6b9e4a\n\n            in(x: -237, y: -105, name: \"elem\") property(Number) elem_6b9e4a\n\n            out(x: 89, y: -105, name: \"\") property(Number) _6b9e4a\n\n            instance(x: -109, y: -73) mul_6b9e4a root.Std_k98ojb.Math.Mul {}\n            acc_6b9e4a -> mul_6b9e4a.first\n            elem_6b9e4a -> mul_6b9e4a.second\n            mul_6b9e4a.result -> _6b9e4a\n        } -> reduce_6b9e4a.reducer\n        unique_5fda54.output_list -> reduce_6b9e4a.item\n\n        1 -> reduce_6b9e4a.initial_value\n        execute_19300c -> unique_5fda54.execute\n        unique_5fda54.continue -> continue_45190b\n        reduce_6b9e4a.output -> output_cffcc2\n    }\n\n    \n\n    instance(x: -78, y: 31) unique_product_5fda54 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 36) difference_1a5d5b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5d5b.left\n        list2_ai -> difference_1a5d5b.right\n        difference_1a5d5b.difference -> output_ai\n\n        instance(x: 304, y: -6) symmetric_difference_7f9e8c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> symmetric_difference_7f9e8c.left\n        list1_ai -> symmetric_difference_7f9e8c.right\n        symmetric_difference_7f9e8c.difference -> difference_1a5d5b.right\n    }\n\n    \n\n    instance(x: -34, y: 26) find_dissimilar_0f509d root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -108) concat_6d9fbc root.Std_k98ojb.List.Concat {}\n        instance(x: 57, y: -105) slice_6a4c4e root.Std_k98ojb.List.Slice {}\n        instance(x: 235, y: -105) sub_5d5f7d root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_6a4c4e.list\n        n_68068c -> sub_5d5f7d.first\n        0 -> sub_5d5f7d.second\n        sub_5d5f7d.result -> slice_6a4c4e.end\n        list_48148f -> concat_6d9fbc.right\n        slice_6a4c4e.slice -> concat_6d9fbc.left\n        concat_6d9fbc.result -> output_823209\n    }\n\n    \n\n    instance(x: 75, y: -105) rotate_right_f4bddd root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7b9d6e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7b9d6e.items\n        0 -> reduce_7b9d6e.initialValue\n        func() {\n            in(x: -154, y: -34, name: \"accumulated\") property(Number) accumulated_8f5a4c\n            in(x: -204, y: -10, name: \"current\") property(Number) current_b697b9\n\n            out(x: 108, y: -13, name: \"sum\") property(Number) sum_7eacf6\n\n            instance(x: 54, y: -2) add_fdcf7a root.Std_k98ojb.Math.Add {}\n            accumulated_8f5a4c -> add_fdcf7a.first\n            current_b697b9 -> add_fdcf7a.second\n            add_fdcf7a.result -> sum_7eacf6\n        } -> reduce_7b9d6e.reducer\n        reduce_7b9d6e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 35) _sum_6c906d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_f6d6c9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 37, y: -150) greaterthan_0f3e6d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 245, y: -149) modulo_f4c3a7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 100, y: -139) if_6f5e6d root.Std_k98ojb.Std.If {}\n        instance(x: 205, y: -139) and_47c9a4 root.Std_k98ojb.Logic.And {}\n        num_5c0677 -> generaterange_f6d6c9.from\n        2 -> generaterange_f6d6c9.to\n        generaterange_f6d6c9.list -> greaterthan_0f3e6d.left\n        num_5c0677 -> greaterthan_0f3e6d.right\n        greaterthan_0f3e6d.result -> if_6f5e6d.predicate\n        generaterange_f6d6c9.list -> modulo_f4c3a7.value\n        num_5c0677 -> modulo_f4c3a7.divisor\n        modulo_f4c3a7.result -> and_47c9a4.left\n        0 -> and_47c9a4.right\n        and_47c9a4.result -> if_6f5e6d.predicate\n        execute_b7b391 -> if_6f5e6d.execute\n        if_6f5e6d.value -> output_c457b3\n        if_6f5e6d.else -> continue_9a54bb\n        if_6f5e6d.then -> modulo_f4c3a7.reset\n        modulo_f4c3a7.continue -> if_6f5e6d.next\n    }\n\n    \n\n    instance(x: 10, y: -28) num_prime_95bddd root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -247) greaterthan_6b0c8e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 154, y: -219) and_f7f26a root.Std_k98ojb.Logic.And {}\n        instance(x: -30, y: -107) lessthanorequal_5d9e2c root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> greaterthan_6b0c8e.left\n        0 -> greaterthan_6b0c8e.right\n        y_5390f5 -> lessthanorequal_5d9e2c.left\n        0 -> lessthanorequal_5d9e2c.right\n        greaterthan_6b0c8e.result -> and_f7f7fa.root.Std_k98ojb.Logic.Not {}\n        y_5390f5 -> greaterthan_41a4ca.root.Std_k98ojb.Math.GreaterThan {}.left\n        0 -> greaterthan_41a4ca.root.Std_k98ojb.Math.GreaterThan {}.right\n        lessthanorequal_5d9e2c.result -> and_f7f26a.left\n        x_853326 -> lessthanorequal_cdb0ff.root.Std_k98ojb.Math.LessThanOrEqual {}.left\n        0 -> lessthanorequal_cdb0ff.root.Std_k98ojb.Math.LessThanOrEqual {}.right\n        greaterthan_41a4ca.root.Std_k98ojb.Math.GreaterThan {}.result -> and_f7f26a.right\n        lessthanorequal_cdb0ff.root.Std_k98ojb.Math.LessThanOrEqual {}.result -> and_f7f7fa.root.Std_k98ojb.Logic.Not {}.input\n        and_f7f7fa.root.Std_k98ojb.Logic.Not {}.result -> and_f7f26a.right\n        and_f7f26a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -415, y: 20) opposite_signs_dfe8d6 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -23) modulo_5d9e8a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5d9e8a.value\n        11 -> modulo_5d9e8a.divisor\n        modulo_5d9e8a.result -> output_f2630f\n    }\n    \n\n    instance(x: -44, y: 27) is_diff_d0c61b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 128) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -168, y: 204) replace_char_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 749, y: 206) to_lower_5b9e0a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 750, y: -21) is_empty_f3d55f root.Std_k98ojb.List.IsEmpty {}\n        input_ai -> to_lower_5b9e0a.input\n        to_lower_5b9e0a.output -> is_empty_f3d55f.list\n        is_empty_f3d55f.isEmpty -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_6871c4 root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -314, y: -115) unique_4eacf8 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -600, y: 78, name: \"elem\") property(Number) elem_ba2c7d\n\n            out(x: -358, y: 109, name: \"\") property(Bool) _4f4e4b\n            \n            instance(x: -473, y: 63) count_62b67a root.Std_k98ojb.Std.Count {}\n            list_5fda54 -> count_62b67a.reset\n            elem_ba2c7d -> count_62b67a.count\n            instance(x: -173, y: 109) equal_8e6c3d root.Std_k98ojb.Logic.Equal {}\n            1 -> equal_8e6c3d.right\n            count_62b67a.trigger -> equal_8e6c3d.left\n            equal_8e6c3d.result -> _4f4e4b\n        } -> unique_4eacf8.handler\n        \n        instance(x: 150, y: -93) reduce_507a24 root.Std_k98ojb.Iteration.Reduce {}\n        \n        func() {\n            in(x: -611, y: 154, name: \"acc\") property(Number) acc_b5f4c4\n            in(x: -535, y: 154, name: \"elem\") property(Number) elem_89e7d0\n\n            out(x: -268, y: 184, name: \"\") property(Number) _b4a2b0\n            \n            instance(x: -389, y: 175) mul_5c3f20 root.Std_k98ojb.Math.Mul {}\n            acc_b5f4c4 -> mul_5c3f20.first\n            elem_89e7d0 -> mul_5c3f20.second\n            mul_5c3f20.result -> _b4a2b0\n        } -> reduce_507a24.reducer\n        \n        list_5fda54 -> unique_4eacf8.items\n        unique_4eacf8.output_list -> reduce_507a24.item\n        reduce_507a24.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 139, y: -61) unique_product_5fda54 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 109, y: 10) difference_3b5c8e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3b5c8e.left\n        list2_ai -> difference_3b5c8e.right\n        difference_3b5c8e.difference -> output_ai\n\n        instance(x: 470, y: -9) difference_6a9dce root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_6a9dce.right\n        list2_ai -> difference_6a9dce.left\n        difference_6a9dce.difference -> output_ai\n    }\n\n    \n\n    instance(x: -437, y: 50) find_dissimilar_8f1e4b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 459, y: -108) concat_6b7f6e root.Std_k98ojb.List.Concat {}\n        instance(x: 181, y: -123) slice_a7c2a5 root.Std_k98ojb.List.Slice {}\n        instance(x: 449, y: -60) slice_6d6f1e root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_a7c2a5.list\n        n_68068c -> slice_a7c2a5.end\n        0 -> slice_a7c2a5.start\n        list_48148f -> slice_6d6f1e.list\n        -1 -> slice_6d6f1e.end\n        n_68068c -> slice_6d6f1e.start\n        slice_6d6f1e.slice -> concat_6b7f6e.left\n        slice_a7c2a5.slice -> concat_6b7f6e.right\n        concat_6b7f6e.result -> output_823209\n    }\n\n    \n\n    instance(x: -14, y: -124) rotate_right_7d1fa9 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -35) reduce_7d6e8b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6e8b.items\n        0 -> reduce_7d6e8b.initialValue\n        func() {\n            in(x: -135, y: -4) name: \"accumulated\") property(Number) accumulated_bf9f9a\n            in(x: -127, y: 12) name: \"current\") property(Number) current_6d08c2\n\n            out(x: 113, y: -45) name: \"sum\") property(Number) sum_6b5e6f\n\n            instance(x: 29, y: 17) add_febce7 root.Std_k98ojb.Math.Add {}\n            accumulated_bf9f9a -> add_febce7.first\n            current_6d08c2 -> add_febce7.second\n            add_febce7.result -> sum_6b5e6f\n        } -> reduce_7d6e8b.reducer\n        reduce_7d6e8b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -130, y: 119) _sum_e3daeb root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -180, y: -146) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 27, y: -158) greaterthan_cb50ae root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -155, y: -46) map_6030c9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 274, y: -155) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 181, y: -306) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 724, y: -25) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 475, y: -279) ifexpression_b720d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 613, y: -262) not_5e4a8b root.Std_k98ojb.Logic.Not {}\n        generaterange_038fce.from -> greaterthan_cb557d.right\n        num_5c0677 -> greaterthan_cb557d.left\n        1 -> greaterthan_cb557d.left\n        greaterthan_cb557d.result -> lessthanorequal_f11fda.right\n        num_5c0677 -> lessthanorequal_f11fda.left\n        generaterange_038fce.to -> map_6030c9.items\n        func() {\n            in(x: -24, y: 25, name: \"element\") property(Number) element_d0fd24\n\n            out(x: 71, y: 23, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 68, y: 19) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_d0fd24 -> mul_2f9d09.first\n            element_d0fd24 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> map_6030c9.handler\n        map_6030c9.output_list -> for_8cb3f6.items\n        lessthanorequal_f11fda.result -> ifexpression_b720d7.gen_0\n        greaterthan_cb557d.right -> generaterange_038fce.to\n        num_5c0677 -> generaterange_038fce.from\n        2 -> generaterange_038fce.from\n        map_6030c9.output_list -> ifexpression_b720d7.gen_1\n        for_8cb3f6.index -> ifexpression_b720d7.gen_2\n        num_5c0677 -> ifexpression_b720d7.gen_3\n        ifexpression_b720d7.value -> and_80a119.left\n        and_80a119.right -> not_5e4a8b.input\n        not_5e4a8b.result -> output_c457b3\n        for_8cb3f6.onItem -> ifexpression_b720d7.execute\n        ifexpression_b720d7.value -> and_80a119.left\n        and_80a119.result -> continue_9a54bb\n        execute_b7b391 -> for_8cb3f6.reset\n        for_8cb3f6.next -> ifexpression_b720d7.execute\n    }\n\n    \n\n    instance(x: -14, y: 1) num_prime_dca2c4 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -174) greaterthan_b9b1c3 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: -126) lessthanorequal_e5e6f9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 475, y: -173) and_5dfc20 root.Std_k98ojb.Logic.And {}\n        instance(x: 743, y: -174) or_f6cecc root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_b9b1c3.left\n        y_5390f5 -> greaterthan_b9b1c3.right\n        0 -> lessthanorequal_e5e6f9.left\n        x_853326 -> lessthanorequal_e5e6f9.right\n        greaterthan_b9b1c3.result -> and_5dfc20.left\n        y_5390f5 -> lessthanorequal_e5e6f9.right\n        0 -> lessthanorequal_e5e6f9.left\n        x_853326 -> lessthanorequal_e5e6f9.right\n        lessthanorequal_e5e6f9.result -> and_5dfc20.right\n        greaterthan_b9b1c3.result -> or_f6cecc.gen_0\n        lessthanorequal_e5e6f9.result -> or_f6cecc.gen_1\n        and_5dfc20.result -> or_f6cecc.gen_2\n        or_f6cecc.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -478, y: -137) opposite_signs_aacfbc root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -20) modulo_c5a4e6 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_c5a4e6.value\n        11 -> modulo_c5a4e6.divisor\n        modulo_c5a4e6.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -38, y: -21) is_diff_7c9bdf root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 470, y: 298) replace_2e8d3a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2e8d3a.input\n        search_ai -> replace_2e8d3a.search\n        replace_ai -> replace_2e8d3a.replace\n        replace_2e8d3a.output -> output_ai\n    }\n\n    \n\n    instance(x: -405, y: 176) replace_char_f4f9b3 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 476, y: 139) to_lower_5b5e1d root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> to_lower_5b5e1d.input\n        func() {\n            in(x: -201, y: -25, name: \"left\") property(String) left_ai\n            in(x: 346, y: -79, name: \"right\") property(String) right_ai\n\n            out(x: 863, y: -110, name: \"output\") property(Bool) output_2bdcf5\n\n            instance(x: -201, y: -40, stableId: \"p7xkqej6wzj9sra1h02x8m6c\") equal_3d00d4 root.Std_k98ojb.Logic.Equal {}\n            left_ai -> equal_3d00d4.left\n            right_ai -> equal_3d00d4.right\n            equal_3d00d4.equal -> output_2bdcf5\n        } -> to_lower_5b5e1d.compare\n        to_lower_5b5e1d.lower -> output_ai\n    }\n\n    \n\n    instance(x: 476, y: 139) is_lower_node root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -285, y: -29) length_1d1c5e root.Std_k98ojb.List.Length {}\n        list_5fda54 -> length_1d1c5e.list\n        0 -> length_1d1c5e.length\n        \n        instance(x: -367, y: -26) ifexpression_f2efaa root.Std_k98ojb.Std.IfExpression {}\n        \n        list_5fda54 -> ifexpression_f2efaa.input\n\n        \"it > 0 ? a*b : head\" -> ifexpression_f2efaa.expression\n        \n        instance(x: -315, y: -67) unique_nums_d9d8b7 root.Std_k98ojb.Iteration.Filter {\n            handler: func() { return it }\n        }\n\n        list_5fda54 -> unique_nums_d9d8b7.items\n        unique_nums_d9d8b7.output_list -> ifexpression_f2efaa.b\n        \n        instance(x: -315, y: 6) head_3a0e1c root.Std_k98ojb.List.FirstItem {}\n\n        list_5fda54 -> head_3a0e1c.list\n        head_3a0e1c.item -> ifexpression_f2efaa.a\n\n        instance(x: -46, y: 7) reduce_ef89d4 root.Std_k98ojb.Iteration.Reduce {\n            handler: func() { return a * b }\n        }\n\n        unique_nums_d9d8b7.output_list -> reduce_ef89d4.items\n        ifexpression_f2efaa.value -> output_cffcc2\n\n    }\n\n    \n\n    instance(x: 100, y: -65) unique_product_3e4c2a root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 193, y: 124) difference_5bdfc0 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5bdfc0.left\n        list2_ai -> difference_5bdfc0.right\n        difference_5bdfc0.difference -> output_ai\n\n        instance(x: -37, y: 64) difference_c9f8d8 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_c9f8d8.right\n        list2_ai -> difference_c9f8d8.left\n        difference_c9f8d8.difference -> output_ai\n    }\n\n    \n\n    instance(x: -347, y: 6) find_dissimilar_0dbb5c root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -44, y: -140) slice_9f8bfa root.Std_k98ojb.List.Slice {}\n        instance(x: 75, y: -64) concat_fdaaaf root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_9f8bfa.list\n        n_68068c -> slice_9f8bfa.end\n        0 -> slice_9f8bfa.start\n        list_48148f -> concat_fdaaaf.right\n        slice_9f8bfa.slice -> concat_fdaaaf.left\n        concat_fdaaaf.result -> output_823209\n    }\n\n    \n\n    instance(x: -276, y: 3) rotate_right_fe45d4 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 390, y: -11) reduce_c7b8d7 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_c7b8d7.items\n        0 -> reduce_c7b8d7.initialValue\n        func() {\n            in(x: -143, y: -115, name: \"accumulated\") property(Number) current_9f8a2e\n            in(x: -165, y: 126, name: \"current\") property(Number) current_f7d0c5\n\n            out(x: 430, y: -174, name: \"sum\") property(Number) sum_9b80a8\n\n            instance(x: -203, y: 50) add_d6eacf root.Std_k98ojb.Math.Add {}\n            current_9f8a2e -> add_d6eacf.first\n            current_f7d0c5 -> add_d6eacf.second\n            add_d6eacf.result -> sum_9b80a8\n        } -> reduce_c7b8d7.reducer\n        reduce_c7b8d7.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -53, y: 13) _sum_d6c716 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 348, y: -169) lessthanorequal_eabf0c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 267, y: -138) generaterange_8eacf5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 438, y: -171) greaterthan_0d0ebc root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -26, y: -138) for_a5eae0 root.Std_k98ojb.Std.For {}\n        instance(x: 743, y: -155) if_8f8cfd root.Std_k98ojb.Std.If {}\n        instance(x: 625, y: -105) expression_17d0f2 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        num_5c0677 -> greaterthan_0d0ebc.left\n        1 -> greaterthan_0d0ebc.right\n        greaterthan_0d0ebc.result -> if_8f8cfd.predicate\n        for_a5eae0.onItem -> if_8f8cfd.execute\n        if_8f8cfd.value -> output_c457b3\n        if_8f8cfd.else -> continue_9a54bb\n        expression_17d0f2.result -> lessthanorequal_eabf0c.right\n        num_5c0677 -> expression_17d0f2.gen_0\n        for_a5eae0.item -> expression_17d0f2.gen_1\n        if_8f8cfd.then -> continue_9a54bb\n        lessthanorequal_eabf0c.result -> if_8f8cfd.predicate\n        for_a5eae0.done -> continue_9a54bb\n        2 -> generaterange_8eacf5.from\n        num_5c0677 -> generaterange_8eacf5.to\n        generaterange_8eacf5.list -> for_a5eae0.items\n        execute_b7b391 -> for_a5eae0.reset\n    }\n\n    \n\n    instance(x: 24, y: -164) num_prime_5cddce root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_6d6bdf root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 409, y: -195) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 237, y: -265) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 401, y: -135) not_75283f root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_6d6bdf.left\n        0 -> greaterthan_6d6bdf.right\n        y_5390f5 -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        greaterthan_6d6bdf.result -> and_80a119.left\n        lessthanorequal_f11fda.result -> and_80a119.right\n        not_75283f.input -> output_3339a3\n        and_80a119.result -> not_75283f.input\n    }\n\n    \n\n    instance(x: -46, y: 10) opposite_signs_7d6e6b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6d6a2b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6d6a2b.value\n        11 -> modulo_6d6a2b.divisor\n        modulo_6d6a2b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -45, y: -7) is_diff_98eacf root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_7d6f6a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7d6f6a.input\n        search_ai -> replace_7d6f6a.search\n        replace_ai -> replace_7d6f6a.replace\n        replace_7d6f6a.output -> output_ai\n    }\n\n    \n\n    instance(x: -240, y: 185) replace_char_93eacf root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 764, y: 176) to_lower_5d6b0e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 1154, y: 173) is_equal_2f5a7c root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_5d6b0e.input\n        to_lower_5d6b0e.output -> is_equal_2f5a7c.left\n        input_ai -> is_equal_2f5a7c.right\n        is_equal_2f5a7c.equal -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_6e8d1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -115, y: -165) unique_5fda54 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -109, y: 37, name: \"elem\") property(Number) elem_2d9e5a\n\n            out(x: 113, y: 63, name: \"\") property(Bool) _4f8bdc\n\n            instance(x: 115, y: -10) contains_7c405d root.Std_k98ojb.List.Contains {}\n            elem_2d9e5a -> contains_7c405d.item\n            list_5fda54 -> contains_7c405d.list\n            Logic.Not(root, false) -> _4f8bdc\n        } -> unique_5fda54.handler\n        instance(x: -123, y: 69) reduce_5fda54 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -107, y: 37, name: \"acc\") property(Number) acc_2d9e5a\n\n            in(x: -109, y: 63, name: \"elem\") property(Number) elem_4f8bdc\n\n            out(x: 113, y: 63, name: \"\") property(Number) _7c405d\n\n            instance(x: 115, y: -10) mul_2d9e5a root.Std_k98ojb.Math.Mul {}\n            acc_2d9e5a -> mul_2d9e5a.first\n            elem_4f8bdc -> mul_2d9e5a.second\n            mul_2d9e5a.result -> _7c405d\n        } -> reduce_5fda54.reducer\n        list_5fda54 -> unique_5fda54.items\n        1 -> reduce_5fda54.initial_value\n        unique_5fda54.output_list -> reduce_5fda54.item\n        reduce_5fda54.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -36, y: -7) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 36) difference_1a5e2b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5e2b.left\n        list2_ai -> difference_1a5e2b.right\n        difference_1a5e2b.difference -> output_ai\n\n        instance(x: 304, y: -6) symmetric_difference_7f9d8c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> symmetric_difference_7f9d8c.left\n        list1_ai -> symmetric_difference_7f9d8c.right\n\n        instance(x: 304, y: -6) difference_5eacf8 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5eacf8.left\n        list2_ai -> difference_5eacf8.right\n\n        instance(x: 304, y: -6) concat_7f9d8c root.Std_k98ojb.List.Concat {}\n        symmetric_difference_7f9d8c.difference -> concat_7f9d8c.left\n        difference_5eacf8.difference -> concat_7f9d8c.right\n\n        concat_7f9d8c.concat -> output_ai\n    }\n\n    \n\n    instance(x: -132, y: 4) find_dissimilar_60a7b9 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -108) concat_6d9f5b root.Std_k98ojb.List.Concat {}\n        instance(x: 179, y: -108) slice_6eacf5 root.Std_k98ojb.List.Slice {}\n        instance(x: 243, y: -108) slice_7d6fbc root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_6eacf5b.list\n        n_68068c -> slice_6eacf5b.end\n        0 -> slice_6eacf5b.start\n        list_48148f -> slice_7d6fbc.list\n        -1 -> slice_7d6fbc.end\n        n_68068c -> slice_7d6fbc.start\n        slice_6eacf5b.slice -> concat_6d9f5b.left\n        slice_7d6fbc.slice -> concat_6d9f5b.right\n        concat_6d9f5b.result -> output_823209\n    }\n\n    \n\n    instance(x: 14, y: -101) rotate_right_7a2e4c root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7d6bdf root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6bdf.items\n        0 -> reduce_7d6bdf.initialValue\n        func() {\n            in(x: -34, y: -15, name: \"accumulated\") property(Number) accumulated_8f9a2e\n            in(x: -34, y: 11, name: \"current\") property(Number) current_706dfe\n\n            out(x: 104, y: -15, name: \"sum\") property(Number) sum_6bddd8\n\n            instance(x: 29, y: -3) add_7f5a2c root.Std_k98ojb.Math.Add {}\n            accumulated_8f9a2e -> add_7f5a2c.first\n            current_706dfe -> add_7f5a2c.second\n            add_7f5a2c.result -> sum_6bddd8\n        } -> reduce_7d6bdf.reducer\n        reduce_7d6bdf.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 9) _sum_3e506c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_6f3d6c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 75, y: -109) greaterthan_faae6b root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 244, y: -109) modulo_3f3dfe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 575, y: -109) and_6eacf4 root.Std_k98ojb.Logic.And {}\n        instance(x: 289, y: -109) ifexpression_3f3dfe root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        instance(x: 576, y: -109) not_4eacf4 root.Std_k98ojb.Logic.Not {}\n        instance(x: 245, y: -319) for_6f3d6c root.Std_k98ojb.Std.For {}\n        num_5c0677 -> generaterange_6f3d6c.from\n        2 -> generaterange_6f3d6c.to\n        generaterange_6f3d6c.list -> for_6f3d6c.items\n        greaterthan_faae6b.left -> modulo_3f3dfe.value\n        num_5c0677 -> modulo_3f3dfe.divisor\n        modulo_3f3dfe.result -> ifexpression_3f3dfe.gen_1\n        for_6f3d6c.item -> greaterthan_faae6b.right\n        for_6f3d6c.index -> and_6eacf4.left\n        0 -> and_6eacf4.right\n        and_6eacf4.result -> ifexpression_3f3dfe.gen_0\n        ifexpression_3f3dfe.value -> not_4eacf4.input\n        not_4eacf4.output -> output_c457b3\n        execute_b7b391 -> for_6f3d6c.reset\n        for_6f3d6c.onItem -> modulo_3f3dfe.execute\n        ifexpression_3f3dfe.else -> and_6eacf4.execute\n        ifexpression_3f3dfe.then -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 10, y: -27) num_prime_8bddd9 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -247) greaterthan_6b3e9c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 150, y: -219) and_f4f4d0 root.Std_k98ojb.Logic.And {}\n        instance(x: -132, y: -247) lessthanorequal_6a8cde root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> greaterthan_6b3e9c.left\n        0 -> greaterthan_6b3e9c.right\n        y_5390f5 -> lessthanorequal_6a8cde.left\n        0 -> lessthanorequal_6a8cde.right\n        x_853326 -> lessthanorequal_6a8cde.left\n        greaterthan_6b3e9c.result -> and_f4f4d0.left\n        y_5390f5 -> greaterthan_6b3e9c.right\n        lessthanorequal_6a8cde.result -> and_f4f4d0.right\n        and_f4f4d0.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -217, y: 59) opposite_signs_d6b6e5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 151, y: -24) modulo_7d6b5a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_7d6b5a.value\n        11 -> modulo_7d6b5a.divisor\n        modulo_7d6b5a.result -> output_f2630f\n    }\n    \n\n    instance(x: -4, y: 28) is_diff_d9c35b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 705, y: 97) replace_6d9f8c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_6d9f8c.input\n        search_ai -> replace_6d9f8c.search\n        replace_ai -> replace_6d9f8c.replace\n        replace_6d9f8c.output -> output_ai\n    }\n\n    \n\n    instance(x: -143, y: 250) replace_char_7eacf7 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 405, y: 275) to_lower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 405, y: 166) is_equal_7b3b7b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 872, y: 196) output_7b3b7b root.Std_k98ojb.Output {}\n        input_ai -> to_lower_7b3b7b.input\n        to_lower_7b3b7b.output -> is_equal_7b3b7b.left\n        input_ai -> is_equal_7b3b7b.right\n        is_equal_7b3b7b.equal -> output_7b3b7b.value\n        output_7b3b7b.value -> output_ai\n    }\n\n    \n\n    instance(x: -125, y: 209) to_lower_407e1b root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -445, y: -115) unique_4eacf8 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -608, y: 31, name: \"it\") property(Number) it_f7d2c5\n\n            out(x: 114, y: 31, name: \"\") property(Bool) _9f5e9b\n\n            instance(x: -496, y: 0) not_8a936b root.Std_k98ojb.Logic.Not {}\n            instance(x: -276, y: 12) contains_f4d4c0 root.Std_k98ojb.List.Contains {}\n            it_f7d2c5 -> contains_f4d4c0.list\n            it_f7d2c5 -> contains_f4d4c0.item\n            contains_f4d4c0.contains -> not_8a936b.input\n            not_8a936b.output -> _9f5e9b\n        } -> unique_4eacf8.handler\n        list_5fda54 -> unique_4eacf8.items\n\n        instance(x: 270, y: -115) reduce_5c9d9c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -361, y: 145, name: \"acc\") property(Number) acc_7a8e2f\n            in(x: -361, y: 101, name: \"it\") property(Number) it_c9b6d2\n\n            out(x: 304, y: 145, name: \"\") property(Number) _2c17a8\n\n            instance(x: 332, y: 145) mul_5e9f4a root.Std_k98ojb.Math.Mul {}\n            acc_7a8e2f -> mul_5e9f4a.first\n            it_c9b6d2 -> mul_5e9f4a.second\n            mul_5e9f4a.result -> _2c17a8\n        } -> reduce_5c9d9c.reducer\n        unique_4eacf8.output_list -> reduce_5c9d9c.item\n\n        1 -> reduce_5c9d9c.input2\n        reduce_5c9d9c.result -> output_cffcc2\n        \n        execute_19300c -> unique_4eacf8.trigger\n        unique_4eacf8.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -76, y: 11) unique_product_bf4dfe root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 219, y: 105) difference_3f3ee6 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3f3ee6.left\n        list2_ai -> difference_3f3ee6.right\n        difference_3f3ee6.difference -> output_ai\n\n        instance(x: 507, y: 104) difference_9b1bc3 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_9b1bc3.left\n        list1_ai -> difference_9b1bc3.right\n        difference_9b1bc3.difference -> output_ai\n    }\n\n    \n\n    instance(x: -467, y: 85) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 452, y: -21) slice_0 root.Std_k98ojb.List.Slice {}\n        instance(x: 624, y: -17) concat_0 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_0.list\n        n_68068c -> slice_0.start\n        -1 -> slice_0.end\n        list_48148f -> concat_0.left\n        slice_0.slice -> concat_0.right\n        concat_0.result -> output_823209\n    }\n\n    \n\n    instance(x: 67, y: -115) rotate_right_d6a9d6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 19, y: -30) reduce_7d6e2b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6e2b.items\n        0 -> reduce_7d6e2b.initialValue\n        func() {\n            in(x: -135, y: -147, name: \"accumulated\") property(Number) accumulated_b9a8f2\n            in(x: -129, y: -84, name: \"current\") property(Number) current_60bddd\n\n            out(x: 107, y: -30, name: \"sum\") property(Number) sum_f5e6d7\n\n            instance(x: 74, y: -92) add_d8f6c7 root.Std_k98ojb.Math.Add {}\n            accumulated_b9a8f2 -> add_d8f6c7.first\n            current_60bddd -> add_d8f6c7.second\n            add_d8f6c7.result -> sum_f5e6d7\n        } -> reduce_7d6e2b.reducer\n        reduce_7d6e2b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 39) _sum_e2c554 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -112, y: 84) generaterange_6d5c6b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 376, y: -200) lessthanorequal_2e4f9a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 112, y: -56) modulo_7d5db4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 320, y: -132) and_8a7f7a root.Std_k98ojb.Logic.And {}\n        instance(x: 736, y: -212) ifexpression_f45e6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 656, y: -244) not_9d4a7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1040, y: -332) if_e4eacf root.Std_k98ojb.Std.If {}\n        num_5c0677 -> generaterange_6d5c6b.from\n        2 -> generaterange_6d5c6b.to\n        generaterange_6d5c6b.list -> lessthanorequal_2e4f9a.left\n        num_5c0677 -> lessthanorequal_2e4f9a.right\n        lessthanorequal_2e4f9a.result -> ifexpression_f45e6c.else\n        generaterange_6d5c6b.list -> modulo_7d5db4.value\n        num_5c0677 -> modulo_7d5db4.divisor\n        modulo_7d5db4.result -> ifexpression_f45e6c.gen_1\n        0 -> ifexpression_f45e6c.gen_2\n        ifexpression_f45e6c.value -> and_8a7f7a.left\n        num_5c0677 -> ifexpression_f45e6c.gen_0\n        and_8a7f7a.result -> not_9d4a7f.input\n        not_9d4a7f.output -> output_c457b3\n        ifexpression_f45e6c.else -> continue_9a54bb\n        and_8a7f7a.result -> if_e4eacf.predicate\n        if_e4eacf.then -> continue_9a54bb\n        execute_b7b391 -> generaterange_6d5c6b.reset\n    }\n\n    \n\n    instance(x: 10, y: -128) num_prime_d5f44a root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -176) greaterthan_b4e0b8 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 185, y: -123) lessthanorequal_4d40a8 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 76, y: -177) if_83f1e5 root.Std_k98ojb.Std.If {}\n        x_853326 -> greaterthan_b4e0b8.left\n        y_5390f5 -> greaterthan_b4e0b8.right\n        x_853326 -> lessthanorequal_4d40a8.left\n        y_5390f5 -> lessthanorequal_4d40a8.right\n        greaterthan_b4e0b8.result -> if_83f1e5.input\n        lessthanorequal_4d40a8.result -> if_83f1e5.predicate\n        if_83f1e5.value -> output_3339a3\n    }\n\n    \n\n    instance(x: -426, y: 17) opposite_signs_f7d0b0 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 140, y: -32) modulo_c4eacf root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_c4eacf.value\n        11 -> modulo_c4eacf.divisor\n        modulo_c4eacf.result -> output_f2630f\n    }\n    \n\n    \n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 370, y: 294) replace_5e7f9a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5e7f9a.input\n        search_ai -> replace_5e7f9a.search\n        replace_ai -> replace_5e7f9a.replace\n        replace_5e7f9a.output -> output_ai\n    }\n\n    \n\n    instance(x: 180, y: 263) replace_char_e4d4b6 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 476, y: 163) to_lower_5a9a0f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 842, y: 140) is_equal_f2eacf root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_5a9a0f.input\n        to_lower_5a9a0f.lowered -> is_equal_f2eacf.left\n        input_ai -> is_equal_f2eacf.right\n        is_equal_f2eacf.equal -> output_ai\n    }\n\n    \n\n    instance(x: 647, y: -138) is_lower_6c8b5c root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -264, y: -29) remove_duplicates_node root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -154, y: 0, name: \"elem\") property(Any) elem_7f3e24\n\n            out(x: 641, y: 14, name: \"\") property(Bool) _9d6fa8\n            \n            instance(x: -308, y: -53) contains_a2c4a8 root.Std_k98ojb.List.Contains {}\n            list_5fda54 -> contains_a2c4a8.list\n            elem_7f3e24 -> contains_a2c4a8.item\n            \n            contains_a2c4a8.contains -> _9d6fa8\n        } -> remove_duplicates_node.predicate\n        \n        instance(x: 351, y: -34) reduce_node root.Std_k98ojb.Iteration.Reduce {}\n\n        func() {\n            in(x: -379, y: -20, name: \"acc\") property(Number) acc_6a4d4e\n            in(x: -415, y: -22, name: \"elem\") property(Any) elem_c8f1c3\n\n            out(x: 128, y: -27, name: \"\") property(Number) _9d0b6a\n            \n            instance(x: -414, y: -53) math_mul_6e9b71 root.Std_k98ojb.Math.Mul {}\n            \n            acc_6a4d4e -> math_mul_6e9b71.first\n            elem_c8f1c3 -> math_mul_6e9b71.second\n            \n            math_mul_6e9b71.result -> _9d0b6a\n        } -> reduce_node.reducer\n        \n        list_5fda54 -> remove_duplicates_node.list\n        remove_duplicates_node.output_list -> reduce_node.items\n\n        execute_19300c -> remove_duplicates_node.execute\n        continue_45190b <- reduce_node.done\n        output_cffcc2 <- reduce_node.accumulated\n        \n    }\n\n    \n    instance(x: 673, y: -85) unique_product_e95a7d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 290, y: 25) difference_6b4a6d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_6b4a6d.left\n        list2_ai -> difference_6b4a6d.right\n\n        instance(x: 437, y: 60) difference_5e5f4c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_5e5f4c.left\n        list1_ai -> difference_5e5f4c.right\n\n        instance(x: 337, y: -40) concat_d6d01c root.Std_k98ojb.List.Concat {}\n        difference_6b4a6d.difference -> concat_d6d01c.left\n        difference_5e5f4c.difference -> concat_d6d01c.right\n\n        concat_d6d01c.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -98, y: 37) find_dissimilar_a2a482 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -143, y: 130) modulo_8f7bfc root.Std_k98ojb.Math.Modulo {}\n        instance(x: -61, y: -250) slice_5d7a7c root.Std_k98ojb.List.Slice {}\n        instance(x: -46, y: 63) reverse_d6f96e root.Std_k98ojb.List.Reversed {}\n        instance(x: 649, y: 102) concat_53d517 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_5d7a7c.list\n        list_48148f -> reverse_d6f96e.list\n        n_68068c -> modulo_8f7bfc.value\n        -1 -> slice_5d7a7c.end\n        0 -> slice_5d7a7c.start\n        list_48148f -> reverse_d6f96e.list\n        modulo_8f7bfc.result -> slice_5d7a7c.end\n        n_68068c -> reverse_d6f96e.length\n        slice_5d7a7c.slice -> concat_53d517.left\n        reverse_d6f96e.reversed -> concat_53d517.right\n        concat_53d517.result -> output_823209\n    }\n\n    \n\n    instance(x: 64, y: -106) rotate_right_b2a9c4 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -48, y: 109) reduce_eb90d7 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -53, y: 201) add_c6dbaa root.Std_k98ojb.Math.Add {}\n        0 -> reduce_eb90d7.initialValue\n        list_2c62ab -> reduce_eb90d7.items\n        func() {\n            in(x: -153, y: -44, name: \"accumulated\") property(Number) acc_ae6f3d\n            in(x: 87, y: 194, name: \"currentItem\") property(Any) current_d2a0c5\n\n            out(x: -169, y: -148, name: \"result\") property(Number) result_7eacf5\n\n            acc_ae6f3d -> add_c6dbaa.first\n            current_d2a0c5 -> add_c6dbaa.second\n            add_c6dbaa.result -> result_7eacf5\n        } -> reduce_eb90d7.reducer\n        reduce_eb90d7.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -167, y: 3) _sum_b211c5 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 45, y: -181) generaterange_bf60c6 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 138, y: -237) filter_e6e0d0 root.Std_k98ojb.Query.Filter {}\n        instance(x: 459, y: -194) ifexpression_8f1c4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"length == 1\"\n        }\n        instance(x: -374, y: -204) length_e6da9a root.Std_k98ojb.List.Length {}\n        num_5c0677 -> generaterange_bf60c6.from\n        num_5c0677 -> filter_e6e0d0.input_list\n        1 -> generaterange_bf60c6.to\n        generaterange_bf60c6.list -> filter_e6e0d0.where_input\n        func() {\n            in(x: -495, y: -317, name: \"item\") property(Number) item_c82a9c\n\n            out(x: 22, y: -277, name: \"out\") property(Bool) out_6b05e3\n\n            instance(x: 47, y: -288) greaterthan_f3f5d1 root.Std_k98ojb.Math.GreaterThan {}\n            item_c82a9c -> greaterthan_f3f5d1.left\n            num_5c0677 -> greaterthan_f3f5d1.right\n            greaterthan_f3f5d1.result -> out_6b05e3\n        } -> filter_e6e0d0.handler\n        filter_e6e0d0.output_list -> length_e6da9a.list\n        execute_b7b391 -> generaterange_bf60c6.reset\n        length_e6da9a.length -> ifexpression_8f1c4a.gen_0\n        ifexpression_8f1c4a.value -> output_c457b3\n        continue_9a54bb -> filter_e6e0d0.next\n        ifexpression_8f1c4a.else -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 2, y: -118) num_prime_aeb074 root.main.num_prime {}\n\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_0b6e9d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 461, y: -175) lessthanorequal_f2c9a3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 250, y: -219) and_6d3f8e root.Std_k98ojb.Logic.And {}\n        instance(x: 47, y: -219) or_6c3a7b root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_0b6e9d.left\n        0 -> greaterthan_0b6e9d.right\n        y_5390f5 -> lessthanorequal_f2c9a3.left\n        0 -> lessthanorequal_f2c9a3.right\n        x_853326 -> lessthanorequal_f2c9a3.right\n        y_5390f5 -> greaterthan_0b6e9d.right\n        greaterthan_0b6e9d.result -> and_6d3f8e.left\n        lessthanorequal_f2c9a3.result -> and_6d3f8e.right\n        y_5390f5 -> greaterthan_0b6e9d.left\n        0 -> greaterthan_0b6e9d.right\n        x_853326 -> lessthanorequal_f2c9a3.left\n        and_6d3f8e.result -> or_6c3a7b.left\n        and_6d3f8e.result -> output_3339a3\n        greaterthan_0b6e9d.result -> lessthanorequal_f2c9a3.right\n        lessthanorequal_f2c9a3.result -> or_6c3a7b.right\n    }\n\n    \n\n    instance(x: -418, y: 5) opposite_signs_0f5e5d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6eacf5 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6eacf5.value\n        11 -> modulo_6eacf5.divisor\n        modulo_6eacf5.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 11) is_diff_7a4dad root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_7d3a2b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7d3a2b.input\n        search_ai -> replace_7d3a2b.search\n        replace_ai -> replace_7d3a2b.replace\n        replace_7d3a2b.output -> output_ai\n    }\n\n    \n\n    instance(x: -180, y: 265) replace_char_94f4c9 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 76, y: 175) to_lower_4b8e4d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 406, y: 175) is_equal_23f5c4 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_4b8e4d.input\n        to_lower_4b8e4d.lowered -> is_equal_23f5c4.left\n        input_ai -> is_equal_23f5c4.right\n        is_equal_23f5c4.equal -> output_ai\n    }\n\n    \n\n    instance(x: -109, y: 176) to_lower_8eacf4 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -115, y: -165) unique_5fda54 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -109, y: 37, name: \"elem\") property(Number) elem_2d9e4a\n\n            out(x: 113, y: 60, name: \"\") property(Bool) _5fda54\n\n            instance(x: -89, y: 55) not_5fda54 root.Std_k98ojb.Logic.Not {}\n            instance(x: -27, y: 53) contains_5fda54 root.Std_k98ojb.List.Contains {}\n            elem_2d9e4a -> contains_5fda54.item\n            unique_5fda54.items -> contains_5fda54.list\n            contains_5fda54.contains -> not_5fda54.input\n            not_5fda54.output -> _5fda54\n        } -> unique_5fda54.handler\n        list_5fda54 -> unique_5fda54.items\n\n        instance(x: 187, y: -203) reduce_6b9e5a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -119, y: -105, name: \"acc\") property(Number) acc_4fda54\n\n            in(x: -27, y: -63, name: \"elem\") property(Number) elem_8fda54\n\n            out(x: 113, y: -91, name: \"\") property(Number) _0fda54\n\n            instance(x: -11, y: -127) mul_4fda54 root.Std_k98ojb.Math.Mul {}\n            acc_4fda54 -> mul_4fda54.first\n            elem_8fda54 -> mul_4fda54.second\n            mul_4fda54.result -> _0fda54\n        } -> reduce_6b9e5a.reducer\n        unique_5fda54.output_list -> reduce_6b9e5a.item\n\n        execute_19300c -> unique_5fda54.execute\n        unique_5fda54.continue -> continue_45190b\n        reduce_6b9e5a.accumulated -> output_cffcc2\n    }\n\n    \n\n    instance(x: -78, y: 31) unique_product_5fda54 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 36) difference_1a5d5b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5d5b.left\n        list2_ai -> difference_1a5d5b.right\n        difference_1a5d5b.difference -> output_ai\n\n        instance(x: 304, y: -6) symmetric_difference_7f9e8c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> symmetric_difference_7f9e8c.left\n        list1_ai -> symmetric_difference_7f9e8c.right\n        symmetric_difference_7f9e8c.difference -> difference_1a5d5b.right\n    }\n\n    \n\n    instance(x: -34, y: 26) find_dissimilar_0f509d root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -108) concat_6d9fbc root.Std_k98ojb.List.Concat {}\n        instance(x: 57, y: -105) slice_6a4c4e root.Std_k98ojb.List.Slice {}\n        instance(x: 235, y: -105) sub_5d9f4b root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_6a4c4e.list\n        n_68068c -> sub_5d9f4b.first\n        0 -> sub_5d9f4b.second\n        sub_5d9f4b.result -> slice_6a4c4e.end\n        list_48148f -> concat_6d9fbc.right\n        slice_6a4c4e.slice -> concat_6d9fbc.left\n        concat_6d9fbc.result -> output_823209\n    }\n\n    \n\n    instance(x: 75, y: -105) rotate_right_7bddd5 root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7b9e4d root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7b9e4d.items\n        0 -> reduce_7b9e4d.initialValue\n        func() {\n            in(x: -153, y: -10, name: \"accumulated\") property(Number) current_8f5a4c\n            in(x: -162, y: 10, name: \"current\") property(Number) current_79d6b4\n\n            out(x: 553, y: -10, name: \"sum\") property(Number) sum_7e8f7a\n\n            instance(x: 10, y: 2) add_f4c97d root.Std_k98ojb.Math.Add {}\n            current_8f5a4c -> add_f4c97d.first\n            current_79d6b4 -> add_f4c97d.second\n            add_f4c97d.result -> sum_7e8f7a\n        } -> reduce_7b9e4d.reducer\n        reduce_7b9e4d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 3) _sum_6c5d6b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_f6d6c9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 37, y: -150) greaterthan_0f3e6d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 245, y: -149) modulo_f2c3a7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 115, y: -105) if_6f3d5e root.Std_k98ojb.Std.If {}\n        instance(x: 455, y: -149) for_27a4c4 root.Std_k98ojb.Std.For {}\n        num_5c0677 -> generaterange_f6d6c9.from\n        2 -> generaterange_f6d6c9.to\n        generaterange_f6d6c9.list -> for_27a4c4.items\n        greaterthan_0f3e6d.left -> modulo_f2c3a7.divisor\n        num_5c0677 -> modulo_f2c3a7.value\n        modulo_f2c3a7.result -> if_6f3d5e.input\n        for_27a4c4.item -> greaterthan_0f3e6d.right\n        execute_b7b391 -> for_27a4c4.reset\n        if_6f3d5e.else -> continue_9a54bb\n        if_6f3d5e.then -> for_27a4c4.next\n        if_6f3d5e.value -> output_c457b3\n        for_27a4c4.onItem -> if_6f3d5e.execute\n        for_27a4c4.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 10, y: -8) num_prime_faf3b5 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -247) greaterthan_6e5bfc root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 203, y: -169) lessthanorequal_d7da6f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 444, y: -157) and_0c9d5a root.Std_k98ojb.Logic.And {}\n        instance(x: 326, y: -220) not_eccf8c root.Std_k98ojb.Logic.Not {}\n        x_853326 -> greaterthan_6e5bfc.left\n        y_5390f5 -> greaterthan_6e5bfc.right\n        y_5390f5 -> lessthanorequal_d7da6f.left\n        x_853326 -> lessthanorequal_d7da6f.right\n        greaterthan_6e5bfc.result -> and_0c9d5a.left\n        lessthanorequal_d7da6f.result -> and_0c9d5a.right\n        and_0c9d5a.result -> not_eccf8c.input\n        not_eccf8c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -417, y: 26) opposite_signs_c0e49b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 151, y: -24) modulo_7d6b0e root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_7d6b0e.value\n        11 -> modulo_7d6b0e.divisor\n        modulo_7d6b0e.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -84, y: 5) is_diff_b91c5d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 705, y: 97) replace_6d9a5c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_6d9a5c.input\n        search_ai -> replace_6d9a5c.search\n        replace_ai -> replace_6d9a5c.replace\n        replace_6d9a5c.output -> output_ai\n    }\n\n    \n\n    instance(x: -187, y: 203) replace_char_642e8f root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 405, y: 275) to_lower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 405, y: 166) is_equal_7b3b7b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 872, y: 196) output_7b3b7b root.Std_k98ojb.Output.Output {}\n        input_ai -> to_lower_7b3b7b.input\n        func() {\n            in(x: -405, y: 166, name: \"left\") property(String) left_8ba733\n\n            in(x: -405, y: 275, name: \"right\") property(String) right_8ba733\n\n            out(x: 196, y: 219, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: -405, y: 219) equal_7b3b7b root.Std_k98ojb.Logic.Equal {}\n            left_8ba733 -> equal_7b3b7b.left\n            right_8ba733 -> equal_7b3b7b.right\n            equal_7b3b7b.equal -> output_8ba733\n        } -> is_equal_7b3b7b\n        input_ai -> is_equal_7b3b7b.left\n        to_lower_7b3b7b.lower -> is_equal_7b3b7b.right\n        is_equal_7b3b7b.equal -> output_ai\n    }\n\n    \n\n    instance(x: 405, y: 275) tolower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -443, y: -113) unique_4eacf8 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -659, y: 74, name: \"elem\") property(Number) elem_f0a2f3\n\n            out(x: 319, y: 83, name: \"\") property(Bool) _ebe6b4\n\n            instance(x: -571, y: 134) not_665dfe root.Std_k98ojb.Logic.Not {}\n            instance(x: -279, y: 133) contains_f0f9c5 root.Std_k98ojb.List.Contains {}\n            elem_f0a2f3 -> contains_f0f9c5.item\n            _ebe6b4 <- not_665dfe.result\n\n            list_5fda54 -> contains_f0f9c5.list\n            contains_f0f9c5.contains -> not_665dfe.input\n        } -> unique_4eacf8.handler\n        \n        instance(x: -317, y: 24) reduce_7a72ff root.Std_k98ojb.Iteration.Reduce {}\n        \n        func() {\n            in(x: -505, y: -26, name: \"acc\") property(Number) acc_b65f6d\n            in(x: -135, y: 44, name: \"val\") property(Number) val_7e9bdc\n\n            out(x: 85, y: -30, name: \"\") property(Number) _9c65a6\n            \n            instance(x: -257, y: -112) mul_62d49f root.Std_k98ojb.Math.Mul {}\n            \n            acc_b65f6d -> mul_62d49f.first\n            val_7e9bdc -> mul_62d49f.second\n            \n            mul_62d49f.result -> _9c65a6\n        } -> reduce_7a72ff.reducer\n        \n        1 -> reduce_7a72ff.init\n        \n        list_5fda54 -> unique_4eacf8.items\n        unique_4eacf8.output_list -> reduce_7a72ff.item\n        \n        reduce_7a72ff.result -> output_cffcc2\n        \n        execute_19300c -> unique_4eacf8.trigger\n        execute_19300c -> reduce_7a72ff.trigger\n        \n        continue_45190b <- unique_4eacf8.done\n    }\n    \n    instance(x: -6, y: 4) unique_product_6d1f74 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 219, y: 105) difference_0e9c8d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_0e9c8d.left\n        list2_ai -> difference_0e9c8d.right\n        difference_0e9c8d.difference -> output_ai\n\n        instance(x: 463, y: -57) difference_c6b39a root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_c6b39a.left\n        list2_ai -> difference_c6b39a.right\n        difference_c6b39a.difference -> output_ai\n    }\n\n    \n\n    instance(x: -47, y: 58) find_dissimilar_0f40d9 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 459, y: -21) slice_5e2dce root.Std_k98ojb.List.Slice {}\n        instance(x: 617, y: -49) concat_c30aaf root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_5e2dce.list\n        n_68068c -> slice_5e2dce.end\n        0 -> slice_5e2dce.start\n        list_48148f -> concat_c30aaf.right\n        -1 -> slice_5e2dce.end\n        slice_5e2dce.slice -> concat_c30aaf.left\n        concat_c30aaf.result -> output_823209\n    }\n\n    \n\n    instance(x: 47, y: -68) rotate_right_1f5c4b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 194, y: -30) reduce_7d6e8b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6e8b.items\n        0 -> reduce_7d6e8b.initialValue\n        func() {\n            in(x: -135, y: -142, name: \"accumulated\") property(Number) accumulated_bf5a95\n            in(x: -129, y: -68, name: \"current\") property(Number) current_70eacf\n\n            out(x: 107, y: -38, name: \"sum\") property(Number) sum_f554eb\n\n            instance(x: 74, y: -209) add_c6b8f7 root.Std_k98ojb.Math.Add {}\n            accumulated_bf5a95 -> add_c6b8f7.first\n            current_70eacf -> add_c6b8f7.second\n            add_c6b8f7.result -> sum_f554eb\n        } -> reduce_7d6e8b.reducer\n        reduce_7d6e8b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -190, y: 3) _sum_d0fa45 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -112, y: 85) generaterange_6d7c7b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 302, y: 220) greaterthan_5e21f9 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -45, y: 165) modulo_f87c2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 135, y: 20) for_57e2ef root.Std_k98ojb.Std.For {}\n        instance(x: 444, y: -164) and_caa3d6 root.Std_k98ojb.Logic.And {}\n        instance(x: 369, y: -104) if_57d2c6 root.Std_k98ojb.Std.If {}\n        generaterange_6d7c7b.from -> greaterthan_5e21f9.left\n        num_5c0677 -> greaterthan_5e21f9.right\n        greaterthan_5e21f9.result -> for_57e2ef.predicate\n        modulo_f87c2a.divisor -> for_57e2ef.items\n        modulo_f87c2a.value -> if_57d2c6.input\n        num_5c0677 -> modulo_f87c2a.value\n        generaterange_6d7c7b.list -> modulo_f87c2a.divisor\n        for_57e2ef.onItem -> if_57d2c6.execute\n        for_57e2ef.done -> and_caa3d6.right\n        execute_b7b391 -> for_57e2ef.reset\n        modulo_f87c2a.result -> and_caa3d6.left\n        if_57d2c6.else -> continue_9a54bb\n        if_57d2c6.value -> and_caa3d6.right\n        for_57e2ef.next -> and_caa3d6.left\n        num_5c0677 -> generaterange_6d7c7b.to\n        1 -> generaterange_6d7c7b.from\n        generaterange_6d7c7b.list -> greaterthan_5e21f9.right\n        and_caa3d6.result -> output_c457b3\n    }\n\n    \n\n    instance(x: -20, y: 2) num_prime_f6a800 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -176) greaterthan_a5e1c3 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: -122) lessthanorequal_d09da7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 146, y: -256) and_3a0c17 root.Std_k98ojb.Logic.And {}\n        x_853326 -> greaterthan_a5e1c3.left\n        0 -> greaterthan_a5e1c3.right\n        y_5390f5 -> lessthanorequal_d09da7.left\n        0 -> lessthanorequal_d09da7.right\n        greaterthan_a5e1c3.result -> and_3a0c17.left\n        lessthanorequal_d09da7.result -> and_3a0c17.right\n        and_3a0c17.result -> output_3339a3\n\n        instance(x: -126, y: -35) greaterthan_c48d27 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 68, y: -280) lessthanorequal_7eacf6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> greaterthan_c48d27.left\n        y_5390f5 -> greaterthan_c48d27.right\n        x_853326 -> lessthanorequal_7eacf6.left\n        y_5390f5 -> lessthanorequal_7eacf6.right\n        greaterthan_c48d27.result -> and_3a0c17.input2\n        lessthanorequal_7eacf6.result -> and_3a0c17.input3\n    }\n\n    \n\n    instance(x: -492, y: -5) opposite_signs_3faeeb root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 140, y: -33) modulo_caa55a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 783, y: 20) equal_98d4e2 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_caa55a.value\n        11 -> modulo_caa55a.divisor\n        modulo_caa55a.result -> equal_98d4e2.left\n        0 -> equal_98d4e2.right\n        equal_98d4e2.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -173, y: -44) is_divisible root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 370, y: 294) replace_2e1b7a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2e1b7a.input\n        search_ai -> replace_2e1b7a.search\n        replace_ai -> replace_2e1b7a.replace\n        replace_2e1b7a.output -> output_ai\n    }\n\n    \n\n    instance(x: 498, y: -50) replace_char_c3a65d root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 476, y: 163) to_lower_5a76b7 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 480, y: -39) is_equal_2f3dcd root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_5a76b7.input\n        to_lower_5a76b7.output -> is_equal_2f3dcd.left\n        input_ai -> is_equal_2f3dcd.right\n        is_equal_2f3dcd.equal -> output_ai\n    }\n\n    \n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance(x: -26, y: -29) set_diff_b5c75e root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> set_diff_b5c75e.left\n        list_5fda54 -> set_diff_b5c75e.right\n        instance(x: 123, y: -6) unique_list_cdf0bc root.Std_k98ojb.Sets.Difference {}\n        set_diff_b5c75e.difference -> unique_list_cdf0bc.left\n        list_5fda54 -> unique_list_cdf0bc.right\n\n        instance(x: 316, y: -12) reduce_product_d32bf8 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -63, y: -17, name: \"prev\") property(Number) prev_4785e7\n            in(x: 59, y: -101, name: \"next\") property(Number) next_f2c3d9\n\n            out(x: -122, y: -97, name: \"\") property(Number) product_abcded\n\n            instance(x: -84, y: -66) mul_5e4fa0 root.Std_k98ojb.Math.Mul {}\n            prev_4785e7 -> mul_5e4fa0.first\n            next_f2c3d9 -> mul_5e4fa0.second\n            mul_5e4fa0.result -> product_abcded\n        } -> reduce_product_d32bf8.reducer\n        unique_list_cdf0bc.difference -> reduce_product_d32bf8.item\n\n        execute_19300c -> set_diff_b5c75e.execute\n        set_diff_b5c75e.continue -> unique_list_cdf0bc.execute\n        unique_list_cdf0bc.continue -> reduce_product_d32bf8.execute\n        reduce_product_d32bf8.accumulated_value -> output_cffcc2\n        reduce_product_d32bf8.done -> continue_45190b\n\n    }\n\n    \n    instance(x: -67, y: 2) unique_product_node root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 290, y: 25) difference_2d4baf root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_2d4baf.left\n        list2_ai -> difference_2d4baf.right\n        difference_2d4baf.difference -> output_ai\n\n        instance(x: -37, y: 106) difference_d9e57a root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_d9e57a.left\n        list1_ai -> difference_d9e57a.right\n        difference_d9e57a.difference -> output_ai\n    }\n\n    \n\n    instance(x: -361, y: 13) find_dissimilar_c0d298 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -143, y: 130) modulo_1e8a0b root.Std_k98ojb.Math.Modulo {}\n        n_68068c -> modulo_1e8a0b.value\n        list_48148f -> modulo_1e8a0b.divisor\n        instance(x: 32, y: -75) slice_90d3b3 root.Std_k98ojb.List.Slice {}\n        instance(x: 346, y: 49) concat_bddc92 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_90d3b3.list\n        modulo_1e8a0b.result -> slice_90d3b3.end\n        n_68068c -> slice_90d3b3.start\n        0 -> slice_90d3b3.end2\n        slice_90d3b3.slice -> concat_bddc92.left\n        list_48148f -> slice_90d3b3.list\n        -1 -> slice_90d3b3.end\n        modulo_1e8a0b.result -> slice_90d3b3.start\n        slice_90d3b3.slice -> concat_bddc92.right\n        concat_bddc92.result -> output_823209\n    }\n\n    \n\n    instance(x: 15, y: -147) rotate_right_dbf6dc root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -48, y: 109) reduce_b8bdf5 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 619, y: 3) add_eaf0a7 root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> reduce_b8bdf5.items\n        0 -> reduce_b8bdf5.initialValue\n        func() {\n            in(x: -145, y: -138, name: \"acc\") property(Number) acc_eaa7ae\n            in(x: -161, y: -29, name: \"num\") property(Number) num_0cf2c7\n\n            out(x: 606, y: -115, name: \"sum\") property(Number) sum_c3bbda\n\n            acc_eaa7ae -> add_eaf0a7.first\n            num_0cf2c7 -> add_eaf0a7.second\n            add_eaf0a7.result -> sum_c3bbda\n        } -> reduce_b8bdf5.reducer\n        reduce_b8bdf5.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -169, y: 7) _sum_fdcce3 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 45, y: -181) generaterange_bdbd76 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 273, y: -333) greaterthan_eaaebf root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 405, y: -159) modulo_0a3e61 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 265, y: -77) and_d4f2be root.Std_k98ojb.Logic.And {}\n        instance(x: 250, y: -148) ifexpression_0cd73e root.Std_k98ojb.Std.IfExpression {\n            expression: \"n > m\"\n        }\n        instance(x: 617, y: -78) if_cdafe4 root.Std_k98ojb.Std.If {}\n        instance(x: 623, y: -50) not_fcaad4 root.Std_k98ojb.Logic.Not {}\n        generaterange_bdbd76.from -> modulo_0a3e61.divisor\n        num_5c0677 -> greaterthan_eaaebf.left\n        2 -> greaterthan_eaaebf.right\n        greaterthan_eaaebf.result -> ifexpression_0cd73e.gen_1\n        modulo_0a3e61.result -> and_d4f2be.left\n        and_d4f2be.result -> if_cdafe4.predicate\n        0 -> modulo_0a3e61.value\n        ifexpression_0cd73e.value -> greaterthan_eaaebf.right\n        num_5c0677 -> modulo_0a3e61.divisor\n        generaterange_bdbd76.to -> greaterthan_eaaebf.left\n        and_d4f2be.result -> ifexpression_0cd73e.gen_0\n        if_cdafe4.value -> not_fcaad4.input\n        1 -> modulo_0a3e61.value\n        generaterange_bdbd76.list -> modulo_0a3e61.divisor\n        num_5c0677 -> greaterthan_eaaebf.left\n        ifexpression_0cd73e.result -> not_fcaad4.input\n        and_d4f2be.result -> if_cdafe4.execute\n        not_fcaad4.output -> output_c457b3\n        execute_b7b391 -> generaterange_bdbd76.from\n    }\n\n    \n\n    instance(x: 10, y: -184) num_prime_a52e9a root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 468, y: -275) greaterthan_0b9e4d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 461, y: -175) lessthanorequal_f2c9a3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 250, y: -219) and_6d3f4e root.Std_k98ojb.Logic.And {}\n        instance(x: 374, y: -219) or_6c3a7b root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_0b9e4d.left\n        0 -> greaterthan_0b9e4d.right\n        y_5390f5 -> lessthanorequal_f2c9a3.left\n        0 -> lessthanorequal_f2c9a3.right\n        x_853326 -> lessthanorequal_f2c9a3.right\n        y_5390f5 -> greaterthan_0b9e4d.right\n        greaterthan_0b9e4d.result -> and_6d3f4e.left\n        lessthanorequal_f2c9a3.result -> and_6d3f4e.right\n        and_6d3f4e.result -> or_6c3a7b.left\n        y_5390f5 -> greaterthan_0b9e4d.left\n        x_853326 -> lessthanorequal_f2c9a3.right\n        0 -> greaterthan_0b9e4d.right\n        greaterthan_0b9e4d.result -> and_6d3f4e.right\n        lessthanorequal_f2c9a3.result -> or_6c3a7b.right\n        or_6c3a7b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -185, y: 10) opposite_signs_4d9e6f root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 145, y: -23) modulo_6eacf5 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_6eacf5.value\n        11 -> modulo_6eacf5.divisor\n        modulo_6eacf5.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -48, y: 11) is_diff_7a4dad root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 790, y: 132) replace_7d3a2b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7d3a2b.input\n        search_ai -> replace_7d3a2b.search\n        replace_ai -> replace_7d3a2b.replace\n        replace_7d3a2b.output -> output_ai\n    }\n\n    \n\n    instance(x: -180, y: 265) replace_char_94f4c9 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 76, y: 175) to_lower_4b8e4d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 406, y: 175) is_equal_23f5c4 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_4b8e4d.input\n        to_lower_4b8e4d.lowered -> is_equal_23f5c4.left\n        input_ai -> is_equal_23f5c4.right\n        is_equal_23f5c4.equal -> output_ai\n    }\n\n    \n\n    instance(x: -109, y: 176) to_lower_8eacf4 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -115, y: -165) unique_5fda54 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -109, y: 37, name: \"elem\") property(Number) elem_2d9e4a\n\n            out(x: 113, y: 60, name: \"\") property(Bool) _5fda54\n\n            instance(x: -89, y: 55) not_5fda54 root.Std_k98ojb.Logic.Not {}\n            instance(x: -27, y: 53) contains_5fda54 root.Std_k98ojb.List.Contains {}\n            elem_2d9e4a -> contains_5fda54.item\n            unique_5fda54.items -> contains_5fda54.list\n            contains_5fda54.contains -> not_5fda54.input\n            not_5fda54.output -> _5fda54\n        } -> unique_5fda54.handler\n        list_5fda54 -> unique_5fda54.items\n\n        instance(x: 187, y: -203) reduce_6b9e5a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -119, y: -105, name: \"acc\") property(Number) acc_4fda54\n\n            in(x: -27, y: -63, name: \"elem\") property(Number) elem_8fda54\n\n            out(x: 113, y: -91, name: \"\") property(Number) _0fda54\n\n            instance(x: -11, y: -127) mul_4fda54 root.Std_k98ojb.Math.Mul {}\n            acc_4fda54 -> mul_4fda54.first\n            elem_8fda54 -> mul_4fda54.second\n            mul_4fda54.result -> _0fda54\n        } -> reduce_6b9e5a.reducer\n        unique_5fda54.output_list -> reduce_6b9e5a.item\n\n        execute_19300c -> unique_5fda54.execute\n        unique_5fda54.continue -> continue_45190b\n        reduce_6b9e5a.accumulated -> output_cffcc2\n    }\n\n    \n\n    instance(x: -78, y: 31) unique_product_5fda54 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -93, y: 36) difference_1a5d5b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1a5d5b.left\n        list2_ai -> difference_1a5d5b.right\n        difference_1a5d5b.difference -> output_ai\n\n        instance(x: 304, y: -6) symmetric_difference_7f9e8c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> symmetric_difference_7f9e8c.left\n        list1_ai -> symmetric_difference_7f9e8c.right\n        symmetric_difference_7f9e8c.difference -> difference_1a5d5b.right\n    }\n\n    \n\n    instance(x: -34, y: 26) find_dissimilar_0f509d root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -108) concat_6d9fbc root.Std_k98ojb.List.Concat {}\n        instance(x: 57, y: -105) slice_6a4c4e root.Std_k98ojb.List.Slice {}\n        instance(x: 235, y: -105) sub_5d5f7d root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_6a4c4e.list\n        n_68068c -> sub_5d5f7d.first\n        0 -> sub_5d5f7d.second\n        sub_5d5f7d.result -> slice_6a4c4e.end\n        list_48148f -> concat_6d9fbc.right\n        slice_6a4c4e.slice -> concat_6d9fbc.left\n        concat_6d9fbc.result -> output_823209\n    }\n\n    \n\n    instance(x: 75, y: -105) rotate_right_f4bddd root.main.rotate_right {}\n\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -10) reduce_7b9e4d root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7b9e4d.items\n        0 -> reduce_7b9e4d.initialValue\n        func() {\n            in(x: -153, y: -10, name: \"accumulated\") property(Number) current_8f5a4c\n            in(x: -162, y: 10, name: \"current\") property(Number) current_79d6b4\n\n            out(x: 553, y: -10, name: \"sum\") property(Number) sum_7e8f7a\n\n            instance(x: 10, y: 2) add_f4c97d root.Std_k98ojb.Math.Add {}\n            current_8f5a4c -> add_f4c97d.first\n            current_79d6b4 -> add_f4c97d.second\n            add_f4c97d.result -> sum_7e8f7a\n        } -> reduce_7b9e4d.reducer\n        reduce_7b9e4d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 3) _sum_6c526a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -82, y: -159) generaterange_f6d6c9 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 37, y: -150) greaterthan_0f30e5 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 245, y: -149) lessthanorequal_f6a2c4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 70, y: -311) modulo_7d6e6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 51, y: -199) ifexpression_f24c4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        instance(x: 376, y: -150) and_0f30e5 root.Std_k98ojb.Logic.And {}\n        instance(x: 245, y: -110) ifexpression_f6a2c4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"index == 0\"\n        }\n        instance(x: 376, y: -110) not_0f30e5 root.Std_k98ojb.Logic.Not {}\n        instance(x: 325, y: -41) ifexpression_f24c4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        instance(x: 67, y: -150) for_0f30e5 root.Std_k98ojb.Std.For {}\n        num_5c0677 -> generaterange_f6d6c9.from\n        2 -> generaterange_f6d6c9.to\n        generaterange_f6d6c9.list -> for_0f30e5.items\n        greaterthan_0f30e5.left -> lessthanorequal_f6a2c4.right\n        num_5c0677 -> greaterthan_0f30e5.right\n        greaterthan_0f30e5.result -> ifexpression_f6a2c4.then\n        for_0f30e5.item -> modulo_7d6e6f.value\n        num_5c0677 -> modulo_7d6e6f.divisor\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1\n        lessthanorequal_f6a2c4.left -> greaterthan_0f30e5.right\n        for_0f30e5.item -> greaterthan_0f30e5.left\n        modulo_7d6e6f.result -> ifexpression_f24c4a.gen_1"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -247) greaterthan_6e5c5c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 105, y: -218) lessthanorequal_caf67a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 348, y: -220) and_2f7dfe root.Std_k98ojb.Logic.And {}\n        x_853326 -> greaterthan_6e5c5c.left\n        0 -> greaterthan_6e5c5c.right\n        y_5390f5 -> lessthanorequal_caf67a.left\n        0 -> lessthanorequal_caf67a.right\n        greaterthan_6e5c5c.result -> and_2f7dfe.left\n        lessthanorequal_caf67a.result -> and_2f7dfe.right\n        and_2f7dfe.result -> output_3339a3\n\n        instance(x: 108, y: -147) greaterthan_f6c5e2 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 351, y: -145) lessthanorequal_5dfbca root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 547, y: -146) or_20c3f8 root.Std_k98ojb.Logic.Or {}\n        x_853326 -> greaterthan_f6c5e2.left\n        0 -> greaterthan_f6c5e2.right\n        y_5390f5 -> lessthanorequal_5dfbca.left\n        0 -> lessthanorequal_5dfbca.right\n        greaterthan_f6c5e2.result -> or_20c3f8.left\n        lessthanorequal_5dfbca.result -> or_20c3f8.right\n        or_20c3f8.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -416, y: 27) opposite_signs_0d4c8b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 151, y: -24) modulo_7d6b0e root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_7d6b0e.value\n        11 -> modulo_7d6b0e.divisor\n        modulo_7d6b0e.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -84, y: 5) is_diff_b96c3c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 705, y: 97) replace_6d9a5c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_6d9a5c.input\n        search_ai -> replace_6d9a5c.search\n        replace_ai -> replace_6d9a5c.replace\n        replace_6d9a5c.output -> output_ai\n    }\n\n    \n\n    instance(x: -187, y: 203) replace_char_644b1f root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 405, y: 275) to_lower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 405, y: 166) is_equal_7b3b7b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 872, y: 196) output_7b3b7b root.Std_k98ojb.Output.Output {}\n        input_ai -> to_lower_7b3b7b.input\n        func() {\n            in(x: -405, y: 166, name: \"left\") property(String) left_8ba733\n\n            in(x: -405, y: 275, name: \"right\") property(String) right_8ba733\n\n            out(x: 196, y: 219, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: -405, y: 219) equal_7b3b7b root.Std_k98ojb.Logic.Equal {}\n            left_8ba733 -> equal_7b3b7b.left\n            right_8ba733 -> equal_7b3b7b.right\n            equal_7b3b7b.equal -> output_8ba733\n        } -> is_equal_7b3b7b\n        input_ai -> is_equal_7b3b7b.left\n        to_lower_7b3b7b.lower -> is_equal_7b3b7b.right\n        is_equal_7b3b7b.equal -> output_ai\n    }\n\n    \n\n    instance(x: 405, y: 275) tolower_59bc6e root.main.is_lower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: -443, y: -113) unique_4eacf8 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -659, y: 74, name: \"elem\") property(Number) elem_f0a2f3\n\n            out(x: 319, y: 83, name: \"\") property(Bool) _ebe6b4\n\n            instance(x: -571, y: 134) not_62f4d6 root.Std_k98ojb.Logic.Not {}\n            instance(x: -499, y: 120) contains_2d51c7 root.Std_k98ojb.List.Contains {}\n            elem_f0a2f3 -> contains_2d51c7.item\n            _ebe6b4 <- not_62f4d6.result\n            unique_4eacf8.output_list -> contains_2d51c7.list\n            not_62f4d6.input <- contains_2d51c7.contains\n        } -> unique_4eacf8.handler\n        \n        instance(x: -309, y: 7) reduce_47d9a5 root.Std_k98ojb.Iteration.Reduce {}\n        \n        func() {\n            in(x: -664, y: -121, name: \"acc\") property(Number) acc_c71f6c\n            in(x: -630, y: -139, name: \"value\") property(Number) value_8d3e65\n\n            out(x: 344, y: -125, name: \"\") property(Number) _a5b7c9\n\n            instance(x: -569, y: -150) mul_f9f6bf root.Std_k98ojb.Math.Mul {}\n            acc_c71f6c -> mul_f9f6bf.first\n            value_8d3e65 -> mul_f9f6bf.second\n            mul_f9f6bf.result -> _a5b7c9\n        } -> reduce_47d9a5.reducer\n        \n        list_5fda54 -> unique_4eacf8.list\n        unique_4eacf8.output_list -> reduce_47d9a5.item\n        1 -> reduce_47d9a5.init\n        reduce_47d9a5.result -> output_cffcc2\n        \n    }\n\n    \n\n    instance(x: -30, y: -26) unique_product_f8f3c5 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 219, y: 105) difference_0e9c8d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_0e9c8d.left\n        list2_ai -> difference_0e9c8d.right\n        difference_0e9c8d.difference -> output_ai\n\n        instance(x: 463, y: -57) difference_c6b39a root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_c6b39a.left\n        list2_ai -> difference_c6b39a.right\n        difference_c6b39a.difference -> output_ai\n    }\n\n    \n\n    instance(x: -47, y: 58) find_dissimilar_0f4dbd root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 459, y: -21) slice_5e2dce root.Std_k98ojb.List.Slice {}\n        instance(x: 617, y: -49) concat_c3faeb root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_5e2dce.list\n        n_68068c -> slice_5e2dce.end\n        0 -> slice_5e2dce.start\n        list_48148f -> concat_c3faeb.right\n        -1 -> slice_5e2dce.end\n        slice_5e2dce.slice -> concat_c3faeb.left\n        concat_c3faeb.result -> output_823209\n    }\n\n    \n\n    instance(x: 6, y: -147) rotate_right_2f3bdc root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 194, y: -30) reduce_7d6db5 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7d6db5.items\n        0 -> reduce_7d6db5.initialValue\n        func() {\n            in(x: -14, y: -36, name: \"accumulated\") property(Number) accumulated_d9e81a\n            in(x: -22, y: -68, name: \"current\") property(Number) current_07d55b\n\n            out(x: 114, y: -34, name: \"sum\") property(Number) sum_e7fa9c\n\n            instance(x: 52, y: -36) add_cdd8a5 root.Std_k98ojb.Math.Add {}\n            accumulated_d9e81a -> add_cdd8a5.first\n            current_07d55b -> add_cdd8a5.second\n            add_cdd8a5.result -> sum_e7fa9c\n        } -> reduce_7d6db5.reducer\n        reduce_7d6db5.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -10, y: 113) _sum_95b455 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -112, y: 85) generaterange_6e5d9b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 372, y: -204) lessthanorequal_b7dfcb root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 126, y: -154) modulo_6f6d6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 530, y: -203) and_7a666e root.Std_k98ojb.Logic.And {}\n        instance(x: 862, y: -141) ifexpression_b3c38d root.Std_k98ojb.Std.IfExpression {\n            expression: \"not (result == 0)\"\n        }\n        num_5c0677 -> generaterange_6e5d9b.from\n        2 -> generaterange_6e5d9b.to\n        generaterange_6e5d9b.list -> lessthanorequal_b7dfcb.left\n        num_5c0677 -> lessthanorequal_b7dfcb.right\n        lessthanorequal_b7dfcb.result -> ifexpression_b3c38d.gen_1\n        num_5c0677 -> modulo_6f6d6c.value\n        generaterange_6e5d9b.list -> modulo_6f6d6c.divisor\n        modulo_6f6d6c.result -> and_7a666e.left\n        0 -> and_7a666e.right\n        and_7a666e.result -> ifexpression_b3c38d.gen_2\n        ifexpression_b3c38d.value -> output_c457b3\n        execute_b7b391 -> continue_9a54bb\n        lessthanorequal_b7dfcb.else -> continue_9a54bb\n        modulo_6f6d6c.continue -> ifexpression_b3c38d.execute\n    }\n\n    \n\n    instance(x: -2, y: 10) num_prime_e2b7c9 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:14b-instruct-fp16",
        "largest_context": 8180,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -176) greaterthan_a5e1c3 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 0, y: -122) lessthanorequal_d8caec root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 247, y: -176) and_5d3edf root.Std_k98ojb.Logic.And {}\n        x_853326 -> greaterthan_a5e1c3.left\n        0 -> greaterthan_a5e1c3.right\n        y_5390f5 -> lessthanorequal_d8caec.left\n        0 -> lessthanorequal_d8caec.right\n        x_853326 -> lessthanorequal_d8caec.right\n        y_5390f5 -> greaterthan_a5e1c3.right\n        greaterthan_a5e1c3.result -> and_5d3edf.left\n        lessthanorequal_d8caec.result -> and_5d3edf.right\n        and_5d3edf.result -> output_3339a3\n\n    }\n\n    \n\n    instance(x: -240, y: -162) opposite_signs_b5c3b8 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 140, y: -33) modulo_cce58a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 783, y: 20) equal_9a25c6 root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_cce58a.value\n        11 -> modulo_cce58a.divisor\n\n        modulo_cce58a.result -> equal_9a25c6.left\n        0 -> equal_9a25c6.right\n        \n        equal_9a25c6.result -> output_f2630f\n    }\n\n    \n    instance(x: -15, y: -7) is_diff_a4d4cd root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 370, y: 294) replace_2e1b7a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2e1b7a.input\n        search_ai -> replace_2e1b7a.search\n        replace_ai -> replace_2e1b7a.replace\n        replace_2e1b7a.output -> output_ai\n    }\n\n    \n\n    instance(x: 498, y: -50) replace_char_cce063 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 476, y: 163) to_lower_5a7aa0 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 667, y: 131) is_equal_b24d6c root.Std_k98ojb.Logic.Equal {}\n        input_ai -> to_lower_5a7aa0.input\n        to_lower_5a7aa0.lowered -> is_equal_b24d6c.right\n        input_ai -> is_equal_b24d6c.left\n        is_equal_b24d6c.equal -> output_ai\n    }\n\n    \n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance(x: -26, y: -29) list_set_instance root.Std_k98ojb.Iteration.Reduce {\n            initialValue: 1\n            handler(doc:\"Multiply the accumulated value with current item.\") { \n                in(name: \"acc\") property(Number) acc\n                in(name: \"x\") property(Number) x\n\n                out(x: 274, y: -53, name: \"\") property(Number) output\n                \n                instance(x: -109, y: -44) mul_8e6bd5 root.Std_k98ojb.Math.Mul {}\n                acc -> mul_8e6bd5.first\n                x -> mul_8e6bd5.second\n                mul_8e6bd5.result -> output\n\n            }\n        }\n        \n        instance(x: 270, y: -134) filter_instance root.Std_k98ojb.Iteration.Filter {\n            handler(doc:\"Check if the item is not in the accumulator list.\") { \n                in(name: \"acc\") property(List) acc\n                in(name: \"x\") property(Number) x\n\n                out(x: 251, y: -35, name: \"\") property(Bool) output\n                \n                instance(x: -84, y: -36) list_contains_instance root.Std_k98ojb.List.Contains {}\n                acc -> list_contains_instance.list\n                x -> list_contains_instance.item\n\n                instance(x: 121, y: -50) not_7bea9e root.Std_k98ojb.Logic.Not {}\n                \n                list_contains_instance.contains -> not_7bea9e.input\n                not_7bea9e.output -> output\n                \n            }\n        }\n\n        execute_19300c -> filter_instance.trigger\n\n        \n        instance(x: -21, y: 46) unique_list_set_instance root.Std_k98ojb.Iteration.Reduce {\n            initialValue: []\n            handler(doc:\"Add the item to accumulator if not present.\") { \n                in(name: \"acc\") property(List) acc\n                in(name: \"x\") property(Number) x\n\n                out(x: 154, y: -19, name: \"\") property(List) output\n                \n                \n                instance(x: 63, y: -72) flatten_80e3af root.Std_k98ojb.List.Flatten {}\n                instance(x: 339, y: -45) list_add_instance root.Std_k98ojb.List.Add {}\n\n                acc -> list_add_instance.list\n                x -> list_add_instance.item\n\n                \n                list_add_instance.listWithItem -> flatten_80e3af.items\n                \n                flatten_80e3af.flattened -> output\n\n            }\n        }\n\n        \n        instance(x: 195, y: -147) unique_product_instance root.Std_k98ojb.Iteration.Reduce {\n            initialValue: 1\n            handler(doc:\"Multiply the accumulated value with current item.\") { \n                in(name: \"acc\") property(Number) acc\n                in(name: \"x\") property(Number) x\n\n                out(x: 356, y: -49, name: \"\") property(Number) output\n                \n                instance(x: -201, y: -76) mul_8e6bd5 root.Std_k98ojb.Math.Mul {}\n                \n                acc -> mul_8e6bd5.first\n                x -> mul_8e6bd5.second\n\n                mul_8e6bd5.result -> output\n                \n            }\n        }\n\n        \n        list_5fda54 -> filter_instance.items\n        \n        instance(x: -21, y: 7) flatten_98a4d5 root.Std_k98ojb.List.Flatten {}\n        \n        filter_instance.output_list -> flatten_98a4d5.items\n        \n        flatten_98a4d5.flattened -> unique_list_set_instance.items\n        \n\n        instance(x: -21, y: 7) list_distinct_instance root.Std_k98ojb.Iteration.Reduce {\n            initialValue: []\n            \n            handler(doc:\"Add the item to accumulator if not present.\") { \n                in(name: \"acc\") property(List) acc\n                in(name: \"x\") property(Number) x\n\n                out(x: 154, y: -209, name: \"\") property(List) output\n                \n                \n                instance(x: 63, y: -87) flatten_80e3af root.Std_k98ojb.List.Flatten {}\n                instance(x: 339, y: -61) list_add_instance root.Std_k98ojb.List.Add {}\n\n                acc -> list_add_instance.list\n                x -> list_add_instance.item\n\n                \n                list_add_instance.listWithItem -> flatten_80e3af.items\n                \n                flatten_80e3af.flattened -> output\n\n            }\n        }\n\n        \n        unique_list_set_instance.output_list -> list_distinct_instance.items\n        \n        instance(x: -21, y: 7) set_instance root.Std_k98ojb.Iteration.Reduce {\n            \n            initialValue: []\n            handler(doc:\"Add the item to accumulator if not present.\") { \n                in(name: \"acc\") property(List) acc\n                in(name: \"x\") property(Number) x\n\n                out(x: 154, y: -209, name: \"\") property(List) output\n                \n                \n                instance(x: 63, y: -87) flatten_80e3af root.Std_k98ojb.List.Flatten {}\n                instance(x: 339, y: -61) list_add_instance root.Std_k98ojb.List.Add {}\n\n                acc -> list_add_instance.list\n                x -> list_add_instance.item\n\n                \n                list_add_instance.listWithItem -> flatten_80e3af.items\n                \n                flatten_80e3af.flattened -> output\n\n            }\n        }\n\n        \n        unique_list_set_instance.output_list -> set_instance.items\n        \n        instance(x: 146, y: -127) is_empty_instance root.Std_k98ojb.List.IsEmpty {}\n        \n        set_instance.output_list -> is_empty_instance.list\n        \n\n        instance(x: -30, y: -158) if_expression_root root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_empty_instance.isEmpty\"\n            then: \"output_cffcc2 = 1\"\n            otherwise: \"list_distinct_instance.output_list -> unique_product_instance.items\"\n        }\n\n        \n        output_43f65e -> continue_45190b\n\n    }\n    \n    \n\n    instance(x: -78, y: -17) swap_list_node root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 290, y: 25) difference_2d4baf root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_2d4baf.left\n        list2_ai -> difference_2d4baf.right\n        difference_2d4baf.difference -> output_ai\n\n        instance(x: -37, y: 106) difference_d9e59c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_d9e59c.left\n        list1_ai -> difference_d9e59c.right\n        difference_d9e59c.difference -> output_ai\n    }\n\n    \n\n    instance(x: -360, y: 87) find_dissimilar_9b4d8b root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -143, y: 130) modulo_1e8a0b root.Std_k98ojb.Math.Modulo {}\n        n_68068c -> modulo_1e8a0b.value\n        list_48148f -> modulo_1e8a0b.divisor\n        instance(x: 32, y: -75) slice_95d0d8 root.Std_k98ojb.List.Slice {}\n        instance(x: 346, y: 49) concat_baf0c3 root.Std_k98ojb.List.Concat {}\n        list_48148f -> slice_95d0d8.list\n        modulo_1e8a0b.result -> slice_95d0d8.end\n        slice_95d0d8.slice -> concat_baf0c3.right\n        0 -> slice_95d0d8.start\n        list_48148f -> concat_baf0c3.left\n        concat_baf0c3.result -> output_823209\n    }\n\n    \n\n    instance(x: -79, y: -123) rotate_right_c604da root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -48, y: 109) reduce_a6bdf5 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 619, y: 3) add_b8c27e root.Std_k98ojb.Math.Add {}\n        list_2c62ab -> reduce_a6bdf5.items\n        0 -> reduce_a6bdf5.initialValue\n        func() {\n            in(x: -41, y: -137, name: \"accumulated\") property(Number) current_value_4e9a28\n            in(x: -187, y: -66, name: \"current\") property(Any) current_item_e59cf0\n\n            out(x: 593, y: 59, name: \"sum\") property(Number) sum_value_a4b8ae\n\n            current_value_4e9a28 -> add_b8c27e.first\n            current_item_e59cf0 -> add_b8c27e.second\n            add_b8c27e.result -> sum_value_a4b8ae\n        } -> reduce_a6bdf5.reducer\n        reduce_a6bdf5.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 110, y: -39) _sum_19cd7c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 45, y: -181) generaterange_bdbd76 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 273, y: -333) greaterthan_ebafe5 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 409, y: -191) modulo_6a0c20 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 777, y: -324) ifexpression_f3efee root.Std_k98ojb.Std.IfExpression {\n            expression: \"num >= n\"\n        }\n        instance(x: 565, y: -153) not_00aa3c root.Std_k98ojb.Logic.Not {}\n        instance(x: 724, y: -98) for_bcfecf root.Std_k98ojb.Std.For {}\n        getter(x: 87, y: -260, name: \"getter_1d5d3c\") getter_1d5d3c = num\n        setter(x: 416, y: -374, name: \"setter_a2aebf\") setter_a2aebf = remainder\n\n        ifexpression_f3efee.else -> continue_9a54bb\n        ifexpression_f3efee.value -> output_c457b3\n        not_00aa3c.result -> ifexpression_f3efee.then\n        modulo_6a0c20.result -> setter_a2aebf.new_value\n        greaterthan_ebafe5.result -> not_00aa3c.input\n        generaterange_bdbd76.list -> for_bcfecf.items\n        getter_1d5d3c.value -> modulo_6a0c20.gen_0\n        for_bcfecf.onItem -> ifexpression_f3efee.execute\n        for_bcfecf.done -> continue_9a54bb\n        setter_a2aebf.continue -> greaterthan_ebafe5.right\n        num_5c0677 -> generaterange_bdbd76.from\n        2 -> generaterange_bdbd76.to\n        generaterange_bdbd76.list -> modulo_6a0c20.gen_1\n        for_bcfecf.item -> greaterthan_ebafe5.left\n        execute_b7b391 -> ifexpression_f3efee.execute\n\n    }\n\n    \n\n    instance(x: 48, y: -12) num_prime_d5d0ea root.main.num_prime {}\n\n\n}"
            ]
        }
    }
]