[
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) lessthan_9f8b7c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 50, y: -178) expression_4f9b8c root.Std_k98ojb.Math.Expression {\n            expression: \"x * y < 0\"\n        }\n        x_853326 -> expression_4f9b8c.gen_0\n        y_5390f5 -> expression_4f9b8c.gen_1\n        expression_4f9b8c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: 425, y: -186) opposite_signs_33ad55 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 250, y: -10) modulo_3f9b2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: 0) equal_7c8d3f root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_3f9b2a.value\n        11 -> modulo_3f9b2a.divisor\n        modulo_3f9b2a.result -> equal_7c8d3f.left\n        0 -> equal_7c8d3f.right\n        equal_7c8d3f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 100) is_diff_4a7b9c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) replace_3b7a9d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b7a9d.input\n        search_ai -> replace_3b7a9d.search\n        replace_ai -> replace_3b7a9d.replace\n        replace_3b7a9d.output -> output_ai\n    }\n\n    \n\n    instance(x: -242, y: -31) replace_char_1a2b3c root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 200, y: 209) tolower_3f2a1b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 600, y: 132) equal_4b3f2c root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3f2a1b.input\n        tolower_3f2a1b.output -> equal_4b3f2c.left\n        input_ai -> equal_4b3f2c.right\n        equal_4b3f2c.result -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) is_lower_5d3e2f root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 45, y: 24) filter_3b7f8a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 456, y: 24) reduce_8f9b2c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 270, y: 24) difference_7a9d4b root.Std_k98ojb.Sets.Difference {}\n        instance(x: 45, y: -167) filter_9b3f8a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 270, y: -167) difference_8a9d4b root.Std_k98ojb.Sets.Difference {}\n        instance(x: 456, y: -167) reduce_9f9b2c root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"output\") property(Bool) _7dd980\n\n            instance(x: 92, y: -22) contains_584bfd root.Std_k98ojb.List.Contains {}\n            x_8ee839 -> contains_584bfd.item\n            contains_584bfd.is_contained -> _7dd980\n        } -> filter_3b7f8a.handler\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"output\") property(Bool) _7dd980\n\n            instance(x: 92, y: -22) contains_584bfd root.Std_k98ojb.List.Contains {}\n            x_8ee839 -> contains_584bfd.item\n            contains_584bfd.is_contained -> _7dd980\n        } -> filter_9b3f8a.handler\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -121, y: 37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"output\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_584bfd.first\n            x_8ee839 -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_8f9b2c.reducer\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -121, y: 37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"output\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_584bfd.first\n            x_8ee839 -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_9f9b2c.reducer\n        list_5fda54 -> filter_3b7f8a.items\n        list_5fda54 -> filter_9b3f8a.items\n        filter_3b7f8a.output_list -> difference_7a9d4b.left\n        filter_9b3f8a.output_list -> difference_8a9d4b.left\n        difference_7a9d4b.difference -> reduce_8f9b2c.items\n        difference_8a9d4b.difference -> reduce_9f9b2c.items\n        1 -> reduce_8f9b2c.initial\n        1 -> reduce_9f9b2c.initial\n        reduce_8f9b2c.result -> output_cffcc2"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 100, y: 50) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 150) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 100) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.list -> output_ai\n    }\n\n    \n    instance(x: 100, y: 50) find_dissimilar_node root.main.find_dissimilar {}\n\n    \n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 120, y: -89) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 320, y: -89) sub_5f3b2a root.Std_k98ojb.Math.Sub {}\n        instance(x: 520, y: -89) slice_1a2b3c root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: 50) slice_4d5e6f root.Std_k98ojb.List.Slice {}\n        instance(x: 720, y: -20) concat_7g8h9i root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> sub_5f3b2a.first\n        n_68068c -> sub_5f3b2a.second\n        sub_5f3b2a.result -> slice_1a2b3c.start\n        list_48148f -> slice_1a2b3c.list\n        -1 -> slice_1a2b3c.end\n        slice_1a2b3c.slice -> concat_7g8h9i.left\n\n        0 -> slice_4d5e6f.start\n        sub_5f3b2a.result -> slice_4d5e6f.end\n        list_48148f -> slice_4d5e6f.list\n        slice_4d5e6f.slice -> concat_7g8h9i.right\n\n        concat_7g8h9i.result -> output_823209\n    }\n\n    \n\n    instance(x: -293, y: -5) rotate_right_7a4dad root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 15) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7b3b7b.items\n        0 -> reduce_7b3b7b.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1a2b3c\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1a2b3c -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_7b3b7b.reducer\n        reduce_7b3b7b.output -> sum_2a848f\n    }\n    \n\n    instance(x: 264, y: -464, name: \"sum_instance\") sum_instance_091f94 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 120, y: -215) if_3f9b2d root.Std_k98ojb.Std.If {}\n        instance(x: 320, y: -100) generaterange_5b7f3a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 540, y: -50) for_9c8f3d root.Std_k98ojb.Std.For {}\n        instance(x: 760, y: -200) modulo_2f8b3c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 980, y: -150) equal_4f9b2e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1180, y: -100) if_5f9b2f root.Std_k98ojb.Std.If {}\n        instance(x: 1400, y: -50) not_6f9b2g root.Std_k98ojb.Logic.Not {}\n        instance(x: 1600, y: 0) if_7f9b2h root.Std_k98ojb.Std.If {}\n        instance(x: 1800, y: 50) continue_8f9b2i root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> if_3f9b2d.value\n        2 -> if_3f9b2d.predicate\n        if_3f9b2d.then -> continue_9a54bb\n        if_3f9b2d.else -> generaterange_5b7f3a.from\n        2 -> generaterange_5b7f3a.to\n        generaterange_5b7f3a.list -> for_9c8f3d.items\n        for_9c8f3d.item -> modulo_2f8b3c.value\n        num_5c0677 -> modulo_2f8b3c.divisor\n        modulo_2f8b3c.result -> equal_4f9b2e.left\n        0 -> equal_4f9b2e.right\n        equal_4f9b2e.result -> if_5f9b2f.predicate\n        for_9c8f3d.onItem -> if_5f9b2f.execute\n        if_5f9b2f.then -> not_6f9b2g.input\n        if_5f9b2f.else -> for_9c8f3d.next\n        not_6f9b2g.result -> if_7f9b2h.predicate\n        if_7f9b2h.then -> continue_9a54bb\n        if_7f9b2h.else -> continue_8f9b2i.execute\n        for_9c8f3d.done -> continue_8f9b2i.execute\n        continue_8f9b2i.value -> output_c457b3\n        execute_b7b391 -> if_3f9b2d.execute\n    }\n\n    \n\n    instance(x: -200, y: -100) num_prime_9f9b2j root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) expression_4f9b7d root.Std_k98ojb.Math.Expression {\n            expression: \"(x < 0 && y > 0) || (x > 0 && y < 0)\"\n        }\n        x_853326 -> expression_4f9b7d.gen_0\n        y_5390f5 -> expression_4f9b7d.gen_1\n        expression_4f9b7d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: 425, y: -186) opposite_signs_33ad55 root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 250, y: -20) modulo_3b9f8a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: -18) equal_1f9b7e root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_3b9f8a.value\n        11 -> modulo_3b9f8a.divisor\n        modulo_3b9f8a.result -> equal_1f9b7e.left\n        0 -> equal_1f9b7e.right\n        equal_1f9b7e.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 100) is_diff_9a8b7c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 221, y: 209) replace_3b7a9d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b7a9d.input\n        search_ai -> replace_3b7a9d.search\n        replace_ai -> replace_3b7a9d.replace\n        replace_3b7a9d.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_935476 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 200, y: 209) tolower_3f2c1a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 600, y: 132) equal_9b3f1a root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3f2c1a.input\n        tolower_3f2c1a.output -> equal_9b3f1a.left\n        input_ai -> equal_9b3f1a.right\n        equal_9b3f1a.result -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) is_lower_4f3a1b root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 0, y: 0) filter_7d3b8a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 300, y: 0) reduce_5a7b9c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 600, y: 0) notempty_9d8b7c root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 900, y: 0) if_3d8b7c root.Std_k98ojb.Std.If {}\n        instance(x: 1200, y: 0) mul_8d7b9c root.Std_k98ojb.Math.Mul {}\n        instance(x: 1500, y: 0) set_3d8b7c root.Std_k98ojb.Std.If {}\n\n        list_5fda54 -> filter_7d3b8a.items\n        filter_7d3b8a.output_list -> reduce_5a7b9c.items\n        reduce_5a7b9c.result -> output_cffcc2\n        reduce_5a7b9c.result -> notempty_9d8b7c.list\n        notempty_9d8b7c.isEmpty -> if_3d8b7c.input\n        if_3d8b7c.then -> set_3d8b7c.execute\n        if_3d8b7c.else -> continue_45190b\n        set_3d8b7c.value -> output_cffcc2\n        1 -> set_3d8b7c.value\n\n        func() {\n            in(x: -100, y: 0, name: \"item\") property(Number) item_9d8b7c\n            out(x: 100, y: 0, name: \"isUnique\") property(Bool) isUnique_9d8b7c\n\n            instance(x: 0, y: 0) contains_8d7b9c root.Std_k98ojb.List.Contains {}\n            list_5fda54 -> contains_8d7b9c.list\n            item_9d8b7c -> contains_8d7b9c.item\n            contains_8d7b9c.is_contained -> isUnique_9d8b7c\n        } -> filter_7d3b8a.handler\n\n        func() {\n            in(x: -100, y: 0, name: \"acc\") property(Number) acc_9d8b7c\n            in(x: 0, y: 0, name: \"item\") property(Number) item_9d8b7c\n            out(x: 100, y: 0, name: \"result\") property(Number) result_9d8b7c\n\n            acc_9d8b7c -> mul_8d7b9c.first\n            item_9d8b7c -> mul_8d7b9c.second\n            mul_8d7b9c.result -> result_9d8b7c\n        } -> reduce_5a7b9c.reducer\n    }\n\n    \n\n    instance(x: -500, y: 0) unique_product_9d8b7c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 62, y: 20) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 62, y: 120) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 70) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.list -> output_ai\n    }\n\n    \n    instance(x: 62, y: 20) find_dissimilar_node root.main.find_dissimilar {}\n\n    \n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 123, y: -89) length_9f1a4b root.Std_k98ojb.List.Length {}\n        instance(x: 320, y: -89) sub_3f1a4b root.Std_k98ojb.Math.Sub {}\n        instance(x: 520, y: -89) slice_1f1a4b root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: 30) slice_2f1a4b root.Std_k98ojb.List.Slice {}\n        instance(x: 720, y: -30) concat_4f1a4b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_9f1a4b.list\n        length_9f1a4b.length -> sub_3f1a4b.first\n        n_68068c -> sub_3f1a4b.second\n        sub_3f1a4b.result -> slice_1f1a4b.start\n        list_48148f -> slice_1f1a4b.list\n        list_48148f -> slice_2f1a4b.list\n        sub_3f1a4b.result -> slice_2f1a4b.end\n        -1 -> slice_1f1a4b.end\n        slice_1f1a4b.slice -> concat_4f1a4b.right\n        slice_2f1a4b.slice -> concat_4f1a4b.left\n        concat_4f1a4b.result -> output_823209\n    }\n\n    \n\n    instance(x: -293, y: -5) rotate_right_7a4dad root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 30) reduce_5f3b7b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_5f3b7b.items\n        0 -> reduce_5f3b7b.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1a2b3c\n            in(x: -177, y: 22, name: \"current\") property(Number) current_4d5e6f\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_7e8f9g\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1a2b3c -> add_0f3be6.first\n            current_4d5e6f -> add_0f3be6.second\n            add_0f3be6.result -> sum_7e8f9g\n        } -> reduce_5f3b7b.reducer\n        reduce_5f3b7b.output -> sum_2a848f\n    }\n    \n\n    instance(x: 118, y: -26) sum_instance root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 120, y: -215) ifexpression_1f8b3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 120, y: -50) ifexpression_3b7d9e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 2\"\n        }\n        instance(x: 120, y: 120) ifexpression_5c8d7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % 2 == 0\"\n        }\n        instance(x: 400, y: 50) generaterange_8f9d3c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 600, y: 50) for_9b8c7e root.Std_k98ojb.Std.For {}\n        instance(x: 800, y: 50) if_7d8e9f root.Std_k98ojb.Std.If {}\n        instance(x: 1000, y: 50) modulo_9c8d7a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1000, y: 150) equal_8d9f7e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1000, y: 250) not_9e8f7a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1000, y: 350) if_9f8e7d root.Std_k98ojb.Std.If {}\n        instance(x: 1000, y: 450) continue_9a54bb root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> ifexpression_1f8b3a.gen_0\n        ifexpression_1f8b3a.result -> output_c457b3\n        ifexpression_1f8b3a.then -> continue_9a54bb\n        ifexpression_1f8b3a.else -> ifexpression_3b7d9e.execute\n\n        num_5c0677 -> ifexpression_3b7d9e.gen_0\n        ifexpression_3b7d9e.result -> output_c457b3\n        ifexpression_3b7d9e.then -> continue_9a54bb\n        ifexpression_3b7d9e.else -> ifexpression_5c8d7f.execute\n\n        num_5c0677 -> ifexpression_5c8d7f.gen_0\n        ifexpression_5c8d7f.result -> not_9e8f7a.input\n        not_9e8f7a.result -> output_c457b3\n        ifexpression_5c8d7f.then -> continue_9a54bb\n        ifexpression_5c8d7f.else -> generaterange_8f9d3c.from\n\n        3 -> generaterange_8f9d3c.from\n        num_5c0677 -> generaterange_8f9d3c.to\n        generaterange_8f9d3c.list -> for_9b8c7e.items\n\n        for_9b8c7e.item -> modulo_9c8d7a.value\n        num_5c0677 -> modulo_9c8d7a.divisor\n        modulo_9c8d7a.result -> equal_8d9f7e.left\n        0 -> equal_8d9f7e.right\n        equal_8d9f7e.result -> if_7d8e9f.predicate\n\n        for_9b8c7e.onItem -> if_7d8e9f.execute\n        if_7d8e9f.then -> continue_9a54bb\n        if_7d8e9f.else -> for_9b8c7e.next\n\n        for_9b8c7e.done -> if_9f8e7d.execute\n        true -> if_9f8e7d.predicate\n        if_9f8e7d.then -> continue_9a54bb\n        if"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) mul_9f8b7e root.Std_k98ojb.Math.Mul {}\n        instance(x: 100, y: -180) lessthan_5f6a9b root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_9f8b7e.result -> lessthan_5f6a9b.left\n        0 -> lessthan_5f6a9b.right\n        lessthan_5f6a9b.result -> output_3339a3\n        x_853326 -> mul_9f8b7e.first\n        y_5390f5 -> mul_9f8b7e.second\n    }\n\n    \n\n    instance(x: 10, y: -50) opposite_signs_7d4f3a root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 250, y: -20) modulo_3b9f8a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: -18) equal_1f9b3e root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_3b9f8a.value\n        11 -> modulo_3b9f8a.divisor\n        modulo_3b9f8a.result -> equal_1f9b3e.left\n        0 -> equal_1f9b3e.right\n        equal_1f9b3e.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 100) is_diff_9a8b7c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) replace_3b4a5d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b4a5d.input\n        search_ai -> replace_3b4a5d.search\n        replace_ai -> replace_3b4a5d.replace\n        replace_3b4a5d.output -> output_ai\n    }\n\n    \n\n    instance(x: -242, y: -31) replace_char_7f8a9c root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 0, y: 210) tolower_3f2c1a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 400, y: 210) equal_9b3f1a root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3f2c1a.input\n        tolower_3f2c1a.output -> equal_9b3f1a.left\n        input_ai -> equal_9b3f1a.right\n        equal_9b3f1a.result -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) is_lower_4f3a1b root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 0, y: -50) filter_7d1e8f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 450, y: 0) reduce_5e2b9f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 250, y: -100) mul_3b2f4e root.Std_k98ojb.Math.Mul {}\n        instance(x: 150, y: -200) not_equal_1a2b3c root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 350, y: -150) count_4d5e6f root.Std_k98ojb.Std.Count {}\n        instance(x: 550, y: -250) if_7e8f9g root.Std_k98ojb.Std.If {}\n\n        func() {\n            in(x: -100, y: -50, name: \"item\") property(Number) item_123456\n            out(x: 100, y: -50, name: \"isUnique\") property(Bool) isUnique_654321\n\n            instance(x: 0, y: 0) count_abcdef root.Std_k98ojb.Std.Count {}\n            instance(x: 200, y: 0) equal_ghijkl root.Std_k98ojb.Logic.Equal {}\n\n            item_123456 -> count_abcdef.count\n            1 -> equal_ghijkl.right\n            count_abcdef.count -> equal_ghijkl.left\n            equal_ghijkl.result -> isUnique_654321\n        } -> filter_7d1e8f.handler\n\n        list_5fda54 -> filter_7d1e8f.items\n        filter_7d1e8f.output_list -> reduce_5e2b9f.items\n\n        func() {\n            in(x: -50, y: 0, name: \"acc\") property(Number) acc_abcdef\n            in(x: -50, y: 50, name: \"item\") property(Number) item_ghijkl\n\n            out(x: 50, y: 25, name: \"product\") property(Number) product_mnopqr\n\n            acc_abcdef -> mul_3b2f4e.first\n            item_ghijkl -> mul_3b2f4e.second\n            mul_3b2f4e.result -> product_mnopqr\n        } -> reduce_5e2b9f.reducer\n\n        1 -> reduce_5e2b9f.initial\n        reduce_5e2b9f.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }\n\n    instance(x: 100, y: 100) unique_product_123456 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 0, y: 50) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 50) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.list -> output_ai\n    }\n\n    \n    instance(x: 0, y: 50) find_dissimilar_node root.main.find_dissimilar {}\n\n    \n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 64, y: -89) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 297, y: -89) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 531, y: -89) slice_1 root.Std_k98ojb.List.Slice {}\n        instance(x: 531, y: 0) slice_2 root.Std_k98ojb.List.Slice {}\n        instance(x: 664, y: -56) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        n_68068c -> sub_f133b2.second\n        sub_f133b2.result -> slice_1.start\n        list_48148f -> slice_1.list\n        0 -> slice_2.start\n        sub_f133b2.result -> slice_2.end\n        list_48148f -> slice_2.list\n        slice_1.slice -> concat_0234d2.left\n        slice_2.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -293, y: -5) rotate_right_7a4dad root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 15) reduce_5f3b7b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_5f3b7b.items\n        0 -> reduce_5f3b7b.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1a\n            in(x: -177, y: 22, name: \"current\") property(Number) current_1b\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_1c\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1a -> add_0f3be6.first\n            current_1b -> add_0f3be6.second\n            add_0f3be6.result -> sum_1c\n        } -> reduce_5f3b7b.reducer\n        reduce_5f3b7b.output -> sum_2a848f\n    }\n    \n\n    instance(x: -34, y: 127) sum_node root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 120, y: -215) ifexpression_1f8b3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 120, y: -50) ifexpression_2b3a4d root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 2\"\n        }\n        instance(x: 120, y: 120) ifexpression_3c4b5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % 2 == 0\"\n        }\n        instance(x: 400, y: 50) generaterange_4d5e6f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 650, y: 50) for_5e6f70 root.Std_k98ojb.Std.For {}\n        instance(x: 900, y: 50) if_6f7081 root.Std_k98ojb.Std.If {}\n        instance(x: 1100, y: 50) not_7f8092 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1100, y: 150) continue_8f90a3 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> ifexpression_1f8b3a.gen_0\n        ifexpression_1f8b3a.result -> output_c457b3\n        ifexpression_1f8b3a.then -> continue_9a54bb\n\n        num_5c0677 -> ifexpression_2b3a4d.gen_0\n        ifexpression_2b3a4d.result -> output_c457b3\n        ifexpression_2b3a4d.then -> continue_9a54bb\n\n        num_5c0677 -> ifexpression_3c4b5e.gen_0\n        ifexpression_3c4b5e.result -> not_7f8092.input\n        not_7f8092.result -> output_c457b3\n        ifexpression_3c4b5e.then -> continue_9a54bb\n\n        3 -> generaterange_4d5e6f.from\n        num_5c0677 -> generaterange_4d5e6f.to\n        generaterange_4d5e6f.list -> for_5e6f70.items\n\n        for_5e6f70.item -> if_6f7081.predicate\n        if_6f7081.then -> continue_9a54bb\n        if_6f7081.else -> for_5e6f70.next\n\n        for_5e6f70.done -> continue_9a54bb\n        execute_b7b391 -> for_5e6f70.reset\n    }\n\n    \n\n    instance(x: -50, y: -50) num_prime_9a0b1c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) expression_9f7b3c root.Std_k98ojb.Math.Expression {\n            expression: \"(x < 0 && y > 0) || (x > 0 && y < 0)\"\n        }\n        x_853326 -> expression_9f7b3c.gen_0\n        y_5390f5 -> expression_9f7b3c.gen_1\n        expression_9f7b3c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: 204, y: -132) opposite_signs_4b9f3d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 250, y: -10) modulo_1a2b3c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: 0) equal_4d5e6f root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_1a2b3c.value\n        11 -> modulo_1a2b3c.divisor\n        modulo_1a2b3c.result -> equal_4d5e6f.left\n        0 -> equal_4d5e6f.right\n        equal_4d5e6f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 100) is_diff_9a8b7c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 221, y: 209) replace_5f4b3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5f4b3c.input\n        search_ai -> replace_5f4b3c.search\n        replace_ai -> replace_5f4b3c.replace\n        replace_5f4b3c.output -> output_ai\n    }\n\n    \n\n    instance(x: -158, y: 278) replace_char_7a3b2d root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 210, y: 209) tolower_3f2a1b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 560, y: 132) equal_9b3f1c root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3f2a1b.input\n        tolower_3f2a1b.output -> equal_9b3f1c.left\n        input_ai -> equal_9b3f1c.right\n        equal_9b3f1c.result -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_4f3a1b root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 45, y: 24) filter_7c8b9d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 372, y: 22) reduce_5a8b3d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 186, y: 24) unique_3b9f8d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 578, y: 23) mul_9f8b3d root.Std_k98ojb.Math.Mul {}\n        instance(x: 580, y: 123) ifexpression_2d7a6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"acc == 0 ? 1 : acc\"\n        }\n        list_5fda54 -> filter_7c8b9d.items\n        filter_7c8b9d.output_list -> unique_3b9f8d.left\n        unique_3b9f8d.difference -> reduce_5a8b3d.items\n        reduce_5a8b3d.result -> output_cffcc2\n        reduce_5a8b3d.result -> ifexpression_2d7a6c.gen_0\n        ifexpression_2d7a6c.result -> output_cffcc2\n        reduce_5a8b3d.result -> continue_45190b\n        func() {\n            in(x: -110, y: 24, name: \"acc\") property(Number) acc_9f8b3d\n            in(x: -110, y: 124, name: \"value\") property(Number) value_9f8b3d\n\n            out(x: 300, y: 74, name: \"result\") property(Number) result_9f8b3d\n\n            acc_9f8b3d -> mul_9f8b3d.first\n            value_9f8b3d -> mul_9f8b3d.second\n            mul_9f8b3d.result -> result_9f8b3d\n        } -> reduce_5a8b3d.reducer\n        func() {\n            in(x: -110, y: 24, name: \"item\") property(Number) item_9f8b3d\n\n            out(x: 300, y: 74, name: \"isUnique\") property(Bool) isUnique_9f8b3d\n\n            instance(x: 120, y: 24) contains_9f8b3d root.Std_k98ojb.List.Contains {}\n            list_5fda54 -> contains_9f8b3d.list\n            item_9f8b3d -> contains_9f8b3d.item\n            contains_9f8b3d.is_contained -> isUnique_9f8b3d\n        } -> filter_7c8b9d.handler\n    }\n\n    \n\n    instance(x: 118, y: -26) unique_product_9dcc3d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 0, y: 50) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 50) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 100, y: 150) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.list -> output_ai\n    }\n\n    \n    instance(x: 0, y: 50) find_dissimilar_node root.main.find_dissimilar {}\n\n    \n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 153, y: -89) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 353, y: -45) sub_f133b2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 563, y: -90) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 564, y: 30) slice_7f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 764, y: -30) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> sub_f133b2.first\n        n_68068c -> sub_f133b2.second\n        sub_f133b2.result -> slice_3f3ee6.start\n        list_48148f -> slice_3f3ee6.list\n        -1 -> slice_3f3ee6.end\n        0 -> slice_7f3ee6.start\n        sub_f133b2.result -> slice_7f3ee6.end\n        list_48148f -> slice_7f3ee6.list\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_7f3ee6.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -293, y: -5) rotate_right_7a4dad root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 15) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_7b3b7b.initialValue\n        list_2c62ab -> reduce_7b3b7b.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_3f11cd\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_3f11cd -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_7b3b7b.reducer\n        reduce_7b3b7b.output -> sum_2a848f\n    }\n    \n\n    instance(x: 118, y: -26) sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 120, y: -215) ifexpression_1f8b3d root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 365, y: -120) generaterange_3b8c2f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 622, y: -32) filter_7f3c1a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 890, y: -29) isempty_5b3c8d root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 1112, y: -27) not_3c8f1b root.Std_k98ojb.Logic.Not {}\n        2 -> generaterange_3b8c2f.from\n        num_5c0677 -> generaterange_3b8c2f.to\n        generaterange_3b8c2f.list -> filter_7f3c1a.items\n        func() {\n            in(x: -15, y: -15, name: \"divisor\") property(Number) divisor_8f3c1a\n\n            out(x: 350, y: -15, name: \"is_divisor\") property(Bool) is_divisor_3b8c2f\n\n            instance(x: 120, y: -15) modulo_1f8b3d root.Std_k98ojb.Math.Modulo {}\n            instance(x: 250, y: -15) equal_7f3c1a root.Std_k98ojb.Logic.Equal {}\n            num_5c0677 -> modulo_1f8b3d.value\n            divisor_8f3c1a -> modulo_1f8b3d.divisor\n            modulo_1f8b3d.result -> equal_7f3c1a.left\n            0 -> equal_7f3c1a.right\n            equal_7f3c1a.result -> is_divisor_3b8c2f\n        } -> filter_7f3c1a.handler\n        filter_7f3c1a.output_list -> isempty_5b3c8d.list\n        isempty_5b3c8d.isEmpty -> not_3c8f1b.input\n        not_3c8f1b.result -> output_c457b3\n        execute_b7b391 -> ifexpression_1f8b3d.execute\n        ifexpression_1f8b3d.then -> continue_9a54bb\n        ifexpression_1f8b3d.else -> generaterange_3b8c2f.to\n        ifexpression_1f8b3d.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -293, y: -5) num_prime_7a4dad root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) expression_9d7f4b root.Std_k98ojb.Math.Expression {\n            expression: \"(x < 0 && y > 0) || (x > 0 && y < 0)\"\n        }\n        x_853326 -> expression_9d7f4b.gen_0\n        y_5390f5 -> expression_9d7f4b.gen_1\n        expression_9d7f4b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: 34, y: -109) opposite_signs_2a9b3c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 252, y: -20) modulo_45b9e3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 470, y: -18) equal_9c8b4d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_45b9e3.value\n        11 -> modulo_45b9e3.divisor\n        modulo_45b9e3.result -> equal_9c8b4d.left\n        0 -> equal_9c8b4d.right\n        equal_9c8b4d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -152, y: 87) is_diff_8f1b9e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 300, y: 210) replace_6f5d3a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_6f5d3a.input\n        search_ai -> replace_6f5d3a.search\n        replace_ai -> replace_6f5d3a.replace\n        replace_6f5d3a.output -> output_ai\n    }\n\n    \n\n    instance(x: -200, y: 130) replace_char_9b3a5e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 210, y: 209) tolower_3e7c1f root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 560, y: 132) equal_9b5f3e root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3e7c1f.input\n        tolower_3e7c1f.output -> equal_9b5f3e.left\n        input_ai -> equal_9b5f3e.right\n        equal_9b5f3e.result -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_3f7c1f root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 25, y: 2) reduce_5b5e5b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -345, y: 89) filter_2b5f5a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -537, y: -19) emptylist_8f5e5a root.Std_k98ojb.List.Empty {}\n        setter(x: -732, y: -38, name: \"setter_5f5a5b\") setter_5f5a5b = unique_numbers\n        instance(x: -130, y: -32) mul_5f5a5b root.Std_k98ojb.Math.Mul {}\n        instance(x: -513, y: 126) notcontains_5f5a5b root.Std_k98ojb.Logic.Not {}\n        setter(x: 523, y: -12, name: \"setter_5f5a5b\") setter_5f5a5b = product\n        getter(x: 518, y: 74, name: \"getter_5f5a5b\") getter_5f5a5b = product\n        instance(x: -236, y: 163) add_5f5a5b root.Std_k98ojb.List.Add {}\n        instance(x: -418, y: 200) contains_5f5a5b root.Std_k98ojb.List.Contains {}\n        emptylist_8f5e5a.list -> setter_5f5a5b.new_value\n        setter_5f5a5b.continue -> filter_2b5f5a.execute\n        list_5fda54 -> filter_2b5f5a.items\n        filter_2b5f5a.output_list -> reduce_5b5e5b.items\n        func() {\n            in(x: -30, y: -25, name: \"accumulated\") property(List) accumulated_5f5a5b\n            in(x: -23, y: 79, name: \"current\") property(Number) current_5f5a5b\n\n            out(x: 705, y: 49, name: \"output\") property(List) output_5f5a5b\n\n            accumulated_5f5a5b -> contains_5f5a5b.list\n            current_5f5a5b -> contains_5f5a5b.item\n            contains_5f5a5b.is_contained -> notcontains_5f5a5b.input\n            accumulated_5f5a5b -> add_5f5a5b.list\n            current_5f5a5b -> add_5f5a5b.item\n            add_5f5a5b.listWithItem -> output_5f5a5b\n            notcontains_5f5a5b.result -> add_5f5a5b.execute\n        } -> filter_2b5f5a.handler\n        setter_5f5a5b.continue -> reduce_5b5e5b.execute\n        func() {\n            in(x: -30, y: -25, name: \"accumulated\") property(Number) accumulated_5f5a5b\n            in(x: -23, y: 79, name: \"current\") property(Number) current_5f5a5b\n\n            out(x: 705, y: 49, name: \"output\") property(Number) output_5f5a5b\n\n            accumulated_5f5a5b -> mul_5f5a5b.first\n            current_5f5a5b -> mul_5f5a5b.second\n            mul_5f5a5b.result -> output_5f5a5b\n        } -> reduce_5b5e5b.reducer\n        1 -> reduce_5b5e5b.initial\n        reduce_5b5e5b.result -> setter_5f5a5b.new_value\n        setter_5f5a5b.continue -> continue_45190b\n        getter_5f5a5b.value -> output_cff"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 62, y: 20) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 180, y: 130) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 260, y: 200) concat_lists root.Std_k98ojb.List.Concat {}\n        \n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        \n        difference_1.difference -> concat_lists.first\n        difference_2.difference -> concat_lists.second\n        \n        concat_lists.list -> output_ai\n    }\n\n    \n    instance(x: 340, y: 77) find_dissimilar_node root.main.find_dissimilar {}\n\n    \n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 123, y: -89) length_9f1a4b root.Std_k98ojb.List.Length {}\n        instance(x: 320, y: -70) sub_3f7a6b root.Std_k98ojb.Math.Sub {}\n        instance(x: 320, y: 40) slice_first_8a4b2c root.Std_k98ojb.List.Slice {}\n        instance(x: 320, y: -200) slice_second_2f8c4d root.Std_k98ojb.List.Slice {}\n        instance(x: 523, y: -80) concat_3c8b7d root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_9f1a4b.list\n        length_9f1a4b.length -> sub_3f7a6b.first\n        n_68068c -> sub_3f7a6b.second\n\n        list_48148f -> slice_second_2f8c4d.list\n        sub_3f7a6b.result -> slice_second_2f8c4d.start\n        -1 -> slice_second_2f8c4d.end\n\n        list_48148f -> slice_first_8a4b2c.list\n        0 -> slice_first_8a4b2c.start\n        sub_3f7a6b.result -> slice_first_8a4b2c.end\n\n        slice_second_2f8c4d.slice -> concat_3c8b7d.left\n        slice_first_8a4b2c.slice -> concat_3c8b7d.right\n\n        concat_3c8b7d.result -> output_823209\n    }\n\n    \n\n    instance(x: -50, y: 150) rotate_right_3a4b2d root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 15) reduce_0a7b8f root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_0a7b8f.initialValue\n        list_2c62ab -> reduce_0a7b8f.items\n        func() {\n            in(x: -50, y: 0, name: \"accumulated\") property(Number) accumulated_3f2b1a\n            in(x: -50, y: 50, name: \"current\") property(Number) current_4a7b2c\n\n            out(x: 150, y: 25, name: \"sum\") property(Number) sum_1a2b3c\n\n            instance(x: 50, y: 25) add_3b4c5d root.Std_k98ojb.Math.Add {}\n            accumulated_3f2b1a -> add_3b4c5d.first\n            current_4a7b2c -> add_3b4c5d.second\n            add_3b4c5d.result -> sum_1a2b3c\n        } -> reduce_0a7b8f.reducer\n        reduce_0a7b8f.output -> sum_2a848f\n    }\n    \n\n    instance(x: 300, y: 100, name: \"sum_instance\") sum_instance root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 120, y: -215) ifexpression_1f8e3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 365, y: -104) generaterange_3d8a2b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 622, y: -32) for_1a3c0d root.Std_k98ojb.Std.For {}\n        instance(x: 840, y: -139) modulo_9b2e6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1054, y: -112) equal_4d2f3e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1254, y: -49) if_8f2b1d root.Std_k98ojb.Std.If {}\n        2 -> generaterange_3d8a2b.from\n        num_5c0677 -> generaterange_3d8a2b.to\n        generaterange_3d8a2b.list -> for_1a3c0d.items\n        for_1a3c0d.item -> modulo_9b2e6f.divisor\n        num_5c0677 -> modulo_9b2e6f.value\n        modulo_9b2e6f.result -> equal_4d2f3e.left\n        0 -> equal_4d2f3e.right\n        equal_4d2f3e.result -> if_8f2b1d.predicate\n        for_1a3c0d.onItem -> if_8f2b1d.execute\n        if_8f2b1d.then -> continue_9a54bb\n        if_8f2b1d.else -> for_1a3c0d.next\n        for_1a3c0d.done -> continue_9a54bb\n        if_8f2b1d.value -> output_c457b3\n        execute_b7b391 -> ifexpression_1f8e3a.execute\n        ifexpression_1f8e3a.then -> continue_9a54bb\n        ifexpression_1f8e3a.else -> for_1a3c0d.reset\n        false -> ifexpression_1f8e3a.gen_0\n        true -> ifexpression_1f8e3a.gen_1\n    }\n\n    \n\n    instance(x: -34, y: -73) num_prime_2d3a9f root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) expression_9d7f4b root.Std_k98ojb.Math.Expression {\n            expression: \"(x < 0 && y > 0) || (x > 0 && y < 0)\"\n        }\n        x_853326 -> expression_9d7f4b.gen_0\n        y_5390f5 -> expression_9d7f4b.gen_1\n        expression_9d7f4b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: 239, y: -109) opposite_signs_2a9bfa root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 252, y: -20) modulo_45b9c0 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 470, y: -6) equal_9c8e4d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_45b9c0.value\n        11 -> modulo_45b9c0.divisor\n        modulo_45b9c0.result -> equal_9c8e4d.left\n        0 -> equal_9c8e4d.right\n        equal_9c8e4d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: 94, y: 87) is_diff_8f1b63 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 300, y: 210) replace_27c9f6 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_27c9f6.input\n        search_ai -> replace_27c9f6.search\n        replace_ai -> replace_27c9f6.replace\n        replace_27c9f6.output -> output_ai\n    }\n\n    \n\n    instance(x: 230, y: -45) replace_char_5f8a7b root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 183, y: 212) tolower_8f6d5b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 620, y: 146) equal_2c7e0d root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_8f6d5b.input\n        tolower_8f6d5b.output -> equal_2c7e0d.left\n        input_ai -> equal_2c7e0d.right\n        equal_2c7e0d.result -> output_ai\n    }\n\n    \n\n    instance(x: -212, y: 40) is_lower_8b6d3e root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -25, y: 72) reduce_5b5e5b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -345, y: -89) filter_2b5f5a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -537, y: 19) notequal_8f5e5a root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: -415, y: -199) count_3a5e5a root.Std_k98ojb.Std.Count {}\n        data_instance(x: 182, y: -56) data_6f5e5a  = 1\n        execute_19300c -> filter_2b5f5a.execute\n        filter_2b5f5a.output_list -> reduce_5b5e5b.items\n        list_5fda54 -> filter_2b5f5a.items\n        func() {\n            in(x: -172, y: 16, name: \"item\") property(Number) item_7f5e5a\n\n            out(x: 429, y: 16, name: \"result\") property(Bool) result_8f5e5a\n\n            instance(x: 139, y: 26) contains_9f5e5a root.Std_k98ojb.List.Contains {}\n            instance(x: 323, y: 26) not_0f5e5a root.Std_k98ojb.Logic.Not {}\n            list_5fda54 -> contains_9f5e5a.list\n            contains_9f5e5a.is_contained -> not_0f5e5a.input\n            item_7f5e5a -> contains_9f5e5a.item\n            not_0f5e5a.result -> result_8f5e5a\n        } -> filter_2b5f5a.handler\n        func() {\n            in(x: -182, y: 16, name: \"acc\") property(Number) acc_1f5e5a\n            in(x: -97, y: 16, name: \"item\") property(Number) item_2f5e5a\n\n            out(x: 194, y: 16, name: \"result\") property(Number) result_3f5e5a\n\n            instance(x: 65, y: 26) mul_4f5e5a root.Std_k98ojb.Math.Mul {}\n            acc_1f5e5a -> mul_4f5e5a.first\n            item_2f5e5a -> mul_4f5e5a.second\n            mul_4f5e5a.result -> result_3f5e5a\n        } -> reduce_5b5e5b.reducer\n        reduce_5b5e5b.accumulated -> output_cffcc2\n        reduce_5b5e5b.initial_value -> data_6f5e5a\n        reduce_5b5e5b.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: 118, y: -26) unique_product_9dcc3d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 62, y: 20) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 180, y: 130) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 260, y: 50) concat_1 root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n        concat_1.concatenated -> output_ai\n    }\n\n    \n    instance(x: 62, y: 20) find_dissimilar_node root.main.find_dissimilar {}\n\n    \n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 123, y: -89) length_9f1e4f root.Std_k98ojb.List.Length {}\n        instance(x: 320, y: -70) sub_3f38a6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 533, y: -110) slice_first_2c4f1b root.Std_k98ojb.List.Slice {}\n        instance(x: 536, y: 11) slice_second_8d6d4f root.Std_k98ojb.List.Slice {}\n        instance(x: 730, y: -36) concat_4f1b8a root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_9f1e4f.list\n        length_9f1e4f.length -> sub_3f38a6.first\n        n_68068c -> sub_3f38a6.second\n        sub_3f38a6.result -> slice_first_2c4f1b.start\n        list_48148f -> slice_first_2c4f1b.list\n        0 -> slice_second_8d6d4f.start\n        sub_3f38a6.result -> slice_second_8d6d4f.end\n        list_48148f -> slice_second_8d6d4f.list\n        slice_first_2c4f1b.slice -> concat_4f1b8a.left\n        slice_second_8d6d4f.slice -> concat_4f1b8a.right\n        concat_4f1b8a.result -> output_823209\n    }\n\n    \n\n    instance(x: -253, y: 43) rotate_right_0f1d29 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 202, y: 17) reduce_5c8e4b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_5c8e4b.items\n        0 -> reduce_5c8e4b.initialValue\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1a\n            in(x: -177, y: 22, name: \"current\") property(Number) current_1b\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_1c\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1a -> add_0f3be6.first\n            current_1b -> add_0f3be6.second\n            add_0f3be6.result -> sum_1c\n        } -> reduce_5c8e4b.reducer\n        reduce_5c8e4b.output -> sum_2a848f\n    }\n    \n\n    instance(x: -180, y: 100) sum_instance root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 28, y: -61) ifexpression_1f8e3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 593, y: 22) not_4c9d93 root.Std_k98ojb.Logic.Not {}\n        instance(x: 263, y: -108) generaterange_431c92 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 780, y: -13) contains_65f8d1 root.Std_k98ojb.List.Contains {}\n        instance(x: 408, y: -20) map_5c1f3c root.Std_k98ojb.Iteration.Map {}\n        instance(x: 1012, y: -45) not_5a73b9 root.Std_k98ojb.Logic.Not {}\n        instance(x: 67, y: -206) setter_7d3aeb root.Std_k98ojb.Std.If {}\n        instance(x: 506, y: -59) and_8b4f69 root.Std_k98ojb.Logic.And {}\n        2 -> generaterange_431c92.from\n        num_5c0677 -> generaterange_431c92.to\n        generaterange_431c92.list -> map_5c1f3c.items\n        func() {\n            in(x: -192, y: -16, name: \"current\") property(Number) current_81298e\n\n            out(x: 521, y: -28, name: \"bool\") property(Bool) bool_4524be\n\n            instance(x: 74, y: -23) modulo_ad7b2a root.Std_k98ojb.Math.Modulo {}\n            instance(x: 285, y: -25) equal_cb8a55 root.Std_k98ojb.Logic.Equal {}\n            current_81298e -> modulo_ad7b2a.value\n            num_5c0677 -> modulo_ad7b2a.divisor\n            modulo_ad7b2a.result -> equal_cb8a55.left\n            0 -> equal_cb8a55.right\n            equal_cb8a55.result -> bool_4524be\n        } -> map_5c1f3c.handler\n        map_5c1f3c.output_list -> contains_65f8d1.list\n        true -> contains_65f8d1.item\n        contains_65f8d1.is_contained -> not_4c9d93.input\n        not_4c9d93.result -> and_8b4f69.right\n        ifexpression_1f8e3a.result -> and_8b4f69.left\n        and_8b4f69.result -> not_5a73b9.input\n        not_5a73b9.result -> output_c457b3\n        ifexpression_1f8e3a.result -> setter_7d3aeb.predicate\n        execute_b7b391 -> setter_7d3aeb.execute\n        setter_7d3aeb.then -> continue_9a54bb\n        setter_7d3aeb.else -> map_5c1f3c.items\n        num_5c0677 -> ifexpression_1f8e3a.gen_0\n    }\n\n    \n\n    instance(x: -176, y: -38) num_prime_ba1f9d root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) expression_9f7b4c root.Std_k98ojb.Math.Expression {\n            expression: \"(x < 0 && y > 0) || (x > 0 && y < 0)\"\n        }\n        x_853326 -> expression_9f7b4c.x\n        y_5390f5 -> expression_9f7b4c.y\n        expression_9f7b4c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: 0, y: -130) opposite_signs_1a2b3c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 250, y: -20) modulo_1a2b3c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: -10) equal_4d5e6f root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_1a2b3c.value\n        11 -> modulo_1a2b3c.divisor\n        modulo_1a2b3c.result -> equal_4d5e6f.left\n        0 -> equal_4d5e6f.right\n        equal_4d5e6f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 50) is_diff_7e8f9a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 221, y: 209) replace_5f4b3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5f4b3c.input\n        search_ai -> replace_5f4b3c.search\n        replace_ai -> replace_5f4b3c.replace\n        replace_5f4b3c.output -> output_ai\n    }\n\n    \n\n    instance(x: -158, y: 278) replace_char_7a3b5e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 200, y: 209) tolower_3f2b1a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 500, y: 132) equal_9b3f1a root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3f2b1a.input\n        tolower_3f2b1a.output -> equal_9b3f1a.left\n        input_ai -> equal_9b3f1a.right\n        equal_9b3f1a.result -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) is_lower_5d3f2a root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 45, y: 20) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 372, y: 22) reduce_8c7b9d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 186, y: 24) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -75) filter_2b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -73) length_5b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -170) filter_3b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -168) length_6b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -265) filter_4b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -263) length_7b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -360) filter_5b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -358) length_8b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -455) filter_6b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -453) length_9b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -550) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -548) length_10b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -645) filter_8b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -643) length_11b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -740) filter_9b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -738) length_12b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -835) filter_10b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -833) length_13b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -930) filter_11b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -928) length_14b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -1025) filter_12b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -1023) length_15b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -1120) filter_13b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -1118) length_16b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -1215) filter_14b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -1213) length_17b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -1310) filter_15b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 186, y: -1308) length_18b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -1405) filter_16b3"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 60, y: 20) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 180, y: 20) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 20) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.list -> output_ai\n    }\n\n    \n    instance(x: 60, y: 20) find_dissimilar_node root.main.find_dissimilar {}\n\n    \n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 153, y: -89) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 353, y: -45) sub_9f3b7c root.Std_k98ojb.Math.Sub {}\n        instance(x: 557, y: -110) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 20) slice_4f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 753, y: -45) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> sub_9f3b7c.first\n        n_68068c -> sub_9f3b7c.second\n        sub_9f3b7c.result -> slice_3f3ee6.start\n        list_48148f -> slice_3f3ee6.list\n        list_48148f -> slice_4f3ee6.list\n        0 -> slice_4f3ee6.start\n        sub_9f3b7c.result -> slice_4f3ee6.end\n        slice_3f3ee6.slice -> concat_0234d2.left\n        slice_4f3ee6.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_right_node root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 120, y: 30) reduce_4b8e90 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4b8e90.initialValue\n        list_2c62ab -> reduce_4b8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1a2b3c\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1a2b3c -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_4b8e90.reducer\n        reduce_4b8e90.output -> sum_2a848f\n    }\n    \n\n    instance(x: 118, y: -26) sum_instance root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 120, y: -215) if_3b9f2d root.Std_k98ojb.Std.If {}\n        instance(x: 320, y: -20) generaterange_5a6b3c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 540, y: -25) for_9c8f3d root.Std_k98ojb.Std.For {}\n        instance(x: 780, y: -30) modulo_2f8b4e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1000, y: -35) if_7d9f4e root.Std_k98ojb.Std.If {}\n        instance(x: 1200, y: -40) not_8a9b5f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1400, y: -45) equal_9b8c6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1600, y: -50) not_7a8b6f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1800, y: -55) equal_8b9c7f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2000, y: -60) not_6a7b8f root.Std_k98ojb.Logic.Not {}\n        instance(x: 2200, y: -65) equal_7b8c9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2400, y: -70) not_5a6b9f root.Std_k98ojb.Logic.Not {}\n        instance(x: 2600, y: -75) equal_6b7c8f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 2800, y: -80) not_4a5b7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 3000, y: -85) equal_5b6c7f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 3200, y: -90) not_3a4b6f root.Std_k98ojb.Logic.Not {}\n        instance(x: 3400, y: -95) equal_4b5c6f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 3600, y: -100) not_2a3b5f root.Std_k98ojb.Logic.Not {}\n        instance(x: 3800, y: -105) equal_3b4c5f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 4000, y: -110) not_1a2b4f root.Std_k98ojb.Logic.Not {}\n        instance(x: 4200, y: -115) equal_2b3c4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 4400, y: -120) not_0a1b3f root.Std_k98ojb.Logic.Not {}\n        instance(x: 4600, y: -125) equal_1b2c3f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 4800, y: -130) not_9a0b2f root.Std_k98ojb.Logic.Not {}\n        instance(x: 5000, y: -135) equal_0b1c2f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 5200, y: -140) not_8a9b1f root.Std_k98ojb.Logic.Not {}\n        instance(x: 5400, y: -145) equal_9b0c1f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 5600, y: -150) not_7a8b0f root.Std_k98ojb.Logic.Not {}\n        instance(x: 5800, y: -155) equal_8b9c0f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 6000, y: -160) not_6a"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) mul_2d9f56 root.Std_k98ojb.Math.Mul {}\n        instance(x: 81, y: -218) lessthan_8f8e73 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2d9f56.result -> lessthan_8f8e73.left\n        0 -> lessthan_8f8e73.right\n        lessthan_8f8e73.result -> output_3339a3\n        x_853326 -> mul_2d9f56.first\n        y_5390f5 -> mul_2d9f56.second\n    }\n\n    \n\n    instance(x: -171, y: -9) opposite_signs_4a7b9f root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 252, y: -20) modulo_45b9e3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 470, y: -18) equal_9c8b4d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_45b9e3.value\n        11 -> modulo_45b9e3.divisor\n        modulo_45b9e3.result -> equal_9c8b4d.left\n        0 -> equal_9c8b4d.right\n        equal_9c8b4d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -152, y: 87) is_diff_8f1b9e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 272, y: 210) replace_6f5d7a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_6f5d7a.input\n        search_ai -> replace_6f5d7a.search\n        replace_ai -> replace_6f5d7a.replace\n        replace_6f5d7a.output -> output_ai\n    }\n\n    \n\n    instance(x: -183, y: 130) replace_char_78b3a1 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 210, y: 205) tolower_6c7f3e root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 491, y: 133) equal_9b5f3e root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_6c7f3e.input\n        tolower_6c7f3e.output -> equal_9b5f3e.left\n        input_ai -> equal_9b5f3e.right\n        equal_9b5f3e.result -> output_ai\n    }\n\n    \n\n    instance(x: -425, y: 209) is_lower_12d3f6 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 25, y: -2) reduce_5b5e5b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -345, y: 89) filter_2b5f5a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -537, y: 19) count_9d8b2a root.Std_k98ojb.Std.Count {}\n        instance(x: -104, y: -64) unique_3b2c5b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: -565, y: -101) map_5c2b4a root.Std_k98ojb.Iteration.Map {}\n        instance(x: 281, y: -30) if_9c5b2b root.Std_k98ojb.Std.If {}\n        1 -> reduce_5b5e5b.initial_value\n        list_5fda54 -> filter_2b5f5a.items\n        func() {\n            in(x: -153, y: -19, name: \"item\") property(Number) item_4c2b5a\n\n            out(x: 309, y: -24, name: \"bool\") property(Bool) bool_5b5a2b\n\n            instance(x: 96, y: -20) equal_2b5a4c root.Std_k98ojb.Logic.Equal {}\n            1 -> equal_2b5a4c.right\n            equal_2b5a4c.result -> bool_5b5a2b\n            count_9d8b2a.count -> equal_2b5a4c.left\n        } -> filter_2b5f5a.handler\n        filter_2b5f5a.output_list -> reduce_5b5e5b.items\n        reduce_5b5e5b.result -> output_cffcc2\n        execute_19300c -> if_9c5b2b.input\n        if_9c5b2b.then -> continue_45190b\n        list_5fda54 -> map_5c2b4a.items\n        func() {\n            in(x: -110, y: -16, name: \"item\") property(Number) item_2b5a4c\n\n            out(x: 289, y: -21, name: \"count\") property(Number) count_5b5a2b\n\n            instance(x: 95, y: -17) filter_5a2b4c root.Std_k98ojb.Iteration.Filter {}\n            list_5fda54 -> filter_5a2b4c.items\n            func() {\n                in(x: -93, y: -17, name: \"i\") property(Number) i_2b5a4c\n\n                out(x: 204, y: -21, name: \"bool\") property(Bool) bool_5b5a2b\n\n                instance(x: 89, y: -18) equal_5a2b4c root.Std_k98ojb.Logic.Equal {}\n                item_2b5a4c -> equal_5a2b4c.left\n                i_2b5a4c -> equal_5a2b4c.right\n                equal_5a2b4c.result -> bool_5b5a2b\n            } -> filter_5a2b4c.handler\n            filter_5a2b4c.output_list -> count_9d8b2a.items\n            count_9d8b2a.result -> count_5b5a2b\n        } -> map_5c2b4a.handler\n        map_5c2b4a.output_list -> unique_3b2c5b.items\n        unique_3b2c5b.output_list -> filter_2b5f5a.items\n        func() {\n            in(x: -153, y: -19, name: \"acc\") property(Number) acc_4c2b5a\n            in(x: -145, y: 81, name: \"item\") property(Number) item_5b5a2b\n\n            out(x: 314, y:"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 62, y: 20) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 160, y: 130) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 250, y: 50) concat_1 root.Std_k98ojb.List.Concat {}\n        \n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        \n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n        \n        concat_1.result -> output_ai\n    }\n\n    \n    instance(x: 426, y: -303) find_dissimilar_node root.main.find_dissimilar {}\n\n    \n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 123, y: -89) length_9f1a4d root.Std_k98ojb.List.Length {}\n        instance(x: 320, y: -70) sub_8f3a6b root.Std_k98ojb.Math.Sub {}\n        instance(x: 542, y: -110) slice_first_8a4b2c root.Std_k98ojb.List.Slice {}\n        instance(x: 542, y: 30) slice_second_2d5c4e root.Std_k98ojb.List.Slice {}\n        instance(x: 704, y: -40) concat_3c8b7d root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_9f1a4d.list\n        length_9f1a4d.length -> sub_8f3a6b.first\n        n_68068c -> sub_8f3a6b.second\n\n        list_48148f -> slice_first_8a4b2c.list\n        sub_8f3a6b.result -> slice_first_8a4b2c.start\n        -1 -> slice_first_8a4b2c.end\n\n        list_48148f -> slice_second_2d5c4e.list\n        0 -> slice_second_2d5c4e.start\n        sub_8f3a6b.result -> slice_second_2d5c4e.end\n\n        slice_first_8a4b2c.slice -> concat_3c8b7d.left\n        slice_second_2d5c4e.slice -> concat_3c8b7d.right\n\n        concat_3c8b7d.result -> output_823209\n    }\n\n    \n\n    instance(x: -72, y: 65) rotate_right_3a4f8d root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 142, y: 15) reduce_0a7b8d root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_0a7b8d.initialValue\n        list_2c62ab -> reduce_0a7b8d.items\n        func() {\n            in(x: -50, y: 0, name: \"accumulated\") property(Number) accumulated_3d2b5e\n            in(x: -50, y: 50, name: \"current\") property(Number) current_4e3b2c\n\n            out(x: 150, y: 25, name: \"sum\") property(Number) sum_1a2b3c\n\n            instance(x: 50, y: 25) add_3b2c4e root.Std_k98ojb.Math.Add {}\n            accumulated_3d2b5e -> add_3b2c4e.first\n            current_4e3b2c -> add_3b2c4e.second\n            add_3b2c4e.result -> sum_1a2b3c\n        } -> reduce_0a7b8d.reducer\n        reduce_0a7b8d.output -> sum_2a848f\n    }\n    \n\n    instance(x: 20, y: 100) sum_instance root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 120, y: -215) ifexpression_1f8e3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 1040, y: -89) if_9b1d27 root.Std_k98ojb.Std.If {}\n        instance(x: 263, y: -108) floor_7b29c1 root.Std_k98ojb.Math.Floor {}\n        instance(x: 497, y: -122) generaterange_8d1b5c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 755, y: -106) for_3c0e91 root.Std_k98ojb.Std.For {}\n        instance(x: 1001, y: -28) modulo_4b0c8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1143, y: -102) equal_ae3f2b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1145, y: -208) not_92a2d6 root.Std_k98ojb.Logic.Not {}\n        1 -> ifexpression_1f8e3a.gen_0\n        num_5c0677 -> ifexpression_1f8e3a.gen_1\n        ifexpression_1f8e3a.result -> not_92a2d6.input\n        not_92a2d6.result -> output_c457b3\n        num_5c0677 -> floor_7b29c1.input\n        floor_7b29c1.output -> generaterange_8d1b5c.to\n        2 -> generaterange_8d1b5c.from\n        generaterange_8d1b5c.list -> for_3c0e91.items\n        for_3c0e91.item -> modulo_4b0c8f.divisor\n        num_5c0677 -> modulo_4b0c8f.value\n        modulo_4b0c8f.result -> equal_ae3f2b.left\n        0 -> equal_ae3f2b.right\n        equal_ae3f2b.result -> if_9b1d27.predicate\n        for_3c0e91.onItem -> if_9b1d27.execute\n        if_9b1d27.then -> continue_9a54bb\n        if_9b1d27.else -> for_3c0e91.next\n        for_3c0e91.done -> continue_9a54bb\n        ifexpression_1f8e3a.then -> continue_9a54bb\n        execute_b7b391 -> ifexpression_1f8e3a.execute\n    }\n\n    \n\n    instance(x: -33, y: -76) num_prime_4a1d6b root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 10195,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -216, y: -178) math_expression_57e13b root.Std_k98ojb.Math.Expression {\n            expression: \"x * y < 0\"\n        }\n        x_853326 -> math_expression_57e13b.x\n        y_5390f5 -> math_expression_57e13b.y\n        math_expression_57e13b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: 314, y: -132) opposite_signs_2b6c88 root.main.opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 252, y: 2) modulo_45b9fc root.Std_k98ojb.Math.Modulo {}\n        instance(x: 481, y: 4) equal_4a3fbc root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_45b9fc.value\n        11 -> modulo_45b9fc.divisor\n        modulo_45b9fc.result -> equal_4a3fbc.left\n        0 -> equal_4a3fbc.right\n        equal_4a3fbc.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -149, y: 54) is_diff_9f31b4 root.main.is_diff {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 272, y: 210) replace_27c98d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_27c98d.input\n        search_ai -> replace_27c98d.search\n        replace_ai -> replace_27c98d.replace\n        replace_27c98d.output -> output_ai\n    }\n    \n\n    instance(x: -210, y: 230) replace_char_a6bc29 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 183, y: 212) tolower_8b132d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 528, y: 131) equal_7d2c7e root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_8b132d.input\n        tolower_8b132d.output -> equal_7d2c7e.left\n        input_ai -> equal_7d2c7e.right\n        equal_7d2c7e.result -> output_ai\n    }\n\n    \n\n    instance(x: 75, y: 145) is_lower_f2a1e4 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 103, y: 72) reduce_5de5e5 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 67, y: -35) unique_7152b5 root.Std_k98ojb.List.Flatten {}\n        instance(x: -264, y: 140) notempty_926d9d root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 148, y: 189) mul_5d71f6 root.Std_k98ojb.Math.Mul {}\n        instance(x: -282, y: -94) filter_41b8b5 root.Std_k98ojb.Iteration.Filter {}\n        setter(x: -460, y: 70, name: \"setter_1b9c56\") setter_1b9c56 = unique_set\n        getter(x: -74, y: 181, name: \"getter_7e2ff3\") getter_7e2ff3 = unique_set\n        list_5fda54 -> filter_41b8b5.items\n        setter_1b9c56.continue -> notempty_926d9d.execute\n        filter_41b8b5.output_list -> setter_1b9c56.new_value\n        getter_7e2ff3.value -> unique_7152b5.items\n        func() {\n            in(x: -43, y: 15, name: \"accum\") property(Number) accum_f6a260\n            in(x: -36, y: 85, name: \"current\") property(Number) current_33b13a\n\n            out(x: 353, y: 60, name: \"result\") property(Number) result_0de1e8\n\n            accum_f6a260 -> mul_5d71f6.first\n            current_33b13a -> mul_5d71f6.second\n            mul_5d71f6.result -> result_0de1e8\n        } -> reduce_5de5e5.reducer\n        unique_7152b5.flattened -> reduce_5de5e5.items\n        1 -> reduce_5de5e5.initial\n        reduce_5de5e5.result -> output_cffcc2\n        reduce_5de5e5.continue -> continue_45190b\n        notempty_926d9d.isEmpty -> filter_41b8b5.handler\n        execute_19300c -> setter_1b9c56.execute\n    }\n\n    \n\n    instance(x: -54, y: -32) unique_product_1ffcc1 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 25, y: 16) difference_1a30e3 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 187, y: 16) difference_2b30f4 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 16) concat_3c40g5 root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_1a30e3.left\n        list2_ai -> difference_1a30e3.right\n        list2_ai -> difference_2b30f4.left\n        list1_ai -> difference_2b30f4.right\n        difference_1a30e3.difference -> concat_3c40g5.left\n        difference_2b30f4.difference -> concat_3c40g5.right\n        concat_3c40g5.result -> output_ai\n    }\n\n    \n\n    instance(x: -120, y: 180) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 123, y: -89) length_9f1e93 root.Std_k98ojb.List.Length {}\n        instance(x: 337, y: -38) sub_f7adf3 root.Std_k98ojb.Math.Sub {}\n        instance(x: 575, y: -89) slice_30e16b root.Std_k98ojb.List.Slice {}\n        instance(x: 572, y: -10) slice_4573e4 root.Std_k98ojb.List.Slice {}\n        instance(x: 768, y: -54) concat_30f8b3 root.Std_k98ojb.List.Concat {}\n        length_9f1e93.length -> sub_f7adf3.first\n        n_68068c -> sub_f7adf3.second\n        sub_f7adf3.result -> slice_30e16b.end\n        list_48148f -> length_9f1e93.list\n        slice_30e16b.start -> slice_4573e4.end\n        slice_30e16b.slice -> concat_30f8b3.right\n        slice_4573e4.slice -> concat_30f8b3.left\n        0 -> slice_30e16b.start\n        sub_f7adf3.result -> slice_4573e4.start\n        list_48148f -> slice_30e16b.list\n        list_48148f -> slice_4573e4.list\n        concat_30f8b3.result -> output_823209\n    }\n\n    \n    instance(x: 197, y: -8) rotate_right_d4f893 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 142, y: 15) reduce_0a7b65 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_0a7b65.initialValue\n        list_2c62ab -> reduce_0a7b65.items\n        reduce_0a7b65.output -> sum_2a848f\n\n        func() {\n            in(x: -143, y: -45, name: \"accumulated\") property(Number) accumulated_9f1e93\n            in(x: -145, y: 48, name: \"current\") property(Number) current_f7adf3\n\n            out(x: 292, y: 1, name: \"sum\") property(Number) sum_30e2b8\n\n            instance(x: 73, y: 0) add_2670a5 root.Std_k98ojb.Math.Add {}\n            accumulated_9f1e93 -> add_2670a5.first\n            current_f7adf3 -> add_2670a5.second\n            add_2670a5.result -> sum_30e2b8\n        } -> reduce_0a7b65.reducer\n    }\n    \n\n    instance(x: 197, y: 165) sum_function_node root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -28, y: -61) ifexpression_1f8e3a root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 104, y: 194) generaterange_3d93a2 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 307, y: 70) for_431c92 root.Std_k98ojb.Std.For {}\n        instance(x: 665, y: 99) if_9d9f44 root.Std_k98ojb.Std.If {}\n        instance(x: 519, y: 110) modulo_5f79b1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 897, y: -108) not_22e1b1 root.Std_k98ojb.Logic.Not {}\n        2 -> generaterange_3d93a2.from\n        ifexpression_1f8e3a.then -> continue_9a54bb\n        0 -> output_c457b3\n        ifexpression_1f8e3a.else -> generaterange_3d93a2.to\n        execute_b7b391 -> ifexpression_1f8e3a.execute\n        num_5c0677 -> ifexpression_1f8e3a.gen_0\n        num_5c0677 -> generaterange_3d93a2.to\n        generaterange_3d93a2.list -> for_431c92.items\n        for_431c92.item -> modulo_5f79b1.value\n        num_5c0677 -> modulo_5f79b1.value\n        modulo_5f79b1.result -> if_9d9f44.predicate\n        for_431c92.onItem -> if_9d9f44.execute\n        if_9d9f44.then -> continue_9a54bb\n        if_9d9f44.else -> for_431c92.next\n        for_431c92.done -> not_22e1b1.input\n        not_22e1b1.result -> output_c457b3\n        not_22e1b1.input -> continue_9a54bb\n    }\n\n    \n\n    instance(x: 16, y: -63) num_prime_1d0afc root.main.num_prime {}\n}"
            ]
        }
    }
]