[
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_6c1e7b Std.Math.GreaterThan {}\n\tinstance(x: -56, y: -173) lessthanorequal_c162f5 Std.Math.LessThanOrEqual {}\n\n\tgreaterthan_6c1e7b.left -> x_853326\n\tlessthanorequal_c162f5.left -> x_853326\n\tgreaterthan_6c1e7b.right -> 0\n\tlessthanorequal_c162f5.right -> 0\n\n\tinstance(x: 34, y: -173) greaterthan_6c1e7b2 Std.Math.GreaterThan {}\n\tinstance(x: 50, y: -173) lessthanorequal_c162f52 Std.Math.LessThanOrEqual {}\n\n\tgreaterthan_6c1e7b2.left -> y_5390f5\n\tlessthanorequal_c162f52.left -> y_5390f5\n\tgreaterthan_6c1e7b2.right -> 0\n\tlessthanorequal_c162f52.right -> 0\n\n\tinstance(x: 118, y: -173) and_e4a5d3 Std.Logic.And {}\n\tand_e4a5d3.left -> greaterthan_6c1e7b.result\n\tand_e4a5d3.right -> lessthanorequal_c162f52.result\n\n\tinstance(x: 201, y: -173) and_e4a5d32 Std.Logic.And {}\n\tand_e4a5d32.left -> greaterthan_6c1e7b2.result\n\tand_e4a5d32.right -> lessthanorequal_c162f5.result\n\n\tinstance(x: 81, y: -107) or_f0e3a9 Std.Logic.Or {}\n\tor_f0e3a9.left -> and_e4a5d3.result\n\tor_f0e3a9.right -> and_e4a5d32.result\n\n\tor_f0e3a9.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -13) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 349, y: 24) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e2b4 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e2b4.left\n        input_ai -> equals_65e2b4.right\n        equals_65e2b4.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -384, y: 45) difference_1_ae root.Sets.Difference {}\n\tinstance(x: -222, y: 121) difference_2_ae root.Sets.Difference {}\n\tinstance(x: -31, y: 77) concat_ae root.List.Concat {}\n\n\tlist1_ai -> difference_1_ae.left\n\tlist2_ai -> difference_1_ae.right\n\tlist2_ai -> difference_2_ae.left\n\tlist1_ai -> difference_2_ae.right\n\n\tdifference_1_ae.difference -> concat_ae.left\n\tdifference_2_ae.difference -> concat_ae.right\n\tconcat_ae.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 34, y: 121) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 246, y: 14) greaterthan_5e2f6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 432, y: -27) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        2 -> for_8cb3f6.start\n        num_5c0677 -> for_8cb3f6.end\n        1 -> for_8cb3f6.step\n        num_5c0677 -> greaterthan_5e2f6c.left\n        1 -> greaterthan_5e2f6c.right\n        execute_b7b391 -> if_07b8c7.execute\n        greaterthan_5e2f6c.result -> if_07b8c7.predicate\n        if_07b8c7.then -> for_8cb3f6.trigger\n        for_8cb3f6.item -> modulo_e19a62.value\n        num_5c0677 -> modulo_e19a62.divisor\n        modulo_e19a62.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.else -> output_c457b3\n        for_8cb3f6.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_4e2c11 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -56, y: -173) lessthanorequal_ebf6d5 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_ebf6d5.left -> x_853326\n\ty_5390f5 -> greaterthan_4e2c11.right\n\ty_5390f5 -> lessthanorequal_ebf6d5.right\n\tinstance(x: 44, y: -173) and_f46a3b Std.Logic.And {\n\t}\n\tgreaterthan_4e2c11.result -> and_f46a3b.left\n\tlessthanorequal_ebf6d5.result -> and_f46a3b.right\n\tand_f46a3b.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -14) mod_4e8a95 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_4e8a95.value\n        11 -> mod_4e8a95.divisor\n        instance(x: 349, y: 24) if_f0d9a3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0 ? true : false\"\n        }\n        mod_4e8a95.result -> if_f0d9a3.mod\n        if_f0d9a3.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 248) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f4a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f4a5d.input\n        instance(x: 241, y: 209) equals_65e2b6 Logic.Equal {}\n        tolower_3f4a5d.output -> equals_65e2b6.left\n        input_ai -> equals_65e2b6.right\n        equals_65e2b6.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 300, y: 100) iteration_reduce root.Iteration.Reduce {\n            handler: Math.Mul\n        }\n        list_sort.result -> iteration_reduce.items\n        execute_19300c -> iteration_reduce.trigger\n\n        instance(x: 500, y: 100) query_filter root.Std_k98ojb.Query.Filter {\n            where: \"index == list.indexOf(it)\"\n        }\n        list_5fda54 -> query_filter.list\n        execute_19300c -> query_filter.trigger\n\n        query_filter.result -> iteration_reduce.items\n        iteration_reduce.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_ae root.Sets.Difference {}\n\tinstance(x: -357, y: 201) difference_2_ae root.Sets.Difference {}\n\tinstance(x: -128, y: 161) concat_ae root.List.Concat {}\n\n\tlist1_ai -> difference_1_ae.left\n\tlist2_ai -> difference_1_ae.right\n\tlist2_ai -> difference_2_ae.left\n\tlist1_ai -> difference_2_ae.right\n\n\tdifference_1_ae.difference -> concat_ae.list1\n\tdifference_2_ae.difference -> concat_ae.list2\n\tconcat_ae.result -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tlist_48148f -> slice_2.list\n\tslice_2.result -> concat.left\n\tslice_1.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 10, y: 100) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\tsetter(x: 50, y: 50) setter_41e4ad = 0\n\tsetter_41e4ad.new_value -> iteration_reduce_f9e5b7.context\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.output_list -> sum_2a848f\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 246, y: 14) greaterthan_5e2f4c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 432, y: -13) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_f11fd9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        num_5c0677 -> greaterthan_5e2f4c.left\n        1 -> greaterthan_5e2f4c.right\n        greaterthan_5e2f4c.result -> if_07b8c7.predicate\n        execute_b7b391 -> if_07b8c7.execute\n        if_07b8c7.then -> generaterange_038fce.reset\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_f11fd9.value\n        num_5c0677 -> modulo_f11fd9.divisor\n        modulo_f11fd9.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_9a54bb\n        if_07b8c7.else -> output_c457b3\n        for_8cb3f6.done -> if_07b8c7.then\n        if_07b8c7.value -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_6c1e7d Std.Math.GreaterThan {}\n\tinstance(x: -262, y: -55) lessthanorequal_c5fc8b Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c1e7d.left -> x_853326\n\tlessthanorequal_c5fc8b.left -> x_853326\n\tgreaterthan_6c1e7d.right -> 0\n\tlessthanorequal_c5fc8b.right -> 0\n\t\n\tinstance(x: -57, y: -173) greaterthan_6c1e7d2 Std.Math.GreaterThan {}\n\tinstance(x: -179, y: -55) lessthanorequal_c5fc8b2 Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c1e7d2.left -> y_5390f5\n\tlessthanorequal_c5fc8b2.left -> y_5390f5\n\tgreaterthan_6c1e7d2.right -> 0\n\tlessthanorequal_c5fc8b2.right -> 0\n\t\n\tinstance(x: 34, y: -128) and_ea9e16 Std.Logic.And {}\n\tand_ea9e16.left -> greaterthan_6c1e7d.result\n\tand_ea9e16.right -> lessthanorequal_c5fc8b2.result\n\t\n\tinstance(x: -114, y: -128) and_ea9e162 Std.Logic.And {}\n\tand_ea9e162.left -> greaterthan_6c1e7d2.result\n\tand_ea9e162.right -> lessthanorequal_c5fc8b.result\n\t\n\tinstance(x: 91, y: -53) or_dfd4f3 Std.Logic.And {}\n\tor_dfd4f3.left -> and_ea9e16.result\n\tor_dfd4f3.right -> and_ea9e162.result\n\t\n\toutput_3339a3 -> or_dfd4f3.result\n\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -14) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 349, y: 12) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f4a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f4a5d.input\n        instance(x: 241, y: 209) equals_65e8b2 Logic.Equal {}\n        tolower_3f4a5d.output -> equals_65e8b2.left\n        input_ai -> equals_65e8b2.right\n        equals_65e8b2.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 300, y: 100) iteration_reduce root.Iteration.Reduce {\n            handler: Std_k98ojb.Math.Mul\n        }\n        list_sort.result -> iteration_reduce.items\n        execute_19300c -> iteration_reduce.trigger\n\n        instance(x: 500, y: 100) query_filter root.Std_k98ojb.Query.Filter {\n            where: \"index == list.indexOf(it)\"\n        }\n        list_5fda54 -> query_filter.list\n        execute_19300c -> query_filter.trigger\n\n        query_filter.result -> iteration_reduce.items\n        iteration_reduce.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -355, y: 121) difference_1_a5b7d3 root.Sets.Difference {}\n\tinstance(x: -355, y: 201) difference_2_4f6e1c root.Sets.Difference {}\n\tinstance(x: -104, y: 150) concat_ebafe48 root.List.Concat {}\n\n\tlist1_ai -> difference_1_a5b7d3.left\n\tlist2_ai -> difference_1_a5b7d3.right\n\tlist2_ai -> difference_2_4f6e1c.left\n\tlist1_ai -> difference_2_4f6e1c.right\n\n\tdifference_1_a5b7d3.difference -> concat_ebafe48.left\n\tdifference_2_4f6e1c.difference -> concat_ebafe48.right\n\tconcat_ebafe48.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 116, y: 93) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 246, y: 14) if_5e2c11 root.Std_k98ojb.Std.If {\n            expression: \"(num < 2)\"\n        }\n        num_5c0677 -> if_5e2c11.input\n        execute_b7b391 -> if_5e2c11.execute\n        if_5e2c11.then -> continue_9a54bb\n        if_5e2c11.value -> output_c457b3\n\n        instance(x: 432, y: -26) for_8cb3f6 root.Std_k98ojb.Std.For {\n            items: \"List.GenerateRange(2, num - 1)\"\n        }\n        execute_b7b391 -> for_8cb3f6.reset\n        if_5e2c11.else -> for_8cb3f6.trigger\n\n        instance(x: 714, y: -155) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {\n            left: \"for.item\",\n            right: \"Math.Sqrt(num)\"\n        }\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        num_5c0677 -> lessthanorequal_f11fda.right\n\n        instance(x: 933, y: 25) modulo_f11fd9 root.Std_k98ojb.Math.Modulo {\n            value: \"num\",\n            divisor: \"for.item\"\n        }\n        num_5c0677 -> modulo_f11fd9.value\n        for_8cb3f6.item -> modulo_f11fd9.divisor\n\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {\n            expression: \"(modulo.result == 0)\"\n        }\n        modulo_f11fd9.result -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.value -> output_c457b3\n\n        instance(x: 1504, y: -400) and_80a119 root.Std_k98ojb.Logic.And {\n            left: \"lessthanorequal.result\",\n            right: \"if_07b8c7.value\"\n        }\n        lessthanorequal_f11fda.result -> and_80a119.left\n        if_07b8c7.value -> and_80a119.right\n\n        instance(x: 1812, y: -319) if_e19a62 root.Std_k98ojb.Std.If {\n            expression: \"(and.result == true)\"\n        }\n        and_80a119.result -> if_e19a62.input\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.value -> output_c457b3\n\n        for_8cb3f6.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_6c4e7b Std.Math.GreaterThan {}\n\tinstance(x: -262, y: -55) lessthanorequal_c5f2d1 Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c4e7b.left -> x_853326\n\tlessthanorequal_c5f2d1.left -> x_853326\n\tgreaterthan_6c4e7b.right -> 0\n\tlessthanorequal_c5f2d1.right -> 0\n\t\n\tinstance(x: -55, y: -173) greaterthan_6c4e7b2 Std.Math.GreaterThan {}\n\tinstance(x: -177, y: -55) lessthanorequal_c5f2d12 Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c4e7b2.left -> y_5390f5\n\tlessthanorequal_c5f2d12.left -> y_5390f5\n\tgreaterthan_6c4e7b2.right -> 0\n\tlessthanorequal_c5f2d12.right -> 0\n\t\n\tinstance(x: 34, y: -173) and_ea3e16 Std.Logic.And {}\n\tand_ea3e16.left -> greaterthan_6c4e7b.result\n\tand_ea3e16.right -> lessthanorequal_c5f2d12.result\n\t\n\tinstance(x: 34, y: -55) and_ea3e162 Std.Logic.And {}\n\tand_ea3e162.left -> greaterthan_6c4e7b2.result\n\tand_ea3e162.right -> lessthanorequal_c5f2d1.result\n\t\n\tinstance(x: 159, y: -173) or_dcc9e8 Std.Logic.And {}\n\tor_dcc9e8.left -> and_ea3e16.result\n\tor_dcc9e8.right -> and_ea3e162.result\n\t\n\tor_dcc9e8.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -14) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 349, y: 12) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e2b4 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e2b4.left\n        input_ai -> equals_65e2b4.right\n        equals_65e2b4.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -384, y: 45) difference_1_ae root.Sets.Difference {}\n\tinstance(x: -222, y: 137) difference_2_ae root.Sets.Difference {}\n\tinstance(x: -37, y: 77) concat_ae root.List.Concat {}\n\n\tlist1_ai -> difference_1_ae.left\n\tlist2_ai -> difference_1_ae.right\n\tlist2_ai -> difference_2_ae.left\n\tlist1_ai -> difference_2_ae.right\n\n\tdifference_1_ae.difference -> concat_ae.left\n\tdifference_2_ae.difference -> concat_ae.right\n\tconcat_ae.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 34, y: 121) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 244, y: 114) greaterthan_4e0f6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 432, y: 123) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1496, y: -187) not_9fba8c root.Std_k98ojb.Logic.Not {}\n        2 -> for_8cb3f6.start\n        num_5c0677 -> for_8cb3f6.end\n        for_8cb3f6.item -> modulo_e19a62.value\n        num_5c0677 -> modulo_e19a62.divisor\n        modulo_e19a62.result -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_9a54bb\n        for_8cb3f6.done -> not_9fba8c.input\n        not_9fba8c.result -> output_c457b3\n        execute_b7b391 -> for_8cb3f6.reset\n        if_07b8c7.else -> for_8cb3f6.next\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_4e2c11 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -56, y: -172) lessthanorequal_ebf321 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_ebf321.left -> x_853326\n\tgreaterthan_4e2c11.right -> 0\n\tlessthanorequal_ebf321.right -> 0\n\tinstance(x: 34, y: -173) greaterthan_4e2c12 Std.Math.GreaterThan {\n\t}\n\tinstance(x: 50, y: -172) lessthanorequal_ebf322 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c12.left -> y_5390f5\n\tlessthanorequal_ebf322.left -> y_5390f5\n\tgreaterthan_4e2c12.right -> 0\n\tlessthanorequal_ebf322.right -> 0\n\tinstance(x: 118, y: -173) and_70a3d1 Std.Logic.And {\n\t}\n\tand_70a3d1.left -> greaterthan_4e2c11.result\n\tand_70a3d1.right -> lessthanorequal_ebf322.result\n\tinstance(x: 118, y: -107) and_70a3d2 Std.Logic.And {\n\t}\n\tand_70a3d2.left -> lessthanorequal_ebf321.result\n\tand_70a3d2.right -> greaterthan_4e2c12.result\n\tinstance(x: 159, y: -173) or_dfdfe6 Std.Logic.And {\n\t}\n\tor_dfdfe6.left -> and_70a3d1.result\n\tor_dfdfe6.right -> and_70a3d2.result\n\tor_dfdfe6.result -> output_3339a3\n\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -14) mod_4e8a95 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_4e8a95.value\n        11 -> mod_4e8a95.divisor\n        instance(x: 349, y: 24) if_f0d9a3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0 ? true : false\"\n        }\n        mod_4e8a95.result -> if_f0d9a3.mod\n        if_f0d9a3.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 248) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f4a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f4a5d.input\n        instance(x: 241, y: 209) equals_65e2b6 Logic.Equal {}\n        tolower_3f4a5d.output -> equals_65e2b6.left\n        input_ai -> equals_65e2b6.right\n        equals_65e2b6.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 300, y: 100) iteration_reduce root.Iteration.Reduce {\n            handler: Math.Mul\n        }\n        list_sort.result -> iteration_reduce.items\n        execute_19300c -> iteration_reduce.trigger\n\n        instance(x: 500, y: 100) query_filter root.Std_k98ojb.Query.Filter {\n            where: \"index == list.indexOf(it)\"\n        }\n        list_5fda54 -> query_filter.list\n        execute_19300c -> query_filter.trigger\n\n        query_filter.result -> iteration_reduce.items\n        iteration_reduce.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_ae root.Sets.Difference {}\n\tinstance(x: -357, y: 201) difference_2_ae root.Sets.Difference {}\n\tinstance(x: -128, y: 161) concat_ae root.List.Concat {}\n\n\tlist1_ai -> difference_1_ae.left\n\tlist2_ai -> difference_1_ae.right\n\tlist2_ai -> difference_2_ae.left\n\tlist1_ai -> difference_2_ae.right\n\n\tdifference_1_ae.difference -> concat_ae.list1\n\tdifference_2_ae.difference -> concat_ae.list2\n\tconcat_ae.result -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tlist_48148f -> slice_2.list\n\tslice_2.result -> concat.left\n\tslice_1.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 116, y: 93) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 114, y: 105) less_than_or_equal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 341, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) modulo_f11fd9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -187) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_f11fd9.value\n        num_5c0677 -> modulo_f11fd9.divisor\n        modulo_f11fd9.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_9a54bb\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_b7b391 -> for_8cb3f6.reset\n        for_8cb3f6.done -> if_e19a62.execute\n        if_e19a62.predicate -> output_c457b3\n        if_e19a62.then -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_6c1e7d Std.Math.GreaterThan {}\n\tinstance(x: -262, y: -55) lessthanorequal_c5fc8b Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c1e7d.left -> x_853326\n\tlessthanorequal_c5fc8b.left -> x_853326\n\tgreaterthan_6c1e7d.right -> 0\n\tlessthanorequal_c5fc8b.right -> 0\n\t\n\tinstance(x: -56, y: -173) greaterthan_6c1e7d2 Std.Math.GreaterThan {}\n\tinstance(x: -178, y: -55) lessthanorequal_c5fc8b2 Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c1e7d2.left -> y_5390f5\n\tlessthanorequal_c5fc8b2.left -> y_5390f5\n\tgreaterthan_6c1e7d2.right -> 0\n\tlessthanorequal_c5fc8b2.right -> 0\n\t\n\tinstance(x: 34, y: -145) and_e4a3be Std.Logic.And {}\n\tand_e4a3be.left -> greaterthan_6c1e7d.result\n\tand_e4a3be.right -> lessthanorequal_c5fc8b2.result\n\t\n\tinstance(x: 34, y: -75) and_e4a3be2 Std.Logic.And {}\n\tand_e4a3be2.left -> greaterthan_6c1e7d2.result\n\tand_e4a3be2.right -> lessthanorequal_c5fc8b.result\n\t\n\tinstance(x: 105, y: -145) or_d5f9a0 Std.Logic.And {}\n\tor_d5f9a0.left -> and_e4a3be.result\n\tor_d5f9a0.right -> and_e4a3be2.result\n\t\n\tor_d5f9a0.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 210, y: -10) mod_9e8a5d root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_9e8a5d.value\n        11 -> mod_9e8a5d.divisor\n        instance(x: 420, y: 30) if_e19a62 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0 ? true : false\"\n        }\n        mod_9e8a5d.result -> if_e19a62.result\n        if_e19a62.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f4a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f4a5d.input\n        instance(x: 241, y: 209) equals_65e8b2 Logic.Equal {}\n        tolower_3f4a5d.output -> equals_65e8b2.left\n        input_ai -> equals_65e8b2.right\n        equals_65e8b2.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 300, y: 100) iteration_reduce root.Iteration.Reduce {\n            handler: Std_k98ojb.Math.Mul\n        }\n        list_sort.result -> iteration_reduce.items\n        execute_19300c -> iteration_reduce.trigger\n\n        instance(x: 500, y: 100) query_filter root.Std_k98ojb.Query.Filter {\n            where: \"index == list.indexOf(it)\"\n        }\n        list_5fda54 -> query_filter.list\n        execute_19300c -> query_filter.trigger\n\n        query_filter.result -> iteration_reduce.items\n        iteration_reduce.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -355, y: 121) difference_1_a5b7d3 root.Sets.Difference {}\n\tinstance(x: -355, y: 201) difference_2_4f6e1c root.Sets.Difference {}\n\tinstance(x: -104, y: 150) concat_ebafe48 root.List.Concat {}\n\n\tlist1_ai -> difference_1_a5b7d3.left\n\tlist2_ai -> difference_1_a5b7d3.right\n\tlist2_ai -> difference_2_4f6e1c.left\n\tlist1_ai -> difference_2_4f6e1c.right\n\n\tdifference_1_a5b7d3.difference -> concat_ebafe48.left\n\tdifference_2_4f6e1c.difference -> concat_ebafe48.right\n\tconcat_ebafe48.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 116, y: 93) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 246, y: 14) if_5e2c11 root.Std_k98ojb.Std.If {\n            expression: \"(num < 2)\"\n        }\n        num_5c0677 -> if_5e2c11.input\n        execute_b7b391 -> if_5e2c11.execute\n        if_5e2c11.then -> continue_9a54bb\n        if_5e2c11.value -> output_c457b3\n\n        instance(x: 432, y: -26) for_8cb3f6 root.Std_k98ojb.Std.For {\n        }\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {\n            from: \"2\"\n            to: \"(num - 1)\"\n        }\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        if_5e2c11.else -> for_8cb3f6.reset\n\n        instance(x: 714, y: -155) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {\n        }\n        for_8cb3f6.index -> lessthanorequal_f11fda.left\n        num_5c0677 -> lessthanorequal_f11fda.right\n\n        instance(x: 933, y: 25) modulo_f11fdb root.Std_k98ojb.Math.Modulo {\n        }\n        num_5c0677 -> modulo_f11fdb.value\n        for_8cb3f6.item -> modulo_f11fdb.divisor\n\n        instance(x: 1051, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {\n            expression: \"(modulo == 0)\"\n        }\n        modulo_f11fdb.result -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.value -> output_c457b3\n\n        for_8cb3f6.done -> continue_9a54bb\n        true -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_6c4e7b Std.Math.GreaterThan {}\n\tinstance(x: -262, y: -55) lessthanorequal_c5f2d1 Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c4e7b.left -> x_853326\n\tlessthanorequal_c5f2d1.left -> x_853326\n\tgreaterthan_6c4e7b.right -> 0\n\tlessthanorequal_c5f2d1.right -> 0\n\t\n\tinstance(x: -55, y: -173) greaterthan_6c4e7b2 Std.Math.GreaterThan {}\n\tinstance(x: -177, y: -55) lessthanorequal_c5f2d12 Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c4e7b2.left -> y_5390f5\n\tlessthanorequal_c5f2d12.left -> y_5390f5\n\tgreaterthan_6c4e7b2.right -> 0\n\tlessthanorequal_c5f2d12.right -> 0\n\t\n\tinstance(x: 34, y: -173) and_ea3e9a Std.Logic.And {}\n\tand_ea3e9a.left -> greaterthan_6c4e7b.result\n\tand_ea3e9a.right -> lessthanorequal_c5f2d12.result\n\t\n\tinstance(x: 34, y: -55) and_ea3e9a2 Std.Logic.And {}\n\tand_ea3e9a2.left -> greaterthan_6c4e7b2.result\n\tand_ea3e9a2.right -> lessthanorequal_c5f2d1.result\n\t\n\tinstance(x: 159, y: -173) or_d8d0e3 Std.Logic.And {}\n\tor_d8d0e3.left -> and_ea3e9a.result\n\tor_d8d0e3.right -> and_ea3e9a2.result\n\t\n\tor_d8d0e3.result -> output_3339a3\n\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -14) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 349, y: 12) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e2b4 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e2b4.left\n        input_ai -> equals_65e2b4.right\n        equals_65e2b4.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -384, y: 45) difference_1_ae root.Sets.Difference {}\n\tinstance(x: -218, y: 134) difference_2_ae root.Sets.Difference {}\n\tinstance(x: -27, y: 77) concat_ae root.List.Concat {}\n\n\tlist1_ai -> difference_1_ae.left\n\tlist2_ai -> difference_1_ae.right\n\tlist2_ai -> difference_2_ae.left\n\tlist1_ai -> difference_2_ae.right\n\n\tdifference_1_ae.difference -> concat_ae.left\n\tdifference_2_ae.difference -> concat_ae.right\n\tconcat_ae.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 34, y: 121) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 244, y: 114) greaterthan_4e0f6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 432, y: 123) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1496, y: -187) not_9fba8c root.Std_k98ojb.Logic.Not {}\n        2 -> for_8cb3f6.start\n        num_5c0677 -> for_8cb3f6.end\n        for_8cb3f6.item -> modulo_e19a62.value\n        num_5c0677 -> modulo_e19a62.divisor\n        modulo_e19a62.result -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_9a54bb\n        for_8cb3f6.done -> not_9fba8c.input\n        not_9fba8c.result -> output_c457b3\n        execute_b7b391 -> for_8cb3f6.reset\n        if_07b8c7.else -> for_8cb3f6.next\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_4e2c11 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -56, y: -172) lessthanorequal_ebf321 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_ebf321.left -> x_853326\n\tgreaterthan_4e2c11.right -> 0\n\tlessthanorequal_ebf321.right -> 0\n\tinstance(x: 34, y: -173) greaterthan_4e2c12 Std.Math.GreaterThan {\n\t}\n\tinstance(x: 50, y: -172) lessthanorequal_ebf322 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c12.left -> y_5390f5\n\tlessthanorequal_ebf322.left -> y_5390f5\n\tgreaterthan_4e2c12.right -> 0\n\tlessthanorequal_ebf322.right -> 0\n\tinstance(x: 118, y: -173) and_70a3d1 Std.Logic.And {\n\t}\n\tand_70a3d1.left -> greaterthan_4e2c11.result\n\tand_70a3d1.right -> lessthanorequal_ebf322.result\n\tinstance(x: 118, y: -107) and_70a3d2 Std.Logic.And {\n\t}\n\tand_70a3d2.left -> lessthanorequal_ebf321.result\n\tand_70a3d2.right -> greaterthan_4e2c12.result\n\tinstance(x: 159, y: -173) or_dfdfe6 Std.Logic.And {\n\t}\n\tor_dfdfe6.left -> and_70a3d1.result\n\tor_dfdfe6.right -> and_70a3d2.result\n\tor_dfdfe6.result -> output_3339a3\n\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -14) mod_4e8a95 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_4e8a95.value\n        11 -> mod_4e8a95.divisor\n        instance(x: 349, y: 24) if_f0d9a3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0 ? true : false\"\n        }\n        mod_4e8a95.result -> if_f0d9a3.mod\n        if_f0d9a3.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 248) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f4a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f4a5d.input\n        instance(x: 241, y: 209) equals_65e2b6 Logic.Equal {}\n        tolower_3f4a5d.output -> equals_65e2b6.left\n        input_ai -> equals_65e2b6.right\n        equals_65e2b6.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 300, y: 100) iteration_reduce root.Iteration.Reduce {\n            handler: Math.Mul\n        }\n        list_sort.result -> iteration_reduce.items\n        execute_19300c -> iteration_reduce.trigger\n\n        instance(x: 500, y: 100) query_filter root.Std_k98ojb.Query.Filter {\n            where: \"index == list.indexOf(it)\"\n        }\n        list_5fda54 -> query_filter.list\n        execute_19300c -> query_filter.trigger\n\n        query_filter.result -> iteration_reduce.items\n        iteration_reduce.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_ae root.Sets.Difference {}\n\tinstance(x: -357, y: 201) difference_2_ae root.Sets.Difference {}\n\tinstance(x: -128, y: 161) concat_ae root.List.Concat {}\n\n\tlist1_ai -> difference_1_ae.left\n\tlist2_ai -> difference_1_ae.right\n\tlist2_ai -> difference_2_ae.left\n\tlist1_ai -> difference_2_ae.right\n\n\tdifference_1_ae.difference -> concat_ae.list1\n\tdifference_2_ae.difference -> concat_ae.list2\n\tconcat_ae.result -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tlist_48148f -> slice_2.list\n\tslice_2.result -> concat.left\n\tslice_1.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 116, y: 93) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 114, y: 105) less_than_or_equal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 341, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -187) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_f11fda.value\n        num_5c0677 -> modulo_f11fda.divisor\n        modulo_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_9a54bb\n        if_07b8c7.then -> for_8cb3f6.next\n        execute_b7b391 -> for_8cb3f6.reset\n        for_8cb3f6.done -> if_e19a62.execute\n        true -> if_e19a62.predicate\n        if_e19a62.then -> output_c457b3\n        if_e19a62.else -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_6c1e7d Std.Math.GreaterThan {}\n\tinstance(x: -262, y: -55) lessthanorequal_c5fc8b Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c1e7d.left -> x_853326\n\tlessthanorequal_c5fc8b.left -> x_853326\n\tgreaterthan_6c1e7d.right -> 0\n\tlessthanorequal_c5fc8b.right -> 0\n\t\n\tinstance(x: -56, y: -173) greaterthan_6c1e7d2 Std.Math.GreaterThan {}\n\tinstance(x: -178, y: -55) lessthanorequal_c5fc8b2 Std.Math.LessThanOrEqual {}\n\t\n\tgreaterthan_6c1e7d2.left -> y_5390f5\n\tlessthanorequal_c5fc8b2.left -> y_5390f5\n\tgreaterthan_6c1e7d2.right -> 0\n\tlessthanorequal_c5fc8b2.right -> 0\n\t\n\tinstance(x: 34, y: -145) and_e4a3be Std.Logic.And {}\n\tand_e4a3be.left -> greaterthan_6c1e7d.result\n\tand_e4a3be.right -> lessthanorequal_c5fc8b2.result\n\t\n\tinstance(x: 34, y: -75) and_e4a3be2 Std.Logic.And {}\n\tand_e4a3be2.left -> greaterthan_6c1e7d2.result\n\tand_e4a3be2.right -> lessthanorequal_c5fc8b.result\n\t\n\tinstance(x: 105, y: -145) or_d5f9a0 Std.Logic.And {}\n\tor_d5f9a0.left -> and_e4a3be.result\n\tor_d5f9a0.right -> and_e4a3be2.result\n\t\n\tor_d5f9a0.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 210, y: -10) mod_9e8a5d root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_9e8a5d.value\n        11 -> mod_9e8a5d.divisor\n        instance(x: 420, y: 30) if_e19a62 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0 ? true : false\"\n        }\n        mod_9e8a5d.result -> if_e19a62.result\n        if_e19a62.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f4a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f4a5d.input\n        instance(x: 241, y: 209) equals_65e8b2 Logic.Equal {}\n        tolower_3f4a5d.output -> equals_65e8b2.left\n        input_ai -> equals_65e8b2.right\n        equals_65e8b2.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 100) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 300, y: 100) iteration_reduce root.Iteration.Reduce {\n            handler: Std_k98ojb.Math.Mul\n        }\n        list_sort.result -> iteration_reduce.items\n        execute_19300c -> iteration_reduce.trigger\n\n        instance(x: 500, y: 100) query_filter root.Std_k98ojb.Query.Filter {\n            where: \"index == list.indexOf(it)\"\n        }\n        list_5fda54 -> query_filter.list\n        execute_19300c -> query_filter.trigger\n\n        query_filter.result -> iteration_reduce.items\n        iteration_reduce.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -355, y: 121) difference_1_a5b7d3 root.Sets.Difference {}\n\tinstance(x: -355, y: 201) difference_2_4f6e1c root.Sets.Difference {}\n\tinstance(x: -104, y: 150) concat_ebafe48 root.List.Concat {}\n\n\tlist1_ai -> difference_1_a5b7d3.left\n\tlist2_ai -> difference_1_a5b7d3.right\n\tlist2_ai -> difference_2_4f6e1c.left\n\tlist1_ai -> difference_2_4f6e1c.right\n\n\tdifference_1_a5b7d3.difference -> concat_ebafe48.left\n\tdifference_2_4f6e1c.difference -> concat_ebafe48.right\n\tconcat_ebafe48.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 116, y: 93) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 246, y: 14) if_5e2c11 root.Std_k98ojb.Std.If {\n            expression: \"(num < 2)\"\n        }\n        num_5c0677 -> if_5e2c11.input\n        execute_b7b391 -> if_5e2c11.execute\n        if_5e2c11.then -> continue_9a54bb\n        if_5e2c11.value -> output_c457b3\n\n        instance(x: 432, y: -26) for_8cb3f6 root.Std_k98ojb.Std.For {\n        }\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {\n            from: \"2\"\n            to: \"(num - 1)\"\n        }\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        if_5e2c11.else -> for_8cb3f6.reset\n\n        instance(x: 714, y: -155) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {\n        }\n        for_8cb3f6.index -> lessthanorequal_f11fda.left\n        num_5c0677 -> lessthanorequal_f11fda.right\n\n        instance(x: 933, y: 25) modulo_f11fdb root.Std_k98ojb.Math.Modulo {\n        }\n        num_5c0677 -> modulo_f11fdb.value\n        for_8cb3f6.item -> modulo_f11fdb.divisor\n\n        instance(x: 1051, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {\n            expression: \"(modulo == 0)\"\n        }\n        modulo_f11fdb.result -> if_07b8c7.input\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.value -> output_c457b3\n\n        for_8cb3f6.done -> continue_9a54bb\n        true -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_6c7e21 Std.Math.GreaterThan {}\n\tinstance(x: -56, y: -173) lessthanorequal_2f4d5b Std.Math.LessThanOrEqual {}\n\tgreaterthan_6c7e21.left -> x_853326\n\tlessthanorequal_2f4d5b.left -> x_853326\n\tgreaterthan_6c7e21.right -> 0\n\tlessthanorequal_2f4d5b.right -> 0\n\tinstance(x: 34, y: -173) and_8a3513 Std.Logic.And {}\n\tand_8a3513.left -> greaterthan_6c7e21.result\n\tand_8a3513.right -> lessthanorequal_2f4d5b.result\n\n\tinstance(x: -140, y: -55) greaterthan_6c7e22 Std.Math.GreaterThan {}\n\tinstance(x: -56, y: -55) lessthanorequal_2f4d5c Std.Math.LessThanOrEqual {}\n\tgreaterthan_6c7e22.left -> y_5390f5\n\tlessthanorequal_2f4d5c.left -> y_5390f5\n\tgreaterthan_6c7e22.right -> 0\n\tlessthanorequal_2f4d5c.right -> 0\n\tinstance(x: 34, y: -55) and_8a3514 Std.Logic.And {}\n\tand_8a3514.left -> greaterthan_6c7e22.result\n\tand_8a3514.right -> lessthanorequal_2f4d5c.result\n\n\tinstance(x: 93, y: -173) not_70e0b1 Std.Logic.Not {}\n\tnot_70e0b1.input -> and_8a3513.result\n\tinstance(x: 93, y: -55) not_70e0b2 Std.Logic.Not {}\n\tnot_70e0b2.input -> and_8a3514.result\n\n\tinstance(x: 159, y: -114) and_8a3515 Std.Logic.And {}\n\tand_8a3515.left -> not_70e0b1.result\n\tand_8a3515.right -> and_8a3514.result\n\tand_8a3515.result -> output_3339a3\n\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -13) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 349, y: 21) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e2b4 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e2b4.left\n        input_ai -> equals_65e2b4.right\n        equals_65e2b4.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -384, y: 45) difference_1_ae root.Sets.Difference {}\n\tinstance(x: -222, y: 121) difference_2_ae root.Sets.Difference {}\n\tinstance(x: -31, y: 77) concat_ae root.List.Concat {}\n\n\tlist1_ai -> difference_1_ae.left\n\tlist2_ai -> difference_1_ae.right\n\tlist2_ai -> difference_2_ae.left\n\tlist1_ai -> difference_2_ae.right\n\n\tdifference_1_ae.difference -> concat_ae.left\n\tdifference_2_ae.difference -> concat_ae.right\n\tconcat_ae.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 121, y: 93) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 244, y: 14) greaterthan_5e2f6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 432, y: -34) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_f11fd9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1496, y: -187) not_9fba8c root.Std_k98ojb.Logic.Not {}\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        num_5c0677 -> greaterthan_5e2f6c.left\n        1 -> greaterthan_5e2f6c.right\n        greaterthan_5e2f6c.result -> if_07b8c7.predicate\n        execute_b7b391 -> if_07b8c7.execute\n        if_07b8c7.then -> for_8cb3f6.reset\n        for_8cb3f6.item -> modulo_f11fd9.value\n        num_5c0677 -> modulo_f11fd9.divisor\n        modulo_f11fd9.result -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_9fba8c.input\n        not_9fba8c.result -> if_07b8c7.value\n        for_8cb3f6.done -> continue_9a54bb\n        if_07b8c7.else -> output_c457b3\n        if_07b8c7.then -> for_8cb3f6.next\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -179, y: -173) greaterthan_68d1b7 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -281, y: -62) lessthanorequal_2f4e6c Std.Math.LessThanOrEqual {\n\t}\n\tinstance(x: -98, y: -174) and_e3a95b Std.Logic.And {\n\t}\n\tgreaterthan_68d1b7.left -> x_853326\n\tlessthanorequal_2f4e6c.left -> x_853326\n\tgreaterthan_68d1b7.right -> 0\n\tlessthanorequal_2f4e6c.right -> 0\n\tand_e3a95b.left -> greaterthan_68d1b7.result\n\tinstance(x: -179, y: -8) greaterthan_y_5390f5 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -281, y: 103) lessthanorequal_y_5390f5 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_y_5390f5.left -> y_5390f5\n\tlessthanorequal_y_5390f5.left -> y_5390f5\n\tgreaterthan_y_5390f5.right -> 0\n\tlessthanorequal_y_5390f5.right -> 0\n\tinstance(x: -98, y: -8) and_y_e3a95b Std.Logic.And {\n\t}\n\tand_y_e3a95b.left -> greaterthan_y_5390f5.result\n\tand_y_e3a95b.right -> lessthanorequal_y_5390f5.result\n\tinstance(x: 46, y: -173) not_x_f6c9d4 Std.Logic.Not {\n\t}\n\tnot_x_f6c9d4.input -> and_e3a95b.result\n\tinstance(x: 46, y: -8) not_y_f6c9d4 Std.Logic.Not {\n\t}\n\tnot_y_f6c9d4.input -> and_y_e3a95b.result\n\tinstance(x: 159, y: -219) and_output_3339a3 Std.Logic.And {\n\t}\n\tand_output_3339a3.left -> not_x_f6c9d4.result\n\tand_output_3339a3.right -> and_y_e3a95b.result\n\tand_output_3339a3.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 129, y: -12) mod_3e8a95 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_3e8a95.value\n        11 -> mod_3e8a95.divisor\n        instance(x: 340, y: 23) if_f0d1c2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0 ? true : false\"\n        }\n        mod_3e8a95.result -> if_f0d1c2.result\n        if_f0d1c2.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -104, y: 246) tolower_f4a5f9 Std.Strings.ToLower {}\n        input_ai -> tolower_f4a5f9.input\n        instance(x: 235, y: 245) equals_3c0e46 Logic.Equal {}\n        tolower_f4a5f9.output -> equals_3c0e46.left\n        input_ai -> equals_3c0e46.right\n        equals_3c0e46.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 340, y: -120) sort_7d9f3a Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> sort_7d9f3a.list\n        execute_19300c -> sort_7d9f3a.trigger\n\n        instance(x: 340, y: -40) distinct_1e4c0c Std_k98ojb.Iteration.Reduce {\n            handler: \"if (acc.indexOf(it) === -1) { acc.push(it); } return acc;\"\n        }\n        sort_7d9f3a.sorted -> distinct_1e4c0c.items\n        execute_19300c -> distinct_1e4c0c.trigger\n\n        instance(x: 340, y: 40) product_e53bfb Std_k98ojb.Iteration.Reduce {\n            handler: \"return acc * it;\"\n        }\n        distinct_1e4c0c.output_list -> product_e53bfb.items\n        execute_19300c -> product_e53bfb.trigger\n        instance(x: 340, y: -200) init_f3a5d6 Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        init_f3a5d6.result -> product_e53bfb.context\n\n        product_e53bfb.output -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_eb45 root.Sets.Difference {}\n.instance(x: -357, y: 39) difference_2_5e6f root.Sets.Difference {}\n\tinstance(x: -102, y: 77) concat_ea47 root.List.Concat {}\n\n\tlist1_ai -> difference_1_eb45.left\n\tlist2_ai -> difference_1_eb45.right\n\tlist2_ai -> difference_2_5e6f.left\n\tlist1_ai -> difference_2_5e6f.right\n\tdifference_1_eb45.difference -> concat_ea47.list1\n\tdifference_2_5e6f.difference -> concat_ea47.list2\n\tconcat_ea47.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 121, y: -103) slice_5e2b7d root.Std_k98ojb.List.Slice {}\n\tinstance(x: 336, y: -114) length_f0f4a9 root.Std_k98ojb.List.Length {}\n\tinstance(x: 245, y: 55) modulo_dfdcab root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 444, y: -103) concat_1c bee5 root.Std_k98ojb.List.Concat {}\n\tlist_48148f -> slice_5e2b7d.list\n\tn_68068c -> modulo_dfdcab.value\n\tlength_f0f4a9.result -> modulo_dfdcab.divisor\n\tlist_48148f -> length_f0f4a9.list\n\tmodulo_dfdcab.result -> slice_5e2b7d.start\n\tslice_5e2b7d.end -> concat_1c_bee5.left\n\tlist_48148f -> slice_5e2b7d.list\n\t-1 -> slice_5e2b7d.end\n\tslice_5e2b7d.result -> concat_1c_bee5.right\n\t0 -> slice_5e2b7d.start\n\tconcat_1c_bee5.result -> output_823209\n\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 116, y: 94) iteration_reduce_eb5e7d Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_eb5e7d.initial\n\tlist_2c62ab -> iteration_reduce_eb5e7d.items\n\titeration_reduce_eb5e7d.result -> sum_2a848f\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 244, y: 15) greaterthan_5e2f4c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 432, y: 17) lessthanorequal_f6a5d3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 629, y: -13) modulo_e9e1f7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 821, y: -54) not_2d8c4a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1013, y: -120) and_d5d5c6 root.Std_k98ojb.Logic.And {}\n        instance(x: 246, y: -221) for_e9f7e1 root.Std_k98ojb.Std.For {}\n        instance(x: 1182, y: -305) if_19a93b root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> greaterthan_5e2f4c.left\n        1 -> greaterthan_5e2f4c.right\n        greaterthan_5e2f4c.result -> for_e9f7e1.trigger\n\n        for_e9f7e1.index -> lessthanorequal_f6a5d3.left\n        num_5c0677 -> lessthanorequal_f6a5d3.right\n        lessthanorequal_f6a5d3.result -> if_19a93b.predicate\n\n        for_e9f7e1.index -> modulo_e9e1f7.value\n        num_5c0677 -> modulo_e9e1f7.divisor\n        modulo_e9e1f7.result -> not_2d8c4a.input\n\n        not_2d8c4a.result -> and_d5d5c6.left\n        for_e9f7e1.index -> and_d5d5c6.right\n        and_d5d5c6.result -> if_19a93b.execute\n\n        execute_b7b391 -> for_e9f7e1.reset\n        if_19a93b.then -> for_e9f7e1.next\n        if_19a93b.else -> continue_9a54bb\n        for_e9f7e1.done -> continue_9a54bb\n\n        greaterthan_5e2f4c.result -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -179, y: -63) greaterthan_4e2c11 Std.Math.GreaterThan {}\n\tinstance(x: -255, y: 45) lessthanorequal_71f3d6 Std.Math.LessThanOrEqual {}\n.instance(x: -34, y: 118) multiply_8a51b5 Std.Math.Mul {\n\t\tfirst: 0\n\t\tsecond: 0\n\t}\n\tinstance(x: 139, y: -1) and_2a3354 Std.Logic.And {}\n\tgreaterthan_4e2c11.left -> x_853326\n\tgreaterthan_4e2c11.right -> 0\n\tlessthanorequal_71f3d6.left -> y_5390f5\n\tlessthanorequal_71f3d6.right -> 0\n\tand_2a3354.input1 -> greaterthan_4e2c11.result\n\tinstance(x: 23, y: -193) lessthan_1a8e46 Std.Math.LessThan {}\n\tlessthan_1a8e46.left -> x_853326\n\tlessthan_1a8e46.right -> 0\n(instance(x: 100, y: 15) greaterthan_4e2c115 Std.Math.GreaterThan {})\n\tgreaterthan_4e2c115.left -> y_5390f5\n\tgreaterthan_4e2c115.right -> 0\n\tand_2a3354.input2 -> lessthan_1a8e46.result\n\tinstance(x: -56, y: 173) or_5f3b7d Std.Logic.Or {}\n\tor_5f3b7.input1 -> and_2a3354.result\n\tinstance(x: -179, y: 12) lessthan_71f3d61 Std.Math.LessThan {}\n\tlessthan_71f3d61.left -> x_853326\n\tlessthan_71f3d61.right -> 0\n(instance(x: 139, y: 118) greaterthan_4e2c111 Std.Math.GreaterThan {})\n\tgreaterthan_4e2c111.left -> y_5390f5\n\tgreaterthan_4e2c111.right -> 0\n\tinstance(x: -34, y: 173) and_2a33541 Std.Logic.And {}\n\tand_2a33541.input1 -> lessthan_71f3d61.result\n\tand_2a33541.input2 -> greaterthan_4e2c111.result\n\tor_5f3b7d.input2 -> and_2a33541.result\n\tor_5f3b7d.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 234, y: 14) mod_8a9e4b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_8a9e4b.value\n        11 -> mod_8a9e4b.divisor\n        instance(x: 442, y: -12) if_f0b5d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0 ? true : false\"\n        }\n        mod_8a9e4b.result -> if_f0b5d7.result\n        if_f0b5d7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -110, y: 249) Strings_Replace_6b7e95 root.Std.IfExpression {}\n\tinput_ai -> Strings_Replace_6b7e95.input\n\tsearch_ai -> Strings_Replace_6b7e95.search\n\treplace_ai -> Strings_Replace_6b7e95.replace\n\tStrings_Replace_6b7e95.output -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -221, y: 212) tolower_f9f4a3 Std.Strings.ToLower {}\n        input_ai -> tolower_f9f4a3.input\n        instance(x: 121, y: 210) equals_2d5b95 Logic.Equal {}\n        tolower_f9f4a3.output -> equals_2d5b95.left\n        input_ai -> equals_2d5b95.right\n        equals_2d5b95.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 137, y: -139) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 349, y: -32) iteration_reduce root.Std_k98ojb.Iteration.Reduce {\n            handler: Math.Mul\n        }\n        list_sort.result -> iteration_reduce.items\n        execute_19300c -> iteration_reduce.trigger\n\n        instance(x: 661, y: 27) sets_difference root.Std_k98ojb.Sets.Difference {\n        }\n        list_5fda54 -> sets_difference.left\n        instance(x: 441, y: -104) list_empty root.Std_k98ojb.List.Empty {\n        }\n        list_empty.list -> sets_difference.right\n\n        instance(x: 137, y: 116) iteration_find root.Std_k98ojb.Iteration.Find {\n            predicate: Logic.NotEqual\n        }\n        sets_difference.difference -> iteration_find.items\n        execute_19300c -> iteration_find.trigger\n\n        instance(x: 349, y: 182) math_expression root.Std_k98ojb.Math.Expression {\n            expression: \"result\"\n        }\n        iteration_reduce.result -> math_expression.result\n        iteration_find.item -> math_expression.it\n        math_expression.result -> output_cffcc2\n        execute_19300c -> math_expression.trigger\n        math_expression.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -428, y: 44) difference_1_eb root.Std_k98ojb.Sets.Difference {}\n\tinstance(x: -221, y: 117) difference_2_3e root.Std_k98ojb.Sets.Difference {}\n\tinstance(x: -34, y: 75) concat_f4 root.Std_k98ojb.List.Concat {}\n\n\tlist1_ai -> difference_1_eb.left\n\tlist2_ai -> difference_1_eb.right\n\tlist2_ai -> difference_2_3e.left\n\tlist1_ai -> difference_2_3e.right\n\n\tdifference_1_eb.difference -> concat_f4.left\n\tdifference_2_3e.difference -> concat_f4.right\n\tconcat_f4.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 294, y: -19) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) length_875ddb root.Std_k98ojb.List.Length {}\n        instance(x: 400, y: -100) modulo_5c4634 root.Math.Modulo {}\n        instance(x: 500, y: -150) slice_2_14921d root.Std_k98ojb.List.Slice {}\n\n        list_48148f -> length_875ddb.list\n        n_68068c -> modulo_5c4634.value\n        length_875ddb.result -> modulo_5c4634.divisor\n        modulo_5c4634.result -> slice_9ab286.start\n        list_48148f -> slice_9ab286.list\n        slice_9ab286.result -> concat_9b38cc.left\n        list_48148f -> slice_2_14921d.list\n        0 -> slice_2_14921d.start\n        modulo_5c4634.result -> slice_2_14921d.end\n        slice_2_14921d.result -> concat_9b38cc.right\n        concat_9b38cc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 116, y: 94) iteration_reduce_f9e5b6 Iteration.Reduce {\n            handler: lambda(acc, current) { acc + current }\n        }\n        list_2c62ab -> iteration_reduce_f9e5b6.items\n        iteration_reduce_f9e5b6.output_list -> sum_2a848f\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 137, y: -140) if_5e0f6c root.Std_k98ojb.Std.If {\n            expression: \"num <= 1\"\n        }\n        num_5c0677 -> if_5e0f6c.input\n        execute_b7b391 -> if_5e0f6c.execute\n        instance(x: 432, y: -148) for_30a4d9 root.Std_k98ojb.Std.For {\n            items: \"List.GenerateRange(2, num - 1)\"\n        }\n        instance(x: 756, y: -155) modulo_e0e3c5 root.Std_k98ojb.Math.Modulo {\n            value: \"num\"\n            divisor: \"for_30a4d9.item\"\n        }\n        for_30a4d9.onItem -> if_5e0f6c.then\n        instance(x: 1001, y: -151) if_b8fe64 root.Std_k98ojb.Std.If {\n            expression: \"modulo_e0e3c5.result == 0\"\n        }\n        modulo_e0e3c5.result -> if_b8fe64.input\n        for_30a4d9.onItem -> if_b8fe64.execute\n        if_b8fe64.then -> continue_9a54bb\n        for_30a4d9.done -> continue_9a54bb\n        execute_b7b391 -> for_30a4d9.reset\n        if_b8fe64.else -> for_30a4d9.next\n        if_5e0f6c.value -> output_c457b3\n        instance(x: 275, y: -63) not_d1cc59 root.Std_k98ojb.Logic.Not {\n            input: \"if_5e0f6c.value\"\n        }\n        not_d1cc59.result -> if_b8fe64.predicate\n        if_5e0f6c.else -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_4e2c11 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -56, y: -173) lessthanorequal_ebfccb Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_ebfccb.left -> x_853326\n\tgreaterthan_4e2c11.right -> y_5390f5\n\tlessthanorequal_ebfccb.right -> y_5390f5\n\tinstance(x: 34, y: -173) and_71f3b7 Std.Logic.And {\n\t}\n\tand_71f3b7.left -> greaterthan_4e2c11.result\n\tand_71f3b7.right -> lessthanorequal_ebfccb.result\n\tinstance(x: 108, y: -107) greaterthan_9d8e75 Std.Math.GreaterThan {\n\t}\n\tinstance(x: 24, y: -107) lessthanorequal_ba94c2 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_9d8e75.left -> y_5390f5\n\tlessthanorequal_ba94c2.left -> y_5390f5\n\tgreaterthan_9d8e75.right -> x_853326\n\tlessthanorequal_ba94c2.right -> x_853326\n\tinstance(x: 158, y: -107) and_dfd552 Std.Logic.And {\n\t}\n\tand_dfd552.left -> greaterthan_9d8e75.result\n\tand_dfd552.right -> lessthanorequal_ba94c2.result\n\tinstance(x: 92, y: -44) or_f4f5b3 Std.Logic.Or {\n\t}\n\tor_f4f5b3.left -> and_71f3b7.result\n\tor_f4f5b3.right -> and_dfd552.result\n\toutput_3339a3 -> or_f4f5b3.result\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 210, y: -10) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 410, y: 20) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e2b4 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e2b4.left\n        input_ai -> equals_65e2b4.right\n        equals_65e2b4.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_a6f7b3 Std.Sets.Difference {}\n\tinstance(x: -357, y: 38) difference_2_5c4e16 Std.Sets.Difference {}\n\tinstance(x: -128, y: 77) concat_ebafe48 Std.List.Concat {}\n\n\tlist1_ai -> difference_1_a6f7b3.left\n\tlist2_ai -> difference_1_a6f7b3.right\n\tlist2_ai -> difference_2_5c4e16.left\n\tlist1_ai -> difference_2_5c4e16.right\n\n\tdifference_1_a6f7b3.difference -> concat_ebafe48.left\n\tdifference_2_5c4e16.difference -> concat_ebafe48.right\n\tconcat_ebafe48.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 121, y: 94) iteration_reduce_f9e7d5 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e7d5.initial\n\tlist_2c62ab -> iteration_reduce_f9e7d5.items\n\titeration_reduce_f9e7d5.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 142, y: 114) greaterthan_4e0f6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 351, y: 115) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_d5a05e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1496, y: -187) if_e19a62 root.Std_k98ojb.Std.If {}\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        num_5c0677 -> greaterthan_4e0f6c.left\n        1 -> greaterthan_4e0f6c.right\n        greaterthan_4e0f6c.result -> if_07b8c7.predicate\n        execute_b7b391 -> if_07b8c7.execute\n        if_07b8c7.then -> for_8cb3f6.reset\n        for_8cb3f6.item -> modulo_d5a05e.value\n        for_8cb3f6.item -> modulo_d5a05e.divisor\n        modulo_d5a05e.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> output_c457b3\n        for_8cb3f6.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -178, y: -139) greaterthan_64c1b7 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -96, y: -54) lessthanorequal_2e2f4d Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_64c1b7.left -> x_853326\n\tlessthanorequal_2e2f4d.left -> x_853326\n\tgreaterthan_64c1b7.right -> 0\n\tlessthanorequal_2e2f4d.right -> 0\n\tinstance(x: 44, y: -188) and_6a95fc Std.Logic.And {\n\t}\n\tand_6a95fc.left -> greaterthan_64c1b7.result\n\tinstance(x: -260, y: 12) lessthan_3e8f11 Std.Math.LessThan {\n\t}\n\tlessthan_3e8f11.left -> y_5390f5\n\tlessthan_3e8f11.right -> 0\n\tand_6a95fc.right -> lessthan_3e8f11.result\n\tinstance(x: 135, y: -63) or_79d9b1 Std.Logic.Or {\n\t}\n\tor_79d9b1.left -> and_6a95fc.result\n\tinstance(x: -52, y: 93) and_4c4e64 Std.Logic.And {\n\t}\n\tand_4c4e64.left -> lessthanorequal_2e2f4d.result\n\tinstance(x: 191, y: 50) greaterthan_9e0a5b Std.Math.GreaterThan {\n\t}\n\tgreaterthan_9e0a5b.left -> y_5390f5\n\tgreaterthan_9e0a5b.right -> 0\n\tand_4c4e64.right -> greaterthan_9e0a5b.result\n\tor_79d9b1.right -> and_4c4e64.result\n\toutput_3339a3 -> or_79d9b1.result\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 155, y: -12) mod_3a1e8d root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_3a1e8d.value\n        11 -> mod_3a1e8d.divisor\n        instance(x: 349, y: 23) if_f0e7a5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0 ? true : false\"\n        }\n        mod_3a1e8d.result -> if_f0e7a5.mod\n        if_f0e7a5.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -137, y: 211) tolower_f5a4f7 Std.Strings.ToLower {}\n        input_ai -> tolower_f5a4f7.input\n        instance(x: 174, y: 210) equals_2e0d59 Logic.Equal {}\n        tolower_f5a4f7.output -> equals_2e0d59.left\n        input_ai -> equals_2e0d59.right\n        equals_2e0d59.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 121, y: 122) sort_f4a3e5 Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> sort_f4a3e5.list\n        execute_19300c -> sort_f4a3e5.trigger\n\n        instance(x: 437, y: 126) distinct_31d0b8 Iteration.Reduce {\n            handler: Std_k98ojb.List.Contains\n        }\n        sort_f4a3e5.result -> distinct_31d0b8.items\n\n        instance(x: 756, y: 122) product_e48f93 Iteration.Reduce {\n            handler: Std_k98ojb.Math.Mul\n        }\n        distinct_31d0b8.output_list -> product_e48f93.items\n        execute_19300c -> product_e48f93.trigger\n\n        product_e48f93.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -355, y: 121) difference_1_eb3 root.Sets.Difference {}\n\tinstance(x: -355, y: 68) difference_2_6c9 root.Sets.Difference {}\n\tinstance(x: -227, y: 100) concat_0e5 root.List.Concat {}\n\n\tlist1_ai -> difference_1_eb3.left\n\tlist2_ai -> difference_1_eb3.right\n\tlist2_ai -> difference_2_6c9.left\n\tlist1_ai -> difference_2_6c9.right\n\n\tdifference_1_eb3.difference -> concat_0e5.left\n\tdifference_2_6c9.difference -> concat_0e5.right\n\tconcat_0e5.result -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 121, y: -154) slice_9f4e6a root.Std_k98ojb.List.Slice {}\n\tinstance(x: 246, y: -140) length_e82d1c root.Std_k98ojb.List.Length {}\n\tinstance(x: 375, y: -141) modulo_f46d95 root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 523, y: -137) slice_309e3a root.Std_k98ojb.List.Slice {}\n\tinstance(x: 675, y: -106) concat_d5c1f6 root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> length_e82d1c.list\n\tn_68068c -> modulo_f46d95.value\n\tlength_e82d1c.result -> modulo_f46d95.divisor\n\tmodulo_f46d95.result -> slice_9f4e6a.end\n\tlist_48148f -> slice_9f4e6a.list\n\tslice_9f4e6a.start -> slice_309e3a.start\n\t-1 -> slice_309e3a.end\n\tlist_48148f -> slice_309e3a.list\n\tslice_9f4e6a.result -> concat_d5c1f6.left\n\tslice_309e3a.result -> concat_d5c1f6.right\n\tconcat_d5c1f6.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 12, y: 121) iteration_reduce_eb4e7d Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\tsetter(x: -112, y: -67, name: \"setter_41e4ad\") setter_41e4ad = 0\n\titeration_reduce_eb4e7d.output_list -> sum_2a848f\n\tlist_2c62ab -> iteration_reduce_eb4e7d.items\n\tsetter_41e4ad.new_value -> iteration_reduce_eb4e7d.context\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 146, y: 135) if_8e2c95 root.Std_k98ojb.Std.If {\n            input: num_5c0677\n        }\n        instance(x: 342, y: 142) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 557, y: 25) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        1 -> lessthanorequal_f11fda.second\n        num_5c0677 -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_8e2c95.predicate\n        execute_b7b391 -> for_8cb3f6.reset\n        for_8cb3f6.item -> modulo_e19a62.value\n        0 -> modulo_e19a62.divisor\n        modulo_e19a62.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_9a54bb\n        if_8e2c95.then -> output_c457b3\n        if_8e2c95.else -> for_8cb3f6.trigger\n        for_8cb3f6.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -240, y: -163) greaterthan_4e2c11 Std.Math.GreaterThan {}\n\tinstance(x: -82, y: -174) lessthanorequal_68f404 Std.Math.LessThanOrEqual {}\n\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_68f404.left -> x_853326\n\tgreaterthan_4e2c11.right -> 0\n\tlessthanorequal_68f404.right -> 0\n\n\tinstance(x: 34, y: -144) and_8d9b7a Std.Logic.And {}\n\tand_8d9b7a.left -> greaterthan_4e2c11.result\n\tand_8d9b7a.right -> lessthanorequal_68f404.result\n\n\tinstance(x: -240, y: 24) greaterthan_5c4111 Std.Math.GreaterThan {}\n.instance(x: -82, y: 35) lessthanorequal_3c4e05 Std.Math.LessThanOrEqual {}\n\n\tgreaterthan_5c4111.left -> y_5390f5\n\tlessthanorequal_3c4e05.left -> y_5390f5\n\tgreaterthan_5c4111.right -> 0\n\tlessthanorequal_3c4e05.right -> 0\n\n\tinstance(x: 34, y: 53) and_9d6b22 Std.Logic.And {}\n\tand_9d6b22.left -> greaterthan_5c4111.result\n\tand_9d6b22.right -> lessthanorequal_3c4e05.result\n\n\tinstance(x: 100, y: -92) or_2f1a8d Std.Logic.Or {}\n\tor_2f1a8d.left -> and_8d9b7a.result\n\tor_2f1a8d.right -> and_9d6b22.result\n\toutput_3339a3 -> or_2f1a8d.result\n\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 240, y: -17) mod_4e8a3b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_4e8a3b.value\n        11 -> mod_4e8a3b.divisor\n        instance(x: 432, y: 25) if_f0fe1d root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0 ? true : false\"\n        }\n        mod_4e8a3b.result -> if_f0fe1d.mod\n        if_f0fe1d.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -137, y: 249) Strings_Replace_7b9f3c root.Std_k98ojb.Strings.Replace {}\n\tinput_ai -> Strings_Replace_7b9f3c.input\n\tsearch_ai -> Strings_Replace_7b9f3c.search\n\treplace_ai -> Strings_Replace_7b9f3c.replace\n\tStrings_Replace_7b9f3c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -102, y: 216) tolower_f5a2f7 Std.Strings.ToLower {}\n        input_ai -> tolower_f5a2f7.input\n        instance(x: 173, y: 217) equals_73c073 Logic.Equal {}\n        tolower_f5a2f7.output -> equals_73c073.left\n        input_ai -> equals_73c073.right\n        equals_73c073.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 137, y: -139) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 340, y: -34) iteration_reduce root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial: 1\n        }\n        list_sort.result -> iteration_reduce.items\n        list_sort.done -> iteration_reduce.trigger\n\n        iteration_reduce.result -> output_cffcc2\n        iteration_reduce.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -406, y: 44) difference_1_eb31 root.Sets.Difference {}\n\tinstance(x: -222, y: 122) difference_2_4e90 root.Sets.Difference {}\n\tinstance(x: -41, y: 77) concat_ba75 root.List.Concat {}\n\n\tlist1_ai -> difference_1_eb31.left\n\tlist2_ai -> difference_1_eb31.right\n\tlist2_ai -> difference_2_4e90.left\n\tlist1_ai -> difference_2_4e90.right\n\n\tdifference_1_eb31.difference -> concat_ba75.left\n\tdifference_2_4e90.difference -> concat_ba75.right\n\tconcat_ba75.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 294, y: -19) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) length_875ddb root.Std_k98ojb.List.Length {}\n        instance(x: 400, y: -100) modulo_5c4634 root.Math_k98ojb.Math.Modulo {}\n\n        list_48148f -> slice_9ab286.list\n        n_68068c -> modulo_5c4634.value\n        length_875ddb.result -> modulo_5c4634.divisor\n        list_48148f -> length_875ddb.list\n        modulo_5c4634.result -> slice_9ab286.start\n        length_875ddb.result -> slice_9ab286.end\n        -1 -> slice_9ab286.end\n        slice_9ab286.result -> concat_9b38cc.right\n        list_48148f -> concat_9b38cc.left\n        slice_9ab286.start -> slice_9ab286.start\n        concat_9b38cc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 34, y: 121) iteration_reduce_f9e7d5 Iteration.Reduce {\n            handler: lambda((acc, current) => acc + current)\n        }\n        list_2c62ab -> iteration_reduce_f9e7d5.items\n        iteration_reduce_f9e7d5.output_list -> sum_2a848f\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 234, y: 14) if_4e8c11 root.Std_k98ojb.Std.If {\n            expression: \"num <= 1\"\n        }\n        num_5c0677 -> if_4e8c11.input\n        execute_b7b391 -> if_4e8c11.execute\n        if_4e8c11.then -> continue_9a54bb\n        if_4e8c11.value -> output_c457b3\n\n        instance(x: 437, y: -34) for_6c0d45 root.Std_k98ojb.Std.For {\n            items: \"List.GenerateRange(2, num - 1)\"\n        }\n        execute_b7b391 -> for_6c0d45.reset\n        if_4e8c11.else -> for_6c0d45.trigger\n\n        instance(x: 631, y: -123) modulo_e19a62 root.Std_k98ojb.Math.Modulo {\n            expression: \"num % i\"\n        }\n        num_5c0677 -> modulo_e19a62.value\n        for_6c0d45.item -> modulo_e19a62.divisor\n\n        instance(x: 822, y: -192) if_07b8c7 root.Std_k98ojb.Std.If {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.input\n        for_6c0d45.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.value -> output_c457b3\n\n        instance(x: 1004, y: -43) if_e19a62 root.Std_k98ojb.Std.If {\n            expression: \"not found\"\n        }\n        for_6c0d45.done -> if_e19a62.execute\n        if_e19a62.then -> continue_9a54bb\n        true -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_4e2c11 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -56, y: -173) lessthanorequal_ebfccd Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_ebfccd.left -> x_853326\n\tgreaterthan_4e2c11.right -> y_5390f5\n\tlessthanorequal_ebfccd.right -> y_5390f5\n\tinstance(x: 34, y: -173) and_71f3d7 Std.Logic.And {\n\t}\n\tand_71f3d7.left -> greaterthan_4e2c11.result\n\tand_71f3d7.right -> lessthanorequal_ebfccd.result\n\tinstance(x: 108, y: -107) greaterthan_9e1a5b Std.Math.GreaterThan {\n\t}\n\tinstance(x: 24, y: -107) lessthanorequal_b8c bee Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_9e1a5b.left -> y_5390f5\n\tlessthanorequal_b8cbee.left -> y_5390f5\n\tgreaterthan_9e1a5b.right -> x_853326\n\tlessthanorequal_b8cbee.right -> x_853326\n\tinstance(x: 76, y: -107) and_dfd552 Std.Logic.And {\n\t}\n\tand_dfd552.left -> greaterthan_9e1a5b.result\n\tand_dfd552.right -> lessthanorequal_b8cbee.result\n\tinstance(x: 93, y: -173) or_f4f2cd Std.Logic.Or {\n\t}\n\tor_f4f2cd.left -> and_71f3d7.result\n\tor_f4f2cd.right -> and_dfd552.result\n\toutput_3339a3 -> or_f4f2cd.result\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 210, y: -10) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 410, y: 20) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e4b2 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e4b2.left\n        input_ai -> equals_65e4b2.right\n        equals_65e4b2.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_a6f7b3 Std.Sets.Difference {}\n\tinstance(x: -357, y: 206) difference_2_5c9e64 Std.Sets.Difference {}\n\tinstance(x: -128, y: 163) concat_ebafe48 Std.List.Concat {}\n\n\tlist1_ai -> difference_1_a6f7b3.left\n\tlist2_ai -> difference_1_a6f7b3.right\n\tlist2_ai -> difference_2_5c9e64.left\n\tlist1_ai -> difference_2_5c9e64.right\n\n\tdifference_1_a6f7b3.difference -> concat_ebafe48.left\n\tdifference_2_5c9e64.difference -> concat_ebafe48.right\n\tconcat_ebafe48.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 121, y: 94) iteration_reduce_f9e7d5 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e7d5.initial\n\tlist_2c62ab -> iteration_reduce_f9e7d5.items\n\titeration_reduce_f9e7d5.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 142, y: 114) greaterthan_4e0f6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 353, y: 123) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_f11fd9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1496, y: -187) not_9fba8c root.Std_k98ojb.Logic.Not {}\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        num_5c0677 -> greaterthan_4e0f6c.left\n        1 -> greaterthan_4e0f6c.right\n        greaterthan_4e0f6c.result -> if_07b8c7.predicate\n        execute_b7b391 -> if_07b8c7.execute\n        if_07b8c7.then -> for_8cb3f6.reset\n        for_8cb3f6.item -> modulo_f11fd9.value\n        num_5c0677 -> modulo_f11fd9.divisor\n        modulo_f11fd9.result -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_9fba8c.input\n        not_9fba8c.result -> if_07b8c7.value\n        for_8cb3f6.done -> continue_9a54bb\n        if_07b8c7.else -> continue_9a54bb\n        if_07b8c7.then -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -178, y: -139) greaterthan_51ed41 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -56, y: -161) lessthanorequal_6c0f5d Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_51ed41.left -> x_853326\n\tlessthanorequal_6c0f5d.left -> x_853326\n\tgreaterthan_51ed41.right -> 0\n\tlessthanorequal_6c0f5d.right -> 0\n\tinstance(x: 33, y: -104) and_8e4b1a Std.Logic.And {\n\t}\n\tgreaterthan_51ed41.result -> and_8e4b1a.left\n\tlessthanorequal_6c0f5d.result -> and_8e4b1a.right\n\tinstance(x: 116, y: -141) greaterthan_70e2fc Std.Math.GreaterThan {\n\t}\n\tinstance(x: 194, y: -163) lessthanorequal_3c9e52 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_70e2fc.left -> y_5390f5\n\tlessthanorequal_3c9e52.left -> y_5390f5\n\tgreaterthan_70e2fc.right -> 0\n\tlessthanorequal_3c9e52.right -> 0\n\tinstance(x: 252, y: -105) and_47d8b6 Std.Logic.And {\n\t}\n\tgreaterthan_70e2fc.result -> and_47d8b6.left\n\tlessthanorequal_3c9e52.result -> and_47d8b6.right\n\tinstance(x: 87, y: -48) and_4f2e75 Std.Logic.And {\n\t}\n\tand_8e4b1a.result -> and_4f2e75.left\n\tand_47d8b6.result -> and_4f2e75.right\n\tand_4f2e75.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -56) math_modulo_9e8a3d root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> math_modulo_9e8a3d.value\n        11 -> math_modulo_9e8a3d.divisor\n        instance(x: 328, y: -14) logic_equal_f0e1ab root.Std_k98ojb.Logic.Equal {}\n        0 -> logic_equal_f0e1ab.left\n        math_modulo_9e8a3d.result -> logic_equal_f0e1ab.right\n        logic_equal_f0e1ab.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -221, y: 258) tolower_f9f4a3 Std.Strings.ToLower {}\n        input_ai -> tolower_f9f4a3.input\n        instance(x: 241, y: 211) equals_2e0b6d Logic.Equal {}\n        tolower_f9f4a3.output -> equals_2e0b6d.left\n        input_ai -> equals_2e0b6d.right\n        equals_2e0b6d.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 121, y: 155) sort_f4a3e5 Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> sort_f4a3e5.list\n        execute_19300c -> sort_f4a3e5.trigger\n\n        instance(x: 444, y: 167) distinct_1d7849 Iteration.Reduce {\n            handler: Std_k98ojb.List.Contains\n        }\n        sort_f4a3e5.result -> distinct_1d7849.items\n\n        instance(x: 721, y: -14) product_e48c16 Iteration.Reduce {\n            handler: Std_k98ojb.Math.Mul\n        }\n        distinct_1d7849.output_list -> product_e48c16.items\n        execute_19300c -> product_e48c16.trigger\n\n        product_e48c16.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -355, y: 121) difference_1_eb24d5 Std.Sets.Difference {}\n\tinstance(x: -355, y: 201) difference_2_4e3c12 Std.Sets.Difference {}\n\tinstance(x: -102, y: 161) concat_e679fe Std.List.Concat {}\n\n\tlist1_ai -> difference_1_eb24d5.left\n\tlist2_ai -> difference_1_eb24d5.right\n\tlist2_ai -> difference_2_4e3c12.left\n\tlist1_ai -> difference_2_4e3c12.right\n\n\tdifference_1_eb24d5.difference -> concat_e679fe.left\n\tdifference_2_4e3c12.difference -> concat_e679fe.right\n\tconcat_e679fe.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 121, y: -104) slice_4e2b6d root.Std_k98ojb.List.Slice {}\n\tinstance(x: 278, y: -55) length_ea8143 root.Std_k98ojb.List.Length {}\n\tinstance(x: 432, y: -142) concat_f47c95 root.Std_k98ojb.List.Concat {}\n\tinstance(x: 121, y: 22) slice_9e8f34 root.Std_k98ojb.List.Slice {}\n\n\tlist_48148f -> length_ea8143.list\n\tlength_ea8143.length -> slice_4e2b6d.end\n\tn_68068c -> slice_4e2b6d.start\n\tslice_4e2b6d.result -> concat_f47c95.right\n\tlist_48148f -> slice_9e8f34.list\n\tlength_ea8143.length -> slice_9e8f34.end\n\tn_68068c -> slice_9e8f34.start\n\tslice_9e8f34.result -> concat_f47c95.left\n\tconcat_f47c95.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 100, y: 50) iteration_reduce_eb8e46 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\tsetter(x: 0, y: 0, name: \"setter_41e4ad\") setter_41e4ad = 0\n\titeration_reduce_eb8e46.output_list -> sum_2a848f\n\tlist_2c62ab -> iteration_reduce_eb8e46.items\n\tsetter_41e4ad.new_value -> iteration_reduce_eb8e46.initial\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 116, y: 173) if_8e2c95 root.Std_k98ojb.Std.If {\n            input: num_5c0677\n        }\n        instance(x: 305, y: 216) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 540, y: 173) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 835, y: 173) modulo_d1e5a4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1039, y: 173) if_e19a62 root.Std_k98ojb.Std.If {}\n        2 -> for_8cb3f6.start\n        num_5c0677 -> for_8cb3f6.end\n        1 -> lessthanorequal_f11fda.right\n        for_8cb3f6.index -> lessthanorequal_f11fda.left\n        execute_b7b391 -> for_8cb3f6.trigger\n        for_8cb3f6.item -> modulo_d1e5a4.value\n        num_5c0677 -> modulo_d1e5a4.divisor\n        modulo_d1e5a4.result -> if_e19a62.input\n        0 -> if_e19a62.value\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_9a54bb\n        for_8cb3f6.done -> if_8e2c95.execute\n        if_8e2c95.then -> output_c457b3\n        if_8e2c95.else -> continue_9a54bb\n        true -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -139, y: -161) greaterthan_4e2c11 Std.Math.GreaterThan {}\n\tinstance(x: -262, y: -23) lessthanorequal_ebf06b Std.Math.LessThanOrEqual {}\n.instance(x: 50, y: -100) and_34f6d5 Std.Logic.And {}\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_ebf06b.left -> x_853326\n\tgreaterthan_4e2c11.right -> y_5390f5\n\tlessthanorequal_ebf06b.right -> y_5390f5\n\tand_34f6d5.left -> greaterthan_4e2c11.result\n\tand_34f6d5.right -> lessthanorequal_ebf06b.result\n\tand_34f6d5.result -> output_3339a3\n\n\tinstance(x: -139, y: 50) greaterthan_7d9f22 Std.Math.GreaterThan {}\n\tinstance(x: -262, y: 112) lessthanorequal_f144c2 Std.Math.LessThanOrEqual {}\n.instance(x: 50, y: 161) and_98c1e5 Std.Logic.And {}\n\tgreaterthan_7d9f22.left -> y_5390f5\n\tlessthanorequal_f144c2.left -> y_5390f5\n\tgreaterthan_7d9f22.right -> x_853326\n\tlessthanorequal_f144c2.right -> x_853326\n\tand_98c1e5.left -> greaterthan_7d9f22.result\n\tand_98c1e5.right -> lessthanorequal_f144c2.result\n\n\tinstance(x: 159, y: -219) or_c51a95 Std.Logic.And {}\n\tor_c51a95.left -> and_34f6d5.result\n\tor_c51a95.right -> and_98c1e5.result\n\tor_c51a95.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 173, y: -15) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 354, y: 14) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -137, y: 249) Strings_Replace_7b9f3c root.Std_k98ojb.Strings.Replace {}\n\tinput_ai -> Strings_Replace_7b9f3c.input\n\tsearch_ai -> Strings_Replace_7b9f3c.search\n\treplace_ai -> Strings_Replace_7b9f3c.replace\n\tStrings_Replace_7b9f3c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -102, y: 245) tolower_f5a2f7 Std.Strings.ToLower {}\n        input_ai -> tolower_f5a2f7.input\n        instance(x: 225, y: 246) equals_72e1d9 Logic.Equal {}\n        tolower_f5a2f7.output -> equals_72e1d9.left\n        input_ai -> equals_72e1d9.right\n        equals_72e1d9.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 137, y: -139) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 395, y: -55) iteration_reduce root.Std_k98ojb.Iteration.Reduce {\n            handler: Math.Mul\n        }\n        list_sort.result -> iteration_reduce.items\n        execute_19300c -> iteration_reduce.trigger\n\n        instance(x: 756, y: 25) remove_duplicates root.Std_k98ojb.Query.Filter {\n            where: \"index == list.indexOf(it)\"\n        }\n        list_5fda54 -> remove_duplicates.list\n        execute_19300c -> remove_duplicates.trigger\n\n        remove_duplicates.result -> iteration_reduce.items\n        iteration_reduce.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -370, y: 121) difference_1_eb6a3e root.Sets.Difference {}\n\tinstance(x: -370, y: 30) difference_2_5f412d root.Sets.Difference {}\n\tinstance(x: -177, y: 161) concat_0c8c7a root.List.Concat {}\n\n\tlist1_ai -> difference_1_eb6a3e.left\n\tlist2_ai -> difference_1_eb6a3e.right\n\tlist2_ai -> difference_2_5f412d.left\n\tlist1_ai -> difference_2_5f412d.right\n\n\tdifference_1_eb6a3e.difference -> concat_0c8c7a.left\n\tdifference_2_5f412d.difference -> concat_0c8c7a.right\n\tconcat_0c8c7a.list -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 294, y: -19) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) length_875ddb root.Std_k98ojb.List.Length {}\n        instance(x: 400, y: -100) modulo_5c4634 root.Math_k98ojb.Math.Modulo {}\n\n        list_48148f -> slice_9ab286.list\n        n_68068c -> modulo_5c4634.value\n        length_875ddb.result -> modulo_5c4634.divisor\n        list_48148f -> length_875ddb.list\n        modulo_5c4634.result -> slice_9ab286.start\n        length_875ddb.result -> slice_9ab286.end\n        -1 -> slice_9ab286.end\n        slice_9ab286.result -> concat_9b38cc.right\n        list_48148f -> concat_9b38cc.left\n        slice_9ab286.start -> slice_9ab286.start\n        concat_9b38cc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 34, y: 121) iteration_reduce_f9e5b1 Iteration.Reduce {\n            handler: lambda((acc, current) => acc + current)\n        }\n        list_2c62ab -> iteration_reduce_f9e5b1.items\n        iteration_reduce_f9e5b1.output_list -> sum_2a848f\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 157, y: 140) if_4e1c51 root.Std_k98ojb.Std.If {\n            expression: \"(num_5c0677 <= 1)\"\n        }\n        num_5c0677 -> if_4e1c51.input\n        execute_b7b391 -> if_4e1c51.execute\n        instance(x: 437, y: 112) for_79f2a6 root.Std_k98ojb.Std.For {\n            items: \"List.GenerateRange(2, num_5c0677 - 1)\"\n        }\n        if_4e1c51.else -> for_79f2a6.reset\n        instance(x: 761, y: 173) mod_32d9f3 root.Std_k98ojb.Math.Modulo {\n            expression: \"(num_5c0677 % for_79f2a6.item)\"\n        }\n        num_5c0677 -> mod_32d9f3.value\n        for_79f2a6.item -> mod_32d9f3.divisor\n        instance(x: 1041, y: 148) if_8c29b4 root.Std_k98ojb.Std.If {\n            expression: \"(mod_32d9f3.result == 0)\"\n        }\n        mod_32d9f3.result -> if_8c29b4.input\n        for_79f2a6.onItem -> if_8c29b4.execute\n        if_8c29b4.then -> continue_9a54bb\n        instance(x: 1295, y: -23) and_55e3d1 root.Std_k98ojb.Logic.And {\n            expression: \"(!if_8c29b4.value && for_79f2a6.done)\"\n        }\n        if_8c29b4.value -> and_55e3d1.left\n        for_79f2a6.done -> and_55e3d1.right\n        and_55e3d1.result -> output_c457b3\n        and_55e3d1.result -> continue_9a54bb\n        if_4e1c51.then -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_6c7e21 Std.Math.GreaterThan {}\n\tinstance(x: -56, y: -173) lessthanorequal_2f4d5b Std.Math.LessThanOrEqual {}\n\tgreaterthan_6c7e21.left -> x_853326\n\tlessthanorequal_2f4d5b.left -> x_853326\n\tgreaterthan_6c7e21.right -> 0\n\tlessthanorequal_2f4d5b.right -> 0\n\tinstance(x: 34, y: -173) and_8a3513 Std.Logic.And {}\n\tand_8a3513.left -> greaterthan_6c7e21.result\n\tand_8a3513.right -> lessthanorequal_2f4d5b.result\n\n\tinstance(x: -140, y: -55) greaterthan_6c7e22 Std.Math.GreaterThan {}\n\tinstance(x: -56, y: -55) lessthanorequal_2f4d5c Std.Math.LessThanOrEqual {}\n\tgreaterthan_6c7e22.left -> y_5390f5\n\tlessthanorequal_2f4d5c.left -> y_5390f5\n\tgreaterthan_6c7e22.right -> 0\n\tlessthanorequal_2f4d5c.right -> 0\n\tinstance(x: 34, y: -55) and_8a3514 Std.Logic.And {}\n\tand_8a3514.left -> greaterthan_6c7e22.result\n\tand_8a3514.right -> lessthanorequal_2f4d5c.result\n\n\tinstance(x: 93, y: -173) not_70e0b1 Std.Logic.Not {}\n\tnot_70e0b1.input -> and_8a3513.result\n\tinstance(x: 93, y: -55) not_70e0b2 Std.Logic.Not {}\n\tnot_70e0b2.input -> and_8a3514.result\n\n\tinstance(x: 159, y: -114) and_8a3515 Std.Logic.And {}\n\tand_8a3515.left -> not_70e0b1.result\n\tand_8a3515.right -> and_8a3514.result\n\tand_8a3515.result -> output_3339a3\n\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 174, y: -13) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 349, y: 21) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e2b4 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e2b4.left\n        input_ai -> equals_65e2b4.right\n        equals_65e2b4.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -384, y: 45) difference_1_ae root.Sets.Difference {}\n\tinstance(x: -222, y: 121) difference_2_ae root.Sets.Difference {}\n\tinstance(x: -31, y: 77) concat_ae root.List.Concat {}\n\n\tlist1_ai -> difference_1_ae.left\n\tlist2_ai -> difference_1_ae.right\n\tlist2_ai -> difference_2_ae.left\n\tlist1_ai -> difference_2_ae.right\n\n\tdifference_1_ae.difference -> concat_ae.left\n\tdifference_2_ae.difference -> concat_ae.right\n\tconcat_ae.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 121, y: 93) iteration_reduce_f9e5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e5b7.initial\n\tlist_2c62ab -> iteration_reduce_f9e5b7.items\n\titeration_reduce_f9e5b7.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 244, y: 14) greaterthan_5e2f6c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 432, y: -34) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_f11fd9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1496, y: -187) not_9fba8c root.Std_k98ojb.Logic.Not {}\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        num_5c0677 -> greaterthan_5e2f6c.left\n        1 -> greaterthan_5e2f6c.right\n        greaterthan_5e2f6c.result -> if_07b8c7.predicate\n        execute_b7b391 -> if_07b8c7.execute\n        if_07b8c7.then -> for_8cb3f6.reset\n        for_8cb3f6.item -> modulo_f11fd9.value\n        num_5c0677 -> modulo_f11fd9.divisor\n        modulo_f11fd9.result -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_9fba8c.input\n        not_9fba8c.result -> if_07b8c7.value\n        for_8cb3f6.done -> continue_9a54bb\n        if_07b8c7.else -> output_c457b3\n        if_07b8c7.then -> for_8cb3f6.next\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -179, y: -173) greaterthan_68c2b7 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -281, y: -62) lessthanorequal_29f6e5 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_68c2b7.left -> x_853326\n\tlessthanorequal_29f6e5.left -> x_853326\n\tgreaterthan_68c2b7.right -> 0\n\tlessthanorequal_29f6e5.right -> 0\n\tinstance(x: -103, y: -155) and_8a1e4d Std.Logic.And {\n\t}\n\tgreaterthan_68c2b7.result -> and_8a1e4d.left\n\tlessthanorequal_29f6e5.result -> and_8a1e4d.right\n\tinstance(x: 34, y: -188) greaterthan_3c9f92 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -114, y: -26) lessthanorequal_68b7f2 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_3c9f92.left -> y_5390f5\n\tlessthanorequal_68b7f2.left -> y_5390f5\n\tgreaterthan_3c9f92.right -> 0\n\tlessthanorequal_68b7f2.right -> 0\n\tinstance(x: 119, y: -120) and_39a95e Std.Logic.And {\n\t}\n\tgreaterthan_3c9f92.result -> and_39a95e.left\n\tlessthanorequal_68b7f2.result -> and_39a95e.right\n\tinstance(x: 53, y: -83) or_5bb0d1 Std.Logic.Not {\n\t}\n\tand_8a1e4d.result -> or_5bb0d1.left\n\tand_39a95e.result -> or_5bb0d1.right\n\tor_5bb0d1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 129, y: -12) mod_3e8a95 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_3e8a95.value\n        11 -> mod_3e8a95.divisor\n        instance(x: 340, y: 23) if_f4d6a2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0 ? true : false\"\n        }\n        mod_3e8a95.result -> if_f4d6a2.result\n        if_f4d6a2.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -104, y: 246) tolower_f4a5f9 Std.Strings.ToLower {}\n        input_ai -> tolower_f4a5f9.input\n        instance(x: 235, y: 245) equals_3c0e46 Logic.Equal {}\n        tolower_f4a5f9.output -> equals_3c0e46.left\n        input_ai -> equals_3c0e46.right\n        equals_3c0e46.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 121, y: 104) sort_f4a3e5 Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> sort_f4a3e5.list\n        execute_19300c -> sort_f4a3e5.trigger\n\n        instance(x: 355, y: 105) distinct_2d6d95 Iteration.Reduce {\n            handler: Std_k98ojb.List.Contains\n        }\n        sort_f4a3e5.result -> distinct_2d6d95.items\n\n        instance(x: 584, y: 104) product_70f8c1 Iteration.Reduce {\n            handler: Std_k98ojb.Math.Mul\n        }\n        distinct_2d6d95.output_list -> product_70f8c1.items\n        execute_19300c -> product_70f8c1.trigger\n\n        product_70f8c1.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_eb45 root.Sets.Difference {}\n.instance(x: -357, y: 39) difference_2_5e6f root.Sets.Difference {}\n\tinstance(x: -102, y: 77) concat_ea47 root.List.Concat {}\n\n\tlist1_ai -> difference_1_eb45.left\n\tlist2_ai -> difference_1_eb45.right\n\tlist2_ai -> difference_2_5e6f.left\n\tlist1_ai -> difference_2_5e6f.right\n\tdifference_1_eb45.difference -> concat_ea47.list1\n\tdifference_2_5e6f.difference -> concat_ea47.list2\n\tconcat_ea47.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 121, y: -64) slice_5e2b7d root.Std_k98ojb.List.Slice {}\n\tinstance(x: 334, y: -103) length_e72f45 root.Std_k98ojb.List.Length {}\n\tinstance(x: 245, y: -28) modulo_f47c1a root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 444, y: -112) concat_8d9f55 root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_5e2b7d.list\n\tn_68068c -> modulo_f47c1a.value\n\tlength_e72f45.result -> modulo_f47c1a.divisor\n\tlist_48148c -> length_e72f45.list\n\tmodulo_f47c1a.result -> slice_5e2b7d.start\n\tslice_5e2b7d.end -> -1\n\tslice_5e2b7d.result -> concat_8d9f55.right\n\tlist_48148f -> slice_5e2b7d.list\n\t0 -> slice_5e2b7d.start\n\tmodulo_f47c1a.result -> slice_5e2b7d.end\n\tslice_5e2b7d.result -> concat_8d9f55.left\n\tconcat_8d9f55.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 12, y: 121) iteration_reduce_d9d5b7 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\tsetter(x: -156, y: -19, name: \"setter_41e4ad\") setter_41e4ad = 0\n\titeration_reduce_d9d5b7.output_list -> sum_2a848f\n\tlist_2c62ab -> iteration_reduce_d9d5b7.items\n\tsetter_41e4ad.new_value -> iteration_reduce_d9d5b7.context\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 233, y: 14) if_f47d95 root.Std_k98ojb.Std.If {\n            expression: \"(num <= 1)\"\n        }\n        num_5c0677 -> if_f47d95.input\n        execute_b7b391 -> if_f47d95.execute\n        if_f47d95.then -> continue_9a54bb\n        if_f47d95.value -> output_c457b3\n\n        instance(x: 521, y: -34) for_dcc4c5 root.Std_k98ojb.Std.For {\n        }\n        instance(x: 355, y: -156) lessthanorequal_1a8e6f root.Std_k98ojb.Math.LessThanOrEqual {\n        }\n        instance(x: 734, y: -54) modulo_f7c9d5 root.Std_k98ojb.Math.Modulo {\n        }\n        instance(x: 1004, y: -116) if_34a93e root.Std_k98ojb.Std.If {\n            expression: \"(num % i == 0)\"\n        }\n        2 -> for_dcc4c5.start\n        num_5c0677 -> for_dcc4c5.end\n        for_dcc4c5.item -> lessthanorequal_1a8e6f.left\n        num_5c0677 -> lessthanorequal_1a8e6f.right\n        lessthanorequal_1a8e6f.result -> if_f47d95.predicate\n        for_dcc4c5.onItem -> if_f47d95.execute\n        if_f47d95.else -> for_dcc4c5.next\n        for_dcc4c5.item -> modulo_f7c9d5.value\n        num_5c0677 -> modulo_f7c9d5.divisor\n        modulo_f7c9d5.result -> if_34a93e.predicate\n        for_dcc4c5.onItem -> if_34a93e.execute\n        if_34a93e.then -> continue_9a54bb\n        true -> output_c457b3\n        execute_b7b391 -> for_dcc4c5.reset\n        if_34a93e.else -> for_dcc4c5.next\n        for_dcc4c5.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -240, y: -163) math_greaterthan_6c2d7b Std.Math.GreaterThan {}\n.instance(x: -55, y: -155) math_lessthanorequal_f46d1e Std.Math.LessThanOrEqual {}\n.instance(x: 34, y: 5) logic_and_d9f4a3 Std.Logic.And {}\n.instance(x: -395, y: 23) math_multiply_ba94e6 Std.Math.Mul {\n\t\tfirst: 0\n\t\tsecond: 0\n\t}\n.instance(x: -144, y: 101) logic_not_2a49b7 Std.Logic.Not {}\n\n\tmath_greaterthan_6c2d7b.left -> x_853326\n\tmath_greaterthan_6c2d7b.right -> 0\n\tmath_lessthanorequal_f46d1e.left -> y_5390f5\n\tmath_lessthanorequal_f46d1e.right -> 0\n\tlogic_and_d9f4a3.left -> math_greaterthan_6c2d7b.result\n\tlogic_and_d9f4a3.right -> math_lessthanorequal_f46d1e.result\n\tmath_multiply_ba94e6.first -> x_853326\n\tmath_multiply_ba94e6.second -> y_5390f5\n\tlogic_not_2a49b7.input -> math_multiply_ba94e6.result\n\toutput_3339a3 -> logic_not_2a49b7.result\n\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 234, y: 14) mod_9e8d35 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_9e8d35.value\n        11 -> mod_9e8d35.divisor\n        instance(x: 432, y: 17) if_f0fe4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        mod_9e8d35.result -> if_f0fe4a.modulo\n        if_f0fe4a.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -137, y: 209) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -102, y: 259) tolower_f5a4f7 Std.Strings.ToLower {}\n        input_ai -> tolower_f5a4f7.input\n        instance(x: 221, y: 258) equals_31c6d9 Logic.Equal {}\n        tolower_f5a4f7.output -> equals_31c6d9.left\n        input_ai -> equals_31c6d9.right\n        equals_31c6d9.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 94, y: -105) list_sort root.Std.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        instance(x: 303, y: -105) unique_list root.Std.List.Flatten {\n            instance(x: 156, y: -59) iteration_reduce root.Iteration.Reduce {\n                handler: Std.Math.Mul\n            }\n            instance(x: 94, y: 14) query_filter root.Std.Query.Filter {\n                where: \"index == 0 || it != list[index - 1]\"\n            }\n            list_sort.result -> query_filter.list\n            query_filter.result -> iteration_reduce.items\n            iteration_reduce.result -> output_cffcc2\n        }\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -416, y: 50) difference_1_eb46a3 Std.Sets.Difference {}\n\tinstance(x: -228, y: 121) difference_2_4e9d34 Std.Sets.Difference {}\n\tinstance(x: -55, y: 77) concat_f6c bee List.Concat {}\n\n\tlist1_ai -> difference_1_eb46a3.left\n\tlist2_ai -> difference_1_eb46a3.right\n\tlist2_ai -> difference_2_4e9d34.left\n\tlist1_ai -> difference_2_4e9d34.right\n\n\tdifference_1_eb46a3.difference -> concat_f6c.beel\n\tdifference_2_4e9d34.difference -> concat_f6c.beer\n\tconcat_f6c.output -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 294, y: -19) length_e69a95 root.Std_k98ojb.List.Length {}\n        instance(x: 557, y: 167) slice_9b38cc root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) slice_2c1f4d root.Std_k98ojb.List.Slice {}\n        instance(x: 562, y: -203) concat_e14921d root.Std_k98ojb.List.Concat {}\n        instance(x: 400, y: -50) math_sub_f9e3a6 root.Std_k98ojb.Math.Sub {}\n\n        list_48148f -> length_e69a95.list\n        n_68068c -> math_sub_f9e3a6.first\n        length_e69a95.length -> math_sub_f9e3a6.second\n        math_sub_f9e3a6.result -> slice_2c1f4d.start\n        list_48148f -> slice_2c1f4d.list\n        0 -> slice_9b38cc.start\n        n_68068c -> slice_9b38cc.end\n        list_48148f -> slice_9b38cc.list\n        slice_2c1f4d.result -> concat_e14921d.left\n        slice_9b38cc.result -> concat_e14921d.right\n        concat_e14921d.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 34, y: 121) iteration_reduce_f9e5b8 Iteration.Reduce {\n            handler: lambda((x, y) => x + y)\n        }\n        list_2c62ab -> iteration_reduce_f9e5b8.items\n        0 -> iteration_reduce_f9e5b8.initial_value\n        iteration_reduce_f9e5b8.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: 157, y: 140) if_8d93e5 root.Std_k98ojb.Std.If {}\n\tinstance(x: 350, y: 27) for_35a32c root.Std_k98ojb.Std.For {}\n\tinstance(x: 591, y: -14) lessthanorequal_c9fc1a root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 825, y: 25) modulo_e52d95 root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 1042, y: 141) if_24a3f7 root.Std_k98ojb.Std.If {}\n\t\n\tnum_5c0677 -> lessthanorequal_c9fc1a.left\n\t2 -> lessthanorequal_c9fc1a.right\n\tlessthanorequal_c9fc1a.result -> if_8d93e5.predicate\n\texecute_b7b391 -> if_8d93e5.execute\n\tif_8d93e5.then -> for_35a32c.reset\n\tif_8d93e5.else -> continue_9a54bb\n\t\n\t2 -> for_35a32c.start\n\tnum_5c0677 -> for_35a32c.end\n\tfor_35a32c.onItem -> lessthanorequal_c9fc1a.execute\n\tfor_35a32c.item -> modulo_e52d95.value\n\tnum_5c0677 -> modulo_e52d95.divisor\n\tmodulo_e52d95.result -> if_24a3f7.predicate\n\tlessthanorequal_c9fc1a.then -> if_24a3f7.execute\n\tif_24a3f7.else -> for_35a32c.next\n\tif_24a3f7.then -> continue_9a54bb\n\t\n\tfor_35a32c.done -> if_8d93e5.else\n\tif_8d93e5.value -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_4e2c11 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -56, y: -173) lessthanorequal_ebfccb Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_ebfccb.left -> x_853326\n\tgreaterthan_4e2c11.right -> y_5390f5\n\tlessthanorequal_ebfccb.right -> y_5390f5\n\tinstance(x: 34, y: -173) and_71f3b7 Std.Logic.And {\n\t}\n\tand_71f3b7.left -> greaterthan_4e2c11.result\n\tand_71f3b7.right -> lessthanorequal_ebfccb.result\n\tinstance(x: 108, y: -107) greaterthan_9d8e75 Std.Math.GreaterThan {\n\t}\n\tinstance(x: 24, y: -107) lessthanorequal_ba94c2 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_9d8e75.left -> y_5390f5\n\tlessthanorequal_ba94c2.left -> y_5390f5\n\tgreaterthan_9d8e75.right -> x_853326\n\tlessthanorequal_ba94c2.right -> x_853326\n\tinstance(x: 158, y: -107) and_dfd552 Std.Logic.And {\n\t}\n\tand_dfd552.left -> greaterthan_9d8e75.result\n\tand_dfd552.right -> lessthanorequal_ba94c2.result\n\tinstance(x: 92, y: -44) or_f4f5b3 Std.Logic.Or {\n\t}\n\tor_f4f5b3.left -> and_71f3b7.result\n\tor_f4f5b3.right -> and_dfd552.result\n\toutput_3339a3 -> or_f4f5b3.result\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 210, y: -10) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 410, y: 20) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e2b4 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e2b4.left\n        input_ai -> equals_65e2b4.right\n        equals_65e2b4.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_a6f7b3 Std.Sets.Difference {}\n\tinstance(x: -357, y: 38) difference_2_5c4e19 Std.Sets.Difference {}\n\tinstance(x: -102, y: 77) concat_ebafe48 Std.List.Concat {}\n\n\tlist1_ai -> difference_1_a6f7b3.left\n\tlist2_ai -> difference_1_a6f7b3.right\n\tlist2_ai -> difference_2_5c4e19.left\n\tlist1_ai -> difference_2_5c4e19.right\n\n\tdifference_1_a6f7b3.difference -> concat_ebafe48.left\n\tdifference_2_5c4e19.difference -> concat_ebafe48.right\n\tconcat_ebafe48.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 121, y: 94) iteration_reduce_f9e7d5 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e7d5.initial\n\tlist_2c62ab -> iteration_reduce_f9e7d5.items\n\titeration_reduce_f9e7d5.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 142, y: 114) greaterthan_4e0f7c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 353, y: 123) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_f11fd9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        num_5c0677 -> greaterthan_4e0f7c.left\n        1 -> greaterthan_4e0f7c.right\n        greaterthan_4e0f7c.result -> if_07b8c7.predicate\n        execute_b7b391 -> if_07b8c7.execute\n        if_07b8c7.then -> generaterange_038fce.reset\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_f11fd9.value\n        num_5c0677 -> modulo_f11fd9.divisor\n        modulo_f11fd9.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.else -> output_c457b3\n        for_8cb3f6.done -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -181, y: -162) greaterthan_2e97d7 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -262, y: 34) lessthanorequal_69c6b4 Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_2e97d7.left -> x_853326\n\tlessthanorequal_69c6b4.left -> x_853326\n\tgreaterthan_2e97d7.right -> 0\n\tlessthanorequal_69c6b4.right -> 0\n\tinstance(x: -24, y: -104) and_71f1a3 Std.Logic.And {\n\t}\n\tgreaterthan_2e97d7.result -> and_71f1a3.left\n\tlessthanorequal_69c6b4.result -> and_71f1a3.right\n\tinstance(x: 116, y: -43) greaterthan_9e0e5c Std.Math.GreaterThan {\n\t}\n\tinstance(x: 70, y: 126) lessthanorequal_34a2ab Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_9e0e5c.left -> y_5390f5\n\tlessthanorequal_34a2ab.left -> y_5390f5\n\tgreaterthan_9e0e5c.right -> 0\n\tlessthanorequal_34a2ab.right -> 0\n\tinstance(x: 241, y: -24) and_5286b8 Std.Logic.And {\n\t}\n\tgreaterthan_9e0e5c.result -> and_5286b8.left\n\tlessthanorequal_34a2ab.result -> and_5286b8.right\n\tinstance(x: 87, y: 21) not_62f7d4 Std.Logic.Not {\n\t}\n\tand_71f1a3.result -> not_62f7d4.input\n\tinstance(x: 212, y: 93) not_5e9a95 Std.Logic.Not {\n\t}\n\tand_5286b8.result -> not_5e9a95.input\n\tinstance(x: 142, y: -149) and_f4a82c Std.Logic.And {\n\t}\n\tnot_62f7d4.result -> and_f4a82c.left\n\tnot_5e9a95.result -> and_f4a82c.right\n\tand_f4a82c.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 234, y: -14) mod_81e6a5 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_81e6a5.value\n        11 -> mod_81e6a5.divisor\n        instance(x: 432, y: 21) if_f46a2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0 ? true : false\"\n        }\n        mod_81e6a5.result -> if_f46a2d.result\n        if_f46a2d.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -221, y: 224) tolower_f4a5f9 Std.Strings.ToLower {}\n        input_ai -> tolower_f4a5f9.input\n        instance(x: 129, y: 226) equals_3c0b3d Logic.Equal {}\n        tolower_f4a5f9.output -> equals_3c0b3d.left\n        input_ai -> equals_3c0b3d.right\n        equals_3c0b3d.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 137, y: -105) sort_f7a5e3 Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> sort_f7a5e3.list\n        execute_19300c -> sort_f7a5e3.trigger\n\n        instance(x: 412, y: -26) distinct_5d8c61 Iteration.Reduce {\n            handler: Std_k98ojb.List.Add\n        }\n        sort_f7a5e3.sorted -> distinct_5d8c61.items\n        execute_19300c -> distinct_5d8c61.trigger\n\n        instance(x: 721, y: 121) product_ebafe4 Iteration.Reduce {\n            handler: Std_k98ojb.Math.Mul\n            init: 1\n        }\n        distinct_5d8c61.output_list -> product_ebafe4.items\n        execute_19300c -> product_ebafe4.trigger\n\n        product_ebafe4.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -355, y: 45) difference_1_eb11 root.Sets.Difference {}\n\tinstance(x: -246, y: 121) difference_2_5f3e root.Sets.Difference {}\n\tinstance(x: -97, y: 90) concat_d7a4 root.List.Concat {}\n\n\tlist1_ai -> difference_1_eb11.left\n\tlist2_ai -> difference_1_eb11.right\n\tlist2_ai -> difference_2_5f3e.left\n\tlist1_ai -> difference_2_5f3e.right\n\n\tdifference_1_eb11.difference -> concat_d7a4.left\n\tdifference_2_5f3e.difference -> concat_d7a4.right\n\n\tconcat_d7a4.result -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 121, y: -104) slice_4e2b6d root.Std_k98ojb.List.Slice {}\n\tinstance(x: 294, y: -64) length_e69c9a root.Std_k98ojb.List.Length {}\n\tinstance(x: 449, y: -49) modulo_f47d95 root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 617, y: -112) concat_31e1f5 root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_4e2b6d.list\n\tn_68068c -> modulo_f47d95.value\n\tlength_e69c9a.result -> modulo_f47d95.divisor\n\tlist_48148c -> length_e69c9a.list\n\tmodulo_f47d95.result -> slice_4e2b6d.start\n\tslice_4e2b6d.result -> concat_31e1f5.left\n\tlist_48148f -> slice_4e2b6d.list\n\t-1 -> slice_4e2b6d.end\n\tmodulo_f47d95.result -> slice_4e2b6d.start\n\tslice_4e2b6d.result -> concat_31e1f5.right\n\tconcat_31e1f5.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 100, y: 50) iteration_reduce_d91b27 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\tsetter(x: 0, y: 0, name: \"setter_41e4ad\") setter_41e4ad = 0\n\titeration_reduce_d91b27.result -> sum_2a848f\n\tlist_2c62ab -> iteration_reduce_d91b27.items\n\tsetter_41e4ad.new_value -> iteration_reduce_d91b27.initial\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 245, y: 141) if_e7cfc2 root.Std_k98ojb.Std.If {\n            expression: \"(num <= 1)\"\n        }\n        num_5c0677 -> if_e7cfc2.input\n        execute_b7b391 -> if_e7cfc2.execute\n        if_e7cfc2.then -> continue_9a54bb\n        if_e7cfc2.value -> output_c457b3\n\n        instance(x: 551, y: -14) for_0e6f64 root.Std_k98ojb.Std.For {\n            expression: \"(i <= sqrt(num))\"\n        }\n        execute_b7b391 -> for_0e6f64.reset\n        if_e7cfc2.else -> for_0e6f64.trigger\n\n        instance(x: 812, y: -193) modulo_d9fb3a root.Std_k98ojb.Math.Modulo {\n            expression: \"(num % i == 0)\"\n        }\n        num_5c0677 -> modulo_d9fb3a.value\n        for_0e6f64.item -> modulo_d9fb3a.divisor\n\n        instance(x: 1031, y: -66) if_2d8b4a root.Std_k98ojb.Std.If {\n            expression: \"(num % i == 0)\"\n        }\n        modulo_d9fb3a.result -> if_2d8b4a.input\n        for_0e6f64.onItem -> if_2d8b4a.execute\n        if_2d8b4a.then -> continue_9a54bb\n        if_2d8b4a.value -> output_c457b3\n\n        instance(x: 1241, y: -26) expression_f6c2f5 root.Std_k98ojb.Math.Expression {\n            expression: \"(i + 1)\"\n        }\n        for_0e6f64.index -> expression_f6c2f5.gen_0\n        expression_f6c2f5.result -> for_0e6f64.next\n\n        for_0e6f64.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -201, y: -141) math_greaterthan_6c1e21 Std.Math.GreaterThan {}\n\tinstance(x: -105, y: -54) math_lessthanorequal_c914d7 Std.Math.LessThanOrEqual {}\n\t\n\tx_853326 -> math_greaterthan_6c1e21.left\n\ty_5390f5 -> math_greaterthan_6c1e21.right\n\tx_853326 -> math_lessthanorequal_c914d7.left\n\ty_5390f5 -> math_lessthanorequal_c914d7.right\n\n\tinstance(x: 45, y: -173) logic_and_d8a51b Std.Logic.And {}\n\tmath_greaterthan_6c1e21.result -> logic_and_d8a51b.left\n\tmath_lessthanorequal_c914d7.result -> logic_and_d8a51b.right\n\n\tinstance(x: 116, y: -55) logic_not_f4fc17 Std.Logic.Not {}\n\tlogic_and_d8a51b.result -> logic_not_f4fc17.input\n\n\tinstance(x: 74, y: -123) logic_or_408c1e Std.Logic.Or {}\n\tmath_greaterthan_6c1e21.result -> logic_or_408c1e.left\n\tlogic_not_f4fc17.result -> logic_or_408c1e.right\n\t\n\tlogic_or_408c1e.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 159, y: -11) mod_8d6a93 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_8d6a93.value\n        11 -> mod_8d6a93.divisor\n        instance(x: 335, y: 34) if_e19a62 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0\"\n        }\n        mod_8d6a93.result -> if_e19a62.mod\n        if_e19a62.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -144, y: 332) Strings_Replace_9f4e6b root.Std.Replace {}\n\tinput_ai -> Strings_Replace_9f4e6b.input\n\tsearch_ai -> Strings_Replace_9f4e6b.search\n\treplace_ai -> Strings_Replace_9f4e6b.replace\n\tStrings_Replace_9f4e6b.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -232, y: 266) tolower_f9f7a2 Std.Strings.ToLower {}\n        input_ai -> tolower_f9f7a2.input\n        instance(x: 155, y: 266) equal_65e6d1 Logic.Equal {}\n        tolower_f9f7a2.output -> equal_65e6d1.left\n        input_ai -> equal_65e6d1.right\n        equal_65e6d1.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 126, y: 123) list_sort root.Std.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 342, y: 212) reduce_6a30b1 root.Iteration.Reduce {\n            handler: Std.Math.Mul\n        }\n        list_sort.result -> reduce_6a30b1.items\n        execute_19300c -> reduce_6a30b1.trigger\n\n        instance(x: 541, y: -103) query_filter root.Std.Query.Filter {\n            where: \"true\"\n        }\n        list_5fda54 -> query_filter.list\n        execute_19300c -> query_filter.trigger\n\n        instance(x: 753, y: 56) list_empty root.Std.List.Empty {\n        }\n        execute_19300c -> list_empty.trigger\n\n        instance(x: 982, y: -32) iteration_find root.Iteration.Find {\n            predicate: Logic.Equal\n        }\n        query_filter.result -> iteration_find.items\n        list_empty.list -> iteration_find.context\n\n        instance(x: 1232, y: 100) math_expression root.Std.Math.Expression {\n            expression: \"result\"\n        }\n        reduce_6a30b1.result -> math_expression.result\n        execute_19300c -> math_expression.trigger\n\n        math_expression.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -396, y: 44) difference_1_eb root.Std_k98ojb.Sets.Difference {}\n\tinstance(x: -245, y: 100) difference_2_f4 root.Std_k98ojb.Sets.Difference {}\n.instance(x: -63, y: 56) concat_d2e root.Std_k98ojb.List.Concat {}\n\tlist1_ai -> difference_1_eb.left\n\tlist2_ai -> difference_1_eb.right\n\tlist2_ai -> difference_2_f4.left\n\tlist1_ai -> difference_2_f4.right\n\tdifference_1_eb.difference -> concat_d2e.left\n\tdifference_2_f4.difference -> concat_d2e.right\n\tconcat_d2e.concat -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 294, y: -19) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) length_875ddb root.Std_k98ojb.List.Length {}\n        instance(x: 400, y: -100) modulo_5c4634 root.Math_k98ojb.Math.Modulo {}\n\n        list_48148f -> slice_9ab286.list\n        n_68068c -> modulo_5c4634.value\n        length_875ddb.result -> modulo_5c4634.divisor\n        list_48148f -> length_875ddb.list\n\n        instance(x: 500, y: -200) sub_14921d root.Math_k98ojb.Math.Sub {}\n        instance(x: 600, y: -250) length_2 root.Std_k98ojb.List.Length {}\n\n        list_48148f -> length_2.list\n        length_2.result -> sub_14921d.first\n        modulo_5c4634.result -> sub_14921d.second\n\n        slice_9ab286.start -> sub_14921d.result\n        slice_9ab286.end -> -1\n\n        instance(x: 700, y: 0) slice2_9ab286 root.Std_k98ojb.List.Slice {}\n\n        list_48148f -> slice2_9ab286.list\n        0 -> slice2_9ab286.start\n        sub_14921d.result -> slice2_9ab286.end\n\n        concat_9b38cc.left -> slice_9ab286.result\n        concat_9b38cc.right -> slice2_9ab286.result\n        concat_9b38cc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 110, y: 80) iteration_reduce_f9e7d4 Iteration.Reduce {\n            handler: lambda(a, b) { Math.Add(first: a, second: b).result }\n        }\n\n        list_2c62ab -> iteration_reduce_f9e7d4.items\n        iteration_reduce_f9e7d4.output_list -> sum_2a848f\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: 115, y: 135) if_5f4e23 root.Std_k98ojb.Std.If {}\n\tinstance(x: 282, y: 101) less_than_or_equal_70f12c root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 521, y: -44) for_2a19d7 root.Std_k98ojb.Std.For {}\n\tinstance(x: 753, y: 55) mod_8d6171 root.Std_k98ojb.Math.Modulo {}\n$instance(x: 936, y: -194) if_f5e419 root.Std_k98ojb.Std.If {}\n\n\tnum_5c0677 -> less_than_or_equal_70f12c.left\n\t2 -> less_than_or_equal_70f12c.right\n\texecute_b7b391 -> for_2a19d7.reset\n\tfor_2a19d7.trigger -> for_2a19d7.next\n\tless_than_or_equal_70f12c.result -> if_5f4e23.predicate\n\tif_5f4e23.execute -> for_2a19d7.trigger\n        2 -> for_2a19d7.start\n\tnum_5c0677 -> for_2a19d7.end\n\tfor_2a19d7.item -> mod_8d6171.value\n\tnum_5c0677 -> mod_8d6171.divisor\n\tmod_8d6171.result -> if_f5e419.predicate\n        0 -> if_f5e419.value\n\tif_f5e419.execute -> for_2a19d7.next\n\tfor_2a19d7.done -> continue_9a54bb\n\tif_5f4e23.then -> output_c457b3\n\tif_5f4e23.else -> if_f5e419.execute\n        true -> output_c457b3\n\tif_f5e419.else -> continue_9a54bb\n\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -140, y: -173) greaterthan_4e2c11 Std.Math.GreaterThan {\n\t}\n\tinstance(x: -56, y: -173) lessthanorequal_ebfccd Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_4e2c11.left -> x_853326\n\tlessthanorequal_ebfccd.left -> x_853326\n\tgreaterthan_4e2c11.right -> y_5390f5\n\tlessthanorequal_ebfccd.right -> y_5390f5\n\tinstance(x: 34, y: -173) and_71f3d7 Std.Logic.And {\n\t}\n\tand_71f3d7.left -> greaterthan_4e2c11.result\n\tand_71f3d7.right -> lessthanorequal_ebfccd.result\n\tinstance(x: 108, y: -107) greaterthan_9e1a5b Std.Math.GreaterThan {\n\t}\n\tinstance(x: 24, y: -107) lessthanorequal_b8c bee Std.Math.LessThanOrEqual {\n\t}\n\tgreaterthan_9e1a5b.left -> y_5390f5\n\tlessthanorequal_b8cbee.left -> y_5390f5\n\tgreaterthan_9e1a5b.right -> x_853326\n\tlessthanorequal_b8cbee.right -> x_853326\n\tinstance(x: 76, y: -107) and_d6a2fc Std.Logic.And {\n\t}\n\tand_d6a2fc.left -> greaterthan_9e1a5b.result\n\tand_d6a2fc.right -> lessthanorequal_b8cbee.result\n\tinstance(x: 129, y: -173) or_f4f7d3 Std.Logic.Not {\n\t}\n\tor_f4f7d3.left -> and_71f3d7.result\n\tor_f4f7d3.right -> and_d6a2fc.result\n\toutput_3339a3 -> or_f4f7d3.result\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 210, y: -10) modulo_e19a62 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_e19a62.value\n        11 -> modulo_e19a62.divisor\n        instance(x: 410, y: 20) if_07b8c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"modulo == 0\"\n        }\n        modulo_e19a62.result -> if_07b8c7.modulo\n        if_07b8c7.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -154, y: 249) Strings.Replace {}\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -138, y: 210) tolower_3f1a5d Std.Strings.ToLower {}\n        input_ai -> tolower_3f1a5d.input\n        instance(x: 241, y: 209) equals_65e4b2 Logic.Equal {}\n        tolower_3f1a5d.output -> equals_65e4b2.left\n        input_ai -> equals_65e4b2.right\n        equals_65e4b2.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 340, y: -120) list_sort_1 Std_k98ojb.List.Sort {\n            list: list_5fda54\n        }\n        instance(x: 340, y: -50) iteration_reduce_2 Iteration.Reduce {\n            item: list_sort_1.result\n            handler: Math.Mul\n        }\n        execute_19300c -> iteration_reduce_2.trigger\n        iteration_reduce_2.result -> output_cffcc2\n        iteration_reduce_2.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -357, y: 121) difference_1_a6f7b3 Std.Sets.Difference {}\n\tinstance(x: -357, y: 206) difference_2_5c9e64 Std.Sets.Difference {}\n\tinstance(x: -128, y: 163) concat_ebafe48 Std.List.Concat {}\n\n\tlist1_ai -> difference_1_a6f7b3.left\n\tlist2_ai -> difference_1_a6f7b3.right\n\tlist2_ai -> difference_2_5c9e64.left\n\tlist1_ai -> difference_2_5c9e64.right\n\n\tdifference_1_a6f7b3.difference -> concat_ebafe48.left\n\tdifference_2_5c9e64.difference -> concat_ebafe48.right\n\tconcat_ebafe48.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 100, y: 50) slice_1 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 300, y: 50) slice_2 root.Std_k98ojb.List.Slice {}\n\tinstance(x: 500, y: 50) concat root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> slice_1.list\n\tn_68068c -> slice_1.start\n\tList.Length(list_48148f) - n_68068c -> slice_2.start\n\t-1 -> slice_1.end\n\tslice_2.list = list_48148f\n\tslice_1.result -> concat.left\n\tslice_2.result -> concat.right\n\tconcat.result -> output_823209\n}"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 121, y: 94) iteration_reduce_f9e7d5 Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\t0 -> iteration_reduce_f9e7d5.initial\n\tlist_2c62ab -> iteration_reduce_f9e7d5.items\n\titeration_reduce_f9e7d5.result -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 142, y: 135) greaterthan_4e0f7c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 351, y: 26) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 933, y: 25) modulo_f11fd9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        num_5c0677 -> greaterthan_4e0f7c.left\n        1 -> greaterthan_4e0f7c.right\n        greaterthan_4e0f7c.result -> if_07b8c7.predicate\n        execute_b7b391 -> if_07b8c7.execute\n        if_07b8c7.then -> for_8cb3f6.reset\n        for_8cb3f6.item -> modulo_f11fd9.value\n        num_5c0677 -> modulo_f11fd9.divisor\n        modulo_f11fd9.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        if_07b8c7.value -> output_c457b3\n        for_8cb3f6.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -173, y: -63) greaterthan_5e2b7c Std.Math.GreaterThan {}\n\tinstance(x: -344, y: 45) lessthanorequal_c14413 Std.Math.LessThanOrEqual {}\n\tinstance(x: -96, y: 137) and_e0f21a Std.Logic.And {}\n\n\tx_853326 -> greaterthan_5e2b7c.left\n\tnum_0 -> greaterthan_5e2b7c.right\n\ty_5390f5 -> lessthanorequal_c14413.left\n\tnum_1 -> lessthanorequal_c14413.right\n\tgreaterthan_5e2b7c.result -> and_e0f21a.left\n\tlessthanorequal_c14413.result -> and_e0f21a.right\n\tand_e0f21a.result -> output_3339a3\n\n\tinstance(x: -425, y: 12) num_0 Std.Math.Expression {\n\t\texpression: \"0\"\n\t}\n\tinstance(x: -14, y: 190) num_1 Std.Math.Expression {\n\t\texpression: \"0\"\n\t}\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: 50) mod_8e2a3b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> mod_8e2a3b.value\n        11 -> mod_8e2a3b.divisor\n        instance(x: 300, y: 100) if_f5d5a6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0 ? true : false\"\n        }\n        mod_8e2a3b.result -> if_f5d5a6.mod\n        if_f5d5a6.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -138, y: 249) Strings.Replace {}\n\tStrings.Replace.input -> input_ai\n\tStrings.Replace.search -> search_ai\n\tStrings.Replace.replace -> replace_ai\n\tStrings.Replace.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -102, y: 131) tolower_f5a4f7 Std.Strings.ToLower {}\n        input_ai -> tolower_f5a4f7.input\n        instance(x: 235, y: 130) equals_2eef53 Logic.Equal {}\n        tolower_f5a4f7.output -> equals_2eef53.left\n        input_ai -> equals_2eef53.right\n        equals_2eef53.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 137, y: -74) sort_f7a5e3 Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> sort_f7a5e3.list\n        execute_19300c -> sort_f7a5e3.trigger\n\n        instance(x: 431, y: -52) unique_b8d90a Iteration.Reduce {\n            handler: Std_k98ojb.List.Contains\n        }\n        sort_f7a5e3.sorted -> unique_b8d90a.items\n        execute_19300c -> unique_b8d90a.trigger\n\n        instance(x: 731, y: 25) product_36a9f2 Iteration.Reduce {\n            handler: Std_k98ojb.Math.Mul\n        }\n        unique_b8d90a.output_list -> product_36a9f2.items\n        execute_19300c -> product_36a9f2.trigger\n\n        product_36a9f2.result -> output_cffcc2\n        execute_19300c -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -355, y: 45) difference_1_eb51 root.Sets.Difference {}\n\tinstance(x: -246, y: 103) difference_2_4d46 root.Sets.Difference {}\n\tinstance(x: -97, y: 43) concat_95e6 root.List.Concat {}\n\n\tlist1_ai -> difference_1_eb51.left\n\tlist2_ai -> difference_1_eb51.right\n\tlist2_ai -> difference_2_4d46.left\n\tlist1_ai -> difference_2_4d46.right\n\n\tdifference_1_eb51.difference -> concat_95e6.left\n\tdifference_2_4d46.difference -> concat_95e6.right\n\tconcat_95e6.list -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n\tinstance(x: 121, y: -155) slice_4e2b6d root.Std_k98ojb.List.Slice {}\n\tinstance(x: 342, y: -139) length_ea86f9 root.Std_k98ojb.List.Length {}\n\tinstance(x: 244, y: -45) modulo_bfd5c3 root.Std_k98ojb.Math.Modulo {}\n\tinstance(x: 462, y: -112) concat_8d93fc root.Std_k98ojb.List.Concat {}\n\n\tlist_48148f -> length_ea86f9.list\n\tn_68068c -> modulo_bfd5c3.value\n\tlength_ea86f9.result -> modulo_bfd5c3.divisor\n\tmodulo_bfd5c3.result -> slice_4e2b6d.end\n\tlist_48148f -> slice_4e2b6d.list\n\tslice_4e2b6d.result -> concat_8d93fc.right\n\tlist_48148f -> slice_4e2b6d.list\n\t-1 -> slice_4e2b6d.start\n\tmodulo_bfd5c3.result -> slice_4e2b6d.start\n\tslice_4e2b6d.result -> concat_8d93fc.left\n\tconcat_8d93fc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 80, y: 100) iteration_reduce_d3739b Iteration.Reduce {\n\t    handler: lambda((acc, current) => acc + current)\n\t}\n\tsetter(x: 0, y: 0, name: \"setter_41e4ad\") setter_41e4ad = 0\n\titeration_reduce_d3739b.result -> sum_2a848f\n\tlist_2c62ab -> iteration_reduce_d3739b.items\n\tsetter_41e4ad.new_value -> iteration_reduce_d3739b.initial\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 194, y: 151) if_ecc4c5 root.Std_k98ojb.Std.If {\n            expression: \"(num <= 1)\"\n        }\n        num_5c0677 -> if_ecc4c5.input\n        execute_b7b391 -> if_ecc4c5.execute\n        if_ecc4c5.then -> continue_9a54bb\n        if_ecc4c5.value -> output_c457b3\n\n        instance(x: 531, y: -12) for_26d4e2 root.Std_k98ojb.Std.For {\n        }\n        instance(x: 344, y: -103) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {\n        }\n        instance(x: 753, y: 25) modulo_5c0e6a root.Std_k98ojb.Math.Modulo {\n        }\n        instance(x: 1003, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {\n        }\n        2 -> for_26d4e2.start\n        num_5c0677 -> for_26d4e2.end\n        for_26d4e2.item -> lessthanorequal_f11fda.left\n        num_5c0677 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_ecc4c5.predicate\n        execute_b7b391 -> for_26d4e2.reset\n        for_26d4e2.onItem -> modulo_5c0e6a.execute\n        for_26d4e2.item -> modulo_5c0e6a.value\n        num_5c0677 -> modulo_5c0e6a.divisor\n        modulo_5c0e6a.result -> if_07b8c7.input\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.value -> output_c457b3\n        for_26d4e2.done -> continue_9a54bb\n    }"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -154, y: -74) math_greaterthan_4c6d91 Std.Math.GreaterThan {}\n\tinstance(x: -47, y: -156) math_lessthanorequal_87f0b7 Std.Math.LessThanOrEqual {}\n\tinstance(x: 46, y: 30) logic_and_d8a52e Std.Logic.And {}\n\t\n\tx_853326 -> math_greaterthan_4c6d91.left\n\ty_5390f5 -> math_greaterthan_4c6d91.right\n\tx_853326 -> math_lessthanorequal_87f0b7.left\n\ty_5390f5 -> math_lessthanorequal_87f0b7.right\n\tmath_greaterthan_4c6d91.result -> logic_and_d8a52e.left\n\tmath_lessthanorequal_87f0b7.result -> logic_and_d8a52e.right\n\tlogic_and_d8a52e.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 137, y: -23) math_modulo_4e8a3b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> math_modulo_4e8a3b.value\n        11 -> math_modulo_4e8a3b.divisor\n        instance(x: 333, y: -19) logic_equal_f2630f root.Std_k98ojb.Logic.Equal {}\n        math_modulo_4e8a3b.result -> logic_equal_f2630f.left\n        0 -> logic_equal_f2630f.right\n        logic_equal_f2630f.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinstance(x: -179, y: 266) Strings_Replace_9f4b14 root.Std.String.Replace {}\n\tinput_ai -> Strings_Replace_9f4b14.input\n\tsearch_ai -> Strings_Replace_9f4b14.search\n\treplace_ai -> Strings_Replace_9f4b14.replace\n\tStrings_Replace_9f4b14.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -139, y: 210) tolower_f5a2f7 Std.Strings.ToLower {}\n        input_ai -> tolower_f5a2f7.input\n        instance(x: 258, y: 209) equals_29d29d Logic.Equal {}\n        tolower_f5a2f7.output -> equals_29d29d.left\n        input_ai -> equals_29d29d.right\n        equals_29d29d.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 34, y: 76) list_sort root.Std_k98ojb.List.Sort {\n        }\n        list_5fda54 -> list_sort.list\n        execute_19300c -> list_sort.trigger\n\n        instance(x: 164, y: -17) iteration_reduce root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * it\"\n        }\n        list_sort.result -> iteration_reduce.items\n        iteration_reduce.trigger -> continue_45190b\n        iteration_reduce.result -> output_cffcc2\n\n        instance(x: 312, y: -56) set_difference root.Std_k98ojb.Sets.Difference {\n        }\n        list_5fda54 -> set_difference.left\n        execute_19300c -> set_difference.trigger\n\n        instance(x: 457, y: -23) list_not_empty root.Std_k98ojb.List.NotEmpty {\n        }\n        list_5fda54 -> list_not_empty.list\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -248, y: 30) difference_1_eb8a4c root.Std_k98ojb.Sets.Difference {}\n\tinstance(x: -248, y: 118) difference_2_9f445d root.Std_k98ojb.Sets.Difference {}\n\n\tlist1_ai -> difference_1_eb8a4c.left\n\tlist2_ai -> difference_1_eb8a4c.right\n\tlist2_ai -> difference_2_9f445d.left\n\tlist1_ai -> difference_2_9f445d.right\n\n\tinstance(x: 46, y: 77) concat_e351f3 root.Std_k98ojb.List.Concat {}\n\tdifference_1_eb8a4c.difference -> concat_e351f3.list1\n\tdifference_2_9f445d.difference -> concat_e351f3.list2\n\n\tconcat_e351f3.concat -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n\tin(x: -186, y: -89, name: \"list\") property(List) list_48148f\n\tin(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\tout(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 294, y: -19) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 168) length_875ddb root.Std_k98ojb.List.Length {}\n        instance(x: 400, y: -100) modulo_5c4634 root.Math_k98ojb.Math.Modulo {}\n\n        list_48148f -> slice_9ab286.list\n        n_68068c -> modulo_5c4634.value\n        length_875ddb.result -> modulo_5c4634.divisor\n        list_48148f -> length_875ddb.list\n\n        instance(x: 500, y: -200) sub_14921d root.Math_k98ojb.Math.Sub {}\n        instance(x: 600, y: -250) length_2 root.Std_k98ojb.List.Length {}\n\n        list_48148f -> length_2.list\n        length_2.result -> sub_14921d.first\n        modulo_5c4634.result -> sub_14921d.second\n\n        slice_9ab286.start -> sub_14921d.result\n        slice_9ab286.end -> -1\n\n        instance(x: 700, y: 0) slice_2 root.Std_k98ojb.List.Slice {}\n\n        list_48148f -> slice_2.list\n        0 -> slice_2.start\n        sub_14921d.result -> slice_2.end\n\n        slice_9ab286.result -> concat_9b38cc.left\n        slice_2.result -> concat_9b38cc.right\n\n        concat_9b38cc.result -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: 130) iteration_reduce_f9e7d4 Iteration.Reduce {\n            handler: lambda(a, b) { Math.Add(first: a, second: b).result }\n        }\n\n        list_2c62ab -> iteration_reduce_f9e7d4.items\n        iteration_reduce_f9e7d4.output_list -> sum_2a848f\n\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: 108, y: 139) if_8d514f root.Std_k98ojb.Std.If {\n\t}\n\tif_8d514f.value -> output_c457b3\n\texecute_b7b391 -> if_8d514f.execute\n\toutput_c457b3 -> continue_9a54bb\n\n\tinstance(x: 353, y: -114) for_ecc00c root.Std_k98ojb.Std.For {\n\t}\n\tfor_ecc00c.onItem -> if_8d514f.then\n\texecute_b7b391 -> for_ecc00c.reset\n\tnum_5c0677 -> for_ecc00c.items\n\n\tinstance(x: 521, y: -43) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {\n\t}\n\tlessthanorequal_f11fda.result -> if_8d514f.predicate\n\tfor_ecc00c.item -> lessthanorequal_f11fda.left\n\tnum_5c0677 -> lessthanorequal_f11fda.right\n\n\tinstance(x: 744, y: -17) modulo_e2589b root.Std_k98ojb.Math.Modulo {\n\t}\n\tmodulo_e2589b.result -> if_8d514f.else\n\tfor_ecc00c.item -> modulo_e2589b.value\n\tnum_5c0677 -> modulo_e2589b.divisor\n\n\tinstance(x: 937, y: -191) not_46e4a3 root.Std_k98ojb.Logic.Not {\n\t}\n\tnot_46e4a3.result -> if_8d514f.then\n\tmodulo_e2589b.result -> not_46e4a3.input\n    }"
            ]
        }
    }
]