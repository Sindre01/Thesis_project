[
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f6b3d\n        in(x: 79, y: 130, name: \"b\") property(Int) b_4c8e2a\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_7f8b4c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_0a1b2c root.Std_k98ojb.Math.GreaterThan {\n            left: 0\n        }\n        instance(x: 0, y: 242) greaterthan_3d4e5f root.Std_k98ojb.Math.GreaterThan {\n            left: 0\n        }\n\n        greaterthan_0a1b2c.right -> and_7f8b4c.left\n        greaterthan_3d4e5f.right -> and_7f8b4c.right\n        and_7f8b4c.value -> output_a2b59d\n\n        a_8f6b3d -> greaterthan_0a1b2c.left\n        b_4c8e2a -> greaterthan_3d4e5f.left\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_67b2e9\n            in(x: -338, y: 110, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 60, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 60) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: 60) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference_78d487.reverseDifference -> concat_cd5cc4.right\n\n            list1_67b2e9 -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            concat_cd5cc4.output_list -> output_879de6\n        }\n\n        instance(x: 430, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5b2d9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -167) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -100) sub_875ddb root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -67) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 200, y: -67) slice_1d3f4a root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_5c4634.execute\n        list_0c1a77 -> length_5c4634.list\n        steps_5b2d9f -> modulo_14921d.value\n        length_5c4634.length -> modulo_14921d.divisor\n        length_5c4634.length -> sub_875ddb.first\n        modulo_14921d.result -> sub_875ddb.second\n        list_0c1a77 -> slice_9ab286.list\n        sub_875ddb.result -> slice_9ab286.start\n        -1 -> slice_9ab286.end\n        list_0c1a77 -> slice_1d3f4a.list\n        0 -> slice_1d3f4a.start\n        modulo_14921d.result -> slice_1d3f4a.end\n        slice_9ab286.slice -> concat_9b38cc.right\n        slice_1d3f4a.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f6b9d\n        in(x: 76, y: 130, name: \"b\") property(Int) b_1e8c2a\n\n        out(x: 454, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 267, y: 130) and_8f6b9d root.Std_k98ojb.Logic.And {}\n        instance(x: 45, y: 130) not_b1e8c2a root.Std_k98ojb.Logic.Not {}\n        instance(x: 179, y: 130) greaterthan_a8f6b9d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 345, y: 130) greaterthan_b1e8c2a root.Std_k98ojb.Math.GreaterThan {}\n\n        a_8f6b9d -> greaterthan_a8f6b9d.left\n        b_1e8c2a -> greaterthan_a8f6b9d.right\n        a_8f6b9d -> greaterthan_b1e8c2a.right\n        b_1e8c2a -> greaterthan_b1e8c2a.left\n        greaterthan_a8f6b9d.result -> and_8f6b9d.left\n        greaterthan_b1e8c2a.result -> not_b1e8c2a.value\n        not_b1e8c2a.output -> and_8f6b9d.right\n        and_8f6b9d.out -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> if_07b8c7.predicate\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        if_07b8c7.then -> out_f3db9f\n        true -> out_f3db9f\n        if_07b8c7.else -> continue_8ba06b\n        false -> out_f3db9f\n        execute_27b8c3 -> if_07b8c7.execute\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check if the item is already in the list.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -400, y: 67, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 150, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.result -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply the accumulator with the current item.\") Multiply {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -400, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 150, y: 100) mul_7b3b7b root.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                mul_7b3b7b.result -> output_ai\n            }\n        }\n\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.context -> flatten_7b3b7b.flattenedList\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.initialValue: 1\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -349, y: 10, name: \"list1\") property(List) list1_2a8b5e\n            in(x: -346, y: 79, name: \"list2\") property(List) list2_a8f4c4\n\n            out(x: 441, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -135, y: 49) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 200, y: 49) difference_2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n\n            list1_2a8b5e -> difference_78d487.left\n            list2_a8f4c4 -> difference_78d487.right\n\n            list2_a8f4c4 -> difference_2_cd5cc4.left\n            list1_2a8b5e -> difference_2_cd5cc4.right\n\n            instance(x: 300, y: 49) concat_3 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_3.left\n            difference_2_cd5cc4.difference -> concat_3.right\n\n            concat_3.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -203, y: 145, name: \"execute\") trigger() execute_8d7b8a\n        in(x: -196, y: -12, name: \"list\") property(List) list_1f8e4c\n        in(x: -190, y: 308, name: \"steps\") property(Number) steps_5d7b8a\n\n        out(x: 836, y: 323, name: \"output\") property(List) data_0_0\n        out(x: 841, y: 199, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 559, y: 266) slice_3a4b9c root.Std_k98ojb.List.Slice {}\n        instance(x: 550, y: -13) slice_2d3e4f root.Std_k98ojb.List.Slice {}\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 200, y: 308) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: 308) modulo_4d5e6f root.Std_k98ojb.Math.Modulo {}\n\n        execute_8d7b8a -> length_1a2b3c.execute\n        list_1f8e4c -> length_1a2b3c.list\n        length_1a2b3c.result -> modulo_4d5e6f.value\n        steps_5d7b8a -> modulo_4d5e6f.divisor\n        modulo_4d5e6f.result -> slice_3a4b9c.start\n        list_1f8e4c -> slice_3a4b9c.list\n        -1 -> slice_3a4b9c.end\n        slice_3a4b9c.slice -> concat_9b38cc.left\n        modulo_4d5e6f.result -> slice_2d3e4f.end\n        list_1f8e4c -> slice_2d3e4f.list\n        0 -> slice_2d3e4f.start\n        slice_2d3e4f.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: 65, y: -250) for_4c7f34 root.Std_k98ojb.Std.For {}\n        instance(x: 210, y: -250) get_at_547f34 root.Std_k98ojb.List.GetAt {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> execute_cdac2a\n        execute_cdac2a -> for_4c7f34.trigger\n        array_6b655b -> for_4c7f34.items\n        for_4c7f34.on_item -> get_at_547f34.execute\n        for_4c7f34.index -> get_at_547f34.index\n        array_6b655b -> get_at_547f34.list\n        get_at_547f34.item -> add_88bb8a.second\n        getter_38583a.value -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> for_4c7f34.next\n        for_4c7f34.done -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1360, y: -319) not_0c5a0f root.Std_k98ojb.Logic.Not {}\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_e19a62.predicate\n        for_8cb3f6.onItem -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> for_8cb3f6.index\n        expression_b720d7.result -> not_0c5a0f.value\n        not_0c5a0f.result -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 132, name: \"a\") property(Int) a_0b8e8f\n        in(x: 69, y: 132, name: \"b\") property(Int) b_7c9d1a\n\n        out(x: 465, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 0, y: 242) and_8e9f2a root.Std_k98ojb.Logic.And {}\n        instance(x: -276, y: 132) greaterthan_18909a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 251, y: 132) lessorequal_82d404 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_0b8e8f -> greaterthan_18909a.left\n        b_7c9d1a -> greaterthan_18909a.right\n\n        a_0b8e8f -> lessorequal_82d404.left\n        b_7c9d1a -> lessorequal_82d404.right\n\n        greaterthan_18909a.result -> and_8e9f2a.a\n        lessorequal_82d404.result -> and_8e9f2a.b\n\n        and_8e9f2a.result -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            lists: [list_ai]\n        }\n        instance(x: 250, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.flattenedList\n        }\n        instance(x: 400, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Remove duplicates\") RemoveDuplicates {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                in(x: -400, y: 77, name: \"index\") property(Number) index_ai\n                in(x: -269, y: 152, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: context_ai\n                    index: Math.Floor(index_ai - 1)\n                }\n                instance(x: 250, y: 100) is_not_equal root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item.item\n                }\n                is_not_equal.value -> output_ai\n            }\n        }\n        sorted_unique_list.sorted -> filtered_unique_list.context\n        sorted_unique_list.sorted -> filtered_unique_list.items\n        instance(x: 550, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply numbers\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -400, y: 77, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 100, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        filtered_unique_list.output_list -> product.items\n        product.reduced -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_56b8d7\n            in(x: -334, y: 118, name: \"list2\") property(List) list2_bf4c9a\n\n            out(x: 440, y: 70, name: \"output\") property(List) output_678dfe\n\n            instance(x: -135, y: 70) difference_1 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -129, y: 240) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n            list1_56b8d7 -> difference_1.left\n            list2_bf4c9a -> difference_1.right\n\n            list2_bf4c9a -> difference_2.left\n            list1_56b8d7 -> difference_2.right\n\n            instance(x: 130, y: 155) concat_1 root.Std_k98ojb.List.Concat {}\n            difference_1.difference -> concat_1.list1\n            difference_2.difference -> concat_1.list2\n\n            concat_1.concatenatedList -> output_678dfe\n        }\n\n        instance(x: 430, y: -15) find_dissimilar_elements_1 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -174, y: 380, name: \"steps\") property(Number) steps_2b5e9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 254, y: 167) slice_1d8c2f root.Std_k98ojb.List.Slice {}\n        instance(x: 254, y: -100) length_1e3a3a root.Std_k98ojb.List.Length {}\n        instance(x: 454, y: -100) modulo_6d7c2f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 254, y: -250) sub_3e3a3a root.Std_k98ojb.Math.Sub {}\n\n        execute_1ddb9f -> length_1e3a3a.execute\n        list_0c1a77 -> length_1e3a3a.list\n        steps_2b5e9f -> modulo_6d7c2f.value\n        length_1e3a3a.length -> modulo_6d7c2f.divisor\n        modulo_6d7c2f.result -> sub_3e3a3a.second\n        length_1e3a3a.length -> sub_3e3a3a.first\n        sub_3e3a3a.result -> slice_1d8c2f.start\n        list_0c1a77 -> slice_1d8c2f.list\n        -1 -> slice_1d8c2f.end\n        slice_1d8c2f.slice -> concat_9b38cc.left\n        0 -> slice_1d8c2f.start\n        modulo_6d7c2f.result -> slice_1d8c2f.end\n        list_0c1a77 -> slice_1d8c2f.list\n        slice_1d8c2f.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -417) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -417) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                execute_cdac2a -> add_3d7de6.execute\n                add_3d7de6.result -> output_732a8a\n                output_732a8a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n        reduce_3d7de6.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> for_8cb3f6.predicate\n        not_80a119.value -> out_f3db9f\n        if_07b8c7.then -> not_80a119.execute\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f9b1e\n        in(x: 67, y: 130, name: \"b\") property(Int) b_1d2c3f\n\n        out(x: 465, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 251, y: 257) and_82d404 root.Std_k98ojb.Logic.And {}\n        instance(x: 5, y: 346) greaterthan_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -6, y: 129) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f9b1e -> greaterthan_a8e56c.left\n        b_1d2c3f -> greaterthan_a8e56c.right\n\n        a_8f9b1e -> lessthanorequal_a49ae4.left\n        b_1d2c3f -> lessthanorequal_a49ae4.right\n\n        greaterthan_a8e56c.result -> and_82d404.input_0\n        lessthanorequal_a49ae4.result -> and_82d404.input_1\n\n        and_82d404.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_33ad55 root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_33ad55.list1\n            difference2_cd5cc4.difference -> concat_33ad55.list2\n\n            concat_33ad55.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_instance root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5d2b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_1d2c3f root.Std_k98ojb.List.Length {}\n        instance(x: 300, y: -100) modulo_1e2a3b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 554, y: -99) slice_1d2c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 562, y: -203) slice_2e2a3b root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_1d2c3f.execute\n        list_0c1a77 -> length_1d2c3f.list\n        steps_5d2b9f -> modulo_1e2a3b.value\n        length_1d2c3f.length -> modulo_1e2a3b.divisor\n        modulo_1e2a3b.result -> slice_1d2c3f.start\n        0 -> slice_1d2c3f.end\n        list_0c1a77 -> slice_1d2c3f.list\n        modulo_1e2a3b.result -> slice_2e2a3b.start\n        -1 -> slice_2e2a3b.end\n        list_0c1a77 -> slice_2e2a3b.list\n        slice_2e2a3b.slice -> concat_9b38cc.left\n        slice_1d2c3f.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f6b9d\n        in(x: 76, y: 130, name: \"b\") property(Int) b_1e8c2a\n\n        out(x: 454, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 267, y: 130) and_8f6b9d root.Std_k98ojb.Logic.And {}\n        instance(x: 45, y: 130) not_b1e8c2a root.Std_k98ojb.Logic.Not {}\n        instance(x: 179, y: 130) greaterthan_a8f6b9d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 345, y: 130) greaterthan_b1e8c2a root.Std_k98ojb.Math.GreaterThan {}\n\n        a_8f6b9d -> greaterthan_a8f6b9d.left\n        b_1e8c2a -> greaterthan_a8f6b9d.right\n        a_8f6b9d -> greaterthan_b1e8c2a.right\n        b_1e8c2a -> greaterthan_b1e8c2a.left\n        greaterthan_a8f6b9d.result -> and_8f6b9d.left\n        greaterthan_b1e8c2a.result -> not_b1e8c2a.value\n        not_b1e8c2a.output -> and_8f6b9d.right\n        and_8f6b9d.output -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> if_07b8c7.predicate\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        if_07b8c7.then -> out_f3db9f\n        true -> out_f3db9f\n        if_07b8c7.else -> continue_8ba06b\n        false -> out_f3db9f\n        execute_27b8c3 -> if_07b8c7.execute\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check if the item is already in the list.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -400, y: 67, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 150, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.result -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply the accumulator with the current item.\") Multiply {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -400, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 150, y: 100) mul_7b3b7b root.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                mul_7b3b7b.result -> output_ai\n            }\n        }\n\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.context -> flatten_7b3b7b.flattenedList\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.initialValue: 1\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -349, y: 10, name: \"list1\") property(List) list1_2a8b5e\n            in(x: -346, y: 79, name: \"list2\") property(List) list2_e8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -135, y: 10) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 79) difference2_78d487 root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 169, y: -77) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference2_78d487.difference -> concat_cd5cc4.right\n\n            list1_2a8b5e -> difference_78d487.left\n            list2_e8f404 -> difference_78d487.right\n\n            list1_2a8b5e -> difference2_78d487.right\n            list2_e8f404 -> difference2_78d487.left\n\n            concat_cd5cc4.listWithItem -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -203, y: 145, name: \"execute\") trigger() execute_8d7b6a\n        in(x: -197, y: 38, name: \"list\") property(List) list_0c1a77\n        in(x: -192, y: -73, name: \"steps\") property(Number) steps_5f4d8b\n\n        out(x: 688, y: 153, name: \"output\") property(List) data_0_0\n        out(x: 667, y: 36, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 300, y: -85) length_1d8e2a root.Std_k98ojb.List.Length {}\n        instance(x: 485, y: -100) modulo_6c2134 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -100) generateRange_1a8e3f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 599, y: 68) slice_2c5d3a root.Std_k98ojb.List.Slice {}\n        instance(x: 745, y: 68) slice_1e0f3b root.Std_k98ojb.List.Slice {}\n        instance(x: 675, y: 154) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        execute_8d7b6a -> length_1d8e2a.execute\n        list_0c1a77 -> length_1d8e2a.list\n        length_1d8e2a.length -> modulo_6c2134.value\n        steps_5f4d8b -> modulo_6c2134.divisor\n        modulo_6c2134.result -> generateRange_1a8e3f.from\n        0 -> generateRange_1a8e3f.to\n        list_0c1a77 -> slice_2c5d3a.list\n        generateRange_1a8e3f.range -> slice_2c5d3a.start\n        modulo_6c2134.result -> slice_2c5d3a.end\n        list_0c1a77 -> slice_1e0f3b.list\n        0 -> slice_1e0f3b.start\n        generateRange_1a8e3f.range -> slice_1e0f3b.end\n        slice_2c5d3a.slice -> concat_9b38cc.left\n        slice_1e0f3b.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: 65, y: -250) for_4e7f34 root.Std_k98ojb.Std.For {}\n        instance(x: 150, y: -250) get_at_547f34 root.Std_k98ojb.List.GetAt {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> execute_cdac2a\n        for_4e7f34.trigger -> continue_d9efd7\n        for_4e7f34.on_item -> get_at_547f34.execute\n        get_at_547f34.value -> add_88bb8a.second\n        getter_38583a.value -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> for_4e7f34.next\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        array_6b655b -> for_4e7f34.items\n        array_6b655b -> get_at_547f34.list\n        for_4e7f34.index -> get_at_547f34.index\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_8ba06b\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> for_8cb3f6.predicate\n        not_80a119.result -> out_f3db9f\n        if_07b8c7.else -> not_80a119.input\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Number) a_8f5b1e\n        in(x: 697, y: 130, name: \"b\") property(Number) b_8f5b1e\n\n        out(x: 244, y: -16, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 487, y: 130) and_2c8a09 root.Std_k98ojb.Logic.And {}\n        instance(x: 251, y: 264) greaterthan_82d404 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 732, y: 264) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f5b1e -> greaterthan_82d404.left\n        b_8f5b1e -> greaterthan_82d404.right\n        a_8f5b1e -> lessthanorequal_a49ae4.left\n        b_8f5b1e -> lessthanorequal_a49ae4.right\n\n        greaterthan_82d404.result -> and_2c8a09.input_1\n        lessthanorequal_a49ae4.result -> and_2c8a09.input_2\n\n        and_2c8a09.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            lists: [list_ai]\n        }\n        instance(x: 250, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.flattenedList\n        }\n        instance(x: 400, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness.\") UniquenessCheck {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: filtered_unique_list.items\n                    index: filtered_unique_list.index - 1\n                }\n                instance(x: 250, y: 100) is_not_equal root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item.item\n                }\n                is_not_equal.value -> output_ai\n            }\n        }\n        instance(x: 550, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply the numbers.\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: 100, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 150, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        product.reducedValue -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_56b8d7\n            in(x: -334, y: 118, name: \"list2\") property(List) list2_bf4c9a\n\n            out(x: 440, y: 70, name: \"output\") property(List) output_678dfe\n\n            instance(x: -135, y: 70) difference_1 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -129, y: 240) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n            list1_56b8d7 -> difference_1.left\n            list2_bf4c9a -> difference_1.right\n\n            list2_bf4c9a -> difference_2.left\n            list1_56b8d7 -> difference_2.right\n\n            instance(x: 130, y: 155) concat_1 root.Std_k98ojb.List.Concat {}\n            difference_1.difference -> concat_1.list1\n            difference_2.difference -> concat_1.list2\n\n            concat_1.output_list -> output_678dfe\n        }\n\n        instance(x: 430, y: -15) find_dissimilar_elements_1 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -40, name: \"steps\") property(Number) steps_2d5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 254, y: -16) slice_7f8a2d root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -99) slice_0c1a77 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) length_875ddb root.Std_k98ojb.List.Length {}\n\n        execute_1ddb9f -> length_875ddb.execute\n        list_0c1a77 -> length_875ddb.list\n        steps_2d5b9f -> slice_7f8a2d.start\n        length_875ddb.length -> slice_7f8a2d.end\n        list_0c1a77 -> slice_7f8a2d.list\n        0 -> slice_0c1a77.start\n        steps_2d5b9f -> math_modulo_3e4634.value\n        length_875ddb.length -> math_modulo_3e4634.divisor\n        instance(x: 354, y: -40) math_modulo_3e4634 root.Std_k98ojb.Math.Modulo {}\n        math_modulo_3e4634.result -> slice_0c1a77.end\n        list_0c1a77 -> slice_0c1a77.list\n        slice_7f8a2d.slice -> concat_9b38cc.left\n        slice_0c1a77.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -417) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -417) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                execute_cdac2a -> add_3d7de6.execute\n                add_3d7de6.result -> output_732a8a\n                output_732a8a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n        reduce_3d7de6.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1368, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        not_2f9d09.value -> out_f3db9f\n        lessthanorequal_f11fda.result -> for_8cb3f6.predicate\n        input_f5c03d -> lessthanorequal_f11fda.right\n        if_07b8c7.then -> not_2f9d09.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> not_2f9d09.input\n        for_8cb3f6.next -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f9b1e\n        in(x: 67, y: 130, name: \"b\") property(Int) b_1d2c3f\n\n        out(x: 465, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 251, y: 257) and_82d404 root.Std_k98ojb.Logic.And {}\n        instance(x: 5, y: 346) greaterthan_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -6, y: 129) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f9b1e -> greaterthan_a8e56c.left\n        b_1d2c3f -> greaterthan_a8e56c.right\n\n        a_8f9b1e -> lessthanorequal_a49ae4.left\n        b_1d2c3f -> lessthanorequal_a49ae4.right\n\n        greaterthan_a8e56c.result -> and_82d404.input_0\n        lessthanorequal_a49ae4.result -> and_82d404.input_1\n\n        and_82d404.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_33ad55 root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_33ad55.list1\n            difference2_cd5cc4.difference -> concat_33ad55.list2\n\n            concat_33ad55.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_instance root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5d2b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_1d2c3f root.Std_k98ojb.List.Length {}\n        instance(x: 300, y: -100) modulo_1e2a3b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 554, y: -99) slice_1d2c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 562, y: -203) slice_2e2a3b root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_1d2c3f.execute\n        list_0c1a77 -> length_1d2c3f.list\n        steps_5d2b9f -> modulo_1e2a3b.value\n        length_1d2c3f.length -> modulo_1e2a3b.divisor\n        modulo_1e2a3b.result -> slice_1d2c3f.start\n        0 -> slice_1d2c3f.end\n        list_0c1a77 -> slice_1d2c3f.list\n        modulo_1e2a3b.result -> slice_2e2a3b.start\n        -1 -> slice_2e2a3b.end\n        list_0c1a77 -> slice_2e2a3b.list\n        slice_2e2a3b.slice -> concat_9b38cc.left\n        slice_1d2c3f.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f6b9d\n        in(x: 76, y: 130, name: \"b\") property(Int) b_1e8c2a\n\n        out(x: 454, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 267, y: 130) and_8f6b9d root.Std_k98ojb.Logic.And {}\n        instance(x: 45, y: 130) not_b1e8c2a root.Std_k98ojb.Logic.Not {}\n        instance(x: 179, y: 130) greaterthan_a8f6b9d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 345, y: 130) greaterthan_b1e8c2a root.Std_k98ojb.Math.GreaterThan {}\n\n        a_8f6b9d -> greaterthan_a8f6b9d.left\n        b_1e8c2a -> greaterthan_a8f6b9d.right\n        a_8f6b9d -> greaterthan_b1e8c2a.right\n        b_1e8c2a -> greaterthan_b1e8c2a.left\n        greaterthan_a8f6b9d.result -> and_8f6b9d.left\n        greaterthan_b1e8c2a.result -> not_b1e8c2a.value\n        not_b1e8c2a.output -> and_8f6b9d.right\n        and_8f6b9d.output -> output_a2b59d\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> if_07b8c7.predicate\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        if_07b8c7.then -> out_f3db9f\n        true -> out_f3db9f\n        if_07b8c7.else -> continue_8ba06b\n        false -> out_f3db9f\n        execute_27b8c3 -> if_07b8c7.execute\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check if the item is already in the list.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -400, y: 67, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 150, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.result -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply the accumulator with the current item.\") Multiply {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -400, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 150, y: 100) mul_7b3b7b root.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                mul_7b3b7b.result -> output_ai\n            }\n        }\n\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.context -> flatten_7b3b7b.flattenedList\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.initialValue: 1\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -349, y: 10, name: \"list1\") property(List) list1_2a8b5e\n            in(x: -346, y: 79, name: \"list2\") property(List) list2_e8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -135, y: 10) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 79) difference2_78d487 root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 169, y: -77) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference2_78d487.difference -> concat_cd5cc4.right\n\n            list1_2a8b5e -> difference_78d487.left\n            list2_e8f404 -> difference_78d487.right\n\n            list1_2a8b5e -> difference2_78d487.right\n            list2_e8f404 -> difference2_78d487.left\n\n            concat_cd5cc4.listWithItem -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -203, y: 145, name: \"execute\") trigger() execute_8d7b6a\n        in(x: -197, y: 38, name: \"list\") property(List) list_0c1a77\n        in(x: -192, y: -73, name: \"steps\") property(Number) steps_5f4d8b\n\n        out(x: 688, y: 153, name: \"output\") property(List) data_0_0\n        out(x: 667, y: 36, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 300, y: -85) length_1d8e2a root.Std_k98ojb.List.Length {}\n        instance(x: 485, y: -100) modulo_6c2134 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 714, y: -100) generateRange_1a8e3f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 599, y: 68) slice_2c5d3a root.Std_k98ojb.List.Slice {}\n        instance(x: 745, y: 68) slice_1e0f3b root.Std_k98ojb.List.Slice {}\n        instance(x: 675, y: 154) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        execute_8d7b6a -> length_1d8e2a.execute\n        list_0c1a77 -> length_1d8e2a.list\n        length_1d8e2a.length -> modulo_6c2134.value\n        steps_5f4d8b -> modulo_6c2134.divisor\n        modulo_6c2134.result -> generateRange_1a8e3f.from\n        0 -> generateRange_1a8e3f.to\n        list_0c1a77 -> slice_2c5d3a.list\n        generateRange_1a8e3f.range -> slice_2c5d3a.start\n        modulo_6c2134.result -> slice_2c5d3a.end\n        list_0c1a77 -> slice_1e0f3b.list\n        0 -> slice_1e0f3b.start\n        generateRange_1a8e3f.range -> slice_1e0f3b.end\n        slice_2c5d3a.slice -> concat_9b38cc.left\n        slice_1e0f3b.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 395, y: -378) sum_array_96023e root.main.sum_array {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = sum\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = sum\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = sum\n        instance(x: 65, y: -250) for_4e7f34 root.Std_k98ojb.Std.For {}\n        instance(x: 150, y: -250) get_at_547f34 root.Std_k98ojb.List.GetAt {}\n\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> execute_cdac2a\n        for_4e7f34.trigger -> continue_d9efd7\n        for_4e7f34.on_item -> get_at_547f34.execute\n        get_at_547f34.value -> add_88bb8a.second\n        getter_38583a.value -> add_88bb8a.first\n        add_88bb8a.result -> setter_375321.new_value\n        setter_375321.continue -> for_4e7f34.next\n        setter_375321.continue -> continue_d9efd7\n        getter_38583a.value -> output_732a8a\n        array_6b655b -> for_4e7f34.items\n        array_6b655b -> get_at_547f34.list\n        for_4e7f34.index -> get_at_547f34.index\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_8ba06b\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> for_8cb3f6.predicate\n        not_80a119.result -> out_f3db9f\n        if_07b8c7.else -> not_80a119.input\n        execute_27b8c3 -> for_8cb3f6.reset\n        for_8cb3f6.done -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Number) a_8f5b1e\n        in(x: 697, y: 130, name: \"b\") property(Number) b_8f5b1e\n\n        out(x: 244, y: -16, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 487, y: 130) and_2c8a09 root.Std_k98ojb.Logic.And {}\n        instance(x: 251, y: 264) greaterthan_82d404 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 732, y: 264) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f5b1e -> greaterthan_82d404.left\n        b_8f5b1e -> greaterthan_82d404.right\n        a_8f5b1e -> lessthanorequal_a49ae4.left\n        b_8f5b1e -> lessthanorequal_a49ae4.right\n\n        greaterthan_82d404.result -> and_2c8a09.input_1\n        lessthanorequal_a49ae4.result -> and_2c8a09.input_2\n\n        and_2c8a09.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) unique_list root.Std_k98ojb.List.Flatten {\n            lists: [list_ai]\n        }\n        instance(x: 250, y: 100) sorted_unique_list root.Std_k98ojb.List.Sort {\n            list: unique_list.flattenedList\n        }\n        instance(x: 400, y: 100) filtered_unique_list root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list.sorted\n            handler: func(doc:\"Check for uniqueness.\") UniquenessCheck {\n                in(x: -531, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) previous_item root.Std_k98ojb.List.GetAt {\n                    list: filtered_unique_list.items\n                    index: filtered_unique_list.index - 1\n                }\n                instance(x: 250, y: 100) is_not_equal root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item.item\n                }\n                is_not_equal.value -> output_ai\n            }\n        }\n        instance(x: 550, y: 100) product root.Std_k98ojb.Iteration.Reduce {\n            items: filtered_unique_list.output_list\n            handler: func(doc:\"Multiply the numbers.\") MultiplyNumbers {\n                in(x: -531, y: 2, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: 100, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 150, y: 100) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> output_ai\n            }\n        }\n        product.reducedValue -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_56b8d7\n            in(x: -334, y: 118, name: \"list2\") property(List) list2_bf4c9a\n\n            out(x: 440, y: 70, name: \"output\") property(List) output_678dfe\n\n            instance(x: -135, y: 70) difference_1 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -129, y: 240) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n            list1_56b8d7 -> difference_1.left\n            list2_bf4c9a -> difference_1.right\n\n            list2_bf4c9a -> difference_2.left\n            list1_56b8d7 -> difference_2.right\n\n            instance(x: 130, y: 155) concat_1 root.Std_k98ojb.List.Concat {}\n            difference_1.difference -> concat_1.list1\n            difference_2.difference -> concat_1.list2\n\n            concat_1.output_list -> output_678dfe\n        }\n\n        instance(x: 430, y: -15) find_dissimilar_elements_1 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -40, name: \"steps\") property(Number) steps_2d5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 254, y: -16) slice_7f8a2d root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: -99) slice_0c1a77 root.Std_k98ojb.List.Slice {}\n        instance(x: 300, y: 168) length_875ddb root.Std_k98ojb.List.Length {}\n\n        execute_1ddb9f -> length_875ddb.execute\n        list_0c1a77 -> length_875ddb.list\n        steps_2d5b9f -> slice_7f8a2d.start\n        length_875ddb.length -> slice_7f8a2d.end\n        list_0c1a77 -> slice_7f8a2d.list\n        0 -> slice_0c1a77.start\n        steps_2d5b9f -> math_modulo_3e4634.value\n        length_875ddb.length -> math_modulo_3e4634.divisor\n        instance(x: 354, y: -40) math_modulo_3e4634 root.Std_k98ojb.Math.Modulo {}\n        math_modulo_3e4634.result -> slice_0c1a77.end\n        list_0c1a77 -> slice_0c1a77.list\n        slice_7f8a2d.slice -> concat_9b38cc.left\n        slice_0c1a77.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 395, y: -378) reduce_96023e root.Std_k98ojb.Iteration.Reduce {\n            handler: func() sum_handler {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655c\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 99, y: -249) add_547f34 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_547f34.first\n                item_6b655c -> add_547f34.second\n                add_547f34.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_96023e.initial_value\n        array_6b655b -> reduce_96023e.items\n        execute_cdac2a -> reduce_96023e.execute\n        reduce_96023e.output -> output_732a8a\n        reduce_96023e.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1368, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        expression_b720d7.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        not_2f9d09.value -> out_f3db9f\n        lessthanorequal_f11fda.result -> for_8cb3f6.predicate\n        input_f5c03d -> lessthanorequal_f11fda.right\n        if_07b8c7.then -> not_2f9d09.execute\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> not_2f9d09.input\n        for_8cb3f6.next -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f9b1e\n        in(x: 67, y: 130, name: \"b\") property(Int) b_1d8c2f\n\n        out(x: 456, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 251, y: 257) and_82d404 root.Std_k98ojb.Logic.And {}\n        instance(x: 5, y: 346) greaterthan_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -6, y: 129) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f9b1e -> greaterthan_a8e56c.left\n        b_1d8c2f -> greaterthan_a8e56c.right\n\n        a_8f9b1e -> lessthanorequal_a49ae4.left\n        b_1d8c2f -> lessthanorequal_a49ae4.right\n\n        greaterthan_a8e56c.result -> and_82d404.input_0\n        lessthanorequal_a49ae4.result -> and_82d404.input_1\n\n        and_82d404.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_67b2e9\n            in(x: -338, y: 110, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 60, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 60) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: 60) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference_78d487.reverseDifference -> concat_cd5cc4.right\n\n            list1_67b2e9 -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            concat_cd5cc4.output_list -> output_879de6\n        }\n\n        instance(x: 430, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5b2d9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -167) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -100) sub_875ddb root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -67) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 200, y: -67) slice_1d3f4a root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_5c4634.execute\n        list_0c1a77 -> length_5c4634.list\n        steps_5b2d9f -> modulo_14921d.value\n        length_5c4634.length -> modulo_14921d.divisor\n        length_5c4634.length -> sub_875ddb.first\n        modulo_14921d.result -> sub_875ddb.second\n        list_0c1a77 -> slice_9ab286.list\n        sub_875ddb.result -> slice_9ab286.start\n        -1 -> slice_9ab286.end\n        list_0c1a77 -> slice_1d3f4a.list\n        0 -> slice_1d3f4a.start\n        modulo_14921d.result -> slice_1d3f4a.end\n        slice_9ab286.slice -> concat_9b38cc.right\n        slice_1d3f4a.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 10, y: 25, name: \"a\") property(Int) a_6b8e4d\n        in(x: 317, y: 29, name: \"b\") property(Int) b_3f9a7c\n\n        out(x: 234, y: 105, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 168, y: 208) and_9e5f3a root.Std_k98ojb.Logic.And {}\n        instance(x: 74, y: 107) less_than_or_equal_3d4f8c root.Std_k98ojb.Math.LessThanOrEqual {\n            left: -1\n        }\n        instance(x: 265, y: 106) greater_than_7e5a3f root.Std_k98ojb.Math.GreaterThan {\n            right: 0\n        }\n\n        less_than_or_equal_3d4f8c.result -> and_9e5f3a.left\n        greater_than_7e5a3f.result -> and_9e5f3a.right\n        and_9e5f3a.result -> output_a2b59d\n\n        a_6b8e4d -> less_than_or_equal_3d4f8c.right\n        b_3f9a7c -> greater_than_7e5a3f.left\n    }\n\n    instance(x: 103, y: -12) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 587, y: -100) modulo_2d2e5c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_2d2e5c.value\n        11 -> modulo_2d2e5c.divisor\n        instance(x: 764, y: -15) equal_e1a5f7 root.Std_k98ojb.Logic.Equal {}\n        modulo_2d2e5c.result -> equal_e1a5f7.left\n        0 -> equal_e1a5f7.right\n        equal_e1a5f7.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") CalculateUniqueProduct {\n        in(x: -469, y: 108, name: \"list\") property(List) list_ai\n        out(x: 375, y: 213, name: \"product\") property(Number) product_ai\n        instance(x: -135, y: 194) unique_list_6a2b7b root.Iteration.Reduce {\n            reducer: func(doc:\"Reducer function to collect unique items.\") UniqueReducer {\n                in(x: -408, y: 123, name: \"acc\") property(List) acc_ai\n                in(x: -195, y: 126, name: \"item\") property(Number) item_ai\n                out(x: 273, y: 192, name: \"output_list\") property(List) output_list_ai\n                instance(x: 84, y: 102) contains_5a2b7b root.List.Contains {\n                    item: item_ai\n                }\n                acc_ai -> contains_5a2b7b.list\n                instance(x: -136, y: 293) if_not_contains_7b3b7b root.Std.IfExpression {\n                    expression: \"!contains\"\n                }\n                contains_5a2b7b.contains -> if_not_contains_7b3b7b.contains\n                item_ai -> if_not_contains_7b3b7b.item\n                acc_ai -> if_not_contains_7b3b7b.then.list\n                instance(x: 164, y: 392) add_item_5a2b7b root.List.Add {\n                    item: item_ai\n                }\n                if_not_contains_7b3b7b.then.item -> add_item_5a2b7b.item\n                acc_ai -> add_item_5a2b7b.list\n                add_item_5a2b7b.listWithItem -> if_not_contains_7b3b7b.then.output_list\n                acc_ai -> if_not_contains_7b3b7b.else.output_list\n                if_not_contains_7b3b7b.value -> output_list_ai\n            }\n        }\n        list_ai -> unique_list_6a2b7b.items\n        instance(x: 410, y: 295) product_calculation_5a2b7b root.Iteration.Reduce {\n            reducer: func(doc:\"Reducer function to calculate the product.\") ProductReducer {\n                in(x: -388, y: 126, name: \"acc\") property(Number) acc_ai\n                in(x: -194, y: 125, name: \"item\") property(Number) item_ai\n                out(x: 270, y: 192, name: \"result\") property(Number) result_ai\n                instance(x: 83, y: 102) multiply_5a2b7b root.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                multiply_5a2b7b.result -> result_ai\n            }\n        }\n        unique_list_6a2b7b.result -> product_calculation_5a2b7b.items\n        product_calculation_5a2b7b.result -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -360, y: 21, name: \"list1\") property(List) list1_874d5a\n            in(x: -369, y: 114, name: \"list2\") property(List) list2_1b6f2c\n\n            out(x: 409, y: 122, name: \"output\") property(List) output_87d5a6\n\n            instance(x: -138, y: 119) difference_1a6d47 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -138, y: 20) difference_2a6d47 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 54, y: 66) concat_1a6d47 root.Std_k98ojb.List.Concat {}\n\n            list1_874d5a -> difference_1a6d47.left\n            list2_1b6f2c -> difference_1a6d47.right\n\n            list2_1b6f2c -> difference_2a6d47.left\n            list1_874d5a -> difference_2a6d47.right\n\n            difference_1a6d47.difference -> concat_1a6d47.list1\n            difference_2a6d47.difference -> concat_1a6d47.list2\n\n            concat_1a6d47.output_list -> output_87d5a6\n        }\n\n        instance(x: 390, y: -14) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -210, y: 34, name: \"execute\") trigger() execute_85b1f1\n        in(x: -209, y: 168, name: \"list\") property(List) list_1c7a1e\n        in(x: -208, y: 304, name: \"steps\") property(Number) steps_5b3d8f\n\n        out(x: 849, y: 216, name: \"output\") property(List) data_0_0\n        out(x: 837, y: 34, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 546, y: 218) slice_5b2d2a root.Std_k98ojb.List.Slice {}\n        instance(x: 280, y: 231) length_c9e1c9 root.Std_k98ojb.List.Length {}\n        instance(x: 467, y: 219) mod_5f9d6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 280, y: 365) sub_9a8e5a root.Std_k98ojb.Math.Sub {}\n        instance(x: 474, y: 366) slice_51f8d2 root.Std_k98ojb.List.Slice {}\n        instance(x: 608, y: 218) concat_8e5c8a root.Std_k98ojb.List.Concat {}\n\n        execute_85b1f1 -> length_c9e1c9.execute\n        list_1c7a1e -> length_c9e1c9.list\n        steps_5b3d8f -> mod_5f9d6c.value\n        length_c9e1c9.length -> mod_5f9d6c.divisor\n        mod_5f9d6c.result -> sub_9a8e5a.first\n        length_c9e1c9.length -> sub_9a8e5a.second\n        sub_9a8e5a.result -> slice_5b2d2a.start\n        0 -> slice_5b2d2a.end\n        list_1c7a1e -> slice_5b2d2a.list\n        mod_5f9d6c.result -> slice_51f8d2.start\n        -1 -> slice_51f8d2.end\n        list_1c7a1e -> slice_51f8d2.list\n        slice_5b2d2a.slice -> concat_8e5c8a.left\n        slice_51f8d2.slice -> concat_8e5c8a.right\n        concat_8e5c8a.result -> data_0_0\n    }\n\n    \n\n    instance(x: -347, y: 216) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7d6f8a\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_ae2b9c\n\n        out(x: 1145, y: 198, name: \"continue\") trigger() continue_3b7d8f\n        out(x: 1169, y: -20, name: \"output\") property(Number) output_3a8e9b\n\n        instance(x: 84, y: 56) reduce_4c7b8d root.Std_k98ojb.Iteration.Reduce {\n            handler: sum_handler\n        }\n        func(doc: \"Handler function for reducing the array.\") sum_handler {\n            in(x: -230, y: 118, name: \"execute\") trigger() execute_5f6g7h\n            in(x: -249, y: 83, name: \"acc\") property(Number) acc_8a9b0c\n            in(x: -222, y: 48, name: \"item\") property(Number) item_1d2e3f\n\n            out(x: 1067, y: 105, name: \"continue\") trigger() continue_4g5h6i\n            out(x: 1091, y: 70, name: \"output\") property(Number) output_5j6k7l\n\n            instance(x: 82, y: -30) add_6m7n8o root.Std_k98ojb.Math.Add {}\n\n            acc_8a9b0c -> add_6m7n8o.first\n            item_1d2e3f -> add_6m7n8o.second\n            execute_5f6g7h -> add_6m7n8o.execute\n            add_6m7n8o.result -> output_5j6k7l\n            add_6m7n8o.result -> continue_4g5h6i\n        }\n        0 -> reduce_4c7b8d.initial_value\n        numbers_ae2b9c -> reduce_4c7b8d.items\n        execute_7d6f8a -> reduce_4c7b8d.execute\n        reduce_4c7b8d.output -> output_3a8e9b\n        reduce_4c7b8d.continue -> continue_3b7d8f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -145) floordiv_8c3d7f root.Std_k98ojb.Math.Div {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> floordiv_8c3d7f.first\n        Math.Sqrt(input: input_f5c03d) -> floordiv_8c3d7f.second\n        floordiv_8c3d7f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> and_80a119.left\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_07b8c7.then -> if_e19a62.execute\n        and_80a119.result -> if_e19a62.predicate\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> out_f3db9f\n        true -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 136, name: \"a\") property(Int) a_a2b59d\n            in(x: 247, y: 136, name: \"b\") property(Int) b_82d404\n\n            out(x: 126, y: 252, name: \"output\") property(Bool) output_a8e56c\n\n            instance(x: 127, y: 39) mul_3b9a2f root.Std_k98ojb.Math.Mul {}\n            instance(x: 0, y: 214) less_than_or_equal_9d4b5f root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            a_a2b59d -> mul_3b9a2f.first\n            b_82d404 -> mul_3b9a2f.second\n            mul_3b9a2f.result -> less_than_or_equal_9d4b5f.left\n            -1 -> less_than_or_equal_9d4b5f.right\n            less_than_or_equal_9d4b5f.result -> output_a8e56c\n        }\n\n        instance(x: 0, y: 0) check_opposite_signs_a2b59d root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1088, y: -256) logic_equal_b4554f root.Std_k98ojb.Logic.Equal {}\n\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> logic_equal_b4554f.left\n        0 -> logic_equal_b4554f.right\n        logic_equal_b4554f.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        input_0 -> replace_306f69.input\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) uniqueList_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"if (context == null || !context.contains(it)) { context = context == null ? [it] : List.Concat(context, [it]); } context\"\n        }\n        instance(x: 1065, y: 76) product_4d2c2b root.Std_k98ojb.Iteration.Reduce {\n            handler: \"result * it\"\n        }\n        list_ai -> uniqueList_7b3b7b.items\n        uniqueList_7b3b7b.output_list -> product_4d2c2b.items\n        product_4d2c2b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_58a76b\n            in(x: -333, y: 123, name: \"list2\") property(List) list2_e7f4c4\n\n            out(x: 430, y: 90, name: \"output\") property(List) output_5d86e1\n\n            instance(x: -120, y: 88) difference_a7b934 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 200) difference_b2c5f1 root.Std_k98ojb.Sets.Difference {}\n\n            list1_58a76b -> difference_a7b934.left\n            list2_e7f4c4 -> difference_a7b934.right\n\n            list2_e7f4c4 -> difference_b2c5f1.left\n            list1_58a76b -> difference_b2c5f1.right\n\n            instance(x: 100, y: 160) concat_4e8d92 root.Std_k98ojb.List.Concat {}\n            difference_a7b934.difference -> concat_4e8d92.left\n            difference_b2c5f1.difference -> concat_4e8d92.right\n\n            concat_4e8d92.concatenatedList -> output_5d86e1\n        }\n\n        instance(x: 300, y: -70) find_dissimilar_elements_123abc root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_0b8d3a\n        in(x: -174, y: 160, name: \"list\") property(List) list_6c9f3e\n        in(x: -174, y: 256, name: \"positions\") property(Number) positions_2b8d8a\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a4e5f2\n\n        instance(x: 294, y: -19) length_f9a4d6 root.Std_k98ojb.List.Length {}\n        instance(x: 557, y: 167) concat_23c0f3 root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: -99) sub_3e62d8 root.Std_k98ojb.Math.Sub {}\n        instance(x: 700, y: -188) modulo_8c7a2f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 546, y: -286) slice_6d3e7f root.Std_k98ojb.List.Slice {}\n        instance(x: 698, y: -391) sub_8c056a root.Std_k98ojb.Math.Sub {}\n\n        execute_0b8d3a -> length_f9a4d6.trigger\n        list_6c9f3e -> length_f9a4d6.list\n        length_f9a4d6.result -> modulo_8c7a2f.value\n        positions_2b8d8a -> modulo_8c7a2f.divisor\n        modulo_8c7a2f.result -> sub_8c056a.first\n        length_f9a4d6.result -> sub_8c056a.second\n        sub_8c056a.result -> slice_6d3e7f.start\n        -1 -> slice_6d3e7f.end\n        list_6c9f3e -> slice_6d3e7f.list\n        slice_6d3e7f.slice -> concat_23c0f3.left\n        sub_8c056a.result -> sub_3e62d8.first\n        0 -> sub_3e62d8.second\n        sub_3e62d8.result -> slice_6d3e7f.start\n        sub_8c056a.result -> slice_6d3e7f.end\n        list_6c9f3e -> slice_6d3e7f.list\n        slice_6d3e7f.slice -> concat_23c0f3.right\n        concat_23c0f3.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5f9e2b\n        in(x: 0, y: -183, name: \"array\") property(List) array_f6c4a7\n\n        out(x: 0, y: -366, name: \"output\") property(Number) output_2a7b3f\n\n        instance(x: -259, y: -221) reduce_a9e8f4 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"reducer function\") reducer {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_3b7a5c\n                in(x: 0, y: -124, name: \"acc\") property(Number) acc_bf9d8a\n                in(x: 0, y: -249, name: \"item\") property(Number) item_6e3f3b\n\n                out(x: 0, y: -375, name: \"output\") property(Number) output_1c3e4d\n\n                instance(x: -148, y: -129) add_ded9a4 root.Std_k98ojb.Math.Add {}\n\n                acc_bf9d8a -> add_ded9a4.first\n                item_6e3f3b -> add_ded9a4.second\n                execute_3b7a5c -> add_ded9a4.execute\n                add_ded9a4.result -> output_1c3e4d\n            }\n        }\n\n        0 -> reduce_a9e8f4.initial_value\n        array_f6c4a7 -> reduce_a9e8f4.items\n        execute_5f9e2b -> reduce_a9e8f4.execute\n        reduce_a9e8f4.output -> output_2a7b3f\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1362, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1247, y: -313) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.right\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_2f9d09.input\n        not_2f9d09.output -> if_07b8c7.predicate\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        input_f5c03d -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> for_8cb3f6.predicate\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.then -> out_f3db9f\n        for_8cb3f6.done -> continue_8ba06b\n        for_8cb3f6.next -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8b3f4d\n        in(x: 679, y: 130, name: \"b\") property(Int) b_2c4e5f\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_7a8b9c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_1d2e3f root.Std_k98ojb.Math.GreaterThan {\n            left: a\n            right: b\n        }\n        instance(x: 0, y: 242) lessthanorequal_4g5h6i root.Std_k98ojb.Math.LessThanOrEqual {\n            left: a\n            right: b\n        }\n\n        greaterthan_1d2e3f.result -> and_7a8b9c.left\n        lessthanorequal_4g5h6i.result -> and_7a8b9c.right\n        and_7a8b9c.result -> output_a2b59d\n\n        a_8b3f4d -> greaterthan_1d2e3f.left\n        b_2c4e5f -> greaterthan_1d2e3f.right\n        a_8b3f4d -> lessthanorequal_4g5h6i.left\n        b_2c4e5f -> lessthanorequal_4g5h6i.right\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_9a7c3f root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_9a7c3f.list1\n            difference2_cd5cc4.difference -> concat_9a7c3f.list2\n\n            concat_9a7c3f.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5d2b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -167) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -100) sub_875ddb root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -67) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 200, y: -67) slice_1a38cc root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_5c4634.execute\n        list_0c1a77 -> length_5c4634.list\n        steps_5d2b9f -> modulo_14921d.value\n        length_5c4634.length -> modulo_14921d.divisor\n        modulo_14921d.result -> sub_875ddb.first\n        length_5c4634.length -> sub_875ddb.second\n        sub_875ddb.result -> slice_9ab286.start\n        list_0c1a77 -> slice_9ab286.list\n        -1 -> slice_9ab286.end\n        modulo_14921d.result -> slice_1a38cc.end\n        0 -> slice_1a38cc.start\n        list_0c1a77 -> slice_1a38cc.list\n        slice_9ab286.slice -> concat_9b38cc.left\n        slice_1a38cc.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 10, y: 25, name: \"a\") property(Int) a_6c789f\n        in(x: 314, y: 25, name: \"b\") property(Int) b_f3e2d1\n\n        out(x: 420, y: 25, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 160, y: 25) and_8a7f9c root.Std_k98ojb.Logic.And {}\n        instance(x: 300, y: 25) greaterthan_4e5f6g root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 100, y: 25) lessthanorequal_a7b8c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_6c789f -> greaterthan_4e5f6g.left\n        b_f3e2d1 -> greaterthan_4e5f6g.right\n\n        a_6c789f -> lessthanorequal_a7b8c9.left\n        b_f3e2d1 -> lessthanorequal_a7b8c9.right\n\n        greaterthan_4e5f6g.result -> and_8a7f9c.input_0\n        lessthanorequal_a7b8c9.result -> and_8a7f9c.input_1\n\n        and_8a7f9c.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 587, y: -100) modulo_2d4a5e root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_2d4a5e.value\n        11 -> modulo_2d4a5e.divisor\n        instance(x: 767, y: -100) equal_1f6c9b root.Std_k98ojb.Logic.Equal {}\n        modulo_2d4a5e.result -> equal_1f6c9b.left\n        0 -> equal_1f6c9b.right\n        equal_1f6c9b.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") CalculateUniqueProduct {\n        in(x: -469, y: 108, name: \"list\") property(List) list_ai\n        out(x: 375, y: 217, name: \"product\") property(Number) product_ai\n        instance(x: -135, y: 196) unique_list root.Std_k98ojb.List.Flatten {\n            list: [list_ai]\n        }\n        instance(x: 40, y: 125) filter_unique root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc:\"Check if the item is already in the unique list.\") IsUnique {\n                in(x: -376, y: 144, name: \"item\") property(Any) item_ai\n                in(x: -250, y: 298, name: \"unique_list\") property(List) unique_list_ai\n                out(x: 378, y: 196, name: \"is_unique\") property(Boolean) is_unique_ai\n                instance(x: 42, y: 185) contains root.Std_k98ojb.List.Contains {\n                    item: item_ai\n                }\n                unique_list_ai -> contains.list\n                instance(x: 37, y: 265) not_contains root.Std_k98ojb.Logic.Not {}\n                contains.contains -> not_contains.input\n                not_contains.output -> is_unique_ai\n            }\n        }\n        list_ai -> filter_unique.items\n        unique_list.result -> filter_unique.context\n        instance(x: 347, y: 125) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc:\"Multiply the accumulator with the current item.\") Multiply {\n                in(x: -360, y: 125, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -240, y: 125, name: \"item\") property(Number) item_ai\n                out(x: 378, y: 125, name: \"product\") property(Number) product_ai\n                instance(x: 46, y: 195) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> product_ai\n            }\n        }\n        filter_unique.output_list -> reduce_product.items\n        instance(x: -203, y: 274) initial_value root.Std_k98ojb.List.FirstItem {}\n        list_ai -> initial_value.list\n        initial_value.item -> reduce_product.initialValue\n        reduce_product.result -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -360, y: 21, name: \"list1\") property(List) list1_874d5a\n            in(x: -369, y: 114, name: \"list2\") property(List) list2_b6f7c1\n\n            out(x: 409, y: 67, name: \"output\") property(List) output_83d5e7\n\n            instance(x: -138, y: 66) difference_1a8b67 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -142, y: 170) difference_2a8b67 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 135, y: 118) concat_1a8b67 root.Std_k98ojb.List.Concat {}\n\n            list1_874d5a -> difference_1a8b67.left\n            list2_b6f7c1 -> difference_1a8b67.right\n\n            list2_b6f7c1 -> difference_2a8b67.left\n            list1_874d5a -> difference_2a8b67.right\n\n            difference_1a8b67.difference -> concat_1a8b67.list1\n            difference_2a8b67.difference -> concat_1a8b67.list2\n\n            concat_1a8b67.output_list -> output_83d5e7\n        }\n\n        instance(x: 409, y: -14) find_dissimilar_elements_1 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -210, y: 34, name: \"execute\") trigger() execute_85a8b2\n        in(x: -209, y: 168, name: \"list\") property(List) list_1d7f4e\n        in(x: -208, y: 302, name: \"steps\") property(Number) steps_5c7b1a\n\n        out(x: 849, y: 206, name: \"output\") property(List) data_0_0\n        out(x: 818, y: 113, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 576, y: 211) slice_8a3b4e root.Std_k98ojb.List.Slice {}\n        instance(x: 576, y: -103) slice_9d5c79 root.Std_k98ojb.List.Slice {}\n        instance(x: 325, y: 324) length_2f25a8 root.Std_k98ojb.List.Length {}\n        instance(x: 363, y: 106) modulo_5c75d8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 636, y: -104) concat_e2e4f1 root.Std_k98ojb.List.Concat {}\n\n        execute_85a8b2 -> length_2f25a8.execute\n        list_1d7f4e -> length_2f25a8.list\n        steps_5c7b1a -> modulo_5c75d8.value\n        length_2f25a8.length -> modulo_5c75d8.divisor\n        modulo_5c75d8.result -> slice_9d5c79.start\n        list_1d7f4e -> slice_9d5c79.list\n        0 -> slice_9d5c79.end\n        slice_9d5c79.slice -> concat_e2e4f1.right\n        modulo_5c75d8.result -> slice_8a3b4e.start\n        list_1d7f4e -> slice_8a3b4e.list\n        -1 -> slice_8a3b4e.end\n        slice_8a3b4e.slice -> concat_e2e4f1.left\n        concat_e2e4f1.result -> data_0_0\n\n    }\n\n    \n\n    instance(x: -259, y: 76) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7d68a5\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_e1e5b8\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: 160) reduce_f4b3c1 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"Reduce handler for summing array elements.\") handler {\n                in(x: -157, y: 224, name: \"execute\") trigger() execute_2f6e0c\n                in(x: -319, y: 88, name: \"acc\") property(Number) acc_f2d31b\n                in(x: -322, y: -56, name: \"item\") property(Number) item_c47a6f\n\n                out(x: 108, y: 96, name: \"continue\") trigger() continue_6c46e7\n                out(x: 111, y: 234, name: \"result\") property(Number) result_f451d6\n\n                instance(x: -15, y: 140) add_a9b8a7 root.Std_k98ojb.Math.Add {}\n\n                acc_f2d31b -> add_a9b8a7.first\n                item_c47a6f -> add_a9b8a7.second\n                execute_2f6e0c -> add_a9b8a7.execute\n                add_a9b8a7.result -> result_f451d6\n                add_a9b8a7.result -> continue_6c46e7\n            }\n        }\n\n        0 -> reduce_f4b3c1.initial_value\n        numbers_e1e5b8 -> reduce_f4b3c1.items\n        execute_7d68a5 -> reduce_f4b3c1.execute\n        reduce_f4b3c1.result -> output_732a8a\n        reduce_f4b3c1.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -145) floordiv_88f8c7 root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> floordiv_88f8c7.first\n        for_8cb3f6.item -> floordiv_88f8c7.second\n        floordiv_88f8c7.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 136, name: \"a\") property(Int) a_a2b59d\n            in(x: 247, y: 136, name: \"b\") property(Int) b_82d404\n\n            out(x: 126, y: 252, name: \"output\") property(Bool) output_a8e56c\n\n            instance(x: 127, y: 39) mul_3a4b5c root.Std_k98ojb.Math.Mul {}\n            instance(x: 0, y: 235) less_than_or_equal_9d8e5f root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            a_a2b59d -> mul_3a4b5c.first\n            b_82d404 -> mul_3a4b5c.second\n            mul_3a4b5c.result -> less_than_or_equal_9d8e5f.left\n            less_than_or_equal_9d8e5f.right: 0\n            less_than_or_equal_9d8e5f.result -> output_a8e56c\n        }\n\n        instance(x: 234, y: -178) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 586, y: -493) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_f11fda.value\n        11 -> modulo_f11fda.divisor\n        modulo_f11fda.result -> Std.IfExpression_62a4e7.expression\n        instance(x: 984, y: -514) Std.IfExpression_62a4e7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"value == 0 ? true : false\"\n        }\n        Std.IfExpression_62a4e7.value -> out_f3db9f\n        execute_27b8c3 -> modulo_f11fda.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        input_0 -> replace_306f69.input\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) uniqueList_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: function(doc:\"handler for reducing to unique list.\") UniqueHandler {\n                in(x: -531, y: 2, name: \"acc\") property(List) acc_ai\n                in(x: 0, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(List) output_ai\n                instance(x: 189, y: 207) contains_5o4k root.Std_k98ojb.List.Contains {\n                    item: item_ai\n                }\n                acc_ai -> contains_5o4k.list\n                instance(x: 369, y: 209) if_5o4k root.Std_k98ojb.Std.IfExpression {\n                    expression: \"!contains\"\n                }\n                contains_5o4k.contains -> if_5o4k.contains\n                item_ai -> if_5o4k.item\n                instance(x: 678, y: 209) add_5o4k root.Std_k98ojb.List.Add {\n                    item: item_ai\n                }\n                acc_ai -> add_5o4k.list\n                if_5o4k.then -> add_5o4k.trigger\n                instance(x: 678, y: 309) pass_5o4k root.Std_k98ojb.List.Empty {}\n                if_5o4k.else -> pass_5o4k.trigger\n                acc_ai -> pass_5o4k.list\n                add_5o4k.listWithItem -> output_ai\n                pass_5o4k.list -> output_ai\n            }\n        }\n        instance(x: 772, y: 196) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: function(doc:\"handler for calculating product.\") ProductHandler {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: 0, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 189, y: 207) mul_5o4k root.Std_k98ojb.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                mul_5o4k.result -> output_ai\n            }\n        }\n        list_ai -> uniqueList_7b3b7b.list\n        uniqueList_7b3b7b.accumulator -> product_7b3b7b.initialValue\n        uniqueList_7b3b7b.result -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_58d71a\n            in(x: -334, y: 106, name: \"list2\") property(List) list2_e2c4f1\n\n            out(x: 441, y: 91, name: \"output\") property(List) output_28d7a4\n\n            instance(x: -135, y: 106) difference_7f6e6b root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 30) difference_6a5c33 root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 24, y: 69) concat_7e9b1d root.Std_k98ojb.List.Concat {}\n            \n            list1_58d71a -> difference_6a5c33.left\n            list2_e2c4f1 -> difference_6a5c33.right\n\n            list2_e2c4f1 -> difference_7f6e6b.left\n            list1_58d71a -> difference_7f6e6b.right\n            \n            difference_6a5c33.difference -> concat_7e9b1d.list1\n            difference_7f6e6b.difference -> concat_7e9b1d.list2\n\n            concat_7e9b1d.output_list -> output_28d7a4\n        }\n\n        instance(x: 350, y: -186) find_dissimilar_elements_63d9f6 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -70, name: \"shifts\") property(Number) shifts_2e5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) slice_6d4a9c root.Std_k98ojb.List.Slice {}\n        instance(x: 259, y: 172) slice_3f5c2e root.Std_k98ojb.List.Slice {}\n        instance(x: 404, y: -10) mod_6a3a3a root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> slice_6d4a9c.execute\n        list_0c1a77 -> slice_6d4a9c.list\n        shifts_2e5b9f -> mod_6a3a3a.value\n        List.Length(list: list_0c1a77) -> mod_6a3a3a.divisor\n        mod_6a3a3a.result -> slice_6d4a9c.start\n        Math.Sub(first: List.Length(list: list_0c1a77), second: mod_6a3a3a.result) -> slice_3f5c2e.start\n        -1 -> slice_3f5c2e.end\n        list_0c1a77 -> slice_3f5c2e.list\n        slice_3f5c2e.slice -> concat_9b38cc.left\n        slice_6d4a9c.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        continue_a7f942 -> concat_9b38cc.continue\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5f9e2b\n        in(x: 0, y: -183, name: \"array\") property(List) array_f6d7a4\n\n        out(x: 0, y: -366, name: \"output\") property(Number) output_24c16f\n\n        instance(x: -259, y: -221) reduce_a68bce root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_2d3c78\n                in(x: -154, y: -146, name: \"acc\") property(Number) acc_a3d9b3\n                in(x: -160, y: -338, name: \"item\") property(Number) item_28a67f\n\n                out(x: 153, y: -246, name: \"output\") property(Number) output_f7c09e\n\n                instance(x: -110, y: -245) add_a9b6d2 root.Std_k98ojb.Math.Add {}\n\n                acc_a3d9b3 -> add_a9b6d2.first\n                item_28a67f -> add_a9b6d2.second\n                add_a9b6d2.result -> output_f7c09e\n            }\n        }\n\n        0 -> reduce_a68bce.initial_value\n        array_f6d7a4 -> reduce_a68bce.items\n        execute_5f9e2b -> reduce_a68bce.execute\n        reduce_a68bce.output -> output_24c16f\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1362, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1247, y: -313) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.right\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_2f9d09.input\n        not_2f9d09.output -> if_07b8c7.predicate\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        input_f5c03d -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> for_8cb3f6.predicate\n        if_07b8c7.then -> continue_8ba06b\n        for_8cb3f6.done -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8b3f4d\n        in(x: 679, y: 130, name: \"b\") property(Int) b_2c4e5f\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_7a8b9c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_1d2e3f root.Std_k98ojb.Math.GreaterThan {\n            left: a\n            right: b\n        }\n        instance(x: 0, y: 242) lessthanorequal_4g5h6i root.Std_k98ojb.Math.LessThanOrEqual {\n            left: a\n            right: b\n        }\n\n        greaterthan_1d2e3f.result -> and_7a8b9c.left\n        lessthanorequal_4g5h6i.result -> and_7a8b9c.right\n        and_7a8b9c.result -> output_a2b59d\n\n        a_8b3f4d -> greaterthan_1d2e3f.left\n        b_2c4e5f -> greaterthan_1d2e3f.right\n        a_8b3f4d -> lessthanorequal_4g5h6i.left\n        b_2c4e5f -> lessthanorequal_4g5h6i.right\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_9a7c3f root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_9a7c3f.list1\n            difference2_cd5cc4.difference -> concat_9a7c3f.list2\n\n            concat_9a7c3f.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -100, name: \"steps\") property(Number) steps_5d2b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 454, y: -167) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 200, y: -167) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: -100) sub_875ddb root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -67) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 200, y: -67) slice_1a38cc root.Std_k98ojb.List.Slice {}\n\n        execute_1ddb9f -> length_5c4634.execute\n        list_0c1a77 -> length_5c4634.list\n        steps_5d2b9f -> modulo_14921d.value\n        length_5c4634.length -> modulo_14921d.divisor\n        modulo_14921d.result -> sub_875ddb.first\n        length_5c4634.length -> sub_875ddb.second\n        sub_875ddb.result -> slice_9ab286.start\n        list_0c1a77 -> slice_9ab286.list\n        -1 -> slice_9ab286.end\n        modulo_14921d.result -> slice_1a38cc.end\n        0 -> slice_1a38cc.start\n        list_0c1a77 -> slice_1a38cc.list\n        slice_9ab286.slice -> concat_9b38cc.left\n        slice_1a38cc.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 10, y: 25, name: \"a\") property(Int) a_6c789f\n        in(x: 314, y: 25, name: \"b\") property(Int) b_f3e2d1\n\n        out(x: 420, y: 25, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 160, y: 25) and_8a7f9c root.Std_k98ojb.Logic.And {}\n        instance(x: 300, y: 25) greaterthan_4e5f6g root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 100, y: 25) lessthanorequal_a7b8c9 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_6c789f -> greaterthan_4e5f6g.left\n        b_f3e2d1 -> greaterthan_4e5f6g.right\n\n        a_6c789f -> lessthanorequal_a7b8c9.left\n        b_f3e2d1 -> lessthanorequal_a7b8c9.right\n\n        greaterthan_4e5f6g.result -> and_8a7f9c.input_0\n        lessthanorequal_a7b8c9.result -> and_8a7f9c.input_1\n\n        and_8a7f9c.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 587, y: -100) modulo_2d4a5e root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_2d4a5e.value\n        11 -> modulo_2d4a5e.divisor\n        instance(x: 767, y: -100) equal_1f6c9b root.Std_k98ojb.Logic.Equal {}\n        modulo_2d4a5e.result -> equal_1f6c9b.left\n        0 -> equal_1f6c9b.right\n        equal_1f6c9b.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        \n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a given list.\") CalculateUniqueProduct {\n        in(x: -469, y: 108, name: \"list\") property(List) list_ai\n        out(x: 375, y: 217, name: \"product\") property(Number) product_ai\n        instance(x: -135, y: 196) unique_list root.Std_k98ojb.List.Flatten {\n            list: [list_ai]\n        }\n        instance(x: 40, y: 125) filter_unique root.Std_k98ojb.Iteration.Filter {\n            handler: func(doc:\"Check if the item is already in the unique list.\") IsUnique {\n                in(x: -376, y: 144, name: \"item\") property(Any) item_ai\n                in(x: -250, y: 298, name: \"unique_list\") property(List) unique_list_ai\n                out(x: 378, y: 196, name: \"is_unique\") property(Boolean) is_unique_ai\n                instance(x: 42, y: 185) contains root.Std_k98ojb.List.Contains {\n                    item: item_ai\n                }\n                unique_list_ai -> contains.list\n                instance(x: 37, y: 265) not_contains root.Std_k98ojb.Logic.Not {}\n                contains.contains -> not_contains.input\n                not_contains.output -> is_unique_ai\n            }\n        }\n        list_ai -> filter_unique.items\n        unique_list.result -> filter_unique.context\n        instance(x: 347, y: 125) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc:\"Multiply the accumulator with the current item.\") Multiply {\n                in(x: -360, y: 125, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -240, y: 125, name: \"item\") property(Number) item_ai\n                out(x: 378, y: 125, name: \"product\") property(Number) product_ai\n                instance(x: 46, y: 195) multiply root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply.result -> product_ai\n            }\n        }\n        filter_unique.output_list -> reduce_product.items\n        instance(x: -203, y: 274) initial_value root.Std_k98ojb.List.FirstItem {}\n        list_ai -> initial_value.list\n        initial_value.item -> reduce_product.initialValue\n        reduce_product.result -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -360, y: 21, name: \"list1\") property(List) list1_874d5a\n            in(x: -369, y: 114, name: \"list2\") property(List) list2_b6f7c1\n\n            out(x: 409, y: 67, name: \"output\") property(List) output_83d5e7\n\n            instance(x: -138, y: 66) difference_1a8b67 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -142, y: 170) difference_2a8b67 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 135, y: 118) concat_1a8b67 root.Std_k98ojb.List.Concat {}\n\n            list1_874d5a -> difference_1a8b67.left\n            list2_b6f7c1 -> difference_1a8b67.right\n\n            list2_b6f7c1 -> difference_2a8b67.left\n            list1_874d5a -> difference_2a8b67.right\n\n            difference_1a8b67.difference -> concat_1a8b67.list1\n            difference_2a8b67.difference -> concat_1a8b67.list2\n\n            concat_1a8b67.output_list -> output_83d5e7\n        }\n\n        instance(x: 409, y: -14) find_dissimilar_elements_1 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -210, y: 34, name: \"execute\") trigger() execute_85a8b2\n        in(x: -209, y: 168, name: \"list\") property(List) list_1d7f4e\n        in(x: -208, y: 302, name: \"steps\") property(Number) steps_5c7b1a\n\n        out(x: 849, y: 206, name: \"output\") property(List) data_0_0\n        out(x: 818, y: 113, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 576, y: 211) slice_8a3b4e root.Std_k98ojb.List.Slice {}\n        instance(x: 576, y: -103) slice_9d5c79 root.Std_k98ojb.List.Slice {}\n        instance(x: 325, y: 324) length_2f26a1 root.Std_k98ojb.List.Length {}\n        instance(x: 332, y: -20) modulo_4d74e9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 576, y: 85) sub_a3f31c root.Std_k98ojb.Math.Sub {}\n\n        execute_85a8b2 -> length_2f26a1.execute\n        list_1d7f4e -> length_2f26a1.list\n        steps_5c7b1a -> modulo_4d74e9.value\n        length_2f26a1.length -> modulo_4d74e9.divisor\n        modulo_4d74e9.result -> sub_a3f31c.second\n        length_2f26a1.length -> sub_a3f31c.first\n        sub_a3f31c.result -> slice_8a3b4e.start\n        0 -> slice_9d5c79.start\n        modulo_4d74e9.result -> slice_9d5c79.end\n        list_1d7f4e -> slice_9d5c79.list\n        sub_a3f31c.result -> slice_8a3b4e.end\n        -1 -> slice_8a3b4e.end\n        list_1d7f4e -> slice_8a3b4e.list\n        slice_8a3b4e.slice -> data_0_0\n        continue_a7f942 -> sub_a3f31c.continue\n        continue_a7f942 -> modulo_4d74e9.continue\n        continue_a7f942 -> length_2f26a1.continue\n    }\n\n    \n\n    instance(x: -250, y: -28) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7d68a5\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_e1e5b8\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: 160) reduce_f4b3c1 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"Reduce handler for summing array elements.\") handler {\n                in(x: -157, y: 224, name: \"execute\") trigger() execute_2f6e0c\n                in(x: -319, y: 88, name: \"acc\") property(Number) acc_f2d31b\n                in(x: -322, y: -56, name: \"item\") property(Number) item_c47a6f\n\n                out(x: 108, y: 96, name: \"continue\") trigger() continue_6c46e7\n                out(x: 111, y: 234, name: \"result\") property(Number) result_f455d6\n\n                instance(x: -15, y: 140) add_a9b8a7 root.Std_k98ojb.Math.Add {}\n\n                acc_f2d31b -> add_a9b8a7.first\n                item_c47a6f -> add_a9b8a7.second\n                execute_2f6e0c -> add_a9b8a7.execute\n                add_a9b8a7.result -> result_f455d6\n                add_a9b8a7.result -> continue_6c46e7\n            }\n        }\n\n        0 -> reduce_f4b3c1.initial_value\n        numbers_e1e5b8 -> reduce_f4b3c1.items\n        execute_7d68a5 -> reduce_f4b3c1.execute\n        reduce_f4b3c1.result -> output_732a8a\n        reduce_f4b3c1.continue -> continue_d9efd7\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -145) floordiv_88f8c7 root.Std_k98ojb.Math.Div {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> floordiv_88f8c7.first\n        for_8cb3f6.item -> floordiv_88f8c7.second\n        floordiv_88f8c7.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_07b8c7.value -> out_f3db9f\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 136, name: \"a\") property(Int) a_a2b59d\n            in(x: 247, y: 136, name: \"b\") property(Int) b_82d404\n\n            out(x: 126, y: 252, name: \"output\") property(Bool) output_a8e56c\n\n            instance(x: 127, y: 39) mul_3a4b5c root.Std_k98ojb.Math.Mul {}\n            instance(x: 0, y: 235) less_than_or_equal_9d8e5f root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            a_a2b59d -> mul_3a4b5c.first\n            b_82d404 -> mul_3a4b5c.second\n            mul_3a4b5c.result -> less_than_or_equal_9d8e5f.left\n            less_than_or_equal_9d8e5f.right: 0\n            less_than_or_equal_9d8e5f.result -> output_a8e56c\n        }\n\n        instance(x: 234, y: -178) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 586, y: -493) modulo_f11fda root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_f11fda.value\n        11 -> modulo_f11fda.divisor\n        modulo_f11fda.result -> Std.IfExpression_62a4e7.expression\n        instance(x: 984, y: -514) Std.IfExpression_62a4e7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"value == 0 ? true : false\"\n        }\n        Std.IfExpression_62a4e7.value -> out_f3db9f\n        execute_27b8c3 -> modulo_f11fda.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        input_0 -> replace_306f69.input\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 772, y: 76) uniqueList_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: function(doc:\"handler for reducing to unique list.\") UniqueHandler {\n                in(x: -531, y: 2, name: \"acc\") property(List) acc_ai\n                in(x: 0, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(List) output_ai\n                instance(x: 189, y: 207) contains_5tj4 root.Std_k98ojb.List.Contains {\n                    item: item_ai\n                }\n                acc_ai -> contains_5tj4.list\n                instance(x: 369, y: 209) ifNotContains_5tj4 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"!contains\"\n                }\n                contains_5tj4.contains -> ifNotContains_5tj4.contains\n                instance(x: 576, y: 165) addToList_5tj4 root.Std_k98ojb.List.Add {\n                    item: item_ai\n                }\n                acc_ai -> addToList_5tj4.list\n                ifNotContains_5tj4.value -> addToList_5tj4.trigger\n                instance(x: 763, y: 162) passAcc_5tj4 root.Std_k98ojb.List.Empty {}\n                acc_ai -> passAcc_5tj4.list\n                ifNotContains_5tj4.value -> passAcc_5tj4.trigger\n                instance(x: 753, y: 260) selectList_5tj4 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"addToList ? addToList.listWithItem : passAcc.list\"\n                }\n                addToList_5tj4.listWithItem -> selectList_5tj4.addToList\n                passAcc_5tj4.list -> selectList_5tj4.passAcc\n                selectList_5tj4.value -> output_ai\n            }\n            initial: []\n        }\n        list_ai -> uniqueList_7b3b7b.items\n        instance(x: 980, y: 162) productOfUniqueNumbers_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            handler: function(doc:\"handler for calculating the product.\") ProductHandler {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: 0, y: 67, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                instance(x: 189, y: 207) multiply_5tj4 root.Std_k98ojb.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                multiply_5tj4.result -> output_ai\n            }\n            initial: 1\n        }\n        uniqueList_7b3b7b.result -> productOfUniqueNumbers_7b3b7b.items\n        productOfUniqueNumbers_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -340, y: 29, name: \"list1\") property(List) list1_58d71a\n            in(x: -334, y: 106, name: \"list2\") property(List) list2_e2c4f1\n\n            out(x: 441, y: 91, name: \"output\") property(List) output_28d7a4\n\n            instance(x: -135, y: 106) difference_7f6e6b root.Std_k98ojb.Sets.Difference {}\n            instance(x: -135, y: 30) difference_6a5c33 root.Std_k98ojb.Sets.Difference {}\n\n            instance(x: 24, y: 69) concat_7e9b1d root.Std_k98ojb.List.Concat {}\n            \n            list1_58d71a -> difference_6a5c33.left\n            list2_e2c4f1 -> difference_6a5c33.right\n\n            list2_e2c4f1 -> difference_7f6e6b.left\n            list1_58d71a -> difference_7f6e6b.right\n            \n            difference_6a5c33.difference -> concat_7e9b1d.list1\n            difference_7f6e6b.difference -> concat_7e9b1d.list2\n\n            concat_7e9b1d.output_list -> output_28d7a4\n        }\n\n        instance(x: 350, y: -186) find_dissimilar_elements_63d9f6 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -70, name: \"shifts\") property(Number) shifts_2e5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) slice_6d4a9c root.Std_k98ojb.List.Slice {}\n        instance(x: 259, y: 172) slice_3f5c2e root.Std_k98ojb.List.Slice {}\n        instance(x: 404, y: -10) mod_6a3a3a root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> slice_6d4a9c.execute\n        list_0c1a77 -> slice_6d4a9c.list\n        shifts_2e5b9f -> mod_6a3a3a.value\n        List.Length(list: list_0c1a77) -> mod_6a3a3a.divisor\n        mod_6a3a3a.result -> slice_6d4a9c.start\n        Math.Sub(first: List.Length(list: list_0c1a77), second: mod_6a3a3a.result) -> slice_3f5c2e.start\n        -1 -> slice_3f5c2e.end\n        list_0c1a77 -> slice_3f5c2e.list\n        slice_3f5c2e.slice -> concat_9b38cc.left\n        slice_6d4a9c.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n        continue_a7f942 -> concat_9b38cc.continue\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5c7e2b\n        in(x: 0, y: -183, name: \"array\") property(List) array_f9d6a4\n\n        out(x: 0, y: -366, name: \"output\") property(Number) output_714c2f\n\n        instance(x: -158, y: -214) reduce_a0b8cf root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") sum_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_963e17\n                in(x: -254, y: -173, name: \"acc\") property(Number) acc_a07b8d\n                in(x: -118, y: -173, name: \"item\") property(Number) item_9a6c3f\n\n                out(x: 254, y: -173, name: \"output\") property(Number) output_f41e03\n\n                instance(x: -128, y: -373) add_a4b3d2 root.Std_k98ojb.Math.Add {}\n\n                acc_a07b8d -> add_a4b3d2.first\n                item_9a6c3f -> add_a4b3d2.second\n                execute_963e17 -> add_a4b3d2.execute\n                add_a4b3d2.result -> output_f41e03\n            }\n        }\n\n        0 -> reduce_a0b8cf.init_value\n        array_f9d6a4 -> reduce_a0b8cf.items\n        execute_5c7e2b -> reduce_a0b8cf.execute\n        reduce_a0b8cf.output -> output_714c2f\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1362, y: -256) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1247, y: -313) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.right\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_2f9d09.input\n        not_2f9d09.output -> if_07b8c7.predicate\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        input_f5c03d -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> for_8cb3f6.predicate\n        if_07b8c7.then -> continue_8ba06b\n        for_8cb3f6.done -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8f9b1e\n        in(x: 67, y: 130, name: \"b\") property(Int) b_1d8c2f\n\n        out(x: 456, y: 130, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 251, y: 257) and_82d404 root.Std_k98ojb.Logic.And {}\n        instance(x: 5, y: 346) greaterthan_a8e56c root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: -6, y: 129) lessthanorequal_a49ae4 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f9b1e -> greaterthan_a8e56c.left\n        b_1d8c2f -> greaterthan_a8e56c.right\n\n        a_8f9b1e -> lessthanorequal_a49ae4.left\n        b_1d8c2f -> lessthanorequal_a49ae4.right\n\n        greaterthan_a8e56c.result -> and_82d404.input_0\n        lessthanorequal_a49ae4.result -> and_82d404.input_1\n\n        and_82d404.output -> output_a2b59d\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_67b2e9\n            in(x: -338, y: 110, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 60, name: \"output\") property(List) output_879de6\n\n            instance(x: -130, y: 60) difference_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: 60) concat_cd5cc4 root.Std_k98ojb.List.Concat {}\n\n            difference_78d487.difference -> concat_cd5cc4.left\n            difference_78d487.reverseDifference -> concat_cd5cc4.right\n\n            list1_67b2e9 -> difference_78d487.left\n            list2_c8f404 -> difference_78d487.right\n\n            concat_cd5cc4.output_list -> output_879de6\n        }\n\n        instance(x: 430, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -110, name: \"steps\") property(Number) steps_2b5e9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 450, y: -16) slice_7c8d2f root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -16) length_1e1b3a root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: 167) slice_7c8d2f_1 root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: 167) modulo_3e1a2b root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> length_1e1b3a.execute\n        list_0c1a77 -> length_1e1b3a.list\n        steps_2b5e9f -> modulo_3e1a2b.value\n        length_1e1b3a.length -> modulo_3e1a2b.divisor\n        modulo_3e1a2b.result -> slice_7c8d2f.start\n        modulo_3e1a2b.result -> slice_7c8d2f_1.end\n        list_0c1a77 -> slice_7c8d2f.list\n        list_0c1a77 -> slice_7c8d2f_1.list\n        0 -> slice_7c8d2f_1.start\n        -1 -> slice_7c8d2f.end\n        concat_9b38cc.left -> data_0_0\n        slice_7c8d2f.result -> concat_9b38cc.right\n        slice_7c8d2f_1.result -> concat_9b38cc.left\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 120, y: -45, name: \"a\") property(Int) a_7b8c9d\n        in(x: 360, y: -45, name: \"b\") property(Int) b_4f5g6h\n\n        out(x: 600, y: -120, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 300, y: -120) and_7a8b9c root.Std_k98ojb.Logic.And {}\n        instance(x: 240, y: -60) greaterthan_1d2e3f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 240, y: -180) lessthanorequal_4g5h6i root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_7b8c9d -> greaterthan_1d2e3f.left\n        b_4f5g6h -> greaterthan_1d2e3f.right\n\n        a_7b8c9d -> lessthanorequal_4g5h6i.left\n        b_4f5g6h -> lessthanorequal_4g5h6i.right\n\n        greaterthan_1d2e3f.result -> and_7a8b9c.left\n        lessthanorequal_4g5h6i.result -> and_7a8b9c.right\n\n        and_7a8b9c.result -> output_a2b59d\n    }\n\n    instance(x: 100, y: -300) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 500, y: -200) modulo_7a8d4c root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_7a8d4c.value\n        11 -> modulo_7a8d4c.divisor\n        instance(x: 600, y: -200) equal_12b3cd root.Std_k98ojb.Logic.Equal {}\n        modulo_7a8d4c.result -> equal_12b3cd.left\n        0 -> equal_12b3cd.right\n        equal_12b3cd.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_987f32 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_987f32.input\n        search_0 -> replace_987f32.search\n        replace_0 -> replace_987f32.replace\n        replace_987f32.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -215, y: 144) unique_9b3c7b root.Iteration.Reduce {\n            handler: func(doc:\"Handler function for reducing the list.\") Handler {\n                in(x: -486, y: 20, name: \"acc\") property(Number) acc_ai\n                in(x: -154, y: 19, name: \"item\") property(Number) item_ai\n                out(x: 374, y: 76, name: \"result\") property(Number) result_ai\n                instance(x: 208, y: 49) multiply_5c3a7b root.Math.Mul {\n                    first: acc_ai\n                    second: item_ai\n                }\n                multiply_5c3a7b.result -> result_ai\n            }\n        }\n        instance(x: -169, y: 280) flatten_9d3e7b root.List.Flatten {}\n        list_ai -> flatten_9d3e7b.list\n        flatten_9d3e7b.flattenedList -> unique_9b3c7b.items\n        instance(x: -169, y: 420) filter_9f3f7b root.Iteration.Filter {\n            handler: func(doc:\"Handler function for filtering the list.\") Handler {\n                in(x: -508, y: 22, name: \"item\") property(Number) item_ai\n                out(x: 364, y: 19, name: \"result\") property(Boolean) result_ai\n                instance(x: 207, y: 51) contains_6d3b7b root.List.Contains {\n                    list: unique_9b3c7b.acc\n                    item: item_ai\n                }\n                instance(x: 485, y: 48) not_6e3c7b root.Logic.Not {}\n                contains_6d3b7b.contains -> not_6e3c7b.input\n                not_6e3c7b.output -> result_ai\n            }\n        }\n        flatten_9d3e7b.flattenedList -> filter_9f3f7b.items\n        instance(x: 104, y: 528) add_703a7b root.List.Add {\n            item: List.FirstItem(filter_9f3f7b.output_list).item\n            list: unique_9b3c7b.acc\n        }\n        filter_9f3f7b.output_list -> add_703a7b.item\n        unique_9b3c7b.acc -> add_703a7b.list\n        add_703a7b.listWithItem -> unique_9b3c7b.acc\n        unique_9b3c7b.result -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n            in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -121, y: -71) difference_a_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: -77) difference_b_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 300, y: -77) concat_gh5dcd root.Std_k98ojb.List.Concat {}\n\n            list1_016b2e -> difference_a_78d487.left\n            list2_c8f404 -> difference_a_78d487.right\n\n            list2_c8f404 -> difference_b_cd5cc4.left\n            list1_016b2e -> difference_b_cd5cc4.right\n\n            difference_a_78d487.difference -> concat_gh5dcd.list1\n            difference_b_cd5cc4.difference -> concat_gh5dcd.list2\n\n            concat_gh5dcd.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -230, y: 154, name: \"execute\") trigger() execute_8a7b2d\n        in(x: -260, y: 39, name: \"list\") property(List) list_ae8c2f\n        in(x: -244, y: 271, name: \"steps\") property(Number) steps_e53a8b\n\n        out(x: 834, y: 206, name: \"output\") property(List) data_0_0\n        out(x: 829, y: 43, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: -158, y: 153) length_ea8c2f root.Std_k98ojb.List.Length {}\n        instance(x: 106, y: 163) modulo_1d8b4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 274, y: 154) generaterange_ae8c2f root.Std_k98ojb.List.GenerateRange {\n            from: 0\n        }\n        instance(x: 360, y: 163) slice_8a7b2d root.Std_k98ojb.List.Slice {}\n        instance(x: 452, y: 154) slice_ae8c2f root.Std_k98ojb.List.Slice {\n            end: -1\n        }\n        instance(x: 530, y: 163) concat_8a7b2d root.Std_k98ojb.List.Concat {}\n\n        execute_8a7b2d -> length_ea8c2f.trigger\n        list_ae8c2f -> length_ea8c2f.list\n        length_ea8c2f.length -> modulo_1d8b4c.value\n        steps_e53a8b -> modulo_1d8b4c.divisor\n        modulo_1d8b4c.result -> generaterange_ae8c2f.to\n        list_ae8c2f -> slice_8a7b2d.list\n        modulo_1d8b4c.result -> slice_8a7b2d.start\n        list_ae8c2f -> slice_ae8c2f.list\n        generaterange_ae8c2f.range -> slice_ae8c2f.start\n        slice_8a7b2d.slice -> concat_8a7b2d.left\n        slice_ae8c2f.slice -> concat_8a7b2d.right\n        concat_8a7b2d.result -> data_0_0\n    }\n\n    \n\n    instance(x: -346, y: 154) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7d68a5\n        in(x: -309, y: -13, name: \"numbers\") property(List) numbers_e1e3b8\n\n        out(x: 1154, y: 129, name: \"output\") property(Number) output_3d7f6c\n        out(x: 1154, y: 209, name: \"done\") trigger() done_d7d9a8\n\n        instance(x: -117, y: 133) reduce_c4e42c root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_86579c {\n                in(x: -100, y: 119, name: \"execute\") trigger() execute_4d5a53\n                in(x: -120, y: 37, name: \"acc\") property(Number) acc_ae8f6a\n                in(x: -122, y: 175, name: \"item\") property(Number) item_e9c4b9\n\n                out(x: 121, y: 103, name: \"output\") property(Number) output_8e4f6a\n                out(x: 121, y: 175, name: \"done\") trigger() done_c4d8a9\n\n                instance(x: -34, y: 105) add_1b1c7c root.Std_k98ojb.Math.Add {}\n\n                acc_ae8f6a -> add_1b1c7c.first\n                item_e9c4b9 -> add_1b1c7c.second\n                execute_4d5a53 -> add_1b1c7c.execute\n                add_1b1c7c.result -> output_8e4f6a\n            }\n        }\n\n        0 -> reduce_c4e42c.init_value\n        numbers_e1e3b8 -> reduce_c4e42c.items\n        execute_7d68a5 -> reduce_c4e42c.execute\n        reduce_c4e42c.output -> output_3d7f6c\n        reduce_c4e42c.done -> done_d7d9a8\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -245) floordiv_8e5d8c root.Std_k98ojb.Math.FloorDiv {}\n        instance(x: 307, y: -345) sqrt_ea1f9d root.Std_k98ojb.Math.Sqrt {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        sqrt_ea1f9d.result -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_8cb3f6.index -> floordiv_8e5d8c.first\n        1 -> floordiv_8e5d8c.second\n        input_f5c03d -> expression_b720d7.gen_0\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        if_e19a62.then -> continue_8ba06b\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_e19a62.else -> out_f3db9f\n        input_f5c03d -> sqrt_ea1f9d.value\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 169, name: \"a\") property(Int) a_faf6c2\n            in(x: 183, y: 169, name: \"b\") property(Int) b_a2b59d\n\n            out(x: 378, y: 169, name: \"output\") property(Bool) output_4a8e5c\n\n            instance(x: 0, y: 0) mul_7d9a8f root.Std_k98ojb.Math.Mul {}\n            instance(x: 237, y: -1) lt_18909a root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            a_faf6c2 -> mul_7d9a8f.first\n            b_a2b59d -> mul_7d9a8f.second\n            mul_7d9a8f.result -> lt_18909a.left\n            lt_18909a.right: -1\n            lt_18909a.result -> output_4a8e5c\n        }\n\n        instance(x: 36, y: -257) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -493) modulo_f6c3e1 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_f6c3e1.value\n        11 -> modulo_f6c3e1.divisor\n        modulo_f6c3e1.result -> out_f3db9f\n        execute_27b8c3 -> modulo_f6c3e1.trigger\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of a specified character with another character.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -165, y: -45, name: \"search\") property(String) search_0\n        in(x: -180, y: 30, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        input_0 -> replace_306f69.input\n        replace_306f69.output -> output_0\n    }\n\n    instance(x: 175, y: -25) replace_characters_695b5e root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Convert the given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 168, y: 169) unique_numbers_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: function(doc:\"reduce to unique numbers.\") UniqueReducer {\n                in(x: -531, y: 2, name: \"accumulated\") property(List) accumulated_ai\n                in(x: 430, y: -16, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n                instance(x: 229, y: 145) contains_7b3b7b root.Std_k98ojb.List.Contains {\n                    list: accumulated_ai\n                    item: item_ai\n                }\n                instance(x: 286, y: 275) add_7b3b7b root.Std_k98ojb.List.Add {\n                    item: item_ai\n                }\n\n                contains_7b3b7b.contains -> Std_if.value\n                Std_if.then.trigger -> accumulated_ai -> output_ai\n                Std_if.else.trigger -> item_ai -> add_7b3b7b.item\n                                accumulated_ai -> add_7b3b7b.list\n                                                add_7b3b7b.listWithItem -> output_ai\n\n                instance(x: 169, y: 58) Std_if root.Std.If {\n                    then: {}\n                    else: {}\n                }\n            }\n            initial_value: List.Empty()\n        }\n\n        unique_numbers_7b3b7b.accumulated -> product_2c0a7f.root.Math.Mul.list\n        instance(x: 169, y: 58) product_2c0a7f root.Std_k98ojb.Iteration.Reduce {\n            reducer: function(doc:\"multiply numbers.\") MulReducer {\n                in(x: -531, y: 2, name: \"accumulated\") property(Number) accumulated_ai\n                in(x: 430, y: -16, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n                instance(x: 286, y: 95) mul_7b3b7b root.Std_k98ojb.Math.Mul {\n                    first: accumulated_ai\n                    second: item_ai\n                }\n                mul_7b3b7b.result -> output_ai\n            }\n            initial_value: Number(1)\n        }\n\n        list_ai -> unique_numbers_7b3b7b.list\n        unique_numbers_7b3b7b.result -> product_2c0a7f.root.Math.Mul.list\n        product_2c0a7f.accumulated -> output_ai\n    }\n\n    instance(x: -34, y: 127) product_of_unique_numbers_node root.main.ProductOfUniqueNumbers {}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: -341, y: 24, name: \"list1\") property(List) list1_085f47\n        in(x: -369, y: 136, name: \"list2\") property(List) list2_a5e1d8\n\n        out(x: 399, y: 108, name: \"output\") property(List) output_b4a675\n\n        instance(x: -127, y: 83) difference_01_c07c19 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -117, y: 246) difference_02_e4e878 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 153, y: 144) concat_c793d5 root.Std_k98ojb.List.Concat {}\n\n        list1_085f47 -> difference_01_c07c19.left\n        list2_a5e1d8 -> difference_01_c07c19.right\n\n        list1_085f47 -> difference_02_e4e878.right\n        list2_a5e1d8 -> difference_02_e4e878.left\n\n        difference_01_c07c19.difference -> concat_c793d5.items\n        difference_02_e4e878.difference -> concat_c793d5.list\n\n        concat_c793d5.concatenated_list -> output_b4a675\n    }\n\n    \n\n    instance(x: 415, y: -165) find_dissimilar_elements_01_e2a1c7 root.main.find_dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -154, y: 23, name: \"execute\") trigger() execute_3d2a9f\n        in(x: -87, y: 107, name: \"list\") property(List) list_a61b77\n        in(x: -154, y: 193, name: \"steps\") property(Number) steps_e5f9a2\n\n        out(x: 843, y: 107, name: \"output\") property(List) output_896b8e\n        out(x: 817, y: 42, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: -66, y: 153) modulo_d0c411 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 126, y: 81) length_1498a8 root.Std_k98ojb.List.Length {}\n        instance(x: 276, y: 53) sub_b0b94f root.Std_k98ojb.Math.Sub {}\n        instance(x: 474, y: -22) slice_e8e1d2 root.Std_k98ojb.List.Slice {}\n        instance(x: 474, y: 153) slice_46a0f1 root.Std_k98ojb.List.Slice {}\n        instance(x: 474, y: 270) concat_4e1c94 root.Std_k98ojb.List.Concat {}\n\n        execute_3d2a9f -> modulo_d0c411.execute\n        list_a61b77 -> length_1498a8.list\n        steps_e5f9a2 -> modulo_d0c411.divisor\n        list_a61b77 -> slice_e8e1d2.list\n        list_a61b77 -> concat_4e1c94.left\n        length_1498a8.length -> sub_b0b94f.first\n        modulo_d0c411.result -> sub_b0b94f.second\n        sub_b0b94f.result -> slice_e8e1d2.start\n        -1 -> slice_e8e1d2.end\n        0 -> slice_46a0f1.start\n        modulo_d0c411.result -> slice_46a0f1.end\n        list_a61b77 -> slice_46a0f1.list\n        slice_46a0f1.slice -> concat_4e1c94.right\n        slice_e8e1d2.slice -> concat_4e1c94.left\n        concat_4e1c94.result -> output_896b8e\n    }\n\n    \n\n    instance(x: -376, y: -15) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5c2f1e\n        in(x: 96, y: 37, name: \"numbers\") property(List) numbers_c84d2b\n\n        out(x: 315, y: -11, name: \"sum\") property(Number) sum_e1c04a\n\n        instance(x: 179, y: 65) reduce_942e2c root.Std_k98ojb.Iteration.Reduce {\n            handler: func() reduce_handler {\n                in(x: 0, y: 0, name: \"execute\") trigger() execute_c03a1f\n                in(x: 71, y: 35, name: \"context\") property(Any) context_6c483b\n                in(x: 249, y: -1, name: \"value\") property(Number) value_e1c5d8\n                in(x: 401, y: 25, name: \"item\") property(Number) item_d73f4a\n\n                out(x: 464, y: 92, name: \"continue\") trigger() continue_84e467\n                out(x: 464, y: -16, name: \"output\") property(Number) output_f5b0c3\n\n                instance(x: 232, y: 60) add_27a9d3 root.Std_k98ojb.Math.Add {}\n                value_e1c5d8 -> add_27a9d3.first\n                item_d73f4a -> add_27a9d3.second\n                execute_c03a1f -> add_27a9d3.execute\n                add_27a9d3.result -> output_f5b0c3\n                output_f5b0c3 -> continue_84e467\n            }\n        }\n        instance(x: 25, y: -1) list_generate_range_d9772f root.Std_k98ojb.List.GenerateRange {\n            from: 0\n            to: 0\n        }\n\n        execute_5c2f1e -> reduce_942e2c.execute\n        numbers_c84d2b -> reduce_942e2c.items\n        reduce_handler.execute_c03a1f -> list_generate_range_d9772f.trigger\n        0 -> reduce_942e2c.initial_value\n        reduce_942e2c.output -> sum_e1c04a\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) greaterthan_f11fda root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 423, y: -478) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n\n        input_f5c03d -> greaterthan_f11fda.left\n        1 -> greaterthan_f11fda.right\n        greaterthan_f11fda.result -> if_07b8c7.predicate\n\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        input_f5c03d -> expression_b720d7.gen_0\n\n        expression_b720d7.result -> if_e19a62.predicate\n\n        if_07b8c7.else -> continue_8ba06b\n        if_07b8c7.then -> for_8cb3f6.reset\n\n        if_e19a62.else -> for_8cb3f6.next\n        if_e19a62.then -> out_f3db9f.set_false\n\n        1 -> out_f3db9f\n        0 -> out_f3db9f.set_false\n\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8b3f4d\n        in(x: 679, y: 130, name: \"b\") property(Int) b_2c4e5f\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_7a8b9c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_1d2e3f root.Std_k98ojb.Math.GreaterThan {\n            left: a\n            right: b\n        }\n        instance(x: 0, y: 242) lessthanorequal_4g5h6i root.Std_k98ojb.Math.LessThanOrEqual {\n            left: a\n            right: b\n        }\n\n        greaterthan_1d2e3f.result -> and_7a8b9c.left\n        lessthanorequal_4g5h6i.result -> and_7a8b9c.right\n        and_7a8b9c.result -> output_a2b59d\n\n        a_8b3f4d -> greaterthan_1d2e3f.left\n        b_2c4e5f -> greaterthan_1d2e3f.right\n        a_8b3f4d -> lessthanorequal_4g5h6i.left\n        b_2c4e5f -> lessthanorequal_4g5h6i.right\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_9a7c3f root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_9a7c3f.list1\n            difference2_cd5cc4.difference -> concat_9a7c3f.list2\n\n            concat_9a7c3f.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -110, name: \"steps\") property(Number) steps_2d5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 450, y: -16) slice_7f8d9c root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -16) length_1e2b3a root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: 167) slice_7f8d9c_1 root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: 167) mod_3a4b5c root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> length_1e2b3a.execute\n        list_0c1a77 -> length_1e2b3a.list\n        steps_2d5b9f -> mod_3a4b5c.value\n        length_1e2b3a.length -> mod_3a4b5c.divisor\n        mod_3a4b5c.result -> slice_7f8d9c.start\n        mod_3a4b5c.result -> slice_7f8d9c_1.end\n        list_0c1a77 -> slice_7f8d9c.list\n        list_0c1a77 -> slice_7f8d9c_1.list\n        0 -> slice_7f8d9c_1.start\n        -1 -> slice_7f8d9c.end\n        slice_7f8d9c.result -> concat_9b38cc.left\n        slice_7f8d9c_1.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 120, y: -45, name: \"a\") property(Int) a_a9b7c8\n        in(x: 365, y: -45, name: \"b\") property(Int) b_12d3e4\n\n        out(x: 610, y: -45, name: \"output\") property(Bool) output_f5g6h7\n\n        instance(x: 240, y: -45) and_a8b9c0 root.Std_k98ojb.Logic.And {}\n        instance(x: 300, y: -105) greaterthan_12d3e4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 300, y: -165) lessthan_56g7h8 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_a9b7c8 -> greaterthan_12d3e4.left\n        b_12d3e4 -> greaterthan_12d3e4.right\n        a_a9b7c8 -> lessthan_56g7h8.left\n        b_12d3e4 -> lessthan_56g7h8.right\n        greaterthan_12d3e4.result -> and_a8b9c0.left\n        lessthan_56g7h8.result -> and_a8b9c0.right\n        and_a8b9c0.result -> output_f5g6h7\n    }\n\n    instance(x: 200, y: -100) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 504, y: -76) modulo_2c9a01 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_2c9a01.value\n        11 -> modulo_2c9a01.divisor\n        instance(x: 464, y: -76) logicalequal_b4982e root.Std_k98ojb.Logic.Equal {}\n        0 -> logicalequal_b4982e.left\n        modulo_2c9a01.result -> logicalequal_b4982e.right\n        logicalequal_b4982e.result -> out_f3db9f\n        execute_27b8c3 -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_987f32 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_987f32.input\n        search_0 -> replace_987f32.search\n        replace_0 -> replace_987f32.replace\n        replace_987f32.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -212, y: 144) unique_list_7b3b7b root.Std_k98ojb.List.Flatten {\n            list: [list_ai]\n        }\n        instance(x: 50, y: 164) sorted_unique_list_7b3b7b root.Std_k98ojb.List.Sort {\n            list: unique_list_7b3b7b.list\n        }\n        instance(x: 230, y: 164) deduplicated_list_7b3b7b root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list_7b3b7b.sorted_list\n            handler: func(doc:\"Filter to remove duplicates.\") RemoveDuplicates {\n                in(x: -25, y: 10, name: \"item\") property(Number) item_ai\n                in(x: -25, y: 49, name: \"index\") property(Number) index_ai\n                out(x: 378, y: 63, name: \"result\") property(Boolean) result_ai\n                instance(x: 106, y: 63) previous_item_7b3b7b root.Std_k98ojb.List.GetAt {\n                    list: sorted_unique_list_7b3b7b.sorted_list\n                    index: Math.Floor(index_ai - 1)\n                }\n                instance(x: 240, y: 63) not_equal_7b3b7b root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item_7b3b7b.item\n                }\n                not_equal_7b3b7b.result -> result_ai\n            }\n        }\n        instance(x: 415, y: 206) product_calculation_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            items: deduplicated_list_7b3b7b.output_list\n            handler: func(doc:\"Calculate the product of numbers.\") MultiplyNumbers {\n                in(x: -14, y: 10, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -14, y: 56, name: \"item\") property(Number) item_ai\n                out(x: 298, y: 70, name: \"result\") property(Number) result_ai\n                instance(x: 130, y: 70) multiply_7b3b7b root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply_7b3b7b.result -> result_ai\n            }\n        }\n        product_calculation_7b3b7b.accumulated_value -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n            in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -121, y: -71) difference_a7b3d5 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: -77) difference_b4c5e6 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: -77) concat_3d5f78 root.Std_k98ojb.List.Concat {}\n\n            list1_016b2e -> difference_a7b3d5.left\n            list2_c8f404 -> difference_a7b3d5.right\n\n            list1_016b2e -> difference_b4c5e6.right\n            list2_c8f404 -> difference_b4c5e6.left\n\n            difference_a7b3d5.difference -> concat_3d5f78.list1\n            difference_b4c5e6.difference -> concat_3d5f78.list2\n\n            concat_3d5f78.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -230, y: 154, name: \"execute\") trigger() execute_8a7f6e\n        in(x: -205, y: 92, name: \"list\") property(List) list_3b6d6c\n        in(x: -204, y: 215, name: \"positions\") property(Number) positions_a98a77\n\n        out(x: 839, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 818, y: 40, name: \"continue\") trigger() continue_b5c26d\n\n        instance(x: -73, y: 194) modulo_f6e78f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 245, y: 166) slice_820314 root.Std_k98ojb.List.Slice {}\n        instance(x: 534, y: 166) concat_72c39e root.Std_k98ojb.List.Concat {}\n        setter(x: 6, y: -54, name: \"setter_b3d0a9\") setter_b3d0a9 = listLength\n        instance(x: -113, y: 127) length_22f67c root.Std_k98ojb.List.Length {}\n        setter(x: 264, y: -54, name: \"setter_f4d330\") setter_f4d330 = start\n        instance(x: 219, y: -11) sub_7c35e5 root.Std_k98ojb.Math.Sub {}\n        getter(x: 6, y: -108, name: \"getter_a26f6a\") getter_a26f6a = listLength\n        setter(x: 466, y: -54, name: \"setter_3c7d9e\") setter_3c7d9e = end\n        instance(x: 401, y: -11) add_82095a root.Std_k98ojb.Math.Add {}\n        getter(x: 264, y: -108, name: \"getter_a4535c\") getter_a4535c = start\n        getter(x: 466, y: -108, name: \"getter_ea7f9d\") getter_ea7f9d = end\n\n        execute_8a7f6e -> setter_b3d0a9.execute\n        list_3b6d6c -> length_22f67c.list\n        length_22f67c.length -> setter_b3d0a9.new_value\n        getter_a26f6a.value -> modulo_f6e78f.divisor\n        positions_a98a77 -> modulo_f6e78f.value\n        modulo_f6e78f.result -> sub_7c35e5.first\n        getter_a26f6a.value -> sub_7c35e5.second\n        sub_7c35e5.result -> setter_f4d330.new_value\n        getter_a4535c.value -> add_82095a.first\n        0 -> add_82095a.second\n        add_82095a.result -> setter_3c7d9e.new_value\n        list_3b6d6c -> slice_820314.list\n        getter_ea7f9d.value -> slice_820314.start\n        -1 -> slice_820314.end\n        list_3b6d6c -> concat_72c39e.left\n        slice_820314.result -> concat_72c39e.right\n        concat_72c39e.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7f6e8a\n        in(x: -309, y: -13, name: \"array\") property(List) array_f9b9d9\n\n        out(x: 1154, y: 129, name: \"output\") property(Number) output_3f7b8c\n        out(x: 1160, y: -21, name: \"continue\") trigger() continue_e9e53a\n\n        instance(x: 388, y: 145) reduce_c67d4e root.Std_k98ojb.Iteration.Reduce {\n            handler: function(in(item: Number), in(acc: Number)) -> out(output: Number) {\n                Math.Add(first: acc, second: item).result -> output\n            }\n        }\n\n        0 -> reduce_c67d4e.init_value\n        array_f9b9d9 -> reduce_c67d4e.items\n        execute_7f6e8a -> reduce_c67d4e.trigger\n        reduce_c67d4e.output_list -> output_3f7b8c\n        reduce_c67d4e.done -> continue_e9e53a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -245) floordiv_84f88c root.Std_k98ojb.Math.FloorDiv {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        floordiv_84f88c.result -> lessthanorequal_f11fda.right\n        input_f5c03d -> floordiv_84f88c.first\n        for_8cb3f6.item -> floordiv_84f88c.second\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.execute -> for_8cb3f6.onItem\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        for_8cb3f6.done -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n        input_f5c03d -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 169, name: \"a\") property(Int) a_eb5d1c\n            in(x: -378, y: 210, name: \"b\") property(Int) b_846f4e\n\n            out(x: 364, y: 129, name: \"output\") property(Bool) output_d55c8a\n\n            instance(x: -377, y: 22) expression_cb9b34 root.Std_k98ojb.Math.Expression {\n                expression: \"(a < 0) != (b < 0)\"\n            }\n\n            a_eb5d1c -> expression_cb9b34.a\n            b_846f4e -> expression_cb9b34.b\n            expression_cb9b34.result -> output_d55c8a\n        }\n\n        instance(x: -207, y: -34) check_opposite_signs_a1c02b root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -493) modulo_ffd6a8 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_ffd6a8.value\n        11 -> modulo_ffd6a8.divisor\n        modulo_ffd6a8.result -> out_f3db9f\n        execute_27b8c3 -> modulo_ffd6a8.trigger\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of a specified character with another character.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -165, y: -45, name: \"search\") property(String) search_0\n        in(x: -180, y: 30, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_a2d9c1 root.Std_k98ojb.Strings.Replace {}\n\n        search_0 -> replace_a2d9c1.search\n        replace_0 -> replace_a2d9c1.replace\n        input_0 -> replace_a2d9c1.input\n        replace_a2d9c1.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Convert the given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 168, y: 169) unique_numbers_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc:\"reduce function to collect unique numbers.\") UniqueReducer {\n                in(x: -542, y: 303, name: \"accumulator\") property(List) accumulator_ai\n                in(x: -188, y: 307, name: \"value\") property(Number) value_ai\n                out(x: 136, y: 391, name: \"output\") property(List) output_ai\n\n                instance(x: -124, y: 440) contains_7b3b7b root.Std_k98ojb.List.Contains {\n                    item: value_ai\n                }\n                accumulator_ai -> contains_7b3b7b.list\n                instance(x: 465, y: 556) if_7b3b7b root.Std_k98ojb.Std.If {\n                    input: contains_7b3b7b.contains\n                }\n                value_ai -> if_7b3b7b.else\n                accumulator_ai -> if_7b3b7b.then\n                instance(x: 265, y: 610) add_7b3b7b root.Std_k98ojb.List.Add {\n                    item: value_ai\n                }\n                contains_7b3b7b.contains -> if_7b3b7b.else\n                accumulator_ai -> if_7b3b7b.then\n                value_ai -> add_7b3b7b.item\n                if_7b3b7b.else -> output_ai\n                add_7b3b7b.listWithItem -> if_7b3b7b.then\n            }\n        }\n\n        list_ai -> unique_numbers_7b3b7b.items\n\n        instance(x: 256, y: 410) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc:\"reduce function to calculate the product.\") ProductReducer {\n                in(x: -542, y: 303, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -188, y: 307, name: \"value\") property(Number) value_ai\n                out(x: 136, y: 391, name: \"output\") property(Number) output_ai\n\n                instance(x: 243, y: 504) mul_7b3b7b root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: value_ai\n                }\n                mul_7b3b7b.result -> output_ai\n            }\n\n            initial_value: 1\n        }\n        unique_numbers_7b3b7b.result -> product_7b3b7b.items\n\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: -341, y: 28, name: \"list1\") property(List) list1_0a5e82\n        in(x: -369, y: 122, name: \"list2\") property(List) list2_a5d7b1\n\n        out(x: 479, y: 100, name: \"output\") property(List) output_5c7b81\n\n        instance(x: -136, y: 66) difference_1_cbd15c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -142, y: 208) difference_2_a02b9f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 213, y: 165) concat_caf7c5 root.Std_k98ojb.List.Concat {}\n\n        list1_0a5e82 -> difference_1_cbd15c.left\n        list2_a5d7b1 -> difference_1_cbd15c.right\n        list1_0a5e82 -> difference_2_a02b9f.right\n        list2_a5d7b1 -> difference_2_a02b9f.left\n\n        difference_1_cbd15c.difference -> concat_caf7c5.itemsA\n        difference_2_a02b9f.difference -> concat_caf7c5.itemsB\n        concat_caf7c5.list -> output_5c7b81\n    }\n\n    \n\n    instance(x: 465, y: -34) find_dissimilar_elements_9a3d22 root.main.find_dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -154, y: 213, name: \"execute\") trigger() execute_0e88a3\n        in(x: -196, y: -21, name: \"list\") property(List) list_f7f8a1\n        in(x: -184, y: 151, name: \"positions\") property(Number) positions_ddcbe5\n\n        out(x: 836, y: 209, name: \"output\") property(List) output_8da3b1\n        out(x: 787, y: 25, name: \"continue\") trigger() continue_b3cebb\n\n        instance(x: -42, y: 186) modulo_fabae9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 307, y: -19) length_9c56d5 root.Std_k98ojb.List.Length {}\n        instance(x: 164, y: 217) sub_d02fcf root.Std_k98ojb.Math.Sub {}\n        instance(x: 322, y: 338) slice_885298 root.Std_k98ojb.List.Slice {}\n        instance(x: 534, y: 167) slice_0d2ca2 root.Std_k98ojb.List.Slice {}\n        instance(x: 714, y: -26) concat_d28c02 root.Std_k98ojb.List.Concat {}\n\n        execute_0e88a3 -> length_9c56d5.execute\n        list_f7f8a1 -> slice_885298.list\n        list_f7f8a1 -> slice_0d2ca2.list\n        list_f7f8a1 -> concat_d28c02.left\n        positions_ddcbe5 -> modulo_fabae9.divisor\n        length_9c56d5.length -> modulo_fabae9.value\n        length_9c56d5.length -> sub_d02fcf.first\n        modulo_fabae9.result -> sub_d02fcf.second\n        slice_885298.start -> concat_d28c02.right\n        sub_d02fcf.result -> slice_0d2ca2.start\n        0 -> slice_885298.end\n        modulo_fabae9.result -> slice_885298.start\n        length_9c56d5.length -> slice_0d2ca2.end\n        concat_d28c02.result -> output_8da3b1\n\n        concat_d28c02.done -> continue_b3cebb\n    }\n\n    \n\n    instance(x: -279, y: 44) rotate_list_def0cc root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5c213e\n        in(x: 486, y: -29, name: \"array\") property(List) array_c7d87a\n\n        out(x: 1002, y: -42, name: \"sum\") property(Number) sum_035f2b\n\n        instance(x: 251, y: -17) reduce_ae93c5 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n\n        execute_5c213e -> reduce_ae93c5.execute\n        array_c7d87a -> reduce_ae93c5.items\n        0 -> reduce_ae93c5.start_value\n        reduce_ae93c5.output_list -> sum_035f2b\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1205, y: -422) mod_18c4e8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> mod_18c4e8.divisor\n        for_8cb3f6.item -> mod_18c4e8.value\n        mod_18c4e8.result -> logic_not_e19a62.input\n        logic_not_e19a62.output -> if_07b8c7.predicate\n\n        func() {\n            in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n\n            out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n            instance(x: 362, y: -297) lessthanorequal_3a15b1 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n            input_f5c03d -> lessthanorequal_3a15b1.right\n            1 -> lessthanorequal_3a15b1.left\n            lessthanorequal_3a15b1.result -> out_f3db9f\n\n        } -> if_greater_than_one.root\n\n        instance(x: 76, y: -248) logic_not_e19a62 root.Std_k98ojb.Logic.Not {}\n\n        instance(x: 0, y: 0) if_greater_than_one root.main.is_prime {}\n\n        instance(x: 1057, y: -329) and_78a2f4 root.Std_k98ojb.Logic.And {}\n        if_greater_than_one.out -> and_78a2f4.left\n        if_07b8c7.value -> and_78a2f4.right\n\n        generaterange_038fce.list -> for_8cb3f6.items\n        input_f5c03d -> lessthanorequal_f11fda.right\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_07b8c7.execute\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        for_8cb3f6.done -> continue_8ba06b\n        and_78a2f4.output -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.then -> continue_8ba06b\n        for_8cb3f6.next -> and_78a2f4.left\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check whether the given two integers have opposite signs or not.\") check_opposite_signs {\n        in(x: -425, y: 130, name: \"a\") property(Int) a_8b3f4d\n        in(x: 679, y: 130, name: \"b\") property(Int) b_2c4e5f\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_a2b59d\n\n        instance(x: 5, y: 346) and_7a8b9c root.Std_k98ojb.Logic.And {}\n        instance(x: -6, y: 129) greaterthan_1d2e3f root.Std_k98ojb.Math.GreaterThan {\n            left: a\n            right: b\n        }\n        instance(x: 0, y: 242) lessthanorequal_4g5h6i root.Std_k98ojb.Math.LessThanOrEqual {\n            left: a\n            right: b\n        }\n\n        greaterthan_1d2e3f.result -> and_7a8b9c.left\n        lessthanorequal_4g5h6i.result -> and_7a8b9c.right\n        and_7a8b9c.result -> output_a2b59d\n\n        a_8b3f4d -> greaterthan_1d2e3f.left\n        b_2c4e5f -> greaterthan_1d2e3f.right\n        a_8b3f4d -> lessthanorequal_4g5h6i.left\n        b_2c4e5f -> lessthanorequal_4g5h6i.right\n    }\n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 591, y: 74) modulo_038fce root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_038fce.value\n        11 -> modulo_038fce.divisor\n        modulo_038fce.result -> out_f3db9f\n        execute_27b8c3 -> modulo_038fce.trigger\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_306f69.input\n        search_0 -> replace_306f69.search\n        replace_0 -> replace_306f69.replace\n        replace_306f69.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of unique numbers in a list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n        instance(x: 100, y: 100) flatten_7b3b7b root.List.Flatten {}\n        instance(x: 200, y: 100) unique_7b3b7b root.Iteration.Filter {\n            handler: func(doc:\"Check for uniqueness.\") IsUnique {\n                in(x: -531, y: 2, name: \"item\") property(Any) item_ai\n                in(x: -431, y: 2, name: \"index\") property(Number) index_ai\n                in(x: -331, y: 2, name: \"context\") property(List) context_ai\n                out(x: 340, y: 77, name: \"output\") property(Boolean) output_ai\n                instance(x: 100, y: 100) contains_7b3b7b root.List.Contains {\n                    item: item_ai\n                }\n                context_ai -> contains_7b3b7b.list\n                contains_7b3b7b.index -> index_ai\n                Logic.Not(contains_7b3b7b.contains) -> output_ai\n            }\n        }\n        instance(x: 300, y: 100) product_7b3b7b root.Iteration.Reduce {\n            handler: func(doc:\"Multiply numbers.\") Multiply {\n                in(x: -531, y: 2, name: \"acc\") property(Number) acc_ai\n                in(x: -431, y: 2, name: \"item\") property(Number) item_ai\n                out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n                Math.Mul(acc_ai, item_ai) -> output_ai\n            }\n        }\n        list_ai -> flatten_7b3b7b.list\n        flatten_7b3b7b.flattenedList -> unique_7b3b7b.items\n        unique_7b3b7b.output_list -> product_7b3b7b.items\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n            in(x: -345, y: 10, name: \"list1\") property(List) list1_6a8b2e\n            in(x: -339, y: 70, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 450, y: 10, name: \"output\") property(List) output_879de6\n\n            instance(x: -120, y: 40) difference1_78d487 root.Std_k98ojb.Sets.Difference {}\n            instance(x: -120, y: 130) difference2_cd5cc4 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: 85) concat_9a7c3f root.Std_k98ojb.List.Concat {}\n\n            list1_6a8b2e -> difference1_78d487.left\n            list2_c8f404 -> difference1_78d487.right\n\n            list2_c8f404 -> difference2_cd5cc4.left\n            list1_6a8b2e -> difference2_cd5cc4.right\n\n            difference1_78d487.difference -> concat_9a7c3f.list1\n            difference2_cd5cc4.difference -> concat_9a7c3f.list2\n\n            concat_9a7c3f.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) dissimilar_elements_33ad55 root.main.dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right.\") rotate_list {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -183, y: -110, name: \"steps\") property(Number) steps_2d5b9f\n\n        out(x: 838, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 557, y: 167) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 450, y: -16) slice_7f8d9c root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: -16) length_1e2b3a root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: 167) slice_7f8d9c_1 root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: 167) mod_3a4b5c root.Std_k98ojb.Math.Modulo {}\n\n        execute_1ddb9f -> length_1e2b3a.execute\n        list_0c1a77 -> length_1e2b3a.list\n        steps_2d5b9f -> mod_3a4b5c.value\n        length_1e2b3a.length -> mod_3a4b5c.divisor\n        mod_3a4b5c.result -> slice_7f8d9c.start\n        mod_3a4b5c.result -> slice_7f8d9c_1.end\n        list_0c1a77 -> slice_7f8d9c.list\n        list_0c1a77 -> slice_7f8d9c_1.list\n        0 -> slice_7f8d9c_1.start\n        -1 -> slice_7f8d9c.end\n        slice_7f8d9c.result -> concat_9b38cc.left\n        slice_7f8d9c_1.result -> concat_9b38cc.right\n        concat_9b38cc.result -> data_0_0\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n        in(x: -436, y: -213, name: \"array\") property(List) array_6b655b\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n        instance(x: 50, y: -300) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {\n            handler: func(doc: \"\") anonymous_func {\n                in(x: -450, y: -421, name: \"execute\") trigger() execute_cdac2a\n                in(x: -436, y: -213, name: \"acc\") property(Number) acc_6b655b\n                in(x: -436, y: -213, name: \"item\") property(Number) item_6b655b\n\n                out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n                out(x: 1169, y: -269, name: \"output\") property(Number) output_732a8a\n\n                instance(x: 50, y: -300) add_3d7de6 root.Std_k98ojb.Math.Add {}\n\n                acc_6b655b -> add_3d7de6.first\n                item_6b655b -> add_3d7de6.second\n                add_3d7de6.result -> output_732a8a\n                execute_cdac2a -> continue_d9efd7\n            }\n        }\n\n        0 -> reduce_3d7de6.initial_value\n        array_6b655b -> reduce_3d7de6.items\n        execute_cdac2a -> reduce_3d7de6.execute\n        reduce_3d7de6.output -> output_732a8a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 1812, y: -319) not_80a119 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1074, y: -56) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        1 -> generaterange_038fce.from\n        input_f5c03d -> expression_b720d7.gen_0\n        input_f5c03d -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        input_f5c03d -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_8ba06b\n        expression_b720d7.gen_1 -> expression_b720d7.gen_1\n        expression_b720d7.result -> not_80a119.value\n        not_80a119.result -> if_07b8c7.then\n        for_8cb3f6.done -> continue_8ba06b\n        execute_27b8c3 -> for_8cb3f6.reset\n        if_07b8c7.value -> out_f3db9f\n        for_8cb3f6.next -> for_8cb3f6.next\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n    func(doc: \"Checks whether the given two integers have opposite signs.\") check_opposite_signs {\n        in(x: 120, y: -45, name: \"a\") property(Int) a_a9b7c8\n        in(x: 365, y: -45, name: \"b\") property(Int) b_12d3e4\n\n        out(x: 610, y: -45, name: \"output\") property(Bool) output_f5g6h7\n\n        instance(x: 240, y: -45) and_a8b9c0 root.Std_k98ojb.Logic.And {}\n        instance(x: 300, y: -105) greaterthan_12d3e4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 300, y: -165) lessthan_56g7h8 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_a9b7c8 -> greaterthan_12d3e4.left\n        b_12d3e4 -> greaterthan_12d3e4.right\n        a_a9b7c8 -> lessthan_56g7h8.left\n        b_12d3e4 -> lessthan_56g7h8.right\n        greaterthan_12d3e4.result -> and_a8b9c0.left\n        lessthan_56g7h8.result -> and_a8b9c0.right\n        and_a8b9c0.result -> output_f5g6h7\n    }\n\n    instance(x: 200, y: -100) check_opposite_signs_24d4b5 root.main.check_opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 504, y: -76) modulo_2c9a01 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_2c9a01.value\n        11 -> modulo_2c9a01.divisor\n        instance(x: 464, y: -76) logicalequal_b4939f root.Std_k98ojb.Logic.Equal {}\n        0 -> logicalequal_b4939f.right\n        modulo_2c9a01.result -> logicalequal_b4939f.left\n        instance(x: 576, y: -10) if_07b8c7 root.Std_k98ojb.Std.If {}\n        logicalequal_b4939f.result -> if_07b8c7.predicate\n        execute_27b8c3 -> if_07b8c7.execute\n        if_07b8c7.then -> out_f3db9f\n        true -> if_07b8c7.value\n        if_07b8c7.else -> continue_8ba06b\n        false -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_divisible_by_11_f0be66 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "func(doc: \"Replace characters in a string.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -230, y: 50, name: \"search\") property(String) search_0\n        in(x: -230, y: 100, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_987f32 root.Std_k98ojb.Strings.Replace {}\n        \n        input_0 -> replace_987f32.input\n        search_0 -> replace_987f32.search\n        replace_0 -> replace_987f32.replace\n        replace_987f32.output -> output_0\n    }"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert a given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"Calculate the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -473, y: 21, name: \"list\") property(List) list_ai\n        out(x: 509, y: 86, name: \"product\") property(Number) product_ai\n        instance(x: -212, y: 144) unique_list_7b3b7b root.Std_k98ojb.List.Flatten {\n            list: [list_ai]\n        }\n        instance(x: 50, y: 164) sorted_unique_list_7b3b7b root.Std_k98ojb.List.Sort {\n            list: unique_list_7b3b7b.list\n        }\n        instance(x: 230, y: 164) deduplicated_list_7b3b7b root.Std_k98ojb.Iteration.Filter {\n            items: sorted_unique_list_7b3b7b.sorted_list\n            handler: func(doc:\"Filter to remove duplicates.\") RemoveDuplicates {\n                in(x: -25, y: 10, name: \"item\") property(Number) item_ai\n                in(x: -25, y: 49, name: \"index\") property(Number) index_ai\n                out(x: 378, y: 63, name: \"result\") property(Boolean) result_ai\n                instance(x: 106, y: 63) previous_item_7b3b7b root.Std_k98ojb.List.GetAt {\n                    list: sorted_unique_list_7b3b7b.sorted_list\n                    index: Math.Floor(index_ai - 1)\n                }\n                instance(x: 240, y: 63) not_equal_7b3b7b root.Std_k98ojb.Logic.NotEqual {\n                    left: item_ai\n                    right: previous_item_7b3b7b.item\n                }\n                not_equal_7b3b7b.result -> result_ai\n            }\n        }\n        instance(x: 415, y: 206) product_calculation_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            items: deduplicated_list_7b3b7b.output_list\n            handler: func(doc:\"Calculate the product of numbers.\") MultiplyNumbers {\n                in(x: -14, y: 10, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -14, y: 56, name: \"item\") property(Number) item_ai\n                out(x: 298, y: 70, name: \"result\") property(Number) result_ai\n                instance(x: 130, y: 70) multiply_7b3b7b root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: item_ai\n                }\n                multiply_7b3b7b.result -> result_ai\n            }\n        }\n        product_calculation_7b3b7b.accumulated_value -> product_ai\n    }"
            ],
            "18": [
                "module() main {\n        func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n            in(x: -337, y: -126, name: \"list1\") property(List) list1_016b2e\n            in(x: -331, y: 30, name: \"list2\") property(List) list2_c8f404\n\n            out(x: 441, y: -72, name: \"output\") property(List) output_879de6\n\n            instance(x: -121, y: -71) difference_a7b3d5 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 169, y: -77) difference_b4c5e6 root.Std_k98ojb.Sets.Difference {}\n            instance(x: 250, y: -77) concat_3d5f78 root.Std_k98ojb.List.Concat {}\n\n            list1_016b2e -> difference_a7b3d5.left\n            list2_c8f404 -> difference_a7b3d5.right\n\n            list1_016b2e -> difference_b4c5e6.right\n            list2_c8f404 -> difference_b4c5e6.left\n\n            difference_a7b3d5.difference -> concat_3d5f78.list1\n            difference_b4c5e6.difference -> concat_3d5f78.list2\n\n            concat_3d5f78.output_list -> output_879de6\n        }\n\n        instance(x: 425, y: -186) find_dissimilar_elements_33ad55 root.main.find_dissimilar_elements {}\n    }"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -230, y: 154, name: \"execute\") trigger() execute_8a7f6e\n        in(x: -205, y: 92, name: \"list\") property(List) list_3b6d6c\n        in(x: -204, y: 215, name: \"positions\") property(Number) positions_a98a77\n\n        out(x: 839, y: 168, name: \"output\") property(List) data_0_0\n        out(x: 818, y: 40, name: \"continue\") trigger() continue_b5c26d\n\n        instance(x: -73, y: 194) modulo_f7e83f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 245, y: 166) slice_830674 root.Std_k98ojb.List.Slice {}\n        instance(x: 534, y: 166) concat_12a49e root.Std_k98ojb.List.Concat {}\n        setter(x: 6, y: -54, name: \"setter_b47f0d\") setter_b47f0d = listLength\n        instance(x: -138, y: 124) length_14c249 root.Std_k98ojb.List.Length {}\n        setter(x: 6, y: -54, name: \"setter_c9e7a2\") setter_c9e7a2 = listLength\n        instance(x: 304, y: 166) slice_8f1d6c root.Std_k98ojb.List.Slice {}\n        getter(x: 252, y: -246, name: \"getter_42117a\") getter_42117a = listLength\n        setter(x: 307, y: 124, name: \"setter_f9c8d9\") setter_f9c8d9 = startSliceIndex\n        instance(x: -65, y: 124) sub_2e1b7a root.Std_k98ojb.Math.Sub {}\n        getter(x: 307, y: 82, name: \"getter_b5672c\") getter_b5672c = startSliceIndex\n        setter(x: 537, y: 124, name: \"setter_ea9e2d\") setter_ea9e2d = endSliceIndex\n        instance(x: -100, y: 160) add_8f4c2a root.Std_k98ojb.Math.Add {}\n        getter(x: 537, y: 82, name: \"getter_f07228\") getter_f07228 = endSliceIndex\n        setter(x: 196, y: -144, name: \"setter_7d5b3e\") setter_7d5b3e = startSliceIndex\n        instance(x: -101, y: 195) sub_f22a18 root.Std_k98ojb.Math.Sub {}\n        getter(x: 196, y: -104, name: \"getter_4f7c8e\") getter_4f7c8e = startSliceIndex\n        setter(x: 537, y: 204, name: \"setter_c9d26a\") setter_c9d26a = endSliceIndex\n        instance(x: -100, y: 241) add_8f4c2a_1 root.Std_k98ojb.Math.Add {}\n        getter(x: 537, y: 162, name: \"getter_f07228_1\") getter_f07228_1 = endSliceIndex\n        setter(x: 252, y: -144, name: \"setter_9a6c8d\") setter_9a6c8d = startSliceIndex\n\n        execute_8a7f6e -> length_14c249.execute\n        list_3b6d6c -> length_14c249.list\n        length_14c249.result -> setter_b47f0d.new_value\n        getter_42117a.value -> sub_2e1b7a.a\n        positions_a98a77 -> modulo_f7e83f.b\n        getter_42117a.value -> modulo_f7e83f.a\n        modulo_f7e83f.result -> sub_2e1b7a.b\n        sub_2e1b7a.result -> setter_c9e7a2.new_value\n        getter_b5672c.value -> slice_830674.start\n        0 -> slice_830674.end\n        list_3b6d6c -> slice_830674.list\n        slice_830674.result -> concat_12a49e.left\n        getter_b5672c.value -> setter_f9c8d9.new_value\n        positions_a98a77 -> sub_f22a18.b\n        getter_4f7c8e.value -> sub_f22a18.a\n        sub_f22a18.result -> add_8f4c2a.b\n        0 -> add_8f4c2a.a\n        add_8f4c2a.result -> setter_7d5b3e.new_value\n        getter_b5672c.value -> add_8f4c2a_1.a\n        getter_f07228_1.value -> sub_f22a18.b\n        sub_f22a18.result -> add_8f4c2a_1.b\n        add_8f4c2a_1.result -> setter_c9d26a.new_value\n        getter_f07228_1.value -> slice_8f1d6c.start\n        getter_b5672c.value -> slice_8f1d6c.end\n        list_3b6d6c -> slice_8f1d6c.list\n        slice_8f1d6c.result -> concat_12a49e.right\n        concat_12a49e.result -> data_0_0\n    }\n\n    \n\n    instance(x: -257, y: -31) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") sum_array {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_7f6e8a\n        in(x: -309, y: -13, name: \"array\") property(List) array_f9b9d9\n\n        out(x: 1154, y: 129, name: \"output\") property(Number) output_3f7b8c\n        out(x: 1160, y: -21, name: \"continue\") trigger() continue_e9e53a\n\n        instance(x: 388, y: 145) reduce_c67d4e root.Std_k98ojb.Iteration.Reduce {\n            handler: lambda { \n                in(x: -302, y: -314, name: \"execute\") trigger() execute_66c21a\n                in(x: -259, y: -277, name: \"accumulator\") property(Number) accumulator_b8b2d8\n                in(x: -259, y: -130, name: \"item\") property(Number) item_363e84\n\n                out(x: 1087, y: -223, name: \"output\") property(Number) output_c9f4a9\n                out(x: 1095, y: -341, name: \"continue\") trigger() continue_642b8c\n\n                instance(x: 345, y: -274) add_81e43d root.Std_k98ojb.Math.Add {}\n\n                accumulator_b8b2d8 -> add_81e43d.first\n                item_363e84 -> add_81e43d.second\n                execute_66c21a -> add_81e43d.execute\n                add_81e43d.result -> output_c9f4a9\n                add_81e43d.result -> continue_642b8c\n            }\n        }\n\n        0 -> reduce_c67d4e.initial_value\n        array_f9b9d9 -> reduce_c67d4e.items\n        execute_7f6e8a -> reduce_c67d4e.execute\n        reduce_c67d4e.output -> output_3f7b8c\n        reduce_c67d4e.continue -> continue_e9e53a\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 467, y: -245) floordiv_84f88c root.Std_k98ojb.Math.FloorDiv {}\n\n        input_f5c03d -> generaterange_038fce.to\n        2 -> generaterange_038fce.from\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> lessthanorequal_f11fda.left\n        floordiv_84f88c.result -> lessthanorequal_f11fda.right\n        input_f5c03d -> floordiv_84f88c.first\n        for_8cb3f6.item -> floordiv_84f88c.second\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.execute -> for_8cb3f6.onItem\n        expression_b720d7.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_e19a62.else -> continue_8ba06b\n        for_8cb3f6.done -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n        input_f5c03d -> expression_b720d7.gen_1\n        for_8cb3f6.item -> expression_b720d7.gen_0\n        if_e19a62.then -> out_f3db9f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_prime_f0be66 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 3925,
        "task_candidates": {
            "1": [
                "module() main {\n        func(doc: \"Check whether the given two integers have opposite signs.\") check_opposite_signs {\n            in(x: 0, y: 169, name: \"a\") property(Int) a_eb5d1c\n            in(x: -378, y: 210, name: \"b\") property(Int) b_846f4e\n\n            out(x: 364, y: 129, name: \"output\") property(Bool) output_d55c8a\n\n            instance(x: -377, y: 22) expression_cb9b34 root.Std_k98ojb.Math.Expression {\n                expression: \"(a < 0) != (b < 0)\"\n            }\n\n            a_eb5d1c -> expression_cb9b34.a\n            b_846f4e -> expression_cb9b34.b\n            expression_cb9b34.result -> output_d55c8a\n        }\n\n        instance(x: -207, y: -34) check_opposite_signs_a1c02b root.main.check_opposite_signs {}\n    }"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks whether the given number is divisible by 11.\") is_divisible_by_11 {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n\n        instance(x: 546, y: -493) modulo_ffd6a8 root.Std_k98ojb.Math.Modulo {}\n        input_f5c03d -> modulo_ffd6a8.value\n        11 -> modulo_ffd6a8.divisor\n        modulo_ffd6a8.result -> out_f3db9f\n        execute_27b8c3 -> modulo_ffd6a8.trigger\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Replace all occurrences of a specified character with another character.\") replace_characters {\n        in(x: -230, y: 0, name: \"input\") property(String) input_0\n        in(x: -165, y: -45, name: \"search\") property(String) search_0\n        in(x: -180, y: 30, name: \"replace\") property(String) replace_0\n\n        out(x: 776, y: 0, name: \"output\") property(String) output_0\n\n        instance(x: 546, y: 0) replace_a2d9c1 root.Std_k98ojb.Strings.Replace {}\n\n        search_0 -> replace_a2d9c1.search\n        replace_0 -> replace_a2d9c1.replace\n        input_0 -> replace_a2d9c1.input\n        replace_a2d9c1.output -> output_0\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Convert the given string to lowercase.\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "func(doc:\"calculate the product of the unique numbers in a given list.\") ProductOfUniqueNumbers {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 168, y: 169) unique_numbers_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc:\"reduce function to collect unique numbers.\") UniqueReducer {\n                in(x: -542, y: 303, name: \"accumulator\") property(List) accumulator_ai\n                in(x: -188, y: 307, name: \"value\") property(Number) value_ai\n                out(x: 136, y: 391, name: \"output\") property(List) output_ai\n\n                instance(x: -124, y: 440) contains_7b3b7b root.Std_k98ojb.List.Contains {\n                    item: value_ai\n                }\n                accumulator_ai -> contains_7b3b7b.list\n                instance(x: 465, y: 556) if_7b3b7b root.Std_k98ojb.Std.If {\n                    input: contains_7b3b7b.contains\n                }\n                value_ai -> if_7b3b7b.else\n                accumulator_ai -> if_7b3b7b.then\n                instance(x: 265, y: 610) add_7b3b7b root.Std_k98ojb.List.Add {\n                    item: value_ai\n                }\n                contains_7b3b7b.contains.not -> add_7b3b7b.list\n                add_7b3b7b.listWithItem -> if_7b3b7b.value\n                if_7b3b7b.value -> output_ai\n            }\n            initial_value: []\n        }\n\n        list_ai -> unique_numbers_7b3b7b.items\n\n        instance(x: 168, y: 724) product_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: func(doc:\"reduce function to calculate the product.\") ProductReducer {\n                in(x: -542, y: 303, name: \"accumulator\") property(Number) accumulator_ai\n                in(x: -188, y: 307, name: \"value\") property(Number) value_ai\n                out(x: 136, y: 391, name: \"output\") property(Number) output_ai\n\n                instance(x: 258, y: 402) mul_7b3b7b root.Std_k98ojb.Math.Mul {\n                    first: accumulator_ai\n                    second: value_ai\n                }\n                mul_7b3b7b.result -> output_ai\n            }\n            initial_value: 1\n        }\n\n        unique_numbers_7b3b7b.result -> product_7b3b7b.items\n\n        product_7b3b7b.result -> output_ai\n    }"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar_elements {\n        in(x: -341, y: 28, name: \"list1\") property(List) list1_0a5e82\n        in(x: -369, y: 122, name: \"list2\") property(List) list2_a5d7b1\n\n        out(x: 479, y: 100, name: \"output\") property(List) output_5c7d84\n\n        instance(x: -136, y: 66) difference_1_cbd14c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -121, y: 197) difference_2_a80c53 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 83, y: 164) concat_2df789 root.Std_k98ojb.List.Concat {}\n        difference_1_cbd14c.difference -> concat_2df789.list1\n        difference_2_a80c53.difference -> concat_2df789.list2\n        list1_0a5e82 -> difference_1_cbd14c.left\n        list2_a5d7b1 -> difference_1_cbd14c.right\n        list2_a5d7b1 -> difference_2_a80c53.left\n        list1_0a5e82 -> difference_2_a80c53.right\n        concat_2df789.listWithItem -> output_5c7d84\n    }\n\n    \n\n    instance(x: 376, y: -188) find_dissimilar_elements_e0b87a root.main.find_dissimilar_elements {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -154, y: 213, name: \"execute\") trigger() execute_0c80a6\n        in(x: -199, y: -21, name: \"list\") property(List) list_f7f8a8\n        in(x: -199, y: 54, name: \"num_items\") property(Number) num_items_e3ceba\n\n        out(x: 603, y: 159, name: \"output\") property(List) output_1ebd72\n        out(x: 583, y: 53, name: \"continue\") trigger() continue_37deec\n\n        instance(x: -45, y: 101) modulo_e2106f root.Std_k98ojb.Math.Modulo {}\n        setter(x: 49, y: 145, name: \"setter_d3e3d5\") setter_d3e3d5 = num_items_mod\n        instance(x: 79, y: 228) generate_range_c01c3f root.Std_k98ojb.List.GenerateRange {}\n        getter(x: 46, y: 281, name: \"getter_142cda\") getter_142cda = num_items_mod\n        instance(x: 575, y: 203) get_at_ae19f6 root.Std_k98ojb.List.GetAt {}\n        instance(x: 365, y: 328) slice_be95a4 root.Std_k98ojb.List.Slice {}\n        setter(x: 756, y: 302, name: \"setter_1d3dcd\") setter_1d3dcd = output\n        instance(x: 341, y: 242) generate_range_ae2a98 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 570, y: -5) slice_a02378 root.Std_k98ojb.List.Slice {}\n        setter(x: 651, y: 68, name: \"setter_4e1c2b\") setter_4e1c2b = first_part\n        instance(x: 305, y: -5) slice_e713a9 root.Std_k98ojb.List.Slice {}\n        getter(x: 631, y: 286, name: \"getter_1d54cc\") getter_1d54cc = first_part\n        instance(x: 470, y: 174) concat_5df09f root.Std_k98ojb.List.Concat {}\n        setter(x: 732, y: 228, name: \"setter_a9e7d7\") setter_a9e7d7 = output\n        instance(x: 261, y: -45) length_9f4c90 root.Std_k98ojb.List.Length {}\n        getter(x: 351, y: -39, name: \"getter_b4af72\") getter_b4af72 = list_length\n        setter(x: 261, y: 55, name: \"setter_3d9f58\") setter_3d9f58 = num_items_mod\n\n        execute_0c80a6 -> length_9f4c90.trigger\n        length_9f4c90.length -> modulo_e2106f.value\n        getter_b4af72.value -> modulo_e2106f.divisor\n        setter_d3e3d5.continue -> slice_be95a4.start\n        num_items_e3ceba -> modulo_e2106f.dividend\n        list_f7f8a8 -> get_at_ae19f6.list\n        getter_142cda.value -> generate_range_c01c3f.end\n        0 -> generate_range_c01c3f.start\n        generate_range_c01c3f.result -> slice_be95a4.end\n        getter_142cda.value -> get_at_ae19f6.index\n        list_f7f8a8 -> slice_a02378.list\n        0 -> slice_a02378.start\n        get_at_ae19f6.data -> slice_be95a4.start\n        getter_1d54cc.value -> concat_5df09f.left\n        setter_4e1c2b.continue -> slice_e713a9.start\n        list_f7f8a8 -> generate_range_ae2a98.list\n        getter_142cda.value -> generate_range_ae2a98.start\n        generate_range_ae2a98.end -> slice_e713a9.end\n        generate_range_c01c3f.result -> concat_5df09f.right\n        list_f7f8a8 -> slice_e713a9.list\n        slice_be95a4.result -> setter_d3e3d5.new_value\n        slice_a02378.result -> setter_4e1c2b.new_value\n        concat_5df09f.result -> setter_a9e7d7.new_value\n        setter_a9e7d7.continue -> continue_37deec\n    }\n\n    \n\n    instance(x: -262, y: 8) rotate_list_def6c1 root.main.rotate_list {}\n}"
            ],
            "42": [
                "func(doc: \"finds the sum of an array\") sum_array {\n        in(x: 0, y: 0, name: \"execute\") trigger() execute_5c213e\n        in(x: 486, y: -29, name: \"array\") property(List) array_c7d85a\n\n        out(x: 1002, y: -42, name: \"continue\") trigger() continue_05b999\n        out(x: 1037, y: 176, name: \"output\") property(Number) output_e5d3e3\n\n        instance(x: 518, y: -236) reduce_4a3ec5 root.Std_k98ojb.Iteration.Reduce {\n            handler: handler_e08db1\n            start_value: 0\n        }\n        setter(x: 377, y: -157, name: \"setter_a0f206\") setter_a0f206 = sum\n        instance(x: 924, y: -11) add_b0e2d8 root.Std_k98ojb.Math.Add {}\n        getter(x: 1313, y: 257, name: \"getter_4da9c5\") getter_4da9c5 = sum\n        instance(x: 106, y: -260) firstitem_5ae28a root.Std_k98ojb.List.FirstItem {}\n\n        handler_e08db1 {\n            in(x: 0, y: 0, name: \"execute\") trigger() execute_dcc543\n            in(x: 175, y: -236, name: \"context\") property(Any) context_96cd5e\n            in(x: 449, y: -289, name: \"item\") property(Any) item_aee90a\n            in(x: 841, y: -289, name: \"index\") property(Number) index_b0b7c6\n\n            out(x: 1342, y: -357, name: \"continue\") trigger() continue_3ca85e\n            out(x: 1372, y: -6, name: \"output\") property(Any) output_380a3d\n\n            instance(x: 906, y: -467) add_30c1b9 root.Std_k98ojb.Math.Add {}\n\n            context_96cd5e -> add_30c1b9.first\n            item_aee90a -> add_30c1b9.second\n            execute_dcc543 -> continue_3ca85e\n            add_30c1b9.result -> output_380a3d\n        }\n\n        execute_5c213e -> setter_a0f206.execute\n        array_c7d85a -> firstitem_5ae28a.list\n        firstitem_5ae28a.item -> setter_a0f206.new_value\n        0 -> setter_a0f206.continue\n        setter_a0f206.continue -> reduce_4a3ec5.execute\n        array_c7d85a -> reduce_4a3ec5.items\n        getter_4da9c5.value -> output_e5d3e3\n        reduce_4a3ec5.result -> setter_a0f206.new_value\n        setter_a0f206.continue -> continue_05b999\n    }"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Checks if the given integer is a prime number.\") is_prime {\n        in(x: 354, y: -53, name: \"input\") property(Number) input_f5c03d\n        in(x: 161, y: -211, name: \"execute\") trigger() execute_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1205, y: -422) mod_13a1e7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        2 -> generaterange_038fce.from\n        input_f5c03d -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        input_f5c03d -> lessthanorequal_f11fda.right\n        2 -> lessthanorequal_f11fda.left\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> for_8cb3f6.trigger\n        input_f5c03d -> mod_13a1e7.value\n        for_8cb3f6.item -> mod_13a1e7.divisor\n        mod_13a1e7.result -> if_07b8c7.execute\n        0 -> if_07b8c7.input\n        false -> out_f3db9f\n        true -> continue_8ba06b\n        if_07b8c7.else -> continue_8ba06b\n        for_8cb3f6.onItem -> if_07b8c7.then\n        for_8cb3f6.done -> out_f3db9f\n        execute_27b8c3 -> for_8cb3f6.reset\n    }\n\n}"
            ]
        }
    }
]