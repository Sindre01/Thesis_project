import("std", Std_k98ojb)
module() main {
    func(doc: "Calculates the product of unique numbers in a list.") calculate_Product_Unique {
        in(x: 100, y: 100, name: "numbers") property(List) numbers_input
        in(x: 200, y: 100, name: "execute") trigger() execute_trigger

        out(x: 300, y: 100, name: "product") property(Number) product_output
        out(x: 400, y: 100, name: "continue") trigger() continue_trigger

        instance(x: 150, y: 200) to_set root.Std_k98ojb.List.ToSet {}
        instance(x: 250, y: 200) product_calculator root.Math.Product {}

        numbers_input -> to_set.list
        to_set.set -> product_calculator.numbers
        execute_trigger -> product_calculator.calculate

        product_calculator.product -> product_output
        product_calculator.done -> continue_trigger
    }
}