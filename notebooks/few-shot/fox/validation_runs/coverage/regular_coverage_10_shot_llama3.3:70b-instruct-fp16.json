[
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_9a4e95 root.Std_k98ojb.Logic.And {}\n        instance(x: -222, y: -55) greaterthan_c51d95 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -56) lessthan_d8f7bf root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 34, y: 112) lessthan_37db7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_c51d95.left\n        0 -> greaterthan_c51d95.right\n        b_f9110a -> lessthan_d8f7bf.left\n        0 -> lessthan_d8f7bf.right\n        b_f9110a -> lessthan_37db7f.left\n        0 -> lessthan_37db7f.right\n        a_9f7759 -> and_9a4e95.left\n        greaterthan_c51d95.result -> and_9a4e95.left\n        lessthan_d8f7bf.result -> and_9a4e95.right\n        execute_12bf99 -> greaterthan_c51d95.execute\n        and_9a4e95.result -> result_b2508f\n        greaterthan_c51d95.execute -> lessthan_d8f7bf.execute\n        lessthan_d8f7bf.execute -> and_9a4e95.execute\n        and_9a4e95.execute -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1011, y: 114) sort_f9f2e5 root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f9f2e5.list\n        sort_f9f2e5.sorted -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_e245cb\n            in(x: -223, y: 18, name: \"current\") property(Number) current_f9110a\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_8ba733\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_e245cb -> mul_4e8c54.first\n            current_f9110a -> mul_4e8c54.second\n            mul_4e8c54.result -> result_8ba733\n        } -> unique_7b3b7b.reducer\n        1 -> unique_7b3b7b.initial\n        unique_7b3b7b.result -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_node root.main.ProductOfUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 954, y: 108) setdifference_f4e2a5 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> setdifference_f4e2a5.left\n        list2_c62075 -> setdifference_f4e2a5.right\n        setdifference_f4e2a5.difference -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> contains_4e8c54.list\n            item_42bc6f -> contains_4e8c54.item\n            instance(x: 137, y: -12) not_3d7de6 root.Std_k98ojb.Logic.Not {}\n            contains_4e8c54.result -> not_3d7de6.input\n            not_3d7de6.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) dissimilar_cbc0b6 root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        num_ai -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e1d root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 554, y: -203) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        for_2a5e1d.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        2 -> for_2a5e1d.start\n        n_9f7759 -> lessthanorequal_f11fda.right\n        for_2a5e1d.index -> lessthanorequal_f11fda.left\n        execute_12bf99 -> for_2a5e1d.reset\n        ifexpression_e38995.then -> continue_685c8f\n        ifexpression_e38995.else -> for_2a5e1d.next\n        for_2a5e1d.done -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_f5a2d7 root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -247) greaterthan_c9e1c4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        instance(x: 24, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        a_9f7759 -> greaterthan_c9e1c4.left\n        0 -> greaterthan_c9e1c4.right\n        greaterthan_c9e1c4.result -> and_f5a2d7.left\n        b_f9110a -> greaterthan_c9e1c4.left\n        0 -> greaterthan_c9e1c4.right\n        instance(x: -8, y: -53) lessthanorequal_4e8c54 root.Std_k98ojb.Math.LessThanOrEqual {}\n        b_f9110a -> lessthanorequal_4e8c54.left\n        0 -> lessthanorequal_4e8c54.right\n        lessthanorequal_4e8c54.result -> and_f5a2d7.right\n        instance(x: -105, y: 17) not_e38995 root.Std_k98ojb.Logic.Not {}\n        a_9f7759 -> greaterthan_c9e1c4.left\n        0 -> greaterthan_c9e1c4.right\n        greaterthan_c9e1c4.result -> not_e38995.input\n        not_e38995.output -> and_f5a2d7.left\n        b_f9110a -> lessthanorequal_4e8c54.left\n        0 -> lessthanorequal_4e8c54.right\n        lessthanorequal_4e8c54.result -> and_f5a2d7.right\n        and_f5a2d7.result -> setter_1cedb2.new_value\n        execute_12bf99 -> and_f5a2d7.execute\n        setter_1cedb2.continue -> continue_685c8f\n        getter_9cceb3.value -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        11 -> modulo_e38995.divisor\n        n_9f7759 -> modulo_e38995.value\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -281, y: -193, name: \"newChar\") property(String) newChar_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_9f7759 -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) replace_node root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        list_ai -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_f5a4d2\n            in(x: -223, y: 18, name: \"current\") property(Number) current_8e9c1f\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_f5a4d2 -> mul_4e8c54.first\n            current_8e9c1f -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> unique_7b3b7b.reducer\n        instance(x: 772, y: 157) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        list_ai -> sort_7b3b7b.list\n        instance(x: 772, y: 236) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        sort_7b3b7b.sorted -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n            in(x: -264, y: 18, name: \"index\") property(Number) index_e5e2c9\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54) not_9cb360 root.Std_k98ojb.Logic.Not {}\n            instance(x: -120, y: -22) equals_584bfd root.Std_k98ojb.Logic.Equal {}\n            index_e5e2c9 -> equals_584bfd.left\n            0 -> equals_584bfd.right\n            equals_584bfd.result -> not_9cb360.input\n            not_9cb360.output -> output_8ba733\n        } -> filter_7b3b7b.handler\n        unique_7b3b7b.accumulated -> output_ai\n        filter_7b3b7b.output_list -> unique_7b3b7b.items\n    }\n\n    \n\n    instance(x: -179, y: 30) product_unique_59bc6e root.main.product_unique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1011, y: 114) setdifference_f5e2a4 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> setdifference_f5e2a4.left\n        list2_c62075 -> setdifference_f5e2a4.right\n        setdifference_f5e2a4.difference -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n            item_42bc6f -> contains_4e8c54.item\n            list2_c62075 -> contains_4e8c54.list\n            Logic.Not {} -> output_e245cb\n            contains_4e8c54.result -> Logic.Not.input\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        list_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        n_c62075 -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2d9e95 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 394, y: 121) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        n_9f7759 -> for_2d9e95.items\n        2 -> for_2d9e95.start\n        execute_12bf99 -> for_2d9e95.reset\n        for_2d9e95.onItem -> ifexpression_e38995.execute\n        for_2d9e95.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> lessthanorequal_f11fda.left\n        for_2d9e95.item -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> for_2d9e95.predicate\n        ifexpression_e38995.then -> continue_685c8f\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> for_2d9e95.next\n        for_2d9e95.done -> setter_1cedb2.execute\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_9a2e46 root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -247) lessthan_4d9e6a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> lessthan_4d9e6a.left\n        0 -> lessthan_4d9e6a.right\n        b_f9110a -> and_9a2e46.left\n        0 -> and_9a2e46.right\n        execute_12bf99 -> lessthan_4d9e6a.execute\n        lessthan_4d9e6a.result -> and_9a2e46.execute\n        and_9a2e46.result -> result_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        true -> if_37db7f.then\n        false -> if_37db7f.else\n        if_37db7f.value -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        instance(x: 954, y: 123) reduce_4e8c54 root.Std_k98ojb.Iteration.Reduce {\n            init_value: 1\n        }\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc\n            in(x: -223, y: 18, name: \"current\") property(Number) current\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc -> mul_4e8c54.first\n            current -> mul_4e8c54.second\n            mul_4e8c54.result -> result\n        } -> reduce_4e8c54.handler\n        input_list -> sort_7b3b7b.list\n        sort_7b3b7b.sorted -> reduce_4e8c54.items\n        reduce_4e8c54.accumulated -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_unique_node root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 954, y: 108) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1155, y: 145) contains_1d86d4 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            contains_1d86d4.result -> not_4e8c54.input\n            list2_c62075 -> contains_1d86d4.list\n            item_42bc6f -> contains_1d86d4.item\n            not_4e8c54.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        num_ai -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.item\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e1d root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) lessthanorequal_e38995 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 394, y: 121) modulo_f9110a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: 56) if_37db7f root.Std_k98ojb.Std.If {}\n        setter(x: -144, y: -268, name: \"setter_9cceb3\") setter_9cceb3 = i\n        getter(x: 24, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = i\n        instance(x: -202, y: -236) equal_d41a5e root.Std_k98ojb.Logic.Equal {}\n        n_9f7759 -> lessthanorequal_e38995.right\n        1 -> lessthanorequal_e38995.left\n        execute_12bf99 -> for_2a5e1d.reset\n        for_2a5f1d.item -> modulo_f9110a.value\n        for_2a5f1d.index -> modulo_f9110a.divisor\n        2 -> setter_9cceb3.new_value\n        setter_9cceb3.continue -> for_2a5f1d.next\n        for_2a5f1d.onItem -> if_37db7f.execute\n        modulo_f9110a.result -> if_37db7f.predicate\n        0 -> if_37db7f.value\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> for_2a5f1d.next\n        n_9f7759 -> equal_d41a5e.left\n        1 -> equal_d41a5e.right\n        equal_d41a5e.result -> isPrime_b2508f\n        for_2a5f1d.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_9a4e95 root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -247) greaterthan_c5d935 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> greaterthan_c5d935.left\n        0 -> greaterthan_c5d935.right\n        b_f9110a -> and_9a4e95.left\n        0 -> and_9a4e95.right\n        execute_12bf99 -> greaterthan_c5d935.execute\n        greaterthan_c5d935.result -> setter_1cedb2.new_value\n        and_9a4e95.result -> setter_37db7f.new_value\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n        greaterthan_c5d935.result -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1011, y: 78) sort_f2a5e4 root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f2a5e4.list\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_42bc6f\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_42bc6f -> mul_4e8c54.first\n            current_1d86d4 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> unique_7b3b7b.reducer\n        sort_f2a5e4.sorted -> unique_7b3b7b.list\n        1 -> unique_7b3b7b.initial\n        unique_7b3b7b.result -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_node root.main.ProductOfUnique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1051, y: 115) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 901, y: 77) contains_9cb360 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            contains_9cb360.result -> not_2f9d09.input\n            list2_c62075 -> contains_9cb360.list\n            item_86a8fb -> contains_9cb360.item\n            not_2f9d09.output -> output_8ba733\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        num_ai -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e46 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -44) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 394, y: -114) lessthanorequal_9f7759 root.Std_k98ojb.Math.LessThanOrEqual {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: -200, y: -236) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        2 -> generaterange_038fce.from\n        n_9f7759 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_2a5e46.items\n        for_2a5e46.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        for_2a5e46.index -> lessthanorequal_9f7759.left\n        n_9f7759 -> lessthanorequal_9f7759.right\n        lessthanorequal_9f7759.result -> for_2a5e46.predicate\n        execute_12bf99 -> for_2a5e46.reset\n        ifexpression_e38995.then -> for_2a5e46.next\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        for_2a5e46.done -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_f5a2d7 root.Std_k98ojb.Logic.And {}\n        instance(x: -247, y: -33) greaterthan_c9e3a4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: 112) lessthanorequal_37db7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -144, y: 67) lessthanorequal_e38995 root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_c9e3a4.left\n        0 -> greaterthan_c9e3a4.right\n        b_f9110a -> lessthanorequal_37db7f.left\n        0 -> lessthanorequal_37db7f.right\n        a_9f7759 -> lessthanorequal_e38995.left\n        0 -> lessthanorequal_e38995.right\n        b_f9110a -> and_f5a2d7.right\n        greaterthan_c9e3a4.result -> and_f5a2d7.left\n        lessthanorequal_37db7f.result -> and_f5a2d7.left\n        lessthanorequal_e38995.result -> and_f5a2d7.left\n        and_f5a2d7.result -> result_b2508f\n        execute_12bf99 -> greaterthan_c9e3a4.execute\n        execute_12bf99 -> lessthanorequal_37db7f.execute\n        execute_12bf99 -> lessthanorequal_e38995.execute\n        greaterthan_c9e3a4.continue -> continue_685c8f\n        lessthanorequal_37db7f.continue -> continue_685c8f\n        lessthanorequal_e38995.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        11 -> modulo_e38995.divisor\n        n_9f7759 -> modulo_e38995.value\n        modulo_e38995.result -> if_37db7f.input\n        0 -> if_37db7f.then_value\n        execute_12bf99 -> if_37db7f.execute\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -281, y: -193, name: \"newChar\") property(String) newChar_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_9f7759 -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) replace_node root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        list_ai -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_f5a4d2\n            in(x: -223, y: 18, name: \"current\") property(Number) current_8e9c1f\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_f5a4d2 -> mul_4e8c54.first\n            current_8e9c1f -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> unique_7b3b7b.reducer\n        instance(x: 772, y: 157) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        list_ai -> sort_7b3b7b.list\n        instance(x: 772, y: 236) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        sort_7b3b7b.sorted -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n            in(x: -262, y: 18, name: \"index\") property(Number) index_e5c1e6\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54) not_9cb360 root.Std_k98ojb.Logic.Not {}\n            instance(x: -120, y: -55) equals_2c1d5a root.Std_k98ojb.Logic.Equal {}\n            index_e5c1e6 -> equals_2c1d5a.left\n            0 -> equals_2c1d5a.right\n            equals_2c1d5a.result -> not_9cb360.input\n            instance(x: -8, y: 19) getat_f4f3b7 root.Std_k98ojb.List.GetAt {}\n            sort_7b3b7b.sorted -> getat_f4f3b7.list\n            index_e5c1e6 -> getat_f4f3b7.index\n            getat_f4f3b7.itemAtIndex -> equals_2c1d5a.right\n            not_9cb360.result -> output_8ba733\n        } -> filter_7b3b7b.handler\n        unique_7b3b7b.result -> output_ai\n        filter_7b3b7b.output_list -> unique_7b3b7b.items\n    }\n\n    \n\n    instance(x: -179, y: 30) product_unique_59bc6e root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 123, y: 90) concat_e48c21 root.Std_k98ojb.List.Concat {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) notcontains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> notcontains_4e8c54.list\n            item_42bc6f -> notcontains_4e8c54.item\n            notcontains_4e8c54.result -> output_e245cb\n        } -> filter_7b3b7b.handler\n        instance(x: 901, y: 76) filter_7b3b7d root.Std_k98ojb.Iteration.Filter {}\n        list2_c62075 -> filter_7b3b7d.items\n        func() {\n            in(x: -272, y: -69, name: \"item\") property(Number) item_42bc6g\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cg\n\n            instance(x: -8, y: -53) notcontains_4e8c55 root.Std_k98ojb.List.Contains {}\n            list1_ai -> notcontains_4e8c55.list\n            item_42bc6g -> notcontains_4e8c55.item\n            notcontains_4e8c55.result -> output_e245cg\n        } -> filter_7b3b7d.handler\n        concat_e48c21.left -> filter_7b3b7b.output_list\n        concat_e48c21.right -> filter_7b3b7d.output_list\n        concat_e48c21.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) dissimilar_59bc6e root.main.Dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        list_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        n_c62075 -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2d9e95 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 394, y: 121) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        n_9f7759 -> for_2d9e95.items\n        2 -> for_2d9e95.start\n        execute_12bf99 -> for_2d9e95.reset\n        for_2d9e95.onItem -> ifexpression_e38995.execute\n        for_2d9e95.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> lessthanorequal_f11fda.left\n        for_2d9e95.item -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> for_2d9e95.predicate\n        ifexpression_e38995.then -> continue_685c8f\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> for_2d9e95.next\n        for_2d9e95.done -> setter_1cedb2.execute\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_9a2e46 root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -247) lessthan_4d9e6a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> lessthan_4d9e6a.left\n        0 -> lessthan_4d9e6a.right\n        b_f9110a -> and_9a2e46.left\n        0 -> and_9a2e46.right\n        execute_12bf99 -> lessthan_4d9e6a.execute\n        lessthan_4d9e6a.result -> and_9a2e46.execute\n        and_9a2e46.result -> result_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        instance(x: 954, y: 123) reduce_4e8c54 root.Std_k98ojb.Iteration.Reduce {\n            init_value: 1\n        }\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc\n            in(x: -223, y: 18, name: \"current\") property(Number) current\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc -> mul_4e8c54.first\n            current -> mul_4e8c54.second\n            mul_4e8c54.result -> result\n        } -> reduce_4e8c54.handler\n        input_list -> sort_7b3b7b.list\n        sort_7b3b7b.sorted -> reduce_4e8c54.items\n        reduce_4e8c54.accumulated -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_unique_node root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 954, y: 108) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1155, y: 145) contains_1d86d4 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            contains_1d86d4.result -> not_4e8c54.input\n            list2_c62075 -> contains_1d86d4.list\n            item_42bc6f -> contains_1d86d4.item\n            not_4e8c54.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        num_ai -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.item\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e1d root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) lessthanorequal_e38995 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 394, y: 121) modulo_f9110a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: 56) if_37db7f root.Std_k98ojb.Std.If {}\n        setter(x: -144, y: -268, name: \"setter_9cceb3\") setter_9cceb3 = i\n        getter(x: 24, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = i\n        instance(x: -202, y: -236) equal_d41a5e root.Std_k98ojb.Logic.Equal {}\n        n_9f7759 -> lessthanorequal_e38995.right\n        1 -> lessthanorequal_e38995.left\n        execute_12bf99 -> for_2a5e1d.reset\n        for_2a5f1d.item -> modulo_f9110a.value\n        for_2a5f1d.index -> modulo_f9110a.divisor\n        2 -> setter_9cceb3.new_value\n        setter_9cceb3.continue -> for_2a5f1d.next\n        for_2a5f1d.onItem -> if_37db7f.execute\n        modulo_f9110a.result -> if_37db7f.predicate\n        0 -> if_37db7f.value\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> for_2a5f1d.next\n        n_9f7759 -> equal_d41a5e.left\n        1 -> equal_d41a5e.right\n        equal_d41a5e.result -> isPrime_b2508f\n        for_2a5f1d.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_9a4e95 root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -247) greaterthan_c5d935 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> greaterthan_c5d935.left\n        0 -> greaterthan_c5d935.right\n        b_f9110a -> and_9a4e95.left\n        0 -> and_9a4e95.right\n        execute_12bf99 -> greaterthan_c5d935.execute\n        greaterthan_c5d935.result -> setter_1cedb2.new_value\n        and_9a4e95.result -> setter_37db7f.new_value\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n        greaterthan_c5d935.result -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1011, y: 78) sort_f2a5e4 root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f2a5e4.list\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_42bc6f\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_42bc6f -> mul_4e8c54.first\n            current_1d86d4 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> unique_7b3b7b.reducer\n        sort_f2a5e4.sorted -> unique_7b3b7b.list\n        1 -> unique_7b3b7b.initial\n        unique_7b3b7b.result -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_node root.main.ProductOfUnique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1051, y: 108) concat_e4a5c2 root.Std_k98ojb.List.Concat {}\n        instance(x: 936, y: -23) difference_f0e6d9 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) notcontains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> notcontains_4e8c54.list\n            item_42bc6f -> notcontains_4e8c54.item\n            notcontains_4e8c54.result -> output_e245cb\n        } -> filter_7b3b7b.handler\n        instance(x: 1051, y: -192) filter_5a2d22 root.Std_k98ojb.Iteration.Filter {}\n        list2_c62075 -> filter_5a2d22.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) notcontains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list1_ai -> notcontains_4e8c54.list\n            item_42bc6f -> notcontains_4e8c54.item\n            notcontains_4e8c54.result -> output_e245cb\n        } -> filter_5a2d22.handler\n        filter_7b3b7b.output_list -> concat_e4a5c2.left\n        filter_5a2d22.output_list -> concat_e4a5c2.right\n        concat_e4a5c2.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) dissimilar_59bc6e root.main.Dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        num_ai -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e46 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -44) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 394, y: -114) lessthanorequal_9f7759 root.Std_k98ojb.Math.LessThanOrEqual {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: -200, y: -236) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        2 -> generaterange_038fce.from\n        n_9f7759 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_2a5e46.items\n        for_2a5e46.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        for_2a5e46.index -> lessthanorequal_9f7759.left\n        n_9f7759 -> lessthanorequal_9f7759.right\n        lessthanorequal_9f7759.result -> for_2a5e46.predicate\n        execute_12bf99 -> for_2a5e46.reset\n        ifexpression_e38995.then -> for_2a5e46.next\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        for_2a5e46.done -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_f5a2d7 root.Std_k98ojb.Logic.And {}\n        instance(x: -247, y: -33) greaterthan_c9e3a4 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: 112) lessthanorequal_37db7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -144, y: 67) lessthanorequal_e38995 root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_c9e3a4.left\n        0 -> greaterthan_c9e3a4.right\n        b_f9110a -> lessthanorequal_37db7f.left\n        0 -> lessthanorequal_37db7f.right\n        a_9f7759 -> lessthanorequal_e38995.left\n        0 -> lessthanorequal_e38995.right\n        b_f9110a -> and_f5a2d7.right\n        greaterthan_c9e3a4.result -> and_f5a2d7.left\n        lessthanorequal_37db7f.result -> and_f5a2d7.left\n        lessthanorequal_e38995.result -> and_f5a2d7.left\n        and_f5a2d7.result -> result_b2508f\n        execute_12bf99 -> greaterthan_c9e3a4.execute\n        execute_12bf99 -> lessthanorequal_37db7f.execute\n        execute_12bf99 -> lessthanorequal_e38995.execute\n        greaterthan_c9e3a4.continue -> continue_685c8f\n        lessthanorequal_37db7f.continue -> continue_685c8f\n        lessthanorequal_e38995.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        11 -> modulo_e38995.divisor\n        n_9f7759 -> modulo_e38995.value\n        modulo_e38995.result -> if_37db7f.input\n        0 -> if_37db7f.then_value\n        execute_12bf99 -> if_37db7f.execute\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -281, y: -193, name: \"newChar\") property(String) newChar_9f7759\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_9f7759 -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) replace_node root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        list_ai -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_f5a4d2\n            in(x: -223, y: 18, name: \"current\") property(Number) current_8e9c1f\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_f5a4d2 -> mul_4e8c54.first\n            current_8e9c1f -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> unique_7b3b7b.reducer\n        instance(x: 772, y: 157) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        list_ai -> sort_7b3b7b.list\n        instance(x: 772, y: 236) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        sort_7b3b7b.sorted -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n            in(x: -262, y: 18, name: \"index\") property(Number) index_e5c1e6\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54) not_9cb360 root.Std_k98ojb.Logic.Not {}\n            instance(x: -120, y: -55) equals_2c1f6a root.Std_k98ojb.Logic.Equal {}\n            index_e5c1e6 -> equals_2c1f6a.left\n            0 -> equals_2c1f6a.right\n            equals_2c1f6a.result -> not_9cb360.input\n            instance(x: -8, y: 19) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n            current_86a8fb -> contains_4e8c54.item\n            sort_7b3b7b.sorted -> contains_4e8c54.list\n            instance(x: -120, y: 19) slice_2c1f6a root.Std_k98ojb.List.Slice {}\n            0 -> slice_2c1f6a.start\n            index_e5c1e6 -> slice_2c1f6a.end\n            sort_7b3b7b.sorted -> slice_2c1f6a.list\n            slice_2c1f6a.slice -> contains_4e8c54.list\n            not_9cb360.result -> output_8ba733\n        } -> filter_7b3b7b.handler\n        unique_7b3b7b.initialValue -> 1\n        filter_7b3b7b.output_list -> unique_7b3b7b.items\n        unique_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) product_unique_f0be66 root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 123, y: 90) concat_e48c21 root.Std_k98ojb.List.Concat {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) notcontains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> notcontains_4e8c54.list\n            item_42bc6f -> notcontains_4e8c54.item\n            notcontains_4e8c54.result -> output_e245cb\n        } -> filter_7b3b7b.handler\n        instance(x: 901, y: 76) filter_7b3b7d root.Std_k98ojb.Iteration.Filter {}\n        list2_c62075 -> filter_7b3b7d.items\n        func() {\n            in(x: -272, y: -69, name: \"item\") property(Number) item_42bc6g\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cg\n\n            instance(x: -8, y: -53) notcontains_4e8c55 root.Std_k98ojb.List.Contains {}\n            list1_ai -> notcontains_4e8c55.list\n            item_42bc6g -> notcontains_4e8c55.item\n            notcontains_4e8c55.result -> output_e245cg\n        } -> filter_7b3b7d.handler\n        concat_e48c21.left -> filter_7b3b7b.output_list\n        concat_e48c21.right -> filter_7b3b7d.output_list\n        concat_e48c21.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) dissimilar_59bc6e root.main.Dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        list_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        n_c62075 -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2d9e95 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 394, y: 121) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        n_9f7759 -> for_2d9e95.items\n        2 -> for_2d9e95.start\n        execute_12bf99 -> for_2d9e95.reset\n        for_2d9e95.onItem -> ifexpression_e38995.execute\n        for_2d9e95.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> lessthanorequal_f11fda.left\n        for_2d9e95.item -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> for_2d9e95.predicate\n        ifexpression_e38995.then -> continue_685c8f\n        true -> setter_1cedb2.new_value\n        ifexpression_e38995.else -> for_2d9e95.next\n        for_2d9e95.done -> setter_1cedb2.execute\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_9a2e46 root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -247) lessthan_4d9e6a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> lessthan_4d9e6a.left\n        0 -> lessthan_4d9e6a.right\n        b_f9110a -> and_9a2e46.left\n        0 -> and_9a2e46.right\n        execute_12bf99 -> lessthan_4d9e6a.execute\n        lessthan_4d9e6a.result -> and_9a2e46.execute\n        and_9a2e46.result -> result_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n        setter_37db7f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        instance(x: 954, y: 123) reduce_4e8c54 root.Std_k98ojb.Iteration.Reduce {\n            init_value: 1\n        }\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc\n            in(x: -223, y: 18, name: \"current\") property(Number) current\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc -> mul_4e8c54.first\n            current -> mul_4e8c54.second\n            mul_4e8c54.result -> result\n        } -> reduce_4e8c54.handler\n        input_list -> sort_7b3b7b.list\n        sort_7b3b7b.sorted -> reduce_4e8c54.items\n        reduce_4e8c54.accumulated -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_unique_node root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 954, y: 108) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n        instance(x: 1155, y: 145) contains_1d86d4 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            contains_1d86d4.result -> not_4e8c54.input\n            list2_c62075 -> contains_1d86d4.list\n            item_42bc6f -> contains_1d86d4.item\n            not_4e8c54.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        num_ai -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.item\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e1d root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) lessthanorequal_e38995 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 394, y: 121) modulo_f9110a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: 56) if_37db7f root.Std_k98ojb.Std.If {}\n        setter(x: -144, y: -268, name: \"setter_9cceb3\") setter_9cceb3 = i\n        getter(x: 24, y: 112, name: \"getter_1cedb2\") getter_1cedb2 = i\n        instance(x: -202, y: -236) equal_d41a5e root.Std_k98ojb.Logic.Equal {}\n        n_9f7759 -> lessthanorequal_e38995.right\n        1 -> lessthanorequal_e38995.left\n        execute_12bf99 -> for_2a5e1d.reset\n        for_2a5f1d.item -> modulo_f9110a.value\n        for_2a5f1d.index -> modulo_f9110a.divisor\n        2 -> setter_9cceb3.new_value\n        setter_9cceb3.continue -> for_2a5f1d.next\n        for_2a5f1d.onItem -> if_37db7f.execute\n        modulo_f9110a.result -> if_37db7f.predicate\n        0 -> if_37db7f.value\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> for_2a5f1d.next\n        n_9f7759 -> equal_d41a5e.left\n        1 -> equal_d41a5e.right\n        equal_d41a5e.result -> isPrime_b2508f\n        for_2a5f1d.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_9a4e95 root.Std_k98ojb.Logic.And {}\n        instance(x: -222, y: -55) greaterthan_c51d95 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -56) lessthan_dfa7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 116, y: -268) lessthan_37db7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_c51d95.left\n        0 -> greaterthan_c51d95.right\n        b_f9110a -> lessthan_dfa7f.left\n        0 -> lessthan_dfa7f.right\n        a_9f7759 -> lessthan_37db7f.left\n        0 -> lessthan_37db7f.right\n        b_f9110a -> and_9a4e95.right\n        greaterthan_c51d95.result -> and_9a4e95.left\n        lessthan_dfa7f.result -> and_9a4e95.left\n        lessthan_37db7f.result -> and_9a4e95.right\n        execute_12bf99 -> greaterthan_c51d95.execute\n        execute_12bf99 -> lessthan_dfa7f.execute\n        execute_12bf99 -> lessthan_37db7f.execute\n        and_9a4e95.result -> result_b2508f\n        and_9a4e95.result -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1011, y: 114) sort_f9f2e5 root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f9f2e5.list\n        sort_f9f2e5.sorted -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_e245cb\n            in(x: -223, y: 18, name: \"current\") property(Number) current_f9110a\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_8ba733\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_e245cb -> mul_4e8c54.first\n            current_f9110a -> mul_4e8c54.second\n            mul_4e8c54.result -> result_8ba733\n        } -> unique_7b3b7b.reducer\n        1 -> unique_7b3b7b.initial\n        unique_7b3b7b.result -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_node root.main.ProductOfUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1051, y: 115) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 936, y: 114) contains_9cb360 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            contains_9cb360.result -> not_2f9d09.input\n            list2_c62075 -> contains_9cb360.list\n            item_86a8fb -> contains_9cb360.item\n            not_2f9d09.output -> output_8ba733\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        num_ai -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e1d root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 554, y: -203) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        for_2a5e1d.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        2 -> for_2a5e1d.start\n        n_9f7759 -> lessthanorequal_f11fda.right\n        for_2a5e1d.index -> lessthanorequal_f11fda.left\n        execute_12bf99 -> for_2a5e1d.reset\n        ifexpression_e38995.then -> continue_685c8f\n        ifexpression_e38995.else -> for_2a5e1d.next\n        for_2a5e1d.done -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_f9e5a3 root.Std_k98ojb.Logic.And {}\n        instance(x: -247, y: -52) greaterthan_c9d95b root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 116, y: -268) lessthanorequal_daeec1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 118, y: -56) lessthanorequal_37db7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_c9d95b.left\n        0 -> greaterthan_c9d95b.right\n        b_f9110a -> lessthanorequal_daeec1.left\n        0 -> lessthanorequal_daeec1.right\n        greaterthan_c9d95b.result -> and_f9e5a3.left\n        lessthanorequal_daeec1.result -> and_f9e5a3.right\n        a_9f7759 -> lessthanorequal_37db7f.left\n        0 -> lessthanorequal_37db7f.right\n        b_f9110a -> greaterthan_c9d95b.left\n        0 -> greaterthan_c9d95b.right\n        lessthanorequal_37db7f.result -> and_f9e5a3.left\n        greaterthan_c9d95b.result -> and_f9e5a3.right\n        execute_12bf99 -> and_f9e5a3.execute\n        and_f9e5a3.result -> result_b2508f\n        and_f9e5a3.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        instance(x: 118, y: 17) equalto_37db7f root.Std_k98ojb.Logic.Equal {}\n        0 -> equalto_37db7f.left\n        modulo_e38995.result -> equalto_37db7f.right\n        equalto_37db7f.result -> result_b2508f\n        execute_12bf99 -> modulo_e38995.execute\n        modulo_e38995.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -281, y: -193, name: \"str\") property(String) str_9f7759\n        in(x: -272, y: 17, name: \"oldChar\") property(String) oldChar_f9110a\n        in(x: -259, y: 105, name: \"newChar\") property(String) newChar_2e3d4b\n        out(x: 46, y: 158, name: \"result\") property(String) result_b2508f\n\n        instance(x: -105, y: -110) replace_d9c95a root.Std_k98ojb.Strings.Replace {}\n        str_9f7759 -> replace_d9c95a.input\n        oldChar_f9110a -> replace_d9c95a.search\n        newChar_2e3d4b -> replace_d9c95a.replace\n        replace_d9c95a.result -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Replace_d6e930 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        list_ai -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_f5c03d\n            in(x: -223, y: 18, name: \"item\") property(Number) item_e19a62\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_9fba8c\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_f5c03d -> mul_4e8c54.first\n            item_e19a62 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_9fba8c\n        } -> unique_7b3b7b.reducer\n        unique_7b3b7b.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) product_unique_node root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 123, y: 100) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n        instance(x: -8, y: -53) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            list2_c62075 -> contains_4e8c54.list\n            item_42bc6f -> contains_4e8c54.item\n            contains_4e8c54.result -> not_4e8c54.input\n            not_4e8c54.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 954, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 954, y: 156) length_8815e6 root.Std_k98ojb.List.Length {}\n        list_ai -> length_8815e6.list\n        instance(x: 772, y: 234) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        length_8815e6.length -> sub_9ff257.first\n        n_c62075 -> sub_9ff257.second\n        sub_9ff257.result -> slice_9fba8c.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -531, y: 2, name: \"array\") property(List) array_ai\n        out(x: 340, y: 77, name: \"sum\") property(Number) sum_ai\n\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(a, b) => a + b\"\n        }\n        array_ai -> reduce_7b3b7b.item\n        reduce_7b3b7b.result -> sum_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) sumarray_59bc6e root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_e38995 root.Std_k98ojb.Std.For {}\n        instance(x: 116, y: 112) modulo_9cceb3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: -56) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 212, y: -268) ifexpression_1cedb2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        n_9f7759 -> ifexpression_37db7f.gen_0\n        execute_12bf99 -> ifexpression_37db7f.execute\n        ifexpression_37db7f.then -> continue_685c8f\n        ifexpression_37db7f.else -> for_e38995.reset\n        2 -> for_e38995.start\n        n_9f7759 -> for_e38995.end\n        for_e38995.item -> modulo_9cceb3.value\n        for_e38995.index -> modulo_9cceb3.divisor\n        modulo_9cceb3.result -> ifexpression_1cedb2.gen_0\n        n_9f7759 -> ifexpression_1cedb2.gen_1\n        for_e38995.onItem -> ifexpression_1cedb2.execute\n        ifexpression_1cedb2.then -> continue_685c8f\n        ifexpression_1cedb2.else -> for_e38995.next\n        for_e38995.done -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") check_opposite_sign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_5a1e2d root.Std_k98ojb.Logic.And {}\n        instance(x: -222, y: -62) greaterthan_afebab root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -56) lessthanorequal_c9e3f4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 93, y: 112) lessthanorequal_37db7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_afebab.left\n        0 -> greaterthan_afebab.right\n        b_f9110a -> lessthanorequal_c9e3f4.left\n        0 -> lessthanorequal_c9e3f4.right\n        greaterthan_afebab.result -> and_5a1e2d.left\n        lessthanorequal_c9e3f4.result -> and_5a1e2d.right\n        instance(x: -32, y: 173) or_e38995 root.Std_k98ojb.Logic.And {}\n        a_9f7759 -> lessthanorequal_37db7f.left\n        0 -> lessthanorequal_37db7f.right\n        b_f9110a -> greaterthan_afebab.left\n        0 -> greaterthan_afebab.right\n        lessthanorequal_37db7f.result -> or_e38995.left\n        greaterthan_afebab.result -> or_e38995.right\n        or_e38995.result -> and_5a1e2d.left\n        and_5a1e2d.result -> result_b2508f\n        execute_12bf99 -> greaterthan_afebab.execute\n        greaterthan_afebab.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) check_opposite_sign_d6e930 root.main.check_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        true -> if_37db7f.then\n        false -> if_37db7f.else\n        if_37db7f.value -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -281, y: -193, name: \"input\") property(String) input_9f7759\n        in(x: -272, y: 17, name: \"oldChar\") property(String) oldChar_f9110a\n        in(x: -262, y: 117, name: \"newChar\") property(String) newChar_3b5e4d\n\n        out(x: 46, y: 158, name: \"output\") property(String) output_b2508f\n\n        instance(x: -105, y: -110) replace_2a1c51 root.Std_k98ojb.Strings.Replace {}\n        input_9f7759 -> replace_2a1c51.input\n        oldChar_f9110a -> replace_2a1c51.search\n        newChar_3b5e4d -> replace_2a1c51.replace\n        replace_2a1c51.output -> output_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Replace_d6e930 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: 15, y: -155, name: \"input\") property(String) input_4e8c54\n        out(x: 340, y: 77, name: \"output\") property(String) output_4e8c54\n\n        instance(x: 172, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_4e8c54 -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_4e8c54\n    }\n\n    \n\n    instance(x: -34, y: 127) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sort_f7c5a9 root.Std_k98ojb.List.Sort {}\n        instance(x: 1002, y: 78) reduce_4d1e0f root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_42bc6f\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_42bc6f -> mul_4e8c54.first\n            current_1d86d4 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> reduce_4d1e0f.handler\n        input_ai -> sort_f7c5a9.list\n        sort_f7c5a9.sorted -> reduce_4d1e0f.items\n        1 -> reduce_4d1e0f.initial\n        reduce_4d1e0f.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) uniqueproduct_59bc6e root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 123, y: -105) setdiff_f0e8a6 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> setdiff_f0e8a6.left\n        list2_c62075 -> setdiff_f0e8a6.right\n        func() {\n            in(x: -272, y: 18, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> contains_4e8c54.list\n            item_42bc6f -> contains_4e8c54.item\n            instance(x: 92, y: -22) not_d41a1d root.Std_k98ojb.Logic.Not {}\n            contains_4e8c54.result -> not_d41a1d.input\n            not_d41a1d.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        setdiff_f0e8a6.difference -> output_ai\n        list1_ai -> filter_7b3b7b.items\n    }\n\n    \n\n    instance(x: -34, y: 127) find_dissimilar_node root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 75) concat_4c6e2d root.Std_k98ojb.List.Concat {}\n        instance(x: 772, y: 219) length_e48a9f root.Std_k98ojb.List.Length {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        length_e48a9f.length -> slice_7b3b7b.end\n        input_ai -> length_e48a9f.list\n        instance(x: 958, y: 219) slice_31clea root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_31clea.list\n        0 -> slice_31clea.start\n        num_ai -> slice_31clea.end\n        slice_31clea.slice -> concat_4c6e2d.left\n        slice_7b3b7b.slice -> concat_4c6e2d.right\n        concat_4c6e2d.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_list_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        func() {\n            in(x: -272, y: -48, name: \"acc\") property(Number) acc_86a8fb\n            in(x: -263, y: 18, name: \"current\") property(Number) current_5f51f7\n\n            out(x: 405, y: -52, name: \"result\") property(Number) result_e245cb\n\n            instance(x: 92, y: -22) add_584bfd root.Std_k98ojb.Math.Add {}\n            acc_86a8fb -> add_584bfd.first\n            current_5f51f7 -> add_584bfd.second\n            add_584bfd.result -> result_e245cb\n        } -> reduce_e38995.handler\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n        execute_12bf99 -> reduce_e38995.execute\n        reduce_e38995.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2d1e6a root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 384, y: 121) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = isPrime\n        n_9f7759 -> for_2d1e6a.items\n        2 -> for_2d1e6a.start\n        n_9f7759 -> modulo_e38995.value\n        for_2d1e6a.index -> modulo_e38995.divisor\n        execute_12bf99 -> for_2d1e6a.reset\n        for_2d1e6a.onItem -> ifexpression_37db7f.execute\n        ifexpression_37db7f.then -> setter_1cedb2.execute\n        false -> setter_1cedb2.new_value\n        ifexpression_37db7f.else -> for_2d1e6a.next\n        true -> setter_37db7f.new_value\n        for_2d1e6a.done -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n        getter_9cceb3.value -> isPrime_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_9a5e95 root.Std_k98ojb.Logic.And {}\n        instance(x: -222, y: -44) greaterthan_c51d95 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -56) lessthan_d8f7bf root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 34, y: 112) lessthan_37db7f root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_c51d95.left\n        0 -> greaterthan_c51d95.right\n        b_f9110a -> lessthan_d8f7bf.left\n        0 -> lessthan_d8f7bf.right\n        greaterthan_c51d95.result -> and_9a5e95.left\n        lessthan_d8f7bf.result -> and_9a5e95.right\n        a_9f7759 -> lessthan_37db7f.left\n        0 -> lessthan_37db7f.right\n        b_f9110a -> greaterthan_c51d95.left\n        instance(x: -105, y: 146) and_d8c7bf root.Std_k98ojb.Logic.And {}\n        and_d8c7bf.left <- lessthan_37db7f.result\n        and_d8c7bf.right <- greaterthan_c51d95.result\n        and_9a5e95.result -> result_b2508f\n        execute_12bf99 -> and_9a5e95.execute\n        and_9a5e95.execute -> and_d8c7bf.execute\n        and_d8c7bf.result -> result_b2508f\n        and_9a5e95.continue -> continue_685c8f\n        and_d8c7bf.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1002, y: 115) sort_f9f1a5 root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f9f1a5.list\n        sort_f9f1a5.sorted -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_e245cb\n            in(x: -223, y: 18, name: \"current\") property(Number) current_f9110a\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_8ba733\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_e245cb -> mul_4e8c54.first\n            current_f9110a -> mul_4e8c54.second\n            mul_4e8c54.result -> result_8ba733\n        } -> unique_7b3b7b.reducer\n        1 -> unique_7b3b7b.initial\n        unique_7b3b7b.result -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_node root.main.ProductOfUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1051, y: 114) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 901, y: -22) contains_5c4634 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            contains_5c4634.result -> not_2f9d09.input\n            list2_c62075 -> contains_5c4634.list\n            item_86a8fb -> contains_5c4634.item\n            not_2f9d09.output -> output_8ba733\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 26) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 28) sub_584bfd root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: -22) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_584bfd.first\n        num_ai -> sub_584bfd.second\n        sub_584bfd.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e46 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -44) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 384, y: -114) lessthanorequal_9f7759 root.Std_k98ojb.Math.LessThanOrEqual {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: -200, y: -236) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        2 -> generaterange_038fce.from\n        n_9f7759 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_2a5e46.items\n        for_2a5e46.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        for_2a5e46.index -> lessthanorequal_9f7759.left\n        n_9f7759 -> lessthanorequal_9f7759.right\n        lessthanorequal_9f7759.result -> for_2a5e46.predicate\n        execute_12bf99 -> for_2a5e46.reset\n        ifexpression_e38995.then -> for_2a5e46.next\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        for_2a5e46.done -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_f4e2a5 root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -55) greaterthan_c9d815 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -194) lessthan_751f65 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 104, y: 115) lessthan_dfafe3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -131, y: 61) greaterthan_5c4e2d root.Std_k98ojb.Math.GreaterThan {}\n        a_9f7759 -> greaterthan_c9d815.left\n        0 -> greaterthan_c9d815.right\n        b_f9110a -> lessthan_751f65.left\n        0 -> lessthan_751f65.right\n        and_f4e2a5.result -> result_b2508f\n        greaterthan_c9d815.result -> and_f4e2a5.left\n        lessthan_751f65.result -> and_f4e2a5.right\n        execute_12bf99 -> greaterthan_c9d815.execute\n        greaterthan_c9d815.continue -> lessthan_751f65.execute\n        lessthan_751f65.continue -> and_f4e2a5.execute\n        and_f4e2a5.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_4e5a2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: -34, y: 23) equals_65a321 root.Std_k98ojb.Logic.Equal {}\n        n_9f7759 -> modulo_4e5a2d.value\n        11 -> modulo_4e5a2d.divisor\n        execute_12bf99 -> modulo_4e5a2d.execute\n        modulo_4e5a2d.result -> equals_65a321.left\n        0 -> equals_65a321.right\n        equals_65a321.result -> result_b2508f\n        equals_65a321.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -281, y: -193, name: \"str\") property(String) str_9f7759\n        in(x: -272, y: 17, name: \"oldChar\") property(String) oldChar_f9110a\n        in(x: -259, y: 105, name: \"newChar\") property(String) newChar_2e4d8c\n        out(x: 46, y: 158, name: \"result\") property(String) result_b2508f\n\n        instance(x: -105, y: -110) replace_d6b5a7 root.Std_k98ojb.Strings.Replace {}\n        str_9f7759 -> replace_d6b5a7.input\n        oldChar_f9110a -> replace_d6b5a7.search\n        newChar_2e4d8c -> replace_d6b5a7.replace\n        replace_d6b5a7.output -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Replace_49b4f3 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        list_ai -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_f5c03d\n            in(x: -223, y: 18, name: \"current\") property(Number) current_e808a2\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_9fba8c\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_f5c03d -> mul_4e8c54.first\n            current_e808a2 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_9fba8c\n        } -> unique_7b3b7b.reducer\n        instance(x: 772, y: 156) sort_b5d10a root.Std_k98ojb.List.Sort {}\n        list_ai -> sort_b5d10a.list\n        instance(x: 772, y: 236) filter_c1bb22 root.Std_k98ojb.Iteration.Filter {}\n        sort_b5d10a.sorted -> filter_c1bb22.items\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n            in(x: -264, y: 18, name: \"index\") property(Number) index_f4d6c9\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") equals_9cb360 root.Std_k98ojb.Logic.Equal {}\n            current_86a8fb -> equals_9cb360.left\n            index_f4d6c9 -> filter_c1bb22.index\n            list_ai -> equals_9cb360.right\n            equals_9cb360.result -> output_8ba733\n        } -> filter_c1bb22.handler\n        filter_c1bb22.output_list -> unique_7b3b7b.items\n        1 -> unique_7b3b7b.initialValue\n        unique_7b3b7b.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) product_unique_59bc6e root.main.product_unique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 401, y: 25) concat_e4a5d2 root.Std_k98ojb.List.Concat {}\n        list1_ai -> concat_e4a5d2.left\n        list2_c62075 -> concat_e4a5d2.right\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list1_ai -> contains_4e8c54.list\n            item_42bc6f -> contains_4e8c54.item\n            instance(x: 92, y: 19) not_e245cb root.Std_k98ojb.Logic.Not {}\n            contains_4e8c54.result -> not_e245cb.input\n            not_e245cb.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        concat_e4a5d2.result -> filter_7b3b7b.items\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 1011, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: -105) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_9fba8c.list\n        n_c62075 -> slice_9fba8c.end\n        slice_9fba8c.slice -> concat_4e8c54.left\n        concat_4e8c54.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -531, y: 2, name: \"array\") property(List) array_ai\n        out(x: 340, y: 77, name: \"sum\") property(Number) sum_ai\n\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(a, b) => a + b\"\n        }\n        array_ai -> reduce_7b3b7b.item\n        reduce_7b3b7b.result -> sum_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) sumarray_59bc6e root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_e38995 root.Std_k98ojb.Std.For {}\n        instance(x: 116, y: 112) modulo_9cceb3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: -56) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 212, y: -268) ifexpression_1cedb2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        n_9f7759 -> ifexpression_37db7f.gen_0\n        execute_12bf99 -> ifexpression_37db7f.execute\n        ifexpression_37db7f.then -> continue_685c8f\n        ifexpression_37db7f.else -> for_e38995.reset\n        2 -> for_e38995.start\n        n_9f7759 -> for_e38995.end\n        for_e38995.item -> modulo_9cceb3.value\n        for_e38995.index -> modulo_9cceb3.divisor\n        modulo_9cceb3.result -> ifexpression_1cedb2.gen_0\n        n_9f7759 -> ifexpression_1cedb2.gen_1\n        for_e38995.onItem -> ifexpression_1cedb2.execute\n        ifexpression_1cedb2.then -> continue_685c8f\n        ifexpression_1cedb2.else -> for_e38995.next\n        for_e38995.done -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") check_opposite_sign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_5a7e95 root.Std_k98ojb.Logic.And {}\n        instance(x: -219, y: -33) greaterthan_c27d3e root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 123, y: -154) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 193, y: 13) lessthanorequal_9d8e5c root.Std_k98ojb.Math.LessThanOrEqual {}\n        greaterthan_c27d3e.result -> and_5a7e95.left\n        lessthanorequal_f11fda.result -> and_5a7e95.right\n        a_9f7759 -> greaterthan_c27d3e.left\n        0 -> greaterthan_c27d3e.right\n        b_f9110a -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n        and_5a7e95.result -> result_b2508f\n        instance(x: -105, y: 101) and_d6a42d root.Std_k98ojb.Logic.And {}\n        instance(x: -219, y: 133) lessthanorequal_4e1c9b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 123, y: 194) greaterthan_c27d3e2 root.Std_k98ojb.Math.GreaterThan {}\n        lessthanorequal_4e1c9b.result -> and_d6a42d.left\n        greaterthan_c27d3e2.result -> and_d6a42d.right\n        a_9f7759 -> lessthanorequal_4e1c9b.left\n        0 -> lessthanorequal_4e1c9b.right\n        b_f9110a -> greaterthan_c27d3e2.left\n        0 -> greaterthan_c27d3e2.right\n        and_d6a42d.result -> result_b2508f\n        execute_12bf99 -> lessthanorequal_f11fda.execute\n        lessthanorequal_f11fda.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) check_opposite_sign_d6e930 root.main.check_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.value -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -281, y: -193, name: \"input\") property(String) input_9f7759\n        in(x: -272, y: 17, name: \"oldChar\") property(String) oldChar_f9110a\n        in(x: -262, y: 117, name: \"newChar\") property(String) newChar_4518b3\n        out(x: 46, y: 158, name: \"output\") property(String) output_b2508f\n\n        instance(x: -105, y: -110) replace_9a6c51 root.Std_k98ojb.Strings.Replace {}\n        input_9f7759 -> replace_9a6c51.input\n        oldChar_f9110a -> replace_9a6c51.search\n        newChar_4518b3 -> replace_9a6c51.replace\n        replace_9a6c51.output -> output_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Replace_d6e930 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: 18, y: -146, name: \"input\") property(String) input_3e2f45\n        out(x: 512, y: 34, name: \"output\") property(String) output_e5cbe4\n\n        instance(x: 244, y: 11) tolower_8b9a46 root.Std_k98ojb.Strings.ToLower {}\n        input_3e2f45 -> tolower_8b9a46.input\n        tolower_8b9a46.output -> output_e5cbe4\n    }\n\n    \n\n    instance(x: -43, y: 23) tolower_f50d1a root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sort_f7c95a root.Std_k98ojb.List.Sort {}\n        instance(x: 964, y: 116) reduce_50d0f3 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_42bc6f\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_42bc6f -> mul_4e8c54.first\n            current_1d86d4 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> reduce_50d0f3.reducer\n        input_ai -> sort_f7c95a.list\n        1 -> reduce_50d0f3.initial\n        sort_f7c95a.sorted -> reduce_50d0f3.items\n        reduce_50d0f3.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1011, y: 123) contains_8a5e64 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n            list2_c62075 -> contains_8a5e64.list\n            item_42bc6f -> contains_8a5e64.item\n            contains_8a5e64.result -> not_4e8c54.input\n            not_4e8c54.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 123) concat_e48a8f root.Std_k98ojb.List.Concat {}\n        instance(x: 772, y: 219) length_24c2e5 root.Std_k98ojb.List.Length {}\n        instance(x: 958, y: 27) modulo_dfcfab root.Std_k98ojb.Math.Modulo {}\n        input_ai -> length_24c2e5.list\n        num_ai -> modulo_dfcfab.value\n        length_24c2e5.length -> modulo_dfcfab.divisor\n        modulo_dfcfab.result -> slice_7b3b7b.start\n        input_ai -> slice_7b3b7b.list\n        -1 -> slice_7b3b7b.end\n        instance(x: 772, y: 27) slice_24c2e5 root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_24c2e5.list\n        0 -> slice_24c2e5.start\n        modulo_dfcfab.result -> slice_24c2e5.end\n        slice_7b3b7b.slice -> concat_e48a8f.right\n        slice_24c2e5.slice -> concat_e48a8f.left\n        concat_e48a8f.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        func() {\n            in(x: -272, y: -48, name: \"acc\") property(Number) acc_86a8fb\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"output\") property(Number) output_8ba733\n\n            instance(x: 24, y: -54) add_9cb360 root.Std_k98ojb.Math.Add {}\n            acc_86a8fb -> add_9cb360.first\n            current_1d86d4 -> add_9cb360.second\n            add_9cb360.result -> output_8ba733\n        } -> reduce_e38995.handler\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.output -> sum_b2508f\n        execute_12bf99 -> reduce_e38995.execute\n        reduce_e38995.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2d94b5 root.Std_k98ojb.Std.For {}\n        instance(x: 219, y: -35) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 465, y: 141) lessthanorequal_4f9d1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: -200, y: -236) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) generaterange_f7e0f5 root.Std_k98ojb.List.GenerateRange {\n            from: 2,\n            to: \"n\"\n        }\n        n_9f7759 -> generaterange_f7e0f5.to\n        execute_12bf99 -> for_2d94b5.reset\n        generaterange_f7e0f5.list -> for_2d94b5.items\n        for_2d94b5.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        ifexpression_e38995.then -> setter_1cedb2.execute\n        false -> setter_1cedb2.new_value\n        for_2d94b5.index -> lessthanorequal_4f9d1a.left\n        n_9f7759 -> lessthanorequal_4f9d1a.right\n        ifexpression_e38995.else -> for_2d94b5.next\n        lessthanorequal_4f9d1a.result -> ifexpression_e38995.predicate\n        for_2d94b5.onItem -> ifexpression_e38995.execute\n        for_2d94b5.done -> continue_685c8f\n        getter_9cceb3.value -> isPrime_b2508f\n        true -> setter_1cedb2.new_value\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_5a3e4d root.Std_k98ojb.Logic.And {}\n        instance(x: -200, y: -50) greaterthan_68a91f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: 112) lessthan_2c9e5b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 100, y: -250) lessthan_e48a1d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -150, y: 50) greaterthan_8c2e4f root.Std_k98ojb.Math.GreaterThan {}\n        a_9f7759 -> greaterthan_68a91f.left\n        0 -> greaterthan_68a91f.right\n        b_f9110a -> lessthan_e48a1d.left\n        0 -> lessthan_e48a1d.right\n        greaterthan_68a91f.result -> and_5a3e4d.left\n        lessthan_e48a1d.result -> and_5a3e4d.right\n        b_f9110a -> greaterthan_8c2e4f.left\n        0 -> greaterthan_8c2e4f.right\n        a_9f7759 -> lessthan_2c9e5b.left\n        0 -> lessthan_2c9e5b.right\n        greaterthan_8c2e4f.result -> and_5a3e4d.left\n        lessthan_2c9e5b.result -> and_5a3e4d.right\n        and_5a3e4d.result -> result_b2508f\n        execute_12bf99 -> and_5a3e4d.execute\n        and_5a3e4d.execute -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1002, y: 115) sort_f9f1a5 root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f9f1a5.list\n        sort_f9f1a5.sorted -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_e245cb\n            in(x: -223, y: 18, name: \"current\") property(Number) current_f9110a\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_8ba733\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_e245cb -> mul_4e8c54.first\n            current_f9110a -> mul_4e8c54.second\n            mul_4e8c54.result -> result_8ba733\n        } -> unique_7b3b7b.reducer\n        1 -> unique_7b3b7b.initial\n        unique_7b3b7b.result -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_node root.main.ProductOfUnique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1051, y: 101) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 901, y: 101) contains_9cb360 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            contains_9cb360.result -> not_2f9d09.input\n            list2_c62075 -> contains_9cb360.list\n            item_86a8fb -> contains_9cb360.item\n            not_2f9d09.output -> output_8ba733\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 114) slice_0c9e2d root.Std_k98ojb.List.Slice {}\n        instance(x: 1155, y: 77) concat_6f4a8a root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> slice_0c9e2d.list\n        0 -> slice_0c9e2d.start\n        -1 -> slice_0c9e2d.end\n        slice_0c9e2d.slice -> concat_6f4a8a.left\n        slice_7b3b7b.slice -> concat_6f4a8a.right\n        concat_6f4a8a.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e46 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -44) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 384, y: -114) lessthanorequal_9f7759 root.Std_k98ojb.Math.LessThanOrEqual {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: -200, y: -236) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        2 -> generaterange_038fce.from\n        n_9f7759 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_2a5e46.items\n        for_2a5e46.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        for_2a5e46.index -> lessthanorequal_9f7759.left\n        n_9f7759 -> lessthanorequal_9f7759.right\n        lessthanorequal_9f7759.result -> for_2a5e46.predicate\n        execute_12bf99 -> for_2a5e46.reset\n        ifexpression_e38995.then -> for_2a5e46.next\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        for_2a5e46.done -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_f43a4e root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -247) greaterthan_c9fb6d root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        instance(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = result\n        a_9f7759 -> greaterthan_c9fb6d.left\n        0 -> greaterthan_c9fb6d.right\n        b_f9110a -> and_f43a4e.right\n        0 -> and_f43a4e.left\n        execute_12bf99 -> greaterthan_c9fb6d.execute\n        greaterthan_c9fb6d.result -> setter_1cedb2.new_value\n        and_f43a4e.result -> result_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_4e5a2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: -34, y: 23) equals_65a321 root.Std_k98ojb.Logic.Equal {}\n        n_9f7759 -> modulo_4e5a2d.value\n        11 -> modulo_4e5a2d.divisor\n        execute_12bf99 -> modulo_4e5a2d.execute\n        modulo_4e5a2d.result -> equals_65a321.left\n        0 -> equals_65a321.right\n        equals_65a321.result -> result_b2508f\n        equals_65a321.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -281, y: -193, name: \"str\") property(String) str_9f7759\n        in(x: -272, y: 17, name: \"oldChar\") property(String) oldChar_f9110a\n        in(x: -259, y: 105, name: \"newChar\") property(String) newChar_2e4d8c\n        out(x: 46, y: 158, name: \"result\") property(String) result_b2508f\n\n        instance(x: -105, y: -110) replace_d6b5a7 root.Std_k98ojb.Strings.Replace {}\n        str_9f7759 -> replace_d6b5a7.input\n        oldChar_f9110a -> replace_d6b5a7.search\n        newChar_2e4d8c -> replace_d6b5a7.replace\n        replace_d6b5a7.output -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Replace_49b4f3 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -281, y: -193, name: \"list\") property(List) list_9f7759\n        out(x: 46, y: 158, name: \"product\") property(Number) product_b2508f\n\n        instance(x: -105, y: -110) unique_e38995 root.Std_k98ojb.List.Flatten {}\n        instance(x: 215, y: 17) sort_1c3e6a root.Std_k98ojb.List.Sort {}\n        instance(x: 118, y: -56) reduce_f9110a root.Std_k98ojb.Iteration.Reduce {\n            handler: \"Math.Mul\"\n        }\n        list_9f7759 -> unique_e38995.list\n        unique_e38995.result -> sort_1c3e6a.list\n        sort_1c3e6a.sorted_list -> reduce_f9110a.items\n        reduce_f9110a.accumulated_value -> product_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) product_unique_d6e930 root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 901, y: 117) setdifference_f4e5d2 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> setdifference_f4e5d2.left\n        list2_c62075 -> setdifference_f4e5d2.right\n        setdifference_f4e5d2.difference -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> contains_4e8c54.list\n            item_42bc6f -> contains_4e8c54.item\n            instance(x: 150, y: -70) not_71a0d9 root.Std_k98ojb.Logic.Not {}\n            contains_4e8c54.result -> not_71a0d9.input\n            not_71a0d9.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) dissimilar_cbc0b6 root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -281, y: -193, name: \"list\") property(List) list_9f7759\n        in(x: -272, y: 17, name: \"n\") property(Number) n_f9110a\n\n        out(x: 46, y: 158, name: \"result\") property(List) result_b2508f\n\n        instance(x: -105, y: -110) slice_9cceb3 root.Std_k98ojb.List.Slice {}\n        instance(x: 116, y: -268) slice_1cedb2 root.Std_k98ojb.List.Slice {}\n        instance(x: 118, y: -56) concat_37db7f root.Std_k98ojb.List.Concat {}\n        list_9f7759 -> slice_9cceb3.list\n        n_f9110a -> slice_9cceb3.start\n        list_9f7759 -> slice_1cedb2.list\n        0 -> slice_1cedb2.start\n        n_f9110a -> slice_1cedb2.end\n        slice_1cedb2.slice -> concat_37db7f.left\n        slice_9cceb3.slice -> concat_37db7f.right\n        concat_37db7f.result -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) rotate_d6e930 root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -377, y: 101, name: \"array\") property(List) array_6f2e4d\n        out(x: 631, y: 126, name: \"sum\") property(Number) sum_f5c03d\n\n        instance(x: 217, y: 114) reduce_9b38cc root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        func() {\n            in(x: -272, y: -48, name: \"acc\") property(Number) acc_86a8fb\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) add_4e8c54 root.Std_k98ojb.Math.Add {}\n            acc_86a8fb -> add_4e8c54.first\n            current_1d86d4 -> add_4e8c54.second\n            add_4e8c54.result -> result_e245cb\n        } -> reduce_9b38cc.handler\n        array_6f2e4d -> reduce_9b38cc.items\n        reduce_9b38cc.result -> sum_f5c03d\n    }\n\n    \n\n    instance(x: -97, y: 45) SumArray_b9ff6b root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_e38995 root.Std_k98ojb.Std.For {}\n        instance(x: 116, y: 112) modulo_9cceb3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: -56) ifexpression_37db7f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 212, y: -268) ifexpression_1cedb2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        n_9f7759 -> ifexpression_37db7f.gen_0\n        execute_12bf99 -> ifexpression_37db7f.execute\n        ifexpression_37db7f.then -> continue_685c8f\n        ifexpression_37db7f.else -> for_e38995.reset\n        2 -> for_e38995.start\n        n_9f7759 -> for_e38995.end\n        for_e38995.item -> modulo_9cceb3.value\n        for_e38995.index -> modulo_9cceb3.divisor\n        modulo_9cceb3.result -> ifexpression_1cedb2.gen_0\n        n_9f7759 -> ifexpression_1cedb2.gen_1\n        for_e38995.onItem -> ifexpression_1cedb2.execute\n        ifexpression_1cedb2.then -> continue_685c8f\n        ifexpression_1cedb2.else -> for_e38995.next\n        for_e38995.done -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") check_opposite_sign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_5a64d6 root.Std_k98ojb.Logic.And {}\n        instance(x: -34, y: -17) greaterthan_ae8c2f root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 116, y: 74) lessthanorequal_d4599a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 219, y: -64) lessthanorequal_5ecef6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 234, y: 41) greaterthan_c4f7c1 root.Std_k98ojb.Math.GreaterThan {}\n        a_9f7759 -> greaterthan_ae8c2f.left\n        0 -> greaterthan_ae8c2f.right\n        b_f9110a -> lessthanorequal_d4599a.left\n        0 -> lessthanorequal_d4599a.right\n        greaterthan_ae8c2f.result -> and_5a64d6.left\n        lessthanorequal_d4599a.result -> and_5a64d6.right\n        a_9f7759 -> lessthanorequal_5ecef6.left\n        0 -> lessthanorequal_5ecef6.right\n        b_f9110a -> greaterthan_c4f7c1.left\n        0 -> greaterthan_c4f7c1.right\n        lessthanorequal_5ecef6.result -> and_5a64d6.left\n        greaterthan_c4f7c1.result -> and_5a64d6.right\n        and_5a64d6.result -> result_b2508f\n        execute_12bf99 -> and_5a64d6.execute\n        and_5a64d6.done -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) check_opposite_sign_d6e930 root.main.check_opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.value -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -377, y: 14, name: \"input\") property(String) input_4e2f5d\n        in(x: -370, y: 121, name: \"oldChar\") property(String) oldChar_afebab\n        in(x: -357, y: 231, name: \"newChar\") property(String) newChar_b6c bee\n        out(x: 340, y: 77, name: \"output\") property(String) output_4e2f5d\n\n        instance(x: 772, y: 76) replace_d8a52b root.Std_k98ojb.Strings.Replace {}\n        input_4e2f5d -> replace_d8a52b.input\n        oldChar_afebab -> replace_d8a52b.search\n        newChar_b6cbec -> replace_d8a52b.replace\n        replace_d8a52b.output -> output_4e2f5d\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_f47c59 root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: 105, y: -32, name: \"input\") property(String) input_2a5e50\n        out(x: 631, y: 20, name: \"output\") property(String) output_e3fccc\n\n        instance(x: 373, y: 24) tolower_30d0c7 root.Std_k98ojb.Strings.ToLower {}\n        input_2a5e50 -> tolower_30d0c7.input\n        tolower_30d0c7.output -> output_e3fccc\n    }\n\n    \n\n    instance(x: -23, y: 39) tolower_f4a96a root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sort_f7c2a4 root.Std_k98ojb.List.Sort {}\n        instance(x: 1025, y: 78) reduce_8d94f3 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -272, y: -48, name: \"acc\") property(Number) acc_86a8fb\n            in(x: -264, y: 18, name: \"current\") property(Number) current_8ba733\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_86a8fb -> mul_4e8c54.first\n            current_8ba733 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> reduce_8d94f3.reducer\n        input_ai -> sort_f7c2a4.list\n        sort_f7c2a4.sorted -> reduce_8d94f3.items\n        1 -> reduce_8d94f3.initial\n        reduce_8d94f3.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) uniqueproduct_node root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1011, y: 123) contains_8a9f40 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n            list2_c62075 -> contains_8a9f40.list\n            item_42bc6f -> contains_8a9f40.item\n            contains_8a9f40.result -> not_4e8c54.input\n            not_4e8c54.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 115) slice_b4d1e2 root.Std_k98ojb.List.Slice {}\n        instance(x: 1208, y: 76) concat_e64f42 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        input_ai -> slice_b4d1e2.list\n        slice_b4d1e2.end -> num_ai\n        -1 -> slice_b4d1e2.start\n        slice_7b3b7b.slice -> concat_e64f42.right\n        slice_b4d1e2.slice -> concat_e64f42.left\n        concat_e64f42.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        func() {\n            in(x: -272, y: -48, name: \"acc\") property(Number) acc_86a8fb\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"output\") property(Number) output_8ba733\n\n            instance(x: 24, y: -54) add_9cb360 root.Std_k98ojb.Math.Add {}\n            acc_86a8fb -> add_9cb360.first\n            current_1d86d4 -> add_9cb360.second\n            add_9cb360.result -> output_8ba733\n        } -> reduce_e38995.handler\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.output -> sum_b2508f\n        execute_12bf99 -> reduce_e38995.execute\n        reduce_e38995.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2d90a5 root.Std_k98ojb.Std.For {}\n        instance(x: 219, y: -35) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 465, y: 141) lessthanorequal_3c4a2e root.Std_k98ojb.Math.LessThanOrEqual {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: -200, y: -236) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) generaterange_f6c5e4 root.Std_k98ojb.List.GenerateRange {\n            from: 2,\n            to: \"n\"\n        }\n        n_9f7759 -> generaterange_f6c5e4.to\n        execute_12bf99 -> for_2d90a5.reset\n        for_2d90a5.onItem -> ifexpression_e38995.execute\n        for_2d90a5.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        generaterange_f6c5e4.list -> for_2d90a5.items\n        2 -> lessthanorequal_3c4a2e.left\n        n_9f7759 -> lessthanorequal_3c4a2e.right\n        ifexpression_e38995.then -> for_2d90a5.next\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        for_2d90a5.done -> continue_685c8f\n        getter_9cceb3.value -> isPrime_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_5a2e6d root.Std_k98ojb.Logic.And {}\n        instance(x: -222, y: -44) greaterthan_c9e1a3 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: 112) lessthan_dfafe4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 24, y: 68) lessthan_5f2e95 root.Std_k98ojb.Math.LessThanOrEqual {}\n        greaterthan_c9e1a3.result -> and_5a2e6d.left\n        lessthan_dfafe4.result -> and_5a2e6d.right\n        a_9f7759 -> greaterthan_c9e1a3.left\n        0 -> greaterthan_c9e1a3.right\n        b_f9110a -> lessthan_dfafe4.left\n        0 -> lessthan_dfafe4.right\n        and_5a2e6d.result -> result_b2508f\n        execute_12bf99 -> greaterthan_c9e1a3.execute\n        execute_12bf99 -> lessthan_dfafe4.execute\n        execute_12bf99 -> lessthan_5f2e95.execute\n        b_f9110a -> lessthan_5f2e95.left\n        0 -> lessthan_5f2e95.right\n        a_9f7759 -> lessthan_dfafe4.left\n        0 -> lessthan_dfafe4.right\n        and_5a2e6d.result -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1002, y: 108) sort_f5c03d root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f5c03d.list\n        sort_f5c03d.sorted -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc\n            in(x: -223, y: 18, name: \"current\") property(Number) current\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc -> mul_4e8c54.first\n            current -> mul_4e8c54.second\n            mul_4e8c54.result -> result\n        } -> unique_7b3b7b.reducer\n        instance(x: 1181, y: 76) filter_9f7759 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n            in(x: -264, y: 18, name: \"index\") property(Number) index_3c0e4d\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54) not_9cb360 root.Std_k98ojb.Logic.Not {}\n            instance(x: -40, y: -22) equal_f5c03d root.Std_k98ojb.Logic.Equal {}\n            index_3c0e4d -> equal_f5c03d.left\n            0 -> equal_f5c03d.right\n            equal_f5c03d.result -> not_9cb360.input\n            not_9cb360.output -> output_8ba733\n        } -> filter_9f7759.handler\n        unique_7b3b7b.accumulated -> output\n        sort_f5c03d.sorted -> filter_9f7759.items\n    }\n\n    \n\n    instance(x: -179, y: 30) ProductOfUnique_59bc6e root.main.ProductOfUnique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1051, y: 115) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 936, y: 114) contains_9cb360 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            contains_9cb360.result -> not_2f9d09.input\n            list2_c62075 -> contains_9cb360.list\n            item_86a8fb -> contains_9cb360.item\n            not_2f9d09.output -> output_8ba733\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 958, y: 156) sub_b720d7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: 234) length_f11fda root.Std_k98ojb.List.Length {}\n        input_ai -> length_f11fda.list\n        length_f11fda.length -> sub_b720d7.first\n        num_ai -> sub_b720d7.second\n        sub_b720d7.result -> slice_9fba8c.end\n        -1 -> slice_7b3b7b.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e1d root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 554, y: -203) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        for_2a5e1d.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        2 -> for_2a5e1d.start\n        n_9f7759 -> lessthanorequal_f11fda.right\n        for_2a5e1d.index -> lessthanorequal_f11fda.left\n        execute_12bf99 -> for_2a5e1d.reset\n        ifexpression_e38995.then -> continue_685c8f\n        ifexpression_e38995.else -> for_2a5e1d.next\n        for_2a5e1d.done -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_f9e5a3 root.Std_k98ojb.Logic.And {}\n        instance(x: -247, y: -52) greaterthan_c6d9a7 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: 112) lessthan_2a5c4e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 97, y: -211) lessthan_b8d9f3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -144, y: 168) greaterthan_35a2c6 root.Std_k98ojb.Math.GreaterThan {}\n        a_9f7759 -> greaterthan_c6d9a7.left\n        0 -> greaterthan_c6d9a7.right\n        b_f9110a -> lessthan_b8d9f3.left\n        0 -> lessthan_b8d9f3.right\n        greaterthan_c6d9a7.result -> and_f9e5a3.left\n        lessthan_b8d9f3.result -> and_f9e5a3.right\n        b_f9110a -> greaterthan_35a2c6.left\n        0 -> greaterthan_35a2c6.right\n        a_9f7759 -> lessthan_2a5c4e.left\n        0 -> lessthan_2a5c4e.right\n        greaterthan_35a2c6.result -> and_f9e5a3.left\n        lessthan_2a5c4e.result -> and_f9e5a3.right\n        and_f9e5a3.result -> result_b2508f\n        execute_12bf99 -> and_f9e5a3.execute\n        and_f9e5a3.execute -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        instance(x: 118, y: 112, name: \"if\") if_e38995 root.Std_k98ojb.Std.If {\n            predicate: \"modulo_e38995.result == 0\"\n        }\n        if_e38995.then -> result_b2508f\n        true -> if_e38995.value\n        false -> if_e38995.else_value\n        execute_12bf99 -> modulo_e38995.execute\n        if_e38995.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -281, y: -193, name: \"str\") property(String) str_9f7759\n        in(x: -272, y: 17, name: \"oldChar\") property(String) oldChar_f9110a\n        in(x: -259, y: 105, name: \"newChar\") property(String) newChar_2e3d5b\n        out(x: 46, y: 158, name: \"result\") property(String) result_b2508f\n\n        instance(x: -105, y: -110) replace_d6a51c root.Std_k98ojb.Strings.Replace {}\n        str_9f7759 -> replace_d6a51c.input\n        oldChar_f9110a -> replace_d6a51c.search\n        newChar_2e3d5b -> replace_d6a51c.replace\n        replace_d6a51c.result -> result_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Replace_49fbd7 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        instance(x: 954, y: 123) reduce_e48f1a root.Std_k98ojb.Iteration.Reduce {}\n        list_ai -> sort_7b3b7b.list\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_42bc6f\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_42bc6f -> mul_4e8c54.first\n            current_1d86d4 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> reduce_e48f1a.reducer\n        sort_7b3b7b.sorted -> reduce_e48f1a.items\n        reduce_e48f1a.accumulated -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) product_unique_node root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1011, y: 115) setdifference_c9e5a4 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> setdifference_c9e5a4.left\n        list2_c62075 -> setdifference_c9e5a4.right\n        setdifference_c9e5a4.difference -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) contains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> contains_4e8c54.list\n            item_42bc6f -> contains_4e8c54.item\n            instance(x: 92, y: -22) not_584bfd root.Std_k98ojb.Logic.Not {}\n            contains_4e8c54.result -> not_584bfd.input\n            not_584bfd.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: -122) find_dissimilar_cbc0b6 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 954, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_9fba8c.list\n        slice_9fba8c.slice -> concat_4e8c54.left\n        instance(x: 954, y: 190) length_8815e6 root.Std_k98ojb.List.Length {}\n        list_ai -> length_8815e6.list\n        instance(x: 772, y: 234) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        length_8815e6.length -> sub_9ff257.first\n        n_c62075 -> sub_9ff257.second\n        sub_9ff257.result -> slice_9fba8c.end\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -531, y: 2, name: \"array\") property(List) array_ai\n        out(x: 340, y: 77, name: \"sum\") property(Number) sum_ai\n\n        instance(x: 772, y: 76) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(a, b) => a + b\"\n        }\n        array_ai -> reduce_7b3b7b.item\n        reduce_7b3b7b.result -> sum_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) sumarray_59bc6e root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_e38995 root.Std_k98ojb.Std.For {}\n        instance(x: 116, y: 12) modulo_37db7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: -144, y: 112) ifexpression_9cceb3 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n < 2\"\n        }\n        instance(x: 118, y: -56) ifexpression_1cedb2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -174, y: 168, name: \"getter_f9110a\") getter_f9110a = isPrime\n        setter(x: 201, y: -268, name: \"setter_a9f7759\") setter_a9f7759 = isPrime\n        setter(x: 203, y: -56, name: \"setter_b2508f\") setter_b2508f = isPrime\n        n_9f7759 -> ifexpression_9cceb3.gen_0\n        execute_12bf99 -> ifexpression_9cceb3.execute\n        ifexpression_9cceb3.then -> setter_a9f7759.execute\n        false -> setter_a9f7759.new_value\n        ifexpression_9cceb3.else -> for_e38995.reset\n        2 -> for_e38995.start\n        n_9f7759 -> for_e38995.end\n        for_e38995.item -> ifexpression_1cedb2.gen_0\n        n_9f7759 -> modulo_37db7f.value\n        for_e38995.item -> modulo_37db7f.divisor\n        modulo_37db7f.result -> ifexpression_1cedb2.gen_1\n        ifexpression_1cedb2.then -> continue_685c8f\n        ifexpression_1cedb2.else -> for_e38995.next\n        for_e38995.done -> setter_b2508f.execute\n        true -> setter_b2508f.new_value\n        getter_f9110a.value -> isPrime_b2508f\n        setter_a9f7759.continue -> continue_685c8f\n        setter_b2508f.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -531, y: 2, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n\n        out(x: 340, y: 77, name: \"result\") property(Bool) result_b2508f\n\n        instance(x: 772, y: 76) and_7b3b7b root.Std_k98ojb.Logic.And {}\n        instance(x: 531, y: 23) greaterthan_ae91a2 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 412, y: -105) lessthanorequal_b6c1f4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_ae91a2.left\n        0 -> greaterthan_ae91a2.right\n        b_f9110a -> lessthanorequal_b6c1f4.left\n        0 -> lessthanorequal_b6c1f4.right\n        greaterthan_ae91a2.result -> and_7b3b7b.left\n        lessthanorequal_b6c1f4.result -> and_7b3b7b.right\n        and_7b3b7b.result -> result_b2508f\n        instance(x: 1065, y: -23) and_2c0a93 root.Std_k98ojb.Logic.And {}\n        instance(x: 964, y: 127) lessthanorequal_c6e91d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 825, y: 52) greaterthan_6545ab root.Std_k98ojb.Math.GreaterThan {}\n        b_f9110a -> greaterthan_6545ab.left\n        0 -> greaterthan_6545ab.right\n        a_9f7759 -> lessthanorequal_c6e91d.left\n        0 -> lessthanorequal_c6e91d.right\n        greaterthan_6545ab.result -> and_2c0a93.left\n        lessthanorequal_c6e91d.result -> and_2c0a93.right\n        and_2c0a93.result -> result_b2508f\n    }\n\n    \n\n    instance(x: -179, y: 30) opposite_sign_f5a3c7 root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        number_ai -> modulo_7b3b7b.value\n        11 -> modulo_7b3b7b.divisor\n        instance(x: 1024, y: 77) equals_6f2e5c root.Std_k98ojb.Logic.Equal {}\n        0 -> equals_6f2e5c.left\n        modulo_7b3b7b.result -> equals_6f2e5c.right\n        equals_6f2e5c.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) divisibleby11_node root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -516, y: 114, name: \"oldChar\") property(String) oldChar_ai\n        in(x: -505, y: 224, name: \"newChar\") property(String) newChar_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_ai -> replace_7b3b7b.search\n        newChar_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: 45, y: -119, name: \"input\") property(String) input_2a5f3d\n        out(x: 846, y: -33, name: \"output\") property(String) output_2a5f3d\n\n        instance(x: 432, y: -78) tolower_b8c4b9 root.Std_k98ojb.Strings.ToLower {}\n        input_2a5f3d -> tolower_b8c4b9.input\n        tolower_b8c4b9.output -> output_2a5f3d\n    }\n\n    \n\n    instance(x: 191, y: -44) tolower_6e1f52 root.main.ToLower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        list_ai -> sort_7b3b7b.list\n        instance(x: 1024, y: 83) reduce_e8d951 root.Std_k98ojb.Iteration.Reduce {\n            init_value: 1\n        }\n        func() {\n            in(x: -272, y: -48, name: \"acc\") property(Number) acc_86a8fb\n            in(x: -223, y: 18, name: \"current\") property(Number) current_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_86a8fb -> mul_4e8c54.first\n            current_1d86d4 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> reduce_e8d951.handler\n        instance(x: 1185, y: 91) filter_f0f6b7 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n            in(x: -223, y: 18, name: \"index\") property(Number) index_f6c0d3\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: -8, y: -53) getat_b5c1a2 root.Std_k98ojb.List.GetAt {}\n            index_f6c0d3 -> getat_b5c1a2.index\n            sort_7b3b7b.sorted_list -> getat_b5c1a2.list\n            instance(x: 92, y: -22) notequal_c9f5e4 root.Std_k98ojb.Logic.NotEqual {}\n            current_86a8fb -> notequal_c9f5e4.left\n            getat_b5c1a2.itemAtIndex -> notequal_c9f5e4.right\n            notequal_c9f5e4.result -> output_8ba733\n        } -> filter_f0f6b7.handler\n        sort_7b3b7b.sorted_list -> filter_f0f6b7.items\n        filter_f0f6b7.output_list -> reduce_e8d951.items\n        reduce_e8d951.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) unique_product root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1058, y: 108) contains_2c95a1 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"item\") property(Number) item_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) not_4e8c54 root.Std_k98ojb.Logic.Not {}\n            item_42bc6f -> contains_2c95a1.item\n            list2_c62075 -> contains_2c95a1.list\n            contains_2c95a1.result -> not_4e8c54.input\n            not_4e8c54.output -> output_e245cb\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_elements_node root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 981, y: 108) slice_ae2a46 root.Std_k98ojb.List.Slice {}\n        instance(x: 1190, y: 77) concat_d4596c root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        list_ai -> slice_ae2a46.list\n        0 -> slice_ae2a46.start\n        n_c62075 -> slice_ae2a46.end\n        slice_7b3b7b.slice -> concat_d4596c.right\n        slice_ae2a46.slice -> concat_d4596c.left\n        concat_d4596c.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: 45, y: -278, name: \"array\") property(List) array_4e5d8a\n        out(x: 846, y: -145, name: \"sum\") property(Number) sum_b9fc29\n\n        instance(x: 517, y: -147) reduce_f2f7b3 root.Std_k98ojb.Iteration.Reduce {\n            init: \"0\"\n        }\n        array_4e5d8a -> reduce_f2f7b3.items\n        func() {\n            in(x: -272, y: 45, name: \"acc\") property(Number) acc_b6a94c\n            in(x: -255, y: 134, name: \"current\") property(Number) current_9e5d1a\n\n            out(x: 244, y: 92, name: \"\") property(Number) _4b2e0f\n\n            instance(x: 13, y: 88, stableId: \"kq8r2w6j3xu1n5v1mzg0y8o7\") add_4c3a51 root.Std_k98ojb.Math.Add {}\n            acc_b6a94c -> add_4c3a51.first\n            current_9e5d1a -> add_4c3a51.second\n            add_4c3a51.result -> _4b2e0f\n        } -> reduce_f2f7b3.handler\n        reduce_f2f7b3.accumulated -> sum_b9fc29\n    }\n\n    \n\n    instance(x: -35, y: 23) Sum_8bc1f5 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") isPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_9d95a4 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -47) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 384, y: 112) ifexpression_d8f2e5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 212, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 118, y: 146) if_e37d51 root.Std_k98ojb.Std.If {}\n        n_9f7759 -> for_9d95a4.items\n        execute_12bf99 -> for_9d95a4.reset\n        for_9d95a4.onItem -> modulo_e38995.execute\n        for_9d95a4.item -> ifexpression_d8f2e5.gen_0\n        n_9f7759 -> modulo_e38995.value\n        for_9d95a4.item -> modulo_e38995.divisor\n        ifexpression_d8f2e5.then -> setter_1cedb2.execute\n        false -> setter_1cedb2.new_value\n        ifexpression_d8f2e5.else -> for_9d95a4.next\n        setter_1cedb2.continue -> continue_685c8f\n        for_9d95a4.done -> if_e37d51.execute\n        true -> if_e37d51.predicate\n        if_e37d51.then -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        if_e37d51.else -> continue_685c8f\n        getter_9cceb3.value -> isPrime_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) isPrime_d6e930 root.main.isPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_5a2e6d root.Std_k98ojb.Logic.And {}\n        instance(x: -223, y: -247) lessthan_0e7e4c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 118, y: -56, name: \"setter_37db7f\") setter_37db7f = result\n        instance(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = result\n        a_9f7759 -> lessthan_0e7e4c.left\n        0 -> lessthan_0e7e4c.right\n        instance(x: -34, y: 17) lessthan_b911d5 root.Std_k98ojb.Math.LessThanOrEqual {}\n        b_f9110a -> lessthan_b911d5.left\n        0 -> lessthan_b911d5.right\n        instance(x: 24, y: -54) not_d8f360 root.Std_k98ojb.Logic.Not {}\n        lessthan_0e7e4c.result -> not_d8f360.input\n        not_d8f360.output -> and_5a2e6d.left\n        lessthan_b911d5.result -> not_d8f360.input\n        not_d8f360.output -> and_5a2e6d.right\n        and_5a2e6d.result -> result_b2508f\n        execute_12bf99 -> and_5a2e6d.execute\n        and_5a2e6d.execute -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1002, y: 115) sort_f9f1a5 root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f9f1a5.list\n        sort_f9f1a5.sorted -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_e4e2c6\n            in(x: -223, y: 18, name: \"current\") property(Number) current_f9f1a5\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_8b7d3d\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_e4e2c6 -> mul_4e8c54.first\n            current_f9f1a5 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_8b7d3d\n        } -> unique_7b3b7b.reducer\n        1 -> unique_7b3b7b.initial\n        unique_7b3b7b.result -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_node root.main.ProductOfUnique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1051, y: 101) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 936, y: 114) contains_9cb360 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            contains_9cb360.result -> not_2f9d09.input\n            list2_c62075 -> contains_9cb360.list\n            item_86a8fb -> contains_9cb360.item\n            not_2f9d09.output -> output_8ba733\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 114) slice_0c2f31 root.Std_k98ojb.List.Slice {}\n        instance(x: 1155, y: 77) concat_8d95a4 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> slice_0c2f31.list\n        0 -> slice_0c2f31.start\n        -1 -> slice_0c2f31.end\n        input_ai -> concat_8d95a4.left\n        slice_0c2f31.slice -> concat_8d95a4.right\n        concat_8d95a4.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a5e46 root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -44) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 384, y: -114) lessthanorequal_9f7759 root.Std_k98ojb.Math.LessThanOrEqual {}\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: -200, y: -236) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        instance(x: 562, y: -203) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        2 -> generaterange_038fce.from\n        n_9f7759 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_2a5e46.items\n        for_2a5e46.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        for_2a5e46.index -> lessthanorequal_9f7759.left\n        n_9f7759 -> lessthanorequal_9f7759.right\n        lessthanorequal_9f7759.result -> for_2a5e46.predicate\n        execute_12bf99 -> for_2a5e46.reset\n        ifexpression_e38995.then -> for_2a5e46.next\n        ifexpression_e38995.else -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        for_2a5e46.done -> continue_685c8f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -531, y: 2, name: \"a\") property(Number) a_ai\n        in(x: -523, y: 122, name: \"b\") property(Number) b_ai\n\n        out(x: 340, y: 77, name: \"result\") property(Bool) result_ai\n\n        instance(x: 772, y: 76) and_7b3b7b root.Std_k98ojb.Logic.And {}\n        instance(x: 511, y: -103) lessthan_4e8c54 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 337, y: -14) lessthan_9fba8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_ai -> lessthan_4e8c54.left\n        0 -> lessthan_4e8c54.right\n        b_ai -> lessthan_9fba8c.left\n        0 -> lessthan_9fba8c.right\n        lessthan_4e8c54.result -> and_7b3b7b.left\n        lessthan_9fba8c.result -> and_7b3b7b.right\n        and_7b3b7b.result -> result_ai\n    }\n    \n\n    instance(x: -34, y: 127) oppositesign_node root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_4e2a5d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_4e2a5d.value\n        11 -> modulo_4e2a5d.divisor\n        modulo_4e2a5d.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        if_37db7f.then -> continue_685c8f\n        0 -> if_37db7f.value\n        if_37db7f.value -> result_b2508f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -377, y: 142, name: \"input\") property(String) input_1a6e2d\n        in(x: -361, y: 263, name: \"oldChar\") property(String) oldChar_e9f0c3\n        in(x: -348, y: 381, name: \"newChar\") property(String) newChar_dfafe5\n\n        out(x: 521, y: 301, name: \"output\") property(String) output_7b1a2e\n\n        instance(x: 141, y: 272) replace_f0c bee root.Std_k98ojb.Strings.Replace {}\n        input_1a6e2d -> replace_f0c_bee.input\n        oldChar_e9f0c3 -> replace_f0c_bee.search\n        newChar_dfafe5 -> replace_f0c_bee.replace\n        replace_f0c_bee.output -> output_7b1a2e\n    }\n\n    \n\n    instance(x: -96, y: 193) Replace_e49f63 root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -122, y: 42, name: \"list\") property(List) list_63c248\n\n        out(x: 656, y: -68, name: \"result\") property(Number) result_cbb7bd\n\n        instance(x: 94, y: -105) filter_9ab286 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 557, y: 167) reduce_9b38cc root.Std_k98ojb.Iteration.Reduce {}\n        list_63c248 -> filter_9ab286.items\n        func() {\n            in(x: -121, y: -37, name: \"current\") property(Number) current_8ee839\n\n            out(x: 333, y: -50, name: \"output\") property(Bool) _7dd980\n\n            instance(x: 92, y: -22) contains_584bfd root.Std_k98ojb.List.Contains {}\n            list_63c248 -> contains_584bfd.list\n            current_8ee839 -> contains_584bfd.item\n            contains_584bfd.result -> _7dd980\n        } -> filter_9ab286.handler\n        reduce_9b38cc.accumulator -> result_cbb7bd\n        filter_9ab286.output_list -> reduce_9b38cc.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_f2456a\n            in(x: -223, y: 18, name: \"item\") property(Number) item_d5e1d8\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_f2456a -> mul_4e8c54.first\n            item_d5e1d8 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> reduce_9b38cc.reducer\n    }\n\n    \n\n    instance(x: -242, y: -31) product_unique_def9ac root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -286, y: 24, name: \"list1\") property(List) list1_e6a3b4\n        in(x: -270, y: 142, name: \"list2\") property(List) list2_5c dee8\n\n        out(x: 1030, y: 95, name: \"dissimilar_elements\") property(List) dissimilar_elements_46f7a3\n\n        instance(x: 444, y: 122) difference_e9e1ab root.Std_k98ojb.Sets.Difference {}\n        list1_e6a3b4 -> difference_e9e1ab.left\n        list2_5cdee8 -> difference_e9e1ab.right\n        instance(x: 808, y: 95) difference_46f7a3 root.Std_k98ojb.Sets.Difference {}\n        list2_5cdee8 -> difference_46f7a3.left\n        list1_e6a3b4 -> difference_46f7a3.right\n        instance(x: 1030, y: 24) concat_f5d93e root.Std_k98ojb.List.Concat {}\n        difference_e9e1ab.difference -> concat_f5d93e.left\n        difference_46f7a3.difference -> concat_f5d93e.right\n        concat_f5d93e.result -> dissimilar_elements_46f7a3\n    }\n\n    \n\n    instance(x: -156, y: 45) find_dissimilar_afe6b2 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -377, y: 113, name: \"list\") property(List) list_3a5e4f\n        in(x: -349, y: -105, name: \"n\") property(Number) n_b9c2a1\n\n        out(x: 1038, y: 59, name: \"result\") property(List) result_d9b0d6\n\n        instance(x: 141, y: 123) slice_29f4e3 root.Std_k98ojb.List.Slice {}\n        instance(x: 522, y: -115) length_ecc8c2 root.Std_k98ojb.List.Length {}\n        instance(x: 761, y: 64) concat_d5a1d9 root.Std_k98ojb.List.Concat {}\n        list_3a5e4f -> slice_29f4e3.list\n        n_b9c2a1 -> slice_29f4e3.start\n        length_ecc8c2.length -> slice_29f4e3.end\n        instance(x: 279, y: -95) sub_c5d8b6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 417, y: -94) mod_d9e1a7 root.Std_k98ojb.Math.Modulo {}\n        length_ecc8c2.length -> mod_d9e1a7.value\n        n_b9c2a1 -> mod_d9e1a7.divisor\n        mod_d9e1a7.result -> sub_c5d8b6.first\n        length_ecc8c2.length -> sub_c5d8b6.second\n        sub_c5d8b6.result -> slice_29f4e3.start\n        0 -> slice_29f4e3.end\n        instance(x: 937, y: -105) slice_75f1a7 root.Std_k98ojb.List.Slice {}\n        list_3a5e4f -> slice_75f1a7.list\n        0 -> slice_75f1a7.start\n        sub_c5d8b6.result -> slice_75f1a7.end\n        slice_29f4e3.slice -> concat_d5a1d9.right\n        slice_75f1a7.slice -> concat_d5a1d9.left\n        concat_d5a1d9.result -> result_d9b0d6\n    }\n\n    \n\n    instance(x: -176, y: 35) rotate_f4c Deb root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -344, y: 140, name: \"array\") property(List) array_6f2e5d\n        out(x: 756, y: 114, name: \"sum\") property(Number) sum_f4c7a3\n\n        instance(x: 244, y: 131) reduce_e69c55 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        func() {\n            in(x: -231, y: 17, name: \"acc\") property(Number) acc_5f2a3d\n            in(x: -221, y: 114, name: \"current\") property(Number) current_f7e9c1\n\n            out(x: 244, y: 194, name: \"result\") property(Number) result_e5c8b6\n\n            instance(x: 34, y: 123) add_2d90a4 root.Std_k98ojb.Math.Add {}\n            acc_5f2a3d -> add_2d90a4.first\n            current_f7e9c1 -> add_2d90a4.second\n            add_2d90a4.result -> result_e5c8b6\n        } -> reduce_e69c55.handler\n        array_6f2e5d -> reduce_e69c55.items\n        reduce_e69c55.result -> sum_f4c7a3\n    }\n\n    \n\n    instance(x: -92, y: 43) SumArray_d6befe root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_1f846b\n        out(x: 340, y: 77, name: \"isPrime\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) for_7b3b7b root.Std_k98ojb.Std.For {}\n        instance(x: 981, y: 125) lessthanorequal_e8a5d2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1051, y: -12) modulo_35c bee root.Std_k98ojb.Math.Modulo {}\n        instance(x: 772, y: -141) ifexpression_ae90a9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        n_1f846b -> ifexpression_ae90a9.gen_0\n        for_7b3b7b.item -> lessthanorequal_e8a5d2.left\n        n_1f846b -> lessthanorequal_e8a5d2.right\n        2 -> modulo_35c.bee.divisor\n        for_7b3b7b.item -> modulo_35c.bee.value\n        ifexpression_ae90a9.then -> output_ai\n        ifexpression_ae90a9.else -> for_7b3b7b.reset\n        lessthanorequal_e8a5d2.result -> ifexpression_ae90a9.execute\n        modulo_35c.bee.result -> ifexpression_ae90a9.gen_1\n        for_7b3b7b.done -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) isprime_node root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -240, y: 140, name: \"a\") property(Number) a_8e9da3\n        in(x: -233, y: 252, name: \"b\") property(Number) b_e41c25\n\n        out(x: 795, y: 139, name: \"result\") property(Bool) result_b5c9f6\n\n        instance(x: 428, y: 140) multiply_68d8a3 root.Std_k98ojb.Math.Mul {}\n        instance(x: 654, y: 251) less_than_96e31d root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_8e9da3 -> multiply_68d8a3.first\n        b_e41c25 -> multiply_68d8a3.second\n        multiply_68d8a3.result -> less_than_96e31d.left\n        0 -> less_than_96e31d.right\n        less_than_96e31d.result -> result_b5c9f6\n    }\n\n    \n\n    instance(x: -54, y: 42) opposite_sign_f4ab34 root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -176, y: 142, name: \"n\") property(Number) n_654a5e\n        out(x: 744, y: 163, name: \"result\") property(Bool) result_e8f270\n\n        instance(x: 294, y: 157) modulo_b6e5c4 root.Std_k98ojb.Math.Modulo {}\n        n_654a5e -> modulo_b6e5c4.value\n        11 -> modulo_b6e5c4.divisor\n        instance(x: 563, y: 164) ifexpression_68d8f1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        ifexpression_68d8f1.result -> result_e8f270\n        modulo_b6e5c4.result -> ifexpression_68d8f1.gen_0\n    }\n\n    \n\n    instance(x: -45, y: 50) divisibleby11_f41e3a root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") replace {\n        in(x: -377, y: 123, name: \"input\") property(String) input_3e9a2f\n        in(x: -368, y: 262, name: \"oldChar\") property(String) oldChar_c5ea7c\n        in(x: -381, y: 395, name: \"newChar\") property(String) newChar_f4b7d8\n\n        out(x: 653, y: 235, name: \"output\") property(String) output_9e3f24\n\n        instance(x: 191, y: 234) replace_e61c25 root.Std_k98ojb.Strings.Replace {}\n        input_3e9a2f -> replace_e61c25.input\n        oldChar_c5ea7c -> replace_e61c25.search\n        newChar_f4b7d8 -> replace_e61c25.replace\n        replace_e61c25.output -> output_9e3f24\n    }\n\n    \n\n    instance(x: -44, y: 127) replace_80f2a6 root.main.replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: 44, y: -118, name: \"input\") property(String) input_2a3f10\n        out(x: 538, y: 107, name: \"output\") property(String) output_ea6bb5\n\n        instance(x: 316, y: 12) tolower_d7bca9 root.Std_k98ojb.Strings.ToLower {}\n        input_2a3f10 -> tolower_d7bca9.input\n        tolower_d7bca9.output -> output_ea6bb5\n    }\n\n    \n\n    instance(x: -29, y: 14) tolower_8d4e22 root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        list_ai -> sort_7b3b7b.list\n        instance(x: 1056, y: 76) reduce_e93c19 root.Std_k98ojb.Iteration.Reduce {\n            init_value: 1\n        }\n        func() {\n            in(x: -272, y: -48, name: \"acc\") property(Number) acc_86a8fb\n            in(x: -264, y: 18, name: \"current\") property(Number) current_9fba8c\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_86a8fb -> mul_4e8c54.first\n            current_9fba8c -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> reduce_e93c19.handler\n        sort_7b3b7b.sorted_list -> reduce_e93c19.items\n        instance(x: 1392, y: 76) filter_1710a5 root.Std_k98ojb.Query.Filter {\n            where: \"index == 0 || it != list[index - 1]\"\n        }\n        sort_7b3b7b.sorted_list -> filter_1710a5.list\n        filter_1710a5.result -> reduce_e93c19.items\n        reduce_e93c19.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) uniqueproduct_f43e59 root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 958, y: 115) setdiff_f5a04e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> setdiff_f5a04e.left\n        list2_c62075 -> setdiff_f5a04e.right\n        func() {\n            in(x: -231, y: -69, name: \"x\") property(Number) x_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) notcontains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> notcontains_4e8c54.list\n            x_42bc6f -> notcontains_4e8c54.item\n            notcontains_4e8c54.result -> output_e245cb\n        } -> filter_7b3b7b.handler\n        setdiff_f5a04e.difference -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_elements_node root.main.dissimilar_elements {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 960, y: 76) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 156) slice_f46a2d root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_f46a2d.list\n        0 -> slice_f46a2d.start\n        n_c62075 -> slice_f46a2d.end\n        slice_f46a2d.slice -> concat_4e8c54.left\n        concat_4e8c54.result -> output_ai\n    }\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: 105, y: -293, name: \"array\") property(List) array_4e8c54\n        out(x: 765, y: -145, name: \"sum\") property(Number) sum_e8391b\n\n        instance(x: 341, y: -194) reduce_68a1d7 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(acc, x) => acc + x\"\n        }\n        array_4e8c54 -> reduce_68a1d7.items\n        reduce_68a1d7.result -> sum_e8391b\n    }\n\n    \n\n    instance(x: 118, y: -35) Sum_b5dd25 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") isPrime {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f7759\n        out(x: 340, y: 77, name: \"isPrime\") property(Bool) isPrime_b2508f\n\n        instance(x: 772, y: 76) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1 ? false : n == 2 || Iteration.Find(n - 1, x => n % (x + 2) == 0).item == null\"\n        }\n        n_9f7759 -> ifexpression_7b3b7b.gen_0\n        ifexpression_7b3b7b.value -> isPrime_b2508f\n    }\n\n    \n\n    instance(x: -34, y: 127) isPrime_node root.main.isPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -281, y: -193, name: \"a\") property(Number) a_9f7759\n        in(x: -272, y: 17, name: \"b\") property(Number) b_f9110a\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) and_5a3e4d root.Std_k98ojb.Logic.And {}\n        instance(x: -200, y: -50) greaterthan_68a93a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 118, y: 112) lessthan_2f9c1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 100, y: -250) lessthan_e19a62 root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_9f7759 -> greaterthan_68a93a.left\n        0 -> greaterthan_68a93a.right\n        b_f9110a -> lessthan_2f9c1a.left\n        0 -> lessthan_2f9c1a.right\n        and_5a3e4d.result -> result_b2508f\n        execute_12bf99 -> greaterthan_68a93a.execute\n        greaterthan_68a93a.result -> and_5a3e4d.left\n        lessthan_2f9c1a.execute -> lessthan_e19a62.execute\n        b_f9110a -> lessthan_e19a62.left\n        0 -> lessthan_e19a62.right\n        lessthan_e19a62.result -> and_5a3e4d.right\n        instance(x: -150, y: 250) not_dfafe3 root.Std_k98ojb.Logic.Not {}\n        instance(x: 200, y: 50) equals_f1c2da root.Std_k98ojb.Logic.Equal {}\n        a_9f7759 -> equals_f1c2da.left\n        0 -> equals_f1c2da.right\n        not_dfafe3.input -> equals_f1c2da.result\n        not_dfafe3.output -> lessthan_e19a62.predicate\n        instance(x: 250, y: -150) not_68a93a root.Std_k98ojb.Logic.Not {}\n        b_f9110a -> equals_f1c2da.left\n        0 -> equals_f1c2da.right\n        not_68a93a.input -> equals_f1c2da.result\n        not_68a93a.output -> greaterthan_68a93a.predicate\n        and_5a3e4d.execute -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSign_d6e930 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_e38995 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 116, y: -56, name: \"if_37db7f\") if_37db7f root.Std_k98ojb.Std.If {}\n        n_9f7759 -> modulo_e38995.value\n        11 -> modulo_e38995.divisor\n        modulo_e38995.result -> if_37db7f.input\n        execute_12bf99 -> if_37db7f.execute\n        0 -> if_37db7f.then_value\n        if_37db7f.result -> result_b2508f\n        if_37db7f.then -> continue_685c8f\n        if_37db7f.else -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -450, y: -114, name: \"oldChar\") property(String) oldChar_12bf99\n        in(x: -272, y: 17, name: \"newChar\") property(String) newChar_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        oldChar_12bf99 -> replace_7b3b7b.search\n        newChar_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") ProductOfUnique {\n        in(x: -531, y: 2, name: \"list\") property(List) input_list\n        out(x: 340, y: 77, name: \"output\") property(Number) output\n\n        instance(x: 772, y: 76) unique_7b3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 1002, y: 114) sort_f9f1a5 root.Std_k98ojb.List.Sort {}\n        input_list -> sort_f9f1a5.list\n        sort_f9f1a5.sorted -> unique_7b3b7b.items\n        func() {\n            in(x: -231, y: -69, name: \"acc\") property(Number) acc_e4e2c6\n            in(x: -223, y: 18, name: \"current\") property(Number) current_f9f1a5\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_8b7d51\n\n            instance(x: -8, y: -53) mul_e4e2c6 root.Std_k98ojb.Math.Mul {}\n            acc_e4e2c6 -> mul_e4e2c6.first\n            current_f9f1a5 -> mul_e4e2c6.second\n            mul_e4e2c6.result -> result_8b7d51\n        } -> unique_7b3b7b.reducer\n        1 -> unique_7b3b7b.initial\n        unique_7b3b7b.result -> output\n    }\n\n    \n\n    instance(x: -34, y: 127) product_node root.main.ProductOfUnique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") Dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 1051, y: 101) not_2f9d09 root.Std_k98ojb.Logic.Not {}\n        instance(x: 901, y: 101) contains_9cb360 root.Std_k98ojb.List.Contains {}\n        list1_ai -> filter_7b3b7b.items\n        func() {\n            in(x: -272, y: -48, name: \"item\") property(Number) item_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            contains_9cb360.result -> not_2f9d09.input\n            list2_c62075 -> contains_9cb360.list\n            item_86a8fb -> contains_9cb360.item\n            not_2f9d09.output -> output_8ba733\n        } -> filter_7b3b7b.handler\n        filter_7b3b7b.output_list -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_node root.main.Dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -531, y: 2, name: \"list\") property(List) input_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) num_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 958, y: 75) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        input_ai -> slice_7b3b7b.list\n        num_ai -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.right\n        instance(x: 772, y: 34) slice_9fba8c root.Std_k98ojb.List.Slice {}\n        input_ai -> slice_9fba8c.list\n        instance(x: 958, y: 33) sub_584bfd root.Std_k98ojb.Math.Sub {}\n        instance(x: 772, y: -12) length_8815e6 root.Std_k98ojb.List.Length {}\n        input_ai -> length_8815e6.list\n        length_8815e6.length -> sub_584bfd.first\n        num_ai -> sub_584bfd.second\n        sub_584bfd.result -> slice_9fba8c.end\n        slice_9fba8c.slice -> concat_4e8c54.left\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: -281, y: -193, name: \"array\") property(List) array_9f7759\n        out(x: 46, y: 158, name: \"sum\") property(Number) sum_b2508f\n\n        instance(x: -105, y: -110) reduce_e38995 root.Std_k98ojb.Iteration.Reduce {\n            handler: \"(a, b) => a + b\"\n        }\n        array_9f7759 -> reduce_e38995.items\n        reduce_e38995.result -> sum_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) Sum_d6e930 root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -272, y: 17, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"isPrime\") property(Bool) isPrime_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) for_2a6e5b root.Std_k98ojb.Std.For {}\n        instance(x: 217, y: -44) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        getter(x: -144, y: 112, name: \"getter_9cceb3\") getter_9cceb3 = isPrime\n        setter(x: 116, y: -268, name: \"setter_1cedb2\") setter_1cedb2 = isPrime\n        instance(x: 554, y: -203) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        for_2a6e5b.item -> ifexpression_e38995.gen_0\n        n_9f7759 -> ifexpression_e38995.gen_1\n        2 -> for_2a6e5b.startIndex\n        n_9f7759 -> lessthanorequal_f11fda.left\n        for_2a6e5b.index -> lessthanorequal_f11fda.right\n        execute_12bf99 -> for_2a6e5b.reset\n        for_2a6e5b.onItem -> ifexpression_e38995.execute\n        ifexpression_e38995.then -> continue_685c8f\n        ifexpression_e38995.else -> for_2a6e5b.next\n        lessthanorequal_f11fda.result -> for_2a6e5b.condition\n        for_2a6e5b.done -> setter_1cedb2.execute\n        true -> setter_1cedb2.new_value\n        getter_9cceb3.value -> isPrime_b2508f\n        setter_1cedb2.continue -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) IsPrime_d6e930 root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSign {\n        in(x: -344, y: 16, name: \"a\") property(Number) a_6e5f4d\n        in(x: -335, y: 114, name: \"b\") property(Number) b_afe3c1\n        in(x: -451, y: -147, name: \"execute\") trigger() execute_c9bb23\n\n        out(x: 801, y: 18, name: \"result\") property(Bool) result_2d98a6\n        out(x: 799, y: -133, name: \"continue\") trigger() continue_f0e5b4\n\n        instance(x: -154, y: -141) multiply_e1a3f7 root.Std_k98ojb.Math.Mul {}\n        instance(x: 105, y: -129) lessthan_31c bee root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_6e5f4d -> multiply_e1a3f7.first\n        b_afe3c1 -> multiply_e1a3f7.second\n        multiply_e1a3f7.result -> lessthan_31c_bee.left\n        0 -> lessthan_31c_bee.right\n        lessthan_31c_bee.result -> result_2d98a6\n        execute_c9bb23 -> multiply_e1a3f7.execute\n        multiply_e1a3f7.continue -> continue_f0e5b4\n    }\n\n    \n\n    instance(x: -217, y: 51) OppositeSign_31b2c8 root.main.OppositeSign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -281, y: -193, name: \"n\") property(Number) n_9f7759\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_b2508f\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) modulo_2e38995 root.Std_k98ojb.Math.Modulo {}\n        n_9f7759 -> modulo_2e38995.value\n        11 -> modulo_2e38995.divisor\n        instance(x: 118, y: 12) equal_e38995 root.Std_k98ojb.Logic.Equal {}\n        0 -> equal_e38995.left\n        modulo_2e38995.result -> equal_e38995.right\n        equal_e38995.result -> result_b2508f\n        execute_12bf99 -> modulo_2e38995.execute\n        equal_e38995.then -> continue_685c8f\n    }\n\n    \n\n    instance(x: -174, y: -63) DivisibleBy11_d6e930 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -417, y: 105, name: \"input\") property(String) input_9e3a4d\n        in(x: -429, y: 244, name: \"oldChar\") property(String) oldChar_f5fba1\n        in(x: -410, y: 375, name: \"newChar\") property(String) newChar_afeff2\n\n        out(x: 521, y: 246, name: \"output\") property(String) output_6a6d45\n\n        instance(x: 94, y: 245) replace_68c bee root.Std_k98ojb.Strings.Replace {}\n        input_9e3a4d -> replace_68c_bee.input\n        oldChar_f5fba1 -> replace_68c_bee.search\n        newChar_afeff2 -> replace_68c_bee.replace\n        replace_68c_bee.output -> output_6a6d45\n    }\n\n    \n\n    instance(x: -193, y: 123) Replace_d9e4fc root.main.Replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -281, y: -193, name: \"input\") property(String) input_9f7759\n        out(x: 46, y: 158, name: \"output\") property(String) output_b2508f\n\n        instance(x: -105, y: -110) tolower_e38995 root.Std_k98ojb.Strings.ToLower {}\n        input_9f7759 -> tolower_e38995.input\n        tolower_e38995.output -> output_b2508f\n    }\n\n    \n\n    instance(x: -174, y: -63) ToLower_d6e930 root.main.ToLower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list.\") product_unique {\n        in(x: -357, y: 111, name: \"list\") property(List) list_5a6e4f\n\n        out(x: 1028, y: 166, name: \"result\") property(Number) result_f7d9b3\n\n        instance(x: 191, y: 129) sort_8c51a2 root.Std_k98ojb.List.Sort {}\n        instance(x: 554, y: 164) reduce_e5f4e6 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -121, y: 137) empty_f7947d root.Std_k98ojb.List.Empty {}\n        list_5a6e4f -> sort_8c51a2.list\n        func() {\n            in(x: -272, y: -33, name: \"acc\") property(Number) acc_e8d9cb\n            in(x: -250, y: 54, name: \"current\") property(Number) current_d1b dee\n\n            out(x: 342, y: 26, name: \"result\") property(Number) result_5c bee\n\n            instance(x: 104, y: 16) mul_f9e46a root.Std_k98ojb.Math.Mul {}\n            acc_e8d9cb -> mul_f9e46a.first\n            current_d1bdee -> mul_f9e46a.second\n            mul_f9e46a.result -> result_5cbee\n        } -> reduce_e5f4e6.handler\n        empty_f7947d.list -> reduce_e5f4e6.initial\n        sort_8c51a2.sorted -> reduce_e5f4e6.items\n        reduce_e5f4e6.result -> result_f7d9b3\n    }\n\n    \n\n    instance(x: -85, y: 49) product_unique_b47c52 root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -417, y: 44, name: \"list1\") property(List) list1_e5f9a3\n        in(x: -398, y: 157, name: \"list2\") property(List) list2_6b5e45\n\n        out(x: 1007, y: 54, name: \"dissimilar_elements\") property(List) dissimilar_elements_a4d0f1\n\n        instance(x: 209, y: 59) setdifference_3c bee root.Std_k98ojb.Sets.Difference {}\n        list1_e5f9a3 -> setdifference_3c.left\n        list2_6b5e45 -> setdifference_3c.right\n        instance(x: 1004, y: 151) setunion_f8e7c0 root.Std_k98ojb.Sets.Difference {\n            left: setdifference_3c.difference,\n            right: list2_6b5e45\n        }\n        setunion_f8e7c0.difference -> dissimilar_elements_a4d0f1\n    }\n\n    \n\n    instance(x: -258, y: 32) find_dissimilar_ea9c02 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate {\n        in(x: -346, y: 157, name: \"list\") property(List) list_9e5f3a\n        in(x: -299, y: -128, name: \"n\") property(Number) n_b6d4b1\n\n        out(x: 946, y: 105, name: \"result\") property(List) result_a7b7c2\n\n        instance(x: 192, y: 156) slice_9e5f3a root.Std_k98ojb.List.Slice {}\n        instance(x: 541, y: 104) concat_ebafe4 root.Std_k98ojb.List.Concat {}\n        list_9e5f3a -> slice_9e5f3a.list\n        n_b6d4b1 -> slice_9e5f3a.start\n        -1 -> slice_9e5f3a.end\n        instance(x: 192, y: -129) slice_a7b7c2 root.Std_k98ojb.List.Slice {}\n        list_9e5f3a -> slice_a7b7c2.list\n        0 -> slice_a7b7c2.start\n        n_b6d4b1 -> slice_a7b7c2.end\n        slice_9e5f3a.slice -> concat_ebafe4.left\n        slice_a7b7c2.slice -> concat_ebafe4.right\n        concat_ebafe4.result -> result_a7b7c2\n    }\n\n    \n\n    instance(x: -96, y: 53) rotate_2ecef5 root.main.rotate {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -238, y: 128, name: \"array\") property(List) array_49e2a5\n        out(x: 840, y: 155, name: \"sum\") property(Number) sum_f4f9c3\n\n        instance(x: 512, y: 154) reduce_8c95d7 root.Std_k98ojb.Iteration.Reduce {\n            initial_value: 0\n        }\n        func() {\n            in(x: -123, y: -55, name: \"acc\") property(Number) acc_f3e6a1\n            in(x: -105, y: 43, name: \"current\") property(Number) current_9d5b8f\n\n            out(x: 275, y: 2, name: \"result\") property(Number) result_b4c0dd\n\n            instance(x: 45, y: -7) add_e61a92 root.Std_k98ojb.Math.Add {}\n            acc_f3e6a1 -> add_e61a92.first\n            current_9d5b8f -> add_e61a92.second\n            add_e61a92.result -> result_b4c0dd\n        } -> reduce_8c95d7.handler\n        array_49e2a5 -> reduce_8c95d7.items\n        reduce_8c95d7.accumulated -> sum_f4f9c3\n    }\n\n    \n\n    instance(x: -67, y: 50) SumArray_e8bca1 root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_6b655b\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"isPrime\") property(Bool) isPrime_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 395, y: -378) for_96023e root.Std_k98ojb.Std.For {}\n        instance(x: 97, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        2 -> for_96023e.from\n        n_6b655b -> for_96023e.to\n        for_96023e.item -> modulo_adfa16.value\n        for_96023e.index -> add_88bb8a.first\n        1 -> add_88bb8a.second\n        add_88bb8a.result -> div_547f34.first\n        n_6b655b -> div_547f34.second\n        execute_cdac2a -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        ifexpression_3d7de6.else -> for_96023e.reset\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        modulo_adfa16.result -> setter_41e4ad.new_value\n        for_96023e.onItem -> modulo_adfa16.execute\n        for_96023e.done -> continue_d9efd7\n        getter_38583a.value -> isPrime_732a8a\n        setter_41e4ad.continue -> setter_375321.execute\n    }\n\n    \n\n    instance(x: -242, y: -31) IsPrime_def9ac root.main.IsPrime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "llama3.3:70b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -185, y: 17, name: \"a\") property(Number) a_8e1bb6\n        in(x: -178, y: 134, name: \"b\") property(Number) b_b0abf9\n\n        out(x: 782, y: 35, name: \"result\") property(Bool) result_37c0d5\n\n        instance(x: 395, y: 32) multiply_f7e2a4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 561, y: 36) less_than_9bc77f root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_8e1bb6 -> multiply_f7e2a4.first\n        b_b0abf9 -> multiply_f7e2a4.second\n        multiply_f7e2a4.result -> less_than_9bc77f.left\n        0 -> less_than_9bc77f.right\n        less_than_9bc77f.result -> result_37c0d5\n    }\n\n    \n\n    instance(x: -71, y: -25) opposite_sign_f6f260 root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -195, y: 16, name: \"n\") property(Number) n_8e4e3d\n        out(x: 694, y: 34, name: \"result\") property(Bool) result_9daa62\n\n        instance(x: 240, y: 43) modulo_d93f45 root.Std_k98ojb.Math.Modulo {}\n        n_8e4e3d -> modulo_d93f45.value\n        11 -> modulo_d93f45.divisor\n        instance(x: 501, y: 34) equals_32a5c9 root.Std_k98ojb.Logic.Equal {}\n        0 -> equals_32a5c9.left\n        modulo_d93f45.result -> equals_32a5c9.right\n        equals_32a5c9.result -> result_9daa62\n    }\n\n    \n\n    instance(x: -141, y: -47) DivisibleBy11_7e75d6 root.main.DivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") replace {\n        in(x: -286, y: 110, name: \"input\") property(String) input_1f2e8a\n        in(x: -240, y: 232, name: \"old\") property(String) old_e74c25\n        in(x: -208, y: 360, name: \"new\") property(String) new_d6d7b3\n\n        out(x: 846, y: 233, name: \"output\") property(String) output_9f2e51\n\n        instance(x: 560, y: 232) replace_e89c20 root.Std_k98ojb.Strings.Replace {}\n        input_1f2e8a -> replace_e89c20.input\n        old_e74c25 -> replace_e89c20.search\n        new_d6d7b3 -> replace_e89c20.replace\n        replace_e89c20.output -> output_9f2e51\n    }\n\n    \n\n    instance(x: -46, y: 126) replace_f47f52 root.main.replace {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case.\") ToLower {\n        in(x: 110, y: -30, name: \"input\") property(String) input_2a3f56\n        out(x: 522, y: 133, name: \"output\") property(String) output_eaad6b\n\n        instance(x: 312, y: 84) tolower_98d927 root.Std_k98ojb.Strings.ToLower {}\n        input_2a3f56 -> tolower_98d927.input\n        tolower_98d927.output -> output_eaad6b\n    }\n\n    \n\n    instance(x: -135, y: 128) tolower_f4e90c root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"output\") property(Number) output_ai\n\n        instance(x: 772, y: 76) sort_7b3b7b root.Std_k98ojb.List.Sort {}\n        list_ai -> sort_7b3b7b.list\n        instance(x: 991, y: 77) reduce_f2c95f root.Std_k98ojb.Iteration.Reduce {\n            init_value: 1\n        }\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -113, y: 23, name: \"current\") property(Number) current_86a8fb\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_584bfd.first\n            current_86a8fb -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_f2c95f.reducer\n        instance(x: 1241, y: 80) filter_dfcfa0 root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n            in(x: -264, y: 18, name: \"index\") property(Number) index_b2508f\n            in(x: -256, y: 84, name: \"list\") property(List) list_f9110a\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54) contains_a2fa90 root.Std_k98ojb.List.Contains {}\n            current_86a8fb -> contains_a2fa90.item\n            list_f9110a -> contains_a2fa90.list\n            index_b2508f -> contains_a2fa90.index\n            instance(x: 92, y: -11) not_584bfd root.Std_k98ojb.Logic.Not {}\n            contains_a2fa90.result -> not_584bfd.input\n            not_584bfd.output -> output_8ba733\n        } -> filter_dfcfa0.handler\n        sort_7b3b7b.sorted -> reduce_f2c95f.items\n        reduce_f2c95f.result -> output_ai\n        filter_dfcfa0.output_list -> list_f9110a\n        sort_7b3b7b.sorted -> filter_dfcfa0.items\n    }\n\n    \n\n    instance(x: -179, y: 30) uniqueproduct_59bc6e root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) filter_7b3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 958, y: 115) setdiff_f5a31d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> setdiff_f5a31d.left\n        list2_c62075 -> setdiff_f5a31d.right\n        func() {\n            in(x: -231, y: -69, name: \"x\") property(Number) x_42bc6f\n\n            out(x: 245, y: -54, name: \"output\") property(Bool) output_e245cb\n\n            instance(x: -8, y: -53) notcontains_4e8c54 root.Std_k98ojb.List.Contains {}\n            list2_c62075 -> notcontains_4e8c54.list\n            x_42bc6f -> notcontains_4e8c54.item\n            notcontains_4e8c54.result -> output_e245cb\n        } -> filter_7b3b7b.handler\n        setdiff_f5a31d.difference -> output_ai\n        list1_ai -> filter_7b3b7b.items\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_elements_node root.main.dissimilar_elements {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction\") rotate {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        in(x: -181, y: -13, name: \"n\") property(Number) n_c62075\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 772, y: 76) slice_7b3b7b root.Std_k98ojb.List.Slice {}\n        instance(x: 1002, y: 78) concat_4e8c54 root.Std_k98ojb.List.Concat {}\n        list_ai -> slice_7b3b7b.list\n        n_c62075 -> slice_7b3b7b.start\n        slice_7b3b7b.slice -> concat_4e8c54.left\n        instance(x: 772, y: -105) slice_f11fda root.Std_k98ojb.List.Slice {}\n        list_ai -> slice_f11fda.list\n        0 -> slice_f11fda.start\n        n_c62075 -> slice_f11fda.end\n        slice_f11fda.slice -> concat_4e8c54.right\n        concat_4e8c54.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_node root.main.rotate {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") Sum {\n        in(x: 94, y: -308, name: \"array\") property(List) array_4e0c3d\n        in(x: -219, y: -190, name: \"execute\") trigger() execute_4fbafe\n\n        out(x: 1039, y: -234, name: \"sum\") property(Number) sum_d8a6cd\n        out(x: 1015, y: 121, name: \"continue\") trigger() continue_f7a6e2\n\n        instance(x: 342, y: -212) reduce_4d50f1 root.Std_k98ojb.Iteration.Reduce {\n        }\n        func() {\n            in(x: -109, y: 25, name: \"accumulated\") property(Number) accumulated_e0dd8c\n            in(x: -105, y: 116, name: \"current\") property(Number) current_a6f4b2\n\n            out(x: 194, y: 72, name: \"result\") property(Number) result_9d58a3\n\n            instance(x: 22, y: 67) add_c0c14e root.Std_k98ojb.Math.Add {}\n            accumulated_e0dd8c -> add_c0c14e.first\n            current_a6f4b2 -> add_c0c14e.second\n            add_c0c14e.result -> result_9d58a3\n        } -> reduce_4d50f1.handler\n        array_4e0c3d -> reduce_4d50f1.items\n        0 -> reduce_4d50f1.initialValue\n        reduce_4d50f1.result -> sum_d8a6cd\n        execute_4fbafe -> reduce_4d50f1.execute\n        reduce_4d50f1.done -> continue_f7a6e2\n    }\n\n    \n\n    instance(x: -83, y: 54) Sum_b9c bee root.main.Sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") isPrime {\n        in(x: -531, y: 2, name: \"n\") property(Number) n_9f7759\n        out(x: 340, y: 77, name: \"isPrime\") property(Bool) isPrime_b2508f\n\n        instance(x: 772, y: 76) ifexpression_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1 ? false : n == 2 || Iteration.Find(n - 1, x => n % (x + 2) == 0).item == null\"\n        }\n        n_9f7759 -> ifexpression_7b3b7b.gen_0\n        ifexpression_7b3b7b.value -> isPrime_b2508f\n    }\n\n    \n\n    instance(x: -34, y: 127) isPrime_node root.main.isPrime {}\n}"
            ]
        }
    }
]