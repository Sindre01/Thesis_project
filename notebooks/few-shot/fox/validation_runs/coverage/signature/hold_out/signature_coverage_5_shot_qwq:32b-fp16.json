[
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 184, y: -167) mul_3e3d8c root.Std_k98ojb.Math.Mul {}\n        instance(x: 350, y: -200) lessthan_4f8a1d root.Std_k98ojb.Math.LessThan {}\n\n        x_853326 -> mul_3e3d8c.first\n        y_5390f5 -> mul_3e3d8c.second\n        0 -> lessthan_4f8a1d.right\n        mul_3e3d8c.result -> lessthan_4f8a1d.left\n        lessthan_4f8a1d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -350, y: -175) opposite_signs_def root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: 105) modulo_4e3d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 345, y: 105) equal_7c8d3b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_4e3d1a.value\n        11 -> modulo_4e3d1a.divisor\n        modulo_4e3d1a.result -> equal_7c8d3b.left\n        0 -> equal_7c8d3b.right\n        equal_7c8d3b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -95, y: -4) is_diff_1a3e8c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a9d4b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9d4b.input\n        search_ai -> replace_7a9d4b.search\n        replace_ai -> replace_7a9d4b.replace\n        replace_7a9d4b.value -> output_ai\n    }\n\n    \n\n    instance(x: -182, y: 150) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 200, y: 100) tolower_aj root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 400, y: 150) equal_aj root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_aj.input\n        tolower_aj.output -> equal_aj.right\n        input_ai -> equal_aj.left\n        equal_aj.result -> output_ai\n    }\n\n    \n\n    instance(x: -150, y: 50) is_lower_inst root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name=\"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name=\"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name=\"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name=\"output\") property(Number) output_cffcc2\n\n        instance empty_list root.Std_k98ojb.List.Empty {}\n\n        instance reduce_unique root.Iteration.Reduce {\n            items = list_5fda54\n            initial_value = empty_list.output\n            handler = func() { \n                in(x: -100, y: 50, name=\"acc\") property(List) acc;\n                in(x: 20, y: 50, name=\"element\") property(Number) element;\n\n                instance contains root.Std_k98ojb.List.Contains {}\n                acc -> contains.list\n                element -> contains.value\n\n                instance if_node root.Std_k98ojb.Std.If {\n                    predicate = contains.result\n                }\n\n                \n                acc -> if_node.then_output\n\n                \n                instance add root.Std_k98ojb.List.Add {}\n                acc -> add.list\n                element -> add.element\n                add.output -> if_node.else_output\n\n                if_node.result -> out.output\n            }\n        }\n\n        instance reduce_product root.Iteration.Reduce {\n            items = reduce_unique.result\n            initial_value = 1\n            handler = func() { \n                in(x: -50, y: 30, name=\"acc\") property(Number) acc;\n                in(x: 50, y: 30, name=\"element\") property(Number) element;\n\n                instance multiply root.Std_k98ojb.Math.Mul {}\n                acc -> multiply.first\n                element -> multiply.second\n\n                multiply.result -> out.output\n            }\n        }\n\n        \n        execute_19300c -> reduce_unique.start\n        reduce_unique.done -> reduce_product.start\n        reduce_product.done -> continue_45190b\n\n        \n        reduce_product.result -> output_cffcc2\n    }\n\n    instance(x: -78, y: 63) unique_product_def root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 194, y: 105) difference_abc root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: -63) difference_bca root.Std_k98ojb.Sets.Difference {}\n        instance(x: 370, y: 45) concat_result root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_abc.left\n        list2_ai -> difference_abc.right\n\n        list2_ai -> difference_bca.left\n        list1_ai -> difference_bca.right\n\n        difference_abc.difference -> concat_result.left\n        difference_bca.difference -> concat_result.right\n\n        concat_result.zipped -> output_ai\n    }\n\n    \n\n    instance(x: -480, y: 32) find_dissimilar_def root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 50, y: 20) get_len root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 get_len.list\n        get_len.length \u2192 len_out\n\n        instance(x: 70, y: 30) is_zero root.Std_k98ojb.Logic.Equal {}\n        len_out \u2192 is_zero.a\n        0 \u2192 is_zero.b\n        is_zero.result \u2192 condition\n\n        instance(x: 100, y: 20) if_empty root.Std_k98ojb.Std.If {}\n        condition \u2192 if_empty.condition\n        get_len.list \u2192 if_empty.true_value\n\n        instance(x: 150, y: 40) modulo_node root.Std_k98ojb.Math.Modulo {}\n        n_68068c \u2192 modulo_node.value\n        len_out \u2192 modulo_node.divisor\n        modulo_node.result \u2192 remainder\n\n        instance(x: 170, y: 50) sub_node root.Std_k98ojb.Math.Sub {}\n        len_out \u2192 sub_node.first\n        remainder \u2192 sub_node.second\n        sub_node.result \u2192 start_val\n\n        instance(x: 200, y: 60) first_slice root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 first_slice.list\n        start_val \u2192 first_slice.start\n        len_out \u2192 first_slice.end\n\n        instance(x: 230, y: 60) second_slice root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 second_slice.list\n        0 \u2192 second_slice.start\n        start_val \u2192 second_slice.end\n\n        instance(x: 250, y: 70) concat_node root.Std_k98ojb.List.Concat {}\n        first_slice.items \u2192 concat_node.left\n        second_slice.items \u2192 concat_node.right\n        concat_node.result \u2192 if_empty.false_value\n\n        if_empty.result \u2192 output_823209\n    }\n\n    instance(x: -100, y: 50) rotate_right_def root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: 100) reduce_sum root.Iteration.Reduce {}\n        list_2c62ab -> reduce_sum.items\n\n        \n        func() {\n            in(x: 0, y:0, name=\"acc\") property(Number) acc;\n            in(x:50,y:0, name=\"item\") property(Number) item;\n\n            instance(x:30,y:30) add_node root.Math.Add {}\n            acc -> add_node.first\n            item -> add_node.second\n\n            out(x: 80, y:40, name=\"result\") property(Number) result;\n            add_node.result -> result\n        } -> reduce_sum.handler\n\n        \n        instance(x: -50,y:20) const_0 root.Math.Constant {}\n        0 -> const_0.value\n        const_0.output -> reduce_sum.initial\n\n        reduce_sum.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_def root.main._sum {}\n}"
            ],
            "48": [
                "module() main {\n    func(doc: \"Check if a given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        \n        instance edge_case root.Std_k98ojb.Std.IfExpression {\n            expression: \"a <= 1\"\n        }\n        num_5c0677 -> edge_case.gen_0\n        execute_b7b391 -> edge_case.execute\n\n        \n        instance set_false root.Setter {\n            property: output_c457b3\n            new_value: false\n        }\n        edge_case.then -> set_false.execute\n        set_false.continue -> continue_9a54bb\n\n        \n        instance pow_node root.Math.Pow {\n            x: num_5c0677\n            y: 0.5\n        }\n        instance floor_node root.Math.Floor { input: pow_node.result }\n\n        instance gen_range root.List.GenerateRange {\n            from: 2\n            to: floor_node.output\n        }\n\n        \n        instance divisor_loop root.Iteration.For {\n            items: gen_range.result\n\n            onItem() {\n                \n                instance modulo root.Math.Modulo {\n                    value: num_5c0677\n                    divisor: item  \n                }\n\n                instance check_zero root.Logic.Equal {\n                    a: modulo.result\n                    b: 0\n                }\n\n                instance if_divisible root.Std.IfExpression {\n                    expression: \"a == true\"\n                }\n                check_zero -> if_divisible.gen_0\n\n                \n                instance set_false_in_loop root.Setter {\n                    property: output_c457b3\n                    new_value: false\n                }\n                if_divisible.then -> set_false_in_loop.execute\n                set_false_in_loop.continue -> continue_9a54bb\n\n                \n                instance proceed_next root.Iteration.For.Next {}\n                if_divisible.else -> proceed_next.execute\n            }\n\n            done() {\n                \n                instance set_true root.Setter {\n                    property: output_c457b3\n                    new_value: true\n                }\n                set_true.continue -> continue_9a54bb\n            }\n        }\n\n        edge_case.else -> divisor_loop.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 200, y: -175) mul_6d8c4b root.Std_k98ojb.Math.Mul {}\n        instance(x: 350, y: -175) lessthan_3e7a1f root.Std_k98ojb.Math.LessThan {}\n\n        x_853326 -> mul_6d8c4b.first\n        y_5390f5 -> mul_6d8c4b.second\n\n        mul_6d8c4b.result -> lessthan_3e7a1f.left\n        0 -> lessthan_3e7a1f.right\n\n        lessthan_3e7a1f.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -285, y: -175) opposite_signs_def root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 50) mod_node root.Std_k98ojb.Math.Modulo {}\n        instance(x: 200, y: 50) eq_zero root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> mod_node.value\n        11 -> mod_node.divisor\n\n        mod_node.result -> eq_zero.left\n        0 -> eq_zero.right\n\n        eq_zero.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -50, y: -50) is_diff_inst root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a9dcb root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9dcb.input\n        search_ai -> replace_7a9dcb.search\n        replace_ai -> replace_7a9dcb.replace\n        replace_7a9dcb.value -> output_ai\n    }\n\n    \n\n    instance(x: -300, y: 150) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 150, y: 300) tolower_0 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 400, y: 300) equal_1 root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_0.input\n        input_ai -> equal_1.left\n        tolower_0.value -> equal_1.right\n        equal_1.result -> output_ai\n    }\n\n    instance(x: -200, y: 50) is_lower_def root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance empty_list root.Std_k98ojb.List.Empty {}\n\n        \n        instance reduce_unique root.Iteration.Reduce {\n            items = list_5fda54;\n            initial_value = empty_list.list;\n\n            handler = [handler_unique];\n        }\n\n        func() as handler_unique {  \n            in acc: property(List);\n            in element: property(Number);\n\n            out new_acc: property(List);\n\n            instance contains root.Std_k98ojb.List.Contains {\n                list = acc;\n                input = element;\n            }\n\n            instance if_node root.Std_k98ojb.Std.If {\n                condition = !contains.contains;\n\n                then:\n                    \n                    instance add_element root.Std_k98ojb.List.Add {\n                        list = acc;\n                        item = element;\n                    }\n                    new_acc = add_element.result;\n\n                else:\n                    new_acc = acc;  \n            }\n        }\n\n        \n        instance reduce_product root.Iteration.Reduce {\n            items = reduce_unique.output_list;\n            initial_value = 1.0;\n\n            handler = [handler_product];\n        }\n\n        func() as handler_product {  \n            in acc: property(Number);\n            in element: property(Number);\n\n            out new_acc: property(Number);\n\n            instance multiply root.Std_k98ojb.Math.Mul {\n                first = acc;\n                second = element;\n            }\n            new_acc = multiply.result;\n        }\n\n        \n        reduce_product.output_value \u2192 output_cffcc2;\n\n        \n        execute_19300c \u2192 trigger(reduce_unique.start);\n        reduce_product.on_complete \u2192 emit(continue_45190b);\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 150, y: 100) difference1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 200) difference2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 150) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference1.left\n        list2_ai -> difference1.right\n\n        list2_ai -> difference2.left\n        list1_ai -> difference2.right\n\n        difference1.difference -> concat_1.left\n        difference2.difference -> concat_1.right\n\n        concat_1.result -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) find_dissimilar_def root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 100, y: 50) list_length root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 list_length.list\n\n        instance(x: 200, y: 60) modulo_node root.Std_k98ojb.Math.Modulo {}\n        n_68068c \u2192 modulo_node.value\n        list_length.result \u2192 modulo_node.divisor\n\n        instance(x: 300, y: 70) split_at root.Std_k98ojb.Math.Sub {}\n        list_length.result \u2192 split_at.first\n        modulo_node.result \u2192 split_at.second\n\n        instance(x: 400, y: 80) first_slice root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 first_slice.list\n        0 \u2192 first_slice.start\n        split_at.result \u2192 first_slice.end\n\n        instance(x: 500, y: 90) second_slice root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 second_slice.list\n        split_at.result \u2192 second_slice.start\n        -1 \u2192 second_slice.end\n\n        instance(x: 600, y: 100) concat_node root.Std_k98ojb.List.Concat {}\n        first_slice.output_list \u2192 concat_node.left\n        second_slice.output_list \u2192 concat_node.right\n\n        concat_node.result \u2192 output_823209\n    }\n\n    \n\n    instance(x: -50, y: 40) rotate_right_def root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -116) reduce_7e3d3b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7e3d3b.items\n        0 -> reduce_7e3d3b.initialValue\n        func() {\n            in(x: -145, y: -55, name: \"acc\") property(Number) acc_9a8f3c\n            in(x: -126, y: 56, name: \"item\") property(Number) item_0e7b3d\n\n            out(x: 304, y: 24, name: \"\") property(Number) _e3b39a\n\n            instance(x: 88, y: -1) add_bf5c6a root.Std_k98ojb.Math.Add {}\n            acc_9a8f3c -> add_bf5c6a.first\n            item_0e7b3d -> add_bf5c6a.second\n            add_bf5c6a.result -> _e3b39a\n        } -> reduce_7e3d3b.reducer\n        reduce_7e3d3b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -104, y: 46) _sum_5c0a5a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        \n        instance(if_leq1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        })\n        \n        instance(set_false root.Std_k98ojb.SetProperty {\n            property: output_c457b3,\n            value: false\n        })\n        set_false \u2192 continue_9a54bb\n        \n        execute_b7b391 \u2192 if_leq1.execute\n\n        \n        if_leq1.then \u2192 set_false.execute\n\n        instance(if_eq2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num == 2\"\n        })\n        \n        \n        if_leq1.else \u2192 if_eq2.execute\n        \n        instance(set_true root.Std_k98ojb.SetProperty {\n            property: output_c457b3,\n            value: true\n        })\n        set_true \u2192 continue_9a54bb\n\n        \n        if_eq2.then \u2192 set_true.execute\n        \n        instance(mod_two root.Std_k98ojb.Math.Modulo {\n            value: num_5c0677,\n            divisor: 2\n        })\n        \n        instance(if_even root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod_two.result == 0\"\n        })\n        \n        \n        if_eq2.else \u2192 mod_two.execute\n        \n        mod_two.output \u2192 if_even.gen_0? \n\n        instance(set_false_even root.Std_k98ojb.SetProperty {\n            property: output_c457b3,\n            value: false\n        })\n        set_false_even \u2192 continue_9a54bb\n\n        if_even.then \u2192 set_false_even.execute\n\n        \n        instance(div_upper root.Std_k98ojb.Math.Div {\n            first: num_5c0677,\n            second: 2\n        })\n\n        instance(gen_list root.Std_k98ojb.List.GenerateRange {\n            from: 3,\n            to: div_upper.result\n        })\n        \n        instance(find_divisor root.Std_k98ojb.Iteration.Find {\n            list: gen_list.output,\n            handler: func() {\n                in(x: \"i\") property(Number) i;\n                \n                instance(modulo root.Std_k98ojb.Math.Modulo {\n                    value: num_5c0677,\n                    divisor: i\n                })\n                \n                instance(eq_zero root.Std_k98ojb.Math.Equals {\n                    a: modulo.result,\n                    b: 0\n                })\n                \n                eq_zero.output \u2192 return this as the predicate result.\n            }\n        })\n\n        instance(if_found root.Std_k98ojb.Std.IfExpression {\n            expression: \"find_divisor.result != null\"\n        })\n\n        instance(set_false_found root.Std_k98ojb.SetProperty {\n            property: output_c457b3,\n            value: false\n        })\n        set_false_found \u2192 continue_9a54bb\n\n        if_found.then \u2192 set_false_found.execute\n\n        instance(set_true_prime root.Std_k98ojb.SetProperty {\n            property: output_c457b3,\n            value: true\n        })\n        set_true_prime \u2192 continue_9a54bb\n\n        if_found.else \u2192 set_true_prime.execute\n\n        \n        if_even.else \u2192 div_upper.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 86, y: -174) ifexpr_0a1b2c root.Std_k98ojb.Std.IfExpression {\n            expression: \"x * y < 0\"\n        }\n        x_853326 -> ifexpr_0a1b2c.x\n        y_5390f5 -> ifexpr_0a1b2c.y\n        ifexpr_0a1b2c.value -> output_3339a3\n    }\n\n    \n\n    instance(x: -378, y: -164) opposite_signs_def root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 50) expr_node root.Std_k98ojb.Math.Expression {\n            expression = \"n % 11 == 0\"\n        }\n        n_27f29c -> expr_node.n\n        expr_node.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -10, y: -10) is_diff_instance root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a3d9f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a3d9f.input\n        search_ai -> replace_7a3d9f.search\n        replace_ai -> replace_7a3d9f.replace\n        replace_7a3d9f.result -> output_ai\n    }\n\n    \n\n    instance(x: -150, y: 200) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 150, y: 100) tolower_1 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 300, y: 100) equal_1 root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_1.input\n        input_ai -> equal_1.left\n        tolower_1.result -> equal_1.right\n        equal_1.result -> output_ai\n    }\n\n    \n\n    instance(x: -200, y: 50) is_lower_inst root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance empty_list of List.Empty {}\n\n        \n        instance const_one of Math.Constant { value = 1 }\n\n        \n        instance reduce_unique of Iteration.Reduce {\n            items = list_5fda54\n            initial_value = empty_list.output\n            handler = func() {\n                in(x: 0, y: 0, name: \"acc\") property(List) acc\n                in(x: 100, y: 0, name: \"item\") property(Number) item\n\n                out(x: 200, y: 0, name: \"\") property(List) output_list\n\n                \n                instance contains of List.Contains with list=acc, element=item\n                instance if_node of Std.If with predicate=contains.result:\n                    then: acc -> output_list  \n                    else:\n                        add = List.Add(list=acc, element=item)\n                        add.output -> output_list  \n            }\n        }\n\n        \n        instance reduce_product of Iteration.Reduce {\n            items = reduce_unique.result\n            initial_value = const_one.output\n            handler = func() {\n                in(x: 0, y: 0, name: \"acc\") property(Number) acc\n                in(x: 100, y: 0, name: \"item\") property(Number) item\n\n                out(x: 200, y: 0, name: \"\") property(Number) output_num\n\n                \n                instance multiply of Math.Multiply with first=acc, second=item\n                multiply.result -> output_num\n            }\n        }\n\n        \n        reduce_product.result -> output_cffcc2\n\n        \n        execute_19300c -> reduce_unique.start  \n        reduce_unique.on_complete -> reduce_product.start  \n        reduce_product.on_complete -> continue_45190b  \n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 150, y: 100) difference1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 250) difference2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: 175) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference1.left\n        list2_ai -> difference1.right\n\n        list2_ai -> difference2.left\n        list1_ai -> difference2.right\n\n        difference1.difference -> concat.left\n        difference2.difference -> concat.right\n\n        concat.result -> output_ai\n    }\n\n    \n\n    instance(x: -300, y: 50) find_dissimilar_inst root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 50, y: 20) len_node root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 len_node.list\n\n        instance(x: 100, y: 30) mod_node root.Std_k98ojb.Math.Modulo {\n            value = n_68068c,\n            divisor = len_node.result\n        }\n\n        instance(x: 150, y: 40) sub_node root.Std_k98ojb.Math.Sub {\n            first = len_node.result,\n            second = mod_node.result\n        }\n\n        \n        instance(x: 200, y: 50) suffix_slice root.Std_k98ojb.List.Slice {\n            list = list_48148f,\n            start = sub_node.result,\n            end = -1\n        }\n\n        \n        instance(x: 250, y: 60) prefix_slice root.Std_k98ojb.List.Slice {\n            list = list_48148f,\n            start = 0,\n            end = sub_node.result\n        }\n\n        \n        instance(x: 300, y: 70) concat_node root.Std_k98ojb.List.Concat {\n            left = suffix_slice.result,\n            right = prefix_slice.result\n        }\n        \n        concat_node.result \u2192 output_823209\n    }\n\n    \n\n    instance(x: -100, y: -50) rotate_right_def root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_1 root.Std_k98ojb.Iteration.Reduce {\n            initial: 0\n        }\n        list_2c62ab -> reduce_1.items\n        \n        func() handler_add {\n            in(x: -50, y: -30, name: \"accumulated\") property(Number) acc_in\n            in(x: 40, y: -30, name: \"item\") property(Number) item_in\n\n            instance(x: 10, y: 20) add_1 root.Std_k98ojb.Math.Add {}\n            acc_in -> add_1.first\n            item_in -> add_1.second\n            add_1.result -> out\n        } -> reduce_1.handler\n        \n        reduce_1.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -50, y: 30) _sum_def root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 100, y: 50) edge_check root.Std_k98ojb.Std.IfExpression {\n            expression: \"num_5c0677 < 2\"\n        }\n\n        \n        instance(x: 200, y: 100) set_false root.Std_k98ojb.Logic.False {}\n        set_false.output \u2192 output_c457b3\n        edge_check.then \u2192 set_false.execute\n        set_false.continue \u2192 continue_9a54bb\n\n        \n        instance(x: 100, y: 150) sqrt_pow root.Std_k98ojb.Math.Pow {\n            x: num_5c0677,\n            y: 0.5\n        }\n\n        instance(x: 150, y: 150) floor_node root.Std_k98ojb.Math.Floor {\n            input: sqrt_pow.result\n        }\n\n        instance(x: 200, y: 200) genrange root.Std_k98ojb.List.GenerateRange {\n            from: 2,\n            to: floor_node.output\n        }\n\n        \n        func() predicate_handler {\n            in(x: 0, y: 0, name: \"i\") property(Number) i_\n            \n            out(name: \"result\") property(Bool) _result\n\n            instance modulo root.Std_k98ojb.Math.Modulo {\n                value: num_5c0677,\n                divisor: i_\n            }\n\n            instance eq_zero root.Std_k98ojb.Logic.Equal {\n                a: modulo.result,\n                b: 0\n            }\n            \n            eq_zero.output \u2192 _result\n        }\n\n        \n        instance(x: 300, y: 250) find_divisor root.Std_k98ojb.Iteration.Find {\n            list: genrange.result,\n            handler: predicate_handler\n        }\n\n        \n        instance(x: 400, y: 300) is_null root.Std_k98ojb.Logic.Equal {\n            a: find_divisor.item,\n            b: null\n        }\n        \n        is_null.output \u2192 output_c457b3\n\n        \n        edge_check.else \u2192 sqrt_pow.execute\n        floor_node.continue \u2192 genrange.execute\n        genrange.continue \u2192 find_divisor.execute\n        find_divisor.continue \u2192 continue_9a54bb\n    }\n\n    instance(x: 0, y: 0) num_prime_def root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 184, y: -167) mul_3e8d0b root.Std_k98ojb.Math.Mul {}\n        instance(x: 356, y: -162) lessthan_3c7f3a root.Std_k98ojb.Math.LessThan {}\n\n        x_853326 -> mul_3e8d0b.first\n        y_5390f5 -> mul_3e8d0b.second\n        0 -> lessthan_3c7f3a.right\n        mul_3e8d0b.result -> lessthan_3c7f3a.left\n        lessthan_3c7f3a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -364, y: -185) opposite_signs_2e3d0b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 0) modulo_4a5d8b root.Std_k98ojb.Math.Modulo {\n            divisor: 11\n        }\n        instance(x: 200, y: 0) equal_7e3c6f root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_4a5d8b.value\n        modulo_4a5d8b.result -> equal_7e3c6f.left\n        0 -> equal_7e3c6f.right\n        equal_7e3c6f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -10, y: -10) is_diff_def root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a9d4b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9d4b.input\n        search_ai -> replace_7a9d4b.search\n        replace_ai -> replace_7a9d4b.replace\n        replace_7a9d4b.value -> output_ai\n    }\n\n    \n\n    instance(x: -182, y: 150) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 150, y: 250) to_lower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 400, y: 250) equal_check root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> to_lower_node.input\n        to_lower_node.output -> equal_check.right\n        input_ai -> equal_check.left\n        equal_check.result -> output_ai\n    }\n\n    \n\n    instance(x: -100, y: 50) is_lower_def root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance(x: 50, y: 50) empty_list root.Std_k98ojb.List.Empty {}\n\n        \n        instance(x: 150, y: 100) reduce_unique root.Std_k98ojb.Iteration.Reduce {}\n        list_5fda54 -> reduce_unique.list\n        empty_list.outputList -> reduce_unique.initialValue\n\n        \n        func() {\n            in(x: 0, y: 0, name: \"current\") property(List) current\n            in(x: 100, y: 0, name: \"item\") property(Number) item\n\n            out(x: 200, y: 0, name: \"\") property(List) new_list\n\n            \n            instance(x: 50, y: 30) contains_node root.Std_k98ojb.List.Contains {}\n            current -> contains_node.list\n            item -> contains_node.valueToFind\n\n            \n            instance(x: 70, y: 60) not_found root.Std_k98ojb.Logic.Not {}\n            contains_node.found -> not_found.input\n\n            \n            instance(x: 120, y: 30) list_add root.Std_k98ojb.List.Add {}\n            current -> list_add.list\n            item -> list_add.valueToAppend\n\n            \n            instance(x: 150, y: 40) if_node root.Std_k98ojb.Std.If {}\n            not_found.output -> if_node.predicate\n            list_add.outputList -> if_node.thenBranchOutput\n            current -> if_node.elseBranchOutput\n\n            \n            if_node.result -> new_list\n        } -> reduce_unique.handler\n\n        \n        instance(x: 300, y: 150) reduce_product root.Std_k98ojb.Iteration.Reduce {}\n        reduce_unique.outputList -> reduce_product.list\n\n        \n        instance(x: 250, y: 100) const_1 root.Std_k98ojb.Math.Constant { value = 1 }\n        const_1.output -> reduce_product.initialValue\n\n        \n        func() {\n            in(x: 0, y: 0, name: \"current\") property(Number) current\n            in(x: 100, y: 0, name: \"item\") property(Number) item\n\n            out(x: 200, y: 0, name: \"\") property(Number) result\n\n            instance(x: 50, y: 30) multiply_node root.Std_k98ojb.Math.Multiply {}\n            current -> multiply_node.first\n            item -> multiply_node.second\n            multiply_node.result -> result\n        } -> reduce_product.handler\n\n        \n        execute_19300c -> reduce_unique.execute\n        reduce_unique.done -> reduce_product.execute\n        reduce_product.done -> continue_45190b\n\n        \n        reduce_product.result -> output_cffcc2\n    }\n\n    instance(x: -70, y: 0) unique_prod_def root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 194, y: 105) difference_abc root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: -63) difference_bca root.Std_k98ojb.Sets.Difference {}\n        instance(x: 370, y: 45) concat_result root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_abc.left\n        list2_ai -> difference_abc.right\n\n        list2_ai -> difference_bca.left\n        list1_ai -> difference_bca.right\n\n        difference_abc.difference -> concat_result.left\n        difference_bca.difference -> concat_result.right\n\n        concat_result.zipped -> output_ai\n    }\n\n    \n\n    instance(x: -480, y: 32) find_dissimilar_def root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        \n        instance(x: 100, y: 50) len_node root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 len_node.list\n\n        \n        instance(x: 200, y: 60) is_zero root.Std_k98ojb.Std.IfExpression {\n            expression: \"gen_0 == 0\"\n        }\n        len_node.length \u2192 is_zero.gen_0\n\n        \n        instance(x: 300, y: 70) if_node root.Std_k98ojb.Std.If {\n            condition: is_zero.output\n        }\n\n        then:\n            \n            list_48148f \u2192 output_823209\n\n        else:\n            \n            instance(x: 400, y: 80) modulo_node root.Std_k98ojb.Math.Modulo {}\n            n_68068c \u2192 modulo_node.value\n            len_node.length \u2192 modulo_node.divisor\n\n            \n            instance(x: 500, y: 90) sub_node root.Std_k98ojb.Math.Sub {}\n            len_node.length \u2192 sub_node.first\n            modulo_node.result \u2192 sub_node.second\n\n            \n            instance(x: 600, y: 100) first_slice root.Std_k98ojb.List.Slice {}\n            list_48148f \u2192 first_slice.list\n            sub_node.result \u2192 first_slice.start\n            len_node.length \u2192 first_slice.end\n\n            instance(x: 700, y: 110) second_slice root.Std_k98ojb.List.Slice {}\n            list_48148f \u2192 second_slice.list\n            second_slice.start = 0\n            sub_node.result \u2192 second_slice.end\n\n            \n            instance(x: 800, y: 120) concat_node root.Std_k98ojb.List.Concat {}\n            first_slice.output \u2192 concat_node.left\n            second_slice.output \u2192 concat_node.right\n            concat_node.result \u2192 output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_node root.Iteration.Reduce {}\n        instance(x: 30, y: -50) constant_0 root.Std_k98ojb.Math.Constant { value: 0 }\n\n        list_2c62ab -> reduce_node.items\n        constant_0.output -> reduce_node.initial\n\n        func() {\n            in(x: -100, y: -30, name=\"acc\") property(Number) acc\n            in(name=\"item\") property(Number) item\n\n            instance(add_8e root.Std_k98ojb.Math.Add)\n            acc -> add_8e.first\n            item -> add_8e.second\n            out(x: 200, y: -50, name=\"result\") property(Number) _result <- add_8e.result\n        } -> reduce_node.handler\n\n        reduce_node.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_instance root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance ifexpr_initial root.Std_k98ojb.Std.IfExpression {\n            expression: \"num_5c0677 <= 1\"\n        }\n\n        execute_b7b391 \u2192 ifexpr_initial.execute\n        \n        \n        ifexpr_initial.then \u2192 output_c457b3.set(false) \n        ifexpr_initial.then \u2192 continue_9a54bb\n\n        \n        instance pow_node root.Std_k98ojb.Math.Pow {\n            x: num_5c0677,\n            y: 0.5\n        }\n\n        instance floor_node root.Std_k98ojb.Math.Floor {\n            input: pow_node.result\n        }\n\n        instance generate_range root.Std_k98ojb.List.GenerateRange {\n            from: 2,\n            to: floor_node.output\n        }\n\n        instance find_divisor root.Std_k98ojb.Iteration.Find {\n            list: generate_range.result,\n            handler: func() {\n                in(x: \"d\") property(Number) d_input\n\n                instance modulo root.Std_k98ojb.Math.Modulo {}\n                num_5c0677 \u2192 modulo.first\n                d_input \u2192 modulo.second\n\n                \n                return modulo.result == 0\n            }\n        }\n\n        instance final_check root.Std_k98ojb.Std.IfExpression {\n            expression: \"find_divisor.item != null\"\n        }\n\n        \n        ifexpr_initial.else \u2192 pow_node.execute\n        floor_node.output \u2192 generate_range.to\n        generate_range.result \u2192 find_divisor.list\n\n        find_divisor.complete \u2192 final_check.evaluate\n\n        \n        final_check.then \u2192 output_c457b3.set(false)\n        final_check.else \u2192 output_c457b3.set(true)\n\n        \n        final_check.then \u2192 continue_9a54bb\n        final_check.else \u2192 continue_9a54bb\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 100, y: -150) mul_4c7e8d root.Std_k98ojb.Math.Mul {}\n        instance(x: 250, y: -150) lessthan_6f1a2c root.Std_k98ojb.Math.LessThan {}\n\n        x_853326 -> mul_4c7e8d.first\n        y_5390f5 -> mul_4c7e8d.second\n\n        mul_4c7e8d.result -> lessthan_6f1a2c.left\n        0 -> lessthan_6f1a2c.right\n\n        lessthan_6f1a2c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -200, y: 50) opposite_signs_def root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 50) mod_node root.Std_k98ojb.Math.Modulo {}\n        instance(x: 200, y: 50) eq_zero root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> mod_node.value\n        11 -> mod_node.divisor\n\n        mod_node.result -> eq_zero.left\n        0 -> eq_zero.right\n\n        eq_zero.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -50, y: -50) is_diff_instance root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a9dcb root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9dcb.input\n        search_ai -> replace_7a9dcb.search\n        replace_ai -> replace_7a9dcb.replace\n        replace_7a9dcb.value -> output_ai\n    }\n\n    \n\n    instance(x: -300, y: 150) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 150, y: 100) to_lower root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 300, y: 100) compare root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> to_lower.input\n        to_lower.output -> compare.left\n        input_ai -> compare.right\n        compare.result -> output_ai\n    }\n\n    \n\n    instance(x: -250, y: 50) is_lower_inst root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance(x: -300, y: -200) empty_list root.Std_k98ojb.List.Empty {}\n\n        setter(x: -250, y: -150, name: \"setter_seen\") = seen;\n        getter(x: -240, y: -140, name: \"getter_seen\") = seen;\n\n        instance(x: -300, y: 0) init_seen root.Std_k98ojb.setter_seen {\n            execute \u2192 empty_list.output \u2192 new_value\n        }\n\n        setter(x: -250, y: 100, name: \"setter_unique\") = uniqueElements;\n        getter(x: -240, y: 110, name: \"getter_unique\") = uniqueElements;\n\n        instance(x: -300, y: 150) init_unique root.Std_k98ojb.setter_unique {\n            execute \u2192 empty_list.output \u2192 new_value\n        }\n\n        \n        setter(x: -250, y: 200, name: \"setter_product\") = product;\n        getter(x: -240, y: 210, name: \"getter_product\") = product;\n\n        instance(x: -300, y: 250) init_prod root.Std_k98ojb.setter_product {\n            execute \u2192 1 \u2192 new_value\n        }\n\n        \n        execute_19300c \u2192 [init_seen.execute, init_unique.execute, init_prod.execute]\n\n        instance(x: 200, y: -50) for_loop root.Std_k98ojb.Std.For {\n            items \u2190 list_5fda54;\n            onItem \u2192 process_element\n        }\n\n        func() process_element {\n            in(x: 10, y: 10) item property(Number);\n            in(x: 20, y: 20) index property(Number);\n\n            getter_seen.value \u2192 seen_list\n\n            instance(x: 50, y: 30) contains root.Std_k98ojb.List.Contains {\n                list \u2190 seen_list;\n                item \u2190 item\n            }\n\n            instance(x: 70, y: 40) if_not_contained root.Std_k98ojb.Std.IfExpression {\n                expression: \"contains.result == false\"\n            }\n\n            \n            if_not_contained.then \u2192 add_to_seen_and_unique\n\n            func() add_to_seen_and_unique {\n                instance(x: 100, y: 50) append_seen root.Std_k98ojb.List.Add {\n                    list \u2190 seen_list;\n                    element \u2190 item\n                }\n\n                setter_seen.new_value \u2190 append_seen.output\n\n                getter_unique.value \u2192 current_unique\n\n                instance(x: 120, y: 60) append_unique root.Std_k98ojb.List.Add {\n                    list \u2190 current_unique;\n                    element \u2190 item\n                }\n\n                setter_unique.new_value \u2190 append_unique.output\n            }\n        }\n\n        \n        for_loop.finished \u2192 start_product_calculation\n\n        instance(x: 300, y: 100) product_for root.Std_k98ojb.Std.For {\n            items \u2190 getter_unique.value;\n            onItem \u2192 multiply_element\n        }\n\n        func() multiply_element {\n            in(x: 200, y: 200) num property(Number)\n\n            getter_product.value \u2192 current_prod\n\n            instance(x: 350, y: 150) multiply root.Std_k98ojb.Math.Multiply {\n                first \u2190 current_prod;\n                second \u2190 num\n            }\n\n            setter_product.new_value \u2190 multiply.result\n        }\n\n        product_for.finished \u2192 continue_45190b\n\n        \n        getter_product.value \u2192 output_cffcc2\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 100, y: 100) diff_list1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 250, y: 100) diff_list2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: 100) concat_67a3c1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> diff_list1.left\n        list2_ai -> diff_list1.right\n\n        list2_ai -> diff_list2.left\n        list1_ai -> diff_list2.right\n\n        diff_list1.difference -> concat_67a3c1.left\n        diff_list2.difference -> concat_67a3c1.right\n\n        concat_67a3c1.result -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) find_dissimilar_def root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        \n        instance(x: 100, y: 200) is_empty root.Std_k98ojb.List.IsEmpty {}\n        list_48148f \u2192 is_empty.list\n\n        \n        instance(x: 200, y: 300) if_empty root.Std_k98ojb.Std.If {}\n        is_empty.output \u2192 if_empty.predicate\n        list_48148f \u2192 if_empty.thenBranch  \n\n        \n        instance(x: 300, y: 250) get_len root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 get_len.list\n        let len = get_len.length\n\n        \n        instance(x: 400, y: 300) modulo root.Std_k98ojb.Math.Modulo {}\n        n_68068c \u2192 modulo.value\n        len \u2192 modulo.divisor\n        let mod_result = modulo.result\n\n        \n        instance(x: 500, y: 200) const_0 root.Std_k98ojb.Math.Constant { value: 0 }\n        instance(x: 450, y: 350) eq_zero root.Std_k98ojb.Logic.Equal {}\n        mod_result \u2192 eq_zero.a\n        const_0.output \u2192 eq_zero.b\n\n        \n        instance(x: 600, y: 250) if_mod_zero root.Std_k98ojb.Std.If {}\n        eq_zero.equals \u2192 if_mod_zero.predicate\n        list_48148f \u2192 if_mod_zero.thenBranch\n\n        \n        instance(x: 700, y: 300) subtract root.Std_k98ojb.Math.Sub {}\n        len \u2192 subtract.first\n        mod_result \u2192 subtract.second\n        let start_second_part = subtract.result\n\n        \n        instance(x: 800, y: 250) const_0_again root.Std_k98ojb.Math.Constant { value: 0 }\n        instance(x: 750, y: 400) slice_first root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 slice_first.list\n        const_0_again.output \u2192 slice_first.start\n        start_second_part \u2192 slice_first.end\n\n        \n        instance(x: 850, y: 350) slice_second root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 slice_second.list\n        start_second_part \u2192 slice_second.start\n        len \u2192 slice_second.end\n\n        \n        instance(x: 900, y: 300) concat root.Std_k98ojb.List.Concat {}\n        slice_second.result \u2192 concat.left\n        slice_first.result \u2192 concat.right\n\n        \n        concat.result \u2192 if_mod_zero.elseBranch\n\n        \n        instance(x: 1000, y: 350) final_output root.Std_k98ojb.List.Assign {}\n        if_empty.thenBranch \u2192 final_output.value\n        if_empty.elseBranch \u2192 {\n            if_mod_zero.thenBranch \u2192 final_output.value\n            concat.result \u2192 final_output.value\n        }\n        \n        \n        final_output.result \u2192 output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -116) reduce_7e3d3b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7e3d3b.items\n        0 -> reduce_7e3d3b.initialValue\n        func() {\n            in(x: -145, y: -55, name: \"acc\") property(Number) acc_9a8f3c\n            in(x: -126, y: 56, name: \"item\") property(Number) item_0e7b3d\n\n            out(x: 304, y: 24, name: \"\") property(Number) _e3b39a\n\n            instance(x: 85, y: -1) add_4c6f8b root.Std_k98ojb.Math.Add {}\n            acc_9a8f3c -> add_4c6f8b.first\n            item_0e7b3d -> add_4c6f8b.second\n            add_4c6f8b.result -> _e3b39a\n        } -> reduce_7e3d3b.reducer\n        reduce_7e3d3b.reducedValue -> sum_2a848f\n    }\n\n    \n\n    instance(x: -150, y: 46) _sum_6c0b8c root.main._sum {}\n}"
            ],
            "48": [
                "module() main {\n    func(doc: \"Determines if the input number is a prime number.\") num_prime {\n        in(x: -167, y: 27) property(Number) num_5c0677\n        in(x: -112, y: -216) trigger() execute_b7b391\n        out(x: 1016, y: -26) property(Bool) output_c457b3\n        out(x: 1211, y: -110) trigger() continue_9a54bb\n\n        \n        instance(x: 100, y:-200) lte_node root.Std_k98ojb.Math.LessThanOrEqual {}\n        num_5c0677 -> lte_node.first\n        1 -> lte_node.second\n\n        \n        instance(x: 200, y:-200) std_if_edge root.Std_k98ojb.Std.If {}\n        execute_b7b391 \u2192 std_if_edge.trigger\n        lte_node.result \u2192 std_if_edge.condition\n\n        \n        instance(x: 250, y:-200) set_false root.Std_k98ojb.Setter {} \n        false -> set_false.value\n        set_false.output -> output_c457b3\n        std_if_edge.then \u2192 set_false.trigger\n\n        \n        instance(x: 300, y:-200) pow_node root.Std_k98ojb.Math.Pow {}\n        num_5c0677 -> pow_node.x\n        0.5 -> pow_node.y\n\n        instance(x: 350, y:-200) floor_node root.Std_k98ojb.Math.Floor {}\n        pow_node.result -> floor_node.input\n\n        instance(x:400, y:-200) gen_range root.Std_k98ojb.List.GenerateRange {}\n        2 -> gen_range.from\n        floor_node.output -> gen_range.to\n\n        \n        instance(x:450,y:-200) query_filter root.Std_k98ojb.Query.Filter {}\n        gen_range.result -> query_filter.list\n        \"num_5c0677 % it == 0\" \u2192 query_filter.where\n\n        instance(x:500, y:-200) len_list root.Std_k98ojb.List.Length {}\n        query_filter.result -> len_list.list\n\n        \n        instance(x:550,y:-200) lte_len_node root.Std_k98ojb.Math.LessThanOrEqual {}\n        len_list.result \u2192 lte_len_node.first\n        0 \u2192 lte_len_node.second\n\n        \n        lte_len_node.result -> output_c457b3\n\n        \n        std_if_edge.else \u2192 pow_node.trigger\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 200, y: -174) ifexpression_6e8d2b root.Std_k98ojb.Std.IfExpression {\n            expression: \"x * y < 0\"\n        }\n        x_853326 -> ifexpression_6e8d2b.x\n        y_5390f5 -> ifexpression_6e8d2b.y\n        ifexpression_6e8d2b.value -> output_3339a3\n    }\n\n    \n\n    instance(x: -174, y: -12) opposite_signs_5c8d2b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 50) modulo_node root.Std_k98ojb.Math.Modulo {\n            divisor: 11\n        }\n        n_27f29c -> modulo_node.value\n\n        instance(x: 200, y: 50) equal_node root.Std_k98ojb.Logic.Equal {\n            right: 0\n        }\n        modulo_node.result -> equal_node.left\n        equal_node.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -10, y: -10) is_diff_instance root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a3d9f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a3d9f.input\n        search_ai -> replace_7a3d9f.search\n        replace_ai -> replace_7a3d9f.replace\n        replace_7a3d9f.result -> output_ai\n    }\n\n    \n\n    instance(x: -150, y: 200) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 200, y: 100) tolower_7a5d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 400, y: 100) equal_3f8c root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_7a5d.input\n        input_ai -> equal_3f8c.left\n        tolower_7a5d.output -> equal_3f8c.right\n        equal_3f8c.result -> output_ai\n    }\n\n    \n\n    instance(x: -100, y: 50) is_lower_def root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance empty_list root.Std_k98ojb.List.Empty {}\n\n        \n        instance reduce_unique root.Std_k98ojb.Iteration.Reduce {}\n        execute_19300c -> reduce_unique.trigger  \n        list_5fda54 -> reduce_unique.list\n        empty_list.output -> reduce_unique.initialValue\n\n        \n        func() {\n            in(x: 0, y: 0) property(List) acc\n            in(x: 100, y: 0) property(Number) item\n\n            out(x: 200, y: 0) property(List) new_acc\n\n            instance contains root.Std_k98ojb.List.Contains {}\n            acc -> contains.list\n            item -> contains.item\n\n            \n            instance not_present root.Std_k98ojb.Logic.Not {}\n            contains.result -> not_present.input\n\n            \n            instance add_item root.Std_k98ojb.List.Add {}\n            acc -> add_item.list\n            item -> add_item.element\n\n            \n            instance select_list root.Std_k98ojb.Conditional {}\n            not_present.output -> select_list.condition\n            add_item.result -> select_list.true_value\n            acc -> select_list.false_value\n            select_list.output -> new_acc\n        } -> reduce_unique.handler\n\n        \n        instance initial_one root.Std_k98ojb.Literal { value: 1 }\n        \n        instance reduce_product root.Std_k98ojb.Iteration.Reduce {}\n        reduce_unique.result -> reduce_product.list\n        initial_one.output -> reduce_product.initialValue\n\n        \n        func() {\n            in(x: 0, y: 0) property(Number) acc\n            in(x: 100, y: 0) property(Number) item\n\n            out(x: 200, y: 0) property(Number) new_acc\n\n            instance multiply root.Std_k98ojb.Math.Multiply {}\n            acc -> multiply.first\n            item -> multiply.second\n            multiply.result -> new_acc\n        } -> reduce_product.handler\n\n        \n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n\n    instance(x: -97, y: -68) unique_product_def root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 150, y: 100) difference1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 250) difference2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: 175) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference1.left\n        list2_ai -> difference1.right\n\n        list2_ai -> difference2.left\n        list1_ai -> difference2.right\n\n        difference1.difference -> concat.left\n        difference2.difference -> concat.right\n\n        concat.result -> output_ai\n    }\n\n    \n\n    instance(x: -300, y: 50) find_dissimilar_inst root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        \n        instance(x: 100, y: 100) list_len root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 list_len.list\n\n        \n        instance(x: 200, y: 100) modulo_node root.Std_k98ojb.Math.Modulo {}\n        n_68068c \u2192 modulo_node.value\n        list_len.result \u2192 modulo_node.divisor\n\n        \n        instance(x: 300, y: 100) sub_node root.Std_k98ojb.Math.Sub {}\n        list_len.result \u2192 sub_node.first\n        modulo_node.result \u2192 sub_node.second\n\n        \n        instance(x: 400, y: 150) suffix_slice root.Std_k98ojb.List.Slice {\n            list = list_48148f,\n            start = sub_node.result,\n            end = -1\n        }\n\n        \n        instance(x: 400, y: 250) prefix_slice root.Std_k98ojb.List.Slice {\n            list = list_48148f,\n            start = 0,\n            end = sub_node.result\n        }\n\n        \n        instance(x: 500, y: 200) concat_node root.Std_k98ojb.List.Concat {\n            left = suffix_slice.result,\n            right = prefix_slice.result\n        }\n        \n        concat_node.result \u2192 output_823209\n    }\n\n    \n    instance(x: -10, y: 50) rotate_right_def root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: 100) reduce_9e7d3b root.Std_k98ojb.Iteration.Reduce {\n            initial: 0\n        }\n        list_2c62ab -> reduce_9e7d3b.items\n        func() {\n            in(x: -50, y: 0, name: \"accumulated\") property(Number) acc\n            in(x: 50, y: 0, name: \"item\") property(Number) item\n\n            instance(x: 0, y: 50) add_4a3d1f root.Std_k98ojb.Math.Add {}\n            acc -> add_4a3d1f.first\n            item -> add_4a3d1f.second\n\n            out(x: 100, y: 50, name: \"out\") property(Number) _out\n            add_4a3d1f.result -> _out\n        } -> reduce_9e7d3b.handler\n        reduce_9e7d3b.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -50, y: 0) sum_def root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        \n        instance(edge_if root.Std_k98ojb.Std.IfExpression) {\n            expression: \"gen_0 < 2\"\n            gen_0: num_5c0677\n        }\n\n        execute_b7b391 \u2192 edge_if.execute\n\n        \n        instance(set_false root.Std_k98ojb.Setter) {\n            name: \"output_c457b3\"\n            new_value: false\n        }\n        edge_if.then \u2192 set_false.execute\n        set_false.continue \u2192 continue_9a54bb\n\n        \n        instance(sqrt_pow root.Std_k98ojb.Math.Pow) {\n            x: num_5c0677\n            y: 0.5\n        }\n\n        instance(floor_sqrt root.Std_k98ojb.Math.Floor) {\n            input: sqrt_pow.result\n        }\n\n        instance(gen_range root.Std_k98ojb.List.GenerateRange) {\n            from: 2\n            to: floor_sqrt.output\n        }\n\n        \n        func(handler_pred) {\n            in(x: ..., name: \"i\") property(Number) i\n\n            out(x: ..., \"\") property(Bool) result_out\n\n            instance(mod_node root.Std_k98ojb.Math.Modulo) {\n                value: num_5c0677\n                divisor: i\n            }\n\n            instance(eq_zero root.Std_k98ojb.Std.IfExpression) {\n                expression: \"gen_0 == 0\"\n                gen_0: mod_node.result\n            }\n\n            eq_zero.then \u2192 result_out = true\n            eq_zero.else \u2192 result_out = false\n        }\n\n        \n        instance(find_div root.Std_k98ojb.Iteration.Find) {\n            list: gen_range.list\n            handler: handler_pred()\n        }\n\n        \n        instance(final_if root.Std_k98ojb.Std.IfExpression) {\n            expression: \"gen_0 == null\"\n            gen_0: find_div.item\n        }\n\n        \n        instance(set_true root.Std_k98ojb.Setter) {\n            name: \"output_c457b3\"\n            new_value: true\n        }\n        instance(set_false_final root.Std_k98ojb.Setter) {\n            name: \"output_c457b3\"\n            new_value: false\n        }\n\n        final_if.then \u2192 set_true.execute\n        final_if.else \u2192 set_false_final.execute\n\n        \n        set_true.continue \u2192 continue_9a54bb\n        set_false_final.continue \u2192 continue_9a54bb\n\n        \n        edge_if.else \u2192 sqrt_pow.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 184, y: -167) mul_3e8d0b root.Std_k98ojb.Math.Mul {}\n        instance(x: 356, y: -162) lessthan_3c7f3a root.Std_k98ojb.Math.LessThan {}\n\n        x_853326 -> mul_3e8d0b.first\n        y_5390f5 -> mul_3e8d0b.second\n        0 -> lessthan_3c7f3a.right\n        mul_3e8d0b.result -> lessthan_3c7f3a.left\n        lessthan_3c7f3a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -364, y: -185) opposite_signs_2e3d0b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 0) modulo_4a5d8b root.Std_k98ojb.Math.Modulo {\n            divisor: 11\n        }\n        instance(x: 200, y: 0) equal_7e3c6f root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_4a5d8b.value\n        modulo_4a5d8b.result -> equal_7e3c6f.left\n        0 -> equal_7e3c6f.right\n        equal_7e3c6f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -10, y: -10) is_diff_def root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a9d4b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9d4b.input\n        search_ai -> replace_7a9d4b.search\n        replace_ai -> replace_7a9d4b.replace\n        replace_7a9d4b.value -> output_ai\n    }\n\n    \n\n    instance(x: -182, y: 150) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 150, y: 250) to_lower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 400, y: 250) equal_check root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> to_lower_node.input\n        to_lower_node.output -> equal_check.right\n        input_ai -> equal_check.left\n        equal_check.result -> output_ai\n    }\n\n    \n\n    instance(x: -100, y: 50) is_lower_def root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance(x: 50, y: 50) empty_list root.Std_k98ojb.List.Empty {}\n\n        \n        instance(x: 150, y: 100) reduce_unique root.Std_k98ojb.Iteration.Reduce {}\n        list_5fda54 -> reduce_unique.list\n        empty_list.outputList -> reduce_unique.initialValue\n\n        \n        func() {\n            in(x: 0, y: 0, name: \"current\") property(List) current\n            in(x: 100, y: 0, name: \"item\") property(Number) item\n\n            out(x: 200, y: 0, name: \"\") property(List) new_list\n\n            \n            instance(x: 50, y: 30) contains_node root.Std_k98ojb.List.Contains {}\n            current -> contains_node.list\n            item -> contains_node.valueToFind\n\n            \n            instance(x: 70, y: 60) not_found root.Std_k98ojb.Logic.Not {}\n            contains_node.found -> not_found.input\n\n            \n            instance(x: 120, y: 30) list_add root.Std_k98ojb.List.Add {}\n            current -> list_add.list\n            item -> list_add.valueToAppend\n\n            \n            instance(x: 150, y: 40) if_node root.Std_k98ojb.Std.If {}\n            not_found.output -> if_node.predicate\n            list_add.outputList -> if_node.thenBranchOutput\n            current -> if_node.elseBranchOutput\n\n            \n            if_node.result -> new_list\n        } -> reduce_unique.handler\n\n        \n        instance(x: 300, y: 150) reduce_product root.Std_k98ojb.Iteration.Reduce {}\n        reduce_unique.outputList -> reduce_product.list\n\n        \n        instance(x: 250, y: 100) const_1 root.Std_k98ojb.Math.Constant { value = 1 }\n        const_1.output -> reduce_product.initialValue\n\n        \n        func() {\n            in(x: 0, y: 0, name: \"current\") property(Number) current\n            in(x: 100, y: 0, name: \"item\") property(Number) item\n\n            out(x: 200, y: 0, name: \"\") property(Number) result\n\n            instance(x: 50, y: 30) multiply_node root.Std_k98ojb.Math.Multiply {}\n            current -> multiply_node.first\n            item -> multiply_node.second\n            multiply_node.result -> result\n        } -> reduce_product.handler\n\n        \n        execute_19300c -> reduce_unique.execute\n        reduce_unique.done -> reduce_product.execute\n        reduce_product.done -> continue_45190b\n\n        \n        reduce_product.result -> output_cffcc2\n    }\n\n    instance(x: -70, y: 0) unique_prod_def root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 194, y: 105) difference_abc root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: -63) difference_bca root.Std_k98ojb.Sets.Difference {}\n        instance(x: 370, y: 45) concat_result root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_abc.left\n        list2_ai -> difference_abc.right\n\n        list2_ai -> difference_bca.left\n        list1_ai -> difference_bca.right\n\n        difference_abc.difference -> concat_result.left\n        difference_bca.difference -> concat_result.right\n\n        concat_result.zipped -> output_ai\n    }\n\n    \n\n    instance(x: -480, y: 32) find_dissimilar_def root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "module() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        \n        instance(x: 100, y: 50) len_node root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 len_node.list\n\n        \n        instance(x: 200, y: 50) modulo_node root.Std_k98ojb.Math.Modulo {}\n        n_68068c \u2192 modulo_node.value\n        len_node.result \u2192 modulo_node.divisor\n\n        \n        instance(x: 300, y: 50) sub_node root.Std_k98ojb.Math.Sub {}\n        len_node.result \u2192 sub_node.first\n        modulo_node.result \u2192 sub_node.second\n\n        \n        instance(x: 400, y: 100) first_slice root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 first_slice.list\n        sub_node.result \u2192 first_slice.start\n        len_node.result \u2192 first_slice.end\n\n        \n        instance(x: 400, y: 200) second_slice root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 second_slice.list\n        0 \u2192 second_slice.start\n        sub_node.result \u2192 second_slice.end\n\n        \n        instance(x: 500, y: 150) concat_node root.Std_k98ojb.List.Concat {}\n        first_slice.output \u2192 concat_node.left\n        second_slice.output \u2192 concat_node.right\n\n        \n        concat_node.result \u2192 output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_node root.Iteration.Reduce {}\n        instance(x: -50, y: -50) constant_0 root.Std_k98ojb.Math.Constant { value: 0 }\n\n        list_2c62ab -> reduce_node.items\n        constant_0.output -> reduce_node.initial\n\n        func() {\n            in(x: -100, y: 0, name=\"acc\") property(Number) acc_in;\n            in(x: 0, y: 0, name=\"item\") property(Number) item_in;\n\n            instance add_node root.Std_k98ojb.Math.Add {}\n            acc_in -> add_node.first\n            item_in -> add_node.second\n\n            out(x: 150, y: 0, name=\"result\") property(Number) result_out <- add_node.result\n        } -> reduce_node.handler\n\n        reduce_node.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -90, y: 30) _sum_def root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance ifexpr_initial root.Std_k98ojb.Std.IfExpression {\n            expression: \"num_5c0677 <= 1\"\n        }\n        execute_b7b391 \u2192 ifexpr_initial.execute\n\n        \n        instance set_false_initial root.Setter {\n            property: output_c457b3,\n            value: false\n        }\n        ifexpr_initial.then \u2192 set_false_initial.execute\n        set_false_initial.continue \u2192 continue_9a54bb\n\n        \n        instance pow_sqrt root.Std_k98ojb.Math.Pow {}\n        num_5c0677 \u2192 pow_sqrt.x\n        0.5 \u2192 pow_sqrt.y\n\n        instance floor_sqrt root.Std_k98ojb.Math.Floor {}\n        pow_sqrt.result \u2192 floor_sqrt.input\n\n        instance gen_range root.Std_k98ojb.List.GenerateRange {\n            from: 2,\n            to: floor_sqrt.output\n        }\n\n        instance find_divisor root.Std_k98ojb.Iteration.Find {}\n        gen_range.result \u2192 find_divisor.list\n\n        \n        find_divisor.handler = func() {\n            in(x: \"d\", property:Number) d_123456\n\n            instance modulo root.Std_k98ojb.Math.Modulo {}\n            num_5c0677 \u2192 modulo.value\n            d_123456 \u2192 modulo.divisor\n\n            instance eq_zero root.Std_k98ojb.Math.Equal {}\n            0 \u2192 eq_zero.second\n            modulo.result \u2192 eq_zero.first\n\n            out \u2190 eq_zero.output \n        }\n\n        \n        instance check_null root.Std_k98ojb.Std.IfExpression {\n            expression: \"find_divisor.item == null\"\n        }\n        find_divisor.result \u2192 check_null.gen_0\n\n        \n        instance set_true_final root.Setter {\n            property: output_c457b3,\n            value: true\n        }\n        check_null.then \u2192 set_true_final.execute\n        set_true_final.continue \u2192 continue_9a54bb\n\n        instance set_false_final root.Setter {\n            property: output_c457b3,\n            value: false\n        }\n        check_null.else \u2192 set_false_final.execute\n        set_false_final.continue \u2192 continue_9a54bb\n    }\n\n    instance num_prime_instance root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 100, y: -150) mul_4c7e8d root.Std_k98ojb.Math.Mul {}\n        instance(x: 250, y: -150) lessthan_6f1a2c root.Std_k98ojb.Math.LessThan {}\n\n        x_853326 -> mul_4c7e8d.first\n        y_5390f5 -> mul_4c7e8d.second\n\n        mul_4c7e8d.result -> lessthan_6f1a2c.left\n        0 -> lessthan_6f1a2c.right\n\n        lessthan_6f1a2c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -200, y: 50) opposite_signs_def root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 50) mod_node root.Std_k98ojb.Math.Modulo {}\n        instance(x: 200, y: 50) eq_zero root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> mod_node.value\n        11 -> mod_node.divisor\n\n        mod_node.result -> eq_zero.left\n        0 -> eq_zero.right\n\n        eq_zero.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -50, y: -50) is_diff_instance root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a9dcb root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9dcb.input\n        search_ai -> replace_7a9dcb.search\n        replace_ai -> replace_7a9dcb.replace\n        replace_7a9dcb.value -> output_ai\n    }\n\n    \n\n    instance(x: -300, y: 150) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 150, y: 50) tolower_7a4 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 300, y: 50) equal_3f1 root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_7a4.input\n        tolower_7a4.value -> equal_3f1.right\n        input_ai -> equal_3f1.left\n        equal_3f1.result -> output_ai\n    }\n\n    \n\n    instance(x: -50, y: 20) is_lower_def root.main.is_lower {}\n}"
            ],
            "16": [
                "module() main {\n    func(doc: \"Computes the product of all unique elements in a given list\") unique_product {\n        in(x=-757,y=-167) trigger execute_19300c\n        in(x=-241,y=24) property(List) list_5fda54\n\n        out(x=887,y=-144) trigger continue_45190b\n        out(x=683,y=73) property(Number) output_cffcc2\n\n        \n        instance(x=-200,y=50) init_unique root.Std.Setter {\n            name: \"current_uniques\"\n        }\n        execute_19300c -> init_unique.execute\n        [] -> init_unique.new_value  \n\n        \n        instance(x=100,y=200) for_each_element root.Std.For {\n            items: list_5fda54\n        }\n\n        \n        instance(x=200,y=300) get_current_unique_list root.Std.Getter {\n            name: \"current_uniques\"\n        }\n        for_each_element.iteration -> get_current_unique_list.get\n\n        \n        instance(x=300,y=400) contains_check root.Std.List.Contains {\n            list: get_current_unique_list.value\n            item: for_each_element.item\n        }\n\n        \n        instance(x=400,y=500) if_not_contain root.Std.IfExpression {\n            expression: \"contains == false\"\n        }\n        contains_check.result -> if_not_contain.contains\n\n        \n        instance(x=500,y=600) add_element root.Std.List.Add {\n            list: get_current_unique_list.value\n            item: for_each_element.item\n        }\n\n        \n        instance(x=600,y=700) update_unique root.Std.Setter {\n            name: \"current_uniques\"\n        }\n        if_not_contain.then -> update_unique.execute  \n        add_element.result -> update_unique.new_value\n\n        \n        instance(x=800,y=900) get_final_list root.Std.Getter {\n            name: \"current_uniques\"\n        }\n\n        \n        instance(x=700,y=800) init_product root.Std.Setter {\n            name: \"product\"\n        }\n        execute_19300c -> init_product.execute\n        1 -> init_product.new_value\n\n        \n        instance(x=900,y=1000) for_each_unique root.Std.For {\n            items: get_final_list.value\n        }\n\n        \n        instance(x=1000,y=1100) get_current_product root.Std.Getter {\n            name: \"product\"\n        }\n        for_each_unique.iteration -> get_current_product.get\n\n        \n        instance(x=1100,y=1200) multiply root.Std.Math.Mul {\n            first: get_current_product.value\n            second: for_each_unique.item\n        }\n\n        \n        instance(x=1200,y=1300) update_product root.Std.Setter {\n            name: \"product\"\n        }\n        multiply.result -> update_product.new_value\n        for_each_unique.iteration -> update_product.execute\n\n        \n        instance(x=1400,y=1500) get_final_product root.Std.Getter {\n            name: \"product\"\n        }\n        get_final_product.value -> output_cffcc2\n\n        \n        for_each_element.done -> some_node\n        for_each_unique.done -> continue_45190b\n    }\n\n    instance(x=..., y=...) unique_product_def root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 150, y: 100) difference1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 100) difference2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 450, y: 100) concat_7d6eaa root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference1.left\n        list2_ai -> difference1.right\n\n        list2_ai -> difference2.left\n        list1_ai -> difference2.right\n\n        difference1.difference -> concat_7d6eaa.left\n        difference2.difference -> concat_7d6eaa.right\n\n        concat_7d6eaa.result -> output_ai\n    }\n\n    \n\n    instance(x: -300, y: 50) find_dissimilar_def root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "module() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        \n        instance(x: 100, y: 200) is_empty root.Std_k98ojb.List.IsEmpty {}\n        list_48148f \u2192 is_empty.list\n\n        \n        instance(x: 300, y: 200) if_empty root.Std_k98ojb.Std.If {}\n        is_empty.output \u2192 if_empty.predicate\n        list_48148f \u2192 if_empty.thenBranch\n\n        \n        instance(x: 200, y: 300) get_len root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 get_len.list\n\n        \n        instance(x: 250, y: 350) modulo_n root.Std_k98ojb.Math.Modulo {}\n        n_68068c \u2192 modulo_n.value\n        get_len.length \u2192 modulo_n.divisor\n\n        \n        instance(x: 400, y: 250) eq_zero root.Std_k98ojb.Logic.Equal {}\n        modulo_n.result \u2192 eq_zero.a\n        0 \u2192 eq_zero.b\n\n        \n        instance(x: 350, y: 300) if_mod_zero root.Std_k98ojb.Std.If {}\n        eq_zero.output \u2192 if_mod_zero.predicate\n        list_48148f \u2192 if_mod_zero.thenBranch\n\n        \n        instance(x: 500, y: 350) sub root.Std_k98ojb.Math.Sub {}\n        get_len.length \u2192 sub.first\n        modulo_n.result \u2192 sub.second\n\n        \n        instance(x: 450, y: 400) const_0 root.Std_k98ojb.Math.Constant { value: 0 }\n\n        \n        instance(x: 600, y: 300) first_slice root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 first_slice.list\n        const_0.output \u2192 first_slice.start\n        sub.result \u2192 first_slice.end\n\n        \n        instance(x: 650, y: 350) second_slice root.Std_k98ojb.List.Slice {}\n        list_48148f \u2192 second_slice.list\n        sub.result \u2192 second_slice.start\n        get_len.length \u2192 second_slice.end\n\n        \n        instance(x: 700, y: 325) concat root.Std_k98ojb.List.Concat {}\n        second_slice.result \u2192 concat.left\n        first_slice.result \u2192 concat.right\n\n        \n        concat.result \u2192 if_mod_zero.elseBranch\n        if_mod_zero.output \u2192 if_empty.elseBranch\n        if_empty.output \u2192 output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -116) reduce_7e3d3b root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7e3d3b.items\n        0 -> reduce_7e3d3b.initialValue\n        func() {\n            in(x: -145, y: -55, name: \"acc\") property(Number) acc_9a8f3c\n            in(x: -126, y: 56, name: \"item\") property(Number) item_0e7b3d\n\n            out(x: 304, y: 24, name: \"\") property(Number) _e3b39a\n\n            instance(x: 85, y: -1) add_4c6f8b root.Std_k98ojb.Math.Add {}\n            acc_9a8f3c -> add_4c6f8b.first\n            item_0e7b3d -> add_4c6f8b.second\n            add_4c6f8b.result -> _e3b39a\n        } -> reduce_7e3d3b.reducer\n        reduce_7e3d3b.reducedValue -> sum_2a848f\n    }\n\n    \n\n    instance(x: -150, y: 46) _sum_6c0b8c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 100, y: -200) lte_node Std_k98ojb.Math.LessThanOrEqual {\n            firstInput = num_5c0677,\n            secondInput = 1\n        }\n\n        instance(x: 200, y: -300) if_edge_case Std_k98ojb.Std.If {\n            predicate = lte_node.output,\n\n            thenBranch: [\n                \n                instance() set_false Std_k98ojb.SetProperty {\n                    property = output_c457b3,\n                    value = false\n                },\n                trigger(continue_9a54bb)\n            ],\n\n            elseBranchTrigger -> [\n                \n\n                instance(x: 300, y: -100) pow_node Std_k98ojb.Math.Pow {\n                    x = num_5c0677,\n                    y = 0.5\n                },\n\n                instance(x: 400, y: -200) floor_node Std_k98ojb.Math.Floor {\n                    input = pow_node.result\n                },\n\n                instance(x: 500, y: -300) gen_range_node Std_k98ojb.List.GenerateRange {\n                    from = 2,\n                    to = floor_node.output\n                },\n\n                instance(x: 600, y: -400) filter_node Std_k98ojb.Query.Filter {\n                    list = gen_range_node.result,\n                    whereExpression = \"num_5c0677 % it == 0\"\n                },\n\n                instance(x: 700, y: -500) not_empty_node Std_k98ojb.List.NotEmpty {\n                    list = filter_node.result\n                },\n\n                instance(x: 800, y: -600) if_final Std_k98ojb.Std.If {\n                    predicate = not_empty_node.output,\n\n                    thenBranch: [\n                        \n                        instance() set_false2 Std_k98ojb.SetProperty {\n                            property = output_c457b3,\n                            value = false\n                        },\n                        trigger(continue_9a54bb)\n                    ],\n\n                    elseBranch: [\n                        \n                        instance() set_true Std_k98ojb.SetProperty {\n                            property = output_c457b3,\n                            value = true\n                        },\n                        trigger(continue_9a54bb)\n                    ]\n                }\n            ]\n        }\n\n        \n        trigger(execute_b7b391) -> if_edge_case.predicateTrigger\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 200, y: -174) ifexpression_6e8d2b root.Std_k98ojb.Std.IfExpression {\n            expression: \"x * y < 0\"\n        }\n        x_853326 -> ifexpression_6e8d2b.x\n        y_5390f5 -> ifexpression_6e8d2b.y\n        ifexpression_6e8d2b.value -> output_3339a3\n    }\n\n    \n\n    instance(x: -174, y: -12) opposite_signs_5c8d2b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 50) modulo_node root.Std_k98ojb.Math.Modulo {\n            divisor: 11\n        }\n        n_27f29c -> modulo_node.value\n\n        instance(x: 200, y: 50) equal_node root.Std_k98ojb.Logic.Equal {\n            right: 0\n        }\n        modulo_node.result -> equal_node.left\n        equal_node.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -10, y: -10) is_diff_instance root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a3d9f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a3d9f.input\n        search_ai -> replace_7a3d9f.search\n        replace_ai -> replace_7a3d9f.replace\n        replace_7a3d9f.result -> output_ai\n    }\n\n    \n\n    instance(x: -150, y: 200) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 200, y: 100) tolower_7a5d root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 400, y: 100) equal_3f8c root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_7a5d.input\n        input_ai -> equal_3f8c.left\n        tolower_7a5d.output -> equal_3f8c.right\n        equal_3f8c.result -> output_ai\n    }\n\n    \n\n    instance(x: -100, y: 50) is_lower_def root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance reduce_uniq root.Iteration.Reduce {}\n        \n        reduce_uniq.handler = func() {\n            in acc List\n            in item Number\n            \n            out new_acc List\n            \n            \n            instance contains_node root.Std_k98ojb.List.Contains {}\n            acc -> contains_node.list\n            item -> contains_node.item\n\n            \n            instance not_node root.Std_k98ojb.Logic.Not {}\n            contains_node.result -> not_node.input\n            \n            instance if_node root.Std_k98ojb.Logic.If {}\n            not_node.output -> if_node.condition\n\n            \n            instance add_node root.Std_k98ojb.List.Add {}\n            acc -> add_node.list\n            item -> add_node.item\n            \n            add_node.output_list -> if_node.then_value\n            acc -> if_node.else_value\n            \n            if_node.result -> new_acc\n        }\n\n        \n        instance empty_list root.Std_k98ojb.List.Empty {}\n        empty_list.output -> reduce_uniq.initial_value\n\n        list_5fda54 -> reduce_uniq.items\n        \n        \n        instance reduce_prod root.Iteration.Reduce {}\n\n        reduce_prod.handler = func() {\n            in acc Number\n            in item Number\n            \n            out new_acc Number\n            \n            instance multiply_node root.Std_k98ojb.Math.Mul {}\n            acc -> multiply_node.first\n            item -> multiply_node.second\n            multiply_node.result -> new_acc\n        }\n\n        1 -> reduce_prod.initial_value\n\n        \n        reduce_uniq.result -> reduce_prod.items\n        \n        \n        execute_19300c -> reduce_uniq.execute\n        reduce_uniq.continue -> reduce_prod.execute\n        reduce_prod.continue -> continue_45190b\n\n        \n        reduce_prod.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -78, y: 36) unique_product_def root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 150, y: 100) difference1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 250) difference2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 400, y: 175) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference1.left\n        list2_ai -> difference1.right\n\n        list2_ai -> difference2.left\n        list1_ai -> difference2.right\n\n        difference1.difference -> concat.left\n        difference2.difference -> concat.right\n\n        concat.result -> output_ai\n    }\n\n    \n\n    instance(x: -300, y: 50) find_dissimilar_inst root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        \n        instance(x: 100, y: 100) list_len root.Std_k98ojb.List.Length {}\n        list_48148f \u2192 list_len.list\n\n        \n        instance(x: 200, y: 100) modulo_node root.Std_k98ojb.Math.Modulo {}\n        n_68068c \u2192 modulo_node.value\n        list_len.result \u2192 modulo_node.divisor\n\n        \n        instance(x: 300, y: 100) sub_node root.Std_k98ojb.Math.Sub {}\n        list_len.result \u2192 sub_node.first\n        modulo_node.result \u2192 sub_node.second\n\n        \n        instance(x: 400, y: 150) suffix_slice root.Std_k98ojb.List.Slice {\n            list = list_48148f,\n            start = sub_node.result,\n            end = -1\n        }\n\n        \n        instance(x: 400, y: 250) prefix_slice root.Std_k98ojb.List.Slice {\n            list = list_48148f,\n            start = 0,\n            end = sub_node.result\n        }\n\n        \n        instance(x: 500, y: 200) concat_node root.Std_k98ojb.List.Concat {\n            left = suffix_slice.result,\n            right = prefix_slice.result\n        }\n        \n        concat_node.result \u2192 output_823209\n    }\n\n    \n    instance(x: -10, y: 50) rotate_right_def root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: 100) reduce_9e7d3b root.Std_k98ojb.Iteration.Reduce {\n            initial: 0\n        }\n        list_2c62ab -> reduce_9e7d3b.items\n        func() {\n            in(x: -50, y: 0, name: \"accumulated\") property(Number) acc\n            in(x: 50, y: 0, name: \"item\") property(Number) item\n\n            instance(x: 0, y: 50) add_4a3d1f root.Std_k98ojb.Math.Add {}\n            acc -> add_4a3d1f.first\n            item -> add_4a3d1f.second\n\n            out(x: 100, y: 50, name: \"out\") property(Number) _out\n            add_4a3d1f.result -> _out\n        } -> reduce_9e7d3b.handler\n        reduce_9e7d3b.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -50, y: 0) sum_def root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        \n        instance(x: 100, y: -200) ifexpr_edge root.Std_k98ojb.Std.IfExpression {\n            expression: \"gen_0 < 2\",\n            gen_0: num_5c0677\n        }\n\n        \n        instance(x: 150, y: -300) set_false_edge root.Std_k98ojb.Setter {\n            name: \"output_c457b3\",\n            new_value: false\n        }\n        \n        instance(x: 200, y: -400) cont_node_edge root.Std_k98ojb.Trigger {\n            name: \"continue\"\n        }\n\n        \n        ifexpr_edge.then \u2192 set_false_edge.execute\n        set_false_edge.done \u2192 cont_node_edge.execute\n        cont_node_edge.trigger \u2192 continue_9a54bb\n\n        \n        instance(x: 300, y: -100) pow_node root.Std_k98ojb.Math.Pow {\n            x: num_5c0677,\n            y: 0.5\n        }\n\n        instance(x: 350, y: -200) floor_node root.Std_k98ojb.Math.Floor {\n            input: pow_node.result\n        }\n\n        instance(x: 400, y: -300) generate_range root.Std_k98ojb.List.GenerateRange {\n            from: 2,\n            to: floor_node.output\n        }\n\n        \n        instance(x: 500, y: -100) find_divisor root.Iteration.Find {\n            list: generate_range.list\n        }\n        \n        \n        func() predicate_handler {\n            in(x: ..., name: \"current\") property(Number) current_i\n\n            instance mod_node root.Std_k98ojb.Math.Modulo {\n                value: num_5c0677,\n                divisor: current_i\n            }\n\n            \n            instance eq_zero root.Std_k98ojb.Std.IfExpression {\n                expression: \"gen_0 == 0\",\n                gen_0: mod_node.result\n            }\n            \n            \n            out(x: ..., name: \"\") property(Bool) predicate_out \u2190 eq_zero.then \u2192 true\n        }\n\n        find_divisor.handler = predicate_handler\n\n        \n        instance(x: 600, y: -200) ifexpr_result root.Std_k98ojb.Std.IfExpression {\n            expression: \"gen_0 != null\",\n            gen_0: find_divisor.item\n        }\n\n        \n        instance set_true_out root.Std_k98ojb.Setter {\n            name: \"output_c457b3\",\n            new_value: true\n        }\n        \n        instance set_false_out root.Std_k98ojb.Setter {\n            name: \"output_c457b3\",\n            new_value: false\n        }\n\n        \n        ifexpr_result.then \u2192 set_false_out.execute  \n        ifexpr_result.else \u2192 set_true_out.execute    \n\n        instance cont_node2 root.Std_k98ojb.Trigger {\n            name: \"continue\"\n        }\n\n        \n        set_true_out.done \u2192 cont_node2.execute\n        set_false_out.done \u2192 cont_node2.execute\n\n        cont_node2.trigger \u2192 continue_9a54bb\n\n        \n        ifexpr_edge.else \u2192 pow_node.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 184, y: -167) mul_7e3dcb root.Std_k98ojb.Math.Mul {}\n        instance(x: 350, y: -200) lessthan_4a7f8c root.Std_k98ojb.Math.LessThan {}\n\n        x_853326 -> mul_7e3dcb.first\n        y_5390f5 -> mul_7e3dcb.second\n        0 -> lessthan_4a7f8c.right\n        mul_7e3dcb.result -> lessthan_4a7f8c.left\n        lessthan_4a7f8c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -350, y: -175) opposite_signs_def root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: 105) modulo_4e3d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 345, y: 105) equal_5c7a2d root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_4e3d1a.value\n        11 -> modulo_4e3d1a.divisor\n        modulo_4e3d1a.result -> equal_5c7a2d.left\n        0 -> equal_5c7a2d.right\n        equal_5c7a2d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -98, y: -4) is_diff_1e3b8c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a9d4b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9d4b.input\n        search_ai -> replace_7a9d4b.search\n        replace_ai -> replace_7a9d4b.replace\n        replace_7a9d4b.value -> output_ai\n    }\n\n    \n\n    instance(x: -182, y: 150) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 200, y: 100) tolower_aj root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 400, y: 150) equal_aj root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_aj.input\n        tolower_aj.output -> equal_aj.right\n        input_ai -> equal_aj.left\n        equal_aj.result -> output_ai\n    }\n\n    \n\n    instance(x: -150, y: 50) is_lower_inst root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance empty_list root.Std_k98ojb.List.Empty {}\n\n        \n        instance unique_reducer root.Std_k98ojb.Iteration.Reduce {}\n        list_5fda54 -> unique_reducer.items\n        empty_list.list -> unique_reducer.initial_value\n\n        \n        func() {\n            in(x: 0, y: 0, name: \"acc\") property(List) acc\n            in(x: 100, y: 0, name: \"item\") property(Number) item\n\n            out(x: 200, y: 0, name: \"\") property(List) new_acc\n\n            \n            instance contains root.Std_k98ojb.List.Contains {}\n            acc -> contains.list\n            item -> contains.item\n\n            \n            instance if_node root.Std_k98ojb.Std.If {\n                predicate: !contains.result  \n            }\n\n            \n            instance add root.Std_k98ojb.List.Add {}\n            acc -> add.list\n            item -> add.item\n\n            \n            add.listWithItem -> if_node.then_input\n            acc -> if_node.else_input\n\n            \n            if_node.output -> new_acc\n        } -> unique_reducer.handler\n\n        \n        instance product_reducer root.Std_k98ojb.Iteration.Reduce {}\n        unique_reducer.output_list -> product_reducer.items\n\n        \n        instance init_val root.Std_k98ojb.Math.Constant { value: 1 }\n        init_val.value -> product_reducer.initial_value\n\n        \n        func() {\n            in(x: 0, y: 0, name: \"acc\") property(Number) acc_num\n            in(x: 100, y: 0, name: \"item\") property(Number) item_num\n\n            out(x: 200, y: 0, name: \"\") property(Number) new_acc\n\n            instance multiply root.Std_k98ojb.Math.Multiply {}\n            acc_num -> multiply.first\n            item_num -> multiply.second\n            multiply.result -> new_acc\n        } -> product_reducer.handler\n\n        \n        product_reducer.output_value -> output_cffcc2\n        execute_19300c -> unique_reducer.start_trigger  \n        product_reducer.completion_trigger -> continue_45190b\n    }\n\n    instance(x: -75, y: -68) unique_product_def root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 194, y: 105) difference_abc root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: -63) difference_bca root.Std_k98ojb.Sets.Difference {}\n        instance(x: 370, y: 45) concat_result root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_abc.left\n        list2_ai -> difference_abc.right\n\n        list2_ai -> difference_bca.left\n        list1_ai -> difference_bca.right\n\n        difference_abc.difference -> concat_result.left\n        difference_bca.difference -> concat_result.right\n\n        concat_result.zipped -> output_ai\n    }\n\n    \n\n    instance(x: -480, y: 32) find_dissimilar_def root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_k98ojb)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        \n        instance(x: 100, y: 100) list_length root.Std_k98ojb.List.Length {}\n        list_48148f -> list_length.list\n\n        \n        instance(x: 200, y: 150) is_empty root.Std_k98ojb.Logic.Equal {}\n        list_length.length -> is_empty.first\n        0 -> is_empty.second\n\n        \n        instance(x: 300, y: 100) if_node root.Std_k98ojb.Std.If {}\n        is_empty.result -> if_node.predicate\n\n        \n        list_48148f -> if_node.then.output_823209\n\n        \n        instance(x: 400, y: 200) modulo_node root.Std_k98ojb.Math.Modulo {}\n        n_68068c -> modulo_node.value\n        list_length.length -> modulo_node.divisor\n\n        instance(x: 500, y: 200) sub_node root.Std_k98ojb.Math.Sub {}\n        list_length.length -> sub_node.first\n        modulo_node.result -> sub_node.second\n\n        \n        instance(x: 600, y: 300) slice1 root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice1.list\n        sub_node.result -> slice1.start\n        list_length.length -> slice1.end\n\n        \n        instance(x: 650, y: 350) slice2 root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice2.list\n        0 -> slice2.start\n        sub_node.result -> slice2.end\n\n        \n        instance(x: 700, y: 400) concat_node root.Std_k98ojb.List.Concat {}\n        slice1.sliceResult -> concat_node.left\n        slice2.sliceResult -> concat_node.right\n\n        \n        concat_node.result -> if_node.else.output_823209\n    }\n\n    instance(x: 0, y: 0) rotate_right_def root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: 100) reduce_sum root.Iteration.Reduce {}\n        list_2c62ab -> reduce_sum.items\n\n        \n        func() {\n            in(x: 0, y:0, name=\"acc\") property(Number) acc;\n            in(x:50,y:0, name=\"item\") property(Number) item;\n\n            instance(x:30,y:30) add_node root.Math.Add {}\n            acc -> add_node.first\n            item -> add_node.second\n\n            out(x: 80, y:40, name=\"result\") property(Number) result;\n            add_node.result -> result\n        } -> reduce_sum.handler\n\n        \n        instance(x: -50,y:20) const_0 root.Math.Constant {}\n        0 -> const_0.value\n        const_0.output -> reduce_sum.initial\n\n        reduce_sum.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_def root.main._sum {}\n}"
            ],
            "48": [
                "module() main {\n    func(doc: \"Check if a given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        \n        instance edge_case root.Std_k98ojb.Std.IfExpression {\n            expression: \"a <= 1\"\n        }\n        num_5c0677 -> edge_case.gen_0\n        execute_b7b391 -> edge_case.execute\n\n        \n        instance set_false root.Setter {\n            property: output_c457b3\n            new_value: false\n        }\n        edge_case.then -> set_false.execute\n        set_false.continue -> continue_9a54bb\n\n        \n        instance pow_node root.Math.Pow {\n            x: num_5c0677\n            y: 0.5\n        }\n        instance floor_node root.Math.Floor { input: pow_node.result }\n\n        instance gen_range root.List.GenerateRange {\n            from: 2\n            to: floor_node.output\n        }\n\n        \n        instance divisor_loop root.Iteration.For {\n            items: gen_range.result\n\n            onItem() {\n                \n                instance modulo root.Math.Modulo {\n                    value: num_5c0677\n                    divisor: item  \n                }\n\n                instance check_zero root.Logic.Equal {\n                    a: modulo.result\n                    b: 0\n                }\n\n                instance if_divisible root.Std.IfExpression {\n                    expression: \"a == true\"\n                }\n                check_zero -> if_divisible.gen_0\n\n                \n                instance set_false_in_loop root.Setter {\n                    property: output_c457b3\n                    new_value: false\n                }\n                if_divisible.then -> set_false_in_loop.execute\n                set_false_in_loop.continue -> continue_9a54bb\n\n                \n                instance proceed_next root.Iteration.For.Next {}\n                if_divisible.else -> proceed_next.execute\n            }\n\n            done() {\n                \n                instance set_true root.Setter {\n                    property: output_c457b3\n                    new_value: true\n                }\n                set_true.continue -> continue_9a54bb\n            }\n        }\n\n        edge_case.else -> divisor_loop.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwq:32b-fp16",
        "largest_context": 8904,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 100, y: 0) multiply_6d4c root.Std_k98ojb.Math.Mul {}\n        x_853326 -> multiply_6d4c.first\n        y_5390f5 -> multiply_6d4c.second\n\n        instance(x: 200, y: 0) greaterthan_7a1e root.Std_k98ojb.Math.GreaterThan {}\n        0 -> greaterthan_7a1e.left\n        multiply_6d4c.result -> greaterthan_7a1e.right\n\n        greaterthan_7a1e.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -250, y: 50) opposite_signs_def root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 100, y: 50) mod_check root.Std_k98ojb.Math.Expression {\n            expression: \"gen_0 % 11 == 0\"\n        }\n        n_27f29c -> mod_check.gen_0\n        mod_check.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -50, y: -30) is_diff_inst root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_7a1b3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a1b3c.input\n        search_ai -> replace_7a1b3c.search\n        replace_ai -> replace_7a1b3c.replace\n        replace_7a1b3c.result -> output_ai\n    }\n\n    \n\n    instance(x: -92, y: 45) replace_char_def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 150, y: 150) to_lower root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 300, y: 150) compare root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> to_lower.input\n        input_ai -> compare.left\n        to_lower.output -> compare.right\n        compare.result -> output_ai\n    }\n\n    \n\n    instance(x: -200, y: 50) is_lower_instance root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        \n        instance empty_list root.Std_k98ojb.List.Empty {}\n\n        \n        instance unique_reduce root.Std_k98ojb.Iteration.Reduce {\n            items: list_5fda54\n            initial_value: empty_list.list  \n            handler: func() {\n                in acc: List, item: Number\n                out new_acc: List\n\n                instance contains root.Std_k98ojb.List.Contains { \n                    list: acc \n                    item: item \n                }\n\n                \n                instance invert root.Std_k98ojb.Std.IfExpression {\n                    expression: \"!contains.result\"\n                }\n\n                instance add_item root.Std_k98ojb.List.Add { \n                    list: acc \n                    item_to_add: item \n                }\n\n                \n                instance choose root.Std_k98ojb.Std.If {\n                    predicate: invert.result\n                }\n                \n                add_item.list_added \u2192 choose.then_input\n                acc \u2192 choose.else_input\n\n                choose.output \u2192 new_acc\n            }\n        }\n\n        \n        instance initial_one root.Std_k98ojb.Number { value: 1 }\n        \n        instance product_reduce root.Std_k98ojb.Iteration.Reduce {\n            items: unique_reduce.result\n            initial_value: initial_one.value  \n            handler: func() {\n                in acc: Number, item: Number\n                out new_acc: Number\n\n                instance multiply root.Std_k98ojb.Math.Multiply { \n                    first: acc \n                    second: item \n                }\n\n                multiply.result \u2192 new_acc\n            }\n        }\n\n        \n        product_reduce.result \u2192 output_cffcc2\n        product_reduce.completed \u2192 continue_45190b  \n    }\n}\n\n\ninstance(x: -37, y: 12) unique_product_instance root.main.unique_product {}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    \n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 150, y: 100) diff_a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 200) diff_b root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 150) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> diff_a.left\n        list2_ai -> diff_a.right\n\n        list2_ai -> diff_b.left\n        list1_ai -> diff_b.right\n\n        diff_a.difference -> concat.left\n        diff_b.difference -> concat.right\n\n        concat.result -> output_ai\n    }\n\n    \n\n    instance(x: -97, y: -68) find_dissimilar_def root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        \n        instance(x: 100, y: 50) len_node root.Std_k98ojb.List.Length {\n            list = list_48148f\n        }\n\n        \n        instance(x: 200, y: 50) mod_node root.Std_k98ojb.Math.Modulo {\n            first = n_68068c,\n            second = len_node.result\n        }\n\n        \n        instance(x: 300, y: 50) equals_zero root.Std_k98ojb.Logic.Equal {\n            left = mod_node.result,\n            right = 0\n        }\n\n        \n        instance(x: 400, y: 50) sub_node root.Std_k98ojb.Math.Sub {\n            first = len_node.result,\n            second = mod_node.result\n        }\n\n        \n        instance(x: 500, y: 100) slice_second_part root.Std_k98ojb.List.Slice {\n            list = list_48148f,\n            start = sub_node.result,\n            end = -1\n        }\n\n        instance(x: 500, y: 200) slice_first_part root.Std_k98ojb.List.Slice {\n            list = list_48148f,\n            start = 0,\n            end = sub_node.result\n        }\n\n        \n        instance(x: 600, y: 150) concat_node root.Std_k98ojb.List.Concat {\n            left = slice_second_part.result,\n            right = slice_first_part.result\n        }\n\n        \n        instance(x: 700, y: 100) ifexpr_node root.Std_k98ojb.Std.IfExpression {\n            condition = equals_zero.output,\n            then_value = list_48148f,\n            else_value = concat_node.result\n        }\n\n        \n        ifexpr_node.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 98, y: -105) reduce_7e3b3d root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_7e3b3d.items\n        0 -> reduce_7e3b3d.initialValue\n        func() {\n            in(x: -145, y: -58, name: \"acc\") property(Number) acc_9f1a0c\n            in(x: -126, y: 23, name: \"item\") property(Number) item_b7e5d0\n\n            out(x: 333, y: -42, name: \"\") property(Number) _8b8d4a\n\n            instance(x: 92, y: -22) add_6c1c8f root.Std_k98ojb.Math.Add {}\n            acc_9f1a0c -> add_6c1c8f.first\n            item_b7e5d0 -> add_6c1c8f.second\n            add_6c1c8f.result -> _8b8d4a\n        } -> reduce_7e3b3d.reducer\n        reduce_7e3b3d.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -92, y: 45) _sum_b9ff6b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        \n        instance(edge_case root.Std_k98ojb.Std.IfExpression {\n            expression: \"a <= 1\"\n        })\n        num_5c0677 -> edge_case.a\n        execute_b7b391 \u2192 edge_case.execute\n\n        \n        instance(setter_false root.Setter { new_value = false })\n        getter_false root.Getter {}\n        edge_case.then \u2192 setter_false.execute\n        setter_false.value \u2192 getter_false.input\n        getter_false.output \u2192 output_c457b3\n        setter_false.continue \u2192 continue_9a54bb\n\n        \n        instance(sqrt_expr root.Std_k98ojb.Math.Expression {\n            expression: \"x ** 0.5\"\n        })\n        num_5c0677 -> sqrt_expr.x\n        edge_case.else \u2192 sqrt_expr.execute\n\n        instance(floor_sqrt root.Std_k98ojb.Math.Floor {})\n        sqrt_expr.result \u2192 floor_sqrt.input\n\n        \n        instance(gen_range root.Std_k98ojb.List.GenerateRange {\n            from = 2,\n            to = floor_sqrt.output\n        })\n        floor_sqrt.output \u2192 gen_range.to\n\n        \n        instance(find_divisor root.Iteration.Find {})\n        gen_range.result \u2192 find_divisor.list\n\n        \n        func() {\n            in(x: \"item\") property(Number) i;\n            out(name: \"result\") property(Bool);\n\n            instance(modulo_node root.Std_k98ojb.Math.Modulo {})\n            num_5c0677 \u2192 modulo_node.first\n            i \u2192 modulo_node.second\n\n            instance(is_zero root.Std_k98ojb.Std.IfExpression {\n                expression: \"mod == 0\"\n            })\n            modulo_node.result \u2192 is_zero.mod\n            is_zero.output \u2192 result\n        } \u2192 find_divisor.handler\n\n        \n        instance(check_found root.Std_k98ojb.Std.IfExpression {\n            expression: \"a != null\"\n        })\n        find_divisor.element \u2192 check_found.a\n\n        \n        instance(setter_false2 root.Setter { new_value = false })\n        getter_false2 root.Getter {}\n        check_found.then \u2192 setter_false2.execute\n        setter_false2.value \u2192 getter_false2.input\n        getter_false2.output \u2192 output_c457b3\n        setter_false2.continue \u2192 continue_9a54bb\n\n        \n        instance(setter_true root.Setter { new_value = true })\n        getter_true root.Getter {}\n        check_found.else \u2192 setter_true.execute\n        setter_true.value \u2192 getter_true.input\n        getter_true.output \u2192 output_c457b3\n        setter_true.continue \u2192 continue_9a54bb\n\n        \n        gen_range.result \u2192 find_divisor.list\n    }\n\n    instance(x: -100, y: 0) num_prime_def root.main.num_prime {}\n}"
            ]
        }
    }
]