[
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -100, y: -150) expression_1a2b3c root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y) < 0\"\n        }\n        x_853326 -> expression_1a2b3c.x\n        y_5390f5 -> expression_1a2b3c.y\n        expression_1a2b3c.result -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: -50) modulo_11 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -50) equal_0 root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_11.value\n        11 -> modulo_11.divisor\n        modulo_11.result -> equal_0.left\n        0 -> equal_0.right\n        equal_0.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_123abc root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_123abc.input\n        search_ai -> replace_123abc.search\n        replace_ai -> replace_123abc.replace\n        replace_123abc.output -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 222) replace_char_456def root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -60, y: 140) filter_8c3f6a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 300, y: 140) reduce_9f8b7c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 60, y: 300) not_equal_3f9b8c root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 300, y: 300) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 60, y: 60) empty_list_5f6a3b root.Std_k98ojb.List.Empty {}\n        instance(x: 60, y: 220) contains_4f9b8c root.Std_k98ojb.List.Contains {}\n        instance(x: 60, y: 380) add_5f9b8c root.Std_k98ojb.List.Add {}\n\n        list_5fda54 -> filter_8c3f6a.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            element_5f51f7 -> contains_4f9b8c.item\n            empty_list_5f6a3b.list -> contains_4f9b8c.list\n            contains_4f9b8c.result -> not_equal_3f9b8c.left\n            false -> not_equal_3f9b8c.right\n            not_equal_3f9b8c.result -> out_d0fd24\n        } -> filter_8c3f6a.handler\n\n        filter_8c3f6a.output_list -> reduce_9f8b7c.items\n        func() {\n            in(x: -76, y: 46, name: \"accumulated\") property(Number) accumulated_5f51f7\n            in(x: -76, y: 106, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            accumulated_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_9f8b7c.reducer\n\n        1 -> reduce_9f8b7c.initial\n        reduce_9f8b7c.result -> output_cffcc2\n        execute_19300c -> filter_8c3f6a.execute\n        filter_8c3f6a.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -189, y: 222) unique_product_f0be66 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -50, y: 150) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 150) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 250, y: 150) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.list -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 112, y: -123) length_9f8c7b root.Std_k98ojb.List.Length {}\n        instance(x: 312, y: -45) modulo_4f8c9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 512, y: -67) slice_1a2b3c root.Std_k98ojb.List.Slice {}\n        instance(x: 512, y: 45) slice_4d5e6f root.Std_k98ojb.List.Slice {}\n        instance(x: 712, y: -45) concat_7g8h9i root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_9f8c7b.list\n        length_9f8c7b.length -> modulo_4f8c9a.value\n        n_68068c -> modulo_4f8c9a.divisor\n        modulo_4f8c9a.result -> slice_1a2b3c.start\n        list_48148f -> slice_1a2b3c.list\n        slice_1a2b3c.slice -> concat_7g8h9i.right\n\n        modulo_4f8c9a.result -> slice_4d5e6f.end\n        list_48148f -> slice_4d5e6f.list\n        slice_4d5e6f.slice -> concat_7g8h9i.left\n\n        concat_7g8h9i.list -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 50) reduce_1a2b3c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 350, y: 100) add_4d5e6f root.Std_k98ojb.Math.Add {}\n\n        list_2c62ab -> reduce_1a2b3c.items\n        0 -> reduce_1a2b3c.initial\n\n        func() {\n            in(x: -50, y: 50, name: \"accumulated\") property(Number) accumulated_7g8h9i\n            in(x: -50, y: 100, name: \"current\") property(Number) current_0j1k2l\n\n            out(x: 150, y: 75, name: \"result\") property(Number) result_3m4n5o\n\n            accumulated_7g8h9i -> add_4d5e6f.first\n            current_0j1k2l -> add_4d5e6f.second\n            add_4d5e6f.result -> result_3m4n5o\n        } -> reduce_1a2b3c.reducer\n\n        reduce_1a2b3c.result -> sum_2a848f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 200, y: -100) if_1a2b3c root.Std_k98ojb.Std.If {}\n        instance(x: 400, y: -100) if_4d5e6f root.Std_k98ojb.Std.If {}\n        instance(x: 600, y: -100) generaterange_7g8h9i root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 800, y: -100) for_0j1k2l root.Std_k98ojb.Std.For {}\n        instance(x: 1000, y: -100) modulo_3m4n5o root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1200, y: -100) equal_6p7q8r root.Std_k98ojb.Logic.Equal {}\n\n        num_5c0677 -> if_1a2b3c.input\n        2 -> if_1a2b3c.value\n        if_1a2b3c.then -> output_c457b3\n        if_1a2b3c.then -> continue_9a54bb\n\n        num_5c0677 -> if_4d5e6f.input\n        2 -> if_4d5e6f.value\n        if_4d5e6f.else -> generaterange_7g8h9i.to\n\n        2 -> generaterange_7g8h9i.from\n        generaterange_7g8h9i.list -> for_0j1k2l.items\n\n        for_0j1k2l.item -> modulo_3m4n5o.value\n        num_5c0677 -> modulo_3m4n5o.divisor\n        modulo_3m4n5o.result -> equal_6p7q8r.left\n        0 -> equal_6p7q8r.right\n\n        equal_6p7q8r.result -> if_4d5e6f.input\n        if_4d5e6f.then -> output_c457b3\n        if_4d5e6f.then -> continue_9a54bb\n\n        for_0j1k2l.onItem -> if_4d5e6f.execute\n        for_0j1k2l.done -> output_c457b3\n        for_0j1k2l.done -> continue_9a54bb\n\n        execute_b7b391 -> if_1a2b3c.execute\n        if_1a2b3c.else -> if_4d5e6f.execute\n    }\n\n    \n\n    instance(x: -300, y: 300) num_prime_9r8s7t root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -200, y: -50) expression_1a2b3c root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y) < 0\"\n        }\n\n        x_853326 -> expression_1a2b3c.x\n        y_5390f5 -> expression_1a2b3c.y\n        expression_1a2b3c.result -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: -50) modulo_11b5c7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -50) equal_3f7a9b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_11b5c7.value\n        11 -> modulo_11b5c7.divisor\n        modulo_11b5c7.result -> equal_3f7a9b.left\n        0 -> equal_3f7a9b.right\n        equal_3f7a9b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_diff_4a5b66 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_123abc root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_123abc.input\n        search_ai -> replace_123abc.search\n        replace_ai -> replace_123abc.replace\n        replace_123abc.result -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -50, y: 50) filter_1a2b3c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 200, y: 50) reduce_4d5e6f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 450, y: 50) mul_7g8h9i root.Std_k98ojb.Math.Mul {}\n        instance(x: 650, y: 50) isEmpty_0j1k2l root.Std_k98ojb.List.IsEmpty {}\n\n        list_5fda54 -> filter_1a2b3c.items\n        func() {\n            in(x: -50, y: 50, name: \"item\") property(Number) item_3f4g5h\n            out(x: 150, y: 50, name: \"out\") property(Bool) out_6i7j8k\n\n            instance(x: 50, y: 50) contains_9l0m1n root.Std_k98ojb.List.Contains {}\n            instance(x: 100, y: 50) not_2o3p4q root.Std_k98ojb.Logic.Not {}\n\n            list_5fda54 -> contains_9l0m1n.list\n            item_3f4g5h -> contains_9l0m1n.item\n            contains_9l0m1n.result -> not_2o3p4q.input\n            not_2o3p4q.output -> out_6i7j8k\n        } -> filter_1a2b3c.handler\n\n        filter_1a2b3c.output_list -> reduce_4d5e6f.items\n        func() {\n            in(x: -50, y: 50, name: \"accumulated\") property(Number) accumulated_5r6s7t\n            in(x: 50, y: 50, name: \"item\") property(Number) item_8u9v0w\n            out(x: 150, y: 50, name: \"out\") property(Number) out_1x2y3z\n\n            accumulated_5r6s7t -> mul_7g8h9i.first\n            item_8u9v0w -> mul_7g8h9i.second\n            mul_7g8h9i.result -> out_1x2y3z\n        } -> reduce_4d5e6f.reducer\n\n        1 -> reduce_4d5e6f.initial\n        reduce_4d5e6f.result -> output_cffcc2\n        reduce_4d5e6f.result -> isEmpty_0j1k2l.list\n        isEmpty_0j1k2l.isEmpty -> continue_45190b\n        execute_19300c -> filter_1a2b3c.execute\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -50, y: 150) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 150) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 250, y: 150) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.result -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 112, y: -123) length_9f8c6a root.Std_k98ojb.List.Length {}\n        instance(x: 312, y: -45) modulo_5f8a9c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 512, y: -123) slice_7f8b9d root.Std_k98ojb.List.Slice {}\n        instance(x: 512, y: 45) slice_3f8c9e root.Std_k98ojb.List.Slice {}\n        instance(x: 712, y: -39) concat_8f8d9f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_9f8c6a.list\n        length_9f8c6a.length -> modulo_5f8a9c.divisor\n        n_68068c -> modulo_5f8a9c.value\n        modulo_5f8a9c.result -> slice_7f8b9d.start\n        list_48148f -> slice_7f8b9d.list\n        length_9f8c6a.length -> slice_7f8b9d.end\n        slice_7f8b9d.slice -> concat_8f8d9f.left\n        modulo_5f8a9c.result -> slice_3f8c9e.end\n        list_48148f -> slice_3f8c9e.list\n        slice_3f8c9e.slice -> concat_8f8d9f.right\n        concat_8f8d9f.list -> output_823209\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_right_f0be66 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 50) reduce_1a2b3c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 350, y: 100) add_4d5e6f root.Std_k98ojb.Math.Add {}\n\n        list_2c62ab -> reduce_1a2b3c.items\n        0 -> reduce_1a2b3c.initial\n\n        func() {\n            in(x: -50, y: 20, name: \"accumulated\") property(Number) accumulated_7f8g9h\n            in(x: -50, y: 70, name: \"current\") property(Number) current_0a1b2c\n\n            out(x: 250, y: 45, name: \"result\") property(Number) result_3d4e5f\n\n            accumulated_7f8g9h -> add_4d5e6f.first\n            current_0a1b2c -> add_4d5e6f.second\n            add_4d5e6f.result -> result_3d4e5f\n        } -> reduce_1a2b3c.reducer\n\n        reduce_1a2b3c.result -> sum_2a848f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 180, y: -100) ifexpression_1a2b3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1 ? false : true\"\n        }\n        instance(x: 400, y: 50) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 650, y: 100) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 900, y: 150) modulo_4d5e6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1150, y: 200) equal_7g8h9i root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1400, y: 250) if_07b8c7 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> ifexpression_1a2b3c.num\n        ifexpression_1a2b3c.value -> output_c457b3\n        ifexpression_1a2b3c.then -> continue_9a54bb\n\n        2 -> generaterange_038fce.from\n        num_5c0677 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_8cb3f6.items\n        for_8cb3f6.item -> modulo_4d5e6f.divisor\n        num_5c0677 -> modulo_4d5e6f.value\n        modulo_4d5e6f.result -> equal_7g8h9i.left\n        0 -> equal_7g8h9i.right\n        equal_7g8h9i.result -> if_07b8c7.predicate\n        for_8cb3f6.onItem -> if_07b8c7.execute\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.else -> for_8cb3f6.next\n        for_8cb3f6.done -> output_c457b3\n        execute_b7b391 -> for_8cb3f6.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) num_prime_f0be66 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -150) expression_1a2b3c root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y) < 0\"\n        }\n\n        x_853326 -> expression_1a2b3c.x\n        y_5390f5 -> expression_1a2b3c.y\n        expression_1a2b3c.result -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: -50) modulo_11c3d7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -50) equal_8f3a2b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_11c3d7.value\n        11 -> modulo_11c3d7.divisor\n        modulo_11c3d7.result -> equal_8f3a2b.left\n        0 -> equal_8f3a2b.right\n        equal_8f3a2b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_123abc root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_123abc.input\n        search_ai -> replace_123abc.search\n        replace_ai -> replace_123abc.replace\n        replace_123abc.result -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -50, y: 150) filter_8f3c9d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 250, y: 150) reduce_2f9d09 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 50, y: 300) contains_3f9d09 root.Std_k98ojb.List.Contains {}\n        instance(x: 150, y: 300) add_3f9d09 root.Std_k98ojb.List.Add {}\n        instance(x: 350, y: 300) empty_3f9d09 root.Std_k98ojb.List.Empty {}\n\n        list_5fda54 -> filter_8f3c9d.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) notcontains_2f9d09 root.Std_k98ojb.Logic.Not {}\n            element_5f51f7 -> contains_3f9d09.item\n            contains_3f9d09.isContained -> notcontains_2f9d09.input\n            notcontains_2f9d09.output -> out_d0fd24\n        } -> filter_8f3c9d.handler\n\n        filter_8f3c9d.output_list -> reduce_2f9d09.items\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: -76, y: 100, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_2f9d09.reducer\n\n        1 -> reduce_2f9d09.initial\n        reduce_2f9d09.result -> output_cffcc2\n        execute_19300c -> filter_8f3c9d.execute\n        execute_19300c -> empty_3f9d09.execute\n        empty_3f9d09.list -> contains_3f9d09.list\n        empty_3f9d09.list -> add_3f9d09.list\n        filter_8f3c9d.output_list -> add_3f9d09.item\n        add_3f9d09.listWithItem -> contains_3f9d09.list\n        reduce_2f9d09.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -50, y: 150) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 150) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 250, y: 250) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.result -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 112, y: -123) length_9f8c6b root.Std_k98ojb.List.Length {}\n        instance(x: 312, y: -45) modulo_5e7a9c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 512, y: -67) slice_7b2d8e root.Std_k98ojb.List.Slice {}\n        instance(x: 512, y: 45) slice_3e9f7b root.Std_k98ojb.List.Slice {}\n        instance(x: 712, y: -45) concat_1f3a7d root.Std_k98ojb.List.Concat {}\n        instance(x: 912, y: -112) concat_2e3b8c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_9f8c6b.list\n        length_9f8c6b.length -> modulo_5e7a9c.value\n        n_68068c -> modulo_5e7a9c.divisor\n        length_9f8c6b.length -> slice_7b2d8e.end\n        modulo_5e7a9c.result -> slice_7b2d8e.start\n        list_48148f -> slice_7b2d8e.list\n        slice_7b2d8e.slice -> concat_1f3a7d.left\n        modulo_5e7a9c.result -> slice_3e9f7b.end\n        list_48148f -> slice_3e9f7b.list\n        slice_3e9f7b.slice -> concat_1f3a7d.right\n        concat_1f3a7d.result -> output_823209\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_right_1f3b7c root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 50) reduce_1a2b3c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 350, y: 100) add_3d4e5f root.Std_k98ojb.Math.Add {}\n\n        list_2c62ab -> reduce_1a2b3c.items\n        0 -> reduce_1a2b3c.initial\n\n        func() {\n            in(x: -50, y: 20, name: \"accumulated\") property(Number) accumulated_4f5g6h\n            in(x: -50, y: 70, name: \"current\") property(Number) current_7h8i9j\n\n            out(x: 250, y: 45, name: \"result\") property(Number) result_0a1b2c\n\n            accumulated_4f5g6h -> add_3d4e5f.first\n            current_7h8i9j -> add_3d4e5f.second\n            add_3d4e5f.result -> result_0a1b2c\n        } -> reduce_1a2b3c.reducer\n\n        reduce_1a2b3c.result -> sum_2a848f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 200, y: -100) if_1a2b3c root.Std_k98ojb.Std.If {}\n        instance(x: 400, y: -100) if_4d5e6f root.Std_k98ojb.Std.If {}\n        instance(x: 600, y: -100) generaterange_7g8h9i root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 800, y: -100) for_0j1k2l root.Std_k98ojb.Std.For {}\n        instance(x: 1000, y: -100) modulo_3m4n5o root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1200, y: -100) equal_6p7q8r root.Std_k98ojb.Logic.Equal {}\n\n        num_5c0677 -> if_1a2b3c.value\n        2 -> if_1a2b3c.predicate\n        if_1a2b3c.then -> output_c457b3\n        true -> output_c457b3\n        if_1a2b3c.else -> if_4d5e6f.execute\n        num_5c0677 -> if_4d5e6f.value\n        2 -> if_4d5e6f.predicate\n        if_4d5e6f.then -> output_c457b3\n        false -> output_c457b3\n        if_4d5e6f.else -> generaterange_7g8h9i.from\n        2 -> generaterange_7g8h9i.from\n        num_5c0677 -> generaterange_7g8h9i.to\n        generaterange_7g8h9i.list -> for_0j1k2l.items\n        for_0j1k2l.item -> modulo_3m4n5o.value\n        num_5c0677 -> modulo_3m4n5o.divisor\n        modulo_3m4n5o.result -> equal_6p7q8r.left\n        0 -> equal_6p7q8r.right\n        equal_6p7q8r.result -> if_4d5e6f.predicate\n        if_4d5e6f.then -> output_c457b3\n        false -> output_c457b3\n        for_0j1k2l.onItem -> if_4d5e6f.execute\n        for_0j1k2l.done -> output_c457b3\n        true -> output_c457b3\n        execute_b7b391 -> if_1a2b3c.execute\n        if_4d5e6f.else -> for_0j1k2l.next\n        if_4d5e6f.then -> continue_9a54bb\n        for_0j1k2l.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -189, y: 222) num_prime_0a1b2c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -120, y: -180) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 100, y: -200) lessthan_5f51f7 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_2f9d09.first\n        y_5390f5 -> mul_2f9d09.second\n        mul_2f9d09.result -> lessthan_5f51f7.left\n        0 -> lessthan_5f51f7.right\n        lessthan_5f51f7.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -189, y: 222) opposite_signs_f0be66 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: -50) modulo_11a3b2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -50) equal_5b3c7d root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_11a3b2.value\n        11 -> modulo_11a3b2.divisor\n        modulo_11a3b2.result -> equal_5b3c7d.left\n        0 -> equal_5b3c7d.right\n        equal_5b3c7d.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_9f8c7a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9f8c7a.input\n        search_ai -> replace_9f8c7a.search\n        replace_ai -> replace_9f8c7a.replace\n        replace_9f8c7a.output -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 222) replace_char_123abc root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -12, y: 34) filter_8c3f6a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 345, y: 56) reduce_9f8b7c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 123, y: 12) not_equal_7a9d3b root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 456, y: 78) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 234, y: 90) empty_list_3b2f1a root.Std_k98ojb.List.Empty {}\n        instance(x: 567, y: 102) add_4c5d6e root.Std_k98ojb.List.Add {}\n        instance(x: 789, y: 114) contains_5e6f7g root.Std_k98ojb.List.Contains {}\n\n        list_5fda54 -> filter_8c3f6a.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            element_5f51f7 -> contains_5e6f7g.item\n            empty_list_3b2f1a.list -> contains_5e6f7g.list\n            contains_5e6f7g.result -> not_equal_7a9d3b.left\n            false -> not_equal_7a9d3b.right\n            not_equal_7a9d3b.result -> out_d0fd24\n        } -> filter_8c3f6a.handler\n\n        filter_8c3f6a.output_list -> reduce_9f8b7c.items\n        func() {\n            in(x: -76, y: 46, name: \"accumulated\") property(Number) accumulated_5f51f7\n            in(x: 76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            accumulated_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_9f8b7c.reducer\n\n        1 -> reduce_9f8b7c.initial\n        reduce_9f8b7c.result -> output_cffcc2\n        execute_19300c -> filter_8c3f6a.execute\n        reduce_9f8b7c.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -189, y: 222) unique_product_f0be66 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -200, y: 200) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 200) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 0, y: 400) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        difference_1.difference -> concat.left\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_2.difference -> concat.right\n\n        concat.list -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 112, y: -123) length_9f8c7b root.Std_k98ojb.List.Length {}\n        instance(x: 312, y: -65) modulo_1a2b3c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 512, y: -123) slice_4d5e6f root.Std_k98ojb.List.Slice {}\n        instance(x: 512, y: 23) slice_7g8h9i root.Std_k98ojb.List.Slice {}\n        instance(x: 712, y: -50) concat_0j1k2l root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_9f8c7b.list\n        length_9f8c7b.length -> modulo_1a2b3c.value\n        n_68068c -> modulo_1a2b3c.divisor\n        modulo_1a2b3c.result -> slice_4d5e6f.start\n        list_48148f -> slice_4d5e6f.list\n        length_9f8c7b.length -> slice_4d5e6f.end\n        slice_4d5e6f.slice -> concat_0j1k2l.left\n\n        0 -> slice_7g8h9i.start\n        modulo_1a2b3c.result -> slice_7g8h9i.end\n        list_48148f -> slice_7g8h9i.list\n        slice_7g8h9i.slice -> concat_0j1k2l.right\n\n        concat_0j1k2l.list -> output_823209\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_right_3m4n5o root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 172, y: 54) reduce_3f9b8c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 391, y: 89) add_5f9d2a root.Std_k98ojb.Math.Add {}\n\n        list_2c62ab -> reduce_3f9b8c.items\n        0 -> reduce_3f9b8c.initialValue\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulated\") property(Number) accumulated_5f51f7\n            in(x: -76, y: 96, name: \"current\") property(Number) current_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            accumulated_5f51f7 -> add_5f9d2a.first\n            current_5f51f7 -> add_5f9d2a.second\n            add_5f9d2a.result -> out_d0fd24\n        } -> reduce_3f9b8c.reducer\n\n        reduce_3f9b8c.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -189, y: 222) _sum_f0be66 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 180, y: -140) if_1a2b3c root.Std_k98ojb.Std.If {}\n        instance(x: 400, y: -50) generaterange_4d5e6f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 600, y: 50) for_7g8h9i root.Std_k98ojb.Std.For {}\n        instance(x: 800, y: -150) modulo_0j1k2l root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1000, y: -50) equal_3m4n5o root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1200, y: 50) if_6p7q8r root.Std_k98ojb.Std.If {}\n\n        2 -> if_1a2b3c.value\n        num_5c0677 -> if_1a2b3c.input\n        if_1a2b3c.then -> continue_9a54bb\n        if_1a2b3c.else -> generaterange_4d5e6f.trigger\n\n        2 -> generaterange_4d5e6f.from\n        num_5c0677 -> generaterange_4d5e6f.to\n        generaterange_4d5e6f.list -> for_7g8h9i.items\n\n        for_7g8h9i.item -> modulo_0j1k2l.divisor\n        num_5c0677 -> modulo_0j1k2l.value\n        modulo_0j1k2l.result -> equal_3m4n5o.left\n        0 -> equal_3m4n5o.right\n\n        equal_3m4n5o.result -> if_6p7q8r.predicate\n        for_7g8h9i.onItem -> if_6p7q8r.execute\n        if_6p7q8r.then -> continue_9a54bb\n        if_6p7q8r.else -> for_7g8h9i.next\n\n        for_7g8h9i.done -> output_c457b3\n        execute_b7b391 -> if_1a2b3c.execute\n    }\n\n    \n\n    instance(x: -300, y: 200) num_prime_9r8s7t root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -200, y: -50) expression_abc123 root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y) < 0\"\n        }\n        \n        x_853326 -> expression_abc123.x\n        y_5390f5 -> expression_abc123.y\n        expression_abc123.result -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: -50) modulo_4b5c7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: 0) equal_8a9f5c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_4b5c7d.value\n        11 -> modulo_4b5c7d.divisor\n        modulo_4b5c7d.result -> equal_8a9f5c.left\n        0 -> equal_8a9f5c.right\n        equal_8a9f5c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_diff_9a8f66 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 280, y: 300) replace_3c4a9d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3c4a9d.input\n        search_ai -> replace_3c4a9d.search\n        replace_ai -> replace_3c4a9d.replace\n        replace_3c4a9d.output -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 222) replace_char_abc123 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -200, y: 200) filter_8b7c3d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 200, y: 200) reduce_2f9d09 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 200, y: 50) set_difference_3c7f1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: -100) empty_list_7f5c1a root.Std_k98ojb.List.Empty {}\n\n        list_5fda54 -> filter_8b7c3d.items\n        func() {\n            in(x: -50, y: 50, name: \"item\") property(Number) item_5f51f7\n            out(x: 50, y: 50, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 0, y: 0) contains_3f9d09 root.Std_k98ojb.List.Contains {}\n            item_5f51f7 -> contains_3f9d09.item\n            list_5fda54 -> contains_3f9d09.list\n            contains_3f9d09.result -> out_d0fd24\n        } -> filter_8b7c3d.handler\n\n        filter_8b7c3d.output_list -> set_difference_3c7f1a.left\n        empty_list_7f5c1a.list -> set_difference_3c7f1a.right\n        set_difference_3c7f1a.difference -> reduce_2f9d09.items\n\n        func() {\n            in(x: -50, y: 50, name: \"accumulated\") property(Number) accumulated_1f51f7\n            in(x: -50, y: 100, name: \"item\") property(Number) item_2f51f7\n            out(x: 50, y: 75, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 0, y: 75) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulated_1f51f7 -> mul_2f9d09.first\n            item_2f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_2f9d09.reducer\n\n        1 -> reduce_2f9d09.initial\n        reduce_2f9d09.result -> output_cffcc2\n        execute_19300c -> reduce_2f9d09.execute\n        reduce_2f9d09.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -115, y: 155) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 126, y: 155) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 238, y: 155) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n        concat_1.list -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 222) find_dissimilar_1 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 112, y: -123) length_6d9c8a root.Std_k98ojb.List.Length {}\n        instance(x: 312, y: -65) modulo_5f8a9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 520, y: -186) slice_a9b2d8 root.Std_k98ojb.List.Slice {}\n        instance(x: 522, y: 18) slice_8b9c3f root.Std_k98ojb.List.Slice {}\n        instance(x: 722, y: -63) concat_4f9b3e root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_6d9c8a.list\n        length_6d9c8a.length -> modulo_5f8a9d.value\n        n_68068c -> modulo_5f8a9d.divisor\n        modulo_5f8a9d.result -> slice_a9b2d8.start\n        list_48148f -> slice_a9b2d8.list\n        length_6d9c8a.length -> slice_a9b2d8.end\n        slice_a9b2d8.slice -> concat_4f9b3e.right\n        0 -> slice_8b9c3f.start\n        modulo_5f8a9d.result -> slice_8b9c3f.end\n        list_48148f -> slice_8b9c3f.list\n        slice_8b9c3f.slice -> concat_4f9b3e.left\n        concat_4f9b3e.list -> output_823209\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_right_f0be66 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 122, y: 54) reduce_9f8c1a root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_9f8c1a.items\n\n        func() {\n            in(x: -77, y: 34, name: \"accumulator\") property(Number) accumulator_1a3b2f\n            in(x: -77, y: 86, name: \"current\") property(Number) current_2b4c3d\n\n            out(x: 283, y: 60, name: \"result\") property(Number) result_3c5d4e\n\n            instance(x: 106, y: 60) add_4d5e6f root.Std_k98ojb.Math.Add {}\n\n            accumulator_1a3b2f -> add_4d5e6f.first\n            current_2b4c3d -> add_4d5e6f.second\n            add_4d5e6f.result -> result_3c5d4e\n        } -> reduce_9f8c1a.reducer\n\n        reduce_9f8c1a.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -189, y: 222) _sum_f0be66 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 190, y: -140) ifexpression_5f8d7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1 ? false : true\"\n        }\n        instance(x: 447, y: -11) generaterange_0f7c2b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 709, y: -100) for_6a8d7f root.Std_k98ojb.Std.For {}\n        instance(x: 1051, y: -187) modulo_3c4d2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1325, y: -200) equal_4b9f8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1589, y: -40) if_2c3b7a root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> ifexpression_5f8d7c.num\n        ifexpression_5f8d7c.value -> output_c457b3\n        2 -> generaterange_0f7c2b.from\n        num_5c0677 -> generaterange_0f7c2b.to\n        generaterange_0f7c2b.list -> for_6a8d7f.items\n        for_6a8d7f.item -> modulo_3c4d2a.divisor\n        num_5c0677 -> modulo_3c4d2a.value\n        modulo_3c4d2a.result -> equal_4b9f8c.left\n        0 -> equal_4b9f8c.right\n        equal_4b9f8c.result -> if_2c3b7a.predicate\n        for_6a8d7f.onItem -> if_2c3b7a.execute\n        if_2c3b7a.then -> continue_9a54bb\n        if_2c3b7a.else -> for_6a8d7f.next\n        for_6a8d7f.done -> continue_9a54bb\n        execute_b7b391 -> for_6a8d7f.reset\n    }\n\n    \n\n    instance(x: -189, y: 222) num_prime_3f7c66 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 50, y: -300) expression_f5d8c7 root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y) < 0\"\n        }\n        \n        x_853326 -> expression_f5d8c7.gen_0\n        y_5390f5 -> expression_f5d8c7.gen_1\n        expression_f5d8c7.result -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: 0) modulo_4b5c7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: 0) equal_8a9f5c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_4b5c7d.value\n        11 -> modulo_4b5c7d.divisor\n        modulo_4b5c7d.result -> equal_8a9f5c.left\n        0 -> equal_8a9f5c.right\n        equal_8a9f5c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -189, y: 222) is_diff_9a8f66 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_str root.Std_k98ojb.Strings.Replace {}\n\n        input_ai -> replace_str.input\n        search_ai -> replace_str.search\n        replace_ai -> replace_str.replace\n\n        replace_str.result -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -200, y: -200) filter_8b7c3f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 200, y: -200) reduce_2f9d09 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 0, y: -400) emptylist_3e7f4c root.Std_k98ojb.List.Empty {}\n        instance(x: -400, y: -400) contains_5e8b3c root.Std_k98ojb.List.Contains {}\n        instance(x: -600, y: -200) additem_1f6d3a root.Std_k98ojb.List.Add {}\n        instance(x: -800, y: -200) notcontains_4c9b8d root.Std_k98ojb.Logic.Not {}\n\n        list_5fda54 -> filter_8b7c3f.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            element_5f51f7 -> contains_5e8b3c.item\n            emptylist_3e7f4c.list -> contains_5e8b3c.list\n            contains_5e8b3c.result -> notcontains_4c9b8d.input\n            notcontains_4c9b8d.result -> out_d0fd24\n        } -> filter_8b7c3f.handler\n        filter_8b7c3f.output_list -> reduce_2f9d09.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_2f9d09.reducer\n\n        1 -> reduce_2f9d09.initial\n        reduce_2f9d09.result -> output_cffcc2\n        execute_19300c -> filter_8b7c3f.execute\n        filter_8b7c3f.output_list -> additem_1f6d3a.list\n        additem_1f6d3a.listWithItem -> emptylist_3e7f4c.list\n        reduce_2f9d09.result -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -270, y: 180) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 40, y: 180) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 250) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        difference_1.difference -> concat.listA\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_2.difference -> concat.listB\n\n        concat.concatenated -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 112, y: -123) length_6d9c8c root.Std_k98ojb.List.Length {}\n        instance(x: 312, y: -65) modulo_5e8a9a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 520, y: -186) slice_4b2d5e root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: -33) slice_3e7f9b root.Std_k98ojb.List.Slice {}\n        instance(x: 640, y: -110) concat_7f3a8d root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_6d9c8c.list\n        length_6d9c8c.length -> modulo_5e8a9a.divisor\n        n_68068c -> modulo_5e8a9a.value\n        modulo_5e8a9a.result -> slice_4b2d5e.start\n        list_48148f -> slice_4b2d5e.list\n        length_6d9c8c.length -> slice_4b2d5e.end\n        slice_4b2d5e.slice -> concat_7f3a8d.left\n        modulo_5e8a9a.result -> slice_3e7f9b.end\n        list_48148f -> slice_3e7f9b.list\n        slice_3e7f9b.slice -> concat_7f3a8d.right\n        concat_7f3a8d.concatenated -> output_823209\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_right_f0be66 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 180, y: 50) reduce_3c9b7f root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_3c9b7f.items\n\n        func() {\n            in(x: -100, y: 20, name: \"accumulated\") property(Number) accumulated_1a2b3c\n            in(x: -100, y: 60, name: \"current\") property(Number) current_4d5e6f\n\n            out(x: 200, y: 40, name: \"result\") property(Number) result_7g8h9i\n\n            instance(x: 0, y: 40) add_5f6g7h root.Std_k98ojb.Math.Add {}\n\n            accumulated_1a2b3c -> add_5f6g7h.first\n            current_4d5e6f -> add_5f6g7h.second\n            add_5f6g7h.result -> result_7g8h9i\n        } -> reduce_3c9b7f.reducer\n\n        reduce_3c9b7f.result -> sum_2a848f\n    }\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 190, y: 34) ifexpression_5e8d7c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1 ? false : true\"\n        }\n        instance(x: 447, y: -145) generaterange_0f7c2f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 709, y: -100) for_6a8d7f root.Std_k98ojb.Std.For {}\n        instance(x: 1051, y: -82) modulo_3e4c2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1235, y: -248) equal_25c9f1 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1446, y: -241) if_2f9b8c root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> ifexpression_5e8d7c.num\n        ifexpression_5e8d7c.value -> output_c457b3\n\n        2 -> generaterange_0f7c2f.from\n        num_5c0677 -> generaterange_0f7c2f.to\n        generaterange_0f7c2f.list -> for_6a8d7f.items\n\n        for_6a8d7f.item -> modulo_3e4c2a.divisor\n        num_5c0677 -> modulo_3e4c2a.value\n        modulo_3e4c2a.result -> equal_25c9f1.left\n        0 -> equal_25c9f1.right\n\n        equal_25c9f1.result -> if_2f9b8c.predicate\n        if_2f9b8c.then -> continue_9a54bb\n        if_2f9b8c.else -> for_6a8d7f.next\n\n        execute_b7b391 -> for_6a8d7f.reset\n        for_6a8d7f.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -189, y: 222) num_prime_3e5f9b root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -120, y: -180) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 100, y: -200) lessthan_5f51f7 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        x_853326 -> mul_2f9d09.first\n        y_5390f5 -> mul_2f9d09.second\n        mul_2f9d09.result -> lessthan_5f51f7.left\n        0 -> lessthan_5f51f7.right\n        lessthan_5f51f7.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -189, y: 222) opposite_signs_f0be66 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: -50) modulo_11b8c3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -50) equal_9f7b3c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_11b8c3.value\n        11 -> modulo_11b8c3.divisor\n        modulo_11b8c3.result -> equal_9f7b3c.left\n        0 -> equal_9f7b3c.right\n        equal_9f7b3c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_9f8c7a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9f8c7a.input\n        search_ai -> replace_9f8c7a.search\n        replace_ai -> replace_9f8c7a.replace\n        replace_9f8c7a.output -> output_ai\n    }\n\n    \n\n    instance(x: -189, y: 222) replace_char_123abc root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -60, y: 34) filter_8c3f6a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 192, y: 35) reduce_1a2b3c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 442, y: 34) mul_3d4e5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 192, y: -150) list_empty_4b5c6d root.Std_k98ojb.List.Empty {}\n        instance(x: 192, y: -50) list_contains_5e6f7g root.Std_k98ojb.List.Contains {}\n        instance(x: 192, y: -100) list_add_6f7g8h root.Std_k98ojb.List.Add {}\n\n        list_5fda54 -> filter_8c3f6a.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 106, y: 17) not_contains_7h8i9j root.Std_k98ojb.Logic.Not {}\n            element_5f51f7 -> list_contains_5e6f7g.item\n            list_empty_4b5c6d.list -> list_contains_5e6f7g.list\n            list_contains_5e6f7g.result -> not_contains_7h8i9j.input\n            not_contains_7h8i9j.output -> out_d0fd24\n        } -> filter_8c3f6a.handler\n\n        filter_8c3f6a.output_list -> reduce_1a2b3c.items\n        func() {\n            in(x: -76, y: 46, name: \"accumulated\") property(Number) accumulated_5f51f7\n            in(x: -76, y: 96, name: \"element\") property(Number) element_6g62h8\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            accumulated_5f51f7 -> mul_3d4e5f.first\n            element_6g62h8 -> mul_3d4e5f.second\n            mul_3d4e5f.result -> out_d0fd24\n        } -> reduce_1a2b3c.reducer\n\n        1 -> reduce_1a2b3c.initial\n        reduce_1a2b3c.result -> output_cffcc2\n        execute_19300c -> list_empty_4b5c6d.reset\n        execute_19300c -> filter_8c3f6a.execute\n        filter_8c3f6a.output_list -> list_add_6f7g8h.list\n        filter_8c3f6a.output_list -> list_add_6f7g8h.item\n        list_add_6f7g8h.listWithItem -> list_empty_4b5c6d.list\n        reduce_1a2b3c.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -189, y: 222) unique_product_0a1b2c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -78, y: 45) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 145, y: 45) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 240, y: 45) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        difference_1.difference -> concat_1.left\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_2.difference -> concat_1.right\n\n        concat_1.list -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 112, y: -123) length_3f9b8a root.Std_k98ojb.List.Length {}\n        instance(x: 312, y: -65) modulo_5f8c9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 520, y: -210) slice_7f9b8c root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: -10) slice_9f8c9e root.Std_k98ojb.List.Slice {}\n        instance(x: 640, y: -110) concat_8f9b8d root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_3f9b8a.list\n        n_68068c -> modulo_5f8c9d.value\n        length_3f9b8a.length -> modulo_5f8c9d.divisor\n        length_3f9b8a.length -> slice_7f9b8c.end\n        modulo_5f8c9d.result -> slice_7f9b8c.start\n        list_48148f -> slice_7f9b8c.list\n        modulo_5f8c9d.result -> slice_9f8c9e.end\n        list_48148f -> slice_9f8c9e.list\n        slice_7f9b8c.slice -> concat_8f9b8d.left\n        slice_9f8c9e.slice -> concat_8f9b8d.right\n        concat_8f9b8d.list -> output_823209\n    }\n\n    \n\n    instance(x: -189, y: 222) rotate_right_f0be66 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 120, y: 50) reduce_1a2b3c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 350, y: 100) add_4d5e6f root.Std_k98ojb.Math.Add {}\n\n        list_2c62ab -> reduce_1a2b3c.items\n        0 -> reduce_1a2b3c.initial\n\n        func() {\n            in(x: -50, y: 20, name: \"accumulated\") property(Number) accumulated_7f8g9h\n            in(x: -50, y: 60, name: \"current\") property(Number) current_0a1b2c\n\n            out(x: 200, y: 40, name: \"result\") property(Number) result_3d4e5f\n\n            accumulated_7f8g9h -> add_4d5e6f.first\n            current_0a1b2c -> add_4d5e6f.second\n            add_4d5e6f.result -> result_3d4e5f\n        } -> reduce_1a2b3c.reducer\n\n        reduce_1a2b3c.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -189, y: 222) _sum_0b1c2d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 180, y: -140) if_8c3f6a root.Std_k98ojb.Std.If {}\n        instance(x: 400, y: -40) generaterange_4b7c8d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 600, y: 60) for_2f9d09 root.Std_k98ojb.Std.For {}\n        instance(x: 800, y: -100) modulo_5f51f7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1000, y: -200) equal_7b8c7d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1200, y: -300) if_9fba8c root.Std_k98ojb.Std.If {}\n        instance(x: 1400, y: -400) not_6030c9 root.Std_k98ojb.Logic.Not {}\n\n        2 -> if_8c3f6a.value\n        num_5c0677 -> if_8c3f6a.input\n        if_8c3f6a.then -> continue_9a54bb\n        if_8c3f6a.else -> generaterange_4b7c8d.trigger\n\n        2 -> generaterange_4b7c8d.from\n        num_5c0677 -> generaterange_4b7c8d.to\n        generaterange_4b7c8d.list -> for_2f9d09.items\n\n        for_2f9d09.item -> modulo_5f51f7.value\n        num_5c0677 -> modulo_5f51f7.divisor\n        modulo_5f51f7.result -> equal_7b8c7d.left\n        0 -> equal_7b8c7d.right\n\n        equal_7b8c7d.result -> if_9fba8c.predicate\n        for_2f9d09.onItem -> if_9fba8c.execute\n        if_9fba8c.then -> continue_9a54bb\n        if_9fba8c.else -> for_2f9d09.next\n\n        for_2f9d09.done -> not_6030c9.input\n        not_6030c9.result -> output_c457b3\n        not_6030c9.result -> continue_9a54bb\n\n        execute_b7b391 -> if_8c3f6a.execute\n    }\n\n    \n\n    instance(x: -189, y: 222) num_prime_5f51f7 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -146, y: -178) expression_5a8f7b root.Std_k98ojb.Math.Expression {\n            expression: \"(x * y) < 0\"\n        }\n        x_853326 -> expression_5a8f7b.gen_0\n        y_5390f5 -> expression_5a8f7b.gen_1\n        expression_5a8f7b.result -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: -50) modulo_8a9f0c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -50) equal_2c7b1d root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_8a9f0c.value\n        11 -> modulo_8a9f0c.divisor\n        modulo_8a9f0c.result -> equal_2c7b1d.left\n        0 -> equal_2c7b1d.right\n        equal_2c7b1d.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 280, y: 318) replace_3c4a9d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3c4a9d.input\n        search_ai -> replace_3c4a9d.search\n        replace_ai -> replace_3c4a9d.replace\n        replace_3c4a9d.output -> output_ai\n    }\n\n    \n\n    instance(x: -122, y: 257) replace_char_ebf1c9 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 100, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -200, y: 200) filter_8b4c3d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 200, y: 200) reduce_9f3c7a root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 400, y: 200) notEqual_1d2a5b root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 600, y: 200) mul_3f5d7c root.Std_k98ojb.Math.Mul {}\n        instance(x: 800, y: 200) empty_2a1b3c root.Std_k98ojb.List.Empty {}\n        instance(x: 1000, y: 200) add_4e6f8d root.Std_k98ojb.List.Add {}\n        instance(x: 1200, y: 200) contains_5b7c9e root.Std_k98ojb.List.Contains {}\n\n        list_5fda54 -> filter_8b4c3d.items\n        func() {\n            in(x: -50, y: 50, name: \"item\") property(Number) item_7a8b9c\n            out(x: 150, y: 50, name: \"out\") property(Bool) out_6c7d8e\n\n            instance(x: 50, y: 50) contains_5b7c9e root.Std_k98ojb.List.Contains {}\n            item_7a8b9c -> contains_5b7c9e.item\n            empty_2a1b3c.list -> contains_5b7c9e.list\n            contains_5b7c9e.result -> notEqual_1d2a5b.left\n            false -> notEqual_1d2a5b.right\n            notEqual_1d2a5b.result -> out_6c7d8e\n        } -> filter_8b4c3d.handler\n\n        filter_8b4c3d.output_list -> reduce_9f3c7a.items\n        func() {\n            in(x: -50, y: 50, name: \"acc\") property(Number) acc_8d9e0f\n            in(x: 50, y: 50, name: \"item\") property(Number) item_1f2g3h\n            out(x: 150, y: 50, name: \"out\") property(Number) out_4i5j6k\n\n            acc_8d9e0f -> mul_3f5d7c.first\n            item_1f2g3h -> mul_3f5d7c.second\n            mul_3f5d7c.result -> out_4i5j6k\n        } -> reduce_9f3c7a.reducer\n\n        1 -> reduce_9f3c7a.initial\n        reduce_9f3c7a.result -> output_cffcc2\n        execute_19300c -> empty_2a1b3c.execute\n        reduce_9f3c7a.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -98, y: 195) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 186, y: 195) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 50, y: 330) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        difference_1.difference -> concat.list1\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_2.difference -> concat.list2\n\n        concat.list -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 112, y: -123) length_6d9c8a root.Std_k98ojb.List.Length {}\n        instance(x: 312, y: -65) modulo_5b6e1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 520, y: -186) slice_4b2d5e root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: -33) slice_3e7f9c root.Std_k98ojb.List.Slice {}\n        instance(x: 634, y: -110) concat_7f3a8d root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_6d9c8a.list\n        length_6d9c8a.length -> modulo_5b6e1a.divisor\n        n_68068c -> modulo_5b6e1a.value\n        modulo_5b6e1a.result -> slice_4b2d5e.start\n        list_48148f -> slice_4b2d5e.list\n        length_6d9c8a.length -> slice_4b2d5e.end\n        slice_4b2d5e.slice -> concat_7f3a8d.left\n        list_48148f -> slice_3e7f9c.list\n        0 -> slice_3e7f9c.start\n        modulo_5b6e1a.result -> slice_3e7f9c.end\n        slice_3e7f9c.slice -> concat_7f3a8d.right\n        concat_7f3a8d.list -> output_823209\n    }\n\n    \n\n    instance(x: -192, y: 244) rotate_right_9c3e5a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 122, y: 54) reduce_9f0c1a root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 353, y: 89) add_3b7d6e root.Std_k98ojb.Math.Add {}\n\n        list_2c62ab -> reduce_9f0c1a.items\n        0 -> reduce_9f0c1a.initial\n\n        func() {\n            in(x: -100, y: 20, name: \"accumulator\") property(Number) accumulator_1f2b9d\n            in(x: -100, y: 70, name: \"value\") property(Number) value_3e2a1f\n\n            out(x: 200, y: 45, name: \"result\") property(Number) result_7d1c9f\n\n            accumulator_1f2b9d -> add_3b7d6e.first\n            value_3e2a1f -> add_3b7d6e.second\n            add_3b7d6e.result -> result_7d1c9f\n        } -> reduce_9f0c1a.reducer\n\n        reduce_9f0c1a.result -> sum_2a848f\n    }\n\n    \n\n    instance(x: -189, y: 222) _sum_f0be66 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 190, y: -140) lessthanorequal_6f23a1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 430, y: -56) if_2c1d3b root.Std_k98ojb.Std.If {}\n        instance(x: 662, y: -108) generaterange_92c8e5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1110, y: -104) for_5b1f9a root.Std_k98ojb.Std.For {}\n        instance(x: 1428, y: -235) expression_3c8a47 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1746, y: -76) if_7e2fbc root.Std_k98ojb.Std.If {}\n        instance(x: 1030, y: 51) greaterthan_2a9fcd root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 1328, y: 24) not_5b0dcb root.Std_k98ojb.Logic.Not {}\n        instance(x: 1578, y: 62) if_8c5f3a root.Std_k98ojb.Std.If {}\n        2 -> lessthanorequal_6f23a1.left\n        num_5c0677 -> lessthanorequal_6f23a1.right\n        lessthanorequal_6f23a1.result -> if_2c1d3b.predicate\n        if_2c1d3b.then -> continue_9a54bb\n        if_2c1d3b.value -> output_c457b3\n        2 -> generaterange_92c8e5.from\n        num_5c0677 -> generaterange_92c8e5.to\n        generaterange_92c8e5.list -> for_5b1f9a.items\n        for_5b1f9a.item -> expression_3c8a47.gen_0\n        num_5c0677 -> expression_3c8a47.gen_1\n        expression_3c8a47.result -> if_7e2fbc.predicate\n        for_5b1f9a.onItem -> if_7e2fbc.execute\n        if_7e2fbc.then -> continue_9a54bb\n        if_7e2fbc.value -> output_c457b3\n        num_5c0677 -> greaterthan_2a9fcd.left\n        1 -> greaterthan_2a9fcd.right\n        greaterthan_2a9fcd.result -> not_5b0dcb.input\n        not_5b0dcb.output -> if_8c5f3a.predicate\n        execute_b7b391 -> if_8c5f3a.execute\n        if_8c5f3a.then -> continue_9a54bb\n        if_8c5f3a.value -> output_c457b3\n        if_8c5f3a.else -> for_5b1f9a.reset\n        for_5b1f9a.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -189, y: 222) num_prime_3f5b44 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 3454,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: 45, y: -195) lessthan_f8f7b7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 328, y: -195) lessthan_d9fcd2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 243, y: 49) not_0f33e1 root.Std_k98ojb.Logic.Not {}\n        instance(x: 488, y: 18) and_4458b4 root.Std_k98ojb.Logic.And {}\n        instance(x: 713, y: -57) if_76f1a3 root.Std_k98ojb.Std.If {}\n\n        0 -> lessthan_f8f7b7.right\n        0 -> lessthan_d9fcd2.right\n\n        x_853326 -> lessthan_f8f7b7.left\n        y_5390f5 -> lessthan_d9fcd2.left\n\n        lessthan_f8f7b7.result -> not_0f33e1.input\n        not_0f33e1.value -> and_4458b4.left\n        lessthan_d9fcd2.result -> and_4458b4.right\n\n        and_4458b4.result -> if_76f1a3.input\n        if_76f1a3.value -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 200, y: -50) modulo_8a9f65 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: 50) equal_3bdc98 root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_8a9f65.value\n        11 -> modulo_8a9f65.divisor\n\n        modulo_8a9f65.result -> equal_3bdc98.left\n        0 -> equal_3bdc98.right\n\n        equal_3bdc98.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 300) replace_str_9823 root.Std_k98ojb.Strings.Replace {}\n\n        input_ai -> replace_str_9823.input\n        search_ai -> replace_str_9823.search\n        replace_ai -> replace_str_9823.replace\n        replace_str_9823.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 100, y: 200) tolower_123abc root.Std_k98ojb.Strings.ToLower {}\n\n        input_ai -> tolower_123abc.input\n        tolower_123abc.output -> output_ai\n    }\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -200, y: -200) findunique_1a6eb3 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 200, y: -200) reduce_2b9c8a root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 400, y: -200) multiply_3c7f4e root.Std_k98ojb.Math.Mul {}\n\n        list_5fda54 -> findunique_1a6eb3.items\n        func() {\n            in(x: -50, y: 0, name: \"item\") property(Number) item_4c2a1e\n\n            out(x: 100, y: 0, name: \"out\") property(Bool) out_1e4b0d\n\n            instance(x: 50, y: -50) count_5c3b9f root.Std_k98ojb.List.Contains {}\n            instance(x: 50, y: 50) equal_6f3a1d root.Std_k98ojb.Logic.Equal {}\n\n            list_5fda54 -> count_5c3b9f.list\n            item_4c2a1e -> count_5c3b9f.item\n            count_5c3b9f.result -> equal_6f3a1d.left\n            1 -> equal_6f3a1d.right\n            equal_6f3a1d.result -> out_1e4b0d\n        } -> findunique_1a6eb3.handler\n\n        findunique_1a6eb3.output_list -> reduce_2b9c8a.items\n        func() {\n            in(x: 0, y: -50, name: \"accumulated\") property(Number) accumulated_8f7b3d\n            in(x: 0, y: 50, name: \"current\") property(Number) current_4d3e9a\n\n            out(x: 200, y: 0, name: \"out\") property(Number) out_9c4b2e\n\n            accumulated_8f7b3d -> multiply_3c7f4e.first\n            current_4d3e9a -> multiply_3c7f4e.second\n            multiply_3c7f4e.result -> out_9c4b2e\n        } -> reduce_2b9c8a.reducer\n\n        1 -> reduce_2b9c8a.initial\n        reduce_2b9c8a.result -> output_cffcc2\n        execute_19300c -> findunique_1a6eb3.execute\n        findunique_1a6eb3.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 98, y: 24) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 186, y: 128) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 268, y: 210) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        difference_1.difference -> concat.listA\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_2.difference -> concat.listB\n\n        concat.concatenated -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 302, y: -123) mod_6d831c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 492, y: -209) length_9b391d root.Std_k98ojb.List.Length {}\n        instance(x: 652, y: -199) slice_7e0d4b root.Std_k98ojb.List.Slice {}\n        instance(x: 649, y: -58) concat_3f08ad root.Std_k98ojb.List.Concat {}\n        instance(x: 445, y: -37) sub_1e0f5c root.Std_k98ojb.Math.Sub {}\n\n        list_48148f -> length_9b391d.list\n        length_9b391d.length -> mod_6d831c.divisor\n        n_68068c -> mod_6d831c.value\n        length_9b391d.length -> sub_1e0f5c.first\n        mod_6d831c.result -> sub_1e0f5c.second\n        sub_1e0f5c.result -> slice_7e0d4b.start\n        list_48148f -> slice_7e0d4b.list\n        slice_7e0d4b.slice -> concat_3f08ad.right\n        mod_6d831c.result -> slice_7e0d4b.end\n        list_48148f -> slice_7e0d4b.list\n        slice_7e0d4b.slice -> concat_3f08ad.left\n        concat_3f08ad.concatenated -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: 23) reduce_3c9b7b root.Std_k98ojb.Iteration.Reduce {}\n\n        0 -> reduce_3c9b7b.init\n        list_2c62ab -> reduce_3c9b7b.items\n        reduce_3c9b7b.result -> sum_2a848f\n\n        func() {\n            in(x: -148, y: -157, name: \"accumulated\") property(Number) accumulated_b46a1b\n            in(x: -148, y: -79, name: \"current\") property(Number) current_2d5e6f\n\n            out(x: 186, y: -118, name: \"result\") property(Number) result_a8d6e7\n\n            instance(x: 40, y: -118) add_ef7c2f root.Std_k98ojb.Math.Add {}\n            \n            accumulated_b46a1b -> add_ef7c2f.first\n            current_2d5e6f -> add_ef7c2f.second\n            add_ef7c2f.result -> result_a8d6e7\n        } -> reduce_3c9b7b.reducer\n    }\n\n    \n    instance(x: -189, y: 222) _sum_0a1b3c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 266, y: 34) lessthanorequal_6f23a1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 494, y: 23) modulo_a2c58e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 743, y: 95) equal_bfc90d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 232, y: -136) if_2d0bbd root.Std_k98ojb.Std.If {}\n        instance(x: 968, y: 145) if_39b1c3 root.Std_k98ojb.Std.If {}\n        instance(x: 85, y: 36) expression_3ad720 root.Std_k98ojb.Math.Expression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 473, y: -157) generaterange_54796a root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 646, y: -302) for_1f7a03 root.Std_k98ojb.Std.For {}\n\n        num_5c0677 -> expression_3ad720.num\n        expression_3ad720.result -> if_2d0bbd.predicate\n        if_2d0bbd.then -> continue_9a54bb\n        if_2d0bbd.then -> output_c457b3\n        if_2d0bbd.else -> generaterange_54796a.reset\n        2 -> generaterange_54796a.from\n        num_5c0677 -> generaterange_54796a.to\n        generaterange_54796a.list -> for_1f7a03.items\n        for_1f7a03.item -> modulo_a2c58e.divisor\n        num_5c0677 -> modulo_a2c58e.value\n        modulo_a2c58e.result -> equal_bfc90d.left\n        0 -> equal_bfc90d.right\n        equal_bfc90d.result -> if_39b1c3.predicate\n        if_39b1c3.then -> continue_9a54bb\n        if_39b1c3.then -> output_c457b3\n        if_39b1c3.else -> for_1f7a03.next\n        for_1f7a03.done -> continue_9a54bb\n        for_1f7a03.done -> output_c457b3\n        execute_b7b391 -> for_1f7a03.reset\n        if_2d0bbd.execute -> for_1f7a03.reset\n    }\n\n    \n\n    instance(x: -456, y: 123) num_prime_7d0e6f root.main.num_prime {}\n}"
            ]
        }
    }
]