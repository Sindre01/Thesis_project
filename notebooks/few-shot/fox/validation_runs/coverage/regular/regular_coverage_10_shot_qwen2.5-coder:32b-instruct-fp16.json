[
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8f4b1d\n        in(x: -269, y: -7, name: \"b\") property(Number) b_8c7e1a\n\n        out(x: 468, y: 103, name: \"result\") property(Bool) result_5f1b3d\n\n        instance(x: 209, y: 103) expression_832289 root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_8f4b1d -> expression_832289.gen_0\n        b_8c7e1a -> expression_832289.gen_1\n        expression_832289.result -> result_5f1b3d\n    }\n\n    \n\n    instance(x: -164, y: 18) OppositeSigns_0 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f6b1a\n\n        out(x: 975, y: 135, name: \"product\") property(Number) product_8d2c3e\n\n        instance(x: -40, y: 135) unique_numbers_8e4b3a root.Std_k98ojb.Iteration.Filter {\n            where: \"!seen.includes(it)\"\n        }\n        instance(x: 260, y: 135) reduce_7f8c2d root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * it\"\n        }\n        instance(x: 450, y: 135) empty_list_9a3b2c root.Std_k98ojb.List.Empty {}\n        instance(x: 600, y: 135) add_seen_7d8f2e root.Std_k98ojb.Iteration.Map {\n            handler: \"seen.push(it); return it\"\n        }\n        list_8f6b1a -> unique_numbers_8e4b3a.list\n        empty_list_9a3b2c.list -> add_seen_7d8f2e.context\n        unique_numbers_8e4b3a.output_list -> reduce_7f8c2d.items\n        1 -> reduce_7f8c2d.initialValue\n        reduce_7f8c2d.result -> product_8d2c3e\n        add_seen_7d8f2e.output_list -> unique_numbers_8e4b3a.context\n    }\n\n    \n\n    instance(x: -150, y: 135) product_unique_numbers_instance root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8f4b7a\n        in(x: -269, y: -14, name: \"list2\") property(List) list2_3d2c8e\n\n        out(x: 704, y: 58, name: \"result\") property(List) result_1f468d\n\n        instance(x: 196, y: -14) difference_8a3b22 root.Std_k98ojb.Sets.Difference {}\n        list1_8f4b7a -> difference_8a3b22.left\n        list2_3d2c8e -> difference_8a3b22.right\n\n        instance(x: 506, y: -14) difference_9b3c23 root.Std_k98ojb.Sets.Difference {}\n        list2_3d2c8e -> difference_9b3c23.left\n        list1_8f4b7a -> difference_9b3c23.right\n\n        instance(x: 650, y: -14) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        difference_8a3b22.difference -> concat_9b38cc.left\n        difference_9b3c23.difference -> concat_9b38cc.right\n\n        concat_9b38cc.result -> result_1f468d\n    }\n\n    \n\n    instance(x: -175, y: 100) find_dissimilar_elements_407e1b root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f4b1a\n        in(x: -269, y: -74, name: \"n\") property(Number) n_4d2c7e\n\n        out(x: 840, y: 135, name: \"rotated_list\") property(List) rotated_list_1f468d\n        out(x: 900, y: -74, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 200, y: 135) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 360, y: 135) modulo_4d2c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 520, y: 135) slice_5f6g7h root.Std_k98ojb.List.Slice {}\n        instance(x: 680, y: 135) slice_8i9j0k root.Std_k98ojb.List.Slice {}\n        instance(x: 840, y: -20) concat_1l2m3n root.Std_k98ojb.List.Concat {}\n\n        list_8f4b1a -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_4d2c7e.divisor\n        n_4d2c7e -> modulo_4d2c7e.value\n        modulo_4d2c7e.result -> slice_5f6g7h.start\n        modulo_4d2c7e.result -> slice_8i9j0k.end\n        list_8f4b1a -> slice_5f6g7h.list\n        list_8f4b1a -> slice_8i9j0k.list\n        0 -> slice_8i9j0k.start\n        -1 -> slice_5f6g7h.end\n        slice_5f6g7h.slice -> concat_1l2m3n.left\n        slice_8i9j0k.slice -> concat_1l2m3n.right\n        concat_1l2m3n.result -> rotated_list_1f468d\n    }\n\n    \n\n    instance(x: -174, y: 50) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -231, y: 45, name: \"a\") property(Number) a_8f0b9d\n        in(x: -236, y: -78, name: \"b\") property(Number) b_f4c7e8\n\n        out(x: 368, y: -11, name: \"result\") property(Bool) result_5a2f09\n\n        instance(x: 106, y: -10) and_e1d2b8 root.Std_k98ojb.Logic.And {}\n        instance(x: 34, y: -107) greaterthan_ae5c89 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 64, y: -107) greaterthan_2d4f1a root.Std_k98ojb.Math.GreaterThan {}\n\n        a_8f0b9d -> greaterthan_ae5c89.left\n        b_f4c7e8 -> greaterthan_ae5c89.right\n        b_f4c7e8 -> greaterthan_2d4f1a.left\n        a_8f0b9d -> greaterthan_2d4f1a.right\n\n        greaterthan_ae5c89.result -> and_e1d2b8.left\n        greaterthan_2d4f1a.result -> and_e1d2b8.right\n\n        instance(x: 36, y: -10) not_7d4f1a root.Std_k98ojb.Logic.Not {}\n        and_e1d2b8.result -> not_7d4f1a.input\n        not_7d4f1a.output -> result_5a2f09\n    }\n\n    \n\n    instance(x: -136, y: 10) OppositeSigns_ae5c89 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1050, y: 76) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n\n        number_ai -> modulo_7b3b7b.value\n        11 -> modulo_7b3b7b.divisor\n        modulo_7b3b7b.result -> equal_4e8c54.left\n        0 -> equal_4e8c54.right\n        equal_4e8c54.equal -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) divisibleBy11_node root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -250, y: 134, name: \"input\") property(String) input_3a\n        in(x: -285, y: -7, name: \"search\") property(String) search_3a\n        in(x: -296, y: -149, name: \"replace\") property(String) replace_3a\n\n        out(x: 400, y: -149, name: \"output\") property(String) output_3a\n\n        instance(x: 75, y: -82) replace_6b root.Std_k98ojb.Strings.Replace {}\n        input_3a -> replace_6b.input\n        search_3a -> replace_6b.search\n        replace_3a -> replace_6b.replace\n        replace_6b.value -> output_3a\n    }\n\n    \n\n    instance(x: -179, y: 40) Replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8d3b6a\n\n        out(x: 798, y: 135, name: \"product\") property(Number) product_2f1c5e\n\n        instance(x: -40, y: 135) unique_201051 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc, it) => acc.includes(it) ? acc : [...acc, it]\"\n        }\n        instance(x: 670, y: 135) product_4e8c54 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc, it) => acc * it\"\n        }\n\n        list_8d3b6a -> unique_201051.items\n        unique_201051.output_list -> product_4e8c54.items\n        1 -> product_4e8c54.initialValue\n        product_4e8c54.result -> product_2f1c5e\n    }\n\n    \n\n    instance(x: -179, y: 30) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -123, y: 45, name: \"list1\") property(List) list1_0a8b1f\n        in(x: -123, y: 167, name: \"list2\") property(List) list2_b9c2d3\n\n        out(x: 784, y: 58, name: \"dissimilar_elements\") property(List) dissimilar_elements_0d40f1\n\n        instance(x: 133, y: -131) difference_201051 root.Std_k98ojb.Sets.Difference {}\n        list1_0a8b1f -> difference_201051.left\n        list2_b9c2d3 -> difference_201051.right\n\n        instance(x: 476, y: -131) difference_201052 root.Std_k98ojb.Sets.Difference {}\n        list2_b9c2d3 -> difference_201052.left\n        list1_0a8b1f -> difference_201052.right\n\n        instance(x: 647, y: -131) concat_201053 root.Std_k98ojb.List.Concat {}\n        difference_201051.difference -> concat_201053.left\n        difference_201052.difference -> concat_201053.right\n\n        concat_201053.result -> dissimilar_elements_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) find_dissimilar_cbc0b6 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -350, y: 124, name: \"list\") property(List) list_8b1a8f\n        in(x: -367, y: -98, name: \"n\") property(Number) n_2c8d1e\n\n        out(x: 850, y: 124, name: \"rotated_list\") property(List) rotated_list_8b1a8f\n        out(x: 763, y: -98, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: -150, y: 124) length_9ab286 root.Std_k98ojb.List.Length {}\n        instance(x: -150, y: -98) modulo_3d7de6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 100, y: 124) slice_1e159f root.Std_k98ojb.List.Slice {}\n        instance(x: 100, y: -98) slice_27b8c3 root.Std_k98ojb.List.Slice {}\n        instance(x: 250, y: 124) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        list_8b1a8f -> length_9ab286.list\n        n_2c8d1e -> modulo_3d7de6.value\n        length_9ab286.length -> modulo_3d7de6.divisor\n        list_8b1a8f -> slice_1e159f.list\n        modulo_3d7de6.result -> slice_1e159f.start\n        -1 -> slice_1e159f.end\n        list_8b1a8f -> slice_27b8c3.list\n        0 -> slice_27b8c3.start\n        modulo_3d7de6.result -> slice_27b8c3.end\n        slice_1e159f.slice -> concat_9b38cc.left\n        slice_27b8c3.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> rotated_list_8b1a8f\n    }\n\n    \n\n    instance(x: -400, y: 15) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -250, y: 143, name: \"list\") property(List) list_1f846b\n        out(x: 678, y: 149, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: 205, y: 139) reduce_201051 root.Std_k98ojb.Iteration.Reduce {}\n        list_1f846b -> reduce_201051.items\n        func() {\n            in(x: -272, y: -69, name: \"acc\") property(Number) acc_42bc6f\n            in(x: -223, y: 18, name: \"item\") property(Number) item_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) add_4e8c54 root.Std_k98ojb.Math.Add {}\n            acc_42bc6f -> add_4e8c54.first\n            item_1d86d4 -> add_4e8c54.second\n            add_4e8c54.result -> result_e245cb\n        } -> reduce_201051.handler\n        0 -> reduce_201051.initialValue\n        reduce_201051.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: -179, y: 30) SumArray_cbc0b6 root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") is_prime {\n        in(x: -145, y: 203, name: \"n\") property(Number) n_4d8b9a\n        in(x: -176, y: -109, name: \"execute\") trigger() execute_4c8e8f\n\n        out(x: 1053, y: 203, name: \"is_prime\") property(Bool) is_prime_8d5b9a\n        out(x: 1076, y: -109, name: \"continue\") trigger() continue_4c8e8f\n\n        instance(x: -106, y: 23) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 54, y: 104) not_ea3a3a root.Std_k98ojb.Logic.Not {}\n        instance(x: 203, y: 167) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 543, y: 104) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 728, y: 167) not_61b38d root.Std_k98ojb.Logic.Not {}\n        setter(x: -245, y: 23, name: \"setter_41e4ad\") setter_41e4ad = is_prime\n        getter(x: 1007, y: 167, name: \"getter_38583a\") getter_38583a = is_prime\n        instance(x: 299, y: -24) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 300, y: -104) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        1 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        execute_4c8e8f -> setter_41e4ad.execute\n        n_4d8b9a -> ifexpression_3d7de6.gen_0\n        not_ea3a3a.result -> getter_38583a.value\n        ifexpression_3d7de6.then -> continue_4c8e8f\n        ifexpression_3d7de6.else -> for_8cb3f6.reset\n        2 -> add_b4554f.first\n        n_4d8b9a -> mul_2f9d09.first\n        mul_2f9d09.result -> lessthanorequal_f11fda.right\n        for_8cb3f6.item -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.next\n        n_4d8b9a -> for_8cb3f6.items\n        2 -> for_8cb3f6.start\n        lessthanorequal_f11fda.left -> for_8cb3f6.condition\n        for_8cb3f6.onItem -> ifexpression_5c4634.execute\n        n_4d8b9a -> ifexpression_5c4634.gen_0\n        for_8cb3f6.item -> ifexpression_5c4634.gen_1\n        not_61b38d.result -> getter_38583a.value\n        ifexpression_5c4634.then -> continue_4c8e8f\n        ifexpression_5c4634.else -> for_8cb3f6.next\n        1 -> not_61b38d.input\n    }\n\n    \n\n    instance(x: -207, y: 9) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8f4e1b\n        in(x: -269, y: -7, name: \"b\") property(Number) b_7c5d1c\n\n        out(x: 445, y: 103, name: \"result\") property(Bool) result_8a2f8e\n\n        instance(x: 169, y: -3) and_1b8b81 root.Std_k98ojb.Logic.And {}\n        instance(x: 47, y: -105) less_than_zero_a_2d1c54 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 163, y: -105) less_than_zero_b_2e1f8a root.Std_k98ojb.Math.LessThan {}\n        a_8f4e1b -> less_than_zero_a_2d1c54.left\n        b_7c5d1c -> less_than_zero_b_2e1f8a.left\n        0 -> less_than_zero_a_2d1c54.right\n        0 -> less_than_zero_b_2e1f8a.right\n        less_than_zero_a_2d1c54.result -> and_1b8b81.left\n        less_than_zero_b_2e1f8a.result -> logic_not_937d6b.input\n        instance(x: 103, y: -105) logic_not_937d6b root.Std_k98ojb.Logic.Not {}\n        and_1b8b81.right -> result_8a2f8e\n        logic_not_937d6b.output -> and_1b8b81.right\n    }\n\n    \n\n    instance(x: -140, y: 5) opposite_signs_node root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"result\") property(Bool) result_1f468d\n\n        instance(x: 177, y: 66) modulo_c1bb22 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_c1bb22.value\n        11 -> modulo_c1bb22.divisor\n        instance(x: 405, y: -37) ifexpression_8ba733 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_c1bb22.result -> ifexpression_8ba733.gen_0\n        ifexpression_8ba733.then -> result_1f468d\n        true -> result_1f468d\n        ifexpression_8ba733.else -> result_1f468d\n        false -> result_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) DivisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: -80, name: \"search\") property(String) search_9f7759\n        in(x: -400, y: 80, name: \"replace\") property(String) replace_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_9f7759 -> replace_7b3b7b.search\n        replace_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f8b4a\n\n        out(x: 796, y: 135, name: \"product\") property(Number) product_1d2c3e\n\n        instance(x: -105, y: 135) filter_8eae56 root.Std_k98ojb.Query.Filter {\n            where: \"!seen.includes(it)\"\n        }\n        instance(x: 472, y: 135) reduce_9ff257 root.Std_k98ojb.Iteration.Reduce {}\n        setter(x: -200, y: 60, name: \"setter_d09207\") setter_d09207 = seen\n        getter(x: -130, y: 210, name: \"getter_7f13b7\") getter_7f13b7 = seen\n        list_8f8b4a -> filter_8eae56.list\n        func() {\n            in(x: -272, y: -48, name: \"seen\") property(List) seen_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 196, y: -56) contains_9ff257 root.Std_k98ojb.List.Contains {}\n            seen_86a8fb -> contains_9ff257.list\n            filter_8eae56.item -> contains_9ff257.item\n            Logic.Not(contains_9ff257.result) -> output_8ba733\n        } -> filter_8eae56.handler\n        getter_7f13b7.value -> filter_8eae56.context\n        func() {\n            in(x: -272, y: -48, name: \"acc\") property(Number) acc_86a8fb\n            in(x: -223, y: 18, name: \"item\") property(Number) item_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) mul_4e8c54 root.Std_k98ojb.Math.Mul {}\n            acc_86a8fb -> mul_4e8c54.first\n            item_1d86d4 -> mul_4e8c54.second\n            mul_4e8c54.result -> result_e245cb\n        } -> reduce_9ff257.handler\n        filter_8eae56.output_list -> reduce_9ff257.items\n        1 -> reduce_9ff257.initialValue\n        reduce_9ff257.accumulated -> product_1d2c3e\n    }\n\n    \n\n    instance(x: -174, y: -68) unique_product_node root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8d2a7b\n        in(x: -240, y: -69, name: \"list2\") property(List) list2_6c7f8e\n\n        out(x: 784, y: 58, name: \"dissimilar_elements\") property(List) dissimilar_elements_1f468d\n\n        instance(x: 300, y: -69) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 153) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_8d2a7b -> difference_1.left\n        list2_6c7f8e -> difference_1.right\n\n        list2_6c7f8e -> difference_2.left\n        list1_8d2a7b -> difference_2.right\n\n        instance(x: 500, y: 45) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> dissimilar_elements_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) find_dissimilar_407e1b root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f5b8a\n        in(x: -267, y: -94, name: \"n\") property(Number) n_8d5c7e\n\n        out(x: 850, y: 135, name: \"rotated_list\") property(List) rotated_list_f4b2a9\n        out(x: 666, y: -94, name: \"continue\") trigger() continue_7d3c7f\n\n        instance(x: 180, y: 159) length_4e120a root.Std_k98ojb.List.Length {}\n        instance(x: 316, y: -110) modulo_1b3b5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 575, y: 154) slice_2a3c8e root.Std_k98ojb.List.Slice {}\n        instance(x: 623, y: -109) slice_5d3f9b root.Std_k98ojb.List.Slice {}\n        instance(x: 745, y: 2) concat_6a5c2e root.Std_k98ojb.List.Concat {}\n\n        list_8f5b8a -> length_4e120a.list\n        n_8d5c7e -> modulo_1b3b5f.value\n        length_4e120a.length -> modulo_1b3b5f.divisor\n        list_8f5b8a -> slice_2a3c8e.list\n        list_8f5b8a -> slice_5d3f9b.list\n        modulo_1b3b5f.result -> slice_2a3c8e.start\n        0 -> slice_5d3f9b.start\n        modulo_1b3b5f.result -> slice_5d3f9b.end\n        -1 -> slice_2a3c8e.end\n        slice_2a3c8e.slice -> concat_6a5c2e.right\n        slice_5d3f9b.slice -> concat_6a5c2e.left\n        concat_6a5c2e.result -> rotated_list_f4b2a9\n    }\n\n    \n\n    instance(x: -178, y: 10) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 127, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 103) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        0 -> reduce_7942d4.initialValue\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: -35, y: 16) SumArray_407e1b root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") is_prime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_48d6f1\n        in(x: -279, y: -134, name: \"execute\") trigger() execute_3a7b8c\n\n        out(x: 1047, y: 154, name: \"result\") property(Bool) result_36f8e1\n        out(x: 925, y: -107, name: \"continue\") trigger() continue_3d6c8a\n\n        instance(x: -108, y: 142) ifexpression_2b153a root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 75, y: -136) ifexpression_5d5c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 408, y: -136) ifexpression_5e2a87 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 212, y: 142) for_3d8c5f root.Std_k98ojb.Std.For {}\n        instance(x: 67, y: -289) ifexpression_5e6a87 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 341, y: -289) sub_3d8c5f root.Std_k98ojb.Math.Sub {}\n        instance(x: 67, y: -199) sqrt_3d8c5f root.Std_k98ojb.Math.Pow {\n            y: 0.5\n        }\n        setter(x: -247, y: 135, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 67, y: -399, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 124, y: -107) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 67, y: -107, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 249, y: -107, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 67, y: -199) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 249, y: -107, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 67, y: -199, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 249, y: -107) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 67, y: -199, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 249, y: -107, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 67, y: -199) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 249, y: -107, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 67, y: -199, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 249, y: -107) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 67, y: -199, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 249, y: -107, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 67, y: -199) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 249, y: -107, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 67, y: -199, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 249, y: -107) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 67, y: -199, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 249, y: -107, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 67, y: -199) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 249, y: -107, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 67, y: -199, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 249, y: -107) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 67, y: -199, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 249, y: -107, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 67, y: -199) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 249, y: -107, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 67, y: -199, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 249, y: -107) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: 67, y: -199, name: \"setter_3d8c5f\") setter_3d8c5f = is_prime\n        getter(x: 249, y: -107, name: \"getter_3d8c5f\") getter_3d8c5f = is_prime\n        instance(x: 67, y: -199) ifexpression_3d8c5f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\""
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8f4b2d\n        in(x: -269, y: -7, name: \"b\") property(Number) b_4c7e5f\n\n        out(x: 468, y: 103, name: \"result\") property(Bool) result_8a2c7d\n\n        instance(x: 129, y: -10) and_3b1c59 root.Std_k98ojb.Logic.And {}\n        instance(x: 46, y: 128) expression_8f1e1a root.Std_k98ojb.Math.Expression {\n            expression: \"a < 0\"\n        }\n        instance(x: 374, y: 125) expression_4d6c5b root.Std_k98ojb.Math.Expression {\n            expression: \"b > 0\"\n        }\n        instance(x: 129, y: -119) expression_3a5f8e root.Std_k98ojb.Math.Expression {\n            expression: \"a > 0\"\n        }\n        instance(x: 374, y: -116) expression_4d6c5b_copy root.Std_k98ojb.Math.Expression {\n            expression: \"b < 0\"\n        }\n        a_8f4b2d -> expression_8f1e1a.gen_0\n        b_4c7e5f -> expression_4d6c5b.gen_0\n        a_8f4b2d -> expression_3a5f8e.gen_0\n        b_4c7e5f -> expression_4d6c5b_copy.gen_0\n        expression_8f1e1a.result -> and_3b1c59.left\n        expression_4d6c5b.result -> and_3b1c59.right\n        expression_3a5f8e.result -> or_7a2c7d.left\n        expression_4d6c5b_copy.result -> or_7a2c7d.right\n        instance(x: 129, y: -238) or_7a2c7d root.Std_k98ojb.Logic.Or {}\n        and_3b1c59.result -> or_7a2c7d.left\n        or_7a2c7d.result -> result_8a2c7d\n    }\n\n    \n\n    instance(x: -164, y: 10) opposite_signs_node root.main.OppositeSigns {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f6a1b\n\n        out(x: 975, y: 135, name: \"product\") property(Number) product_1d2c3e\n\n        instance(x: -40, y: 135) unique_numbers_8e1b2c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -276, y: -12, name: \"acc\") property(List) acc_8f6a1b\n                in(x: -254, y: 130, name: \"item\") property(Number) item_9f7759\n\n                out(x: 274, y: 130, name: \"\") property(List) _7dd980\n\n                instance(x: 68, y: -12) contains_7b3b7b root.Std_k98ojb.List.Contains {}\n                item_9f7759 -> contains_7b3b7b.item\n                acc_8f6a1b -> contains_7b3b7b.list\n                func() {\n                    in(x: -240, y: 135, name: \"list\") property(List) list_8f6a1b\n\n                    out(x: 975, y: 135, name: \"\") property(List) _7dd980\n\n                    instance(x: 68, y: -12) add_7b3b7b root.Std_k98ojb.List.Add {}\n                    item_9f7759 -> add_7b3b7b.item\n                    acc_8f6a1b -> add_7b3b7b.list\n                    add_7b3b7b.listWithItem -> _7dd980\n                } -> contains_7b3b7b.ifFalse\n                func() {\n                    in(x: -240, y: 135, name: \"list\") property(List) list_8f6a1b\n\n                    out(x: 975, y: 135, name: \"\") property(List) _7dd980\n                    acc_8f6a1b -> _7dd980\n                } -> contains_7b3b7b.ifTrue\n                contains_7b3b7b.result -> _7dd980\n            }\n        }\n        instance(x: 452, y: 135) product_numbers_8e1b2c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -276, y: -12, name: \"acc\") property(Number) acc_8f6a1b\n                in(x: -254, y: 130, name: \"item\") property(Number) item_9f7759\n\n                out(x: 274, y: 130, name: \"\") property(Number) _7dd980\n\n                instance(x: 68, y: -12) mul_7b3b7b root.Std_k98ojb.Math.Mul {}\n                acc_8f6a1b -> mul_7b3b7b.first\n                item_9f7759 -> mul_7b3b7b.second\n                mul_7b3b7b.result -> _7dd980\n            }\n        }\n\n        1 -> product_numbers_8e1b2c.initialValue\n        list_8f6a1b -> unique_numbers_8e1b2c.items\n        [] -> unique_numbers_8e1b2c.initialValue\n        unique_numbers_8e1b2c.result -> product_numbers_8e1b2c.items\n        product_numbers_8e1b2c.result -> product_1d2c3e\n    }\n\n    \n\n    instance(x: -97, y: 45) product_unique_numbers_def9ac root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8f4b7a\n        in(x: -269, y: -14, name: \"list2\") property(List) list2_8d2c7e\n\n        out(x: 704, y: 53, name: \"output\") property(List) output_a5f1b3\n\n        instance(x: 169, y: -14) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 204, y: 174) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_8f4b7a -> difference_1.left\n        list2_8d2c7e -> difference_1.right\n\n        list2_8d2c7e -> difference_2.left\n        list1_8f4b7a -> difference_2.right\n\n        instance(x: 503, y: -6) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> output_a5f1b3\n    }\n\n    \n\n    instance(x: 40, y: -6) find_dissimilar_elements_instance root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f4b2a\n        in(x: -269, y: -74, name: \"n\") property(Number) n_4d2c7e\n\n        out(x: 840, y: 135, name: \"rotated_list\") property(List) rotated_list_8f4b2a\n        out(x: 960, y: -74, name: \"continue\") trigger() continue_8f4b2a\n\n        instance(x: 100, y: 35) length_8f4b2a root.Std_k98ojb.List.Length {}\n        instance(x: 250, y: 35) modulo_8f4b2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -10) slice_8f4b2a root.Std_k98ojb.List.Slice {}\n        instance(x: 600, y: -10) slice2_8f4b2a root.Std_k98ojb.List.Slice {}\n        instance(x: 750, y: 35) concat_8f4b2a root.Std_k98ojb.List.Concat {}\n\n        list_8f4b2a -> length_8f4b2a.list\n        length_8f4b2a.length -> modulo_8f4b2a.divisor\n        n_4d2c7e -> modulo_8f4b2a.value\n        modulo_8f4b2a.result -> slice_8f4b2a.start\n        list_8f4b2a -> slice_8f4b2a.list\n        -1 -> slice_8f4b2a.end\n        slice_8f4b2a.slice -> concat_8f4b2a.right\n\n        modulo_8f4b2a.result -> sub_8f4b2a.first\n        length_8f4b2a.length -> sub_8f4b2a.second\n        instance(x: 350, y: -10) sub_8f4b2a root.Std_k98ojb.Math.Sub {}\n        sub_8f4b2a.result -> slice2_8f4b2a.end\n\n        list_8f4b2a -> slice2_8f4b2a.list\n        0 -> slice2_8f4b2a.start\n        slice2_8f4b2a.slice -> concat_8f4b2a.left\n\n        concat_8f4b2a.result -> rotated_list_8f4b2a\n    }\n\n    \n\n    instance(x: -174, y: 30) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -235, y: 104, name: \"a\") property(Number) a_8f8d1b\n        in(x: -236, y: -179, name: \"b\") property(Number) b_6c4e3d\n\n        out(x: 564, y: -105, name: \"result\") property(Bool) result_8a2f83\n\n        instance(x: 154, y: -79) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_8f8d1b -> expression_7b3b7b.gen_0\n        b_6c4e3d -> expression_7b3b7b.gen_1\n        expression_7b3b7b.result -> result_8a2f83\n    }\n\n    \n\n    instance(x: -195, y: 14) OppositeSigns_0 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1050, y: 76) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n\n        number_ai -> modulo_7b3b7b.value\n        11 -> modulo_7b3b7b.divisor\n        modulo_7b3b7b.result -> equal_4e8c54.left\n        0 -> equal_4e8c54.right\n        equal_4e8c54.equal -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) divisibleby11_node root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -250, y: 134, name: \"input\") property(String) input_3a\n        in(x: -285, y: -7, name: \"search\") property(String) search_3a\n        in(x: -296, y: -149, name: \"replace\") property(String) replace_3a\n\n        out(x: 400, y: -149, name: \"output\") property(String) output_3a\n\n        instance(x: 75, y: -82) replace_6b root.Std_k98ojb.Strings.Replace {}\n        input_3a -> replace_6b.input\n        search_3a -> replace_6b.search\n        replace_3a -> replace_6b.replace\n        replace_6b.value -> output_3a\n    }\n\n    \n\n    instance(x: -179, y: 40) Replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8d3b5a\n\n        out(x: 769, y: 135, name: \"product\") property(Number) product_2f1c9e\n\n        instance(x: -40, y: 135) filter_201051 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 177, y: 135) reduce_66a2d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * item\"\n        }\n        list_8d3b5a -> filter_201051.items\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") contains_9cb360 root.Std_k98ojb.List.Contains {}\n            current_86a8fb -> contains_9cb360.item\n            getter(x: 24, y: -100) getter_7f13b7 root.main.UniqueProduct.getter_7f13b7 = seen\n            setter(x: 24, y: -150) setter_d09207 root.main.UniqueProduct.setter_d09207 = seen\n            getter_7f13b7.value -> contains_9cb360.list\n            !contains_9cb360.contains -> output_8ba733\n            current_86a8fb -> setter_d09207.item\n            setter_d09207.continue -> output_8ba733\n        } -> filter_201051.handler\n        instance(x: 40, y: -200) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        empty_ea3a3a.list -> setter_d09207.new_value\n        filter_201051.output_list -> reduce_66a2d4.items\n        1 -> reduce_66a2d4.initialValue\n        reduce_66a2d4.result -> product_2f1c9e\n    }\n\n    \n\n    instance(x: -173, y: 80) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -123, y: 45, name: \"list1\") property(List) list1_0a8b1f\n        in(x: -123, y: 167, name: \"list2\") property(List) list2_a9d2c7\n\n        out(x: 784, y: 58, name: \"newList\") property(List) newList_0d40f1\n\n        instance(x: 300, y: -100) difference_201051 root.Std_k98ojb.Sets.Difference {}\n        list1_0a8b1f -> difference_201051.left\n        list2_a9d2c7 -> difference_201051.right\n\n        instance(x: 300, y: 200) difference_201052 root.Std_k98ojb.Sets.Difference {}\n        list2_a9d2c7 -> difference_201052.left\n        list1_0a8b1f -> difference_201052.right\n\n        instance(x: 600, y: 50) concat_8815e6 root.Std_k98ojb.List.Concat {}\n        difference_201051.difference -> concat_8815e6.left\n        difference_201052.difference -> concat_8815e6.right\n\n        concat_8815e6.result -> newList_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) find_dissimilar_cbc0b6 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -350, y: 124, name: \"list\") property(List) list_8d2b2a\n        in(x: -367, y: -98, name: \"n\") property(Number) n_2c8e8f\n\n        out(x: 850, y: 124, name: \"rotated_list\") property(List) rotated_list_1b1a8d\n        out(x: 763, y: -98, name: \"continue\") trigger() continue_1e1f9c\n\n        instance(x: -105, y: 24) length_a5c759 root.Std_k98ojb.List.Length {}\n        instance(x: 105, y: -63) modulo_1d5a8a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 284, y: -108) sub_7c2f5e root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -63) slice_2d3a8b root.Std_k98ojb.List.Slice {}\n        instance(x: 454, y: 108) slice_7c8e4f root.Std_k98ojb.List.Slice {}\n        instance(x: 634, y: -108) concat_2d3a8b root.Std_k98ojb.List.Concat {}\n\n        list_8d2b2a -> length_a5c759.list\n        n_2c8e8f -> modulo_1d5a8a.value\n        length_a5c759.length -> modulo_1d5a8a.divisor\n        length_a5c759.length -> sub_7c2f5e.first\n        modulo_1d5a8a.result -> sub_7c2f5e.second\n        list_8d2b2a -> slice_2d3a8b.list\n        sub_7c2f5e.result -> slice_2d3a8b.start\n        -1 -> slice_2d3a8b.end\n        list_8d2b2a -> slice_7c8e4f.list\n        0 -> slice_7c8e4f.start\n        modulo_1d5a8a.result -> slice_7c8e4f.end\n        slice_2d3a8b.slice -> concat_2d3a8b.right\n        slice_7c8e4f.slice -> concat_2d3a8b.left\n        concat_2d3a8b.result -> rotated_list_1b1a8d\n    }\n\n    \n\n    instance(x: -96, y: 5) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -250, y: 143, name: \"list\") property(List) list_1f846b\n        out(x: 678, y: 149, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: 205, y: 139) reduce_201051 root.Std_k98ojb.Iteration.Reduce {}\n        list_1f846b -> reduce_201051.items\n        func() {\n            in(x: -272, y: -69, name: \"acc\") property(Number) acc_42bc6f\n            in(x: -223, y: 18, name: \"item\") property(Number) item_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) add_4e8c54 root.Std_k98ojb.Math.Add {}\n            acc_42bc6f -> add_4e8c54.first\n            item_1d86d4 -> add_4e8c54.second\n            add_4e8c54.result -> result_e245cb\n        } -> reduce_201051.handler\n        0 -> reduce_201051.initialValue\n        reduce_201051.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: -179, y: 30) SumArray_cbc0b6 root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") is_prime {\n        in(x: -145, y: 203, name: \"n\") property(Number) n_4d8b8a\n        in(x: -179, y: -63, name: \"execute\") trigger() execute_4c8e8f\n\n        out(x: 1005, y: 203, name: \"is_prime\") property(Bool) is_prime_8b1d6a\n        out(x: 978, y: -63, name: \"continue\") trigger() continue_4c8e8f\n\n        instance(x: 56, y: 203) ifexpression_b3d5f1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 276, y: 203) ifexpression_4a3e8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 500, y: 203) ifexpression_1d3f47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 2 == 0\"\n        }\n        instance(x: 696, y: 203) for_2c5a5e root.Std_k98ojb.Std.For {}\n        instance(x: 1047, y: 203) ifexpression_9d2f47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: -156, y: 142, name: \"setter_3c5e1a\") setter_3c5e1a = is_prime\n        getter(x: 987, y: 142, name: \"getter_3c5e1a\") getter_3c5e1a = is_prime\n        instance(x: 600, y: -10) add_4d3f47 root.Std_k98ojb.Math.Add {}\n        instance(x: 620, y: 10) mathexpression_1d3f47 root.Std_k98ojb.Math.Expression {\n            expression: \"sqrt(n)\"\n        }\n        setter(x: -156, y: -10, name: \"setter_3c5e1a\") setter_3c5e1a = is_prime\n        getter(x: 987, y: -10, name: \"getter_3c5e1a\") getter_3c5e1a = is_prime\n\n        n_4d8b8a -> ifexpression_b3d5f1.gen_0\n        false -> setter_3c5e1a.new_value\n        execute_4c8e8f -> setter_3c5e1a.execute\n        ifexpression_b3d5f1.then -> continue_4c8e8f\n        n_4d8b8a -> ifexpression_4a3e8c.gen_0\n        true -> setter_3c5e1a.new_value\n        ifexpression_b3d5f1.else -> setter_3c5e1a.execute\n        ifexpression_4a3e8c.then -> continue_4c8e8f\n        n_4d8b8a -> ifexpression_1d3f47.gen_0\n        false -> setter_3c5e1a.new_value\n        ifexpression_4a3e8c.else -> setter_3c5e1a.execute\n        ifexpression_1d3f47.then -> continue_4c8e8f\n        2 -> add_4d3f47.first\n        n_4d8b8a -> mathexpression_1d3f47.gen_0\n        mathexpression_1d3f47.result -> add_4d3f47.second\n        add_4d3f47.result -> for_2c5a5e.to\n        2 -> for_2c5a5e.from\n        n_4d8b8a -> ifexpression_9d2f47.gen_0\n        for_2c5a5e.item -> ifexpression_9d2f47.gen_1\n        false -> setter_3c5e1a.new_value\n        ifexpression_1d3f47.else -> for_2c5a5e.reset\n        ifexpression_9d2f47.then -> continue_4c8e8f\n        true -> setter_3c5e1a.new_value\n        ifexpression_9d2f47.else -> for_2c5a5e.next\n        getter_3c5e1a.value -> is_prime_8b1d6a\n        for_2c5a5e.done -> continue_4c8e8f\n    }\n\n    \n\n    instance(x: -190, y: 17) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8f4e1b\n        in(x: -269, y: -7, name: \"b\") property(Number) b_7c3d2c\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 800, y: 160, name: \"result\") property(Bool) result_b2508f\n        out(x: 837, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a ^ b) < 0\"\n        }\n        ifexpression_e38995.result -> result_b2508f\n        a_8f4e1b -> ifexpression_e38995.gen_0\n        b_7c3d2c -> ifexpression_e38995.gen_1\n        execute_12bf99 -> ifexpression_e38995.execute\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSigns_d6e930 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"result\") property(Bool) result_1f468d\n\n        instance(x: 177, y: 66) modulo_c1bb22 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_c1bb22.value\n        11 -> modulo_c1bb22.divisor\n        instance(x: 405, y: -37) ifexpression_8ba733 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_c1bb22.result -> ifexpression_8ba733.gen_0\n        ifexpression_8ba733.then -> result_1f468d\n        true -> result_1f468d\n        ifexpression_8ba733.else -> result_1f468d\n        false -> result_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) DivisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: -80, name: \"search\") property(String) search_9f7759\n        in(x: -400, y: 80, name: \"replace\") property(String) replace_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_9f7759 -> replace_7b3b7b.search\n        replace_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f8b0a\n\n        out(x: 769, y: 135, name: \"product\") property(Number) product_1d2c3e\n\n        instance(x: -45, y: 135) unique_8eae56 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -270, y: -48, name: \"acc\") property(List) acc_8ee839\n                in(x: -261, y: 18, name: \"item\") property(Number) item_8ee83a\n\n                out(x: 245, y: -50, name: \"\") property(List) _7dd980\n\n                instance(x: 106, y: -22) contains_584bfd root.Std_k98ojb.List.Contains {}\n                item_8ee83a -> contains_584bfd.item\n                acc_8ee839 -> contains_584bfd.list\n                instance(x: 106, y: -72) add_584bfd root.Std_k98ojb.List.Add {}\n                item_8ee83a -> add_584bfd.item\n                acc_8ee839 -> add_584bfd.list\n                instance(x: 106, y: -122) ifexpression_584bfd root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n                contains_584bfd.contains -> ifexpression_584bfd.gen_0\n                add_584bfd.listWithItem -> ifexpression_584bfd.gen_1\n                acc_8ee839 -> ifexpression_584bfd.gen_2\n                ifexpression_584bfd.then -> _7dd980\n                ifexpression_584bfd.else -> _7dd980\n            }\n        }\n        instance(x: 167, y: 135) product_8eae56 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -270, y: -48, name: \"acc\") property(Number) acc_8ee839\n                in(x: -261, y: 18, name: \"item\") property(Number) item_8ee83a\n\n                out(x: 245, y: -50, name: \"\") property(Number) _7dd980\n\n                instance(x: 106, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n                acc_8ee839 -> mul_584bfd.first\n                item_8ee83a -> mul_584bfd.second\n                mul_584bfd.result -> _7dd980\n            }\n        }\n\n        1 -> product_8eae56.initialValue\n        list_8f8b0a -> unique_8eae56.items\n        unique_8eae56.output_list -> product_8eae56.items\n        product_8eae56.result -> product_1d2c3e\n    }\n\n    \n\n    instance(x: -97, y: 40) UniqueProduct_49c6ac root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8d2a7b\n        in(x: -240, y: -69, name: \"list2\") property(List) list2_6c7f8e\n\n        out(x: 784, y: 58, name: \"dissimilar_elements\") property(List) dissimilar_elements_1f468d\n\n        instance(x: 300, y: -69) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 153) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_8d2a7b -> difference_1.left\n        list2_6c7f8e -> difference_1.right\n\n        list2_6c7f8e -> difference_2.left\n        list1_8d2a7b -> difference_2.right\n\n        instance(x: 500, y: 45) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> dissimilar_elements_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) find_dissimilar_407e1b root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f2b5a\n        in(x: -267, y: -94, name: \"n\") property(Number) n_3d7c7e\n\n        out(x: 810, y: 140, name: \"rotated_list\") property(List) rotated_list_35a7b2\n        out(x: 672, y: -94, name: \"continue\") trigger() continue_6d8c2f\n\n        instance(x: 149, y: -100) length_8e4d15 root.Std_k98ojb.List.Length {}\n        instance(x: 379, y: -100) modulo_4a7321 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 604, y: -100) sub_1e5f1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 795, y: -100) slice_32a7d1 root.Std_k98ojb.List.Slice {}\n        instance(x: 1046, y: -100) slice_1f2c7e root.Std_k98ojb.List.Slice {}\n        instance(x: 1258, y: -100) concat_3d2a59 root.Std_k98ojb.List.Concat {}\n\n        list_8f2b5a -> length_8e4d15.list\n        n_3d7c7e -> modulo_4a7321.value\n        length_8e4d15.length -> modulo_4a7321.divisor\n        modulo_4a7321.result -> sub_1e5f1c.second\n        length_8e4d15.length -> sub_1e5f1c.first\n        sub_1e5f1c.result -> slice_32a7d1.start\n        list_8f2b5a -> slice_32a7d1.list\n        -1 -> slice_32a7d1.end\n        modulo_4a7321.result -> slice_1f2c7e.end\n        list_8f2b5a -> slice_1f2c7e.list\n        0 -> slice_1f2c7e.start\n        slice_32a7d1.slice -> concat_3d2a59.right\n        slice_1f2c7e.slice -> concat_3d2a59.left\n        concat_3d2a59.result -> rotated_list_35a7b2\n    }\n\n    \n\n    instance(x: -204, y: 18) rotate_list_def6ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 127, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 103) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        0 -> reduce_7942d4.initialValue\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: -97, y: 35) SumArray_407e1b root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") is_prime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_3f8b4a\n        in(x: -276, y: -96, name: \"execute\") trigger() execute_1ddb9f\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Bool) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 395, y: -378) is_prime_96023e root.main.is_prime {}\n        instance(x: 411, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = is_prime\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = is_prime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = is_prime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        2 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> ifexpression_3d7de6.gen_0\n        2 -> add_88bb8a.first\n        div_547f34.second -> add_88bb8a.second\n        1 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_1ddb9f -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> is_prime_96023e.execute_cdac2a\n        is_prime_96023e.continue_d9efd7 -> setter_375321.execute\n        is_prime_96023e.output_732a8a -> output_732a8a\n        add_88bb8a.result -> div_547f34.first\n        n_3f8b4a -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.second\n        floor_61b38d.output -> modulo_adfa16.value\n        getter_38583a.value -> setter_375321.new_value\n        n_3f8b4a -> is_prime_96023e.n_3f8b4a\n    }\n\n    \n\n    instance(x: -176, y: -38) is_prime_86117a root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8f4b2d\n        in(x: -269, y: -7, name: \"b\") property(Number) b_4c7e5f\n\n        out(x: 468, y: 103, name: \"result\") property(Bool) result_8a2c7d\n\n        instance(x: 129, y: -10) and_3b1c59 root.Std_k98ojb.Logic.And {}\n        instance(x: 46, y: 128) expression_8f1e1a root.Std_k98ojb.Math.Expression {\n            expression: \"a < 0\"\n        }\n        instance(x: 374, y: 125) expression_4d6c5b root.Std_k98ojb.Math.Expression {\n            expression: \"b > 0\"\n        }\n        instance(x: 129, y: -119) expression_3a5f8e root.Std_k98ojb.Math.Expression {\n            expression: \"a > 0\"\n        }\n        instance(x: 374, y: -116) expression_4d6c5b_copy root.Std_k98ojb.Math.Expression {\n            expression: \"b < 0\"\n        }\n        a_8f4b2d -> expression_8f1e1a.gen_0\n        b_4c7e5f -> expression_4d6c5b.gen_0\n        a_8f4b2d -> expression_3a5f8e.gen_0\n        b_4c7e5f -> expression_4d6c5b_copy.gen_0\n        expression_8f1e1a.result -> and_3b1c59.left\n        expression_4d6c5b.result -> and_3b1c59.right\n        expression_3a5f8e.result -> or_7a2c7d.left\n        expression_4d6c5b_copy.result -> or_7a2c7d.right\n        instance(x: 129, y: -238) or_7a2c7d root.Std_k98ojb.Logic.Or {}\n        and_3b1c59.result -> or_7a2c7d.left\n        or_7a2c7d.result -> result_8a2c7d\n    }\n\n    \n\n    instance(x: -164, y: 10) opposite_signs_node root.main.OppositeSigns {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f6a1b\n\n        out(x: 975, y: 135, name: \"product\") property(Number) product_1d2c3e\n\n        instance(x: -40, y: 135) unique_numbers_8a5b2c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -276, y: -108, name: \"accumulator\") property(List) accumulator_1f4d3e\n                in(x: -268, y: 54, name: \"current\") property(Number) current_9b3a1c\n\n                out(x: 276, y: -108, name: \"accumulator\") property(List) accumulator_1f4d3e_out\n                out(x: 268, y: 54, name: \"current\") property(Number) current_9b3a1c_out\n\n                instance(x: -72, y: -108) contains_8b3a1c root.Std_k98ojb.List.Contains {}\n                instance(x: 60, y: -54) add_9b3a1c root.Std_k98ojb.List.Add {}\n\n                accumulator_1f4d3e -> contains_8b3a1c.list\n                current_9b3a1c -> contains_8b3a1c.item\n                contains_8b3a1c.contains -> Std.If {\n                    then: func() {\n                        accumulator_1f4d3e -> accumulator_1f4d3e_out\n                        current_9b3a1c -> current_9b3a1c_out\n                    },\n                    else: func() {\n                        current_9b3a1c -> add_9b3a1c.item\n                        accumulator_1f4d3e -> add_9b3a1c.list\n                        add_9b3a1c.listWithItem -> accumulator_1f4d3e_out\n                        current_9b3a1c -> current_9b3a1c_out\n                    }\n                }\n            },\n            initial: List.Empty {}\n        }\n\n        instance(x: 500, y: 135) product_calculation_8a5b2c root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -276, y: -108, name: \"accumulator\") property(Number) accumulator_1f4d3e\n                in(x: -268, y: 54, name: \"current\") property(Number) current_9b3a1c\n\n                out(x: 276, y: -108, name: \"accumulator\") property(Number) accumulator_1f4d3e_out\n                out(x: 268, y: 54, name: \"current\") property(Number) current_9b3a1c_out\n\n                instance(x: 0, y: -54) mul_9b3a1c root.Std_k98ojb.Math.Mul {}\n\n                accumulator_1f4d3e -> mul_9b3a1c.first\n                current_9b3a1c -> mul_9b3a1c.second\n                mul_9b3a1c.result -> accumulator_1f4d3e_out\n                current_9b3a1c -> current_9b3a1c_out\n            },\n            initial: 1\n        }\n\n        list_8f6a1b -> unique_numbers_8a5b2c.items\n        unique_numbers_8a5b2c.output_list -> product_calculation_8a5b2c.items\n        product_calculation_8a5b2c.accumulator -> product_1d2c3e\n    }\n\n    \n\n    instance(x: -97, y: 45) product_unique_numbers_def9ac root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8f4b7a\n        in(x: -269, y: -14, name: \"list2\") property(List) list2_8d2c7e\n\n        out(x: 704, y: 53, name: \"output\") property(List) output_a5f1b3\n\n        instance(x: 169, y: -14) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 204, y: 174) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_8f4b7a -> difference_1.left\n        list2_8d2c7e -> difference_1.right\n\n        list2_8d2c7e -> difference_2.left\n        list1_8f4b7a -> difference_2.right\n\n        instance(x: 503, y: -6) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> output_a5f1b3\n    }\n\n    \n\n    instance(x: 40, y: -6) find_dissimilar_elements_instance root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f4b2a\n        in(x: -269, y: -74, name: \"n\") property(Number) n_4d2c7e\n\n        out(x: 840, y: 135, name: \"rotated_list\") property(List) rotated_list_8f4b2a\n        out(x: 960, y: -74, name: \"continue\") trigger() continue_8f4b2a\n\n        instance(x: 100, y: 35) length_8f4b2a root.Std_k98ojb.List.Length {}\n        instance(x: 250, y: 35) modulo_8f4b2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -10) slice_8f4b2a root.Std_k98ojb.List.Slice {}\n        instance(x: 600, y: -10) slice2_8f4b2a root.Std_k98ojb.List.Slice {}\n        instance(x: 750, y: 35) concat_8f4b2a root.Std_k98ojb.List.Concat {}\n\n        list_8f4b2a -> length_8f4b2a.list\n        length_8f4b2a.length -> modulo_8f4b2a.divisor\n        n_4d2c7e -> modulo_8f4b2a.value\n        modulo_8f4b2a.result -> slice_8f4b2a.start\n        list_8f4b2a -> slice_8f4b2a.list\n        -1 -> slice_8f4b2a.end\n        slice_8f4b2a.slice -> concat_8f4b2a.right\n\n        modulo_8f4b2a.result -> sub_8f4b2a.first\n        length_8f4b2a.length -> sub_8f4b2a.second\n        instance(x: 350, y: -10) sub_8f4b2a root.Std_k98ojb.Math.Sub {}\n        sub_8f4b2a.result -> slice2_8f4b2a.end\n\n        list_8f4b2a -> slice2_8f4b2a.list\n        0 -> slice2_8f4b2a.start\n        slice2_8f4b2a.slice -> concat_8f4b2a.left\n\n        concat_8f4b2a.result -> rotated_list_8f4b2a\n    }\n\n    \n\n    instance(x: -174, y: 30) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -235, y: 104, name: \"a\") property(Number) a_8f8d1b\n        in(x: -236, y: -179, name: \"b\") property(Number) b_6c4e3d\n\n        out(x: 564, y: -105, name: \"result\") property(Bool) result_8a2f83\n\n        instance(x: 154, y: -79) expression_7b3b7b root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_8f8d1b -> expression_7b3b7b.gen_0\n        b_6c4e3d -> expression_7b3b7b.gen_1\n        expression_7b3b7b.result -> result_8a2f83\n    }\n\n    \n\n    instance(x: -195, y: 14) OppositeSigns_0 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -531, y: 2, name: \"number\") property(Number) number_ai\n        out(x: 340, y: 77, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) modulo_7b3b7b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1050, y: 76) equal_4e8c54 root.Std_k98ojb.Logic.Equal {}\n\n        number_ai -> modulo_7b3b7b.value\n        11 -> modulo_7b3b7b.divisor\n        modulo_7b3b7b.result -> equal_4e8c54.left\n        0 -> equal_4e8c54.right\n        equal_4e8c54.equal -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) divisibleby11_node root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") Replace {\n        in(x: -250, y: 134, name: \"input\") property(String) input_3a\n        in(x: -285, y: -7, name: \"search\") property(String) search_3a\n        in(x: -296, y: -149, name: \"replace\") property(String) replace_3a\n\n        out(x: 400, y: -149, name: \"output\") property(String) output_3a\n\n        instance(x: 75, y: -82) replace_6b root.Std_k98ojb.Strings.Replace {}\n        input_3a -> replace_6b.input\n        search_3a -> replace_6b.search\n        replace_3a -> replace_6b.replace\n        replace_6b.value -> output_3a\n    }\n\n    \n\n    instance(x: -179, y: 40) Replace_59bc6e root.main.Replace {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8d3b5a\n\n        out(x: 769, y: 135, name: \"product\") property(Number) product_2f1c9e\n\n        instance(x: -40, y: 135) filter_201051 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 177, y: 135) reduce_66a2d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * item\"\n        }\n        list_8d3b5a -> filter_201051.items\n        func() {\n            in(x: -272, y: -48, name: \"current\") property(Number) current_86a8fb\n\n            out(x: 405, y: -52, name: \"output\") property(Bool) output_8ba733\n\n            instance(x: 24, y: -54, stableId: \"dnbuj51ajiozratdcge1fc3s\") contains_9cb360 root.Std_k98ojb.List.Contains {}\n            current_86a8fb -> contains_9cb360.item\n            getter(x: 24, y: -100) getter_7f13b7 root.main.UniqueProduct.getter_7f13b7 = seen\n            setter(x: 24, y: -150) setter_d09207 root.main.UniqueProduct.setter_d09207 = seen\n            getter_7f13b7.value -> contains_9cb360.list\n            !contains_9cb360.contains -> output_8ba733\n            current_86a8fb -> setter_d09207.item\n            setter_d09207.continue -> output_8ba733\n        } -> filter_201051.handler\n        instance(x: 40, y: -200) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        empty_ea3a3a.list -> setter_d09207.new_value\n        filter_201051.output_list -> reduce_66a2d4.items\n        1 -> reduce_66a2d4.initialValue\n        reduce_66a2d4.result -> product_2f1c9e\n    }\n\n    \n\n    instance(x: -173, y: 80) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -123, y: 45, name: \"list1\") property(List) list1_0a8b1f\n        in(x: -123, y: 167, name: \"list2\") property(List) list2_a9d2c7\n\n        out(x: 784, y: 58, name: \"newList\") property(List) newList_0d40f1\n\n        instance(x: 300, y: -100) difference_201051 root.Std_k98ojb.Sets.Difference {}\n        list1_0a8b1f -> difference_201051.left\n        list2_a9d2c7 -> difference_201051.right\n\n        instance(x: 300, y: 200) difference_201052 root.Std_k98ojb.Sets.Difference {}\n        list2_a9d2c7 -> difference_201052.left\n        list1_0a8b1f -> difference_201052.right\n\n        instance(x: 600, y: 50) concat_8815e6 root.Std_k98ojb.List.Concat {}\n        difference_201051.difference -> concat_8815e6.left\n        difference_201052.difference -> concat_8815e6.right\n\n        concat_8815e6.result -> newList_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) find_dissimilar_cbc0b6 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -350, y: 124, name: \"list\") property(List) list_8d2b2a\n        in(x: -367, y: -98, name: \"n\") property(Number) n_2c8e8f\n\n        out(x: 850, y: 124, name: \"rotated_list\") property(List) rotated_list_1b1a8d\n        out(x: 763, y: -98, name: \"continue\") trigger() continue_1e1f9c\n\n        instance(x: -105, y: 24) length_a5c759 root.Std_k98ojb.List.Length {}\n        instance(x: 105, y: -63) modulo_1d5a8a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 284, y: -108) sub_7c2f5e root.Std_k98ojb.Math.Sub {}\n        instance(x: 454, y: -63) slice_2d3a8b root.Std_k98ojb.List.Slice {}\n        instance(x: 454, y: 108) slice_7c8e4f root.Std_k98ojb.List.Slice {}\n        instance(x: 634, y: -108) concat_2d3a8b root.Std_k98ojb.List.Concat {}\n\n        list_8d2b2a -> length_a5c759.list\n        n_2c8e8f -> modulo_1d5a8a.value\n        length_a5c759.length -> modulo_1d5a8a.divisor\n        length_a5c759.length -> sub_7c2f5e.first\n        modulo_1d5a8a.result -> sub_7c2f5e.second\n        list_8d2b2a -> slice_2d3a8b.list\n        sub_7c2f5e.result -> slice_2d3a8b.start\n        -1 -> slice_2d3a8b.end\n        list_8d2b2a -> slice_7c8e4f.list\n        0 -> slice_7c8e4f.start\n        modulo_1d5a8a.result -> slice_7c8e4f.end\n        slice_2d3a8b.slice -> concat_2d3a8b.right\n        slice_7c8e4f.slice -> concat_2d3a8b.left\n        concat_2d3a8b.result -> rotated_list_1b1a8d\n    }\n\n    \n\n    instance(x: -96, y: 5) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -250, y: 143, name: \"list\") property(List) list_1f846b\n        out(x: 678, y: 149, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: 205, y: 139) reduce_201051 root.Std_k98ojb.Iteration.Reduce {}\n        list_1f846b -> reduce_201051.items\n        func() {\n            in(x: -272, y: -69, name: \"acc\") property(Number) acc_42bc6f\n            in(x: -223, y: 18, name: \"item\") property(Number) item_1d86d4\n\n            out(x: 245, y: -54, name: \"result\") property(Number) result_e245cb\n\n            instance(x: -8, y: -53) add_4e8c54 root.Std_k98ojb.Math.Add {}\n            acc_42bc6f -> add_4e8c54.first\n            item_1d86d4 -> add_4e8c54.second\n            add_4e8c54.result -> result_e245cb\n        } -> reduce_201051.handler\n        0 -> reduce_201051.initialValue\n        reduce_201051.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: -179, y: 30) SumArray_cbc0b6 root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") is_prime {\n        in(x: -145, y: 203, name: \"n\") property(Number) n_4d8b8a\n        in(x: -179, y: -63, name: \"execute\") trigger() execute_4c8e8f\n\n        out(x: 1005, y: 203, name: \"is_prime\") property(Bool) is_prime_8b1d6a\n        out(x: 978, y: -63, name: \"continue\") trigger() continue_4c8e8f\n\n        instance(x: 56, y: 203) ifexpression_b3d5f1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 276, y: 203) ifexpression_4a3e8c root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 500, y: 203) ifexpression_1d3f47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 2 == 0\"\n        }\n        instance(x: 696, y: 203) for_2c5a5e root.Std_k98ojb.Std.For {}\n        instance(x: 1047, y: 203) ifexpression_9d2f47 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: -156, y: 142, name: \"setter_3c5e1a\") setter_3c5e1a = is_prime\n        getter(x: 987, y: 142, name: \"getter_3c5e1a\") getter_3c5e1a = is_prime\n        instance(x: 600, y: -10) add_4d3f47 root.Std_k98ojb.Math.Add {}\n        instance(x: 620, y: 10) mathexpression_1d3f47 root.Std_k98ojb.Math.Expression {\n            expression: \"sqrt(n)\"\n        }\n        setter(x: -156, y: -10, name: \"setter_3c5e1a\") setter_3c5e1a = is_prime\n        getter(x: 987, y: -10, name: \"getter_3c5e1a\") getter_3c5e1a = is_prime\n\n        n_4d8b8a -> ifexpression_b3d5f1.gen_0\n        false -> setter_3c5e1a.new_value\n        execute_4c8e8f -> setter_3c5e1a.execute\n        ifexpression_b3d5f1.then -> continue_4c8e8f\n        n_4d8b8a -> ifexpression_4a3e8c.gen_0\n        true -> setter_3c5e1a.new_value\n        ifexpression_b3d5f1.else -> setter_3c5e1a.execute\n        ifexpression_4a3e8c.then -> continue_4c8e8f\n        n_4d8b8a -> ifexpression_1d3f47.gen_0\n        false -> setter_3c5e1a.new_value\n        ifexpression_4a3e8c.else -> setter_3c5e1a.execute\n        ifexpression_1d3f47.then -> continue_4c8e8f\n        2 -> add_4d3f47.first\n        n_4d8b8a -> mathexpression_1d3f47.gen_0\n        mathexpression_1d3f47.result -> add_4d3f47.second\n        add_4d3f47.result -> for_2c5a5e.to\n        2 -> for_2c5a5e.from\n        n_4d8b8a -> ifexpression_9d2f47.gen_0\n        for_2c5a5e.item -> ifexpression_9d2f47.gen_1\n        false -> setter_3c5e1a.new_value\n        ifexpression_1d3f47.else -> for_2c5a5e.reset\n        ifexpression_9d2f47.then -> continue_4c8e8f\n        true -> setter_3c5e1a.new_value\n        ifexpression_9d2f47.else -> for_2c5a5e.next\n        getter_3c5e1a.value -> is_prime_8b1d6a\n        for_2c5a5e.done -> continue_4c8e8f\n    }\n\n    \n\n    instance(x: -190, y: 17) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8f4e1b\n        in(x: -269, y: -7, name: \"b\") property(Number) b_7c3d2c\n        in(x: -450, y: -114, name: \"execute\") trigger() execute_12bf99\n\n        out(x: 800, y: 160, name: \"result\") property(Bool) result_b2508f\n        out(x: 837, y: -114, name: \"continue\") trigger() continue_685c8f\n\n        instance(x: -105, y: -110) ifexpression_e38995 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a ^ b) < 0\"\n        }\n        ifexpression_e38995.result -> result_b2508f\n        a_8f4e1b -> ifexpression_e38995.gen_0\n        b_7c3d2c -> ifexpression_e38995.gen_1\n        execute_12bf99 -> ifexpression_e38995.execute\n    }\n\n    \n\n    instance(x: -174, y: -63) OppositeSigns_d6e930 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"result\") property(Bool) result_1f468d\n\n        instance(x: 177, y: 66) modulo_c1bb22 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_c1bb22.value\n        11 -> modulo_c1bb22.divisor\n        instance(x: 405, y: -37) ifexpression_8ba733 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_c1bb22.result -> ifexpression_8ba733.gen_0\n        ifexpression_8ba733.then -> result_1f468d\n        true -> result_1f468d\n        ifexpression_8ba733.else -> result_1f468d\n        false -> result_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) DivisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: -80, name: \"search\") property(String) search_9f7759\n        in(x: -400, y: 80, name: \"replace\") property(String) replace_f9110a\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_9f7759 -> replace_7b3b7b.search\n        replace_f9110a -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"calculates the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f8b0a\n\n        out(x: 769, y: 135, name: \"product\") property(Number) product_1d2c3e\n\n        instance(x: -45, y: 135) unique_8eae56 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -270, y: -48, name: \"acc\") property(List) acc_8ee839\n                in(x: -261, y: 18, name: \"item\") property(Number) item_8ee83a\n\n                out(x: 245, y: -50, name: \"\") property(List) _7dd980\n\n                instance(x: 106, y: -22) contains_584bfd root.Std_k98ojb.List.Contains {}\n                item_8ee83a -> contains_584bfd.item\n                acc_8ee839 -> contains_584bfd.list\n                instance(x: 106, y: -72) add_584bfd root.Std_k98ojb.List.Add {}\n                item_8ee83a -> add_584bfd.item\n                acc_8ee839 -> add_584bfd.list\n                instance(x: 106, y: -122) ifexpression_584bfd root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n                contains_584bfd.contains -> ifexpression_584bfd.gen_0\n                add_584bfd.listWithItem -> ifexpression_584bfd.gen_1\n                acc_8ee839 -> ifexpression_584bfd.gen_2\n                ifexpression_584bfd.then -> _7dd980\n                ifexpression_584bfd.else -> _7dd980\n            }\n        }\n        instance(x: 167, y: 135) product_8eae56 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -270, y: -48, name: \"acc\") property(Number) acc_8ee839\n                in(x: -261, y: 18, name: \"item\") property(Number) item_8ee83a\n\n                out(x: 245, y: -50, name: \"\") property(Number) _7dd980\n\n                instance(x: 106, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n                acc_8ee839 -> mul_584bfd.first\n                item_8ee83a -> mul_584bfd.second\n                mul_584bfd.result -> _7dd980\n            }\n        }\n\n        1 -> product_8eae56.initialValue\n        list_8f8b0a -> unique_8eae56.items\n        unique_8eae56.output_list -> product_8eae56.items\n        product_8eae56.result -> product_1d2c3e\n    }\n\n    \n\n    instance(x: -97, y: 40) UniqueProduct_49c6ac root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8d2a7b\n        in(x: -240, y: -69, name: \"list2\") property(List) list2_6c7f8e\n\n        out(x: 784, y: 58, name: \"dissimilar_elements\") property(List) dissimilar_elements_1f468d\n\n        instance(x: 300, y: -69) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 300, y: 153) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_8d2a7b -> difference_1.left\n        list2_6c7f8e -> difference_1.right\n\n        list2_6c7f8e -> difference_2.left\n        list1_8d2a7b -> difference_2.right\n\n        instance(x: 500, y: 45) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> dissimilar_elements_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) find_dissimilar_407e1b root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8f2b5a\n        in(x: -267, y: -94, name: \"n\") property(Number) n_3d7c7e\n\n        out(x: 810, y: 140, name: \"rotated_list\") property(List) rotated_list_35a7b2\n        out(x: 672, y: -94, name: \"continue\") trigger() continue_6d8c2f\n\n        instance(x: 149, y: -100) length_8e4d15 root.Std_k98ojb.List.Length {}\n        instance(x: 379, y: -100) modulo_4a7321 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 604, y: -100) sub_1e5f1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 795, y: -100) slice_32a7d1 root.Std_k98ojb.List.Slice {}\n        instance(x: 1046, y: -100) slice_1f2c7e root.Std_k98ojb.List.Slice {}\n        instance(x: 1258, y: -100) concat_3d2a59 root.Std_k98ojb.List.Concat {}\n\n        list_8f2b5a -> length_8e4d15.list\n        n_3d7c7e -> modulo_4a7321.value\n        length_8e4d15.length -> modulo_4a7321.divisor\n        modulo_4a7321.result -> sub_1e5f1c.second\n        length_8e4d15.length -> sub_1e5f1c.first\n        sub_1e5f1c.result -> slice_32a7d1.start\n        list_8f2b5a -> slice_32a7d1.list\n        -1 -> slice_32a7d1.end\n        modulo_4a7321.result -> slice_1f2c7e.end\n        list_8f2b5a -> slice_1f2c7e.list\n        0 -> slice_1f2c7e.start\n        slice_32a7d1.slice -> concat_3d2a59.right\n        slice_1f2c7e.slice -> concat_3d2a59.left\n        concat_3d2a59.result -> rotated_list_35a7b2\n    }\n\n    \n\n    instance(x: -204, y: 18) rotate_list_def6ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 127, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 103) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        0 -> reduce_7942d4.initialValue\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: -97, y: 35) SumArray_407e1b root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") is_prime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_3f8b4a\n        in(x: -276, y: -96, name: \"execute\") trigger() execute_1ddb9f\n\n        out(x: 1146, y: -647, name: \"continue\") trigger() continue_d9efd7\n        out(x: 1169, y: -269, name: \"output\") property(Bool) output_732a8a\n\n        instance(x: 80, y: -417) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 395, y: -378) is_prime_96023e root.main.is_prime {}\n        instance(x: 411, y: -127) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 656, y: -330) add_88bb8a root.Std_k98ojb.Math.Add {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = is_prime\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = is_prime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = is_prime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        2 -> modulo_adfa16.divisor\n        modulo_adfa16.result -> ifexpression_3d7de6.gen_0\n        2 -> add_88bb8a.first\n        div_547f34.second -> add_88bb8a.second\n        1 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_d9efd7\n        execute_1ddb9f -> setter_41e4ad.execute\n        ifexpression_3d7de6.else -> is_prime_96023e.execute_cdac2a\n        is_prime_96023e.continue_d9efd7 -> setter_375321.execute\n        is_prime_96023e.output_732a8a -> output_732a8a\n        add_88bb8a.result -> div_547f34.first\n        n_3f8b4a -> floor_61b38d.input\n        floor_61b38d.output -> div_547f34.second\n        floor_61b38d.output -> modulo_adfa16.value\n        getter_38583a.value -> setter_375321.new_value\n        n_3f8b4a -> is_prime_96023e.n_3f8b4a\n    }\n\n    \n\n    instance(x: -176, y: -38) is_prime_86117a root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8f4b1d\n        in(x: -269, y: -74, name: \"b\") property(Number) b_8c7e1a\n\n        out(x: 460, y: 135, name: \"result\") property(Bool) result_1f468d\n        out(x: 529, y: -110, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 100, y: 135) expression_3d7de6 root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_8f4b1d -> expression_3d7de6.gen_0\n        b_8c7e1a -> expression_3d7de6.gen_1\n        expression_3d7de6.result -> result_1f468d\n    }\n\n    \n\n    instance(x: -25, y: 19) OppositeSigns_407e1b root.main.OppositeSigns {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a7b3f\n\n        out(x: 964, y: 135, name: \"product\") property(Number) product_8d2c3e\n\n        instance(x: -10, y: 135) unique_numbers_8a7b3f root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -240, y: 135, name: \"acc\") property(List) acc_8a7b3f\n                in(x: -240, y: 135, name: \"item\") property(Number) item_8a7b3f\n\n                out(x: 964, y: 135, name: \"output\") property(List) output_8d2c3e\n\n                instance(x: -10, y: 135) contains_8a7b3f root.Std_k98ojb.List.Contains {}\n                item_8a7b3f -> contains_8a7b3f.item\n                acc_8a7b3f -> contains_8a7b3f.list\n\n                instance(x: -10, y: 135) ifexpression_8a7b3f root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n\n                instance(x: -10, y: 135) add_8a7b3f root.Std_k98ojb.List.Add {}\n                item_8a7b3f -> add_8a7b3f.item\n                acc_8a7b3f -> add_8a7b3f.list\n\n                contains_8a7b3f.contains -> ifexpression_8a7b3f.gen_0\n                ifexpression_8a7b3f.then -> acc_8a7b3f -> output_8d2c3e\n                ifexpression_8a7b3f.else -> add_8a7b3f.listWithItem -> output_8d2c3e\n            }\n        }\n\n        instance(x: 500, y: 135) product_calculation_8a7b3f root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -240, y: 135, name: \"acc\") property(Number) acc_8a7b3f\n                in(x: -240, y: 135, name: \"item\") property(Number) item_8a7b3f\n\n                out(x: 964, y: 135, name: \"output\") property(Number) output_8d2c3e\n\n                instance(x: -10, y: 135) mul_8a7b3f root.Std_k98ojb.Math.Mul {}\n                acc_8a7b3f -> mul_8a7b3f.first\n                item_8a7b3f -> mul_8a7b3f.second\n\n                mul_8a7b3f.result -> output_8d2c3e\n            }\n        }\n\n        list_8a7b3f -> unique_numbers_8a7b3f.items\n        List.Empty.list -> unique_numbers_8a7b3f.initialValue\n\n        unique_numbers_8a7b3f.outputList -> product_calculation_8a7b3f.items\n        1 -> product_calculation_8a7b3f.initialValue\n\n        product_calculation_8a7b3f.result -> product_8d2c3e\n    }\n\n    \n\n    instance(x: -97, y: -68) product_unique_numbers_def root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8a5b7f\n        in(x: -269, y: -104, name: \"list2\") property(List) list2_9d2c8e\n\n        out(x: 814, y: 34, name: \"output\") property(List) output_5b7f8a\n        out(x: 864, y: -104, name: \"continue\") trigger() continue_9d2c8e\n\n        instance(x: 133, y: 153) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 133, y: -104) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_8a5b7f -> difference_1.left\n        list2_9d2c8e -> difference_1.right\n\n        list2_9d2c8e -> difference_2.left\n        list1_8a5b7f -> difference_2.right\n\n        instance(x: 400, y: -30) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> output_5b7f8a\n    }\n\n    \n\n    instance(x: -174, y: 30) find_dissimilar_elements_instance root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a7b1f\n        in(x: -269, y: -114, name: \"n\") property(Number) n_1e19fb\n\n        out(x: 844, y: 135, name: \"rotated_list\") property(List) rotated_list_cbb7bd\n        out(x: 820, y: -114, name: \"continue\") trigger() continue_c95bcb\n\n        instance(x: 60, y: -114) modulo_3d7de6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 200, y: -114) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 350, y: -114) sub_14921d root.Std_k98ojb.Math.Sub {}\n        instance(x: 500, y: -114) slice_61b38d root.Std_k98ojb.List.Slice {}\n        instance(x: 700, y: -114) slice_2f9d09 root.Std_k98ojb.List.Slice {}\n        instance(x: 850, y: -114) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        list_8a7b1f -> length_5c4634.list\n        n_1e19fb -> modulo_3d7de6.value\n        length_5c4634.length -> modulo_3d7de6.divisor\n        length_5c4634.length -> sub_14921d.first\n        modulo_3d7de6.result -> sub_14921d.second\n        list_8a7b1f -> slice_61b38d.list\n        sub_14921d.result -> slice_61b38d.start\n        -1 -> slice_61b38d.end\n        list_8a7b1f -> slice_2f9d09.list\n        0 -> slice_2f9d09.start\n        modulo_3d7de6.result -> slice_2f9d09.end\n        slice_61b38d.slice -> concat_9b38cc.right\n        slice_2f9d09.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> rotated_list_cbb7bd\n\n    }\n\n    \n\n    instance(x: -150, y: 45) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -320, y: 154, name: \"a\") property(Number) a_8f4b6d\n        in(x: -327, y: -149, name: \"b\") property(Number) b_b1e45c\n        in(x: -510, y: 15, name: \"execute\") trigger() execute_2a8f8c\n\n        out(x: 658, y: 34, name: \"result\") property(Bool) result_8b9d7e\n        out(x: 657, y: -104, name: \"continue\") trigger() continue_b42a1f\n\n        instance(x: -124, y: 30) and_273c78 root.Std_k98ojb.Logic.And {}\n        instance(x: -168, y: -153) greaterthanorequal_ae35d2 root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 40, y: -152) lessthanorequal_7c5f8a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 64, y: -32) greaterthanorequal_c2d4e4 root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: 108, y: -35) lessthanorequal_7c9a2f root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_8f4b6d -> greaterthanorequal_ae35d2.left\n        b_b1e45c -> greaterthanorequal_ae35d2.right\n        a_8f4b6d -> lessthanorequal_7c5f8a.left\n        b_b1e45c -> lessthanorequal_7c5f8a.right\n        a_8f4b6d -> greaterthanorequal_c2d4e4.right\n        b_b1e45c -> greaterthanorequal_c2d4e4.left\n        a_8f4b6d -> lessthanorequal_7c9a2f.right\n        b_b1e45c -> lessthanorequal_7c9a2f.left\n\n        and_273c78.left -> result_8b9d7e\n        and_273c78.right -> continue_b42a1f\n\n        greaterthanorequal_ae35d2.result -> and_273c78.left\n        lessthanorequal_7c5f8a.result -> and_273c78.right\n        greaterthanorequal_c2d4e4.result -> and_273c78.left\n        lessthanorequal_7c9a2f.result -> and_273c78.right\n\n        execute_2a8f8c -> and_273c78.execute\n    }\n\n    \n\n    instance(x: -164, y: 15) OppositeSigns_0 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") is_divisible_by_11 {\n        in(x: -325, y: -40, name: \"number\") property(Number) number_a8e5f8\n        in(x: -329, y: 67, name: \"execute\") trigger() execute_b2d6c8\n\n        out(x: 1034, y: 13, name: \"result\") property(Bool) result_8a2b5e\n        out(x: 1029, y: -47, name: \"continue\") trigger() continue_a9d6f7\n\n        instance(x: -119, y: -143) modulo_2c5455 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 304, y: -115) ifexpression_b1a8e8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0\"\n        }\n        setter(x: -276, y: -245, name: \"setter_3f8c2d\") setter_3f8c2d = mod\n        getter(x: 100, y: -98, name: \"getter_6a5b2e\") getter_6a5b2e = mod\n        number_a8e5f8 -> modulo_2c5455.value\n        11 -> modulo_2c5455.divisor\n        setter_3f8c2d.continue -> ifexpression_b1a8e8.execute\n        execute_b2d6c8 -> setter_3f8c2d.execute\n        getter_6a5b2e.value -> ifexpression_b1a8e8.gen_0\n        modulo_2c5455.result -> setter_3f8c2d.new_value\n        ifexpression_b1a8e8.then -> continue_a9d6f7\n        ifexpression_b1a8e8.else -> continue_a9d6f7\n        ifexpression_b1a8e8.value -> result_8a2b5e\n    }\n\n    \n\n    instance(x: -340, y: 2) is_divisible_by_11_c42c3a root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces characters in a string\") ReplaceChars {\n        in(x: -435, y: 102, name: \"input\") property(String) input_1f846b\n        in(x: -427, y: -98, name: \"search\") property(String) search_c62075\n        in(x: -434, y: -220, name: \"replace\") property(String) replace_ae1f3c\n\n        out(x: 340, y: -110, name: \"output\") property(String) output_0d40f1\n\n        instance(x: 772, y: 76) replace_201051 root.Std_k98ojb.Strings.Replace {}\n        input_1f846b -> replace_201051.input\n        search_c62075 -> replace_201051.search\n        replace_ae1f3c -> replace_201051.replace\n        replace_201051.output -> output_0d40f1\n    }\n\n    \n\n    instance(x: -179, y: 30) ReplaceChars_cbc0b6 root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -240, y: 69, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 58, name: \"product\") property(Number) product_1f468d\n\n        instance(x: -61, y: 62) unique_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -305, y: -134, name: \"accumulator\") property(List) accumulator_9f1c3a\n                in(x: -306, y: 27, name: \"current\") property(Number) current_a8b3d9\n\n                out(x: 353, y: -104, name: \"result\") property(List) result_e245cb\n\n                instance(x: 24, y: -106, stableId: \"dnbuj51ajiozratdcge1fc3s\") contains_9cb360 root.Std_k98ojb.List.Contains {}\n                current_a8b3d9 -> contains_9cb360.item\n                accumulator_9f1c3a -> contains_9cb360.list\n                instance(x: 25, y: -47) ifexpression_4e8c54 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains == false\"\n                }\n                contains_9cb360.contains -> ifexpression_4e8c54.gen_0\n                instance(x: 12, y: -1) add_1d7f34 root.Std_k98ojb.List.Add {}\n                current_a8b3d9 -> add_1d7f34.item\n                accumulator_9f1c3a -> add_1d7f34.list\n                add_1d7f34.listWithItem -> ifexpression_4e8c54.then\n                accumulator_9f1c3a -> ifexpression_4e8c54.else\n                ifexpression_4e8c54.result -> result_e245cb\n            }\n        }\n        instance(x: 723, y: 62) reduce_8815e6 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -305, y: -134, name: \"accumulator\") property(Number) accumulator_9f1c3a\n                in(x: -306, y: 27, name: \"current\") property(Number) current_a8b3d9\n\n                out(x: 353, y: -104, name: \"result\") property(Number) result_e245cb\n\n                instance(x: 24, y: -106, stableId: \"dnbuj51ajiozratdcge1fc3s\") mul_9cb360 root.Std_k98ojb.Math.Mul {}\n                accumulator_9f1c3a -> mul_9cb360.first\n                current_a8b3d9 -> mul_9cb360.second\n                mul_9cb360.result -> result_e245cb\n            }\n        }\n        list_668bd2 -> unique_7942d4.items\n        1 -> unique_7942d4.initialValue\n        unique_7942d4.result -> reduce_8815e6.items\n        1 -> reduce_8815e6.initialValue\n        reduce_8815e6.result -> product_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) product_unique_407e1b root.main.product_unique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -135, y: 204, name: \"list1\") property(List) list1_8a3b7d\n        in(x: -169, y: -15, name: \"list2\") property(List) list2_e2e4f4\n\n        out(x: 817, y: 108, name: \"result\") property(List) result_1a3b7d\n\n        instance(x: 196, y: -15) difference_a9c321 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 498, y: 204) difference_7e4f82 root.Std_k98ojb.Sets.Difference {}\n\n        list1_8a3b7d -> difference_a9c321.left\n        list2_e2e4f4 -> difference_a9c321.right\n\n        list2_e2e4f4 -> difference_7e4f82.left\n        list1_8a3b7d -> difference_7e4f82.right\n\n        instance(x: 650, y: 108) concat_c9b2c2 root.Std_k98ojb.List.Concat {}\n\n        difference_a9c321.difference -> concat_c9b2c2.left\n        difference_7e4f82.difference -> concat_c9b2c2.right\n\n        concat_c9b2c2.result -> result_1a3b7d\n    }\n\n    \n\n    instance(x: -50, y: 65) find_dissimilar_5e4b3f root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: 20, name: \"list\") property(List) list_83a4e2\n        in(x: -196, y: -178, name: \"n\") property(Number) n_a9c3f8\n\n        out(x: 806, y: -154, name: \"rotated_list\") property(List) rotated_list_8a2b8e\n        out(x: 924, y: -177, name: \"continue\") trigger() continue_a3d4f6\n\n        instance(x: 240, y: -153) length_3c482a root.Std_k98ojb.List.Length {}\n        instance(x: 377, y: -214) modulo_4e3295 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 602, y: -213) sub_1f3d5a root.Std_k98ojb.Math.Sub {}\n        instance(x: 724, y: -153) slice_2c5e8c root.Std_k98ojb.List.Slice {}\n        instance(x: 603, y: -74) slice_4f6d5a root.Std_k98ojb.List.Slice {}\n        instance(x: 833, y: -104) concat_e23d5c root.Std_k98ojb.List.Concat {}\n\n        list_83a4e2 -> length_3c482a.list\n        n_a9c3f8 -> modulo_4e3295.value\n        length_3c482a.length -> modulo_4e3295.divisor\n        length_3c482a.length -> sub_1f3d5a.first\n        modulo_4e3295.result -> sub_1f3d5a.second\n        list_83a4e2 -> slice_2c5e8c.list\n        sub_1f3d5a.result -> slice_2c5e8c.start\n        -1 -> slice_2c5e8c.end\n        list_83a4e2 -> slice_4f6d5a.list\n        0 -> slice_4f6d5a.start\n        modulo_4e3295.result -> slice_4f6d5a.end\n        slice_2c5e8c.slice -> concat_e23d5c.right\n        slice_4f6d5a.slice -> concat_e23d5c.left\n        concat_e23d5c.result -> rotated_list_8a2b8e\n    }\n\n    \n\n    instance(x: -107, y: 9) rotate_list_b9ff6b root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -312, y: 54, name: \"list\") property(List) list_0a\n        out(x: 832, y: 74, name: \"sum\") property(Number) sum_0b\n\n        instance(x: 296, y: 116) reduce_1c root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n        list_0a -> reduce_1c.items\n        reduce_1c.result -> sum_0b\n    }\n\n    \n\n    instance(x: -243, y: 65) SumArray_0d root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -314, y: 205, name: \"n\") property(Number) n_6a8b4f\n        in(x: -297, y: 234, name: \"execute\") trigger() execute_e2c8e7\n\n        out(x: 741, y: 210, name: \"is_prime\") property(Bool) is_prime_6a5d2b\n        out(x: 954, y: 314, name: \"continue\") trigger() continue_8c5f6b\n\n        instance(x: -175, y: 105) ifexpression_ae2221 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 343, y: 140) ifexpression_6d2c2a root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 573, y: 152) ifexpression_1e432f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 2 == 0\"\n        }\n        instance(x: 806, y: 140) for_3d6c7a root.Std_k98ojb.Std.For {}\n        instance(x: 1055, y: 135) ifexpression_f3f2e2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: -467, y: 102, name: \"setter_3d3c3a\") setter_3d3c3a = is_prime\n        getter(x: -195, y: 185, name: \"getter_4f13b7\") getter_4f13b7 = is_prime\n        getter(x: 206, y: 140, name: \"getter_3c1a47\") getter_3c1a47 = is_prime\n        setter(x: 589, y: 104, name: \"setter_1d3b7f\") setter_1d3b7f = is_prime\n        getter(x: 621, y: 135, name: \"getter_4c1a47\") getter_4c1a47 = is_prime\n        setter(x: 980, y: 105, name: \"setter_5d3b7f\") setter_5d3b7f = is_prime\n        getter(x: 1026, y: 185, name: \"getter_4c1a48\") getter_4c1a48 = is_prime\n        instance(x: 925, y: -30) floor_1b2f7d root.Std_k98ojb.Math.Floor {}\n        instance(x: 962, y: 52) sqrt_3d3b7e root.Std_k98ojb.Math.Pow {}\n        instance(x: 498, y: -10) add_b4554f root.Std_k98ojb.Math.Add {}\n        instance(x: 563, y: -32) mathexpression_5c4634 root.Std_k98ojb.Math.Expression {\n            expression: \"sqrt(n)\"\n        }\n        instance(x: 1079, y: 25) add_b4554g root.Std_k98ojb.Math.Add {}\n        n_6a8b4f -> ifexpression_ae2221.gen_0\n        execute_e2c8e7 -> setter_3d3c3a.execute\n        false -> setter_3d3c3a.new_value\n        setter_3d3c3a.continue -> ifexpression_ae2221.execute\n        ifexpression_ae2221.then -> continue_8c5f6b\n        true -> setter_1d3b7f.new_value\n        setter_1d3b7f.continue -> continue_8c5f6b\n        ifexpression_ae2221.else -> ifexpression_6d2c2a.execute\n        n_6a8b4f -> ifexpression_6d2c2a.gen_0\n        ifexpression_6d2c2a.then -> continue_8c5f6b\n        true -> setter_3d3c3a.new_value\n        setter_3d3c3a.continue -> continue_8c5f6b\n        ifexpression_6d2c2a.else -> ifexpression_1e432f.execute\n        n_6a8b4f -> ifexpression_1e432f.gen_0\n        ifexpression_1e432f.then -> continue_8c5f6b\n        false -> setter_3d3c3a.new_value\n        setter_3d3c3a.continue -> continue_8c5f6b\n        ifexpression_1e432f.else -> for_3d6c7a.reset\n        2 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> for_3d6c7a.items\n        n_6a8b4f -> mathexpression_5c4634.gen_0\n        mathexpression_5c4634.result -> sqrt_3d3b7e.x\n        0.5 -> sqrt_3d3b7e.y\n        sqrt_3d3b7e.result -> floor_1b2f7d.input\n        floor_1b2f7d.output -> add_b4554g.first\n        1 -> add_b4554g.second\n        add_b4554g.result -> for_3d6c7a.items\n        for_3d6c7a.onItem -> ifexpression_f3f2e2.execute\n        n_6a8b4f -> ifexpression_f3f2e2.gen_0\n        for_3d6c7a.item -> ifexpression_f3f2e2.gen_1\n        ifexpression_f3f2e2.then -> setter_5d3b7f.execute\n        false -> setter_5d3b7f.new_value\n        setter_5d3b7f.continue -> continue_8c5f6b\n        ifexpression_f3f2e2.else -> for_3d6c7a.next\n        for_3d6c7a.done -> continue_8c5f6b\n        getter_4f13b7.value -> is_prime_6a5d2b\n    }\n\n    \n\n    instance(x: -190, y: 184) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if two integers have opposite signs\") OppositeSigns {\n        in(x: -240, y: 130, name: \"a\") property(Number) a_1f846b\n        in(x: -190, y: -75, name: \"b\") property(Number) b_c62075\n\n        out(x: 850, y: 100, name: \"result\") property(Bool) result_0d40f1\n\n        instance(x: 396, y: -21) xor_e38995 root.Std_k98ojb.Logic.Xor {}\n        instance(x: 176, y: -202) less_than_zero_a_9cb360 root.Std_k98ojb.Math.LessThan {}\n        instance(x: 246, y: -200) less_than_zero_b_4e8c54 root.Std_k98ojb.Math.LessThan {}\n\n        a_1f846b -> less_than_zero_a_9cb360.left\n        0 -> less_than_zero_a_9cb360.right\n\n        b_c62075 -> less_than_zero_b_4e8c54.left\n        0 -> less_than_zero_b_4e8c54.right\n\n        less_than_zero_a_9cb360.result -> xor_e38995.left\n        less_than_zero_b_4e8c54.result -> xor_e38995.right\n\n        xor_e38995.value -> result_0d40f1\n    }\n\n    \n\n    instance(x: -210, y: 60) opposite_signs_node root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if a number is divisible by 11.\") IsDivisibleBy11 {\n        in(x: -240, y: 50, name: \"number\") property(Number) number_6b655b\n        out(x: 793, y: 50, name: \"result\") property(Bool) result_f3db9f\n\n        instance(x: 182, y: -40) modulo_5c4634 root.Std_k98ojb.Math.Modulo {}\n        number_6b655b -> modulo_5c4634.value\n        11 -> modulo_5c4634.divisor\n        instance(x: 526, y: -40) equal_b720d7 root.Std_k98ojb.Logic.Equal {}\n        modulo_5c4634.result -> equal_b720d7.left\n        0 -> equal_b720d7.right\n        equal_b720d7.value -> result_f3db9f\n    }\n\n    \n\n    instance(x: -187, y: -33) is_divisible_by_11_def9ac root.main.IsDivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -431, y: 25, name: \"input\") property(String) input_6f1a1e\n        in(x: -380, y: -75, name: \"search\") property(String) search_a9d2c1\n        in(x: -384, y: 125, name: \"replace\") property(String) replace_f9b269\n\n        out(x: 433, y: 25, name: \"output\") property(String) output_4a0c7f\n\n        instance(x: -138, y: 26) replace_4e6a7d root.Std_k98ojb.Strings.Replace {}\n        input_6f1a1e -> replace_4e6a7d.input\n        search_a9d2c1 -> replace_4e6a7d.search\n        replace_f9b269 -> replace_4e6a7d.replace\n        replace_4e6a7d.value -> output_4a0c7f\n    }\n\n    \n\n    instance(x: -355, y: 12) ReplaceChars_8f9e7a root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -150, y: 42, name: \"list\") property(List) list_3e8d1f\n\n        out(x: 679, y: 14, name: \"product\") property(Number) product_9a2b3c\n\n        instance(x: 157, y: -8) flatten_340261 root.Std_k98ojb.List.Flatten {}\n        instance(x: 260, y: -11) unique_8f7e5d root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"if(List.Contains(acc, curr), acc, List.Add(acc, curr))\"\n        }\n        instance(x: 344, y: 6) product_c0c82a root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * curr\"\n        }\n        list_3e8d1f -> flatten_340261.list\n        flatten_340261.flattenedList -> unique_8f7e5d.items\n        unique_8f7e5d.output_list -> product_c0c82a.items\n        List.Empty.list -> unique_8f7e5d.initialValue\n        1 -> product_c0c82a.initialValue\n        product_c0c82a.output_value -> product_9a2b3c\n    }\n\n    \n\n    instance(x: -46, y: 5) unique_product_node root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -140, y: 325, name: \"list1\") property(List) list1_3a1f8d\n        in(x: -149, y: 67, name: \"list2\") property(List) list2_3b1e8e\n\n        out(x: 807, y: 57, name: \"output\") property(List) output_a2a1f1\n\n        instance(x: 289, y: 46) difference_477d8c root.Std_k98ojb.Sets.Difference {}\n        list1_3a1f8d -> difference_477d8c.left\n        list2_3b1e8e -> difference_477d8c.right\n\n        instance(x: 506, y: 46) difference_f98c2e root.Std_k98ojb.Sets.Difference {}\n        list2_3b1e8e -> difference_f98c2e.left\n        list1_3a1f8d -> difference_f98c2e.right\n\n        instance(x: 705, y: 46) concat_b7c1a5 root.Std_k98ojb.List.Concat {}\n        difference_477d8c.difference -> concat_b7c1a5.left\n        difference_f98c2e.difference -> concat_b7c1a5.right\n\n        concat_b7c1a5.result -> output_a2a1f1\n    }\n\n    \n\n    instance(x: -103, y: 164) find_dissimilar_1d8b5f root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -135, y: 40, name: \"list\") property(List) list_a2\n        in(x: -187, y: -96, name: \"rotate_by\") property(Number) rotate_by_3c\n\n        out(x: 759, y: -111, name: \"rotated_list\") property(List) rotated_list_e0\n\n        instance(x: -42, y: -208) length_a7 root.Std_k98ojb.List.Length {}\n        instance(x: 386, y: -256) modulo_5f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 614, y: -241) generaterange_b0 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 793, y: -313) map_c5 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 927, y: -64) slice_7e root.Std_k98ojb.List.Slice {}\n\n        list_a2 -> length_a7.list\n        rotate_by_3c -> modulo_5f.value\n        length_a7.length -> modulo_5f.divisor\n        modulo_5f.result -> generaterange_b0.from\n        length_a7.length -> generaterange_b0.to\n        generaterange_b0.list -> map_c5.items\n\n        func() {\n            in(x: -329, y: -448, name: \"index\") property(Number) index_6f\n\n            out(x: 213, y: -474, name: \"new_index\") property(Number) new_index_ae\n            instance(x: -205, y: -496) sub_7a root.Std_k98ojb.Math.Sub {}\n            instance(x: -184, y: -389) add_eb root.Std_k98ojb.Math.Add {}\n\n            length_a7.length -> add_eb.first\n            index_6f -> sub_7a.second\n            modulo_5f.result -> sub_7a.first\n            sub_7a.result -> add_eb.second\n\n            add_eb.result -> new_index_ae\n        } -> map_c5.handler\n\n        map_c5.output_list -> slice_7e.start\n        list_a2 -> slice_7e.list\n        modulo_5f.result -> slice_7e.end\n        slice_7e.slice -> rotated_list_e0\n    }\n\n    \n\n    instance(x: -148, y: -96) rotate_list_4d root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -314, y: 20, name: \"list\") property(List) list_5e4d8b\n\n        out(x: 742, y: 20, name: \"sum\") property(Number) sum_b69c3a\n\n        instance(x: 156, y: -113) reduce_74f5d9 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n        list_5e4d8b -> reduce_74f5d9.items\n        reduce_74f5d9.result -> sum_b69c3a\n    }\n\n    \n\n    instance(x: -100, y: 20) SumArray_f0b9a5 root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -145, y: 20, name: \"n\") property(Number) n_2a8d4b\n        in(x: -139, y: -67, name: \"execute\") trigger() execute_a9c8e9\n\n        out(x: 759, y: 129, name: \"output\") property(Bool) output_e6088a\n        out(x: 743, y: -121, name: \"continue\") trigger() continue_26c2b5\n\n        instance(x: 216, y: 20) ifexpression_d79d3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n < 2\"\n        }\n        instance(x: 436, y: -94) for_1475a8 root.Std_k98ojb.Std.For {}\n        instance(x: 300, y: 168) ifexpression_4e2d9c root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: -79, y: -50, name: \"setter_7f3a27\") setter_7f3a27 = is_prime\n        getter(x: -146, y: 187, name: \"getter_c4b1d7\") getter_c4b1d7 = is_prime\n        getter(x: 509, y: -68, name: \"getter_32c32c\") getter_32c32c = is_prime\n        setter(x: 622, y: 10) setter_b4b1a7 = is_prime\n        instance(x: 559, y: -182) add_c1e6f9 root.Std_k98ojb.Math.Add {}\n        instance(x: 236, y: 282) generaterange_0d419c root.Std_k98ojb.List.GenerateRange {}\n        setter(x: -75, y: -173, name: \"setter_a3f68a\") setter_a3f68a = is_prime\n        getter(x: -124, y: 207, name: \"getter_4d9e1a\") getter_4d9e1a = is_prime\n        getter(x: 539, y: -154, name: \"getter_c8b6c4\") getter_c8b6c4 = is_prime\n        instance(x: 207, y: 31) sub_4d37e8 root.Std_k98ojb.Math.Sub {}\n        n_2a8d4b -> ifexpression_d79d3f.gen_0\n        for_1475a8.item -> ifexpression_4e2d9c.gen_0\n        1 -> sub_4d37e8.second\n        sub_4d37e8.result -> generaterange_0d419c.to\n        n_2a8d4b -> add_c1e6f9.first\n        1 -> add_c1e6f9.second\n        add_c1e6f9.result -> generaterange_0d419c.from\n        getter_c8b6c4.value -> ifexpression_4e2d9c.gen_1\n        1 -> setter_a3f68a.new_value\n        setter_a3f68a.continue -> execute_a9c8e9\n        ifexpression_d79d3f.then -> setter_b4b1a7.execute\n        false -> setter_b4b1a7.new_value\n        n_2a8d4b -> getter_c8b6c4.value\n        getter_4d9e1a.value -> generaterange_0d419c.to\n        ifexpression_d79d3f.else -> for_1475a8.reset\n        generaterange_0d419c.list -> for_1475a8.items\n        ifexpression_4e2d9c.then -> setter_b4b1a7.execute\n        false -> setter_b4b1a7.new_value\n        for_1475a8.onItem -> ifexpression_4e2d9c.execute\n        n_2a8d4b -> getter_c4b1d7.value\n        for_1475a8.done -> continue_26c2b5\n        getter_c4b1d7.value -> output_e6088a\n    }\n\n    \n\n    instance(x: -39, y: 11) is_prime_def8f3 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8e5b2f\n        in(x: -269, y: -7, name: \"b\") property(Number) b_4d2c8f\n\n        out(x: 468, y: 103, name: \"result\") property(Bool) result_8e5b2f\n        out(x: 519, y: -7, name: \"continue\") trigger() continue_8e5b2f\n\n        instance(x: -146, y: 103) expression_8e5b2f root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_8e5b2f -> expression_8e5b2f.gen_0\n        b_4d2c8f -> expression_8e5b2f.gen_1\n        expression_8e5b2f.result -> result_8e5b2f\n    }\n\n    \n\n    instance(x: -36, y: 79) OppositeSigns_8e5b2f root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a7b3f\n\n        out(x: 964, y: 135, name: \"product\") property(Number) product_8d2c3e\n\n        instance(x: -10, y: 135) unique_numbers_8d2c3e root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -46, y: -70, name: \"accumulator\") property(List) accumulator_8d2c3e\n                in(x: -51, y: 10, name: \"current\") property(Number) current_8d2c3e\n\n                out(x: 49, y: -69, name: \"output\") property(List) output_8d2c3e\n\n                instance(x: 78, y: -58) contains_8d2c3e root.Std_k98ojb.List.Contains {}\n                instance(x: 104, y: -16) add_8d2c3e root.Std_k98ojb.List.Add {}\n\n                accumulator_8d2c3e -> contains_8d2c3e.list\n                current_8d2c3e -> contains_8d2c3e.item\n\n                instance(x: 140, y: -56) ifexpression_8d2c3e root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n\n                contains_8d2c3e.contains -> ifexpression_8d2c3e.gen_0\n\n                func() {\n                    in(x: 176, y: -54, name: \"accumulator\") property(List) accumulator_8d2c3e\n                    out(x: 212, y: -54, name: \"output\") property(List) output_8d2c3e\n\n                    accumulator_8d2c3e -> output_8d2c3e\n                } -> ifexpression_8d2c3e.then\n\n                func() {\n                    in(x: 176, y: -54, name: \"accumulator\") property(List) accumulator_8d2c3e\n                    in(x: 190, y: -54, name: \"current\") property(Number) current_8d2c3e\n\n                    out(x: 212, y: -54, name: \"output\") property(List) output_8d2c3e\n\n                    accumulator_8d2c3e -> add_8d2c3e.list\n                    current_8d2c3e -> add_8d2c3e.item\n\n                    add_8d2c3e.listWithItem -> output_8d2c3e\n                } -> ifexpression_8d2c3e.else\n\n                ifexpression_8d2c3e.value -> output_8d2c3e\n            }\n        }\n\n        instance(x: 504, y: 135) reduce_product_8d2c3e root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -46, y: -70, name: \"accumulator\") property(Number) accumulator_8d2c3e\n                in(x: -51, y: 10, name: \"current\") property(Number) current_8d2c3e\n\n                out(x: 49, y: -69, name: \"output\") property(Number) output_8d2c3e\n\n                instance(x: 78, y: -58) mul_8d2c3e root.Std_k98ojb.Math.Mul {}\n\n                accumulator_8d2c3e -> mul_8d2c3e.first\n                current_8d2c3e -> mul_8d2c3e.second\n\n                mul_8d2c3e.result -> output_8d2c3e\n            }\n        }\n\n        list_8a7b3f -> unique_numbers_8d2c3e.items\n        1 -> unique_numbers_8d2c3e.initialValue\n        unique_numbers_8d2c3e.output_list -> reduce_product_8d2c3e.items\n        1 -> reduce_product_8d2c3e.initialValue\n        reduce_product_8d2c3e.result -> product_8d2c3e\n    }\n\n    \n\n    instance(x: -97, y: 65) product_unique_numbers_def9ac root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8a5b7f\n        in(x: -269, y: -104, name: \"list2\") property(List) list2_1d2c8e\n\n        out(x: 814, y: 30, name: \"output\") property(List) output_5b7f8a\n        out(x: 964, y: -104, name: \"continue\") trigger() continue_9a8d7c\n\n        instance(x: 204, y: 138) difference_8e7b9c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 562, y: -104) difference_9f8a7b root.Std_k98ojb.Sets.Difference {}\n\n        list1_8a5b7f -> difference_8e7b9c.left\n        list2_1d2c8e -> difference_8e7b9c.right\n\n        list2_1d2c8e -> difference_9f8a7b.left\n        list1_8a5b7f -> difference_9f8a7b.right\n\n        instance(x: 640, y: -38) concat_7b8c9d root.Std_k98ojb.List.Concat {}\n\n        difference_8e7b9c.difference -> concat_7b8c9d.left\n        difference_9f8a7b.difference -> concat_7b8c9d.right\n\n        concat_7b8c9d.result -> output_5b7f8a\n    }\n\n    \n\n    instance(x: -104, y: 23) find_dissimilar_elements_6e7f8a root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a1b3f\n        in(x: -269, y: -74, name: \"n\") property(Number) n_4d2c7e\n\n        out(x: 840, y: 135, name: \"rotated_list\") property(List) rotated_list_1b2a3f\n        out(x: 960, y: -74, name: \"continue\") trigger() continue_8d7c9e\n\n        instance(x: 100, y: 50) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 250, y: 50) modulo_4d5e6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -74) sub_7g8h9i root.Std_k98ojb.Math.Sub {}\n        instance(x: 550, y: 135) slice_2j3k4l root.Std_k98ojb.List.Slice {}\n        instance(x: 700, y: -74) slice_5m6n7o root.Std_k98ojb.List.Slice {}\n        instance(x: 850, y: 135) concat_8p9q0r root.Std_k98ojb.List.Concat {}\n\n        list_8a1b3f -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_4d5e6f.value\n        n_4d2c7e -> modulo_4d5e6f.divisor\n        length_1a2b3c.length -> sub_7g8h9i.first\n        modulo_4d5e6f.result -> sub_7g8h9i.second\n        list_8a1b3f -> slice_2j3k4l.list\n        sub_7g8h9i.result -> slice_2j3k4l.start\n        -1 -> slice_2j3k4l.end\n        list_8a1b3f -> slice_5m6n7o.list\n        0 -> slice_5m6n7o.start\n        modulo_4d5e6f.result -> slice_5m6n7o.end\n        slice_2j3k4l.slice -> concat_8p9q0r.right\n        slice_5m6n7o.slice -> concat_8p9q0r.left\n        concat_8p9q0r.result -> rotated_list_1b2a3f\n\n        continue_8d7c9e\n    }\n\n    \n\n    instance(x: -174, y: 30) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -324, y: 105, name: \"a\") property(Number) a_8f8d5b\n        in(x: -336, y: -97, name: \"b\") property(Number) b_c33e3c\n        in(x: -462, y: -110, name: \"execute\") trigger() execute_2a2f8d\n\n        out(x: 515, y: -109, name: \"continue\") trigger() continue_8b721e\n        out(x: 346, y: 115, name: \"result\") property(Bool) result_a96a7f\n\n        instance(x: -129, y: -109) and_c9d562 root.Std_k98ojb.Logic.And {}\n        instance(x: -43, y: 115) ifexpression_4e43d2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < 0\"\n        }\n        instance(x: -137, y: -26) ifexpression_4123f8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"b > 0\"\n        }\n        instance(x: -150, y: 203) ifexpression_ba8e8a root.Std_k98ojb.Std.IfExpression {\n            expression: \"a > 0\"\n        }\n        instance(x: -146, y: 327) ifexpression_7d7c9f root.Std_k98ojb.Std.IfExpression {\n            expression: \"b < 0\"\n        }\n        and_c9d562.result -> result_a96a7f\n        a_8f8d5b -> ifexpression_4e43d2.gen_0\n        b_c33e3c -> ifexpression_4123f8.gen_0\n        ifexpression_4e43d2.then -> ifexpression_4123f8.execute\n        ifexpression_4123f8.then -> and_c9d562.left\n        a_8f8d5b -> ifexpression_ba8e8a.gen_0\n        b_c33e3c -> ifexpression_7d7c9f.gen_0\n        ifexpression_ba8e8a.then -> ifexpression_7d7c9f.execute\n        ifexpression_7d7c9f.then -> and_c9d562.right\n        execute_2a2f8d -> ifexpression_4e43d2.execute\n        and_c9d562.continue -> continue_8b721e\n    }\n\n    \n\n    instance(x: -201, y: 12) oppositeSigns_8c8b0f root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") is_divisible_by_11 {\n        in(x: -325, y: -40, name: \"number\") property(Number) number_ae\n        in(x: -378, y: -196, name: \"execute\") trigger() execute_d9c3b8\n\n        out(x: 667, y: -125, name: \"result\") property(Bool) result_0f\n        out(x: 745, y: -384, name: \"continue\") trigger() continue_ea\n\n        instance(x: -96, y: -184) modulo_3c4b2e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 200, y: -357) ifexpression_7d7f49 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        number_ae -> modulo_3c4b2e.value\n        11 -> modulo_3c4b2e.divisor\n        modulo_3c4b2e.result -> ifexpression_7d7f49.gen_0\n        ifexpression_7d7f49.then -> continue_ea\n        execute_d9c3b8 -> modulo_3c4b2e.execute\n        ifexpression_7d7f49.else -> continue_ea\n        ifexpression_7d7f49.result -> result_0f\n    }\n\n    \n\n    instance(x: -156, y: 10) is_divisible_by_11_c3 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces characters in a string\") ReplaceChars {\n        in(x: -435, y: 102, name: \"input\") property(String) input_3a4d8e\n        in(x: -437, y: -169, name: \"search\") property(String) search_2c4f6b\n        in(x: -450, y: 11, name: \"replace\") property(String) replace_1a2d8e\n        in(x: -437, y: -295, name: \"execute\") trigger() execute_a2b4c1\n\n        out(x: 659, y: -208, name: \"output\") property(String) output_4f6a2d\n        out(x: 672, y: -324, name: \"continue\") trigger() continue_b4a1e2\n\n        instance(x: -156, y: -190) replace_f3b8c7 root.Std_k98ojb.Strings.Replace {}\n        input_3a4d8e -> replace_f3b8c7.input\n        search_2c4f6b -> replace_f3b8c7.search\n        replace_1a2d8e -> replace_f3b8c7.replace\n        execute_a2b4c1 -> replace_f3b8c7.trigger\n        replace_f3b8c7.value -> output_4f6a2d\n        replace_f3b8c7.done -> continue_b4a1e2\n    }\n\n    \n\n    instance(x: -209, y: -55) ReplaceChars_c3b1a2 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -240, y: 69, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 58, name: \"product\") property(Number) product_1f468d\n\n        instance(x: -61, y: 62) unique_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -305, y: -134, name: \"accumulator\") property(List) accumulator_9a3e2f\n                in(x: -306, y: 76, name: \"current\") property(Number) current_86a8fb\n\n                out(x: 304, y: -51, name: \"output\") property(List) output_8ba733\n\n                instance(x: 29, y: -47) contains_9cb360 root.Std_k98ojb.List.Contains {}\n                instance(x: 29, y: 115) additem_123456 root.Std_k98ojb.List.Add {}\n\n                accumulator_9a3e2f -> contains_9cb360.list\n                current_86a8fb -> contains_9cb360.item\n\n                instance(x: 17, y: -134) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"it == false\"\n                }\n\n                contains_9cb360.result -> ifexpression_a2fa90.gen_0\n                accumulator_9a3e2f -> additem_123456.list\n                current_86a8fb -> additem_123456.item\n\n                ifexpression_a2fa90.then -> additem_123456.execute\n                ifexpression_a2fa90.else -> accumulator_9a3e2f -> output_8ba733\n                additem_123456.listWithItem -> output_8ba733\n            }\n        }\n\n        instance(x: 177, y: 66) product_123 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -305, y: -134, name: \"accumulator\") property(Number) accumulator_9a3e2f\n                in(x: -306, y: 76, name: \"current\") property(Number) current_86a8fb\n\n                out(x: 304, y: -51, name: \"output\") property(Number) output_8ba733\n\n                instance(x: 29, y: -47) mul_9cb360 root.Std_k98ojb.Math.Mul {}\n\n                accumulator_9a3e2f -> mul_9cb360.first\n                current_86a8fb -> mul_9cb360.second\n\n                mul_9cb360.result -> output_8ba733\n            }\n        }\n\n        1 -> unique_7942d4.initialValue\n        list_668bd2 -> unique_7942d4.items\n        unique_7942d4.output -> product_123.items\n        1 -> product_123.initialValue\n        product_123.output -> product_1f468d\n    }\n\n    \n\n    instance(x: -10, y: -52) product_unique_407e1b root.main.product_unique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -135, y: 204, name: \"list1\") property(List) list1_8b5f7e\n        in(x: -169, y: -34, name: \"list2\") property(List) list2_c34c9d\n\n        out(x: 817, y: 108, name: \"result\") property(List) result_45b3a1\n\n        instance(x: 269, y: -15) difference_875e5f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 586, y: 201) difference_9c8d6e root.Std_k98ojb.Sets.Difference {}\n\n        list1_8b5f7e -> difference_875e5f.left\n        list2_c34c9d -> difference_875e5f.right\n\n        list2_c34c9d -> difference_9c8d6e.left\n        list1_8b5f7e -> difference_9c8d6e.right\n\n        instance(x: 802, y: -31) concat_1a2b9c root.Std_k98ojb.List.Concat {}\n\n        difference_875e5f.difference -> concat_1a2b9c.left\n        difference_9c8d6e.difference -> concat_1a2b9c.right\n\n        concat_1a2b9c.result -> result_45b3a1\n    }\n\n    \n\n    instance(x: -17, y: 80) find_dissimilar_a8f31b root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: 20, name: \"list\") property(List) list_8a3e1f\n        in(x: -196, y: -178, name: \"n\") property(Number) n_b6c82b\n\n        out(x: 804, y: -154, name: \"rotated_list\") property(List) rotated_list_3a4f6a\n        out(x: 809, y: -373, name: \"continue\") trigger() continue_8c32e6\n\n        instance(x: 223, y: -155) length_714d3a root.Std_k98ojb.List.Length {}\n        instance(x: 505, y: -154) modulo_1f81e7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 627, y: -153) sub_3d5a6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 750, y: -154) slice_1e3f11 root.Std_k98ojb.List.Slice {}\n        instance(x: 872, y: -155) concat_9d6c2a root.Std_k98ojb.List.Concat {}\n        length_714d3a.length -> modulo_1f81e7.value\n        n_b6c82b -> modulo_1f81e7.divisor\n        list_8a3e1f -> length_714d3a.list\n        modulo_1f81e7.result -> sub_3d5a6c.second\n        length_714d3a.length -> sub_3d5a6c.first\n        sub_3d5a6c.result -> slice_1e3f11.start\n        list_8a3e1f -> slice_1e3f11.list\n        slice_1e3f11.slice -> concat_9d6c2a.left\n        modulo_1f81e7.result -> slice_1e3f11.end\n        list_8a3e1f -> slice_1e3f11.list\n        slice_1e3f11.slice -> concat_9d6c2a.right\n        concat_9d6c2a.result -> rotated_list_3a4f6a\n    }\n\n    \n\n    instance(x: -85, y: 70) rotate_list_f7b199 root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -320, y: 154, name: \"list\") property(List) list_0a\n        out(x: 855, y: 169, name: \"sum\") property(Number) sum_0b\n\n        instance(x: 167, y: 153) reduce_a2 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n        list_0a -> reduce_a2.items\n        reduce_a2.output_list -> sum_0b\n    }\n\n    \n\n    instance(x: -46, y: 153) SumArray_0c root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -314, y: 205, name: \"n\") property(Number) n_6d8a2f\n        in(x: -297, y: 234, name: \"execute\") trigger() execute_b9e5c3\n\n        out(x: 741, y: 210, name: \"is_prime\") property(Bool) is_prime_86d4b2\n        out(x: 803, y: 240, name: \"continue\") trigger() continue_a9c5e5\n\n        instance(x: -176, y: 168) ifexpression_ea1f35 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 204, y: 123) ifexpression_8d3c81 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 567, y: 144) for_6f33a9 root.Std_k98ojb.Std.For {}\n        instance(x: 703, y: 208) ifexpression_4d72e5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 106, y: -15) ifexpression_3a559f root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 3\"\n        }\n        instance(x: 247, y: -15) ifexpression_b9d338 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 2 == 0 || n % 3 == 0\"\n        }\n        setter(x: -368, y: 182, name: \"setter_475a3c\") setter_475a3c = is_prime\n        getter(x: -295, y: 278, name: \"getter_e0e3b8\") getter_e0e3b8 = is_prime\n        instance(x: 169, y: 19) add_437d6c root.Std_k98ojb.Math.Add {}\n        setter(x: 528, y: -26, name: \"setter_a98f0e\") setter_a98f0e = is_prime\n        instance(x: 451, y: -43) ifexpression_7a8d1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > n\"\n        }\n        getter(x: 622, y: -50, name: \"getter_a03e8f\") getter_a03e8f = is_prime\n        setter(x: 748, y: -193, name: \"setter_7c3d2a\") setter_7c3d2a = is_prime\n        n_6d8a2f -> ifexpression_ea1f35.gen_0\n        execute_b9e5c3 -> setter_475a3c.execute\n        false -> setter_475a3c.new_value\n        ifexpression_ea1f35.then -> continue_a9c5e5\n        ifexpression_ea1f35.else -> ifexpression_8d3c81.execute\n        n_6d8a2f -> ifexpression_8d3c81.gen_0\n        true -> setter_475a3c.new_value\n        ifexpression_8d3c81.then -> continue_a9c5e5\n        ifexpression_8d3c81.else -> ifexpression_3a559f.execute\n        n_6d8a2f -> ifexpression_3a559f.gen_0\n        true -> setter_475a3c.new_value\n        ifexpression_3a559f.then -> continue_a9c5e5\n        ifexpression_3a559f.else -> ifexpression_b9d338.execute\n        n_6d8a2f -> ifexpression_b9d338.gen_0\n        false -> setter_475a3c.new_value\n        ifexpression_b9d338.then -> continue_a9c5e5\n        ifexpression_b9d338.else -> for_6f33a9.reset\n        2 -> add_437d6c.first\n        6 -> add_437d6c.second\n        add_437d6c.result -> for_6f33a9.items\n        for_6f33a9.onItem -> ifexpression_4d72e5.execute\n        for_6f33a9.item -> ifexpression_4d72e5.gen_1\n        n_6d8a2f -> ifexpression_4d72e5.gen_0\n        false -> setter_a98f0e.new_value\n        ifexpression_4d72e5.then -> setter_a98f0e.execute\n        for_6f33a9.index -> add_437d6c.first\n        6 -> add_437d6c.second\n        add_437d6c.result -> ifexpression_7a8d1c.gen_1\n        n_6d8a2f -> ifexpression_7a8d1c.gen_0\n        for_6f33a9.next -> ifexpression_7a8d1c.execute\n        false -> setter_a98f0e.new_value\n        ifexpression_7a8d1c.then -> continue_a9c5e5\n        ifexpression_7a8d1c.else -> for_6f33a9.next\n        getter_e0e3b8.value -> is_prime_86d4b2\n        setter_a98f0e.continue -> continue_a9c5e5\n        getter_a03e8f.value -> setter_7c3d2a.new_value\n        for_6f33a9.done -> setter_7c3d2a.execute\n        true -> setter_475a3c.new_value\n    }\n\n    \n\n    instance(x: -185, y: 107) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if two integers have opposite signs\") OppositeSigns {\n        in(x: -240, y: 133, name: \"a\") property(Number) a_1f846b\n        in(x: -190, y: -75, name: \"b\") property(Number) b_c62075\n\n        out(x: 444, y: -10, name: \"result\") property(Bool) result_3d7de6\n\n        instance(x: -84, y: -159) expression_e38995 root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_1f846b -> expression_e38995.gen_0\n        b_c62075 -> expression_e38995.gen_1\n        expression_e38995.result -> result_3d7de6\n    }\n\n    \n\n    instance(x: -94, y: 75) OppositeSigns_59bc6e root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if a number is divisible by 11.\") IsDivisibleBy11 {\n        in(x: -240, y: 50, name: \"number\") property(Number) number_6b655b\n\n        out(x: 798, y: 50, name: \"result\") property(Bool) result_f3db9f\n        out(x: 1024, y: -10, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 99, y: -278) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 358, y: -441) ifexpression_eed4e8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0\"\n        }\n        11 -> modulo_adfa16.divisor\n        number_6b655b -> modulo_adfa16.value\n        modulo_adfa16.result -> ifexpression_eed4e8.gen_0\n        ifexpression_eed4e8.then -> continue_8ba06b\n        true -> result_f3db9f\n        ifexpression_eed4e8.else -> continue_8ba06b\n        false -> result_f3db9f\n    }\n\n    \n\n    instance(x: -172, y: 50) is_divisible_by_11_def9ac root.main.IsDivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -435, y: 100, name: \"input\") property(String) input_6f126a\n        in(x: -388, y: -10, name: \"search\") property(String) search_9b7c4d\n        in(x: -385, y: 122, name: \"replace\") property(String) replace_a57fbb\n\n        out(x: 614, y: 100, name: \"output\") property(String) output_71b9db\n\n        instance(x: 123, y: 100) replace_8c6d5e root.Std_k98ojb.Strings.Replace {}\n        input_6f126a -> replace_8c6d5e.input\n        search_9b7c4d -> replace_8c6d5e.search\n        replace_a57fbb -> replace_8c6d5e.replace\n        replace_8c6d5e.output -> output_71b9db\n    }\n\n    \n\n    instance(x: -203, y: 45) ReplaceChars_d3a1d8 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -153, y: 204, name: \"list\") property(List) list_5f4a58\n\n        out(x: 679, y: 189, name: \"product\") property(Number) product_8b1c37\n\n        instance(x: -53, y: 203) unique_3d6eb7 root.Std_k98ojb.List.Empty {}\n        instance(x: 146, y: 205) for_a62a9c root.Std_k98ojb.Std.For {}\n        list_5f4a58 -> for_a62a9c.items\n        instance(x: 373, y: 208) ifexpression_b150d5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"not(List.Contains(unique_list, item))\"\n        }\n        unique_3d6eb7.list -> ifexpression_b150d5.gen_0\n        for_a62a9c.item -> ifexpression_b150d5.gen_1\n        instance(x: 544, y: 208) add_2f65b6 root.Std_k98ojb.List.Add {}\n        for_a62a9c.item -> add_2f65b6.item\n        ifexpression_b150d5.gen_0 -> add_2f65b6.list\n        instance(x: 743, y: 209) reduce_4812e6 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"acc * it\"\n        }\n        add_2f65b6.listWithItem -> reduce_4812e6.items\n        1 -> reduce_4812e6.initialValue\n        reduce_4812e6.result -> product_8b1c37\n        ifexpression_b150d5.then -> add_2f65b6.execute\n        for_a62a9c.onItem -> ifexpression_b150d5.execute\n    }\n\n    \n\n    instance(x: -94, y: 158) unique_product_df375e root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -140, y: 324, name: \"list1\") property(List) list1_4f5a7d\n        in(x: -148, y: 64, name: \"list2\") property(List) list2_9c3b28\n\n        out(x: 803, y: 292, name: \"output\") property(List) output_ae5f7d\n        out(x: 1323, y: -46, name: \"continue\") trigger() continue_9e7c2a\n\n        instance(x: 540, y: 289) difference_0b69db root.Std_k98ojb.Sets.Difference {}\n        list1_4f5a7d -> difference_0b69db.left\n        list2_9c3b28 -> difference_0b69db.right\n        instance(x: 860, y: 289) difference_a35e81 root.Std_k98ojb.Sets.Difference {}\n        list2_9c3b28 -> difference_a35e81.left\n        list1_4f5a7d -> difference_a35e81.right\n        instance(x: 1068, y: 289) concat_b8ee8f root.Std_k98ojb.List.Concat {}\n        difference_0b69db.difference -> concat_b8ee8f.left\n        difference_a35e81.difference -> concat_b8ee8f.right\n        concat_b8ee8f.result -> output_ae5f7d\n\n    }\n\n    \n\n    instance(x: -24, y: 30) find_dissimilar_9a6c8b root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -135, y: 40, name: \"list\") property(List) list_a28a4f\n        in(x: -179, y: -63, name: \"n\") property(Number) n_4d3b3c\n\n        out(x: 942, y: 59, name: \"rotated_list\") property(List) rotated_list_c80a22\n        out(x: 917, y: -68, name: \"continue\") trigger() continue_2f08b3\n\n        instance(x: 265, y: -45) length_0d86bb root.Std_k98ojb.List.Length {}\n        instance(x: 196, y: -120) modulo_7929c4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 367, y: -56) sub_6a74cd root.Std_k98ojb.Math.Sub {}\n        instance(x: 470, y: -113) slice_2db1c1 root.Std_k98ojb.List.Slice {}\n        instance(x: 473, y: 54) slice_689a8d root.Std_k98ojb.List.Slice {}\n        instance(x: 600, y: -11) concat_622e5c root.Std_k98ojb.List.Concat {}\n\n        list_a28a4f -> length_0d86bb.list\n        length_0d86bb.length -> modulo_7929c4.divisor\n        n_4d3b3c -> modulo_7929c4.value\n        length_0d86bb.length -> sub_6a74cd.first\n        modulo_7929c4.result -> sub_6a74cd.second\n        list_a28a4f -> slice_2db1c1.list\n        sub_6a74cd.result -> slice_2db1c1.start\n        -1 -> slice_2db1c1.end\n        list_a28a4f -> slice_689a8d.list\n        0 -> slice_689a8d.start\n        modulo_7929c4.result -> slice_689a8d.end\n        slice_2db1c1.slice -> concat_622e5c.right\n        slice_689a8d.slice -> concat_622e5c.left\n        concat_622e5c.result -> rotated_list_c80a22\n\n    }\n\n    \n\n    instance(x: -34, y: 127) rotate_list_instance root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -314, y: 20, name: \"list\") property(List) list_54d5a4\n\n        out(x: 587, y: 20, name: \"sum\") property(Number) sum_b6e9b9\n\n        instance(x: 143, y: -16) reduce_aedcbe root.Std_k98ojb.Iteration.Reduce {}\n        list_54d5a4 -> reduce_aedcbe.items\n        func() {\n            in(x: -207, y: -46, name: \"accumulator\") property(Number) accumulator_b3af1e\n            in(x: -209, y: 18, name: \"item\") property(Number) item_5b004c\n\n            out(x: 245, y: -55, name: \"\") property(Number) _6f397d\n\n            instance(x: 97, y: -49) add_15e58a root.Std_k98ojb.Math.Add {}\n            accumulator_b3af1e -> add_15e58a.first\n            item_5b004c -> add_15e58a.second\n            add_15e58a.result -> _6f397d\n        } -> reduce_aedcbe.reducer\n        0 -> reduce_aedcbe.initialValue\n        reduce_aedcbe.accumulatedValue -> sum_b6e9b9\n    }\n\n    \n\n    instance(x: -124, y: -52) SumArray_80a3f7 root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -145, y: 20, name: \"n\") property(Number) n_2a8d7b\n        in(x: -139, y: -67, name: \"execute\") trigger() execute_a1c2f7\n\n        out(x: 759, y: 48, name: \"result\") property(Bool) result_b0f1ca\n        out(x: 802, y: -37, name: \"continue\") trigger() continue_6eb3e3\n\n        instance(x: 129, y: -157) ifexpression_e4a0ae root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 344, y: -326) ifexpression_3f5d06 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 677, y: -321) ifexpression_ba63c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 452, y: -174) for_7d3eb9 root.Std_k98ojb.Std.For {}\n        instance(x: 615, y: -476) add_79a2c4 root.Std_k98ojb.Math.Add {}\n        instance(x: 104, y: -60) ifexpression_3e6c7d root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 2 == 0\"\n        }\n        instance(x: 594, y: 12) mathfloor_1e7f4a root.Std_k98ojb.Math.Floor {}\n        instance(x: 360, y: -300) mathsqrt_5dfc44 root.Std_k98ojb.Math.Pow {\n            x: 0.5\n            y: 0.5\n        }\n        setter(x: -152, y: -275, name: \"setter_b76f23\") setter_b76f23 = is_prime_flag\n        getter(x: -98, y: -477, name: \"getter_0c7b29\") getter_0c7b29 = is_prime_flag\n        setter(x: 156, y: -439, name: \"setter_d52a6e\") setter_d52a6e = is_prime_flag\n        setter(x: 387, y: -479, name: \"setter_0c7b29\") setter_0c7b29 = is_prime_flag\n        getter(x: 144, y: -135, name: \"getter_b63dbd\") getter_b63dbd = is_prime_flag\n        getter(x: 836, y: -440, name: \"getter_7f2a3c\") getter_7f2a3c = is_prime_flag\n        instance(x: 516, y: -59) mathpow_16e3d4 root.Std_k98ojb.Math.Pow {\n            x: 0.5\n            y: 0.5\n        }\n        setter(x: 271, y: -577, name: \"setter_0c7b29\") setter_0c7b29 = is_prime_flag\n        getter(x: 364, y: -584, name: \"getter_b63dbd\") getter_b63dbd = is_prime_flag\n        n_2a8d7b -> ifexpression_e4a0ae.gen_0\n        execute_a1c2f7 -> setter_b76f23.execute\n        1 -> add_79a2c4.second\n        for_7d3eb9.item -> mathpow_16e3d4.x\n        mathsqrt_5dfc44.result -> mathpow_16e3d4.y\n        setter_b76f23.continue -> ifexpression_e4a0ae.execute\n        2 -> add_79a2c4.first\n        getter_0c7b29.value -> result_b0f1ca\n        ifexpression_e4a0ae.then -> continue_6eb3e3\n        ifexpression_e4a0ae.else -> ifexpression_3f5d06.execute\n        n_2a8d7b -> ifexpression_3f5d06.gen_0\n        1 -> setter_d52a6e.new_value\n        ifexpression_3f5d06.then -> setter_d52a6e.execute\n        n_2a8d7b -> mathsqrt_5dfc44.x\n        ifexpression_3f5d06.else -> for_7d3eb9.reset\n        2 -> setter_0c7b29.new_value\n        n_2a8d7b -> ifexpression_3e6c7d.gen_0\n        ifexpression_3e6c7d.then -> setter_0c7b29.execute\n        mathsqrt_5dfc44.result -> for_7d3eb9.to\n        1 -> add_79a2c4.first\n        getter_b63dbd.value -> continue_6eb3e3\n        add_79a2c4.result -> setter_0c7b29.new_value\n        ifexpression_3e6c7d.else -> for_7d3eb9.reset\n        1 -> add_79a2c4.second\n        n_2a8d7b -> mathfloor_1e7f4a.input\n        getter_b63dbd.value -> continue_6eb3e3\n        setter_0c7b29.continue -> for_7d3eb9.reset\n        2 -> add_79a2c4.first\n        ifexpression_ba63c5.then -> setter_0c7b29.execute\n        n_2a8d7b -> mathsqrt_5dfc44.x\n        mathpow_16e3d4.result -> for_7d3eb9.to\n        1 -> add_79a2c4.first\n        getter_b63dbd.value -> continue_6eb3e3\n        add_79a2c4.result -> setter_0c7b29.new_value\n        ifexpression_ba63c5.else -> for_7d3eb9.next\n        1 -> add_79a2c4.second\n        n_2a8d7b -> mathfloor_1e7f4a.input\n        getter_b63dbd.value -> continue_6eb3e3\n        setter_0c7b29.continue -> for_7d3eb9.next\n        2 -> add_79a2c4.first\n        n_2a8d7b -> mathsqrt_5dfc44.x\n        mathpow_16e3d4.result -> for_7d3eb9.to\n        1 -> add_79a2c4.first\n        getter_b63dbd.value -> continue_6eb3e3\n        add_79a2c4.result -> setter_0c7b29.new_value\n        ifexpression_ba63c5.then -> setter_0c7b29.execute\n        n_2a8d7b -> mathfloor_1e7f4a.input\n        getter_b63dbd.value -> continue_6eb3e3\n        setter_0c7b29.continue -> for_7d3eb9.next\n        1 -> add_79a2c4.second\n        n_2a8d7b -> mathsqrt_5dfc44.x\n        mathpow_16e3d4.result -> for_7d3eb9.to\n        1 -> add_79a2c4.first\n        getter_b63dbd.value -> continue_6eb3e3\n        add_79a2c4.result -> setter_0c7b29.new_value\n        ifexpression_ba63c5.else -> for_7d3eb9.next\n        1 -> add_79a2c4.second\n        n_2a8d7b -> mathfloor_1e7f4a.input\n        getter_b63dbd.value -> continue_6eb3e3\n        setter_0c7b29.continue -> for_7d3eb9.next"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8e5b2f\n        in(x: -269, y: -7, name: \"b\") property(Number) b_4d2c8f\n\n        out(x: 468, y: 103, name: \"result\") property(Bool) result_8e5b2f\n        out(x: 519, y: -7, name: \"continue\") trigger() continue_8e5b2f\n\n        instance(x: -146, y: 103) expression_8e5b2f root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_8e5b2f -> expression_8e5b2f.gen_0\n        b_4d2c8f -> expression_8e5b2f.gen_1\n        expression_8e5b2f.result -> result_8e5b2f\n    }\n\n    \n\n    instance(x: -36, y: 79) OppositeSigns_8e5b2f root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a7b3f\n\n        out(x: 964, y: 135, name: \"product\") property(Number) product_8d2c3e\n\n        instance(x: -10, y: 135) unique_numbers_8d2c3e root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -46, y: -70, name: \"accumulator\") property(List) accumulator_8d2c3e\n                in(x: -51, y: 10, name: \"current\") property(Number) current_8d2c3e\n\n                out(x: 49, y: -69, name: \"output\") property(List) output_8d2c3e\n\n                instance(x: 78, y: -58) contains_8d2c3e root.Std_k98ojb.List.Contains {}\n                instance(x: 104, y: -16) add_8d2c3e root.Std_k98ojb.List.Add {}\n\n                accumulator_8d2c3e -> contains_8d2c3e.list\n                current_8d2c3e -> contains_8d2c3e.item\n\n                instance(x: 140, y: -56) ifexpression_8d2c3e root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n\n                contains_8d2c3e.contains -> ifexpression_8d2c3e.gen_0\n\n                func() {\n                    in(x: 176, y: -54, name: \"accumulator\") property(List) accumulator_8d2c3e\n                    out(x: 212, y: -54, name: \"output\") property(List) output_8d2c3e\n\n                    accumulator_8d2c3e -> output_8d2c3e\n                } -> ifexpression_8d2c3e.then\n\n                func() {\n                    in(x: 176, y: -54, name: \"accumulator\") property(List) accumulator_8d2c3e\n                    in(x: 190, y: -54, name: \"current\") property(Number) current_8d2c3e\n\n                    out(x: 212, y: -54, name: \"output\") property(List) output_8d2c3e\n\n                    accumulator_8d2c3e -> add_8d2c3e.list\n                    current_8d2c3e -> add_8d2c3e.item\n\n                    add_8d2c3e.listWithItem -> output_8d2c3e\n                } -> ifexpression_8d2c3e.else\n\n                ifexpression_8d2c3e.value -> output_8d2c3e\n            }\n        }\n\n        instance(x: 504, y: 135) reduce_product_8d2c3e root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -46, y: -70, name: \"accumulator\") property(Number) accumulator_8d2c3e\n                in(x: -51, y: 10, name: \"current\") property(Number) current_8d2c3e\n\n                out(x: 49, y: -69, name: \"output\") property(Number) output_8d2c3e\n\n                instance(x: 78, y: -58) mul_8d2c3e root.Std_k98ojb.Math.Mul {}\n\n                accumulator_8d2c3e -> mul_8d2c3e.first\n                current_8d2c3e -> mul_8d2c3e.second\n\n                mul_8d2c3e.result -> output_8d2c3e\n            }\n        }\n\n        list_8a7b3f -> unique_numbers_8d2c3e.items\n        1 -> unique_numbers_8d2c3e.initialValue\n        unique_numbers_8d2c3e.output_list -> reduce_product_8d2c3e.items\n        1 -> reduce_product_8d2c3e.initialValue\n        reduce_product_8d2c3e.result -> product_8d2c3e\n    }\n\n    \n\n    instance(x: -97, y: 65) product_unique_numbers_def9ac root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8a5b7f\n        in(x: -269, y: -104, name: \"list2\") property(List) list2_1d2c8e\n\n        out(x: 814, y: 30, name: \"output\") property(List) output_5b7f8a\n        out(x: 964, y: -104, name: \"continue\") trigger() continue_9a8d7c\n\n        instance(x: 204, y: 138) difference_8e7b9c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 562, y: -104) difference_9f8a7b root.Std_k98ojb.Sets.Difference {}\n\n        list1_8a5b7f -> difference_8e7b9c.left\n        list2_1d2c8e -> difference_8e7b9c.right\n\n        list2_1d2c8e -> difference_9f8a7b.left\n        list1_8a5b7f -> difference_9f8a7b.right\n\n        instance(x: 640, y: -38) concat_7b8c9d root.Std_k98ojb.List.Concat {}\n\n        difference_8e7b9c.difference -> concat_7b8c9d.left\n        difference_9f8a7b.difference -> concat_7b8c9d.right\n\n        concat_7b8c9d.result -> output_5b7f8a\n    }\n\n    \n\n    instance(x: -104, y: 23) find_dissimilar_elements_6e7f8a root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a1b3f\n        in(x: -269, y: -74, name: \"n\") property(Number) n_4d2c7e\n\n        out(x: 840, y: 135, name: \"rotated_list\") property(List) rotated_list_1b2a3f\n        out(x: 960, y: -74, name: \"continue\") trigger() continue_8d7c9e\n\n        instance(x: 100, y: 50) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 250, y: 50) modulo_4d5e6f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -74) sub_7g8h9i root.Std_k98ojb.Math.Sub {}\n        instance(x: 550, y: 135) slice_2j3k4l root.Std_k98ojb.List.Slice {}\n        instance(x: 700, y: -74) slice_5m6n7o root.Std_k98ojb.List.Slice {}\n        instance(x: 850, y: 135) concat_8p9q0r root.Std_k98ojb.List.Concat {}\n\n        list_8a1b3f -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_4d5e6f.value\n        n_4d2c7e -> modulo_4d5e6f.divisor\n        length_1a2b3c.length -> sub_7g8h9i.first\n        modulo_4d5e6f.result -> sub_7g8h9i.second\n        list_8a1b3f -> slice_2j3k4l.list\n        sub_7g8h9i.result -> slice_2j3k4l.start\n        -1 -> slice_2j3k4l.end\n        list_8a1b3f -> slice_5m6n7o.list\n        0 -> slice_5m6n7o.start\n        modulo_4d5e6f.result -> slice_5m6n7o.end\n        slice_2j3k4l.slice -> concat_8p9q0r.right\n        slice_5m6n7o.slice -> concat_8p9q0r.left\n        concat_8p9q0r.result -> rotated_list_1b2a3f\n\n        continue_8d7c9e\n    }\n\n    \n\n    instance(x: -174, y: 30) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -324, y: 105, name: \"a\") property(Number) a_8f8d5b\n        in(x: -336, y: -97, name: \"b\") property(Number) b_c31e2c\n        in(x: -460, y: -114, name: \"execute\") trigger() execute_2a2f8d\n\n        out(x: 516, y: -114, name: \"continue\") trigger() continue_b2927e\n        out(x: 359, y: 104, name: \"result\") property(Bool) result_8c6a3d\n\n        instance(x: -117, y: -110) ifexpression_1f3b94 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a ^ b) < 0\"\n        }\n        ifexpression_1f3b94.then -> continue_b2927e\n        ifexpression_1f3b94.else -> continue_b2927e\n        a_8f8d5b -> ifexpression_1f3b94.gen_0\n        b_c31e2c -> ifexpression_1f3b94.gen_1\n        execute_2a2f8d -> ifexpression_1f3b94.execute\n        ifexpression_1f3b94.value -> result_8c6a3d\n    }\n\n    \n\n    instance(x: -170, y: 5) OppositeSigns_a44e38 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") is_divisible_by_11 {\n        in(x: -325, y: -40, name: \"number\") property(Number) number_ae\n        in(x: -378, y: -196, name: \"execute\") trigger() execute_d9c3b8\n\n        out(x: 667, y: -125, name: \"result\") property(Bool) result_0f\n        out(x: 745, y: -384, name: \"continue\") trigger() continue_ea\n\n        instance(x: -96, y: -184) modulo_3c4b2e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 200, y: -357) ifexpression_7d7f49 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        number_ae -> modulo_3c4b2e.value\n        11 -> modulo_3c4b2e.divisor\n        modulo_3c4b2e.result -> ifexpression_7d7f49.gen_0\n        ifexpression_7d7f49.then -> continue_ea\n        execute_d9c3b8 -> modulo_3c4b2e.execute\n        ifexpression_7d7f49.else -> continue_ea\n        ifexpression_7d7f49.result -> result_0f\n    }\n\n    \n\n    instance(x: -156, y: 10) is_divisible_by_11_c3 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces characters in a string\") ReplaceChars {\n        in(x: -435, y: 102, name: \"input\") property(String) input_3a4d8e\n        in(x: -437, y: -169, name: \"search\") property(String) search_2c4f6b\n        in(x: -450, y: 11, name: \"replace\") property(String) replace_1a2d8e\n        in(x: -437, y: -295, name: \"execute\") trigger() execute_a2b4c1\n\n        out(x: 659, y: -208, name: \"output\") property(String) output_bf8a2d\n        out(x: 661, y: -377, name: \"continue\") trigger() continue_3e1b9c\n\n        instance(x: -145, y: -150) replace_479b12 root.Std_k98ojb.Strings.Replace {}\n        input_3a4d8e -> replace_479b12.input\n        search_2c4f6b -> replace_479b12.search\n        replace_1a2d8e -> replace_479b12.replace\n        execute_a2b4c1 -> replace_479b12.trigger\n        replace_479b12.value -> output_bf8a2d\n        replace_479b12.done -> continue_3e1b9c\n    }\n\n    \n\n    instance(x: -56, y: 10) ReplaceChars_a3f9b1 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -240, y: 69, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 58, name: \"product\") property(Number) product_1f468d\n\n        instance(x: -61, y: 62) unique_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -305, y: -134, name: \"accumulator\") property(List) accumulator_9a3e2f\n                in(x: -306, y: 76, name: \"current\") property(Number) current_86a8fb\n\n                out(x: 304, y: -51, name: \"output\") property(List) output_8ba733\n\n                instance(x: 29, y: -47) contains_9cb360 root.Std_k98ojb.List.Contains {}\n                instance(x: 29, y: 115) additem_123456 root.Std_k98ojb.List.Add {}\n\n                accumulator_9a3e2f -> contains_9cb360.list\n                current_86a8fb -> contains_9cb360.item\n\n                instance(x: 17, y: -134) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"it == false\"\n                }\n\n                contains_9cb360.result -> ifexpression_a2fa90.gen_0\n                accumulator_9a3e2f -> additem_123456.list\n                current_86a8fb -> additem_123456.item\n\n                ifexpression_a2fa90.then -> additem_123456.execute\n                ifexpression_a2fa90.else -> accumulator_9a3e2f -> output_8ba733\n                additem_123456.listWithItem -> output_8ba733\n            }\n        }\n\n        instance(x: 177, y: 66) product_123 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -305, y: -134, name: \"accumulator\") property(Number) accumulator_9a3e2f\n                in(x: -306, y: 76, name: \"current\") property(Number) current_86a8fb\n\n                out(x: 304, y: -51, name: \"output\") property(Number) output_8ba733\n\n                instance(x: 29, y: -47) mul_9cb360 root.Std_k98ojb.Math.Mul {}\n\n                accumulator_9a3e2f -> mul_9cb360.first\n                current_86a8fb -> mul_9cb360.second\n\n                mul_9cb360.result -> output_8ba733\n            }\n        }\n\n        1 -> unique_7942d4.initialValue\n        list_668bd2 -> unique_7942d4.items\n        unique_7942d4.output -> product_123.items\n        1 -> product_123.initialValue\n        product_123.output -> product_1f468d\n    }\n\n    \n\n    instance(x: -10, y: -52) product_unique_407e1b root.main.product_unique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -135, y: 204, name: \"list1\") property(List) list1_8b5f7e\n        in(x: -169, y: -34, name: \"list2\") property(List) list2_c32a6d\n\n        out(x: 817, y: 108, name: \"result\") property(List) result_1b5c8f\n\n        instance(x: 395, y: 164) difference_935e11 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 725, y: 164) concat_0a7d13 root.Std_k98ojb.List.Concat {}\n\n        list1_8b5f7e -> difference_935e11.left\n        list2_c32a6d -> difference_935e11.right\n\n        instance(x: 395, y: -40) difference_0e8c11 root.Std_k98ojb.Sets.Difference {}\n\n        list2_c32a6d -> difference_0e8c11.left\n        list1_8b5f7e -> difference_0e8c11.right\n\n        difference_935e11.difference -> concat_0a7d13.left\n        difference_0e8c11.difference -> concat_0a7d13.right\n\n        concat_0a7d13.result -> result_1b5c8f\n    }\n\n    \n\n    instance(x: -92, y: 64) find_dissimilar_cbc0b6 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -145, y: 20, name: \"list\") property(List) list_8a3e1f\n        in(x: -196, y: -178, name: \"n\") property(Number) n_b6c82b\n\n        out(x: 804, y: -154, name: \"rotated_list\") property(List) rotated_list_3a4f6a\n        out(x: 809, y: -373, name: \"continue\") trigger() continue_8c32e6\n\n        instance(x: 223, y: -155) length_714d3a root.Std_k98ojb.List.Length {}\n        instance(x: 505, y: -154) modulo_1f81e7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 627, y: -153) sub_3d5a6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 750, y: -154) slice_1e3f11 root.Std_k98ojb.List.Slice {}\n        instance(x: 872, y: -155) concat_9d6c2a root.Std_k98ojb.List.Concat {}\n        length_714d3a.length -> modulo_1f81e7.value\n        n_b6c82b -> modulo_1f81e7.divisor\n        list_8a3e1f -> length_714d3a.list\n        modulo_1f81e7.result -> sub_3d5a6c.second\n        length_714d3a.length -> sub_3d5a6c.first\n        sub_3d5a6c.result -> slice_1e3f11.start\n        list_8a3e1f -> slice_1e3f11.list\n        slice_1e3f11.slice -> concat_9d6c2a.left\n        modulo_1f81e7.result -> slice_1e3f11.end\n        list_8a3e1f -> slice_1e3f11.list\n        slice_1e3f11.slice -> concat_9d6c2a.right\n        concat_9d6c2a.result -> rotated_list_3a4f6a\n    }\n\n    \n\n    instance(x: -85, y: 70) rotate_list_f7b199 root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -320, y: 154, name: \"list\") property(List) list_0a\n        out(x: 855, y: 169, name: \"sum\") property(Number) sum_0b\n\n        instance(x: 167, y: 153) reduce_a2 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n        list_0a -> reduce_a2.items\n        reduce_a2.output_list -> sum_0b\n    }\n\n    \n\n    instance(x: -46, y: 153) SumArray_0c root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -314, y: 205, name: \"n\") property(Number) n_6d8a2f\n        in(x: -297, y: 234, name: \"execute\") trigger() execute_b9e5c3\n\n        out(x: 741, y: 210, name: \"is_prime\") property(Bool) is_prime_86d4b2\n        out(x: 803, y: 240, name: \"continue\") trigger() continue_a9c5e5\n\n        instance(x: -176, y: 168) ifexpression_ea1f35 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 204, y: 123) ifexpression_8d3c81 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 567, y: 144) for_6f35a9 root.Std_k98ojb.Std.For {}\n        instance(x: 703, y: 314) ifexpression_4d5e1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 627, y: -31) sub_f46f4a root.Std_k98ojb.Math.Sub {}\n        instance(x: 566, y: -145) add_8e4d6c root.Std_k98ojb.Math.Add {}\n        setter(x: -207, y: 134, name: \"setter_49a5f1\") setter_49a5f1 = local_i\n        getter(x: 108, y: 167, name: \"getter_8c22e1\") getter_8c22e1 = local_i\n        getter(x: 539, y: -11) name: \"getter_46f1d2\" getter_46f1d2 = local_i\n        setter(x: 704, y: -29) setter_8a227c = is_prime\n        1 -> sub_f46f4a.second\n        n_6d8a2f -> ifexpression_ea1f35.gen_0\n        execute_b9e5c3 -> setter_49a5f1.execute\n        2 -> add_8e4d6c.first\n        getter_8c22e1.value -> sub_f46f4a.first\n        ifexpression_ea1f35.then -> setter_8a227c.execute\n        false -> setter_8a227c.new_value\n        2 -> ifexpression_8d3c81.gen_0\n        n_6d8a2f -> add_8e4d6c.second\n        ifexpression_ea1f35.else -> ifexpression_8d3c81.execute\n        ifexpression_8d3c81.then -> setter_8a227c.execute\n        true -> setter_8a227c.new_value\n        getter_46f1d2.value -> for_6f35a9.item\n        n_6d8a2f -> sub_f46f4a.second\n        ifexpression_8d3c81.else -> for_6f35a9.reset\n        2 -> for_6f35a9.items\n        getter_46f1d2.value -> add_8e4d6c.first\n        sub_f46f4a.result -> ifexpression_4d5e1c.gen_0\n        n_6d8a2f -> ifexpression_4d5e1c.gen_1\n        for_6f35a9.onItem -> ifexpression_4d5e1c.execute\n        add_8e4d6c.result -> setter_49a5f1.new_value\n        ifexpression_4d5e1c.then -> setter_8a227c.execute\n        false -> setter_8a227c.new_value\n        for_6f35a9.next -> continue_a9c5e5\n        setter_49a5f1.continue -> continue_a9c5e5\n        setter_8a227c.continue -> continue_a9c5e5\n        for_6f35a9.done -> continue_a9c5e5\n        getter_8c22e1.value -> add_8e4d6c.second\n        1 -> setter_49a5f1.new_value\n    }\n\n    \n\n    instance(x: -307, y: 13) is_prime_b21b2a root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if two integers have opposite signs\") OppositeSigns {\n        in(x: -240, y: 133, name: \"a\") property(Number) a_1f846b\n        in(x: -190, y: -75, name: \"b\") property(Number) b_c62075\n\n        out(x: 444, y: -10, name: \"result\") property(Bool) result_3d7de6\n\n        instance(x: -84, y: -159) expression_e38995 root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_1f846b -> expression_e38995.gen_0\n        b_c62075 -> expression_e38995.gen_1\n        expression_e38995.result -> result_3d7de6\n    }\n\n    \n\n    instance(x: -94, y: 75) OppositeSigns_59bc6e root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if a number is divisible by 11.\") IsDivisibleBy11 {\n        in(x: -240, y: 50, name: \"number\") property(Number) number_6b655b\n\n        out(x: 798, y: 50, name: \"result\") property(Bool) result_f3db9f\n        out(x: 1024, y: -10, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 99, y: -278) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 358, y: -441) ifexpression_eed3d2 root.Std_k98ojb.Std.IfExpression {\n            expression: \"mod == 0\"\n        }\n        11 -> modulo_adfa16.divisor\n        number_6b655b -> modulo_adfa16.value\n        modulo_adfa16.result -> ifexpression_eed3d2.gen_0\n        ifexpression_eed3d2.then -> result_f3db9f = true\n        ifexpression_eed3d2.else -> result_f3db9f = false\n    }\n\n    \n\n    instance(x: -256, y: 14) is_divisible_by_11_b9ff6b root.main.IsDivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceChars {\n        in(x: -435, y: 100, name: \"input\") property(String) input_6f126a\n        in(x: -388, y: -10, name: \"search\") property(String) search_9b7c4d\n        in(x: -385, y: 122, name: \"replace\") property(String) replace_a57fbb\n\n        out(x: 614, y: 100, name: \"output\") property(String) output_77b9ae\n\n        instance(x: 123, y: 100) replace_8b5c9d root.Std_k98ojb.Strings.Replace {}\n        input_6f126a -> replace_8b5c9d.input\n        search_9b7c4d -> replace_8b5c9d.search\n        replace_a57fbb -> replace_8b5c9d.replace\n        replace_8b5c9d.output -> output_77b9ae\n    }\n\n    \n\n    instance(x: -213, y: 46) ReplaceChars_a0e897 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -153, y: 204, name: \"list\") property(List) list_5f4a58\n\n        out(x: 679, y: 189, name: \"product\") property(Number) product_8b1c37\n\n        instance(x: -53, y: 203) unique_3d6db8 root.Std_k98ojb.List.Empty {}\n        instance(x: 146, y: 205) for_aed7e4 root.Std_k98ojb.Std.For {}\n        instance(x: 579, y: 204) reduce_f3a361 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc * item)\"\n        }\n        unique_3d6db8.list -> for_aed7e4.items\n        list_5f4a58 -> for_aed7e4.items\n        func() {\n            in(x: -12, y: 209, name: \"item\") property(Number) item_1b9236\n\n            out(x: 162, y: 213, name: \"contains\") property(Bool) contains_57c8a6\n            out(x: 245, y: 208, name: \"continue\") trigger() continue_b1d279\n\n            instance(x: 114, y: 223) contains_8efb9e root.Std_k98ojb.List.Contains {}\n            getter(x: -66, y: 154, name: \"getter_75a0c1\") getter_75a0c1 = unique\n            setter(x: 274, y: 218) setter_a3d9f5 root.Std_k98ojb.List.Add {}\n            item_1b9236 -> contains_8efb9e.item\n            getter_75a0c1.value -> contains_8efb9e.list\n            contains_8efb9e.contains -> contains_57c8a6\n            setter_a3d9f5.continue -> continue_b1d279\n            item_1b9236 -> setter_a3d9f5.item\n            getter_75a0c1.value -> setter_a3d9f5.list\n        } -> for_aed7e4.onItem\n        reduce_f3a361.result -> product_8b1c37\n        unique_3d6db8.list -> reduce_f3a361.items\n        1 -> reduce_f3a361.initialValue\n    }\n\n    \n\n    instance(x: -200, y: 154) unique_product_ece4e4 root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -140, y: 324, name: \"list1\") property(List) list1_4f5a7d\n        in(x: -148, y: 64, name: \"list2\") property(List) list2_9c3b28\n\n        out(x: 803, y: 292, name: \"output\") property(List) output_ae5f7d\n        out(x: 1323, y: -46, name: \"continue\") trigger() continue_9e7c2a\n\n        instance(x: 540, y: 289) difference_0b69ce root.Std_k98ojb.Sets.Difference {}\n        list1_4f5a7d -> difference_0b69ce.left\n        list2_9c3b28 -> difference_0b69ce.right\n        instance(x: 860, y: 289) difference_f77e2b root.Std_k98ojb.Sets.Difference {}\n        list1_4f5a7d -> difference_f77e2b.right\n        list2_9c3b28 -> difference_f77e2b.left\n        instance(x: 1060, y: 289) concat_a614aa root.Std_k98ojb.List.Concat {}\n        difference_0b69ce.difference -> concat_a614aa.left\n        difference_f77e2b.difference -> concat_a614aa.right\n        concat_a614aa.result -> output_ae5f7d\n    }\n\n    \n\n    instance(x: -138, y: 197) find_dissimilar_0c2a83 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -135, y: 40, name: \"list\") property(List) list_a28a4f\n        in(x: -179, y: -63, name: \"n\") property(Number) n_4d3b3c\n\n        out(x: 942, y: 59, name: \"rotated_list\") property(List) rotated_list_c80a22\n        out(x: 917, y: -68, name: \"continue\") trigger() continue_2f08b3\n\n        instance(x: 265, y: -45) length_0d86af root.Std_k98ojb.List.Length {}\n        instance(x: 196, y: -120) modulo_7921c4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 366, y: -55) sub_6a74cd root.Std_k98ojb.Math.Sub {}\n        instance(x: 472, y: -40) slice_3f9c7d root.Std_k98ojb.List.Slice {}\n        instance(x: 1046, y: -50) concat_6d2a78 root.Std_k98ojb.List.Concat {}\n        length_0d86af.length -> modulo_7921c4.value\n        n_4d3b3c -> modulo_7921c4.divisor\n        modulo_7921c4.result -> sub_6a74cd.second\n        list_a28a4f -> length_0d86af.list\n        length_0d86af.length -> sub_6a74cd.first\n        sub_6a74cd.result -> slice_3f9c7d.start\n        modulo_7921c4.result -> slice_3f9c7d.end\n        list_a28a4f -> slice_3f9c7d.list\n        slice_3f9c7d.slice -> concat_6d2a78.left\n        sub_6a74cd.result -> slice_3f9c7d.start\n        0 -> slice_3f9c7d.end\n        list_a28a4f -> slice_3f9c7d.list\n        slice_3f9c7d.slice -> concat_6d2a78.right\n        concat_6d2a78.result -> rotated_list_c80a22\n    }\n\n    \n\n    instance(x: -152, y: 4) rotate_list_cb9e1b root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -314, y: 20, name: \"list\") property(List) list_54d5a4\n\n        out(x: 587, y: 20, name: \"sum\") property(Number) sum_b6e9b9\n\n        instance(x: 143, y: -16) reduce_aedcbe root.Std_k98ojb.Iteration.Reduce {}\n        list_54d5a4 -> reduce_aedcbe.items\n        func() {\n            in(x: -207, y: -46, name: \"accumulator\") property(Number) accumulator_b3ce1f\n            in(x: -209, y: 18, name: \"item\") property(Number) item_5e091c\n\n            out(x: 245, y: -55, name: \"\") property(Number) _6b597d\n\n            instance(x: 120, y: -31) add_2a382f root.Std_k98ojb.Math.Add {}\n            accumulator_b3ce1f -> add_2a382f.first\n            item_5e091c -> add_2a382f.second\n            add_2a382f.result -> _6b597d\n        } -> reduce_aedcbe.reducer\n        0 -> reduce_aedcbe.initialValue\n        reduce_aedcbe.accumulatedValue -> sum_b6e9b9\n    }\n\n    \n\n    instance(x: -147, y: -38) SumArray_def5f2 root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -145, y: 20, name: \"n\") property(Number) n_2a8d7b\n        in(x: -139, y: -67, name: \"execute\") trigger() execute_a1c2f7\n\n        out(x: 759, y: 48, name: \"result\") property(Bool) result_b0f1bf\n        out(x: 802, y: -37, name: \"continue\") trigger() continue_6db5b4\n\n        instance(x: 129, y: -219) ifexpression_ea6eae root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 307, y: -268) ifexpression_85c8d7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > n\"\n        }\n        instance(x: 491, y: -221) ifexpression_ba7f3c root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 657, y: -162) add_0d5624 root.Std_k98ojb.Math.Add {}\n        instance(x: 383, y: -121) for_66c362 root.Std_k98ojb.Std.For {}\n        setter(x: 170, y: -334, name: \"setter_95f6a8\") setter_95f6a8 = i\n        getter(x: 138, y: -203, name: \"getter_4fb4e1\") getter_4fb4e1 = i\n        instance(x: 144, y: -17) ifexpression_a8f5c6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        setter(x: -30, y: -53, name: \"setter_37a94d\") setter_37a94d = is_prime\n        getter(x: 61, y: 28, name: \"getter_a9f8ae\") getter_a9f8ae = is_prime\n        instance(x: 250, y: -30) ifexpression_d6b60c root.Std_k98ojb.Std.IfExpression {\n            expression: \"i == n\"\n        }\n        1 -> setter_95f6a8.new_value\n        setter_95f6a8.continue -> execute_a1c2f7\n        getter_4fb4e1.value -> ifexpression_ba7f3c.gen_0\n        getter_4fb4e1.value -> add_0d5624.first\n        2 -> add_0d5624.second\n        add_0d5624.result -> setter_95f6a8.new_value\n        n_2a8d7b -> ifexpression_ea6eae.gen_0\n        ifexpression_ea6eae.then -> setter_37a94d.execute\n        false -> setter_37a94d.new_value\n        ifexpression_ea6eae.else -> for_66c362.trigger\n        n_2a8d7b -> ifexpression_a8f5c6.gen_0\n        ifexpression_a8f5c6.then -> setter_37a94d.execute\n        true -> setter_37a94d.new_value\n        ifexpression_a8f5c6.else -> continue_6db5b4\n        1 -> for_66c362.items\n        for_66c362.onItem -> ifexpression_ba7f3c.execute\n        ifexpression_ba7f3c.then -> setter_37a94d.execute\n        false -> setter_37a94d.new_value\n        ifexpression_ba7f3c.else -> for_66c362.next\n        n_2a8d7b -> ifexpression_85c8d7.gen_0\n        getter_4fb4e1.value -> ifexpression_85c8d7.gen_1\n        ifexpression_85c8d7.then -> continue_6db5b4\n        ifexpression_85c8d7.else -> for_66c362.next\n        getter_a9f8ae.value -> result_b0f1bf\n        setter_95f6a8.continue -> for_66c362.trigger\n        for_66c362.done -> continue_6db5b4\n    }\n\n    \n\n    instance(x: -176, y: 105) is_prime_1d9b8e root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8f4b1d\n        in(x: -269, y: -74, name: \"b\") property(Number) b_8c7e1a\n\n        out(x: 460, y: 135, name: \"result\") property(Bool) result_1f468d\n        out(x: 529, y: -110, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 100, y: 135) expression_3d7de6 root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_8f4b1d -> expression_3d7de6.gen_0\n        b_8c7e1a -> expression_3d7de6.gen_1\n        expression_3d7de6.result -> result_1f468d\n    }\n\n    \n\n    instance(x: -25, y: 19) OppositeSigns_407e1b root.main.OppositeSigns {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a7b3f\n\n        out(x: 964, y: 135, name: \"product\") property(Number) product_8d2c3e\n\n        instance(x: -10, y: 135) unique_numbers_8a7b3f root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -240, y: 135, name: \"acc\") property(List) acc_8a7b3f\n                in(x: -240, y: 135, name: \"item\") property(Number) item_8a7b3f\n\n                out(x: 964, y: 135, name: \"output\") property(List) output_8d2c3e\n\n                instance(x: -10, y: 135) contains_8a7b3f root.Std_k98ojb.List.Contains {}\n                item_8a7b3f -> contains_8a7b3f.item\n                acc_8a7b3f -> contains_8a7b3f.list\n\n                instance(x: -10, y: 135) ifexpression_8a7b3f root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n\n                instance(x: -10, y: 135) add_8a7b3f root.Std_k98ojb.List.Add {}\n                item_8a7b3f -> add_8a7b3f.item\n                acc_8a7b3f -> add_8a7b3f.list\n\n                contains_8a7b3f.contains -> ifexpression_8a7b3f.gen_0\n                ifexpression_8a7b3f.then -> acc_8a7b3f -> output_8d2c3e\n                ifexpression_8a7b3f.else -> add_8a7b3f.listWithItem -> output_8d2c3e\n            }\n        }\n\n        instance(x: 500, y: 135) product_calculation_8a7b3f root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -240, y: 135, name: \"acc\") property(Number) acc_8a7b3f\n                in(x: -240, y: 135, name: \"item\") property(Number) item_8a7b3f\n\n                out(x: 964, y: 135, name: \"output\") property(Number) output_8d2c3e\n\n                instance(x: -10, y: 135) mul_8a7b3f root.Std_k98ojb.Math.Mul {}\n                acc_8a7b3f -> mul_8a7b3f.first\n                item_8a7b3f -> mul_8a7b3f.second\n\n                mul_8a7b3f.result -> output_8d2c3e\n            }\n        }\n\n        list_8a7b3f -> unique_numbers_8a7b3f.items\n        List.Empty.list -> unique_numbers_8a7b3f.initialValue\n\n        unique_numbers_8a7b3f.outputList -> product_calculation_8a7b3f.items\n        1 -> product_calculation_8a7b3f.initialValue\n\n        product_calculation_8a7b3f.result -> product_8d2c3e\n    }\n\n    \n\n    instance(x: -97, y: -68) product_unique_numbers_def root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8a5b7f\n        in(x: -269, y: -104, name: \"list2\") property(List) list2_9d2c8e\n\n        out(x: 814, y: 34, name: \"output\") property(List) output_5b7f8a\n        out(x: 864, y: -104, name: \"continue\") trigger() continue_9d2c8e\n\n        instance(x: 133, y: 153) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 133, y: -104) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_8a5b7f -> difference_1.left\n        list2_9d2c8e -> difference_1.right\n\n        list2_9d2c8e -> difference_2.left\n        list1_8a5b7f -> difference_2.right\n\n        instance(x: 400, y: -30) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> output_5b7f8a\n    }\n\n    \n\n    instance(x: -174, y: 30) find_dissimilar_elements_instance root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a7b1f\n        in(x: -269, y: -114, name: \"n\") property(Number) n_1e19fb\n\n        out(x: 844, y: 135, name: \"rotated_list\") property(List) rotated_list_cbb7bd\n        out(x: 820, y: -114, name: \"continue\") trigger() continue_c95bcb\n\n        instance(x: 60, y: -114) modulo_3d7de6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 200, y: -114) length_5c4634 root.Std_k98ojb.List.Length {}\n        instance(x: 350, y: -114) sub_14921d root.Std_k98ojb.Math.Sub {}\n        instance(x: 500, y: -114) slice_61b38d root.Std_k98ojb.List.Slice {}\n        instance(x: 700, y: -114) slice_2f9d09 root.Std_k98ojb.List.Slice {}\n        instance(x: 850, y: -114) concat_9b38cc root.Std_k98ojb.List.Concat {}\n\n        list_8a7b1f -> length_5c4634.list\n        n_1e19fb -> modulo_3d7de6.value\n        length_5c4634.length -> modulo_3d7de6.divisor\n        length_5c4634.length -> sub_14921d.first\n        modulo_3d7de6.result -> sub_14921d.second\n        list_8a7b1f -> slice_61b38d.list\n        sub_14921d.result -> slice_61b38d.start\n        -1 -> slice_61b38d.end\n        list_8a7b1f -> slice_2f9d09.list\n        0 -> slice_2f9d09.start\n        modulo_3d7de6.result -> slice_2f9d09.end\n        slice_61b38d.slice -> concat_9b38cc.right\n        slice_2f9d09.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> rotated_list_cbb7bd\n\n    }\n\n    \n\n    instance(x: -150, y: 45) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") OppositeSigns {\n        in(x: -320, y: 154, name: \"a\") property(Number) a_8f4b6e\n        in(x: -327, y: -139, name: \"b\") property(Number) b_b12d2c\n        in(x: -510, y: 2, name: \"execute\") trigger() execute_1ddb9f\n\n        out(x: 468, y: -135, name: \"result\") property(Bool) result_c7b9e1\n        out(x: 535, y: 104, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: -226, y: -82) and_3a5d8a root.Std_k98ojb.Logic.And {}\n        instance(x: -219, y: 230) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < 0\"\n        }\n        instance(x: -207, y: 366) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"b > 0\"\n        }\n        instance(x: -159, y: 472) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a > 0\"\n        }\n        instance(x: -150, y: 609) ifexpression_ae4f1c root.Std_k98ojb.Std.IfExpression {\n            expression: \"b < 0\"\n        }\n        setter(x: -327, y: -218, name: \"setter_41e4ad\") setter_41e4ad = result\n        getter(x: -258, y: 699, name: \"getter_38583a\") getter_38583a = result\n        ifexpression_a2fa90.then -> and_3a5d8a.left\n        ifexpression_3d7de6.then -> and_3a5d8a.right\n        a_8f4b6e -> ifexpression_5c4634.gen_0\n        b_b12d2c -> ifexpression_a2fa90.gen_0\n        a_8f4b6e -> ifexpression_3d7de6.gen_0\n        b_b12d2c -> ifexpression_ae4f1c.gen_0\n        0 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> execute_1ddb9f\n        and_3a5d8a.result -> setter_41e4ad.new_value\n        ifexpression_a2fa90.else -> continue_a7f942\n        ifexpression_3d7de6.else -> continue_a7f942\n        ifexpression_5c4634.then -> ifexpression_a2fa90.execute\n        ifexpression_5c4634.else -> ifexpression_3d7de6.execute\n        ifexpression_ae4f1c.then -> and_3a5d8a.right\n        ifexpression_ae4f1c.else -> continue_a7f942\n        getter_38583a.value -> result_c7b9e1\n    }\n\n    \n\n    instance(x: -260, y: 20) opposite_signs_def9ac root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") is_divisible_by_11 {\n        in(x: -325, y: -40, name: \"number\") property(Number) number_ae8d1f\n        in(x: -329, y: 67, name: \"execute\") trigger() execute_b1b1c5\n\n        out(x: 446, y: 67, name: \"output\") property(Bool) output_0a5e8d\n        out(x: 443, y: -39, name: \"continue\") trigger() continue_c2f431\n\n        instance(x: -103, y: -37) modulo_f6b12c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 155, y: 28) ifexpression_1d52e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        setter(x: -374, y: -69, name: \"setter_3c2a7b\") setter_3c2a7b = result\n        getter(x: 103, y: 58, name: \"getter_b2e2d7\") getter_b2e2d7 = result\n        number_ae8d1f -> modulo_f6b12c.value\n        11 -> modulo_f6b12c.divisor\n        setter_3c2a7b.new_value -> ifexpression_1d52e1.gen_0\n        execute_b1b1c5 -> setter_3c2a7b.execute\n        getter_b2e2d7.value -> ifexpression_1d52e1.gen_0\n        modulo_f6b12c.result -> setter_3c2a7b.new_value\n        ifexpression_1d52e1.then -> continue_c2f431\n        ifexpression_1d52e1.else -> continue_c2f431\n        ifexpression_1d52e1.value -> output_0a5e8d\n    }\n\n    \n\n    instance(x: -179, y: 67) is_divisible_by_11_b4b29c root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces characters in a string\") ReplaceChars {\n        in(x: -435, y: 102, name: \"input\") property(String) input_1f846b\n        in(x: -427, y: -94, name: \"search\") property(String) search_c62075\n        in(x: -434, y: -27, name: \"replace\") property(String) replace_b5d10a\n\n        out(x: 485, y: 39, name: \"output\") property(String) output_732a8a\n\n        instance(x: -60, y: 11) replace_201051 root.Std_k98ojb.Strings.Replace {}\n        input_1f846b -> replace_201051.input\n        search_c62075 -> replace_201051.search\n        replace_b5d10a -> replace_201051.replace\n        replace_201051.output -> output_732a8a\n    }\n\n    \n\n    instance(x: -196, y: 45) ReplaceChars_cbc0b6 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -240, y: 69, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 58, name: \"product\") property(Number) product_1f468d\n\n        instance(x: -61, y: 62) unique_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -300, y: -50, name: \"accumulator\") property(List) accumulator_4a3c8f\n                in(x: -200, y: 100, name: \"current\") property(Number) current_7b6d9e\n\n                out(x: 300, y: 50, name: \"output\") property(List) output_4a3c8f\n                instance(x: -100, y: 200, stableId: \"dnbuj51ajiozratdcge1fc3s\") contains_c1bb22 root.Std_k98ojb.List.Contains {}\n                accumulator_4a3c8f -> contains_c1bb22.list\n                current_7b6d9e -> contains_c1bb22.item\n                instance(x: 0, y: 0) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n                contains_c1bb22.contains -> ifexpression_a2fa90.gen_0\n                accumulator_4a3c8f -> ifexpression_a2fa90.then\n                instance(x: 100, y: -50) add_14921d root.Std_k98ojb.List.Add {}\n                current_7b6d9e -> add_14921d.item\n                accumulator_4a3c8f -> add_14921d.list\n                add_14921d.listWithItem -> ifexpression_a2fa90.else\n                ifexpression_a2fa90.output -> output_4a3c8f\n            }\n        }\n        instance(x: 576, y: 62) product_8815e6 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -300, y: -50, name: \"accumulator\") property(Number) accumulator_4a3c8f\n                in(x: -200, y: 100, name: \"current\") property(Number) current_7b6d9e\n\n                out(x: 300, y: 50, name: \"output\") property(Number) output_4a3c8f\n                instance(x: -100, y: 200, stableId: \"dnbuj51ajiozratdcge1fc3s\") mul_c1bb22 root.Std_k98ojb.Math.Mul {}\n                accumulator_4a3c8f -> mul_c1bb22.first\n                current_7b6d9e -> mul_c1bb22.second\n                mul_c1bb22.result -> output_4a3c8f\n            }\n        }\n\n        List.Empty.list -> unique_7942d4.initialValue\n        list_668bd2 -> unique_7942d4.items\n        1 -> product_8815e6.initialValue\n        unique_7942d4.output -> product_8815e6.items\n        product_8815e6.output -> product_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) product_unique_407e1b root.main.product_unique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") DissimilarElements {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_ai\n\n        out(x: 600, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 450, y: -130) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 450, y: 20) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 750, y: -55) concat_3 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_3.left\n        difference_2.difference -> concat_3.right\n\n        concat_3.result -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) dissimilar_elements_node root.main.DissimilarElements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -145, y: 20, name: \"list\") property(List) list_83a4e7\n        in(x: -164, y: -93, name: \"n\") property(Number) n_e4f0b6\n\n        out(x: 805, y: -12, name: \"rotated_list\") property(List) rotated_list_8d6a57\n\n        instance(x: 306, y: -19) modulo_8e1634 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 118, y: 21) length_3c5835 root.Std_k98ojb.List.Length {}\n        instance(x: 706, y: -23) slice_a2a84d root.Std_k98ojb.List.Slice {}\n        instance(x: 704, y: 165) slice_3f2e41 root.Std_k98ojb.List.Slice {}\n        instance(x: 884, y: 82) concat_ea62d8 root.Std_k98ojb.List.Concat {}\n\n        list_83a4e7 -> length_3c5835.list\n        n_e4f0b6 -> modulo_8e1634.value\n        length_3c5835.length -> modulo_8e1634.divisor\n        modulo_8e1634.result -> slice_a2a84d.start\n        list_83a4e7 -> slice_a2a84d.list\n        -1 -> slice_a2a84d.end\n        slice_a2a84d.slice -> concat_ea62d8.right\n        modulo_8e1634.result -> slice_3f2e41.end\n        list_83a4e7 -> slice_3f2e41.list\n        0 -> slice_3f2e41.start\n        slice_3f2e41.slice -> concat_ea62d8.left\n        concat_ea62d8.result -> rotated_list_8d6a57\n    }\n\n    \n\n    instance(x: -96, y: 34) rotate_right_b0a2b3 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -312, y: 54, name: \"list\") property(List) list_0a\n        out(x: 832, y: 78, name: \"sum\") property(Number) sum_1b\n\n        instance(x: 296, y: 64) reduce_a1 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n        list_0a -> reduce_a1.items\n        reduce_a1.output_list -> sum_1b\n    }\n\n    \n\n    instance(x: -23, y: 56) SumArray_b2 root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -314, y: 205, name: \"n\") property(Number) n_6b655b\n        in(x: -398, y: 277, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 1243, y: 247, name: \"output\") property(Bool) output_732a8a\n        out(x: 1095, y: 164, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: -105, y: 168) ifexpression_a3f2d4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 118, y: 167) ifexpression_6c8b2a root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 305, y: 164) ifexpression_e2e0f1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % 2 == 0\"\n        }\n        instance(x: 502, y: 171) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 744, y: 170) ifexpression_ba7e5c root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: -264, y: 30, name: \"setter_41e4ad\") setter_41e4ad = is_prime\n        getter(x: 574, y: 89, name: \"getter_38583a\") getter_38583a = is_prime\n        instance(x: 206, y: -24) add_b4554f root.Std_k98ojb.Math.Add {}\n        1 -> setter_41e4ad.new_value\n        setter_41e4ad.continue -> ifexpression_a3f2d4.execute\n        execute_cdac2a -> setter_41e4ad.execute\n        n_6b655b -> ifexpression_a3f2d4.gen_0\n        ifexpression_a3f2d4.then -> continue_d9efd7\n        ifexpression_a3f2d4.else -> ifexpression_6c8b2a.execute\n        2 -> ifexpression_6c8b2a.gen_0\n        n_6b655b -> ifexpression_e2e0f1.gen_0\n        ifexpression_6c8b2a.then -> setter_41e4ad.execute\n        ifexpression_6c8b2a.else -> ifexpression_e2e0f1.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_e2e0f1.then -> continue_d9efd7\n        ifexpression_e2e0f1.else -> for_8cb3f6.reset\n        n_6b655b -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.items\n        2 -> for_8cb3f6.startIndex\n        n_6b655b -> for_8cb3f6.endIndex\n        for_8cb3f6.item -> ifexpression_ba7e5c.gen_0\n        n_6b655b -> ifexpression_ba7e5c.gen_1\n        ifexpression_ba7e5c.then -> continue_d9efd7\n        ifexpression_ba7e5c.else -> for_8cb3f6.next\n        for_8cb3f6.done -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        getter_38583a.value -> output_732a8a\n    }\n\n    \n\n    instance(x: -92, y: 45) is_prime_b9ff6b root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if the given two integers have opposite signs.\") OppositeSigns {\n        in(x: -254, y: -101, name: \"a\") property(Number) a_835b7d\n        in(x: 298, y: -164, name: \"b\") property(Number) b_f14c8f\n\n        out(x: 760, y: -130, name: \"result\") property(Bool) result_e35e4d\n\n        instance(x: 216, y: -95) mul_342a9b root.Std_k98ojb.Math.Mul {}\n        instance(x: 617, y: -136) lessThanZero_b0f5c2 root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_835b7d -> mul_342a9b.first\n        b_f14c8f -> mul_342a9b.second\n\n        mul_342a9b.result -> lessThanZero_b0f5c2.left\n        0 -> lessThanZero_b0f5c2.right\n\n        lessThanZero_b0f5c2.result -> result_e35e4d\n    }\n\n    \n\n    instance(x: -169, y: 78) OppositeSigns_a1a7b8 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if a number is divisible by 11.\") IsDivisibleBy11 {\n        in(x: -240, y: 36, name: \"number\") property(Number) number_3a5b3f\n\n        out(x: 708, y: 11, name: \"isDivisible\") property(Bool) isDivisible_4d9c8e\n\n        instance(x: 249, y: -51) modulo_671523 root.Std_k98ojb.Math.Modulo {}\n        11 -> modulo_671523.divisor\n        number_3a5b3f -> modulo_671523.value\n        instance(x: 432, y: -10) ifexpression_b3e6c9 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_671523.result -> ifexpression_b3e6c9.gen_0\n        ifexpression_b3e6c9.value -> isDivisible_4d9c8e\n    }\n\n    \n\n    instance(x: -32, y: 3) IsDivisibleBy11_d3f478 root.main.IsDivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceCharacters {\n        in(x: -435, y: 125, name: \"input\") property(String) input_8a5d5f\n        in(x: -398, y: -17, name: \"search\") property(String) search_ae6c0f\n        in(x: -403, y: 167, name: \"replace\") property(String) replace_b1324d\n\n        out(x: 526, y: 98, name: \"output\") property(String) output_0d75c1\n\n        instance(x: 56, y: 128) replace_1e02b1 root.Std_k98ojb.Strings.Replace {}\n        input_8a5d5f -> replace_1e02b1.input\n        search_ae6c0f -> replace_1e02b1.search\n        replace_b1324d -> replace_1e02b1.replace\n        replace_1e02b1.output -> output_0d75c1\n    }\n\n    \n\n    instance(x: -186, y: 49) ReplaceCharacters_def5a2 root.main.ReplaceCharacters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) output_ai\n\n        instance(x: 679, y: 87) reduce_f4c7e5 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"(acc * it)\"\n        }\n        instance(x: 132, y: -104) empty_19a03f root.Std_k98ojb.List.Empty {}\n        instance(x: 681, y: -106) filter_e957c4 root.Std_k98ojb.Query.Filter {\n            where: \"it == true\"\n        }\n        instance(x: 247, y: 76) map_3f5a7b root.Std_k98ojb.Iteration.Map {}\n        list_ai -> empty_19a03f.list\n        empty_19a03f.list -> reduce_f4c7e5.items\n        1 -> reduce_f4c7e5.identity\n        list_ai -> map_3f5a7b.items\n        func() {\n            in(x: -286, y: -193, name: \"item\") property(Number) item_0d4278\n\n            out(x: 46, y: 158, name: \"result\") property(Bool) result_5f7c2a\n\n            instance(x: -105, y: -110) contains_3e9b0f root.Std_k98ojb.List.Contains {}\n            item_0d4278 -> contains_3e9b0f.item\n            getter(x: 684, y: -313, name: \"getter_6a5c8d\") getter_6a5c8d = seenList\n            getter_6a5c8d.value -> contains_3e9b0f.list\n            instance(x: 729, y: -40) setter_1cedb2 root.Std_k98ojb.Setter {}\n            setter_1cedb2.key = \"seenList\"\n            setter_1cedb2.new_value = seenList\n            contains_3e9b0f.notContains -> result_5f7c2a\n            item_0d4278 -> add_72631c.item\n            instance(x: 599, y: -158) listadd_72631c root.Std_k98ojb.List.Add {}\n            getter_6a5c8d.value -> add_72631c.list\n            setter_1cedb2.execute -> add_72631c.trigger\n        } -> map_3f5a7b.handler\n        func() {\n            in(x: -294, y: 60, name: \"item\") property(Bool) item_a8e1d7\n\n            out(x: 158, y: 76, name: \"result\") property(Bool) result_1f7b3a\n        } -> filter_e957c4.handler\n        map_3f5a7b.output_list -> filter_e957c4.items\n        filter_e957c4.output_list -> reduce_f4c7e5.items\n        reduce_f4c7e5.result -> output_ai\n    }\n\n    \n\n    instance(x: -18, y: 20) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"dissimilarElements\") property(List) list_0d40f1\n\n        instance(x: 195, y: -130) difference_a3c4e2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 765, y: -130) difference_e5f9a6 root.Std_k98ojb.Sets.Difference {}\n\n        list1_1f846b -> difference_a3c4e2.left\n        list2_c62075 -> difference_a3c4e2.right\n\n        list1_1f846b -> difference_e5f9a6.right\n        list2_c62075 -> difference_e5f9a6.left\n\n        instance(x: 1067, y: -131) concat_a5d6c2 root.Std_k98ojb.List.Concat {}\n\n        difference_a3c4e2.difference -> concat_a5d6c2.left\n        difference_e5f9a6.difference -> concat_a5d6c2.right\n\n        concat_a5d6c2.result -> list_0d40f1\n    }\n\n    \n\n    instance(x: 14, y: -122) find_dissimilar_407e1b root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -135, y: 40, name: \"list\") property(List) list_c2e1d1\n        in(x: -98, y: -16, name: \"n\") property(Number) n_7a8b3f\n\n        out(x: 936, y: -57, name: \"result\") property(List) result_442c08\n        out(x: 818, y: -193, name: \"continue\") trigger() continue_a7e03a\n\n        instance(x: 377, y: -62) length_9b5b08 root.Std_k98ojb.List.Length {}\n        instance(x: 442, y: 66) modulo_1745c4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 385, y: -164) sub_e12f3d root.Std_k98ojb.Math.Sub {}\n        instance(x: 670, y: 67) slice_10e0c9 root.Std_k98ojb.List.Slice {}\n        instance(x: 765, y: -24) slice_f4a6f3 root.Std_k98ojb.List.Slice {}\n        instance(x: 1014, y: -88) concat_1d3e4f root.Std_k98ojb.List.Concat {}\n\n        list_c2e1d1 -> length_9b5b08.list\n        n_7a8b3f -> modulo_1745c4.value\n        length_9b5b08.length -> modulo_1745c4.divisor\n        modulo_1745c4.result -> sub_e12f3d.second\n        length_9b5b08.length -> sub_e12f3d.first\n        sub_e12f3d.result -> slice_10e0c9.start\n        0 -> slice_f4a6f3.start\n        sub_e12f3d.result -> slice_f4a6f3.end\n        list_c2e1d1 -> slice_10e0c9.list\n        list_c2e1d1 -> slice_f4a6f3.list\n        slice_10e0c9.slice -> concat_1d3e4f.left\n        slice_f4a6f3.slice -> concat_1d3e4f.right\n        concat_1d3e4f.result -> result_442c08\n    }\n\n    \n\n    instance(x: -75, y: -68) rotate_list_a79b92 root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_31d4a6\n        in(x: -338, y: 94, name: \"array\") property(List) array_f97f6e\n\n        out(x: 655, y: 182, name: \"sum\") property(Number) sum_a53b70\n        out(x: 676, y: -142, name: \"continue\") trigger() continue_77d9c2\n\n        instance(x: -38, y: -85) reduce_e985e1 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(a + b)\"\n        }\n        array_f97f6e -> reduce_e985e1.items\n        0 -> reduce_e985e1.start\n        reduce_e985e1.result -> sum_a53b70\n        execute_31d4a6 -> reduce_e985e1.reset\n        reduce_e985e1.done -> continue_77d9c2\n    }\n\n    \n\n    instance(x: -326, y: 7) SumArray_4528b9 root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks if the given integer is a prime number\") is_prime {\n        in(x: -123, y: 5, name: \"n\") property(Number) n_3a045b\n\n        out(x: 749, y: -18, name: \"result\") property(Bool) result_1f16c9\n        out(x: 767, y: 277, name: \"continue\") trigger() continue_d2303d\n\n        instance(x: 562, y: -138) ifexpression_ae4a11 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n < 2)\"\n        }\n        instance(x: 119, y: -137) ifexpression_c0f096 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 466, y: -52) add_2d8a2c root.Std_k98ojb.Math.Add {}\n        instance(x: 117, y: -321) for_c923f5 root.Std_k98ojb.Std.For {}\n        instance(x: 460, y: 252) lessthanorequal_7c86d2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: -103, y: -388) floor_41f2e1 root.Std_k98ojb.Math.Floor {}\n        instance(x: 577, y: 134) sqrt_a6a21d root.Std_k98ojb.Math.Pow {\n            y: 0.5\n        }\n        setter(x: -131, y: -323, name: \"setter_8c716a\") setter_8c716a = max_divisor\n        getter(x: 489, y: -456, name: \"getter_a0d6f4\") getter_a0d6f4 = max_divisor\n        setter(x: 325, y: 66, name: \"setter_9b1e57\") setter_9b1e57 = is_prime_flag\n        instance(x: -86, y: -314) not_04f8c6 root.Std_k98ojb.Logic.Not {}\n        getter(x: 228, y: 22, name: \"getter_a9d648\") getter_a9d648 = is_prime_flag\n        setter(x: -35, y: 107, name: \"setter_47a5f7\") setter_47a5f7 = i\n        getter(x: 219, y: 62, name: \"getter_6c4d8e\") getter_6c4d8e = i\n\n        n_3a045b -> sqrt_a6a21d.x\n        sqrt_a6a21d.result -> floor_41f2e1.input\n        floor_41f2e1.output -> setter_8c716a.new_value\n        setter_8c716a.continue -> ifexpression_ae4a11.execute\n        true -> setter_9b1e57.new_value\n        setter_9b1e57.continue -> for_c923f5.reset\n        2 -> add_2d8a2c.first\n        getter_6c4d8e.value -> add_2d8a2c.second\n        add_2d8a2c.result -> setter_47a5f7.new_value\n        setter_47a5f7.continue -> continue_d2303d\n        ifexpression_ae4a11.then -> setter_9b1e57.execute\n        false -> setter_9b1e57.new_value\n        ifexpression_ae4a11.else -> for_c923f5.reset\n        n_3a045b -> for_c923f5.items\n        for_c923f5.onItem -> lessthanorequal_7c86d2.execute\n        getter_a0d6f4.value -> lessthanorequal_7c86d2.right\n        for_c923f5.item -> lessthanorequal_7c86d2.left\n        lessthanorequal_7c86d2.result -> ifexpression_c0f096.execute\n        n_3a045b -> ifexpression_c0f096.gen_0\n        for_c923f5.item -> ifexpression_c0f096.gen_1\n        ifexpression_c0f096.then -> setter_9b1e57.execute\n        false -> setter_9b1e57.new_value\n        ifexpression_c0f096.else -> for_c923f5.next\n        getter_a9d648.value -> not_04f8c6.input\n        not_04f8c6.output -> result_1f16c9\n        for_c923f5.done -> continue_d2303d\n    }\n\n    \n\n    instance(x: -73, y: 15) is_prime_b4e1a3 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8e5b2f\n        in(x: -269, y: -7, name: \"b\") property(Number) b_4d2c8f\n\n        out(x: 468, y: 103, name: \"result\") property(Bool) result_8e5b2f\n        out(x: 519, y: -7, name: \"continue\") trigger() continue_8e5b2f\n\n        instance(x: -146, y: 103) expression_8e5b2f root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_8e5b2f -> expression_8e5b2f.gen_0\n        b_4d2c8f -> expression_8e5b2f.gen_1\n        expression_8e5b2f.result -> result_8e5b2f\n    }\n\n    \n\n    instance(x: -36, y: 79) OppositeSigns_8e5b2f root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a7b3f\n\n        out(x: 964, y: 135, name: \"product\") property(Number) product_8d2c3e\n\n        instance(x: -10, y: 135) unique_numbers_8d2c3e root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -46, y: -70, name: \"accumulator\") property(List) accumulator_8d2c3e\n                in(x: -51, y: 10, name: \"current\") property(Number) current_8d2c3e\n\n                out(x: 49, y: -69, name: \"output\") property(List) output_8d2c3e\n\n                instance(x: 78, y: -58) contains_8d2c3e root.Std_k98ojb.List.Contains {}\n                instance(x: 104, y: -16) add_8d2c3e root.Std_k98ojb.List.Add {}\n\n                accumulator_8d2c3e -> contains_8d2c3e.list\n                current_8d2c3e -> contains_8d2c3e.item\n\n                instance(x: 140, y: -56) ifexpression_8d2c3e root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n\n                contains_8d2c3e.contains -> ifexpression_8d2c3e.gen_0\n\n                func() {\n                    in(x: 176, y: -54, name: \"accumulator\") property(List) accumulator_8d2c3e\n                    out(x: 212, y: -54, name: \"output\") property(List) output_8d2c3e\n\n                    accumulator_8d2c3e -> output_8d2c3e\n                } -> ifexpression_8d2c3e.then\n\n                func() {\n                    in(x: 176, y: -54, name: \"accumulator\") property(List) accumulator_8d2c3e\n                    in(x: 190, y: -54, name: \"current\") property(Number) current_8d2c3e\n\n                    out(x: 212, y: -54, name: \"output\") property(List) output_8d2c3e\n\n                    accumulator_8d2c3e -> add_8d2c3e.list\n                    current_8d2c3e -> add_8d2c3e.item\n\n                    add_8d2c3e.listWithItem -> output_8d2c3e\n                } -> ifexpression_8d2c3e.else\n\n                ifexpression_8d2c3e.value -> output_8d2c3e\n            }\n        }\n\n        instance(x: 504, y: 135) reduce_product_8d2c3e root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -46, y: -70, name: \"accumulator\") property(Number) accumulator_8d2c3e\n                in(x: -51, y: 10, name: \"current\") property(Number) current_8d2c3e\n\n                out(x: 49, y: -69, name: \"output\") property(Number) output_8d2c3e\n\n                instance(x: 78, y: -58) mul_8d2c3e root.Std_k98ojb.Math.Mul {}\n\n                accumulator_8d2c3e -> mul_8d2c3e.first\n                current_8d2c3e -> mul_8d2c3e.second\n\n                mul_8d2c3e.result -> output_8d2c3e\n            }\n        }\n\n        list_8a7b3f -> unique_numbers_8d2c3e.items\n        1 -> unique_numbers_8d2c3e.initialValue\n        unique_numbers_8d2c3e.output_list -> reduce_product_8d2c3e.items\n        1 -> reduce_product_8d2c3e.initialValue\n        reduce_product_8d2c3e.result -> product_8d2c3e\n    }\n\n    \n\n    instance(x: -97, y: 65) product_unique_numbers_def9ac root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8a5b7f\n        in(x: -269, y: -104, name: \"list2\") property(List) list2_b2c7d1\n\n        out(x: 784, y: 32, name: \"output\") property(List) output_1a5b9f\n\n        instance(x: 167, y: -104) difference_2e4b9a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 167, y: 153) difference_2e4b9b root.Std_k98ojb.Sets.Difference {}\n\n        list1_8a5b7f -> difference_2e4b9a.left\n        list2_b2c7d1 -> difference_2e4b9a.right\n\n        list2_b2c7d1 -> difference_2e4b9b.left\n        list1_8a5b7f -> difference_2e4b9b.right\n\n        instance(x: 360, y: -10) concat_3e4b9c root.Std_k98ojb.List.Concat {}\n\n        difference_2e4b9a.difference -> concat_3e4b9c.left\n        difference_2e4b9b.difference -> concat_3e4b9c.right\n\n        concat_3e4b9c.result -> output_1a5b9f\n    }\n\n    \n\n    instance(x: -174, y: 20) find_dissimilar_elements_cbc0b6 root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a1b3f\n        in(x: -269, y: -74, name: \"n\") property(Number) n_4d2c7e\n\n        out(x: 840, y: 135, name: \"rotated_list\") property(List) rotated_list_1b2a3f\n        out(x: 960, y: -74, name: \"continue\") trigger() continue_8d7c9e\n\n        instance(x: 104, y: 150) length_8a2b3f root.Std_k98ojb.List.Length {}\n        instance(x: 260, y: -100) modulo_4d2c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 420, y: 50) sub_8a1b3f root.Std_k98ojb.Math.Sub {}\n        instance(x: 600, y: -100) slice_4d2c7e root.Std_k98ojb.List.Slice {}\n        instance(x: 600, y: 150) slice_8a1b3f root.Std_k98ojb.List.Slice {}\n        instance(x: 750, y: 50) concat_4d2c7e root.Std_k98ojb.List.Concat {}\n\n        list_8a1b3f -> length_8a2b3f.list\n        n_4d2c7e -> modulo_4d2c7e.value\n        length_8a2b3f.length -> modulo_4d2c7e.divisor\n        length_8a2b3f.length -> sub_8a1b3f.first\n        modulo_4d2c7e.result -> sub_8a1b3f.second\n        list_8a1b3f -> slice_4d2c7e.list\n        sub_8a1b3f.result -> slice_4d2c7e.start\n        -1 -> slice_4d2c7e.end\n        list_8a1b3f -> slice_8a1b3f.list\n        0 -> slice_8a1b3f.start\n        sub_8a1b3f.result -> slice_8a1b3f.end\n        slice_4d2c7e.slice -> concat_4d2c7e.right\n        slice_8a1b3f.slice -> concat_4d2c7e.left\n        concat_4d2c7e.result -> rotated_list_1b2a3f\n    }\n\n    \n\n    instance(x: -96, y: 50) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") CheckOppositeSigns {\n        in(x: -320, y: 145, name: \"a\") property(Number) a_8f62e4\n        in(x: -337, y: -93, name: \"b\") property(Number) b_a25d7c\n        in(x: -510, y: -114, name: \"execute\") trigger() execute_9a826f\n\n        out(x: 560, y: -114, name: \"continue\") trigger() continue_b9372b\n        out(x: 394, y: 145, name: \"result\") property(Bool) result_24d84c\n\n        instance(x: -160, y: -110) expression_738a7b root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_8f62e4 -> expression_738a7b.gen_0\n        b_a25d7c -> expression_738a7b.gen_1\n        execute_9a826f -> expression_738a7b.execute\n        expression_738a7b.result -> result_24d84c\n        continue_b9372b -> continue_b9372b\n    }\n\n    \n\n    instance(x: -150, y: 6) CheckOppositeSigns_a6e4d5 root.main.CheckOppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") is_divisible_by_11 {\n        in(x: -325, y: -40, name: \"number\") property(Number) number_ae8d1f\n        in(x: -329, y: 67, name: \"execute\") trigger() execute_c23a2b\n\n        out(x: 446, y: 57, name: \"result\") property(Bool) result_04c78d\n        out(x: 519, y: -129, name: \"continue\") trigger() continue_183a7b\n\n        instance(x: -106, y: 21) modulo_f9f8a7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 144, y: 54) ifexpression_ae42b6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        setter(x: -36, y: -147, name: \"setter_3f2b9c\") setter_3f2b9c = local_result\n        getter(x: -155, y: 88, name: \"getter_48e2d0\") getter_48e2d0 = local_result\n        11 -> modulo_f9f8a7.divisor\n        number_ae8d1f -> modulo_f9f8a7.value\n        execute_c23a2b -> setter_3f2b9c.execute\n        getter_48e2d0.value -> result_04c78d\n        modulo_f9f8a7.result -> ifexpression_ae42b6.gen_0\n        ifexpression_ae42b6.then -> setter_3f2b9c.execute\n        true -> setter_3f2b9c.new_value\n        false -> setter_3f2b9c.new_value\n        ifexpression_ae42b6.else -> setter_3f2b9c.execute\n        setter_3f2b9c.continue -> continue_183a7b\n    }\n\n    \n\n    instance(x: -105, y: 13) is_divisible_by_11_a7413d root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces characters in a string\") ReplaceChars {\n        in(x: -435, y: 102, name: \"input\") property(String) input_3a4d8e\n        in(x: -437, y: -169, name: \"search\") property(String) search_2c429b\n        in(x: -435, y: -406, name: \"replace\") property(String) replace_4f18d6\n\n        out(x: 577, y: -182, name: \"output\") property(String) output_8b6a9e\n        out(x: 633, y: 308, name: \"continue\") trigger() continue_e4c28a\n\n        instance(x: 253, y: -78) replace_c1d5f9 root.Std_k98ojb.Strings.Replace {}\n        input_3a4d8e -> replace_c1d5f9.input\n        search_2c429b -> replace_c1d5f9.search\n        replace_4f18d6 -> replace_c1d5f9.replace\n        replace_c1d5f9.value -> output_8b6a9e\n    }\n\n    \n\n    instance(x: -307, y: 24) ReplaceChars_a6c5a6 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -240, y: 69, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 58, name: \"product\") property(Number) product_1f468d\n\n        instance(x: -61, y: 62) unique_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -300, y: -50, name: \"accumulator\") property(List) accumulator_4a3c8f\n                in(x: -100, y: 50, name: \"current\") property(Number) current_2b6d9e\n\n                out(x: 300, y: 0, name: \"output\") property(List) output_3c4d7a\n\n                instance(x: 200, y: -100) contains_5f8d2a root.Std_k98ojb.List.Contains {}\n                current_2b6d9e -> contains_5f8d2a.item\n                accumulator_4a3c8f -> contains_5f8d2a.list\n                func() {\n                    in(x: -100, y: 0, name: \"item\") property(Number) item_4b6d9e\n\n                    out(x: 100, y: 0, name: \"output\") property(List) output_3c4d7a\n\n                    instance(x: 50, y: -50) add_14921d root.Std_k98ojb.List.Add {}\n                    item_4b6d9e -> add_14921d.item\n                    accumulator_4a3c8f -> add_14921d.list\n                    add_14921d.listWithItem -> output_3c4d7a\n                } -> ifexpression_5c4634.then\n                func() {\n                    in(x: -100, y: 0, name: \"item\") property(Number) item_4b6d9e\n\n                    out(x: 100, y: 0, name: \"output\") property(List) output_3c4d7a\n\n                    accumulator_4a3c8f -> output_3c4d7a\n                } -> ifexpression_5c4634.else\n                instance(x: -100, y: 0) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n                contains_5f8d2a.contains -> ifexpression_5c4634.predicate\n                current_2b6d9e -> ifexpression_5c4634.gen_0\n                ifexpression_5c4634.value -> output_3c4d7a\n            }\n        }\n        instance(x: 177, y: 66) reduce_875ddb root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -300, y: -50, name: \"accumulator\") property(Number) accumulator_4a3c8f\n                in(x: -100, y: 50, name: \"current\") property(Number) current_2b6d9e\n\n                out(x: 300, y: 0, name: \"output\") property(Number) output_3c4d7a\n\n                instance(x: 50, y: -50) mul_14921d root.Std_k98ojb.Math.Mul {}\n                accumulator_4a3c8f -> mul_14921d.first\n                current_2b6d9e -> mul_14921d.second\n                mul_14921d.result -> output_3c4d7a\n            }\n        }\n        1 -> unique_7942d4.initialValue\n        list_668bd2 -> unique_7942d4.items\n        unique_7942d4.outputList -> reduce_875ddb.items\n        1 -> reduce_875ddb.initialValue\n        reduce_875ddb.accumulatedValue -> product_1f468d\n    }\n\n    \n\n    instance(x: -30, y: -52) product_unique_407e1b root.main.product_unique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") DissimilarElements {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_ai\n\n        out(x: 600, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 450, y: -130) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 450, y: 20) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 750, y: -55) concat root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_elements_node root.main.DissimilarElements {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -145, y: 20, name: \"list\") property(List) list_8a3e8f\n        in(x: -196, y: -178, name: \"n\") property(Number) n_b6c36b\n\n        out(x: 804, y: -152, name: \"rotated_list\") property(List) rotated_list_8d8e4c\n        out(x: 819, y: -377, name: \"continue\") trigger() continue_8f8a5d\n\n        instance(x: 106, y: -215) length_1a7b28 root.Std_k98ojb.List.Length {}\n        instance(x: 247, y: -305) modulo_20e474 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 466, y: -328) length_1a7b28_copy root.Std_k98ojb.List.Length {}\n        instance(x: 598, y: -210) sub_3c84f7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 668, y: -148) slice_32d6d7 root.Std_k98ojb.List.Slice {}\n        instance(x: 598, y: -370) slice_4c836a root.Std_k98ojb.List.Slice {}\n        instance(x: 801, y: -262) concat_3d21f1 root.Std_k98ojb.List.Concat {}\n\n        list_8a3e8f -> length_1a7b28.list\n        n_b6c36b -> modulo_20e474.value\n        length_1a7b28.length -> modulo_20e474.divisor\n        list_8a3e8f -> length_1a7b28_copy.list\n        length_1a7b28_copy.length -> sub_3c84f7.first\n        modulo_20e474.result -> sub_3c84f7.second\n        sub_3c84f7.result -> slice_32d6d7.start\n        0 -> slice_4c836a.start\n        sub_3c84f7.result -> slice_4c836a.end\n        list_8a3e8f -> slice_32d6d7.list\n        list_8a3e8f -> slice_4c836a.list\n        slice_32d6d7.slice -> concat_3d21f1.right\n        slice_4c836a.slice -> concat_3d21f1.left\n        concat_3d21f1.result -> rotated_list_8d8e4c\n    }\n\n    \n\n    instance(x: -195, y: 107) rotate_right_a7b3ef root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -320, y: 154, name: \"list\") property(List) list_0a\n        out(x: 855, y: 169, name: \"sum\") property(Number) sum_0b\n\n        instance(x: 157, y: -34) reduce_f2330d root.Std_k98ojb.Iteration.Reduce {}\n        list_0a -> reduce_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -121, y: 45, name: \"item\") property(Number) item_8ee83a\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) add_584bfd root.Std_k98ojb.Math.Add {}\n            acc_8ee839 -> add_584bfd.first\n            item_8ee83a -> add_584bfd.second\n            add_584bfd.result -> _7dd980\n        } -> reduce_f2330d.reducer\n        0 -> reduce_f2330d.initialValue\n        reduce_f2330d.reduced -> sum_0b\n    }\n\n    \n\n    instance(x: -162, y: 45) SumArray_b9ff6b root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -314, y: 205, name: \"n\") property(Number) n_6a82e4\n        in(x: -307, y: 259, name: \"execute\") trigger() execute_e3c82f\n\n        out(x: 751, y: 259, name: \"is_prime\") property(Bool) is_prime_6d8b1e\n        out(x: 743, y: 205, name: \"continue\") trigger() continue_e64a8f\n\n        instance(x: -38, y: 129) ifexpression_884325 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 70, y: 130) ifexpression_f3a6e1 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n == 2\"\n        }\n        instance(x: 415, y: 131) ifexpression_8c2987 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 164, y: -33) ifexpression_3f1d85 root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > n\"\n        }\n        instance(x: 275, y: 269) for_ae07a1 root.Std_k98ojb.Std.For {}\n        instance(x: 345, y: -143) add_8f1c2a root.Std_k98ojb.Math.Add {}\n        setter(x: -185, y: 188, name: \"setter_60e7f1\") setter_60e7f1 = i\n        getter(x: -134, y: 244, name: \"getter_927b6a\") getter_927b6a = i\n        getter(x: 85, y: 186, name: \"getter_e0d5c5\") getter_e0d5c5 = is_prime\n        setter(x: 434, y: -108, name: \"setter_2984b1\") setter_2984b1 = i\n        instance(x: 672, y: 189) ifexpression_c1a5c7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"is_prime\"\n        }\n        getter(x: 630, y: -135, name: \"getter_4437f6\") getter_4437f6 = i\n        setter(x: 283, y: -191, name: \"setter_c7d5a7\") setter_c7d5a7 = is_prime\n        instance(x: 208, y: 268) generaterange_2b142f root.Std_k98ojb.List.GenerateRange {}\n        getter_e0d5c5.value -> ifexpression_c1a5c7.gen_0\n        ifexpression_c1a5c7.then -> continue_e64a8f\n        setter_c7d5a7.new_value -> setter_c7d5a7.new_value\n        setter_c7d5a7.continue -> continue_e64a8f\n        getter_927b6a.value -> ifexpression_3f1d85.gen_0\n        n_6a82e4 -> ifexpression_3f1d85.gen_1\n        ifexpression_3f1d85.then -> continue_e64a8f\n        getter_927b6a.value -> ifexpression_8c2987.gen_0\n        n_6a82e4 -> ifexpression_8c2987.gen_1\n        ifexpression_8c2987.then -> setter_c7d5a7.execute\n        false -> setter_c7d5a7.new_value\n        for_ae07a1.onItem -> ifexpression_3f1d85.execute\n        2 -> generaterange_2b142f.from\n        getter_927b6a.value -> add_8f1c2a.first\n        1 -> add_8f1c2a.second\n        add_8f1c2a.result -> setter_2984b1.new_value\n        for_ae07a1.next -> setter_2984b1.execute\n        generaterange_2b142f.list -> for_ae07a1.items\n        ifexpression_f3a6e1.then -> continue_e64a8f\n        true -> setter_c7d5a7.new_value\n        setter_c7d5a7.continue -> continue_e64a8f\n        ifexpression_8c2987.else -> for_ae07a1.next\n        ifexpression_f3a6e1.else -> ifexpression_884325.execute\n        false -> setter_c7d5a7.new_value\n        setter_c7d5a7.continue -> continue_e64a8f\n        ifexpression_884325.then -> setter_c7d5a7.execute\n        true -> setter_c7d5a7.new_value\n        setter_c7d5a7.continue -> continue_e64a8f\n        for_ae07a1.done -> continue_e64a8f\n        ifexpression_884325.else -> ifexpression_f3a6e1.execute\n        n_6a82e4 -> ifexpression_f3a6e1.gen_0\n        n_6a82e4 -> ifexpression_884325.gen_0\n        1 -> setter_c7d5a7.new_value\n        execute_e3c82f -> setter_c7d5a7.execute\n        getter_4437f6.value -> for_ae07a1.index\n    }\n\n    \n\n    instance(x: -393, y: 194) is_prime_b97608 root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if the given two integers have opposite signs.\") OppositeSigns {\n        in(x: -254, y: -101, name: \"a\") property(Number) a_9f83cd\n        in(x: -264, y: 22, name: \"b\") property(Number) b_a71c6d\n\n        out(x: 404, y: 65, name: \"result\") property(Bool) result_db1bae\n\n        instance(x: -39, y: -86, stableId: \"xgigkzqo5s4mmdn2i8q8c7y\") and_d3a1cc root.Std_k98ojb.Logic.And {}\n        instance(x: -102, y: 67) greaterthanorequal_a15f49 root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        instance(x: -94, y: -226) greaterthanorequal_3af4b6 root.Std_k98ojb.Math.GreaterThanOrEqual {}\n        a_9f83cd -> greaterthanorequal_a15f49.left\n        b_a71c6d -> greaterthanorequal_a15f49.right\n        b_a71c6d -> greaterthanorequal_3af4b6.left\n        a_9f83cd -> greaterthanorequal_3af4b6.right\n        greaterthanorequal_a15f49.result -> and_d3a1cc.left\n        greaterthanorequal_3af4b6.result -> and_d3a1cc.right\n        and_d3a1cc.result -> result_db1bae\n    }\n\n    \n\n    instance(x: -270, y: 15) oppositeSignsNode root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if a number is divisible by 11.\") IsDivisibleBy11 {\n        in(x: -240, y: 36, name: \"number\") property(Number) number_4b3f3a\n\n        out(x: 579, y: 11, name: \"isDivisible\") property(Bool) isDivisible_28c3d9\n\n        instance(x: 109, y: -53) modulo_6f3b47 root.Std_k98ojb.Math.Modulo {}\n        11 -> modulo_6f3b47.divisor\n        number_4b3f3a -> modulo_6f3b47.value\n        instance(x: 286, y: -53) logicalequal_2c8889 root.Std_k98ojb.Logic.Equal {}\n        0 -> logicalequal_2c8889.right\n        modulo_6f3b47.result -> logicalequal_2c8889.left\n        logicalequal_2c8889.output -> isDivisible_28c3d9\n    }\n\n    \n\n    instance(x: -150, y: 32) IsDivisibleBy11_a5c8e6 root.main.IsDivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceCharacters {\n        in(x: -435, y: 127, name: \"input\") property(String) input_8a7e9f\n        in(x: -398, y: -16, name: \"search\") property(String) search_c9b10f\n        in(x: -403, y: -157, name: \"replace\") property(String) replace_b082aa\n\n        out(x: 348, y: -16, name: \"output\") property(String) output_532baa\n\n        instance(x: -93, y: 77) replace_aec0d5 root.Std_k98ojb.Strings.Replace {}\n        input_8a7e9f -> replace_aec0d5.input\n        search_c9b10f -> replace_aec0d5.search\n        replace_b082aa -> replace_aec0d5.replace\n        replace_aec0d5.output -> output_532baa\n    }\n\n    \n\n    instance(x: -65, y: 47) ReplaceCharacters_9ae1f2 root.main.ReplaceCharacters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) output_ai\n\n        instance(x: 679, y: 89) reduce_a5e4a7 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"(acc * it)\"\n        }\n        instance(x: 132, y: -105) setdifference_5f0a1c root.Std_k98ojb.Sets.Difference {}\n        list_ai -> setdifference_5f0a1c.left\n        list_ai -> setdifference_5f0a1c.right\n        setdifference_5f0a1c.difference -> reduce_a5e4a7.items\n        1 -> reduce_a5e4a7.initialValue\n        reduce_a5e4a7.reduced -> output_ai\n    }\n    \n\n    instance(x: -183, y: 69) unique_product_node root.main.UniqueProduct {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"dissimilarElements\") property(List) list_0d40f1\n\n        instance(x: 195, y: -130) difference_a9e8b2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 765, y: -130) difference_e2f6c0 root.Std_k98ojb.Sets.Difference {}\n\n        list1_1f846b -> difference_a9e8b2.left\n        list2_c62075 -> difference_a9e8b2.right\n\n        list1_1f846b -> difference_e2f6c0.right\n        list2_c62075 -> difference_e2f6c0.left\n\n        instance(x: 383, y: -35) concat_bec9a7 root.Std_k98ojb.List.Concat {}\n\n        difference_a9e8b2.difference -> concat_bec9a7.left\n        difference_e2f6c0.difference -> concat_bec9a7.right\n\n        concat_bec9a7.result -> list_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) find_dissimilar_cbc0b6 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -135, y: 40, name: \"list\") property(List) list_eb5f32\n        in(x: -98, y: -16, name: \"n\") property(Number) n_7a1c5e\n\n        out(x: 936, y: -18, name: \"result\") property(List) result_085b4c\n        out(x: 832, y: 26, name: \"continue\") trigger() continue_c39dbd\n\n        instance(x: 210, y: 47) length_1ba29c root.Std_k98ojb.List.Length {}\n        instance(x: 465, y: -50) mod_f4f1ae root.Std_k98ojb.Math.Modulo {}\n        instance(x: 703, y: 27) slice_79d5f6 root.Std_k98ojb.List.Slice {}\n        instance(x: 476, y: 184) add_a1c2cb root.Std_k98ojb.Math.Add {}\n        instance(x: 1003, y: -21) slice_7e50ba root.Std_k98ojb.List.Slice {}\n        instance(x: 1164, y: -10) concat_0d72a9 root.Std_k98ojb.List.Concat {}\n\n        list_eb5f32 -> length_1ba29c.list\n        length_1ba29c.length -> mod_f4f1ae.divisor\n        n_7a1c5e -> mod_f4f1ae.value\n        mod_f4f1ae.result -> add_a1c2cb.first\n        mod_f4f1ae.result -> slice_7e50ba.start\n        length_1ba29c.length -> add_a1c2cb.second\n        add_a1c2cb.result -> slice_79d5f6.start\n        list_eb5f32 -> slice_79d5f6.list\n        -1 -> slice_79d5f6.end\n        list_eb5f32 -> slice_7e50ba.list\n        -1 -> slice_7e50ba.end\n        slice_7e50ba.slice -> concat_0d72a9.left\n        slice_79d5f6.slice -> concat_0d72a9.right\n        concat_0d72a9.result -> result_085b4c\n    }\n\n    \n\n    instance(x: -135, y: -88) rotate_list_feb4e6 root.main.rotate_list {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_30f9e3\n        in(x: -338, y: 10, name: \"list\") property(List) list_f9d7a7\n\n        out(x: 656, y: 146, name: \"sum\") property(Number) sum_e0baf1\n        out(x: 664, y: -287, name: \"continue\") trigger() continue_8bb1c3\n\n        instance(x: -99, y: 268) reduce_f6cafb root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        execute_30f9e3 -> reduce_f6cafb.trigger\n        list_f9d7a7 -> reduce_f6cafb.items\n        0 -> reduce_f6cafb.initialAcc\n        reduce_f6cafb.accumulatedValue -> sum_e0baf1\n        reduce_f6cafb.done -> continue_8bb1c3\n    }\n\n    \n\n    instance(x: -207, y: 94) SumArray_d195d7 root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks if the given integer is a prime number\") is_prime {\n        in(x: -123, y: 5, name: \"n\") property(Number) n_2d04af\n        out(x: 837, y: -109, name: \"result\") property(Bool) result_4a16e5\n\n        instance(x: 299, y: -544) ifexpression_263f88 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n < 2)\"\n        }\n        instance(x: 530, y: -519) for_a76ae7 root.Std_k98ojb.Std.For {}\n        instance(x: 412, y: -676) ifexpression_4fbc2d root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 23, y: -560, name: \"setter_d2a2ef\") setter_d2a2ef = isPrime\n        getter(x: 417, y: -818, name: \"getter_91f764\") getter_91f764 = isPrime\n        getter(x: 325, y: -603, name: \"getter_ea931d\") getter_ea931d = isPrime\n        setter(x: 842, y: -755, name: \"setter_9eeb3f\") setter_9eeb3f = isPrime\n        instance(x: -60, y: -509) floor_ae47db root.Std_k98ojb.Math.Floor {}\n        instance(x: 219, y: -672) pow_4de98a root.Std_k98ojb.Math.Pow {}\n        instance(x: 322, y: -560) add_ae26bf root.Std_k98ojb.Math.Add {}\n\n        false -> setter_d2a2ef.new_value\n        setter_d2a2ef.continue -> ifexpression_263f88.execute\n        n_2d04af -> floor_ae47db.input\n        0.5 -> pow_4de98a.y\n        pow_4de98a.result -> add_ae26bf.second\n        add_ae26bf.first -> for_a76ae7.items\n        for_a76ae7.item -> ifexpression_4fbc2d.gen_0\n        n_2d04af -> ifexpression_4fbc2d.gen_1\n        1 -> add_ae26bf.first\n        true -> setter_9eeb3f.new_value\n        getter_ea931d.value -> setter_d2a2ef.execute\n        floor_ae47db.output -> pow_4de98a.x\n        ifexpression_4fbc2d.then -> setter_d2a2ef.execute\n        ifexpression_4fbc2d.else -> for_a76ae7.next\n        getter_91f764.value -> result_4a16e5\n        ifexpression_263f88.else -> setter_9eeb3f.execute\n    }\n\n    \n\n    instance(x: -84, y: 20) is_prime_7db68d root.main.is_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not\") OppositeSigns {\n        in(x: -240, y: 135, name: \"a\") property(Number) a_8e5b2f\n        in(x: -269, y: -7, name: \"b\") property(Number) b_4d2c8f\n\n        out(x: 468, y: 103, name: \"result\") property(Bool) result_8e5b2f\n        out(x: 519, y: -7, name: \"continue\") trigger() continue_8e5b2f\n\n        instance(x: -146, y: 103) expression_8e5b2f root.Std_k98ojb.Math.Expression {\n            expression: \"(a ^ b) < 0\"\n        }\n        a_8e5b2f -> expression_8e5b2f.gen_0\n        b_4d2c8f -> expression_8e5b2f.gen_1\n        expression_8e5b2f.result -> result_8e5b2f\n    }\n\n    \n\n    instance(x: -36, y: 79) OppositeSigns_8e5b2f root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11\") DivisibleBy11 {\n        in(x: -240, y: 69, name: \"number\") property(Number) number_668bd2\n\n        out(x: 753, y: 58, name: \"isDivisible\") property(Bool) isDivisible_1f468d\n\n        instance(x: -61, y: 62) modulo_7942d4 root.Std_k98ojb.Math.Modulo {}\n        number_668bd2 -> modulo_7942d4.value\n        11 -> modulo_7942d4.divisor\n        instance(x: 305, y: 66) ifexpression_c1bb22 root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        modulo_7942d4.result -> ifexpression_c1bb22.gen_0\n        ifexpression_c1bb22.then -> isDivisible_1f468d\n        false -> isDivisible_1f468d\n    }\n\n    \n\n    instance(x: 14, y: -52) divisibleBy11_407e1b root.main.DivisibleBy11 {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replace characters in a string\") ReplaceChars {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        in(x: -400, y: 2, name: \"search\") property(String) search_ai\n        in(x: -270, y: 2, name: \"replace\") property(String) replace_ai\n\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) replace_node root.main.ReplaceChars {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"converts the given string to lowercase\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n    \n\n    instance(x: -179, y: 30) tolower_node root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a7b3f\n\n        out(x: 964, y: 135, name: \"product\") property(Number) product_8d2c3e\n\n        instance(x: -10, y: 135) unique_numbers_8d2c3e root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -46, y: -70, name: \"accumulator\") property(List) accumulator_8d2c3e\n                in(x: -51, y: 10, name: \"current\") property(Number) current_8d2c3e\n\n                out(x: 49, y: -69, name: \"output\") property(List) output_8d2c3e\n\n                instance(x: 78, y: -58) contains_8d2c3e root.Std_k98ojb.List.Contains {}\n                instance(x: 104, y: -16) add_8d2c3e root.Std_k98ojb.List.Add {}\n\n                accumulator_8d2c3e -> contains_8d2c3e.list\n                current_8d2c3e -> contains_8d2c3e.item\n\n                instance(x: 140, y: -56) ifexpression_8d2c3e root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n\n                contains_8d2c3e.contains -> ifexpression_8d2c3e.gen_0\n\n                func() {\n                    in(x: 176, y: -54, name: \"accumulator\") property(List) accumulator_8d2c3e\n                    out(x: 212, y: -54, name: \"output\") property(List) output_8d2c3e\n\n                    accumulator_8d2c3e -> output_8d2c3e\n                } -> ifexpression_8d2c3e.then\n\n                func() {\n                    in(x: 176, y: -54, name: \"accumulator\") property(List) accumulator_8d2c3e\n                    in(x: 190, y: -54, name: \"current\") property(Number) current_8d2c3e\n\n                    out(x: 212, y: -54, name: \"output\") property(List) output_8d2c3e\n\n                    accumulator_8d2c3e -> add_8d2c3e.list\n                    current_8d2c3e -> add_8d2c3e.item\n\n                    add_8d2c3e.listWithItem -> output_8d2c3e\n                } -> ifexpression_8d2c3e.else\n\n                ifexpression_8d2c3e.value -> output_8d2c3e\n            }\n        }\n\n        instance(x: 504, y: 135) reduce_product_8d2c3e root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -46, y: -70, name: \"accumulator\") property(Number) accumulator_8d2c3e\n                in(x: -51, y: 10, name: \"current\") property(Number) current_8d2c3e\n\n                out(x: 49, y: -69, name: \"output\") property(Number) output_8d2c3e\n\n                instance(x: 78, y: -58) mul_8d2c3e root.Std_k98ojb.Math.Mul {}\n\n                accumulator_8d2c3e -> mul_8d2c3e.first\n                current_8d2c3e -> mul_8d2c3e.second\n\n                mul_8d2c3e.result -> output_8d2c3e\n            }\n        }\n\n        list_8a7b3f -> unique_numbers_8d2c3e.items\n        1 -> unique_numbers_8d2c3e.initialValue\n        unique_numbers_8d2c3e.output_list -> reduce_product_8d2c3e.items\n        1 -> reduce_product_8d2c3e.initialValue\n        reduce_product_8d2c3e.result -> product_8d2c3e\n    }\n\n    \n\n    instance(x: -97, y: 65) product_unique_numbers_def9ac root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the dissimilar elements in the given two lists\") find_dissimilar_elements {\n        in(x: -240, y: 153, name: \"list1\") property(List) list1_8a5b7f\n        in(x: -269, y: -104, name: \"list2\") property(List) list2_b2c7d1\n\n        out(x: 784, y: 32, name: \"output\") property(List) output_1a5b9f\n\n        instance(x: 167, y: -104) difference_2e4b9a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 167, y: 153) difference_2e4b9b root.Std_k98ojb.Sets.Difference {}\n\n        list1_8a5b7f -> difference_2e4b9a.left\n        list2_b2c7d1 -> difference_2e4b9a.right\n\n        list2_b2c7d1 -> difference_2e4b9b.left\n        list1_8a5b7f -> difference_2e4b9b.right\n\n        instance(x: 360, y: -10) concat_3e4b9c root.Std_k98ojb.List.Concat {}\n\n        difference_2e4b9a.difference -> concat_3e4b9c.left\n        difference_2e4b9b.difference -> concat_3e4b9c.right\n\n        concat_3e4b9c.result -> output_1a5b9f\n    }\n\n    \n\n    instance(x: -174, y: 20) find_dissimilar_elements_cbc0b6 root.main.find_dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"rotates a given list by specified number of items to the right direction\") rotate_list {\n        in(x: -240, y: 135, name: \"list\") property(List) list_8a1b3f\n        in(x: -269, y: -74, name: \"n\") property(Number) n_4d2c7e\n\n        out(x: 840, y: 135, name: \"rotated_list\") property(List) rotated_list_1b2a3f\n        out(x: 960, y: -74, name: \"continue\") trigger() continue_8d7c9e\n\n        instance(x: 104, y: 150) length_8a2b3f root.Std_k98ojb.List.Length {}\n        instance(x: 260, y: -100) modulo_4d2c7e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 420, y: 50) sub_8a1b3f root.Std_k98ojb.Math.Sub {}\n        instance(x: 600, y: -100) slice_4d2c7e root.Std_k98ojb.List.Slice {}\n        instance(x: 600, y: 150) slice_8a1b3f root.Std_k98ojb.List.Slice {}\n        instance(x: 750, y: 50) concat_4d2c7e root.Std_k98ojb.List.Concat {}\n\n        list_8a1b3f -> length_8a2b3f.list\n        n_4d2c7e -> modulo_4d2c7e.value\n        length_8a2b3f.length -> modulo_4d2c7e.divisor\n        length_8a2b3f.length -> sub_8a1b3f.first\n        modulo_4d2c7e.result -> sub_8a1b3f.second\n        list_8a1b3f -> slice_4d2c7e.list\n        sub_8a1b3f.result -> slice_4d2c7e.start\n        -1 -> slice_4d2c7e.end\n        list_8a1b3f -> slice_8a1b3f.list\n        0 -> slice_8a1b3f.start\n        sub_8a1b3f.result -> slice_8a1b3f.end\n        slice_4d2c7e.slice -> concat_4d2c7e.right\n        slice_8a1b3f.slice -> concat_4d2c7e.left\n        concat_4d2c7e.result -> rotated_list_1b2a3f\n    }\n\n    \n\n    instance(x: -96, y: 50) rotate_list_def9ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -240, y: 135, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 135, name: \"sum\") property(Number) sum_1f468d\n\n        instance(x: -61, y: 130) reduce_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: \"(acc + item)\"\n        }\n        list_668bd2 -> reduce_7942d4.items\n        reduce_7942d4.output_list -> sum_1f468d\n    }\n\n    \n\n    instance(x: 14, y: 130) SumArray_407e1b root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number\") IsPrime {\n        in(x: -240, y: 135, name: \"n\") property(Number) n_6b655b\n        in(x: -289, y: -114, name: \"execute\") trigger() execute_cdac2a\n\n        out(x: 796, y: 109, name: \"isPrime\") property(Bool) is_prime_3f8d5c\n        out(x: 817, y: -114, name: \"continue\") trigger() continue_d9efd7\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 244, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        instance(x: 165, y: -127) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        setter(x: -215, y: -463, name: \"setter_41e4ad\") setter_41e4ad = isPrime\n        getter(x: 902, y: -314, name: \"getter_38583a\") getter_38583a = isPrime\n        instance(x: -202, y: -236) floor_61b38d root.Std_k98ojb.Math.Floor {}\n        instance(x: 47, y: -127) add_b4554f root.Std_k98ojb.Math.Add {}\n        setter(x: 875, y: -518, name: \"setter_375321\") setter_375321 = isPrime\n        instance(x: 60, y: -105) ifexpression_a2fa90 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        1 -> sub_9ff257.second\n        n_6b655b -> div_547f34.first\n        div_547f34.result -> floor_61b38d.input\n        floor_61b38d.output -> add_b4554f.second\n        2 -> add_b4554f.first\n        add_b4554f.result -> sub_9ff257.first\n        sub_9ff257.result -> for_9ab286.items\n        execute_cdac2a -> setter_41e4ad.execute\n        0 -> setter_41e4ad.new_value\n        ifexpression_a2fa90.then -> continue_d9efd7\n        n_6b655b -> ifexpression_a2fa90.gen_0\n        ifexpression_a2fa90.else -> for_9ab286.reset\n        for_9ab286.onItem -> ifexpression_3d7de6.execute\n        for_9ab286.item -> ifexpression_3d7de6.gen_1\n        n_6b655b -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> setter_375321.execute\n        0 -> setter_375321.new_value\n        for_9ab286.next -> continue_d9efd7\n        getter_38583a.value -> is_prime_3f8d5c\n    }\n\n    \n\n    instance(x: -176, y: 45) IsPrime_86117a root.main.IsPrime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs\") CheckOppositeSigns {\n        in(x: -320, y: 145, name: \"a\") property(Number) a_8f62e4\n        in(x: -337, y: -93, name: \"b\") property(Number) b_a2527d\n        in(x: -513, y: -105, name: \"execute\") trigger() execute_2a8f6c\n\n        out(x: 46, y: 158, name: \"result\") property(Bool) result_e2b879\n        out(x: 512, y: -114, name: \"continue\") trigger() continue_0e3d3c\n\n        instance(x: -105, y: -110) ifexpression_c3a6b7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        setter(x: 24, y: -257, name: \"setter_3d1f6c\") setter_3d1f6c = result\n        getter(x: -89, y: 112, name: \"getter_a92b30\") getter_a92b30 = result\n        a_8f62e4 -> ifexpression_c3a6b7.gen_0\n        b_a2527d -> ifexpression_c3a6b7.gen_1\n        getter_a92b30.value -> result_e2b879\n        ifexpression_c3a6b7.then -> setter_3d1f6c.execute\n        true -> setter_3d1f6c.new_value\n        ifexpression_c3a6b7.else -> setter_3d1f6c.execute\n        false -> setter_3d1f6c.new_value\n        execute_2a8f6c -> ifexpression_c3a6b7.execute\n        setter_3d1f6c.continue -> continue_0e3d3c\n    }\n\n    \n\n    instance(x: -45, y: 9) CheckOppositeSigns_f94c57 root.main.CheckOppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11\") is_divisible_by_11 {\n        in(x: -325, y: -40, name: \"number\") property(Number) number_ae8d1f\n        in(x: -329, y: 67, name: \"execute\") trigger() execute_c23a2b\n\n        out(x: 446, y: 57, name: \"result\") property(Bool) result_08c72d\n        out(x: 519, y: -129, name: \"continue\") trigger() continue_173f5b\n\n        instance(x: -146, y: 21) modulo_f9e46a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 202, y: -24) ifexpression_a9163c root.Std_k98ojb.Std.IfExpression {\n            expression: \"result == 0\"\n        }\n        setter(x: -357, y: -113, name: \"setter_6d42f7\") setter_6d42f7 = local_result\n        getter(x: -293, y: 118, name: \"getter_eb0c7a\") getter_eb0c7a = local_result\n        11 -> modulo_f9e46a.divisor\n        number_ae8d1f -> modulo_f9e46a.value\n        execute_c23a2b -> setter_6d42f7.execute\n        modulo_f9e46a.result -> ifexpression_a9163c.gen_0\n        getter_eb0c7a.value -> result_08c72d\n        ifexpression_a9163c.then -> setter_6d42f7.execute\n        true -> setter_6d42f7.new_value\n        false -> setter_6d42f7.new_value\n        ifexpression_a9163c.else -> setter_6d42f7.execute\n        setter_6d42f7.continue -> continue_173f5b\n    }\n\n    \n\n    instance(x: -108, y: 43) is_divisible_by_11_a3e5a9 root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"replaces characters in a string\") ReplaceChars {\n        in(x: -435, y: 102, name: \"input\") property(String) input_3a4d8e\n        in(x: -437, y: -169, name: \"search\") property(String) search_a9c18b\n        in(x: -435, y: -402, name: \"replace\") property(String) replace_1a2d8f\n\n        out(x: 537, y: -165, name: \"output\") property(String) output_89c2a7\n        out(x: 535, y: 400, name: \"continue\") trigger() continue_c5b3d1\n\n        instance(x: -113, y: -169) replace_a8d7e9 root.Std_k98ojb.Strings.Replace {}\n        input_3a4d8e -> replace_a8d7e9.input\n        search_a9c18b -> replace_a8d7e9.search\n        replace_1a2d8f -> replace_a8d7e9.replace\n        replace_a8d7e9.value -> output_89c2a7\n    }\n\n    \n\n    instance(x: -354, y: 102) ReplaceChars_e6b9c0 root.main.ReplaceChars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -240, y: 69, name: \"list\") property(List) list_668bd2\n\n        out(x: 929, y: 58, name: \"product\") property(Number) product_1f468d\n\n        instance(x: -61, y: 62) unique_7942d4 root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -300, y: -50, name: \"accumulator\") property(List) accumulator_4a3c8f\n                in(x: -100, y: 50, name: \"current\") property(Number) current_2b6d9e\n\n                out(x: 300, y: 0, name: \"output\") property(List) output_3c4d7a\n\n                instance(x: 200, y: -100) contains_5f8d2a root.Std_k98ojb.List.Contains {}\n                current_2b6d9e -> contains_5f8d2a.item\n                accumulator_4a3c8f -> contains_5f8d2a.list\n                func() {\n                    in(x: -100, y: 0, name: \"item\") property(Number) item_4b6d9e\n\n                    out(x: 100, y: 0, name: \"output\") property(List) output_3c4d7a\n\n                    instance(x: 50, y: -50) add_14921d root.Std_k98ojb.List.Add {}\n                    item_4b6d9e -> add_14921d.item\n                    accumulator_4a3c8f -> add_14921d.list\n                    add_14921d.listWithItem -> output_3c4d7a\n                } -> ifexpression_5c4634.then\n                func() {\n                    in(x: -100, y: 0, name: \"item\") property(Number) item_4b6d9e\n\n                    out(x: 100, y: 0, name: \"output\") property(List) output_3c4d7a\n\n                    accumulator_4a3c8f -> output_3c4d7a\n                } -> ifexpression_5c4634.else\n                instance(x: -100, y: 0) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n                    expression: \"contains\"\n                }\n                contains_5f8d2a.contains -> ifexpression_5c4634.predicate\n                current_2b6d9e -> ifexpression_5c4634.gen_0\n                ifexpression_5c4634.value -> output_3c4d7a\n            }\n        }\n        instance(x: 177, y: 66) reduce_875ddb root.Std_k98ojb.Iteration.Reduce {\n            reducer: func() {\n                in(x: -300, y: -50, name: \"accumulator\") property(Number) accumulator_4a3c8f\n                in(x: -100, y: 50, name: \"current\") property(Number) current_2b6d9e\n\n                out(x: 300, y: 0, name: \"output\") property(Number) output_3c4d7a\n\n                instance(x: 50, y: -50) mul_14921d root.Std_k98ojb.Math.Mul {}\n                accumulator_4a3c8f -> mul_14921d.first\n                current_2b6d9e -> mul_14921d.second\n                mul_14921d.result -> output_3c4d7a\n            }\n        }\n        1 -> unique_7942d4.initialValue\n        list_668bd2 -> unique_7942d4.items\n        unique_7942d4.outputList -> reduce_875ddb.items\n        1 -> reduce_875ddb.initialValue\n        reduce_875ddb.accumulatedValue -> product_1f468d\n    }\n\n    \n\n    instance(x: -30, y: -52) product_unique_407e1b root.main.product_unique {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") DissimilarElements {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_ai\n\n        out(x: 600, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 450, y: -130) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 450, y: 20) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 750, y: -55) concat root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.result -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 127) dissimilar_elements_node root.main.DissimilarElements {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotate a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -145, y: 20, name: \"list\") property(List) list_8a3e8f\n        in(x: -196, y: -178, name: \"n\") property(Number) n_b6c36b\n\n        out(x: 804, y: -152, name: \"rotated_list\") property(List) rotated_list_8d8e4c\n        out(x: 819, y: -377, name: \"continue\") trigger() continue_8f8a5d\n\n        instance(x: 106, y: -215) length_1a7b28 root.Std_k98ojb.List.Length {}\n        instance(x: 247, y: -305) modulo_2a3e75 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 466, y: -328) generaterange_1c441f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 607, y: -327) map_f5a8e9 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 754, y: -319) getat_22c2c8 root.Std_k98ojb.List.GetAt {}\n        list_8a3e8f -> length_1a7b28.list\n        length_1a7b28.length -> modulo_2a3e75.value\n        n_b6c36b -> modulo_2a3e75.divisor\n        modulo_2a3e75.result -> generaterange_1c441f.from\n        length_1a7b28.length -> generaterange_1c441f.to\n        generaterange_1c441f.list -> map_f5a8e9.items\n        func() {\n            in(x: -306, y: -429, name: \"index\") property(Number) index_c7b22d\n\n            out(x: 188, y: -433, name: \"\") property(Number) _4a5e5c\n\n            instance(x: 31, y: -464) sub_0f92ba root.Std_k98ojb.Math.Sub {}\n            instance(x: 274, y: -464) length_b7646d root.Std_k98ojb.List.Length {}\n            instance(x: 513, y: -464) sub_37f06c root.Std_k98ojb.Math.Sub {}\n            list_8a3e8f -> length_b7646d.list\n            index_c7b22d -> sub_0f92ba.first\n            modulo_2a3e75.result -> sub_0f92ba.second\n            sub_0f92ba.result -> sub_37f06c.first\n            length_b7646d.length -> sub_37f06c.second\n            sub_37f06c.result -> getat_22c2c8.index\n            getat_22c2c8.itemAtIndex -> _4a5e5c\n        } -> map_f5a8e9.handler\n        list_8a3e8f -> getat_22c2c8.list\n        map_f5a8e9.output_list -> rotated_list_8d8e4c\n    }\n\n    \n\n    instance(x: -160, y: 17) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -320, y: 154, name: \"list\") property(List) list_0a\n        out(x: 855, y: 169, name: \"sum\") property(Number) sum_0b\n\n        instance(x: 157, y: -34) reduce_f2330d root.Std_k98ojb.Iteration.Reduce {}\n        list_0a -> reduce_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -121, y: 45, name: \"item\") property(Number) item_8ee83a\n\n            out(x: 333, y: -50, name: \"\") property(Number) _7dd980\n\n            instance(x: 92, y: -22) add_584bfd root.Std_k98ojb.Math.Add {}\n            acc_8ee839 -> add_584bfd.first\n            item_8ee83a -> add_584bfd.second\n            add_584bfd.result -> _7dd980\n        } -> reduce_f2330d.reducer\n        0 -> reduce_f2330d.initialValue\n        reduce_f2330d.reduced -> sum_0b\n    }\n\n    \n\n    instance(x: -162, y: 45) SumArray_b9ff6b root.main.SumArray {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number\") is_prime {\n        in(x: -314, y: 205, name: \"n\") property(Number) n_6a82e4\n        in(x: -307, y: 259, name: \"execute\") trigger() execute_e3c82f\n\n        out(x: 751, y: 259, name: \"is_prime\") property(Bool) is_prime_6d8b1e\n        out(x: 743, y: 205, name: \"continue\") trigger() continue_e64a8f\n\n        instance(x: -38, y: 129) ifexpression_848684 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 257, y: 127) for_e0c7e6 root.Std_k98ojb.Std.For {}\n        instance(x: 365, y: 45) ifexpression_3f2605 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: -174, y: 261, name: \"setter_3e1c7d\") setter_3e1c7d = is_prime\n        getter(x: -89, y: 53, name: \"getter_c7f80c\") getter_c7f80c = is_prime\n        instance(x: 264, y: 248) mathexpression_8b123e root.Std_k98ojb.Math.Expression {\n            expression: \"sqrt(n)\"\n        }\n        setter(x: -54, y: 174, name: \"setter_2a0c7f\") setter_2a0c7f = limit\n        getter(x: 63, y: 180, name: \"getter_c9d20c\") getter_c9d20c = limit\n        instance(x: 457, y: 180) add_3393e5 root.Std_k98ojb.Math.Add {}\n        setter(x: -63, y: 342, name: \"setter_e9f87a\") setter_e9f87a = is_prime\n        getter(x: 57, y: 120, name: \"getter_8d3e5b\") getter_8d3e5b = limit\n        instance(x: 463, y: 32) mathexpression_c2f12c root.Std_k98ojb.Math.Expression {\n            expression: \"i * i\"\n        }\n        setter(x: -57, y: 213, name: \"setter_3d1e0a\") setter_3d1e0a = is_prime\n        getter(x: 63, y: 98, name: \"getter_e1f1c7\") getter_e1f1c7 = is_prime\n        instance(x: -254, y: 124) mathexpression_4d7e3a root.Std_k98ojb.Math.Expression {\n            expression: \"n == 0\"\n        }\n        setter(x: -63, y: 18, name: \"setter_1f1c7f\") setter_1f1c7f = is_prime\n        getter(x: 54, y: 29, name: \"getter_e8d3e5\") getter_e8d3e5 = is_prime\n        instance(x: -206, y: 177) mathexpression_1d1c7f root.Std_k98ojb.Math.Expression {\n            expression: \"n == 1\"\n        }\n        setter(x: -47, y: 228, name: \"setter_e3e5d1\") setter_e3e5d1 = is_prime\n        getter(x: 60, y: 239, name: \"getter_8d3e5c\") getter_8d3e5c = is_prime\n        instance(x: -174, y: 213) mathexpression_c1f1c7 root.Std_k98ojb.Math.Expression {\n            expression: \"n < 0\"\n        }\n        setter(x: -63, y: 150, name: \"setter_3e1c7d\") setter_3e1c7d = is_prime\n        getter(x: 54, y: 161, name: \"getter_e8d3e5\") getter_e8d3e5 = is_prime\n        instance(x: -206, y: 269) mathexpression_1d1c7f root.Std_k98ojb.Math.Expression {\n            expression: \"n == 2\"\n        }\n        setter(x: -47, y: 280, name: \"setter_e3e5d1\") setter_e3e5d1 = is_prime\n        getter(x: 60, y: 291, name: \"getter_8d3e5c\") getter_8d3e5c = is_prime\n        instance(x: -174, y: 299) mathexpression_c1f1c7 root.Std_k98ojb.Math.Expression {\n            expression: \"n == 3\"\n        }\n        setter(x: -63, y: 310, name: \"setter_3e1c7d\") setter_3e1c7d = is_prime\n        getter(x: 54, y: 321, name: \"getter_e8d3e5\") getter_e8d3e5 = is_prime\n        instance(x: -206, y: 339) mathexpression_1d1c7f root.Std_k98ojb.Math.Expression {\n            expression: \"n % 2 == 0\"\n        }\n        setter(x: -47, y: 350, name: \"setter_e3e5d1\") setter_e3e5d1 = is_prime\n        getter(x: 60, y: 361, name: \"getter_8d3e5c\") getter_8d3e5c = is_prime\n        instance(x: -206, y: 379) mathexpression_1d1c7f root.Std_k98ojb.Math.Expression {\n            expression: \"n % 3 == 0\"\n        }\n        setter(x: -47, y: 390, name: \"setter_e3e5d1\") setter_e3e5d1 = is_prime\n        getter(x: 60, y: 401, name: \"getter_8d3e5c\") getter_8d3e5c = is_prime\n        instance(x: -206, y: 419) mathexpression_1d1c7f root.Std_k98ojb.Math.Expression {\n            expression: \"n % i == 0\"\n        }\n        setter(x: -47, y: 430, name: \"setter_e3e5d1\") setter_e3e5d1 = is_prime\n        getter(x: 60, y: 441, name: \"getter_8d3e5c\") getter_8d3e5c = is_prime\n        instance(x: -206, y: 459) mathexpression_1d1c7f root.Std_k98ojb.Math.Expression {\n            expression: \"n % (i + 2) == 0\"\n        }\n        setter(x: -47, y: 470, name: \"setter_e3e5d1\") setter_e3e5d1 = is_prime\n        getter(x: 60, y: 481, name: \"getter_8d3e5c\") getter_8d3e5c = is_prime\n        instance(x: -206, y: 499) mathexpression_1d1c7f root.Std_k98ojb.Math.Expression {\n            expression: \"n % (i + 4) == 0\"\n        }\n        setter(x: -47, y: 510, name: \"setter_e3e5d1\") setter_e3e5d1 = is_prime\n        getter(x: 60, y: 521, name: \"getter_8d3e5c\") getter_8d3e5c = is_prime\n        instance(x: -206, y: 539) mathexpression_1d1c7f root.Std_k98ojb.Math.Expression {\n            expression: \"n % (i +"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 10855,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if the given two integers have opposite signs.\") OppositeSigns {\n        in(x: -254, y: -101, name: \"a\") property(Number) a_9f83ae\n        in(x: -264, y: 24, name: \"b\") property(Number) b_b671c3\n\n        out(x: 454, y: 27, name: \"result\") property(Bool) result_e9d91a\n\n        instance(x: 108, y: -47) and_05341f root.Std_k98ojb.Logic.And {}\n        instance(x: -66, y: 82) expression_bba66c root.Std_k98ojb.Math.Expression {\n            expression: \"a < 0\"\n        }\n        instance(x: 97, y: 131) expression_f47b87 root.Std_k98ojb.Math.Expression {\n            expression: \"b >= 0\"\n        }\n        instance(x: 286, y: 131) expression_5d41e5 root.Std_k98ojb.Math.Expression {\n            expression: \"a >= 0\"\n        }\n        instance(x: 305, y: 78) expression_abf984 root.Std_k98ojb.Math.Expression {\n            expression: \"b < 0\"\n        }\n        instance(x: -16, y: 225) or_15d3f5 root.Std_k98ojb.Logic.Or {}\n        a_9f83ae -> expression_bba66c.gen_0\n        b_b671c3 -> expression_f47b87.gen_0\n        a_9f83ae -> expression_5d41e5.gen_0\n        b_b671c3 -> expression_abf984.gen_0\n        expression_bba66c.result -> and_05341f.left\n        expression_f47b87.result -> and_05341f.right\n        expression_5d41e5.result -> or_15d3f5.left\n        expression_abf984.result -> or_15d3f5.right\n        and_05341f.value -> result_e9d91a\n        or_15d3f5.value -> result_e9d91a\n    }\n\n    \n\n    instance(x: -26, y: -7) OppositeSigns_878cc9 root.main.OppositeSigns {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Checks if a number is divisible by 11.\") IsDivisibleBy11 {\n        in(x: -240, y: 36, name: \"number\") property(Number) number_4b3f3a\n\n        out(x: 579, y: 11, name: \"isDivisible\") property(Bool) isDivisible_28c3d9\n\n        instance(x: 109, y: -53) modulo_6f3b47 root.Std_k98ojb.Math.Modulo {}\n        11 -> modulo_6f3b47.divisor\n        number_4b3f3a -> modulo_6f3b47.value\n        instance(x: 286, y: -53) logicalequal_207cc4 root.Std_k98ojb.Logic.Equal {}\n        0 -> logicalequal_207cc4.right\n        modulo_6f3b47.result -> logicalequal_207cc4.left\n        logicalequal_207cc4.equal -> isDivisible_28c3d9\n    }\n\n    \n\n    instance(x: 14, y: -52) IsDivisibleBy11_defc6b root.main.IsDivisibleBy11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Replace characters in a string.\") ReplaceCharacters {\n        in(x: -435, y: 127, name: \"input\") property(String) input_8d3fbb\n        in(x: -440, y: 30, name: \"search\") property(String) search_c659c8\n        in(x: -439, y: -68, name: \"replace\") property(String) replace_2a4b34\n\n        out(x: 789, y: -15, name: \"output\") property(String) output_1156fd\n\n        instance(x: -106, y: -135) replace_f424de root.Std_k98ojb.Strings.Replace {}\n        input_8d3fbb -> replace_f424de.input\n        search_c659c8 -> replace_f424de.search\n        replace_2a4b34 -> replace_f424de.replace\n        replace_f424de.output -> output_1156fd\n    }\n\n    \n\n    instance(x: -170, y: 154) ReplaceCharacters_ae2e89 root.main.ReplaceCharacters {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"converts the given string to lower case\") ToLower {\n        in(x: -531, y: 2, name: \"input\") property(String) input_ai\n        out(x: 340, y: 77, name: \"output\") property(String) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -179, y: 30) tolower_59bc6e root.main.ToLower {}\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculate the product of the unique numbers in a given list\") UniqueProduct {\n        in(x: -531, y: 2, name: \"list\") property(List) list_ai\n        out(x: 340, y: 77, name: \"product\") property(Number) output_ai\n\n        instance(x: 679, y: 89) reduce_a5a8f2 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"(acc * it)\"\n        }\n        instance(x: 340, y: -112) unique_6790d6 root.Std_k98ojb.List.Flatten {}\n        instance(x: 508, y: -261) map_bbc1f8 root.Std_k98ojb.Iteration.Map {}\n        instance(x: 435, y: -534) set_difference_cde1a7 root.Std_k98ojb.Sets.Difference {}\n\n        list_ai -> map_bbc1f8.items\n        func() {\n            in(x: -236, y: 0, name: \"item\") property(List) item_6ebc54\n\n            out(x: 317, y: 0, name: \"\") property(Number) _9e8b93\n\n            instance(x: 50, y: 0, stableId: \"dnbtv1qjru4l3z9p9k1d2u8\") list_61aee7 root.Std_k98ojb.List.Empty {}\n            instance(x: -143, y: 0) filter_d5e1d4 root.Std_k98ojb.Iteration.Filter {\n                where: \"it == item\"\n            }\n            instance(x: 225, y: 0, stableId: \"dnbtv1qjru4l3z9p9k1d2u7\") list_6a9bb2 root.Std_k98ojb.List.Empty {}\n            item_6ebc54 -> filter_d5e1d4.items\n            list_6a9bb2.list -> filter_d5e1d4.predicate.gen_0\n            filter_d5e1d4.output_list -> set_difference_cde1a7.right\n            item_6ebc54 -> set_difference_cde1a7.left\n            list_61aee7.list -> reduce_a5a8f2.initialValue\n            set_difference_cde1a7.difference -> _9e8b93\n        } -> map_bbc1f8.handler\n        map_bbc1f8.output_list -> unique_6790d6.list\n        unique_6790d6.flatList -> reduce_a5a8f2.items\n        reduce_a5a8f2.result -> output_ai\n    }\n\n    \n\n    instance(x: -41, y: 34) UniqueProduct_cde0b6 root.main.UniqueProduct {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"finds the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -173, y: -154, name: \"list1\") property(List) list1_1f846b\n        in(x: -181, y: -13, name: \"list2\") property(List) list2_c62075\n\n        out(x: 784, y: -110, name: \"dissimilarElements\") property(List) list_0d40f1\n\n        instance(x: 195, y: -130) difference_a9e8b2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 765, y: -130) difference_e2f6c0 root.Std_k98ojb.Sets.Difference {}\n\n        list1_1f846b -> difference_a9e8b2.left\n        list2_c62075 -> difference_a9e8b2.right\n\n        list1_1f846b -> difference_e2f6c0.right\n        list2_c62075 -> difference_e2f6c0.left\n\n        instance(x: 383, y: -35) concat_bdf09a root.Std_k98ojb.List.Concat {}\n\n        difference_a9e8b2.difference -> concat_bdf09a.left\n        difference_e2f6c0.difference -> concat_bdf09a.right\n\n        concat_bdf09a.result -> list_0d40f1\n    }\n\n    \n\n    instance(x: 93, y: -122) find_dissimilar_cbc0b6 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -135, y: 40, name: \"list\") property(List) list_eb5f32\n        in(x: -98, y: -16, name: \"n\") property(Number) n_7a1c5e\n\n        out(x: 936, y: -18, name: \"result\") property(List) result_085b4c\n        out(x: 832, y: 26, name: \"continue\") trigger() continue_c39ae5\n\n        instance(x: 210, y: 47) length_1ed4f5 root.Std_k98ojb.List.Length {}\n        instance(x: 573, y: -50) add_d6c7ca root.Std_k98ojb.Math.Add {}\n        instance(x: 532, y: 200) modulo_e5a1b4 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 547, y: -100) sub_1d6de2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 834, y: 214) slice_81ee2a root.Std_k98ojb.List.Slice {}\n        instance(x: 573, y: -200) add_fe2f6c root.Std_k98ojb.Math.Add {}\n        instance(x: 836, y: -124) slice_54d2ff root.Std_k98ojb.List.Slice {}\n        instance(x: 974, y: 230) concat_a4e2c4 root.Std_k98ojb.List.Concat {}\n        setter(x: -24, y: -186, name: \"setter_63fb1a\") setter_63fb1a = length\n        getter(x: 755, y: 102, name: \"getter_dba5f5\") getter_dba5f5 = length\n        getter(x: -198, y: 40, name: \"getter_acbe06\") getter_acbe06 = length\n        list_eb5f32 -> length_1ed4f5.list\n        n_7a1c5e -> add_d6c7ca.second\n        getter_acbe06.value -> add_d6c7ca.first\n        add_d6c7ca.result -> modulo_e5a1b4.divisor\n        modulo_e5a1b4.result -> sub_1d6de2.second\n        getter_dba5f5.value -> sub_1d6de2.first\n        list_eb5f32 -> slice_81ee2a.list\n        sub_1d6de2.result -> slice_81ee2a.start\n        -1 -> slice_81ee2a.end\n        list_eb5f32 -> slice_54d2ff.list\n        0 -> slice_54d2ff.start\n        modulo_e5a1b4.result -> slice_54d2ff.end\n        slice_81ee2a.slice -> concat_a4e2c4.right\n        slice_54d2ff.slice -> concat_a4e2c4.left\n        concat_a4e2c4.result -> result_085b4c\n        getter_dba5f5.value -> add_fe2f6c.first\n        modulo_e5a1b4.result -> add_fe2f6c.second\n        setter_63fb1a.new_value -> length_1ed4f5.length\n        setter_63fb1a.continue -> add_d6c7ca.execute\n    }\n\n    \n\n    instance(x: -95, y: -20) rotate_list_a598e2 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array\") SumArray {\n        in(x: -314, y: 205, name: \"execute\") trigger() execute_3b21d3\n        in(x: -338, y: 196, name: \"list\") property(List) list_f87e19\n\n        out(x: 656, y: 140, name: \"result\") property(Number) result_7db2ee\n\n        instance(x: 123, y: 161) reduce_e9cd1f root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc + item\"\n        }\n        execute_3b21d3 -> reduce_e9cd1f.execute\n        list_f87e19 -> reduce_e9cd1f.items\n        0 -> reduce_e9cd1f.initialValue\n        reduce_e9cd1f.outputList -> result_7db2ee\n    }\n\n    \n\n    instance(x: -234, y: 169) SumArray_f13785 root.main.SumArray {}\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Checks if the given integer is a prime number\") is_prime {\n        in(x: -123, y: 5, name: \"n\") property(Number) n_2d04cf\n        out(x: 837, y: -109, name: \"result\") property(Bool) result_4a16c9\n\n        instance(x: 297, y: -549) ifexpression_2a4e51 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n < 2)\"\n        }\n        instance(x: 334, y: -340) ifexpression_c6a47c root.Std_k98ojb.Std.IfExpression {\n            expression: \"(i * i <= n)\"\n        }\n        instance(x: 154, y: -247) sqrt_71ecbd root.Std_k98ojb.Math.Pow {}\n        instance(x: 380, y: -376) ifexpression_561d3f root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        instance(x: 424, y: -458) add_fcc4df root.Std_k98ojb.Math.Add {}\n        instance(x: 710, y: -356) ifexpression_0882c4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: -156, y: -294, name: \"setter_87df9a\") setter_87df9a = is_prime_flag\n        getter(x: -304, y: -260, name: \"getter_2c1c2f\") getter_2c1c2f = is_prime_flag\n        instance(x: 659, y: -48) ifexpression_ced8a8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 752, y: -315, name: \"setter_43cd6e\") setter_43cd6e = is_prime_flag\n        instance(x: 778, y: -29) ifexpression_aeb3a8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 719, y: -156, name: \"setter_25f4ab\") setter_25f4ab = is_prime_flag\n        instance(x: 356, y: -488) for_3ba0b5 root.Std_k98ojb.Std.For {}\n        setter(x: 711, y: -255, name: \"setter_c6d6b7\") setter_c6d6b7 = is_prime_flag\n        getter(x: 642, y: -308, name: \"getter_90a5b7\") getter_90a5b7 = is_prime_flag\n        instance(x: 106, y: -116) add_f703f6 root.Std_k98ojb.Math.Add {}\n        getter(x: 427, y: -338, name: \"getter_eaa8af\") getter_eaa8af = is_prime_flag\n        getter(x: 539, y: -167, name: \"getter_5c8d9b\") getter_5c8d9b = is_prime_flag\n        instance(x: 254, y: -502) ifexpression_ca39ba root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 617, y: -327, name: \"setter_2f5a4e\") setter_2f5a4e = is_prime_flag\n        instance(x: 854, y: -19) ifexpression_acb4df root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        getter(x: 733, y: -264, name: \"getter_92d64f\") getter_92d64f = is_prime_flag\n        setter(x: 815, y: -307, name: \"setter_9cc5c1\") setter_9cc5c1 = is_prime_flag\n        instance(x: 448, y: -284) for_e630b4 root.Std_k98ojb.Std.For {}\n        getter(x: 391, y: -170, name: \"getter_f3d58c\") getter_f3d58c = is_prime_flag\n        instance(x: 238, y: -64) ifexpression_a0434f root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 317, y: -85, name: \"setter_4cda1d\") setter_4cda1d = is_prime_flag\n        instance(x: 622, y: -237) for_ae04f2 root.Std_k98ojb.Std.For {}\n        getter(x: 546, y: -302, name: \"getter_fdd2c1\") getter_fdd2c1 = is_prime_flag\n        instance(x: 676, y: -44) ifexpression_2f20a8 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 758, y: -133, name: \"setter_a2c5d7\") setter_a2c5d7 = is_prime_flag\n        getter(x: 694, y: -248, name: \"getter_d20fbf\") getter_d20fbf = is_prime_flag\n        instance(x: 109, y: -133) ifexpression_052bdf root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 167, y: -64, name: \"setter_a4e9ef\") setter_a4e9ef = is_prime_flag\n        getter(x: 352, y: -209, name: \"getter_8d8a1f\") getter_8d8a1f = is_prime_flag\n        instance(x: 687, y: -52) ifexpression_4802b4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 336, y: -117, name: \"setter_c4eb27\") setter_c4eb27 = is_prime_flag\n        getter(x: 575, y: -255, name: \"getter_9c4d0f\") getter_9c4d0f = is_prime_flag\n        instance(x: 136, y: -84) ifexpression_aed69a root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 257, y: -48, name: \"setter_febd6f\") setter_febd6f = is_prime_flag\n        getter(x: 315, y: -194, name: \"getter_9a9d0c\") getter_9a9d0c = is_prime_flag\n        instance(x: 687, y: -25) ifexpression_eaa9e7 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 315, y: -84, name: \"setter_0cbe3f\") setter_0cbe3f = is_prime_flag\n        getter(x: 592, y: -262, name: \"getter_7a0d2e\") getter_7a0d2e = is_prime_flag\n        instance(x: 107, y: -48) ifexpression_ca53df root.Std_k98ojb.Std.IfExpression {\n            expression: \"(n % i == 0)\"\n        }\n        setter(x: 176, y: -112, name: \"setter_90d4c4\") setter_90d4c4 = is_prime_flag\n        getter(x: 305, y: -218, name: \"getter_8"
            ]
        }
    }
]