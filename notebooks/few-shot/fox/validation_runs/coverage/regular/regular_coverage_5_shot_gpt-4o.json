[
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -250, y: -150, name: \"a\") property(Number) a_3f1a2b\n        in(x: -250, y: -50, name: \"b\") property(Number) b_4f2b3c\n\n        out(x: 650, y: -100, name: \"result\") property(Bool) result_5f3c4d\n\n        instance(x: 150, y: -100) lessthan_6a7b8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 400, y: -100) not_7b8c9d root.Std_k98ojb.Logic.Not {}\n        instance(x: 250, y: -100) mul_8c9d0e root.Std_k98ojb.Math.Mul {}\n        a_3f1a2b -> mul_8c9d0e.first\n        b_4f2b3c -> mul_8c9d0e.second\n        mul_8c9d0e.result -> lessthan_6a7b8c.left\n        0 -> lessthan_6a7b8c.right\n        lessthan_6a7b8c.result -> not_7b8c9d.input\n        not_7b8c9d.output -> result_5f3c4d\n    }\n\n    \n\n    instance(x: -100, y: 0) opposite_sign_9d0e1f root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -150, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 650, y: -150, name: \"result\") property(Bool) result_4d5e6f\n\n        instance(x: 150, y: -150) modulo_7f8g9h root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -150) equal_0a1b2c root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_7f8g9h.value\n        11 -> modulo_7f8g9h.divisor\n        modulo_7f8g9h.result -> equal_0a1b2c.left\n        0 -> equal_0a1b2c.right\n        equal_0a1b2c.result -> result_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: -50) is_divisible_by_11_7h8i9j root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_characters {\n        in(x: -250, y: -150, name: \"input\") property(String) input_1a2b3c\n        in(x: -250, y: -50, name: \"search\") property(String) search_4d5e6f\n        in(x: -250, y: 50, name: \"replace\") property(String) replace_7g8h9i\n\n        out(x: 600, y: -50, name: \"output\") property(String) output_0a1b2c\n\n        instance(x: 200, y: -50) replace_3f4g5h root.Std_k98ojb.Strings.Replace {}\n        input_1a2b3c -> replace_3f4g5h.input\n        search_4d5e6f -> replace_3f4g5h.search\n        replace_7g8h9i -> replace_3f4g5h.replace\n        replace_3f4g5h.output -> output_0a1b2c\n    }\n\n    \n\n    instance(x: -100, y: 0) replace_characters_5j6k7l root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: -150, y: -100, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 450, y: -100, name: \"output\") property(String) output_4d5e6f\n\n        instance(x: 150, y: -100) tolower_7f8g9h root.Std_k98ojb.Strings.ToLower {}\n        input_1a2b3c -> tolower_7f8g9h.input\n        tolower_7f8g9h.output -> output_4d5e6f\n    }\n\n    \n\n    instance(x: -50, y: 50) to_lower_case_7h8i9j root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_of_unique {\n        in(x: -200, y: -150, name: \"list\") property(List) list_1a2b3c\n\n        out(x: 900, y: -150, name: \"product\") property(Number) product_4d5e6f\n\n        instance(x: 100, y: -150) filter_123abc root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 400, y: -150) reduce_456def root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 700, y: -150) not_equal_789ghi root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 250, y: -150) count_abc123 root.Std_k98ojb.Std.Count {}\n\n        list_1a2b3c -> filter_123abc.items\n        func() {\n            in(x: -100, y: -50, name: \"item\") property(Number) item_abc123\n\n            out(x: 200, y: -50, name: \"is_unique\") property(Bool) is_unique_def456\n\n            instance(x: 50, y: -50) count_456def root.Std_k98ojb.Std.Count {}\n            instance(x: 150, y: -50) equal_789ghi root.Std_k98ojb.Logic.Equal {}\n\n            item_abc123 -> count_456def.count\n            count_456def.count -> equal_789ghi.left\n            1 -> equal_789ghi.right\n            equal_789ghi.result -> is_unique_def456\n        } -> filter_123abc.handler\n\n        filter_123abc.output_list -> reduce_456def.items\n        func() {\n            in(x: -100, y: -50, name: \"acc\") property(Number) acc_abc123\n            in(x: -100, y: 50, name: \"item\") property(Number) item_def456\n\n            out(x: 200, y: 0, name: \"product\") property(Number) product_ghi789\n\n            instance(x: 50, y: 0) mul_123abc root.Std_k98ojb.Math.Mul {}\n\n            acc_abc123 -> mul_123abc.first\n            item_def456 -> mul_123abc.second\n            mul_123abc.result -> product_ghi789\n        } -> reduce_456def.reducer\n\n        1 -> reduce_456def.initial\n        reduce_456def.result -> product_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: 0) product_of_unique_abc123 root.main.product_of_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -250, y: -150, name: \"list1\") property(List) list1_1a2b3c\n        in(x: -250, y: 50, name: \"list2\") property(List) list2_4d5e6f\n\n        out(x: 850, y: -50, name: \"result\") property(List) result_7g8h9i\n\n        instance(x: 200, y: -100) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 500, y: -100) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 700, y: -50) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_1a2b3c -> difference_1.left\n        list2_4d5e6f -> difference_1.right\n        difference_1.difference -> concat_1.left\n\n        list2_4d5e6f -> difference_2.left\n        list1_1a2b3c -> difference_2.right\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> result_7g8h9i\n    }\n\n    \n\n    instance(x: -100, y: -50) dissimilar_elements_abc123 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -200, y: -150, name: \"execute\") trigger() execute_1a2b3c\n        in(x: -180, y: 100, name: \"list\") property(List) list_4d5e6f\n        in(x: -180, y: 300, name: \"n\") property(Number) n_7g8h9i\n\n        out(x: 900, y: 100, name: \"rotated_list\") property(List) rotated_list_0a1b2c\n        out(x: 900, y: 300, name: \"continue\") trigger() continue_3d4e5f\n\n        instance(x: 200, y: 100) length_6f7g8h root.Std_k98ojb.List.Length {}\n        instance(x: 400, y: 100) modulo_9i0j1k root.Std_k98ojb.Math.Modulo {}\n        instance(x: 600, y: 100) slice_2a3b4c root.Std_k98ojb.List.Slice {}\n        instance(x: 600, y: 300) slice_5d6e7f root.Std_k98ojb.List.Slice {}\n        instance(x: 800, y: 200) concat_8g9h0i root.Std_k98ojb.List.Concat {}\n\n        list_4d5e6f -> length_6f7g8h.list\n        n_7g8h9i -> modulo_9i0j1k.value\n        length_6f7g8h.length -> modulo_9i0j1k.divisor\n        modulo_9i0j1k.result -> slice_2a3b4c.start\n        list_4d5e6f -> slice_2a3b4c.list\n        modulo_9i0j1k.result -> slice_5d6e7f.end\n        list_4d5e6f -> slice_5d6e7f.list\n        slice_2a3b4c.slice -> concat_8g9h0i.right\n        slice_5d6e7f.slice -> concat_8g9h0i.left\n        concat_8g9h0i.result -> rotated_list_0a1b2c\n        execute_1a2b3c -> continue_3d4e5f\n    }\n\n    \n\n    instance(x: -100, y: -50) rotate_list_1b2c3d root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -150, y: -120, name: \"array\") property(List) array_3a4b2c\n\n        out(x: 668, y: -110, name: \"sum\") property(Number) sum_4b5c3d\n\n        instance(x: 150, y: -100) reduce_5d6e7f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 400, y: -100) add_6f7g8h root.Std_k98ojb.Math.Add {}\n        array_3a4b2c -> reduce_5d6e7f.items\n        0 -> reduce_5d6e7f.initialValue\n        func() {\n            in(x: -100, y: -50, name: \"acc\") property(Number) acc_7h8i9j\n            in(x: -100, y: 50, name: \"item\") property(Number) item_8i9j0k\n\n            out(x: 200, y: 0, name: \"result\") property(Number) result_9j0k1l\n\n            acc_7h8i9j -> add_6f7g8h.first\n            item_8i9j0k -> add_6f7g8h.second\n            add_6f7g8h.result -> result_9j0k1l\n        } -> reduce_5d6e7f.reducer\n        reduce_5d6e7f.result -> sum_4b5c3d\n    }\n\n    \n\n    instance(x: -100, y: 0) sum_array_0k1l2m root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -250, y: -150, name: \"n\") property(Number) n_1a2b3c\n\n        out(x: 850, y: -150, name: \"isPrime\") property(Bool) isPrime_4d5e6f\n\n        instance(x: 100, y: -150) ifexpression_7f8g9h root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 350, y: -150) generaterange_0a1b2c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 600, y: -150) for_3d4e5f root.Std_k98ojb.Std.For {}\n        instance(x: 850, y: -250) modulo_6g7h8i root.Std_k98ojb.Math.Modulo {}\n        instance(x: 850, y: -50) if_9j0k1l root.Std_k98ojb.Std.If {}\n\n        false -> ifexpression_7f8g9h.then\n        true -> ifexpression_7f8g9h.else\n        ifexpression_7f8g9h.result -> isPrime_4d5e6f\n\n        2 -> generaterange_0a1b2c.from\n        n_1a2b3c -> generaterange_0a1b2c.to\n        generaterange_0a1b2c.list -> for_3d4e5f.items\n\n        for_3d4e5f.item -> modulo_6g7h8i.divisor\n        n_1a2b3c -> modulo_6g7h8i.value\n\n        modulo_6g7h8i.result -> if_9j0k1l.predicate\n        for_3d4e5f.onItem -> if_9j0k1l.execute\n\n        false -> if_9j0k1l.then\n        true -> if_9j0k1l.else\n        if_9j0k1l.value -> isPrime_4d5e6f\n\n        for_3d4e5f.done -> isPrime_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: 50) is_prime_2b3c4d root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -230, y: -150, name: \"a\") property(Number) a_1e159f\n        in(x: -230, y: 50, name: \"b\") property(Number) b_1e19fb\n\n        out(x: 680, y: -50, name: \"result\") property(Bool) result_fd7945\n\n        instance(x: 250, y: -50) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        a_1e159f -> ifexpression_3d7de6.gen_0\n        b_1e19fb -> ifexpression_3d7de6.gen_1\n        ifexpression_3d7de6.result -> result_fd7945\n    }\n\n    \n\n    instance(x: -97, y: -68) opposite_sign_49c6ac root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -150, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 650, y: -150, name: \"result\") property(Bool) result_4d5e6f\n\n        instance(x: 150, y: -150) modulo_7f8g9h root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: -150) equal_0a1b2c root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_7f8g9h.value\n        11 -> modulo_7f8g9h.divisor\n        modulo_7f8g9h.result -> equal_0a1b2c.left\n        0 -> equal_0a1b2c.right\n        equal_0a1b2c.result -> result_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: -50) is_divisible_by_11_7h8i9j root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_chars {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"input\") property(String) input_b5d10a\n        in(x: -289, y: 126, name: \"search\") property(String) search_1e19fb\n        in(x: -289, y: 226, name: \"replace\") property(String) replace_2e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"output\") property(String) output_fd7945\n\n        instance(x: 406, y: 546) replace_8eae56 root.Std_k98ojb.Strings.Replace {}\n        input_b5d10a -> replace_8eae56.input\n        search_1e19fb -> replace_8eae56.search\n        replace_2e19fb -> replace_8eae56.replace\n        replace_8eae56.result -> output_fd7945\n        execute_1e159f -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: -68) replace_chars_49c6ac root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: -150, y: -50, name: \"input\") property(String) input_123abc\n\n        out(x: 450, y: -50, name: \"output\") property(String) output_456def\n\n        instance(x: 150, y: -50) tolower_789ghi root.Std_k98ojb.Strings.ToLower {}\n        input_123abc -> tolower_789ghi.input\n        tolower_789ghi.output -> output_456def\n    }\n\n    \n\n    instance(x: -100, y: 50) to_lower_case_abc123 root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -250, y: -150, name: \"list\") property(List) list_1a2b3c\n\n        out(x: 850, y: -150, name: \"product\") property(Number) product_4d5e6f\n\n        instance(x: 100, y: -150) filter_7f8g9h root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 400, y: -150) reduce_0a1b2c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 600, y: -150) mul_3d4e5f root.Std_k98ojb.Math.Mul {}\n        instance(x: 200, y: -150) unique_6h7i8j root.Std_k98ojb.List.Empty {}\n        instance(x: 300, y: -150) add_9j0k1l root.Std_k98ojb.List.Add {}\n        instance(x: 500, y: -150) notempty_2m3n4o root.Std_k98ojb.List.NotEmpty {}\n\n        list_1a2b3c -> filter_7f8g9h.items\n        func() {\n            in(x: -100, y: -50, name: \"item\") property(Number) item_5f6g7h\n\n            out(x: 200, y: -50, name: \"isUnique\") property(Bool) isUnique_8i9j0k\n\n            instance(x: 50, y: -50) contains_1l2m3n root.Std_k98ojb.List.Contains {}\n            instance(x: 150, y: -50) not_4o5p6q root.Std_k98ojb.Logic.Not {}\n\n            item_5f6g7h -> contains_1l2m3n.item\n            unique_6h7i8j.list -> contains_1l2m3n.list\n            contains_1l2m3n.result -> not_4o5p6q.input\n            not_4o5p6q.output -> isUnique_8i9j0k\n        } -> filter_7f8g9h.handler\n\n        filter_7f8g9h.output_list -> add_9j0k1l.item\n        unique_6h7i8j.list -> add_9j0k1l.list\n        add_9j0k1l.listWithItem -> unique_6h7i8j.list\n\n        unique_6h7i8j.list -> notempty_2m3n4o.list\n        notempty_2m3n4o.isEmpty -> reduce_0a1b2c.items\n\n        func() {\n            in(x: -100, y: -50, name: \"acc\") property(Number) acc_7r8s9t\n            in(x: 0, y: -50, name: \"item\") property(Number) item_0a1b2c\n\n            out(x: 200, y: -50, name: \"result\") property(Number) result_3d4e5f\n\n            acc_7r8s9t -> mul_3d4e5f.first\n            item_0a1b2c -> mul_3d4e5f.second\n            mul_3d4e5f.result -> result_3d4e5f\n        } -> reduce_0a1b2c.reducer\n\n        1 -> reduce_0a1b2c.initialValue\n        reduce_0a1b2c.result -> product_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: -50) product_unique_7u8v9w root.main.product_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -250, y: -150, name: \"list1\") property(List) list1_1a2b3c\n        in(x: -250, y: 50, name: \"list2\") property(List) list2_4d5e6f\n\n        out(x: 850, y: -50, name: \"result\") property(List) result_7g8h9i\n\n        instance(x: 150, y: -100) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 450, y: -100) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 650, y: 0) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_1a2b3c -> difference_1.left\n        list2_4d5e6f -> difference_1.right\n        list2_4d5e6f -> difference_2.left\n        list1_1a2b3c -> difference_2.right\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> result_7g8h9i\n    }\n\n    \n\n    instance(x: -100, y: -50) dissimilar_elements_abc123 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -200, y: -150, name: \"list\") property(List) list_123456\n        in(x: -200, y: 50, name: \"rotate_by\") property(Number) rotate_by_654321\n\n        out(x: 800, y: -50, name: \"result\") property(List) result_abcdef\n\n        instance(x: 100, y: -100) length_789abc root.Std_k98ojb.List.Length {}\n        instance(x: 400, y: -100) modulo_456def root.Std_k98ojb.Math.Modulo {}\n        instance(x: 700, y: -100) slice_123abc root.Std_k98ojb.List.Slice {}\n        instance(x: 700, y: 100) slice_456abc root.Std_k98ojb.List.Slice {}\n        instance(x: 1000, y: 0) concat_789abc root.Std_k98ojb.List.Concat {}\n\n        list_123456 -> length_789abc.list\n        rotate_by_654321 -> modulo_456def.value\n        length_789abc.length -> modulo_456def.divisor\n        list_123456 -> slice_123abc.list\n        list_123456 -> slice_456abc.list\n        modulo_456def.result -> slice_123abc.start\n        modulo_456def.result -> slice_456abc.end\n        slice_123abc.slice -> concat_789abc.right\n        slice_456abc.slice -> concat_789abc.left\n        concat_789abc.result -> result_abcdef\n    }\n\n    \n\n    instance(x: -100, y: 0) rotate_list_123456 root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -150, y: -100, name: \"array\") property(List) array_1a2b3c\n\n        out(x: 650, y: -100, name: \"sum\") property(Number) sum_4d5e6f\n\n        instance(x: 200, y: -100) reduce_7f8g9h root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 450, y: -100) add_0a1b2c root.Std_k98ojb.Math.Add {}\n\n        array_1a2b3c -> reduce_7f8g9h.items\n        func() {\n            in(x: -100, y: -50, name: \"accumulated\") property(Number) accumulated_3e4f5g\n            in(x: -100, y: 50, name: \"current\") property(Number) current_6h7i8j\n\n            out(x: 200, y: 0, name: \"result\") property(Number) result_9k0l1m\n\n            accumulated_3e4f5g -> add_0a1b2c.first\n            current_6h7i8j -> add_0a1b2c.second\n            add_0a1b2c.result -> result_9k0l1m\n        } -> reduce_7f8g9h.reducer\n\n        0 -> reduce_7f8g9h.initial\n        reduce_7f8g9h.result -> sum_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: 50) sum_array_2n3o4p root.main.sum_array {}\n}"
            ],
            "48": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"n\") property(Number) n_0c1a77\n\n        out(x: 838, y: 168, name: \"isPrime\") property(Bool) isPrime_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) if_9ab286 root.Std_k98ojb.Std.If {}\n        instance(x: 557, y: 167) for_9b38cc root.Std_k98ojb.Std.For {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 562, y: -203) expression_14921d root.Std_k98ojb.Math.Expression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 300, y: 168) generaterange_875ddb root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 656, y: -330) not_88bb8a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 714, y: -155) floor_8cb3f6 root.Std_k98ojb.Math.Floor {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1504, y: -400) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"i * i <= n\"\n        }\n        instance(x: 1496, y: -187) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        2 -> generaterange_875ddb.from\n        floor_8cb3f6.output -> generaterange_875ddb.to\n        generaterange_875ddb.list -> for_9b38cc.items\n        func() {\n            in(x: -76, y: 46, name: \"element\") property(Number) element_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            element_5f51f7 -> mul_2f9d09.first\n            element_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> for_9b38cc.handler\n        for_9b38cc.item -> lessthanorequal_f11fda.left\n        n_0c1a77 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        for_9b38cc.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_a7f942\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        for_9b38cc.index -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> expression_b720d7.gen_1\n        add_b4554f.result -> expression_9fba8c.gen_1\n        n_0c1a77 -> expression_9fba8c.gen_0\n        n_0c1a77 -> expression_b720d7.gen_0\n        if_07b"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -250, y: -150, name: \"a\") property(Number) a_3f1a2b\n        in(x: -250, y: 50, name: \"b\") property(Number) b_4c2b3c\n\n        out(x: 650, y: -50, name: \"result\") property(Bool) result_5d3c4d\n\n        instance(x: 150, y: -50) lessthan_6e7f8a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 400, y: -50) ifexpression_7f8e9b root.Std_k98ojb.Std.IfExpression {\n            expression: \"a < 0 && b > 0 || a > 0 && b < 0\"\n        }\n        a_3f1a2b -> lessthan_6e7f8a.left\n        b_4c2b3c -> lessthan_6e7f8a.right\n        lessthan_6e7f8a.result -> ifexpression_7f8e9b.gen_0\n        ifexpression_7f8e9b.result -> result_5d3c4d\n    }\n\n    \n\n    instance(x: -100, y: 0) opposite_sign_8f9a0b root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -150, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 650, y: -150, name: \"result\") property(Bool) result_4d5e6f\n\n        instance(x: 150, y: -150) modulo_7f8g9h root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -150) equal_0a1b2c root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_7f8g9h.value\n        11 -> modulo_7f8g9h.divisor\n        modulo_7f8g9h.result -> equal_0a1b2c.left\n        0 -> equal_0a1b2c.right\n        equal_0a1b2c.result -> result_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: -50) is_divisible_by_11_7h8i9j root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_chars {\n        in(x: -286, y: -119, name: \"execute\") trigger() execute_1e159f\n        in(x: 153, y: 446, name: \"input\") property(String) input_b5d10a\n        in(x: -289, y: 126, name: \"search\") property(String) search_1e19fb\n        in(x: -289, y: 226, name: \"replace\") property(String) replace_2e19fb\n\n        out(x: 844, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 692, y: 553, name: \"output\") property(String) output_fd7945\n\n        instance(x: 406, y: 546) replace_8eae56 root.Std_k98ojb.Strings.Replace {}\n        input_b5d10a -> replace_8eae56.input\n        search_1e19fb -> replace_8eae56.search\n        replace_2e19fb -> replace_8eae56.replace\n        replace_8eae56.result -> output_fd7945\n        execute_1e159f -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: -68) replace_chars_49c6ac root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: -150, y: -50, name: \"input\") property(String) input_123abc\n\n        out(x: 450, y: -50, name: \"output\") property(String) output_456def\n\n        instance(x: 150, y: -50) tolower_789ghi root.Std_k98ojb.Strings.ToLower {}\n        input_123abc -> tolower_789ghi.input\n        tolower_789ghi.output -> output_456def\n    }\n\n    \n\n    instance(x: -100, y: 50) to_lower_case_abc123 root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_of_unique {\n        in(x: -200, y: -150, name: \"list\") property(List) list_8f2a3b\n\n        out(x: 800, y: -150, name: \"product\") property(Number) product_9c3b7d\n\n        instance(x: 200, y: -150) filter_3a9b8f root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 400, y: -150) reduce_4b7c9e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 600, y: -150) mul_5c8d1f root.Std_k98ojb.Math.Mul {}\n        instance(x: 200, y: 50) unique_6d7e2a root.Std_k98ojb.List.Empty {}\n        instance(x: 400, y: 50) add_7e9f3b root.Std_k98ojb.List.Add {}\n        instance(x: 600, y: 50) contains_8f0a4c root.Std_k98ojb.List.Contains {}\n\n        list_8f2a3b -> filter_3a9b8f.items\n        func() {\n            in(x: -100, y: -50, name: \"item\") property(Number) item_1a2b3c\n\n            out(x: 300, y: -50, name: \"isUnique\") property(Bool) isUnique_4d5e6f\n\n            contains_8f0a4c.item -> isUnique_4d5e6f\n            unique_6d7e2a.list -> contains_8f0a4c.list\n            Logic.Not(contains_8f0a4c.result) -> isUnique_4d5e6f\n        } -> filter_3a9b8f.handler\n\n        filter_3a9b8f.output_list -> reduce_4b7c9e.items\n        1 -> reduce_4b7c9e.initialValue\n        func() {\n            in(x: -100, y: -50, name: \"accumulated\") property(Number) accumulated_7g8h9i\n            in(x: 100, y: -50, name: \"current\") property(Number) current_0j1k2l\n\n            out(x: 300, y: -50, name: \"product\") property(Number) product_3m4n5o\n\n            accumulated_7g8h9i -> mul_5c8d1f.first\n            current_0j1k2l -> mul_5c8d1f.second\n            mul_5c8d1f.result -> product_3m4n5o\n        } -> reduce_4b7c9e.reducer\n\n        reduce_4b7c9e.result -> product_9c3b7d\n    }\n\n    \n\n    instance(x: -100, y: -50) product_of_unique_1b2c3d root.main.product_of_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -286, y: -119, name: \"list1\") property(List) list1_1e159f\n        in(x: 153, y: 446, name: \"list2\") property(List) list2_b5d10a\n\n        out(x: 844, y: 53, name: \"dissimilar\") property(List) dissimilar_c95bcb\n\n        instance(x: 406, y: 546) difference_8eae56 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 215, y: 100) difference_a2fa90 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 196, y: 256) concat_9ff257 root.Std_k98ojb.List.Concat {}\n\n        list1_1e159f -> difference_8eae56.left\n        list2_b5d10a -> difference_8eae56.right\n        difference_8eae56.difference -> concat_9ff257.left\n\n        list2_b5d10a -> difference_a2fa90.left\n        list1_1e159f -> difference_a2fa90.right\n        difference_a2fa90.difference -> concat_9ff257.right\n\n        concat_9ff257.result -> dissimilar_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: -68) dissimilar_elements_49c6ac root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -200, y: -150, name: \"execute\") trigger() execute_1a2b3c\n        in(x: -180, y: 100, name: \"list\") property(List) list_4d5e6f\n        in(x: -180, y: 300, name: \"n\") property(Number) n_7g8h9i\n\n        out(x: 900, y: 100, name: \"rotated_list\") property(List) rotated_list_0a1b2c\n        out(x: 900, y: 300, name: \"continue\") trigger() continue_3d4e5f\n\n        instance(x: 200, y: 100) length_6a7b8c root.Std_k98ojb.List.Length {}\n        instance(x: 400, y: 100) modulo_9d0e1f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 600, y: 100) slice_2f3g4h root.Std_k98ojb.List.Slice {}\n        instance(x: 600, y: 300) slice_5i6j7k root.Std_k98ojb.List.Slice {}\n        instance(x: 800, y: 200) concat_8l9m0n root.Std_k98ojb.List.Concat {}\n\n        list_4d5e6f -> length_6a7b8c.list\n        n_7g8h9i -> modulo_9d0e1f.value\n        length_6a7b8c.length -> modulo_9d0e1f.divisor\n        modulo_9d0e1f.result -> slice_2f3g4h.start\n        list_4d5e6f -> slice_2f3g4h.list\n        slice_2f3g4h.slice -> concat_8l9m0n.right\n        modulo_9d0e1f.result -> slice_5i6j7k.end\n        list_4d5e6f -> slice_5i6j7k.list\n        slice_5i6j7k.slice -> concat_8l9m0n.left\n        concat_8l9m0n.result -> rotated_list_0a1b2c\n        execute_1a2b3c -> continue_3d4e5f\n    }\n\n    \n\n    instance(x: -100, y: -50) rotate_list_1b2c3d root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -200, y: -100, name: \"array\") property(List) array_123abc\n\n        out(x: 600, y: -100, name: \"sum\") property(Number) sum_456def\n\n        instance(x: 200, y: -100) reduce_789ghi root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 400, y: -100) add_012jkl root.Std_k98ojb.Math.Add {}\n\n        array_123abc -> reduce_789ghi.items\n        func() {\n            in(x: -100, y: 0, name: \"accumulator\") property(Number) accumulator_abc123\n            in(x: -100, y: 100, name: \"current\") property(Number) current_def456\n\n            out(x: 300, y: 50, name: \"result\") property(Number) result_ghi789\n\n            accumulator_abc123 -> add_012jkl.first\n            current_def456 -> add_012jkl.second\n            add_012jkl.result -> result_ghi789\n        } -> reduce_789ghi.reducer\n\n        0 -> reduce_789ghi.initialValue\n        reduce_789ghi.result -> sum_456def\n    }\n\n    \n\n    instance(x: -100, y: 0) sum_array_abc123 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"n\") property(Number) n_0c1a77\n\n        out(x: 838, y: 168, name: \"isPrime\") property(Bool) isPrime_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) if_9ab286 root.Std_k98ojb.Std.If {}\n        instance(x: 557, y: 167) filter_9b38cc root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 554, y: -203) mod_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: 168) generaterange_875ddb root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 554, y: -303) equal_14921d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 554, y: -403) isEmpty_14921d root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 554, y: -503) not_14921d root.Std_k98ojb.Logic.Not {}\n        2 -> generaterange_875ddb.from\n        n_0c1a77 -> generaterange_875ddb.to\n        generaterange_875ddb.list -> filter_9b38cc.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_8ee839\n\n            out(x: 333, y: -50, name: \"\") property(Bool) _7dd980\n\n            instance(x: 92, y: -22) mod_584bfd root.Std_k98ojb.Math.Modulo {}\n            x_8ee839 -> mod_584bfd.divisor\n            n_0c1a77 -> mod_584bfd.value\n            mod_584bfd.result -> equal_14921d.left\n            0 -> equal_14921d.right\n            equal_14921d.result -> _7dd980\n        } -> filter_9b38cc.handler\n        filter_9b38cc.output_list -> isEmpty_14921d.list\n        isEmpty_14921d.isEmpty -> not_14921d.input\n        not_14921d.output -> isPrime_0_0\n        execute_1ddb9f -> ifexpression_5c4634.execute\n        ifexpression_5c4634.then -> continue_a7f942\n        ifexpression_5c4634.else -> if_9ab286.execute\n        if_9ab286.then -> continue_a7f942\n        if_9ab286.else -> continue_a7f942\n        n_0c1a77 -> ifexpression_5c4634.gen_0\n        false -> if_9ab286.input\n    }\n\n    \n\n    instance(x: -242, y: -31) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -230, y: -210, name: \"a\") property(Number) a_1f9b2d\n        in(x: -228, y: -42, name: \"b\") property(Number) b_2e3a4f\n\n        out(x: 636, y: -118, name: \"result\") property(Bool) result_3b7c5e\n\n        instance(x: 172, y: -124) lessthanorequal_5f3b8d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 174, y: 58) lessthanorequal_8c7d4a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 412, y: -37) and_7f9b2e root.Std_k98ojb.Logic.And {}\n        instance(x: 412, y: 136) and_2f3b8d root.Std_k98ojb.Logic.And {}\n        instance(x: 638, y: 45) not_9f3b8d root.Std_k98ojb.Logic.Not {}\n        instance(x: 638, y: -46) not_8f3b8d root.Std_k98ojb.Logic.Not {}\n        instance(x: 872, y: -1) or_3f3b8d root.Std_k98ojb.Logic.Or {}\n        a_1f9b2d -> lessthanorequal_5f3b8d.left\n        0 -> lessthanorequal_5f3b8d.right\n        b_2e3a4f -> lessthanorequal_8c7d4a.left\n        0 -> lessthanorequal_8c7d4a.right\n        lessthanorequal_5f3b8d.result -> and_7f9b2e.left\n        lessthanorequal_8c7d4a.result -> and_2f3b8d.left\n        lessthanorequal_8c7d4a.result -> not_9f3b8d.input\n        lessthanorequal_5f3b8d.result -> not_8f3b8d.input\n        not_8f3b8d.result -> and_2f3b8d.right\n        not_9f3b8d.result -> and_7f9b2e.right\n        and_7f9b2e.result -> or_3f3b8d.left\n        and_2f3b8d.result -> or_3f3b8d.right\n        or_3f3b8d.result -> result_3b7c5e\n    }\n\n    \n\n    instance(x: -97, y: -68) opposite_sign_49c6ac root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -118, name: \"execute\") trigger() execute_1e159f\n        in(x: -235, y: 86, name: \"number\") property(Number) number_1e19fb\n\n        out(x: 680, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 695, y: 200, name: \"isDivisible\") property(Bool) isDivisible_fd7945\n\n        instance(x: 150, y: 50) modulo_8eae56 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: 100) equal_a2fa90 root.Std_k98ojb.Logic.Equal {}\n        11 -> modulo_8eae56.divisor\n        number_1e19fb -> modulo_8eae56.value\n        modulo_8eae56.result -> equal_a2fa90.left\n        0 -> equal_a2fa90.right\n        equal_a2fa90.result -> isDivisible_fd7945\n        execute_1e159f -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: -68) is_divisible_by_11_49c6ac root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_characters {\n        in(x: -200, y: -100, name: \"input\") property(String) input_123abc\n        in(x: -200, y: 0, name: \"search\") property(String) search_456def\n        in(x: -200, y: 100, name: \"replace\") property(String) replace_789ghi\n\n        out(x: 600, y: 0, name: \"output\") property(String) output_abc123\n\n        instance(x: 200, y: 0) replace_789abc root.Std_k98ojb.Strings.Replace {}\n        input_123abc -> replace_789abc.input\n        search_456def -> replace_789abc.search\n        replace_789ghi -> replace_789abc.replace\n        replace_789abc.output -> output_abc123\n    }\n\n    \n\n    instance(x: -100, y: -50) replace_characters_abc789 root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: -150, y: -100, name: \"input\") property(String) input_1a2b3c\n\n        out(x: 450, y: -100, name: \"output\") property(String) output_4d5e6f\n\n        instance(x: 150, y: -100) tolower_7f8g9h root.Std_k98ojb.Strings.ToLower {}\n        input_1a2b3c -> tolower_7f8g9h.input\n        tolower_7f8g9h.output -> output_4d5e6f\n    }\n\n    \n\n    instance(x: -50, y: 50) to_lower_case_7h8i9j root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_of_unique {\n        in(x: -200, y: -150, name: \"list\") property(List) list_8f2a3b\n\n        out(x: 900, y: -150, name: \"product\") property(Number) product_4b3c2d\n\n        instance(x: 200, y: -150) filter_3a4b5c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 500, y: -150) reduce_6d7e8f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 100, y: -50) is_empty_1a2b3c root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 300, y: -50) not_empty_4d5e6f root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 700, y: -150) mul_9a0b1c root.Std_k98ojb.Math.Mul {}\n        instance(x: 400, y: -50) unique_7f8g9h root.Std_k98ojb.Sets.Difference {}\n        instance(x: 600, y: -50) empty_list_0a1b2c root.Std_k98ojb.List.Empty {}\n\n        list_8f2a3b -> filter_3a4b5c.items\n        func() {\n            in(x: -100, y: -50, name: \"item\") property(Number) item_1a2b3c\n\n            out(x: 200, y: -50, name: \"is_unique\") property(Bool) is_unique_4d5e6f\n\n            instance(x: 0, y: -50) contains_5f6g7h root.Std_k98ojb.List.Contains {}\n            item_1a2b3c -> contains_5f6g7h.item\n            list_8f2a3b -> contains_5f6g7h.list\n            contains_5f6g7h.result -> is_unique_4d5e6f\n        } -> filter_3a4b5c.handler\n\n        filter_3a4b5c.output_list -> unique_7f8g9h.left\n        empty_list_0a1b2c.list -> unique_7f8g9h.right\n        unique_7f8g9h.difference -> reduce_6d7e8f.items\n\n        func() {\n            in(x: -100, y: -50, name: \"acc\") property(Number) acc_1a2b3c\n            in(x: -100, y: 50, name: \"item\") property(Number) item_4d5e6f\n\n            out(x: 200, y: 0, name: \"product\") property(Number) product_7f8g9h\n\n            instance(x: 0, y: 0) mul_9a0b1c root.Std_k98ojb.Math.Mul {}\n            acc_1a2b3c -> mul_9a0b1c.first\n            item_4d5e6f -> mul_9a0b1c.second\n            mul_9a0b1c.result -> product_7f8g9h\n        } -> reduce_6d7e8f.reducer\n\n        1 -> reduce_6d7e8f.initial\n        reduce_6d7e8f.result -> product_4b3c2d\n    }\n\n    \n\n    instance(x: -100, y: -100) product_of_unique_0a1b2c root.main.product_of_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -236, y: -150, name: \"list1\") property(List) list1_1a2b3c\n        in(x: -236, y: 50, name: \"list2\") property(List) list2_4d5e6f\n\n        out(x: 834, y: -50, name: \"result\") property(List) result_7g8h9i\n\n        instance(x: 150, y: -100) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 150, y: 100) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 500, y: 0) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_1a2b3c -> difference_1.left\n        list2_4d5e6f -> difference_1.right\n        list2_4d5e6f -> difference_2.left\n        list1_1a2b3c -> difference_2.right\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.result -> result_7g8h9i\n    }\n\n    \n\n    instance(x: -97, y: -68) dissimilar_elements_49c6ac root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -210, y: -110, name: \"execute\") trigger() execute_1e159f\n        in(x: -186, y: 160, name: \"list\") property(List) list_0c1a77\n        in(x: -192, y: 410, name: \"n\") property(Number) n_6b655b\n\n        out(x: 1150, y: 160, name: \"rotated_list\") property(List) rotated_list_8f3a7b\n        out(x: 1150, y: 40, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 260, y: 160) length_9b38cc root.Std_k98ojb.List.Length {}\n        instance(x: 520, y: 160) modulo_5c4634 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 780, y: 160) slice_8cb3f6 root.Std_k98ojb.List.Slice {}\n        instance(x: 780, y: 320) slice_9ab286 root.Std_k98ojb.List.Slice {}\n        instance(x: 1040, y: 240) concat_6030c9 root.Std_k98ojb.List.Concat {}\n\n        list_0c1a77 -> length_9b38cc.list\n        length_9b38cc.length -> modulo_5c4634.divisor\n        n_6b655b -> modulo_5c4634.value\n        modulo_5c4634.result -> slice_8cb3f6.start\n        list_0c1a77 -> slice_8cb3f6.list\n        modulo_5c4634.result -> slice_9ab286.end\n        list_0c1a77 -> slice_9ab286.list\n        slice_8cb3f6.slice -> concat_6030c9.right\n        slice_9ab286.slice -> concat_6030c9.left\n        concat_6030c9.result -> rotated_list_8f3a7b\n        execute_1e159f -> continue_8ba06b\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_list_49c6ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -178, y: -120, name: \"array\") property(List) array_4b5a1c\n\n        out(x: 712, y: -114, name: \"sum\") property(Number) sum_8c9b7d\n\n        instance(x: 150, y: -100) reduce_3f9b2d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 445, y: -105) add_5f8c3a root.Std_k98ojb.Math.Add {}\n        array_4b5a1c -> reduce_3f9b2d.items\n        0 -> reduce_3f9b2d.initial\n        func() {\n            in(x: -116, y: -30, name: \"acc\") property(Number) acc_2b8f3d\n            in(x: -115, y: 66, name: \"item\") property(Number) item_4c9b7e\n\n            out(x: 334, y: 19, name: \"result\") property(Number) result_7d8f3a\n\n            instance(x: 94, y: 19) add_1f9b2d root.Std_k98ojb.Math.Add {}\n            acc_2b8f3d -> add_1f9b2d.first\n            item_4c9b7e -> add_1f9b2d.second\n            add_1f9b2d.result -> result_7d8f3a\n        } -> reduce_3f9b2d.reducer\n        reduce_3f9b2d.result -> sum_8c9b7d\n    }\n\n    \n\n    instance(x: -95, y: -40) sum_array_8c9b7d root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -250, y: -160, name: \"n\") property(Number) n_1a2b3c\n\n        out(x: 1100, y: -150, name: \"isPrime\") property(Bool) isPrime_4d5e6f\n\n        instance(x: 100, y: -150) ifexpression_7f8g9h root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 400, y: -150) generaterange_2a3b4c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 700, y: -150) for_5d6e7f root.Std_k98ojb.Std.For {}\n        instance(x: 1000, y: -150) if_8g9h0i root.Std_k98ojb.Std.If {}\n        instance(x: 850, y: -300) modulo_1b2c3d root.Std_k98ojb.Math.Modulo {}\n\n        false -> ifexpression_7f8g9h.then\n        true -> ifexpression_7f8g9h.else\n        ifexpression_7f8g9h.result -> isPrime_4d5e6f\n\n        2 -> generaterange_2a3b4c.from\n        n_1a2b3c -> generaterange_2a3b4c.to\n        generaterange_2a3b4c.list -> for_5d6e7f.items\n\n        for_5d6e7f.item -> modulo_1b2c3d.divisor\n        n_1a2b3c -> modulo_1b2c3d.value\n        modulo_1b2c3d.result -> if_8g9h0i.input\n\n        false -> if_8g9h0i.then\n        true -> if_8g9h0i.else\n        if_8g9h0i.value -> isPrime_4d5e6f\n\n        for_5d6e7f.onItem -> if_8g9h0i.execute\n        for_5d6e7f.done -> isPrime_4d5e6f\n\n        n_1a2b3c -> ifexpression_7f8g9h.gen_0\n    }\n\n    \n\n    instance(x: -100, y: -50) is_prime_7h8i9j root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -230, y: -153, name: \"a\") property(Number) a_9f8b2d\n        in(x: -231, y: 53, name: \"b\") property(Number) b_2c7e0b\n\n        out(x: 636, y: -49, name: \"result\") property(Bool) result_7e3f5c\n\n        instance(x: 207, y: -69) lessthanorequal_5b3c4e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 209, y: 118) lessthanorequal_9e2f4a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 454, y: 37) and_1f7d2a root.Std_k98ojb.Logic.And {}\n        instance(x: 457, y: -164) not_2f1a9d root.Std_k98ojb.Logic.Not {}\n        a_9f8b2d -> lessthanorequal_5b3c4e.left\n        0 -> lessthanorequal_5b3c4e.right\n        b_2c7e0b -> lessthanorequal_9e2f4a.left\n        0 -> lessthanorequal_9e2f4a.right\n        lessthanorequal_5b3c4e.result -> not_2f1a9d.input\n        not_2f1a9d.output -> and_1f7d2a.left\n        lessthanorequal_9e2f4a.result -> and_1f7d2a.right\n        and_1f7d2a.result -> result_7e3f5c\n    }\n\n    \n\n    instance(x: -162, y: -51) opposite_sign_eb9c1a root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -132, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 752, y: -130, name: \"result\") property(Bool) result_4d5e6f\n\n        instance(x: 320, y: -132) modulo_9f8e7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 540, y: -132) equal_6a7b8c root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_9f8e7d.value\n        11 -> modulo_9f8e7d.divisor\n        modulo_9f8e7d.result -> equal_6a7b8c.left\n        0 -> equal_6a7b8c.right\n        equal_6a7b8c.result -> result_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: -50) is_divisible_by_11_7f8g9h root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_chars {\n        in(x: -208, y: -148, name: \"execute\") trigger() execute_1d3a8b\n        in(x: -201, y: 35, name: \"input\") property(String) input_4b5c3d\n        in(x: -197, y: 243, name: \"search\") property(String) search_8e4b2f\n        in(x: -198, y: 445, name: \"replace\") property(String) replace_7c3d1e\n\n        out(x: 760, y: 150, name: \"output\") property(String) output_3a9d7b\n        out(x: 776, y: 28, name: \"continue\") trigger() continue_8b4f2a\n\n        instance(x: 354, y: 140) replace_5f4b3c root.Std_k98ojb.Strings.Replace {}\n        input_4b5c3d -> replace_5f4b3c.input\n        search_8e4b2f -> replace_5f4b3c.search\n        replace_7c3d1e -> replace_5f4b3c.replace\n        replace_5f4b3c.output -> output_3a9d7b\n        execute_1d3a8b -> continue_8b4f2a\n    }\n\n    \n\n    instance(x: -140, y: -62) replace_chars_6b7f8a root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: -123, y: -89, name: \"input\") property(String) input_7a1c2b\n\n        out(x: 652, y: -82, name: \"output\") property(String) output_9d3f4b\n\n        instance(x: 196, y: -102) tolower_5d8f9b root.Std_k98ojb.Strings.ToLower {}\n        input_7a1c2b -> tolower_5d8f9b.input\n        tolower_5d8f9b.output -> output_9d3f4b\n    }\n\n    \n\n    instance(x: -92, y: 45) to_lower_case_5f7d3a root.main.to_lower_case {}\n}"
            ],
            "16": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -250, y: -132, name: \"execute\") trigger() execute_9f8b2d\n        in(x: -236, y: 95, name: \"list\") property(List) list_2c7b0a\n\n        out(x: 1052, y: 112, name: \"product\") property(Number) product_7f3b5c\n        out(x: 1068, y: -54, name: \"continue\") trigger() continue_4f8d3e\n\n        instance(x: 243, y: 88) filter_6b3f1d root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 527, y: 111) reduce_3c5b9a root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 236, y: -105) notempty_6a2f4b root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 528, y: -50) if_8b7d3c root.Std_k98ojb.Std.If {}\n        instance(x: 756, y: 94) expression_9f2b8d root.Std_k98ojb.Math.Expression {\n            expression: \"acc * x\"\n        }\n        instance(x: 748, y: -142) expression_4a8b9d root.Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        instance(x: 251, y: 231) filter_5a2d3e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: 97) flatten_8b7c4e root.Std_k98ojb.List.Flatten {}\n        instance(x: 10, y: -67) empty_5b3c4f root.Std_k98ojb.List.Empty {}\n        instance(x: 250, y: -260) map_9f8b7d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 505, y: -249) filter_8a7d3e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 509, y: -348) notempty_5b7d3e root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 242, y: -359) filter_4a7b9e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -247) flatten_6b8d4e root.Std_k98ojb.List.Flatten {}\n        instance(x: 0, y: -359) empty_4a8c5f root.Std_k98ojb.List.Empty {}\n        instance(x: 748, y: -348) expression_3a8b7d root.Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        instance(x: 236, y: -470) map_8a7b9d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 505, y: -459) filter_7a8b4e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 509, y: -558) notempty_4a8b3e root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 242, y: -569) filter_6a7b9e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -457) flatten_5b8d3e root.Std_k98ojb.List.Flatten {}\n        instance(x: 0, y: -569) empty_3a8c4f root.Std_k98ojb.List.Empty {}\n        instance(x: 748, y: -558) expression_2a8b6d root.Std_k98ojb.Math.Expression {\n            expression: \"1\"\n        }\n        instance(x: 236, y: -670) map_7a7b8d root.Std_k98ojb.Iteration.Map {}\n        instance(x: 505, y: -659) filter_6a8b3e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 509, y: -758) notempty_3a8b2e root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 242, y: -769) filter_5a7b8e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 0, y: -657) flatten_4b8d2e root.Std_k98ojb.List.Flatten {}\n        instance(x: 0, y: -769) empty_2a8c3f root.Std_k98ojb.List"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -152, y: -99, name: \"list1\") property(List) list1_1c4d2b\n        in(x: -157, y: 97, name: \"list2\") property(List) list2_9f3d4b\n\n        out(x: 670, y: 15, name: \"dissimilar\") property(List) dissimilar_0f3b9d\n\n        instance(x: 164, y: -124) difference_9f6b8c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 420, y: -12) difference_7f8a4c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 403, y: 152) concat_2b7c8a root.Std_k98ojb.List.Concat {}\n        list1_1c4d2b -> difference_9f6b8c.left\n        list2_9f3d4b -> difference_9f6b8c.right\n        difference_9f6b8c.difference -> concat_2b7c8a.left\n        list2_9f3d4b -> difference_7f8a4c.left\n        list1_1c4d2b -> difference_7f8a4c.right\n        difference_7f8a4c.difference -> concat_2b7c8a.right\n        concat_2b7c8a.result -> dissimilar_0f3b9d\n    }\n\n    \n\n    instance(x: -97, y: -68) dissimilar_elements_49c6ac root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -210, y: -164, name: \"execute\") trigger() execute_2d2a7f\n        in(x: -189, y: 108, name: \"list\") property(List) list_0b1f5b\n        in(x: -193, y: 343, name: \"rotate_by\") property(Number) rotate_by_0f3b9d\n\n        out(x: 1124, y: 123, name: \"rotated_list\") property(List) rotated_list_3f5b8a\n        out(x: 1113, y: -35, name: \"continue\") trigger() continue_3a6c1b\n\n        instance(x: 277, y: 93) length_2b7c8e root.Std_k98ojb.List.Length {}\n        instance(x: 555, y: 35) sub_4c9b1d root.Std_k98ojb.Math.Sub {}\n        instance(x: 556, y: 196) slice_7a8b2e root.Std_k98ojb.List.Slice {}\n        instance(x: 820, y: 112) concat_9f2b1c root.Std_k98ojb.List.Concat {}\n        instance(x: 554, y: 324) slice_4f3a1d root.Std_k98ojb.List.Slice {}\n        instance(x: 278, y: -70) modulo_1a3d9b root.Std_k98ojb.Math.Modulo {}\n        list_0b1f5b -> length_2b7c8e.list\n        length_2b7c8e.length -> modulo_1a3d9b.divisor\n        rotate_by_0f3b9d -> modulo_1a3d9b.value\n        modulo_1a3d9b.result -> sub_4c9b1d.second\n        length_2b7c8e.length -> sub_4c9b1d.first\n        sub_4c9b1d.result -> slice_7a8b2e.start\n        list_0b1f5b -> slice_7a8b2e.list\n        -1 -> slice_7a8b2e.end\n        slice_7a8b2e.slice -> concat_9f2b1c.right\n        list_0b1f5b -> slice_4f3a1d.list\n        0 -> slice_4f3a1d.start\n        sub_4c9b1d.result -> slice_4f3a1d.end\n        slice_4f3a1d.slice -> concat_9f2b1c.left\n        concat_9f2b1c.result -> rotated_list_3f5b8a\n        execute_2d2a7f -> continue_3a6c1b\n    }\n\n    \n\n    instance(x: -197, y: -65) rotate_list_5d3b7c root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -132, y: -81, name: \"array\") property(List) array_63c248\n\n        out(x: 656, y: -68, name: \"sum\") property(Number) sum_cbb7bd\n\n        instance(x: 94, y: -105) reduce_f2330d root.Std_k98ojb.Iteration.Reduce {}\n        array_63c248 -> reduce_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -121, y: 37, name: \"item\") property(Number) item_8ee839\n\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n\n            instance(x: 92, y: -22) add_584bfd root.Std_k98ojb.Math.Add {}\n            acc_8ee839 -> add_584bfd.first\n            item_8ee839 -> add_584bfd.second\n            add_584bfd.result -> result_7dd980\n        } -> reduce_f2330d.reducer\n        0 -> reduce_f2330d.initial\n        reduce_f2330d.result -> sum_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) sum_array_b9ff6b root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"number\") property(Number) number_0c1a77\n\n        out(x: 838, y: 168, name: \"isPrime\") property(Bool) isPrime_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 557, y: 167) not_9b38cc root.Std_k98ojb.Logic.Not {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 562, y: -203) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        instance(x: 95, y: 74) generaterange_038fce root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 933, y: 25) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        2 -> generaterange_038fce.from\n        number_0c1a77 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_9ab286.items\n        for_9ab286.item -> modulo_14921d.divisor\n        number_0c1a77 -> modulo_14921d.value\n        modulo_14921d.result -> if_07b8c7.predicate\n        for_9ab286.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_a7f942\n        if_07b8c7.then -> not_9b38cc.input\n        not_9b38cc.output -> isPrime_0_0\n        for_9ab286.done -> continue_a7f942\n        execute_1ddb9f -> for_9ab286.reset\n        if_e19a62.else -> for_9ab286.next\n        ifexpression_5c4634.gen_0 -> number_0c1a77\n        ifexpression_5c4634.then -> continue_a7f942\n        ifexpression_5c4634.else -> for_9ab286.reset\n        execute_1ddb9f -> ifexpression_5c4634.execute\n    }\n\n    \n\n    instance(x: -242, y: -31) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -230, y: -153, name: \"a\") property(Number) a_9e8b2d\n        in(x: -231, y: 95, name: \"b\") property(Number) b_9e8b3d\n        in(x: -287, y: -293, name: \"execute\") trigger() execute_2d7e3f\n\n        out(x: 631, y: -70, name: \"result\") property(Bool) result_9e8b4d\n        out(x: 620, y: -238, name: \"continue\") trigger() continue_3b9e3f\n\n        instance(x: 158, y: -93) ifexpression_c4d3b0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a ^ b) < 0\"\n        }\n        ifexpression_c4d3b0.result -> result_9e8b4d\n        execute_2d7e3f -> continue_3b9e3f\n        a_9e8b2d -> ifexpression_c4d3b0.gen_0\n        b_9e8b3d -> ifexpression_c4d3b0.gen_1\n    }\n\n    \n\n    instance(x: -124, y: -49) opposite_sign_123abc root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -132, name: \"number\") property(Number) number_1c4e2b\n        in(x: -253, y: -334, name: \"execute\") trigger() execute_9c7e0b\n\n        out(x: 1052, y: -112, name: \"isDivisible\") property(Bool) isDivisible_f0a3b9\n        out(x: 1049, y: -313, name: \"continue\") trigger() continue_f3d2b5\n\n        instance(x: 335, y: -152) modulo_2b3d7f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 581, y: -102) equal_0c8b2f root.Std_k98ojb.Logic.Equal {}\n        setter(x: -73, y: -166, name: \"setter_4f7a7d\") setter_4f7a7d = result\n        getter(x: 552, y: -307, name: \"getter_5f8c2a\") getter_5f8c2a = result\n        11 -> modulo_2b3d7f.divisor\n        number_1c4e2b -> modulo_2b3d7f.value\n        modulo_2b3d7f.result -> setter_4f7a7d.new_value\n        execute_9c7e0b -> setter_4f7a7d.execute\n        setter_4f7a7d.continue -> continue_f3d2b5\n        getter_5f8c2a.value -> equal_0c8b2f.left\n        0 -> equal_0c8b2f.right\n        equal_0c8b2f.result -> isDivisible_f0a3b9\n    }\n\n    \n\n    instance(x: -191, y: -49) is_divisible_by_11_9c8e7c root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_chars {\n        in(x: -208, y: -148, name: \"execute\") trigger() execute_1d3a8b\n        in(x: -201, y: 35, name: \"input\") property(String) input_4b5c3d\n        in(x: -197, y: 243, name: \"search\") property(String) search_8e4b6f\n        in(x: -180, y: 445, name: \"replace\") property(String) replace_7c3e5d\n\n        out(x: 760, y: 150, name: \"output\") property(String) output_3a9d7f\n        out(x: 800, y: 50, name: \"continue\") trigger() continue_8b5f2a\n\n        instance(x: 354, y: 140) replace_5f4b3c root.Std_k98ojb.Strings.Replace {}\n        input_4b5c3d -> replace_5f4b3c.input\n        search_8e4b6f -> replace_5f4b3c.search\n        replace_7c3e5d -> replace_5f4b3c.replace\n        replace_5f4b3c.output -> output_3a9d7f\n        execute_1d3a8b -> continue_8b5f2a\n    }\n\n    \n\n    instance(x: -140, y: -60) replace_chars_6b7f8a root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: -123, y: -37, name: \"input\") property(String) input_7a1f4b\n\n        out(x: 563, y: -27, name: \"output\") property(String) output_9e1baf\n\n        instance(x: 235, y: -33) tolower_0f3e2d root.Std_k98ojb.Strings.ToLower {}\n        input_7a1f4b -> tolower_0f3e2d.input\n        tolower_0f3e2d.output -> output_9e1baf\n    }\n\n    \n\n    instance(x: -91, y: 34) to_lower_case_4c5f7d root.main.to_lower_case {}\n}"
            ],
            "16": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_of_unique {\n        in(x: -179, y: -94, name: \"execute\") trigger() execute_1c4e9f\n        in(x: -157, y: 97, name: \"list\") property(List) list_2e9f3a\n\n        out(x: 1130, y: 132, name: \"result\") property(Number) result_8b1c0a\n        out(x: 1129, y: 14, name: \"continue\") trigger() continue_8c1dbd\n\n        instance(x: 243, y: 88) reduce_6b3f1d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 247, y: -152) filter_5b0c8b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 696, y: 90) mul_2e4f1d root.Std_k98ojb.Math.Mul {}\n        instance(x: 501, y: -149) notempty_8e3d7a root.Std_k98ojb.List.NotEmpty {}\n        instance(x: 498, y: -15) length_3f7a4a root.Std_k98ojb.List.Length {}\n        instance(x: 681, y: -204) equal_1c5d4f root.Std_k98ojb.Logic.Equal {}\n        instance(x: -8, y: -217) empty_6b4a7a root.Std_k98ojb.List.Empty {}\n        setter(x: 1036, y: 82, name: \"setter_5e8b3d\") setter_5e8b3d = product\n        getter(x: 1006, y: -57, name: \"getter_3f2b1a\") getter_3f2b1a = product\n        list_2e9f3a -> filter_5b0c8b.items\n        filter_5b0c8b.output_list -> reduce_6b3f1d.items\n        1 -> reduce_6b3f1d.initialValue\n        func() {\n            in(x: 0, y: -91, name: \"acc\") property(Number) acc_9f2a3b\n            in(x: -12, y: 58, name: \"value\") property(Number) value_0b1c2d\n\n            out(x: 220, y: -38, name: \"result\") property(Number) result_2f8d1a\n\n            instance(x: 84, y: -20) mul_8c3d1f root.Std_k98ojb.Math.Mul {}\n            acc_9f2a3b -> mul_8c3d1f.first\n            value_0b1c2d -> mul_8c3d1f.second\n            mul_8c3d1f.result -> result_2f8d1a\n        } -> reduce_6b3f1d.reducer\n        reduce_6b3f1d.result -> setter_5e8b3d.new_value\n        setter_5e8b3d.continue -> continue_8c1dbd\n        getter_3f2b1a.value -> result_8b1c0a\n        empty_6b4a7a.list -> setter_5e8b3d.new_value\n        execute_1c4e9f -> setter_5e8b3d.execute\n        func() {\n            in(x: -15, y: 24, name: \"item\") property(Number) item_3c8f2b\n\n            out(x: 373, y: 24, name: \"result\") property(Bool) result_4f7c1d\n\n            instance(x: 200, y: 0) filter_c3d8a4 root.Std_k98ojb.Query.Filter {\n                where: \"it == item\"\n            }\n            instance(x: 558, y: -13) length_4b9c5d root.Std_k98ojb.List.Length {}\n            instance(x: 744, y: 13) equal_7c8b1d root.Std_k98ojb.Logic.Equal {}\n            list_2e9f3a -> filter_c3d8a4.list\n            filter_c3d8a4.result -> length_4b9c5d.list\n            length_4b9c5d.length -> equal_7c8b1d.left\n            1 -> equal_7c8b1d.right\n            equal_7c8b1d.result -> result_4f7c1d\n        } -> filter_5b"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -292, y: -98, name: \"list1\") property(List) list1_9e8b2d\n        in(x: -286, y: 135, name: \"list2\") property(List) list2_6c0b1f\n\n        out(x: 1034, y: 15, name: \"dissimilar\") property(List) dissimilar_f0a3b9\n\n        instance(x: 251, y: -48) difference_1cb5b4 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 618, y: -46) difference_3d7f5e root.Std_k98ojb.Sets.Difference {}\n        instance(x: 835, y: -13) concat_3a2b7c root.Std_k98ojb.List.Concat {}\n        list1_9e8b2d -> difference_1cb5b4.left\n        list2_6c0b1f -> difference_1cb5b4.right\n        list2_6c0b1f -> difference_3d7f5e.left\n        list1_9e8b2d -> difference_3d7f5e.right\n        difference_1cb5b4.difference -> concat_3a2b7c.left\n        difference_3d7f5e.difference -> concat_3a2b7c.right\n        concat_3a2b7c.result -> dissimilar_f0a3b9\n    }\n\n    \n\n    instance(x: -197, y: 47) dissimilar_elements_5f2f6c root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -375, y: -164, name: \"execute\") trigger() execute_e2d2a7\n        in(x: -350, y: 105, name: \"list\") property(List) list_9f3d0b\n        in(x: -351, y: 314, name: \"n\") property(Number) n_3f5c9d\n\n        out(x: 1044, y: 112, name: \"rotated_list\") property(List) rotated_list_2b7f8d\n        out(x: 1038, y: -95, name: \"continue\") trigger() continue_d2f4a3\n\n        instance(x: 247, y: 233) length_0a3a48 root.Std_k98ojb.List.Length {}\n        instance(x: 553, y: 171) slice_6a2f4f root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: 304) slice_5e3d7a root.Std_k98ojb.List.Slice {}\n        instance(x: 794, y: 243) concat_3f7a4a root.Std_k98ojb.List.Concat {}\n        instance(x: 254, y: -61) modulo_1c5d4f root.Std_k98ojb.Math.Modulo {}\n        setter(x: -63, y: -60, name: \"setter_9e2f6d\") setter_9e2f6d = local_n\n        getter(x: 164, y: 47, name: \"getter_4b7d2f\") getter_4b7d2f = local_n\n        setter(x: 346, y: 68, name: \"setter_4d8a9e\") setter_4d8a9e = local_n\n        getter(x: 492, y: 49, name: \"getter_1a3c8e\") getter_1a3c8e = local_n\n        list_9f3d0b -> length_0a3a48.list\n        list_9f3d0b -> slice_6a2f4f.list\n        list_9f3d0b -> slice_5e3d7a.list\n        slice_6a2f4f.sliced -> concat_3f7a4a.right\n        slice_5e3d7a.sliced -> concat_3f7a4a.left\n        concat_3f7a4a.result -> rotated_list_2b7f8d\n        length_0a3a48.length -> modulo_1c5d4f.divisor\n        execute_e2d2a7 -> setter_9e2f6d.execute\n        n_3f5c9d -> setter_9e2f6d.new_value\n        setter_9e2f6d.continue -> modulo_1c5d4f.execute\n        getter_4b7d2f.value -> modulo_1c5d4f.value\n        modulo_1c5d4f.result -> setter_4d8a9e.new_value\n        setter_4d8a9e.continue -> continue_d2f4a3\n        getter_1a3c8e.value -> slice_6a2f4f.start\n        getter_1a3c8e.value -> slice_5e3d7a.end\n        length_0a3a48.length -> slice_6a2f4f.end\n        0 -> slice_5e3d7a.start\n    }\n\n    \n\n    instance(x: -242, y: -31) rotate_list_0e2f9b root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -132, y: -129, name: \"array\") property(List) array_63c248\n\n        out(x: 679, y: -132, name: \"sum\") property(Number) sum_cbb7bd\n\n        instance(x: 94, y: -105) reduce_3d7de6 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 375, y: -204) add_f2330d root.Std_k98ojb.Math.Add {}\n        \n        array_63c248 -> reduce_3d7de6.items\n        reduce_3d7de6.result -> sum_cbb7bd\n        \n        func() {\n            in(x: -121, y: -37, name: \"accumulated\") property(Number) accumulated_8ee839\n            in(x: -121, y: 50, name: \"current\") property(Number) current_7dd980\n\n            out(x: 333, y: 6, name: \"result\") property(Number) result_584bfd\n\n            accumulated_8ee839 -> add_f2330d.first\n            current_7dd980 -> add_f2330d.second\n            add_f2330d.result -> result_584bfd\n        } -> reduce_3d7de6.reducer\n    }\n\n    \n\n    instance(x: -92, y: 45) sum_array_b9ff6b root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"n\") property(Number) n_0c1a77\n\n        out(x: 838, y: 168, name: \"isPrime\") property(Bool) isPrime_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.Math.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        instance(x: 562, y: -203) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 800, y: -203) expression_9fba8c root.Std_k98ojb.Math.Expression {\n            expression: \"n / i == i\"\n        }\n        instance(x: 1812, y: -319) and_80a119 root.Std_k98ojb.Logic.And {}\n        instance(x: 1121, y: -54) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1088, y: -256) add_b4554f root.Std_k98ojb.Math.Add {}\n        2 -> generaterange_038fce.from\n        n_0c1a77 -> generaterange_038fce.to\n        generaterange_038fce.list -> for_9ab286.items\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        for_9ab286.onItem -> if_07b8c7.execute\n        if_07b8c7.else -> continue_a7f942\n        expression_b720d7.result -> and_80a119.left\n        expression_9fba8c.result -> and_80a119.right\n        and_80a119.result -> if_e19a62.predicate\n        if_07b8c7.then -> if_e19a62.execute\n        if_07b8c7.value -> isPrime_0_0\n        if_e19a62.then -> continue_a7f942\n        for_9ab286.done -> continue_a7f942\n        execute_1ddb9f -> for_9ab286.reset\n        if_e19a62.else -> for_9ab286.next\n    }\n\n    \n\n    instance(x: -242, y: -31) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -230, y: -153, name: \"a\") property(Number) a_1e159f\n        in(x: -234, y: 53, name: \"b\") property(Number) b_1e19fb\n\n        out(x: 680, y: -53, name: \"result\") property(Bool) result_fd7945\n\n        instance(x: 250, y: -50) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"(a < 0 && b > 0) || (a > 0 && b < 0)\"\n        }\n        a_1e159f -> ifexpression_3d7de6.gen_0\n        b_1e19fb -> ifexpression_3d7de6.gen_1\n        ifexpression_3d7de6.value -> result_fd7945\n    }\n\n    \n\n    instance(x: -97, y: -68) opposite_sign_49c6ac root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -118, name: \"execute\") trigger() execute_1e159f\n        in(x: -235, y: 86, name: \"number\") property(Number) number_b5d10a\n\n        out(x: 680, y: 53, name: \"continue\") trigger() continue_c95bcb\n        out(x: 690, y: 200, name: \"isDivisible\") property(Bool) isDivisible_fd7945\n\n        instance(x: 150, y: 50) modulo_8eae56 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: 100) equal_a2fa90 root.Std_k98ojb.Logic.Equal {}\n        11 -> modulo_8eae56.divisor\n        number_b5d10a -> modulo_8eae56.value\n        modulo_8eae56.result -> equal_a2fa90.left\n        0 -> equal_a2fa90.right\n        equal_a2fa90.result -> isDivisible_fd7945\n        execute_1e159f -> continue_c95bcb\n    }\n\n    \n\n    instance(x: -97, y: -68) is_divisible_by_11_49c6ac root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_characters {\n        in(x: -200, y: -100, name: \"input\") property(String) input_123abc\n        in(x: -200, y: 0, name: \"search\") property(String) search_456def\n        in(x: -200, y: 100, name: \"replace\") property(String) replace_789ghi\n\n        out(x: 600, y: 0, name: \"output\") property(String) output_abc123\n\n        instance(x: 200, y: 0) replace_123456 root.Std_k98ojb.Strings.Replace {}\n        input_123abc -> replace_123456.input\n        search_456def -> replace_123456.search\n        replace_789ghi -> replace_123456.replace\n        replace_123456.output -> output_abc123\n    }\n\n    \n\n    instance(x: -100, y: -50) replace_characters_abc456 root.main.replace_characters {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: -174, y: -89, name: \"input\") property(String) input_4f2a1b\n\n        out(x: 484, y: -88, name: \"output\") property(String) output_9c7b3d\n\n        instance(x: 154, y: -88) tolower_5f8c2d root.Std_k98ojb.Strings.ToLower {}\n        input_4f2a1b -> tolower_5f8c2d.input\n        tolower_5f8c2d.output -> output_9c7b3d\n    }\n\n    \n\n    instance(x: -92, y: 45) to_lower_case_1a2b3c root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_of_unique {\n        in(x: -200, y: -150, name: \"list\") property(List) list_0c1a77\n\n        out(x: 800, y: -150, name: \"product\") property(Number) product_8ba06b\n\n        instance(x: 100, y: -150) filter_875ddb root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 400, y: -150) reduce_5c4634 root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 200, y: -150) unique_9b38cc root.Std_k98ojb.Sets.Difference {}\n        instance(x: 600, y: -150) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"a == 0\"\n        }\n        instance(x: 700, y: -150) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 300, y: -150) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        list_0c1a77 -> unique_9b38cc.left\n        empty_ea3a3a.list -> unique_9b38cc.right\n        unique_9b38cc.difference -> filter_875ddb.items\n        func() {\n            in(x: -100, y: -50, name: \"item\") property(Number) item_5f51f7\n\n            out(x: 200, y: -50, name: \"out\") property(Bool) out_d0fd24\n\n            instance(x: 50, y: -50) contains_2f9d09 root.Std_k98ojb.List.Contains {}\n            list_0c1a77 -> contains_2f9d09.list\n            item_5f51f7 -> contains_2f9d09.item\n            contains_2f9d09.result -> out_d0fd24\n        } -> filter_875ddb.handler\n        filter_875ddb.output_list -> reduce_5c4634.items\n        func() {\n            in(x: -100, y: -50, name: \"acc\") property(Number) acc_5f51f7\n            in(x: -100, y: 50, name: \"item\") property(Number) item_5f51f7\n\n            out(x: 200, y: 0, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 50, y: 0) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            acc_5f51f7 -> mul_2f9d09.first\n            item_5f51f7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_5c4634.reducer\n        1 -> reduce_5c4634.initial\n        reduce_5c4634.result -> ifexpression_3d7de6.gen_0\n        ifexpression_3d7de6.then -> product_8ba06b\n        ifexpression_3d7de6.else -> mul_2f9d09.result\n        1 -> mul_2f9d09.first\n        reduce_5c4634.result -> mul_2f9d09.second\n    }\n\n    \n\n    instance(x: -100, y: -50) product_of_unique_49c6ac root.main.product_of_unique {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -236, y: -145, name: \"list1\") property(List) list1_1a2b3c\n        in(x: -232, y: 50, name: \"list2\") property(List) list2_4d5e6f\n\n        out(x: 834, y: -46, name: \"result\") property(List) result_7f8g9h\n\n        instance(x: 150, y: -98) difference_3a4b5c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 450, y: -100) difference_6d7e8f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 650, y: -50) concat_9a0b1c root.Std_k98ojb.List.Concat {}\n        list1_1a2b3c -> difference_3a4b5c.left\n        list2_4d5e6f -> difference_3a4b5c.right\n        list2_4d5e6f -> difference_6d7e8f.left\n        list1_1a2b3c -> difference_6d7e8f.right\n        difference_3a4b5c.difference -> concat_9a0b1c.left\n        difference_6d7e8f.difference -> concat_9a0b1c.right\n        concat_9a0b1c.result -> result_7f8g9h\n    }\n\n    \n\n    instance(x: -97, y: -68) dissimilar_elements_49c6ac root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -210, y: -110, name: \"list\") property(List) list_4f8a1b\n        in(x: -204, y: 80, name: \"rotate_by\") property(Number) rotate_by_1e19fb\n\n        out(x: 850, y: -20, name: \"result\") property(List) result_5f3b2a\n\n        instance(x: 150, y: -30) length_9b3f4a root.Std_k98ojb.List.Length {}\n        instance(x: 450, y: -50) slice_3d7de6 root.Std_k98ojb.List.Slice {}\n        instance(x: 450, y: 100) slice_5c4634 root.Std_k98ojb.List.Slice {}\n        instance(x: 650, y: 30) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 300, y: 20) sub_9ff257 root.Std_k98ojb.Math.Sub {}\n        instance(x: 300, y: -150) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        list_4f8a1b -> length_9b3f4a.list\n        length_9b3f4a.length -> modulo_adfa16.divisor\n        rotate_by_1e19fb -> modulo_adfa16.value\n        modulo_adfa16.result -> sub_9ff257.second\n        length_9b3f4a.length -> sub_9ff257.first\n        sub_9ff257.result -> slice_3d7de6.start\n        list_4f8a1b -> slice_3d7de6.list\n        slice_3d7de6.slice -> concat_9b38cc.right\n        sub_9ff257.result -> slice_5c4634.end\n        list_4f8a1b -> slice_5c4634.list\n        slice_5c4634.slice -> concat_9b38cc.left\n        concat_9b38cc.result -> result_5f3b2a\n    }\n\n    \n\n    instance(x: -97, y: -68) rotate_list_49c6ac root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -168, y: -120, name: \"array\") property(List) array_4b7f2a\n\n        out(x: 668, y: -114, name: \"sum\") property(Number) sum_8c9f3b\n\n        instance(x: 150, y: -100) reduce_3f9b8d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: -250, y: -240) add_1a2b3c root.Std_k98ojb.Math.Add {}\n        array_4b7f2a -> reduce_3f9b8d.items\n        func() {\n            in(x: -100, y: -50, name: \"accumulated\") property(Number) accumulated_1d2e3f\n            in(x: -100, y: 50, name: \"current\") property(Number) current_4f5a6b\n\n            out(x: 300, y: 0, name: \"result\") property(Number) result_7b8c9d\n\n            instance(x: 100, y: 0) add_2b3c4d root.Std_k98ojb.Math.Add {}\n            accumulated_1d2e3f -> add_2b3c4d.first\n            current_4f5a6b -> add_2b3c4d.second\n            add_2b3c4d.result -> result_7b8c9d\n        } -> reduce_3f9b8d.reducer\n        reduce_3f9b8d.result -> sum_8c9f3b\n        0 -> reduce_3f9b8d.initial\n    }\n\n    \n\n    instance(x: -97, y: -68) sum_array_49c6ac root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -190, y: -160, name: \"n\") property(Number) n_1a2b3c\n\n        out(x: 1030, y: -60, name: \"isPrime\") property(Bool) isPrime_4d5e6f\n\n        instance(x: 100, y: -150) ifexpression_7f8g9h root.Std_k98ojb.Std.IfExpression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 350, y: -100) generaterange_2a3b4c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 600, y: -50) for_5c6d7e root.Std_k98ojb.Std.For {}\n        instance(x: 850, y: -150) modulo_8f9g0h root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1100, y: -100) if_1i2j3k root.Std_k98ojb.Std.If {}\n        instance(x: 1350, y: -50) not_4l5m6n root.Std_k98ojb.Logic.Not {}\n        instance(x: 1600, y: -100) setter_7o8p9q setter_7o8p9q = isPrime\n\n        2 -> generaterange_2a3b4c.from\n        n_1a2b3c -> generaterange_2a3b4c.to\n        generaterange_2a3b4c.list -> for_5c6d7e.items\n        for_5c6d7e.item -> modulo_8f9g0h.divisor\n        n_1a2b3c -> modulo_8f9g0h.value\n        modulo_8f9g0h.result -> if_1i2j3k.input\n        if_1i2j3k.then -> setter_7o8p9q.execute\n        false -> setter_7o8p9q.new_value\n        if_1i2j3k.else -> for_5c6d7e.next\n        for_5c6d7e.done -> not_4l5m6n.input\n        not_4l5m6n.output -> setter_7o8p9q.new_value\n        setter_7o8p9q.continue -> isPrime_4d5e6f\n        ifexpression_7f8g9h.then -> setter_7o8p9q.execute\n        false -> setter_7o8p9q.new_value\n        ifexpression_7f8g9h.else -> for_5c6d7e.reset\n        n_1a2b3c -> ifexpression_7f8g9h.gen_0\n    }\n\n    \n\n    instance(x: -100, y: -50) is_prime_0a1b2c root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -230, y: -153, name: \"a\") property(Number) a_9f8b2d\n        in(x: -231, y: 33, name: \"b\") property(Number) b_9c7e0b\n        in(x: -234, y: -347, name: \"execute\") trigger() execute_2d7f3b\n\n        out(x: 631, y: -70, name: \"result\") property(Bool) result_6b8c1d\n        out(x: 620, y: -238, name: \"continue\") trigger() continue_1b9e3a\n\n        instance(x: 198, y: -93) lessthan_2f5b0c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 213, y: 33) greaterthan_4f8d6a root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 426, y: -159) and_5d7b8a root.Std_k98ojb.Logic.And {}\n        instance(x: 432, y: -316) if_7f9d2b root.Std_k98ojb.Std.If {}\n        a_9f8b2d -> lessthan_2f5b0c.left\n        0 -> lessthan_2f5b0c.right\n        b_9c7e0b -> greaterthan_4f8d6a.left\n        0 -> greaterthan_4f8d6a.right\n        lessthan_2f5b0c.result -> and_5d7b8a.left\n        greaterthan_4f8d6a.result -> and_5d7b8a.right\n        and_5d7b8a.result -> if_7f9d2b.input\n        execute_2d7f3b -> if_7f9d2b.execute\n        if_7f9d2b.value -> result_6b8c1d\n        if_7f9d2b.then -> continue_1b9e3a\n        if_7f9d2b.else -> continue_1b9e3a\n    }\n\n    \n\n    instance(x: -172, y: -58) opposite_sign_5a7b6c root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -132, name: \"number\") property(Number) number_1a2b3c\n\n        out(x: 752, y: -130, name: \"result\") property(Bool) result_4d5e6f\n\n        instance(x: 320, y: -132) modulo_9b8c7d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 540, y: -132) equal_6e7f8a root.Std_k98ojb.Logic.Equal {}\n        number_1a2b3c -> modulo_9b8c7d.value\n        11 -> modulo_9b8c7d.divisor\n        modulo_9b8c7d.result -> equal_6e7f8a.left\n        0 -> equal_6e7f8a.right\n        equal_6e7f8a.result -> result_4d5e6f\n    }\n\n    \n\n    instance(x: -100, y: -50) is_divisible_by_11_7f8e9d root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_chars {\n        in(x: -208, y: -148, name: \"execute\") trigger() execute_1d23a4\n        in(x: -193, y: 40, name: \"input\") property(String) input_0c2b77\n        in(x: -197, y: 240, name: \"search\") property(String) search_2d3c88\n        in(x: -202, y: 440, name: \"replace\") property(String) replace_3e4d99\n\n        out(x: 680, y: 20, name: \"continue\") trigger() continue_b5e6cb\n        out(x: 680, y: 240, name: \"output\") property(String) output_4f7d11\n\n        instance(x: 300, y: 100) replace_8f9e0a root.Std_k98ojb.Strings.Replace {}\n        execute_1d23a4 -> replace_8f9e0a.execute\n        input_0c2b77 -> replace_8f9e0a.input\n        search_2d3c88 -> replace_8f9e0a.search\n        replace_3e4d99 -> replace_8f9e0a.replace\n        replace_8f9e0a.output -> output_4f7d11\n        replace_8f9e0a.continue -> continue_b5e6cb\n    }\n\n    \n\n    instance(x: -100, y: -50) replace_chars_7a8b9c root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"converts the given string to lower case.\") to_lower_case {\n        in(x: -123, y: -89, name: \"input\") property(String) input_7a1c2b\n\n        out(x: 445, y: -82, name: \"output\") property(String) output_9d1f3b\n\n        instance(x: 196, y: -85) tolower_4f8c9b root.Std_k98ojb.Strings.ToLower {}\n        input_7a1c2b -> tolower_4f8c9b.input\n        tolower_4f8c9b.output -> output_9d1f3b\n    }\n\n    \n\n    instance(x: -92, y: 45) to_lower_case_5f7d3a root.main.to_lower_case {}\n}"
            ],
            "16": [
                "```midio\n\n    import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique {\n        in(x: -250, y: -132, name: \"execute\") trigger() execute_9f8b2d\n        in(x: -236, y: 95, name: \"list\") property(List) list_9c7b0a\n\n        out(x: 1052, y: 112, name: \"product\") property(Number) product_29f3f5\n        out(x: 1070, y: -69, name: \"continue\") trigger() continue_6b8c1d\n\n        instance(x: 254, y: 82) unique_58b3f2 root.Std_k98ojb.List.Empty {}\n        instance(x: 499, y: 93) reduce_5a2f5b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 745, y: 91) mul_2d1c6a root.Std_k98ojb.Math.Mul {}\n        instance(x: 257, y: -113) filter_0b7c8e root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 499, y: -229) add_15f4b3 root.Std_k98ojb.List.Add {}\n        setter(x: 24, y: -81, name: \"setter_1a3c5d\") setter_1a3c5d = uniqueList\n        getter(x: 472, y: -370, name: \"getter_93b1d7\") getter_93b1d7 = uniqueList\n        getter(x: 250, y: -290, name: \"getter_6c4e3b\") getter_6c4e3b = uniqueList\n        instance(x: 499, y: -115) contains_2f1c4d root.Std_k98ojb.List.Contains {}\n        setter(x: 766, y: -180, name: \"setter_5c9d8f\") setter_5c9d8f = uniqueList\n        list_9c7b0a -> filter_0b7c8e.items\n        setter_1a3c5d.continue -> filter_0b7c8e.execute\n        filter_0b7c8e.output_list -> reduce_5a2f5b.items\n        1 -> reduce_5a2f5b.initial\n        func() {\n            in(x: -118, y: 18, name: \"acc\") property(Number) acc_6e2f8d\n            in(x: -117, y: 160, name: \"val\") property(Number) val_3c9b7a\n\n            out(x: 328, y: 83, name: \"result\") property(Number) result_7c1f4d\n\n            instance(x: 113, y: 93) mul_2d1c6a root.Std_k98ojb.Math.Mul {}\n            acc_6e2f8d -> mul_2d1c6a.first\n            val_3c9b7a -> mul_2d1c6a.second\n            mul_2d1c6a.result -> result_7c1f4d\n        } -> reduce_5a2f5b.reducer\n        reduce_5a2f5b.result -> product_29f3f5\n        getter_6c4e3b.value -> contains_2f1c4d.list\n        filter_0b7c8e.handler {\n            in(x: -66, y: 57, name: \"item\") property(Number) item_8e3b1d\n\n            out(x: 315, y: 60, name: \"result\") property(Bool) result_7c1f4d\n\n            instance(x: 117, y: 69) not_5b7c8e root.Std_k98ojb.Logic.Not {}\n            contains_2f1c4d.result -> not_5b7c8e.input\n            not_5b7c8e.output -> result_7c1f4d\n            item_8e3b1d -> contains_2f1c4d.item\n        }\n        getter_93b1d7.value -> add_15f4b3.list\n        filter_0b7c8e.output_list -> add_15f4b3.item\n        add_15f4b3.listWithItem -> setter_5c9d8f.new_value\n        setter_5c9d8f.continue -> continue_6b8c1d\n        execute_9f8b2d -> setter_1a3c5d.execute\n        unique"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -152, y: -99, name: \"list1\") property(List) list1_1c4d2b\n        in(x: -157, y: 97, name: \"list2\") property(List) list2_9f3d4b\n\n        out(x: 670, y: 15, name: \"result\") property(List) result_3f5c9d\n\n        instance(x: 156, y: -73) difference_4e5b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 164, y: 109) difference_1a6b9e root.Std_k98ojb.Sets.Difference {}\n        instance(x: 403, y: 11) concat_8b2f1e root.Std_k98ojb.List.Concat {}\n        list1_1c4d2b -> difference_4e5b3c.left\n        list2_9f3d4b -> difference_4e5b3c.right\n        list2_9f3d4b -> difference_1a6b9e.left\n        list1_1c4d2b -> difference_1a6b9e.right\n        difference_4e5b3c.difference -> concat_8b2f1e.left\n        difference_1a6b9e.difference -> concat_8b2f1e.right\n        concat_8b2f1e.result -> result_3f5c9d\n    }\n\n    \n\n    instance(x: -108, y: -63) dissimilar_elements_2f6c4a root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -210, y: -164, name: \"execute\") trigger() execute_2c15a7\n        in(x: -190, y: 105, name: \"list\") property(List) list_9d3a0f\n        in(x: -208, y: 314, name: \"n\") property(Number) n_3f5c9d\n\n        out(x: 1044, y: 112, name: \"rotated_list\") property(List) rotated_list_2b7f8d\n        out(x: 1032, y: -12, name: \"continue\") trigger() continue_2f4a3b\n\n        instance(x: 197, y: 50) length_8b2f34 root.Std_k98ojb.List.Length {}\n        instance(x: 475, y: 40) modulo_4f2d6c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 700, y: 150) slice_3a5f9d root.Std_k98ojb.List.Slice {}\n        instance(x: 702, y: -35) slice_2f8b9d root.Std_k98ojb.List.Slice {}\n        instance(x: 906, y: 72) concat_5d2f9d root.Std_k98ojb.List.Concat {}\n        instance(x: 472, y: -153) sub_8d2f6c root.Std_k98ojb.Math.Sub {}\n        instance(x: 232, y: -250) isEmpty_4f2d8c root.Std_k98ojb.List.IsEmpty {}\n        setter(x: -16, y: -56, name: \"setter_1f2d8a\") setter_1f2d8a = local_n\n        getter(x: 242, y: -48, name: \"getter_4f2d9c\") getter_4f2d9c = local_n\n        getter(x: 477, y: -51, name: \"getter_2f2d9b\") getter_2f2d9b = local_n\n        list_9d3a0f -> length_8b2f34.list\n        length_8b2f34.length -> modulo_4f2d6c.divisor\n        list_9d3a0f -> isEmpty_4f2d8c.list\n        execute_2c15a7 -> setter_1f2d8a.execute\n        n_3f5c9d -> setter_1f2d8a.new_value\n        setter_1f2d8a.continue -> isEmpty_4f2d8c.execute\n        isEmpty_4f2d8c.isEmpty -> continue_2f4a3b\n        getter_4f2d9c.value -> modulo_4f2d6c.value\n        modulo_4f2d6c.result -> sub_8d2f6c.second\n        length_8b2f34.length -> sub_8d2f6c.first\n        sub_8d2f6c.result -> slice_2f8b9d.start\n        list_9d3a0f -> slice_2f8b9d.list\n        slice_2f8b9d.slice -> concat_5d2f9d.left\n        sub_8d2f6c.result -> slice_3a5f9d.end\n        list_9d3a0f -> slice_3a5f9d.list\n        slice_3a5f9d.slice -> concat_5d2f9d.right\n        concat_5d2f9d.result -> rotated_list_2b7f8d\n        getter_2f2d9b.value -> slice_3a5f9d.start\n        isEmpty_4f2d8c.notEmpty -> sub_8d2f6c.execute\n    }\n\n    \n\n    instance(x: -112, y: -73) rotate_list_3f5a7c root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -132, y: -81, name: \"array\") property(List) array_63c248\n\n        out(x: 656, y: -68, name: \"sum\") property(Number) sum_cbb7bd\n\n        instance(x: 94, y: -105) reduce_f2330d root.Std_k98ojb.Iteration.Reduce {}\n        array_63c248 -> reduce_f2330d.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -121, y: -37, name: \"item\") property(Number) item_8ee839\n\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n\n            instance(x: 92, y: -22) add_584bfd root.Std_k98ojb.Math.Add {}\n            acc_8ee839 -> add_584bfd.first\n            item_8ee839 -> add_584bfd.second\n            add_584bfd.result -> result_7dd980\n        } -> reduce_f2330d.reducer\n        0 -> reduce_f2330d.initial\n        reduce_f2330d.result -> sum_cbb7bd\n    }\n\n    \n\n    instance(x: -92, y: 45) sum_array_b9ff6b root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"n\") property(Number) n_0c1a77\n\n        out(x: 838, y: 168, name: \"isPrime\") property(Bool) isPrime_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 554, y: -99) ifexpression_5c4634 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 562, y: -203) add_14921d root.Std_k98ojb.Math.Add {}\n        instance(x: 300, y: 168) filter_875ddb root.Std_k98ojb.Query.Filter {\n            where: \"it != 0\"\n        }\n        instance(x: 562, y: 0) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"n <= 1\"\n        }\n        instance(x: 562, y: 120) expression_c720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"i * i <= n\"\n        }\n        instance(x: 562, y: 240) expression_d720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"i + 1\"\n        }\n        expression_b720d7.result -> isPrime_0_0\n        execute_1ddb9f -> for_9ab286.reset\n        expression_b720d7.result -> for_9ab286.reset\n        expression_c720d7.result -> for_9ab286.items\n        for_9ab286.onItem -> ifexpression_5c4634.execute\n        for_9ab286.item -> ifexpression_5c4634.gen_0\n        ifexpression_5c4634.then -> isPrime_0_0\n        ifexpression_5c4634.else -> for_9ab286.next\n        ifexpression_5c4634.else -> continue_a7f942\n        for_9ab286.done -> continue_a7f942\n        n_0c1a77 -> expression_b720d7.gen_0\n        n_0c1a77 -> expression_c720d7.gen_0\n        n_0c1a77 -> expression_d720d7.gen_0\n    }\n\n    \n\n    instance(x: -242, y: -31) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 5927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_sign {\n        in(x: -205, y: -153, name: \"a\") property(Number) a_9e8b2d\n        in(x: -207, y: 95, name: \"b\") property(Number) b_b9c28e\n        in(x: -206, y: 351, name: \"execute\") trigger() execute_d2a2d7\n\n        out(x: 604, y: -35, name: \"continue\") trigger() continue_4bb5cb\n        out(x: 603, y: 175, name: \"result\") property(Bool) result_b3f2ab\n\n        instance(x: 101, y: 61) expression_2a49d1 root.Std_k98ojb.Math.Expression {\n            expression: \"a * b < 0\"\n        }\n        expression_2a49d1.result -> result_b3f2ab\n        execute_d2a2d7 -> continue_4bb5cb\n        a_9e8b2d -> expression_2a49d1.gen_0\n        b_b9c28e -> expression_2a49d1.gen_1\n    }\n\n    \n\n    instance(x: -189, y: -31) opposite_sign_4dbe98 root.main.opposite_sign {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_divisible_by_11 {\n        in(x: -250, y: -132, name: \"number\") property(Number) number_1c4e35\n\n        out(x: 656, y: -135, name: \"result\") property(Bool) result_2e9d3d\n\n        instance(x: 113, y: -112) modulo_3f8f56 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 382, y: -112) equal_3a4e18 root.Std_k98ojb.Logic.Equal {}\n        11 -> modulo_3f8f56.divisor\n        number_1c4e35 -> modulo_3f8f56.value\n        modulo_3f8f56.result -> equal_3a4e18.left\n        0 -> equal_3a4e18.right\n        equal_3a4e18.result -> result_2e9d3d\n    }\n\n    \n\n    instance(x: -108, y: 42) is_divisible_by_11_2e9d5f root.main.is_divisible_by_11 {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"replaces characters in a string.\") replace_chars {\n        in(x: -208, y: -148, name: \"execute\") trigger() execute_1d35a8\n        in(x: -193, y: 40, name: \"input_string\") property(String) input_string_ef1234\n        in(x: -197, y: 240, name: \"search\") property(String) search_bf2345\n        in(x: -195, y: 450, name: \"replace\") property(String) replace_cd3456\n\n        out(x: 934, y: 45, name: \"result\") property(String) result_abc789\n        out(x: 950, y: 230, name: \"continue\") trigger() continue_def567\n\n        instance(x: 450, y: 50) replace_a1b2c3 root.Std_k98ojb.Strings.Replace {}\n        execute_1d35a8 -> replace_a1b2c3.execute\n        input_string_ef1234 -> replace_a1b2c3.input\n        search_bf2345 -> replace_a1b2c3.search\n        replace_cd3456 -> replace_a1b2c3.replace\n        replace_a1b2c3.output -> result_abc789\n        replace_a1b2c3.continue -> continue_def567\n    }\n\n    \n\n    instance(x: -102, y: -70) replace_chars_4f5g6h root.main.replace_chars {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"convert the given string to lower case.\") to_lower_case {\n        in(x: -54, y: -37, name: \"input\") property(String) input_7a0f1b\n\n        out(x: 724, y: -27, name: \"output\") property(String) output_9e06cf\n\n        instance(x: 353, y: -25) tolower_2b7d8e root.Std_k98ojb.Strings.ToLower {}\n        input_7a0f1b -> tolower_2b7d8e.input\n        tolower_2b7d8e.output -> output_9e06cf\n    }\n\n    \n\n    instance(x: -91, y: 50) to_lower_case_ae3f9e root.main.to_lower_case {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"calculates the product of the unique numbers in a given list.\") product_unique_numbers {\n        in(x: -179, y: -94, name: \"execute\") trigger() execute_1c4e35\n        in(x: -166, y: 135, name: \"list\") property(List) list_b9c28e\n\n        out(x: 1024, y: -88, name: \"continue\") trigger() continue_49fba7\n        out(x: 1042, y: 187, name: \"product\") property(Number) product_5cb3b4\n\n        instance(x: 271, y: -18) filter_3a9adf root.Std_k98ojb.Query.Filter {\n            where: \"!seen.contains(it) && seen.add(it)\"\n        }\n        instance(x: 737, y: 26) reduce_48b7fe root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 555, y: 35) mul_6c34b1 root.Std_k98ojb.Math.Mul {}\n        setter(x: -380, y: -52, name: \"setter_49fdbd\") setter_49fdbd = seen\n        getter(x: 73, y: -38, name: \"getter_1cf43d\") getter_1cf43d = seen\n        instance(x: -143, y: -126) empty_123f8a root.Std_k98ojb.List.Empty {}\n        list_b9c28e -> filter_3a9adf.list\n        filter_3a9adf.result -> reduce_48b7fe.items\n        execute_1c4e35 -> setter_49fdbd.execute\n        empty_123f8a.list -> setter_49fdbd.new_value\n        1 -> reduce_48b7fe.initialValue\n        reduce_48b7fe.result -> product_5cb3b4\n        reduce_48b7fe.done -> continue_49fba7\n        reduce_48b7fe.context -> getter_1cf43d.value\n        func() {\n            in(x: -106, y: -54, name: \"acc\") property(Number) acc_2d4b0b\n            in(x: -103, y: 91, name: \"num\") property(Number) num_9f1a9b\n\n            out(x: 354, y: 7, name: \"result\") property(Number) result_17b87f\n\n            instance(x: 144, y: 31) mul_6c34b1 root.Std_k98ojb.Math.Mul {}\n            acc_2d4b0b -> mul_6c34b1.first\n            num_9f1a9b -> mul_6c34b1.second\n            mul_6c34b1.result -> result_17b87f\n        } -> reduce_48b7fe.reducer\n    }\n\n    \n\n    instance(x: -75, y: -100) product_unique_numbers_b7db53 root.main.product_unique_numbers {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"find the dissimilar elements in the given two lists.\") dissimilar_elements {\n        in(x: -292, y: -98, name: \"list1\") property(List) list1_9e8b2d\n        in(x: -286, y: 135, name: \"list2\") property(List) list2_a7c0b1\n\n        out(x: 1130, y: 31, name: \"result\") property(List) result_8b1c0a\n\n        instance(x: 187, y: 23) difference_2d7b9f root.Std_k98ojb.Sets.Difference {}\n        instance(x: 637, y: 43) concat_2b3d7f root.Std_k98ojb.List.Concat {}\n        instance(x: 395, y: 205) difference_13b9a3 root.Std_k98ojb.Sets.Difference {}\n        list1_9e8b2d -> difference_2d7b9f.left\n        list2_a7c0b1 -> difference_2d7b9f.right\n        difference_2d7b9f.difference -> concat_2b3d7f.left\n        list2_a7c0b1 -> difference_13b9a3.left\n        list1_9e8b2d -> difference_13b9a3.right\n        difference_13b9a3.difference -> concat_2b3d7f.right\n        concat_2b3d7f.result -> result_8b1c0a\n    }\n\n    \n\n    instance(x: -187, y: 55) dissimilar_elements_e1a6b5 root.main.dissimilar_elements {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"rotates a given list by specified number of items to the right direction.\") rotate_list {\n        in(x: -375, y: -164, name: \"execute\") trigger() execute_e40c2a\n        in(x: -350, y: 123, name: \"list\") property(List) list_a6c448\n        in(x: -345, y: -18, name: \"n\") property(Number) n_2d29e3\n\n        out(x: 1412, y: -70, name: \"result\") property(List) result_d5b4e8\n        out(x: 1415, y: 141, name: \"continue\") trigger() continue_353d7f\n\n        instance(x: 80, y: 25) length_d1d70d root.Std_k98ojb.List.Length {}\n        instance(x: 331, y: -165) modulo_d4d20e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 598, y: -227) slice_f41e98 root.Std_k98ojb.List.Slice {}\n        instance(x: 905, y: -65) concat_7066a9 root.Std_k98ojb.List.Concat {}\n        instance(x: 596, y: -3) slice_9649b7 root.Std_k98ojb.List.Slice {}\n        list_a6c448 -> length_d1d70d.list\n        length_d1d70d.length -> modulo_d4d20e.value\n        n_2d29e3 -> modulo_d4d20e.divisor\n        modulo_d4d20e.result -> slice_f41e98.start\n        list_a6c448 -> slice_f41e98.list\n        slice_f41e98.slice -> concat_7066a9.right\n        0 -> slice_9649b7.start\n        modulo_d4d20e.result -> slice_9649b7.end\n        list_a6c448 -> slice_9649b7.list\n        slice_9649b7.slice -> concat_7066a9.left\n        concat_7066a9.result -> result_d5b4e8\n        execute_e40c2a -> continue_353d7f\n    }\n\n    \n\n    instance(x: -303, y: -85) rotate_list_f5f4aa root.main.rotate_list {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds the sum of an array.\") sum_array {\n        in(x: -132, y: -129, name: \"array\") property(List) array_23a8b1\n\n        out(x: 706, y: -104, name: \"sum\") property(Number) sum_ef1234\n\n        instance(x: 154, y: -99) reduce_4f89a0 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4f89a0.initialValue\n        array_23a8b1 -> reduce_4f89a0.items\n        func() {\n            in(x: -215, y: 50, name: \"acc\") property(Number) acc_b3f2d3\n            in(x: -215, y: 148, name: \"item\") property(Number) item_d2f50b\n\n            out(x: 147, y: 89, name: \"result\") property(Number) result_4e2e1c\n\n            instance(x: 33, y: 80) add_1a9e98 root.Std_k98ojb.Math.Add {}\n            acc_b3f2d3 -> add_1a9e98.first\n            item_d2f50b -> add_1a9e98.second\n            add_1a9e98.result -> result_4e2e1c\n        } -> reduce_4f89a0.reducer\n        reduce_4f89a0.result -> sum_ef1234\n    }\n\n    \n\n    instance(x: -146, y: 48) sum_array_907cb1 root.main.sum_array {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks if the given integer is a prime number.\") is_prime {\n        in(x: -199, y: -152, name: \"execute\") trigger() execute_1ddb9f\n        in(x: -174, y: 160, name: \"n\") property(Number) n_0c1a77\n\n        out(x: 838, y: 168, name: \"isPrime\") property(Bool) isPrime_0_0\n        out(x: 817, y: 39, name: \"continue\") trigger() continue_a7f942\n\n        instance(x: 294, y: -19) for_9ab286 root.Std_k98ojb.Std.For {}\n        instance(x: 554, y: -99) if_5c4634 root.Std_k98ojb.Std.If {}\n        instance(x: 562, y: -203) modulo_14921d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 300, y: 168) generaterange_875ddb root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 557, y: 167) not_equal_9b38cc root.Std_k98ojb.Logic.NotEqual {}\n        instance(x: 715, y: 6) not_8ab286 root.Std_k98ojb.Logic.Not {}\n        instance(x: 99, y: -249) div_547f34 root.Std_k98ojb.Math.Div {}\n        setter(x: 6, y: -64, name: \"setter_8c6eda\") setter_8c6eda = isPrime\n        setter(x: 825, y: -223, name: \"setter_95dd4c\") setter_95dd4c = isPrime\n        getter(x: 252, y: -246, name: \"getter_e808a2\") getter_e808a2 = isPrime\n        instance(x: -200, y: 39) empty_ea3a3a root.Std_k98ojb.List.Empty {}\n        setter_8c6eda.continue -> if_5c4634.execute\n        execute_1ddb9f -> setter_8c6eda.execute\n        2 -> generaterange_875ddb.from\n        div_547f34.result -> generaterange_875ddb.to\n        generaterange_875ddb.list -> for_9ab286.items\n        for_9ab286.onItem -> modulo_14921d.value\n        n_0c1a77 -> div_547f34.first\n        for_9ab286.onItem -> modulo_14921d.divisor\n        modulo_14921d.result -> not_equal_9b38cc.left\n        0 -> not_equal_9b38cc.right\n        not_equal_9b38cc.result -> not_8ab286.input\n        if_5c4634.value -> isPrime_0_0\n        if_5c4634.else -> for_9ab286.reset\n        for_9ab286.done -> continue_a7f942\n        for_9ab286.onItem -> for_9ab286.next\n        if_5c4634.then -> setter_95dd4c.execute\n        setter_95dd4c.continue -> continue_a7f942\n        getter_e808a2.value -> isPrime_0_0\n        2 -> setter_8c6eda.new_value\n        n_0c1a77 -> if_5c4634.value\n    }\n\n    \n\n    instance(x: -242, y: -31) is_prime_def9ac root.main.is_prime {}\n}"
            ]
        }
    }
]