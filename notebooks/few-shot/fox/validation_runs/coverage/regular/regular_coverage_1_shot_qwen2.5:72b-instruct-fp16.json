[
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d7e\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9f\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b9a3d\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6e8c4b\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1f5b9a\n\n        instance(x: 10, y: -140) expression_3d5b9f root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3f5d7e -> expression_3d5b9f.gen_0\n        b_8c4a9f -> expression_3d5b9f.gen_1\n        execute_2b9a3d -> expression_3d5b9f.execute\n        expression_3d5b9f.result -> out_6e8c4b\n        continue_1f5b9a -> expression_3d5b9f.continue\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d6c\n        in(x: 10, y: -40, name: \"b\") property(Number) b_7e9a8b\n        in(x: 10, y: -60, name: \"execute\") trigger() execute_2c4a3f\n\n        out(x: 510, y: -10, name: \"out\") property(Bool) out_3d7e9f\n        out(x: 510, y: 20, name: \"continue\") trigger() continue_8b6c4a\n\n        instance(x: 10, y: -100) mul_3f5d6c root.Std_k98ojb.Math.Mul {}\n        a_3f5d6c -> mul_3f5d6c.first\n        b_7e9a8b -> mul_3f5d6c.second\n\n        instance(x: 10, y: -140) less_than_2c4a3f root.Std_k98ojb.Math.LessThan {}\n        mul_3f5d6c.result -> less_than_2c4a3f.left\n        0 -> less_than_2c4a3f.right\n\n        instance(x: 10, y: -180) not_7e9a8b root.Std_k98ojb.Logic.Not {}\n        less_than_2c4a3f.result -> not_7e9a8b.input\n\n        execute_2c4a3f -> mul_3f5d6c.execute\n        mul_3f5d6c.execute -> less_than_2c4a3f.execute\n        less_than_2c4a3f.execute -> not_7e9a8b.execute\n\n        not_7e9a8b.result -> out_3d7e9f\n        execute_2c4a3f -> continue_8b6c4a\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_5f6d4c\n        in(x: 10, y: -80, name: \"b\") property(Number) b_9e7b3a\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_2a8b5f\n\n        out(x: 10, y: 160, name: \"out\") property(Bool) out_4c9d7e\n        out(x: 10, y: 220, name: \"continue\") trigger() continue_3b9a8d\n\n        instance(x: 10, y: -40) mul_6f5b4a root.Std_k98ojb.Math.Mul {}\n        a_5f6d4c -> mul_6f5b4a.first\n        b_9e7b3a -> mul_6f5b4a.second\n\n        instance(x: 10, y: 20) less_than_2b8f3c root.Std_k98ojb.Math.LessThanOrEqual {}\n        0 -> less_than_2b8f3c.left\n        mul_6f5b4a.result -> less_than_2b8f3c.right\n\n        instance(x: 10, y: 100) not_7d9e4b root.Std_k98ojb.Logic.Not {}\n        less_than_2b8f3c.result -> not_7d9e4b.input\n        not_7d9e4b.output -> out_4c9d7e\n\n        execute_2a8b5f -> continue_3b9a8d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d7e\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9d\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b9a3f\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6e8c4f\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1d9b4a\n\n        instance(x: 10, y: -140) expression_3f5d7e root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3f5d7e -> expression_3f5d7e.gen_0\n        b_8c4a9d -> expression_3f5d7e.gen_1\n        execute_2b9a3f -> expression_3f5d7e.execute\n        expression_3f5d7e.result -> out_6e8c4f\n        continue_1d9b4a -> expression_3f5d7e.continue\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d6c\n        in(x: 10, y: -40, name: \"b\") property(Number) b_7e9a8b\n        in(x: 10, y: -60, name: \"execute\") trigger() execute_2c4a3f\n\n        out(x: 510, y: -10, name: \"out\") property(Bool) out_3d7e9f\n        out(x: 510, y: 20, name: \"continue\") trigger() continue_8b6c4a\n\n        instance(x: 10, y: -100) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        a_3f5d6c -> mul_2f9d09.first\n        b_7e9a8b -> mul_2f9d09.second\n\n        instance(x: 10, y: -140) less_than_0 root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        mul_2f9d09.result -> less_than_0.left\n\n        less_than_0.result -> out_3d7e9f\n        execute_2c4a3f -> continue_8b6c4a\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_5f6d4c\n        in(x: 10, y: -80, name: \"b\") property(Number) b_9e7b3a\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_2d6f5b\n\n        out(x: 10, y: 100, name: \"out\") property(Bool) out_8c9e73\n        out(x: 10, y: 180, name: \"continue\") trigger() continue_4a2d6f\n\n        instance(x: 10, y: -20) expression_5b9e8a root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_5f6d4c -> expression_5b9e8a.gen_0\n        b_9e7b3a -> expression_5b9e8a.gen_1\n        execute_2d6f5b -> expression_5b9e8a.execute\n        expression_5b9e8a.result -> out_8c9e73\n        continue_4a2d6f -> continue_4a2d6f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d7e\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9d\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b9a3f\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6e8c4f\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1d9b4a\n\n        instance(x: 10, y: -140) expression_3f5d7e root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3f5d7e -> expression_3f5d7e.gen_0\n        b_8c4a9d -> expression_3f5d7e.gen_1\n        execute_2b9a3f -> expression_3f5d7e.execute\n        expression_3f5d7e.result -> out_6e8c4f\n        continue_1d9b4a -> expression_3f5d7e.continue\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3f5d6c\n        in(x: 10, y: -40, name: \"b\") property(Number) b_7e9a8b\n        in(x: 10, y: -60, name: \"execute\") trigger() execute_2c4a3f\n\n        out(x: 510, y: -10, name: \"out\") property(Bool) out_3d7e9f\n        out(x: 510, y: 20, name: \"continue\") trigger() continue_8b6c4a\n\n        instance(x: 10, y: -100) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        a_3f5d6c -> mul_2f9d09.first\n        b_7e9a8b -> mul_2f9d09.second\n\n        instance(x: 10, y: -140) less_than_0 root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        mul_2f9d09.result -> less_than_0.left\n\n        less_than_0.result -> out_3d7e9f\n        execute_2c4a3f -> continue_8b6c4a\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_5f6d4c\n        in(x: 10, y: -80, name: \"b\") property(Number) b_9e7b3a\n        in(x: 10, y: -140, name: \"execute\") trigger() execute_2d6f5b\n\n        out(x: 10, y: 100, name: \"out\") property(Bool) out_8c9e73\n        out(x: 10, y: 180, name: \"continue\") trigger() continue_4a2d6f\n\n        instance(x: 10, y: -20) expression_5b9e8a root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_5f6d4c -> expression_5b9e8a.gen_0\n        b_9e7b3a -> expression_5b9e8a.gen_1\n        execute_2d6f5b -> expression_5b9e8a.execute\n        expression_5b9e8a.result -> out_8c9e73\n        continue_4a2d6f -> continue_4a2d6f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5f7d\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b4f3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6d8c1a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_9f3b4d\n\n        instance(x: 10, y: -140) expression_4e2b1c root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3e5f7d -> expression_4e2b1c.gen_0\n        b_8c4a9b -> expression_4e2b1c.gen_1\n        execute_2b4f3e -> expression_4e2b1c.execute\n        expression_4e2b1c.result -> out_6d8c1a\n        continue_9f3b4d -> expression_4e2b1c.continue\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 354, y: -53, name: \"a\") property(Number) a_27c03d\n        in(x: 161, y: -211, name: \"b\") property(Number) b_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) mul_038fce root.Std_k98ojb.Math.Mul {}\n        instance(x: 933, y: 25) less_than_zero_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_27c03d -> mul_038fce.first\n        b_27b8c3 -> mul_038fce.second\n        mul_038fce.result -> less_than_zero_f11fda.left\n        0 -> less_than_zero_f11fda.right\n\n        less_than_zero_f11fda.result -> out_f3db9f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") has_opposite_signs {\n        in(x: 10, y: -5, name: \"a\") property(Number) a_4e7d6c\n        in(x: 20, y: -5, name: \"b\") property(Number) b_3f8a9d\n        in(x: 30, y: -5, name: \"execute\") trigger() execute_123abc\n\n        out(x: 60, y: 20, name: \"result\") property(Bool) result_f4b7c2\n        out(x: 80, y: 40, name: \"continue\") trigger() continue_456def\n\n        instance(x: 100, y: -10) mul_c3d9ef Std_k98ojb.Math.Mul {}\n        instance(x: 200, y: 10) lessThanZero_7a1bdc Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_4e7d6c -> mul_c3d9ef.first\n        b_3f8a9d -> mul_c3d9ef.second\n\n        mul_c3d9ef.result -> lessThanZero_7a1bdc.left\n        0 -> lessThanZero_7a1bdc.right\n\n        execute_123abc -> mul_c3d9ef.execute\n        execute_123abc -> lessThanZero_7a1bdc.execute\n\n        lessThanZero_7a1bdc.result -> result_f4b7c2\n        execute_123abc -> continue_456def\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5d7f\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2c4b3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6f8d9a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1c4b3e\n\n        instance(x: 10, y: -140) expression_1c4b3e root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3e5d7f -> expression_1c4b3e.gen_0\n        b_8c4a9b -> expression_1c4b3e.gen_1\n        execute_2c4b3e -> expression_1c4b3e.execute\n        expression_1c4b3e.result -> out_6f8d9a\n        expression_1c4b3e.done -> continue_1c4b3e\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 354, y: -53, name: \"a\") property(Number) a_27c03d\n        in(x: 161, y: -211, name: \"b\") property(Number) b_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) mul_038fce root.Std_k98ojb.Math.Mul {}\n        instance(x: 933, y: 25) less_than_zero_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_27c03d -> mul_038fce.first\n        b_27b8c3 -> mul_038fce.second\n        mul_038fce.result -> less_than_zero_f11fda.left\n        0 -> less_than_zero_f11fda.right\n\n        less_than_zero_f11fda.result -> out_f3db9f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") has_opposite_signs {\n        in(x: 10, y: -5, name: \"a\") property(Number) a_4e7d6c\n        in(x: 20, y: -5, name: \"b\") property(Number) b_e9831a\n        in(x: 15, y: -15, name: \"execute\") trigger() execute_7f7c53\n\n        out(x: 445, y: -5, name: \"result\") property(Bool) result_f2b6ca\n\n        instance(x: 150, y: -50) mul_8e9cda root.Std_k98ojb.Math.Mul {}\n        a_4e7d6c -> mul_8e9cda.first\n        b_e9831a -> mul_8e9cda.second\n\n        instance(x: 290, y: -50) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_8e9cda.result -> lessthanorequal_f11fda.left\n        0 -> lessthanorequal_f11fda.right\n\n        instance(x: 425, y: -50) not_d3a6b4 root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_f11fda.result -> not_d3a6b4.input\n        not_d3a6b4.output -> result_f2b6ca\n\n        execute_7f7c53 -> mul_8e9cda.execute\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5d7f\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2c4b3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6f8d9a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_1c4b3e\n\n        instance(x: 10, y: -140) expression_1c4b3e root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3e5d7f -> expression_1c4b3e.gen_0\n        b_8c4a9b -> expression_1c4b3e.gen_1\n        execute_2c4b3e -> expression_1c4b3e.execute\n        expression_1c4b3e.result -> out_6f8d9a\n        expression_1c4b3e.done -> continue_1c4b3e\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 354, y: -53, name: \"a\") property(Number) a_27c03d\n        in(x: 161, y: -211, name: \"b\") property(Number) b_27b8c3\n\n        out(x: 1748, y: -10, name: \"out\") property(Bool) out_f3db9f\n        out(x: 1894, y: 120, name: \"continue\") trigger() continue_8ba06b\n\n        instance(x: 591, y: 74) mul_038fce root.Std_k98ojb.Math.Mul {}\n        instance(x: 933, y: 25) less_than_zero_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n\n        a_27c03d -> mul_038fce.first\n        b_27b8c3 -> mul_038fce.second\n        mul_038fce.result -> less_than_zero_f11fda.left\n        0 -> less_than_zero_f11fda.right\n\n        less_than_zero_f11fda.result -> out_f3db9f\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") has_opposite_signs {\n        in(x: 10, y: -5, name: \"a\") property(Number) a_4e7d6c\n        in(x: 20, y: -5, name: \"b\") property(Number) b_e9831a\n        in(x: 15, y: -15, name: \"execute\") trigger() execute_7f7c53\n\n        out(x: 445, y: -5, name: \"result\") property(Bool) result_f2b6ef\n        out(x: 470, y: -90, name: \"continue\") trigger() continue_e1e1a8\n\n        instance(x: 100, y: -70) mul_3d3f5c root.Std_k98ojb.Math.Mul {}\n        a_4e7d6c -> mul_3d3f5c.first\n        b_e9831a -> mul_3d3f5c.second\n\n        instance(x: 200, y: -70) lessthanorequal_bdbb4a root.Std_k98ojb.Math.LessThanOrEqual {}\n        0 -> lessthanorequal_bdbb4a.left\n        mul_3d3f5c.result -> lessthanorequal_bdbb4a.right\n\n        instance(x: 300, y: -70) not_81e26d root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_bdbb4a.result -> not_81e26d.input\n\n        not_81e26d.output -> result_f2b6ef\n        execute_7f7c53 -> continue_e1e1a8\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5f7d\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2b4f3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6d8c1a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_9f3b4d\n\n        instance(x: 10, y: -140) expression_4e2b1c root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_3e5f7d -> expression_4e2b1c.gen_0\n        b_8c4a9b -> expression_4e2b1c.gen_1\n        execute_2b4f3e -> expression_4e2b1c.execute\n        expression_4e2b1c.result -> out_6d8c1a\n        continue_9f3b4d -> expression_4e2b1c.continue\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 345, y: -210, name: \"a\") property(Number) a_7d6e2f\n        in(x: 589, y: -210, name: \"b\") property(Number) b_b5c7d7\n        in(x: 734, y: -210, name: \"execute\") trigger() execute_ea7b6e\n\n        out(x: 1028, y: -210, name: \"out\") property(Bool) out_5f9c1a\n        out(x: 1234, y: -210, name: \"continue\") trigger() continue_7d6e2f\n\n        instance(x: 862, y: -35, name: \"expression\") expression_eb7f6a root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n\n        a_7d6e2f -> expression_eb7f6a.gen_0\n        b_b5c7d7 -> expression_eb7f6a.gen_1\n\n        execute_ea7b6e -> expression_eb7f6a.execute\n        expression_eb7f6a.result -> out_5f9c1a\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") opposite_signs {\n        in(x: 10, y: -54, name: \"a\") property(Number) a_3c2a76\n        in(x: 120, y: -84, name: \"b\") property(Number) b_c2f9e8\n        in(x: 120, y: -126, name: \"execute\") trigger() execute_e2f325\n\n        out(x: 702, y: -6, name: \"out\") property(Bool) out_b543c4\n        out(x: 844, y: 134, name: \"continue\") trigger() continue_9a6f4b\n\n        instance(x: 357, y: 20) multiply_eb94e0 root.Std_k98ojb.Math.Mul {}\n        instance(x: 509, y: -15) less_than_zero_b2d4c6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        a_3c2a76 -> multiply_eb94e0.first\n        b_c2f9e8 -> multiply_eb94e0.second\n        0 -> less_than_zero_b2d4c6.right\n        execute_e2f325 -> multiply_eb94e0.execute\n        multiply_eb94e0.result -> less_than_zero_b2d4c6.left\n        less_than_zero_b2d4c6.result -> out_b543c4\n        execute_e2f325 -> continue_9a6f4b\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5d7f\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2c4b3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6f8d7a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_9f1c4b\n\n        instance(x: 130, y: -20, name: \"mul_ab\") Math.Mul {}\n        a_3e5d7f -> mul_ab.first\n        b_8c4a9b -> mul_ab.second\n\n        instance(x: 260, y: -20, name: \"less_than_zero\") Math.LessThanOrEqual {}\n        mul_ab.result -> less_than_zero.left\n        0 -> less_than_zero.right\n\n        less_than_zero.result -> out_6f8d7a\n        execute_2c4b3e -> continue_9f1c4b\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 345, y: -210, name: \"a\") property(Number) a_7d6e2f\n        in(x: 589, y: -210, name: \"b\") property(Number) b_b2f53c\n        in(x: 740, y: -300, name: \"execute\") trigger() execute_1a4d6e\n\n        out(x: 1189, y: -220, name: \"out\") property(Bool) out_f9b05c\n        out(x: 1200, y: -370, name: \"continue\") trigger() continue_4f6e9d\n\n        instance(x: 840, y: -220) mul_4b6a1a root.Std_k98ojb.Math.Mul {}\n        a_7d6e2f -> mul_4b6a1a.first\n        b_b2f53c -> mul_4b6a1a.second\n\n        instance(x: 1050, y: -220) less_than_zero_8a9b4b root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_4b6a1a.result -> less_than_zero_8a9b4b.left\n        0 -> less_than_zero_8a9b4b.right\n\n        instance(x: 1250, y: -220) not_equal_c3d7e8 root.Std_k98ojb.Logic.NotEqual {}\n        a_7d6e2f -> not_equal_c3d7e8.left\n        b_b2f53c -> not_equal_c3d7e8.right\n\n        instance(x: 1400, y: -220) and_7b9a4d root.Std_k98ojb.Logic.And {}\n        less_than_zero_8a9b4b.result -> and_7b9a4d.left\n        not_equal_c3d7e8.result -> and_7b9a4d.right\n\n        and_7b9a4d.result -> out_f9b05c\n        execute_1a4d6e -> continue_4f6e9d\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") opposite_signs {\n        in(x: 10, y: -54, name: \"a\") property(Number) a_32c9d4\n        in(x: 176, y: -83, name: \"b\") property(Number) b_f96f9e\n        in(x: 101, y: -173, name: \"execute\") trigger() execute_ea65ce\n\n        out(x: 248, y: -109, name: \"result\") property(Bool) result_6ed9d4\n        out(x: 342, y: 4, name: \"continue\") trigger() continue_fba3e7\n\n        instance(x: 154, y: 18) mathexpression_0e6eb3 root.Std_k98ojb.Math.Expression {\n            expression: \"(a * b < 0)\"\n        }\n        a_32c9d4 -> mathexpression_0e6eb3.gen_0\n        b_f96f9e -> mathexpression_0e6eb3.gen_1\n        execute_ea65ce -> mathexpression_0e6eb3.execute\n        mathexpression_0e6eb3.result -> result_6ed9d4\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") check_opposite_signs {\n        in(x: 10, y: -20, name: \"a\") property(Number) a_3e5d7f\n        in(x: 10, y: -60, name: \"b\") property(Number) b_8c4a9b\n        in(x: 10, y: -100, name: \"execute\") trigger() execute_2c4b3e\n\n        out(x: 570, y: -20, name: \"out\") property(Bool) out_6f8d7a\n        out(x: 570, y: 20, name: \"continue\") trigger() continue_9f1c4b\n\n        instance(x: 130, y: -20, name: \"mul_ab\") Math.Mul {}\n        a_3e5d7f -> mul_ab.first\n        b_8c4a9b -> mul_ab.second\n\n        instance(x: 260, y: -20, name: \"less_than_zero\") Math.LessThanOrEqual {}\n        mul_ab.result -> less_than_zero.left\n        0 -> less_than_zero.right\n\n        less_than_zero.result -> out_6f8d7a\n        execute_2c4b3e -> continue_9f1c4b\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") has_opposite_signs {\n        in(x: 345, y: -210, name: \"a\") property(Number) a_7d6e2f\n        in(x: 589, y: -210, name: \"b\") property(Number) b_b2f56c\n        in(x: 734, y: -210, name: \"execute\") trigger() execute_ea7d6e\n\n        out(x: 1078, y: -210, name: \"out\") property(Bool) out_9b5e6c\n        out(x: 1324, y: -210, name: \"continue\") trigger() continue_6f9d7a\n\n        instance(x: 854, y: -120) mul_8a6f57 root.Std_k98ojb.Math.Mul {}\n        a_7d6e2f -> mul_8a6f57.first\n        b_b2f56c -> mul_8a6f57.second\n\n        instance(x: 1043, y: -85) lessthan_f3b96a root.Std_k98ojb.Math.LessThan {\n            left: 0\n            right: mul_8a6f57.result\n        }\n\n        instance(x: 1216, y: -146) not_b5e9d3 root.Std_k98ojb.Logic.Not {}\n        lessthan_f3b96a.result -> not_b5e9d3.input\n\n        not_b5e9d3.output -> out_9b5e6c\n        execute_ea7d6e -> continue_6f9d7a\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "regular_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 3927,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite signs.\") opposite_signs {\n        in(x: 10, y: -54, name: \"a\") property(Number) a_32c9d4\n        in(x: 176, y: -83, name: \"b\") property(Number) b_f90e1f\n        in(x: 106, y: -172, name: \"execute\") trigger() execute_ea65bf\n\n        out(x: 1465, y: -104, name: \"result\") property(Bool) result_8ae3c5\n        out(x: 1609, y: -4, name: \"continue\") trigger() continue_74afdd\n\n        instance(x: 295, y: -169) mul_febbaa root.Std_k98ojb.Math.Mul {}\n        a_32c9d4 -> mul_febbaa.first\n        b_f90e1f -> mul_febbaa.second\n        instance(x: 496, y: -175) lessthan_bdbd77 root.Std_k98ojb.Math.LessThan {\n            left: 0\n        }\n        mul_febbaa.result -> lessthan_bdbd77.right\n        instance(x: 1253, y: -406) not_6b0f48 root.Std_k98ojb.Logic.Not {}\n        lessthan_bdbd77.result -> not_6b0f48.input\n        not_6b0f48.output -> result_8ae3c5\n        execute_ea65bf -> continue_74afdd\n    }\n}"
            ]
        }
    }
]