[
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -107) mul_0b3d8c root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_0b3d8c.first\n\ty_5390f5 -> mul_0b3d8c.second\n\tinstance(x: -147, y: 11) less_than_zero_3a2e1f root.Std_k98ojb.Math.LessThan {}\n\tmul_0b3d8c.result -> less_than_zero_3a2e1f.left\n\t0 -> less_than_zero_3a2e1f.right\n\tless_than_zero_3a2e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 145, y: -12) modulo_1a8b2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_1a8b2d.value\n\t11 -> modulo_1a8b2d.divisor\n\tmodulo_1a8b2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9b7f8a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9b7f8a.input\n        search_ai -> replace_9b7f8a.search\n        replace_ai -> replace_9b7f8a.replace\n        replace_9b7f8a.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 174, y: 199) tolower_5f3b0a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 464, y: 199) isequal_2d8c7e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_5f3b0a.input\n        tolower_5f3b0a.value -> isequal_2d8c7e.left\n        input_ai -> isequal_2d8c7e.right\n        isequal_2d8c7e.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0a5b3c root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0a5b3c.left\n\tlist2_ai -> difference_0a5b3c.right\n\tdifference_0a5b3c.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -150) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 160, y: -150) modulo_2d3e4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 280, y: -150) slice_3g4h5i root.Std_k98ojb.List.Slice {}\n        instance(x: 280, y: -250) slice_4j5k6l root.Std_k98ojb.List.Slice {}\n        instance(x: 400, y: -150) concat_5m6n7o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_2d3e4f.value\n        n_68068c -> modulo_2d3e4f.divisor\n        modulo_2d3e4f.result -> slice_3g4h5i.start\n        list_48148f -> slice_3g4h5i.list\n        -1 -> slice_3g4h5i.end\n        modulo_2d3e4f.result -> slice_4j5k6l.end\n        0 -> slice_4j5k6l.start\n        list_48148f -> slice_4j5k6l.list\n        slice_3g4h5i.slice -> concat_5m6n7o.left\n        slice_4j5k6l.slice -> concat_5m6n7o.right\n        concat_5m6n7o.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -104) reduce_3d8b9a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b9a.items\n\t0 -> reduce_3d8b9a.initialValue\n\tfunc() {\n\t    in(x: 5, y: -14, name: \"accumulator\") property(Number) accumulator_7f8e1a\n\t    in(x: 26, y: 10, name: \"item\") property(Number) item_3d8b9a\n\n\t    out(x: 55, y: 30, name: \"out\") property(Number) out_4c8b9a\n\n\t    instance(x: 27, y: -6) add_1f8e1a root.Std_k98ojb.Math.Add {}\n\t    accumulator_7f8e1a -> add_1f8e1a.first\n\t    item_3d8b9a -> add_1f8e1a.second\n\t    add_1f8e1a.result -> out_4c8b9a\n\t} -> reduce_3d8b9a.reducer\n\treduce_3d8b9a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e1b1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_8d2c0f root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_1a2e1b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) for_4d2c0f root.Std_k98ojb.Std.For {}\n        instance(x: 1278, y: -365) expression_1a2e1b root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1554, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_2e1b1a.left\n        1 -> lessthanorequal_2e1b1a.right\n        lessthanorequal_2e1b1a.result -> if_0f8d2c.predicate\n        if_0f8d2c.then -> continue_9a54bb\n        if_0f8d2c.else -> lessthanorequal_1a2e1b.left\n\n        num_5c0677 -> lessthanorequal_1a2e1b.right\n        3 -> lessthanorequal_1a2e1b.left\n        lessthanorequal_1a2e1b.result -> if_8d2c0f.predicate\n        if_8d2c0f.then -> continue_9a54bb\n        if_8d2c0f.else -> for_4d2c0f.reset\n\n        2 -> for_4d2c0f.start\n        num_5c0677 -> expression_1a2e1b.gen_0\n        for_4d2c0f.item -> expression_1a2e1b.gen_1\n        expression_1a2e1b.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_4d2c0f.next\n\n        for_4d2c0f.done -> output_c457b3\n        true -> output_c457b3\n        execute_b7b391 -> for_4d2c0f.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -486, y: -107) mul_8b2c0d root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8b2c0d.first\n\ty_5390f5 -> mul_8b2c0d.second\n\tinstance(x: -147, y: 13) less_than_zero_2a7e1f root.Std_k98ojb.Math.LessThan {}\n\tmul_8b2c0d.result -> less_than_zero_2a7e1f.left\n\t0 -> less_than_zero_2a7e1f.right\n\tless_than_zero_2a7e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 148, y: -12) modulo_5a7b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a7b9d.value\n\t11 -> modulo_5a7b9d.divisor\n\tmodulo_5a7b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_7f9a3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7f9a3c.input\n        search_ai -> replace_7f9a3c.search\n        replace_ai -> replace_7f9a3c.replace\n        replace_7f9a3c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -100, y: 100) tolower_45b7c9 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 100, y: 100) isequal_23a8f6 root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_45b7c9.input\n        tolower_45b7c9.value -> isequal_23a8f6.left\n        input_ai -> isequal_23a8f6.right\n        isequal_23a8f6.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -158, y: -113) setdifference_1a3f8c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: 74) flatten_8d4e2c root.Std_k98ojb.List.Flatten {}\n        instance(x: -554, y: 215) listconcat_3a1f9d root.Std_k98ojb.List.Concat {}\n        instance(x: -608, y: 376) listempty_4c1e5b root.Std_k98ojb.List.IsEmpty {}\n        instance(x: -462, y: 537) if_6f8a2d root.Std_k98ojb.Std.If {}\n        instance(x: -102, y: 428) reduce_8c3e5f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 194, y: 276) listfirstitem_2a1d8c root.Std_k98ojb.List.FirstItem {}\n\n        list_5fda54 -> flatten_8d4e2c.list\n        flatten_8d4e2c.flattenedList -> setdifference_1a3f8c.left\n        flatten_8d4e2c.flattenedList -> setdifference_1a3f8c.right\n        setdifference_1a3f8c.difference -> listconcat_3a1f9d.list1\n        List.Empty() -> listconcat_3a1f9d.list2\n        listconcat_3a1f9d.concatenatedList -> listempty_4c1e5b.list\n        listempty_4c1e5b.isEmpty -> if_6f8a2d.predicate\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: -30, y: -19, name: \"element\") property(Number) element_8a2d3c\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            element_8a2d3c -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_8c3e5f.handler\n        1 -> reduce_8c3e5f.initialValue\n        listconcat_3a1f9d.concatenatedList -> reduce_8c3e5f.list\n        reduce_8c3e5f.result -> if_6f8a2d.then\n        listfirstitem_2a1d8c.item -> if_6f8a2d.else\n        listconcat_3a1f9d.concatenatedList -> listfirstitem_2a1d8c.list\n        if_6f8a2d.value -> output_cffcc2\n        execute_19300c -> reduce_8c3e5f.reset\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -298, y: 150) difference_0a root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0a.left\n\tlist2_ai -> difference_0a.right\n\tdifference_0a.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 43, y: -101) length_2a3b4f root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: -174) modulo_8d7c9e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 276, y: -101) slice_3a4f8b root.Std_k98ojb.List.Slice {}\n        instance(x: 500, y: -101) slice_4c7d9e root.Std_k98ojb.List.Slice {}\n        instance(x: 620, y: -101) concat_5a3b4f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2a3b4f.list\n        n_68068c -> modulo_8d7c9e.value\n        length_2a3b4f.length -> modulo_8d7c9e.divisor\n        modulo_8d7c9e.result -> slice_3a4f8b.start\n        modulo_8d7c9e.result -> slice_4c7d9e.end\n        list_48148f -> slice_3a4f8b.list\n        0 -> slice_4c7d9e.start\n        list_48148f -> slice_4c7d9e.list\n        -1 -> slice_4c7d9e.end\n        slice_3a4f8b.slice -> concat_5a3b4f.left\n        slice_4c7d9e.slice -> concat_5a3b4f.right\n        concat_5a3b4f.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: 100) reduce_9b8d7f root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_9b8d7f.items\n        func() {\n            in(x: -50, y: 40, name: \"acc\") property(Number) acc_1a3e2b\n            in(x: -50, y: 100, name: \"item\") property(Number) item_9d7f8c\n\n            out(x: 50, y: 70, name: \"out\") property(Number) out_4b6a3d\n\n            instance(x: 0, y: 0) add_2e1f9a root.Std_k98ojb.Math.Add {}\n\n            acc_1a3e2b -> add_2e1f9a.first\n            item_9d7f8c -> add_2e1f9a.second\n            add_2e1f9a.result -> out_4b6a3d\n        } -> reduce_9b8d7f.reducer\n\n        reduce_9b8d7f.output_value -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -85, y: -377) if_6d4f1c root.Std_k98ojb.Std.If {}\n        instance(x: 127, y: -455) lessthanorequal_0e5b3a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 404, y: -613) if_2d3c7f root.Std_k98ojb.Std.If {}\n        instance(x: 686, y: -615) lessthanorequal_3a2e4b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 960, y: -715) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1328, y: -614) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1592, y: -614) if_e19a62 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_0e5b3a.left\n        1 -> lessthanorequal_0e5b3a.right\n        lessthanorequal_0e5b3a.result -> if_6d4f1c.predicate\n        if_6d4f1c.then -> continue_9a54bb\n        false -> output_c457b3\n\n        num_5c0677 -> lessthanorequal_3a2e4b.left\n        2 -> lessthanorequal_3a2e4b.right\n        lessthanorequal_3a2e4b.result -> if_2d3c7f.predicate\n        true -> output_c457b3\n        if_2d3c7f.then -> continue_9a54bb\n\n        2 -> for_8cb3f6.start\n        num_5c0677 -> for_8cb3f6.end\n        for_8cb3f6.index -> expression_b720d7.gen_1\n        num_5c0677 -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        false -> output_c457b3\n\n        for_8cb3f6.onItem -> if_e19a62.execute\n        for_8cb3f6.done -> true -> output_c457b3\n        execute_b7b391 -> for_8cb3f6.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -486, y: -107) mul_8b2d3e root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8b2d3e.first\n\ty_5390f5 -> mul_8b2d3e.second\n\tinstance(x: -147, y: 12) less_than_zero_3c7a1f root.Std_k98ojb.Math.LessThan {}\n\tmul_8b2d3e.result -> less_than_zero_3c7a1f.left\n\t0 -> less_than_zero_3c7a1f.right\n\tless_than_zero_3c7a1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 143, y: -10) modulo_5a8b2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a8b2d.value\n\t11 -> modulo_5a8b2d.divisor\n\tinstance(x: 346, y: -10) equal_1b2e4f root.Std_k98ojb.Logic.Equal {}\n\tmodulo_5a8b2d.result -> equal_1b2e4f.left\n\t0 -> equal_1b2e4f.right\n\tequal_1b2e4f.value -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -100, y: 100) tolower_7a5f4c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7a5f4c.input\n        tolower_7a5f4c.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -123, y: -300) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -123, y: -450) listempty_2d3e4f root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 100, y: -300) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc * item\"\n        }\n        instance(x: 200, y: -450) listflatten_4j5k6l root.Std_k98ojb.List.Flatten {}\n        instance(x: 300, y: -300) listunique_5m6n7o root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: -100, y: 0, name: \"item\") property(Number) item_6p7q8r\n                out(x: 100, y: 0, name: \"out\") property(Bool) out_9s0t1u\n\n                instance(x: 0, y: -50) listcontains_2v3w4x root.Std_k98ojb.List.Contains {}\n                item_6p7q8r -> listcontains_2v3w4x.item\n                listunique_5m6n7o.context -> listcontains_2v3w4x.list\n                listcontains_2v3w4x.result -> out_9s0t1u\n            }\n        }\n\n        execute_19300c -> listempty_2d3e4f.trigger\n        list_5fda54 -> listflatten_4j5k6l.list\n        listflatten_4j5k6l.flattenedList -> listunique_5m6n7o.items\n        listunique_5m6n7o.output_list -> reduce_3g4h5i.items\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.result -> output_cffcc2\n        continue_45190b -> listempty_2d3e4f.trigger\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -293, y: 154) difference_0a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -293, y: 364) difference_1d2e3f root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_0a2b3c.left\n        list2_ai -> difference_0a2b3c.right\n\n        list2_ai -> difference_1d2e3f.left\n        list1_ai -> difference_1d2e3f.right\n\n        instance(x: 54, y: 260) concat_4g5h6i root.Std_k98ojb.List.Concat {}\n\n        difference_0a2b3c.difference -> concat_4g5h6i.left\n        difference_1d2e3f.difference -> concat_4g5h6i.right\n\n        concat_4g5h6i.output_list -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -150) length_0a1b2c root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -150) modulo_1d2e3f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 342, y: -150) slice_4g5h6i root.Std_k98ojb.List.Slice {}\n        instance(x: 577, y: -150) slice_7j8k9l root.Std_k98ojb.List.Slice {}\n        instance(x: 812, y: -150) concat_0m1n2o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_0a1b2c.list\n        n_68068c -> modulo_1d2e3f.value\n        length_0a1b2c.length -> modulo_1d2e3f.divisor\n        modulo_1d2e3f.result -> slice_4g5h6i.start\n        list_48148f -> slice_4g5h6i.list\n        -1 -> slice_4g5h6i.end\n        slice_4g5h6i.slice -> concat_0m1n2o.left\n\n        modulo_1d2e3f.result -> sub_7p8q9r root.Std_k98ojb.Math.Sub {}\n        length_0a1b2c.length -> sub_7p8q9r.first\n        modulo_1d2e3f.result -> sub_7p8q9r.second\n\n        list_48148f -> slice_7j8k9l.list\n        0 -> slice_7j8k9l.start\n        sub_7p8q9r.result -> slice_7j8k9l.end\n        slice_7j8k9l.slice -> concat_0m1n2o.right\n\n        concat_0m1n2o.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -100) reduce_9b8d4e root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_9b8d4e.items\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 100, y: 100, name: \"current\") property(Number) current_8d9a2b\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 150, y: 150) add_b4554f root.Std_k98ojb.Math.Add {}\n\n            accumulator_5f51f7 -> add_b4554f.first\n            current_8d9a2b -> add_b4554f.second\n            add_b4554f.result -> out_d0fd24\n        } -> reduce_9b8d4e.reducer\n\n        reduce_9b8d4e.output_value -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -88, y: -354) if_6c4f0d root.Std_k98ojb.Std.If {}\n        instance(x: 72, y: -496) lessthanorequal_1e1b1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 352, y: -406) for_7f5a0d root.Std_k98ojb.Std.For {}\n        instance(x: 591, y: -240) lessthanorequal_5e2c8a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 635, y: -474) expression_0d3f1a root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 2136, y: -356) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 746, y: -300) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_1e1b1c.left\n        2 -> lessthanorequal_1e1b1c.right\n        lessthanorequal_1e1b1c.result -> if_6c4f0d.predicate\n        if_6c4f0d.then -> continue_9a54bb\n        if_6c4f0d.else -> for_7f5a0d.reset\n\n        num_5c0677 -> expression_0d3f1a.gen_0\n        2 -> add_b4554f.first\n        1 -> add_b4554f.second\n        add_b4554f.result -> for_7f5a0d.items\n\n        for_7f5a0d.item -> expression_0d3f1a.gen_1\n        expression_0d3f1a.result -> if_e19a62.predicate\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_7f5a0d.next\n\n        for_7f5a0d.done -> output_c457b3\n        true -> output_c457b3\n\n        execute_b7b391 -> if_6c4f0d.execute\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -107) mul_0d8b2c root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_0d8b2c.first\n\ty_5390f5 -> mul_0d8b2c.second\n\tinstance(x: -147, y: 10) less_than_zero_3a4e1f root.Std_k98ojb.Math.LessThan {}\n\tmul_0d8b2c.result -> less_than_zero_3a4e1f.left\n\t0 -> less_than_zero_3a4e1f.right\n\tless_than_zero_3a4e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 145, y: -12) modulo_1b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_1b8a2d.value\n\t11 -> modulo_1b8a2d.divisor\n\tinstance(x: 305, y: -14) equal_6e4b9a root.Std_k98ojb.Logic.Equal {}\n\tmodulo_1b8a2d.result -> equal_6e4b9a.left\n\t0 -> equal_6e4b9a.right\n\tequal_6e4b9a.value -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 174, y: 199) tolower_5a8b0c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5a8b0c.input\n        tolower_5a8b0c.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0 root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0.left\n\tlist2_ai -> difference_0.right\n\tdifference_0.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -150) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 160, y: -150) modulo_2d3e4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 280, y: -150) slice_3g4h5i root.Std_k98ojb.List.Slice {}\n        instance(x: 280, y: -250) slice_4j5k6l root.Std_k98ojb.List.Slice {}\n        instance(x: 400, y: -150) concat_5m6n7o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_2d3e4f.value\n        n_68068c -> modulo_2d3e4f.divisor\n        modulo_2d3e4f.result -> slice_3g4h5i.start\n        list_48148f -> slice_3g4h5i.list\n        -1 -> slice_3g4h5i.end\n        modulo_2d3e4f.result -> slice_4j5k6l.end\n        0 -> slice_4j5k6l.start\n        list_48148f -> slice_4j5k6l.list\n        slice_3g4h5i.slice -> concat_5m6n7o.left\n        slice_4j5k6l.slice -> concat_5m6n7o.right\n        concat_5m6n7o.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -104) reduce_3d8b9a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b9a.items\n\t0 -> reduce_3d8b9a.initialValue\n\tfunc() {\n\t    in(x: 5, y: -14, name: \"accumulator\") property(Number) accumulator_7f8e1a\n\t    in(x: 26, y: 10, name: \"item\") property(Number) item_3d8b9a\n\n\t    out(x: 55, y: 30, name: \"out\") property(Number) out_4c8b9a\n\n\t    instance(x: 27, y: -6) add_1f8e1a root.Std_k98ojb.Math.Add {}\n\t    accumulator_7f8e1a -> add_1f8e1a.first\n\t    item_3d8b9a -> add_1f8e1a.second\n\t    add_1f8e1a.result -> out_4c8b9a\n\t} -> reduce_3d8b9a.reducer\n\treduce_3d8b9a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e1b9a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_8d3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_8a2e1b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) for_4f8d2c root.Std_k98ojb.Std.For {}\n        instance(x: 1278, y: -365) mathexpression_4e1b9a root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1554, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1830, y: -365) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_2e1b9a.left\n        1 -> lessthanorequal_2e1b9a.right\n        lessthanorequal_2e1b9a.result -> if_0f8d2c.predicate\n        if_0f8d2c.then -> continue_9a54bb\n        if_0f8d2c.else -> lessthanorequal_8a2e1b.left\n\n        num_5c0677 -> lessthanorequal_8a2e1b.right\n        lessthanorequal_8a2e1b.result -> if_8d3f1c.predicate\n        if_8d3f1c.then -> continue_9a54bb\n        if_8d3f1c.else -> for_4f8d2c.reset\n\n        2 -> add_b4554f.first\n        num_5c0677 -> add_b4554f.second\n        add_b4554f.result -> for_4f8d2c.to\n\n        2 -> for_4f8d2c.from\n        for_4f8d2c.item -> mathexpression_4e1b9a.gen_1\n        num_5c0677 -> mathexpression_4e1b9a.gen_0\n        mathexpression_4e1b9a.result -> if_e19a62.predicate\n\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_4f8d2c.next\n\n        for_4f8d2c.done -> output_c457b3\n        true -> output_c457b3\n\n        execute_b7b391 -> if_0f8d2c.execute\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -486, y: -107) mul_8b2c9d root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8b2c9d.first\n\ty_5390f5 -> mul_8b2c9d.second\n\tinstance(x: -147, y: 13) less_than_zero_7a1e5f root.Std_k98ojb.Math.LessThan {}\n\tmul_8b2c9d.result -> less_than_zero_7a1e5f.left\n\t0 -> less_than_zero_7a1e5f.right\n\tless_than_zero_7a1e5f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 148, y: -12) modulo_5a7b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a7b9d.value\n\t11 -> modulo_5a7b9d.divisor\n\tmodulo_5a7b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_7b9a3f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b9a3f.input\n        search_ai -> replace_7b9a3f.search\n        replace_ai -> replace_7b9a3f.replace\n        replace_7b9a3f.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -100, y: 100) tolower_45b7c9 root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_45b7c9.input\n        tolower_45b7c9.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -158, y: -113) setdifference_1a7c8d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: 24) flatten_2e3f8a root.Std_k98ojb.List.Flatten {}\n        instance(x: -58, y: -361) listempty_7d8c2a root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 108, y: -444) if_4e5f3b root.Std_k98ojb.Std.If {}\n        instance(x: 352, y: -463) reduce_7c8d2a root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc * item\"\n        }\n        instance(x: 108, y: -284) if_8e5f3b root.Std_k98ojb.Std.If {}\n        instance(x: 67, y: -195) onetolist_1a7c8d root.Std_k98ojb.List.Concat {}\n\n        list_5fda54 -> flatten_2e3f8a.list\n        flatten_2e3f8a.flattenedList -> setdifference_1a7c8d.left\n        flatten_2e3f8a.flattenedList -> setdifference_1a7c8d.right\n        setdifference_1a7c8d.difference -> listempty_7d8c2a.list\n        listempty_7d8c2a.isEmpty -> if_4e5f3b.predicate\n        1 -> if_4e5f3b.then\n        setdifference_1a7c8d.difference -> reduce_7c8d2a.items\n        1 -> reduce_7c8d2a.initialValue\n        reduce_7c8d2a.output_list -> output_cffcc2\n        if_4e5f3b.else -> onetolist_1a7c8d.list0\n        1 -> onetolist_1a7c8d.list1\n        onetolist_1a7c8d.concatenatedList -> output_cffcc2\n        execute_19300c -> if_4e5f3b.execute\n        execute_19300c -> if_8e5f3b.execute\n        if_8e5f3b.then -> continue_45190b\n        if_8e5f3b.else -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -298, y: 150) difference_0a root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0a.left\n\tlist2_ai -> difference_0a.right\n\tdifference_0a.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 43, y: -101) length_2a3b4f root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: -174) modulo_8d7c9e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 276, y: -101) slice_3a4f8b root.Std_k98ojb.List.Slice {}\n        instance(x: 500, y: -101) slice_4c7d9e root.Std_k98ojb.List.Slice {}\n        instance(x: 620, y: -101) concat_5a3b4f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2a3b4f.list\n        n_68068c -> modulo_8d7c9e.value\n        length_2a3b4f.length -> modulo_8d7c9e.divisor\n        modulo_8d7c9e.result -> slice_3a4f8b.start\n        modulo_8d7c9e.result -> slice_4c7d9e.end\n        list_48148f -> slice_3a4f8b.list\n        0 -> slice_4c7d9e.start\n        list_48148f -> slice_4c7d9e.list\n        -1 -> slice_4c7d9e.end\n        slice_3a4f8b.slice -> concat_5a3b4f.left\n        slice_4c7d9e.slice -> concat_5a3b4f.right\n        concat_5a3b4f.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: 100) reduce_9b8d7f root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_9b8d7f.items\n        func() {\n            in(x: -50, y: 40, name: \"acc\") property(Number) acc_1a3e2b\n            in(x: -50, y: 100, name: \"item\") property(Number) item_9d7f8c\n\n            out(x: 50, y: 70, name: \"out\") property(Number) out_4b6a3d\n\n            instance(x: 0, y: 0) add_2e1b4c root.Std_k98ojb.Math.Add {}\n\n            acc_1a3e2b -> add_2e1b4c.first\n            item_9d7f8c -> add_2e1b4c.second\n            add_2e1b4c.result -> out_4b6a3d\n        } -> reduce_9b8d7f.reducer\n\n        reduce_9b8d7f.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -85, y: -377) if_6d4f1c root.Std_k98ojb.Std.If {}\n        instance(x: 123, y: -369) lessthanorequal_f0e2b3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 578, y: -401) for_3f8d2a root.Std_k98ojb.Std.For {}\n        instance(x: 664, y: -256) modulo_8c3e1b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 750, y: -349) if_8a5f1d root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_f0e2b3.left\n        1 -> lessthanorequal_f0e2b3.right\n        lessthanorequal_f0e2b3.result -> if_6d4f1c.predicate\n\n        execute_b7b391 -> if_6d4f1c.execute\n        false -> if_6d4f1c.else\n\n        2 -> for_3f8d2a.items\n        num_5c0677 -> for_3f8d2a.items\n        for_3f8d2a.item -> modulo_8c3e1b.divisor\n        num_5c0677 -> modulo_8c3e1b.value\n\n        0 -> if_8a5f1d.predicate\n        modulo_8c3e1b.result -> if_8a5f1d.input\n\n        false -> output_c457b3\n        true -> continue_9a54bb\n\n        for_3f8d2a.onItem -> if_8a5f1d.execute\n        if_8a5f1d.then -> output_c457b3\n        if_8a5f1d.else -> continue_9a54bb\n\n        for_3f8d2a.done -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -486, y: -107) mul_8b2d3e root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8b2d3e.first\n\ty_5390f5 -> mul_8b2d3e.second\n\tinstance(x: -147, y: 12) less_than_zero_9a7c1f root.Std_k98ojb.Math.LessThan {}\n\tmul_8b2d3e.result -> less_than_zero_9a7c1f.left\n\t0 -> less_than_zero_9a7c1f.right\n\tless_than_zero_9a7c1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 143, y: -10) modulo_5a8b2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a8b2d.value\n\t11 -> modulo_5a8b2d.divisor\n\tinstance(x: 346, y: -10) equal_1b2e4f root.Std_k98ojb.Logic.Equal {}\n\tmodulo_5a8b2d.result -> equal_1b2e4f.left\n\t0 -> equal_1b2e4f.right\n\tequal_1b2e4f.value -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -100, y: 100) tolower_7a5f4c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7a5f4c.input\n        tolower_7a5f4c.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -123, y: -300) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -123, y: -450) listempty_2d3e4f root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 100, y: -300) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc * item\"\n        }\n        instance(x: 200, y: -450) listflatten_4j5k6l root.Std_k98ojb.List.Flatten {}\n        instance(x: 300, y: -300) listunique_5m6n7o root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: 0, y: 0, name: \"item\") property(Number) item_6p7q8r\n                out(x: 100, y: 0, name: \"out\") property(Bool) out_9s0t1u\n\n                instance(x: 50, y: -50) listcontains_2v3w4x root.Std_k98ojb.List.Contains {}\n                item_6p7q8r -> listcontains_2v3w4x.item\n                listunique_5m6n7o.context -> listcontains_2v3w4x.list\n                instance(x: 0, y: -100) not_3y4z5a root.Std_k98ojb.Logic.Not {}\n                listcontains_2v3w4x.contains -> not_3y4z5a.input\n                not_3y4z5a.result -> out_9s0t1u\n            }\n        }\n\n        execute_19300c -> listunique_5m6n7o.execute\n        list_5fda54 -> listunique_5m6n7o.items\n        listunique_5m6n7o.output -> reduce_3g4h5i.items\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.result -> output_cffcc2\n        continue_45190b -> listunique_5m6n7o.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -293, y: 154) difference_0a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -293, y: 364) difference_1d2e3f root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_0a2b3c.left\n        list2_ai -> difference_0a2b3c.right\n\n        list2_ai -> difference_1d2e3f.left\n        list1_ai -> difference_1d2e3f.right\n\n        instance(x: 54, y: 260) concat_4g5h6i root.Std_k98ojb.List.Concat {}\n\n        difference_0a2b3c.difference -> concat_4g5h6i.left\n        difference_1d2e3f.difference -> concat_4g5h6i.right\n\n        concat_4g5h6i.output_list -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -150) length_0a1b2c root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -150) modulo_1d2e3f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 342, y: -150) slice_4g5h6i root.Std_k98ojb.List.Slice {}\n        instance(x: 577, y: -150) slice_7j8k9l root.Std_k98ojb.List.Slice {}\n        instance(x: 812, y: -150) concat_0m1n2o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_0a1b2c.list\n        n_68068c -> modulo_1d2e3f.value\n        length_0a1b2c.length -> modulo_1d2e3f.divisor\n        modulo_1d2e3f.result -> slice_4g5h6i.start\n        list_48148f -> slice_4g5h6i.list\n        -1 -> slice_4g5h6i.end\n        slice_4g5h6i.slice -> concat_0m1n2o.left\n\n        modulo_1d2e3f.result -> sub_7p8q9r root.Std_k98ojb.Math.Sub {}\n        length_0a1b2c.length -> sub_7p8q9r.first\n        modulo_1d2e3f.result -> sub_7p8q9r.second\n\n        list_48148f -> slice_7j8k9l.list\n        0 -> slice_7j8k9l.start\n        sub_7p8q9r.result -> slice_7j8k9l.end\n        slice_7j8k9l.slice -> concat_0m1n2o.right\n\n        concat_0m1n2o.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -100) reduce_9b8d4e root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_9b8d4e.items\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 100, y: 100, name: \"current\") property(Number) current_8d9a2b\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 150, y: 150) add_b4554f root.Std_k98ojb.Math.Add {}\n\n            accumulator_5f51f7 -> add_b4554f.first\n            current_8d9a2b -> add_b4554f.second\n            add_b4554f.result -> out_d0fd24\n        } -> reduce_9b8d4e.reducer\n\n        reduce_9b8d4e.output_value -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -89, y: -350) if_6c4f0d root.Std_k98ojb.Std.If {}\n        instance(x: 72, y: -528) lessthanorequal_1e1b1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 314, y: -609) if_9a4d2f root.Std_k98ojb.Std.If {}\n        instance(x: 576, y: -667) lessthanorequal_c1c2e1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 307, y: -414) for_9a2d3f root.Std_k98ojb.Std.For {}\n        instance(x: 655, y: -476) mathexpression_7c1e1a root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 823, y: -476) if_7f8d3f root.Std_k98ojb.Std.If {}\n        instance(x: 1052, y: -476) mathexpression_9a2d3f root.Std_k98ojb.Math.Expression {\n            expression: \"(num / i == i)\"\n        }\n        instance(x: 1234, y: -476) and_9a2d3f root.Std_k98ojb.Logic.And {}\n        instance(x: 1500, y: -476) if_9a2d3f root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_1e1b1c.left\n        1 -> lessthanorequal_1e1b1c.right\n        lessthanorequal_1e1b1c.result -> if_6c4f0d.predicate\n        if_6c4f0d.then -> continue_9a54bb\n        if_6c4f0d.else -> lessthanorequal_c1c2e1.left\n        num_5c0677 -> lessthanorequal_c1c2e1.right\n        lessthanorequal_c1c2e1.result -> if_9a4d2f.predicate\n        if_9a4d2f.then -> continue_9a54bb\n        if_9a4d2f.else -> for_9a2d3f.reset\n\n        2 -> for_9a2d3f.start\n        num_5c0677 -> for_9a2d3f.end\n        for_9a2d3f.onItem -> mathexpression_7c1e1a.execute\n        num_5c0677 -> mathexpression_7c1e1a.gen_0\n        for_9a2d3f.item -> mathexpression_7c1e1a.gen_1\n\n        mathexpression_7c1e1a.result -> if_7f8d3f.predicate\n        if_7f8d3f.then -> continue_9a54bb\n        if_7f8d3f.else -> for_9a2d3f.next\n\n        num_5c0677 -> mathexpression_9a2d3f.gen_0\n        for_9a2d3f.item -> mathexpression_9a2d3f.gen_1\n\n        mathexpression_9a2d3f.result -> and_9a2d3f.left\n        if_7f8d3f.value -> and_9a2d3f.right\n        and_9a2d3f.result -> if_9a2d3f.predicate\n        if_9a2d3f.then -> continue_9a54bb\n        if_9a2d3f.else -> for_9a2d3f.next\n\n        for_9a2d3f.done -> output_c457b3\n        output_c457b3 <- true\n        execute_b7b391 -> for_9a2d3f.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -107) mul_0d8b2c root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_0d8b2c.first\n\ty_5390f5 -> mul_0d8b2c.second\n\tinstance(x: -147, y: 10) less_than_zero_3a4e1f root.Std_k98ojb.Math.LessThan {}\n\tmul_0d8b2c.result -> less_than_zero_3a4e1f.left\n\t0 -> less_than_zero_3a4e1f.right\n\tless_than_zero_3a4e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 145, y: -12) modulo_1b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_1b8a2d.value\n\t11 -> modulo_1b8a2d.divisor\n\tinstance(x: 305, y: -14) equal_6e4b9a root.Std_k98ojb.Logic.Equal {}\n\tmodulo_1b8a2d.result -> equal_6e4b9a.left\n\t0 -> equal_6e4b9a.right\n\tequal_6e4b9a.value -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 174, y: 199) tolower_5a8b0c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5a8b0c.input\n        tolower_5a8b0c.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0 root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0.left\n\tlist2_ai -> difference_0.right\n\tdifference_0.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -150) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 160, y: -150) modulo_2d3e4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 280, y: -150) slice_3g4h5i root.Std_k98ojb.List.Slice {}\n        instance(x: 280, y: -250) slice_4j5k6l root.Std_k98ojb.List.Slice {}\n        instance(x: 400, y: -150) concat_5m6n7o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_2d3e4f.value\n        n_68068c -> modulo_2d3e4f.divisor\n        modulo_2d3e4f.result -> slice_3g4h5i.start\n        list_48148f -> slice_3g4h5i.list\n        -1 -> slice_3g4h5i.end\n        modulo_2d3e4f.result -> slice_4j5k6l.end\n        0 -> slice_4j5k6l.start\n        list_48148f -> slice_4j5k6l.list\n        slice_3g4h5i.slice -> concat_5m6n7o.left\n        slice_4j5k6l.slice -> concat_5m6n7o.right\n        concat_5m6n7o.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -104) reduce_3d8b9a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b9a.items\n\t0 -> reduce_3d8b9a.initialValue\n\tfunc() {\n\t    in(x: 5, y: -14, name: \"accumulator\") property(Number) accumulator_7f8e1a\n\t    in(x: 26, y: 10, name: \"item\") property(Number) item_3d8b9a\n\n\t    out(x: 55, y: 30, name: \"out\") property(Number) out_4c8b9a\n\n\t    instance(x: 27, y: -6) add_1f8e1a root.Std_k98ojb.Math.Add {}\n\t    accumulator_7f8e1a -> add_1f8e1a.first\n\t    item_3d8b9a -> add_1f8e1a.second\n\t    add_1f8e1a.result -> out_4c8b9a\n\t} -> reduce_3d8b9a.reducer\n\treduce_3d8b9a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e1b9a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_8d3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_8a2e1b root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) for_4f8d2c root.Std_k98ojb.Std.For {}\n        instance(x: 1278, y: -365) mathexpression_4e1b9a root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1554, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1830, y: -365) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_2e1b9a.left\n        1 -> lessthanorequal_2e1b9a.right\n        lessthanorequal_2e1b9a.result -> if_0f8d2c.predicate\n        if_0f8d2c.then -> continue_9a54bb\n        if_0f8d2c.else -> lessthanorequal_8a2e1b.left\n\n        num_5c0677 -> lessthanorequal_8a2e1b.right\n        lessthanorequal_8a2e1b.result -> if_8d3f1c.predicate\n        if_8d3f1c.then -> continue_9a54bb\n        if_8d3f1c.else -> for_4f8d2c.reset\n\n        2 -> add_b4554f.first\n        num_5c0677 -> add_b4554f.second\n        add_b4554f.result -> for_4f8d2c.to\n\n        2 -> for_4f8d2c.from\n        for_4f8d2c.item -> mathexpression_4e1b9a.gen_1\n        num_5c0677 -> mathexpression_4e1b9a.gen_0\n        mathexpression_4e1b9a.result -> if_e19a62.predicate\n\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_4f8d2c.next\n\n        for_4f8d2c.done -> output_c457b3\n        true -> output_c457b3\n\n        execute_b7b391 -> if_0f8d2c.execute\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -486, y: -107) mul_8b2c9d root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8b2c9d.first\n\ty_5390f5 -> mul_8b2c9d.second\n\tinstance(x: -147, y: 13) less_than_zero_7a1e5f root.Std_k98ojb.Math.LessThan {}\n\tmul_8b2c9d.result -> less_than_zero_7a1e5f.left\n\t0 -> less_than_zero_7a1e5f.right\n\tless_than_zero_7a1e5f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 148, y: -12) modulo_5a7b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a7b9d.value\n\t11 -> modulo_5a7b9d.divisor\n\tmodulo_5a7b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_7b9a3f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b9a3f.input\n        search_ai -> replace_7b9a3f.search\n        replace_ai -> replace_7b9a3f.replace\n        replace_7b9a3f.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -100, y: 100) tolower_45b7c9 root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_45b7c9.input\n        tolower_45b7c9.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -158, y: -113) setdifference_1a7c8d root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: 24) flatten_2e3f8a root.Std_k98ojb.List.Flatten {}\n        instance(x: -58, y: -361) listempty_7d8c2a root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 108, y: -444) if_4e5f3b root.Std_k98ojb.Std.If {}\n        instance(x: 352, y: -463) reduce_7c8d2a root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc * item\"\n        }\n        instance(x: 108, y: -284) if_8e5f3b root.Std_k98ojb.Std.If {}\n        instance(x: 67, y: -195) onetolist_1a7c8d root.Std_k98ojb.List.Concat {}\n\n        list_5fda54 -> flatten_2e3f8a.list\n        flatten_2e3f8a.flattenedList -> setdifference_1a7c8d.left\n        flatten_2e3f8a.flattenedList -> setdifference_1a7c8d.right\n        setdifference_1a7c8d.difference -> listempty_7d8c2a.list\n        listempty_7d8c2a.isEmpty -> if_4e5f3b.predicate\n        1 -> if_4e5f3b.then\n        setdifference_1a7c8d.difference -> reduce_7c8d2a.items\n        1 -> reduce_7c8d2a.initialValue\n        reduce_7c8d2a.output_list -> output_cffcc2\n        if_4e5f3b.else -> onetolist_1a7c8d.list0\n        1 -> onetolist_1a7c8d.list1\n        onetolist_1a7c8d.concatenatedList -> output_cffcc2\n        execute_19300c -> if_4e5f3b.execute\n        execute_19300c -> if_8e5f3b.execute\n        if_8e5f3b.then -> continue_45190b\n        if_8e5f3b.else -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -298, y: 150) difference_0a root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0a.left\n\tlist2_ai -> difference_0a.right\n\tdifference_0a.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 43, y: -101) length_2a3b4f root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: -174) modulo_8d7c9e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 276, y: -101) slice_3a4f8b root.Std_k98ojb.List.Slice {}\n        instance(x: 500, y: -101) slice_4c7d9e root.Std_k98ojb.List.Slice {}\n        instance(x: 620, y: -101) concat_5a3b4f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2a3b4f.list\n        n_68068c -> modulo_8d7c9e.value\n        length_2a3b4f.length -> modulo_8d7c9e.divisor\n        modulo_8d7c9e.result -> slice_3a4f8b.start\n        modulo_8d7c9e.result -> slice_4c7d9e.end\n        list_48148f -> slice_3a4f8b.list\n        0 -> slice_4c7d9e.start\n        list_48148f -> slice_4c7d9e.list\n        -1 -> slice_4c7d9e.end\n        slice_3a4f8b.slice -> concat_5a3b4f.left\n        slice_4c7d9e.slice -> concat_5a3b4f.right\n        concat_5a3b4f.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: 100) reduce_9b8d7f root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_9b8d7f.items\n        func() {\n            in(x: -50, y: 40, name: \"acc\") property(Number) acc_1a3e2b\n            in(x: -50, y: 100, name: \"item\") property(Number) item_9d7f8c\n\n            out(x: 50, y: 70, name: \"out\") property(Number) out_4b6a3d\n\n            instance(x: 0, y: 0) add_2e1b4c root.Std_k98ojb.Math.Add {}\n\n            acc_1a3e2b -> add_2e1b4c.first\n            item_9d7f8c -> add_2e1b4c.second\n            add_2e1b4c.result -> out_4b6a3d\n        } -> reduce_9b8d7f.reducer\n\n        reduce_9b8d7f.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -85, y: -377) if_6d4f1c root.Std_k98ojb.Std.If {}\n        instance(x: 123, y: -369) lessthanorequal_f0e2b3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 578, y: -401) for_3f8d2a root.Std_k98ojb.Std.For {}\n        instance(x: 664, y: -256) modulo_8c3e1b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 750, y: -349) if_8a5f1d root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_f0e2b3.left\n        1 -> lessthanorequal_f0e2b3.right\n        lessthanorequal_f0e2b3.result -> if_6d4f1c.predicate\n\n        execute_b7b391 -> if_6d4f1c.execute\n        false -> if_6d4f1c.else\n\n        2 -> for_3f8d2a.items\n        num_5c0677 -> for_3f8d2a.items\n        for_3f8d2a.item -> modulo_8c3e1b.divisor\n        num_5c0677 -> modulo_8c3e1b.value\n\n        0 -> if_8a5f1d.predicate\n        modulo_8c3e1b.result -> if_8a5f1d.input\n\n        false -> output_c457b3\n        true -> continue_9a54bb\n\n        for_3f8d2a.onItem -> if_8a5f1d.execute\n        if_8a5f1d.then -> output_c457b3\n        if_8a5f1d.else -> continue_9a54bb\n\n        for_3f8d2a.done -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -486, y: -107) mul_8b2d3e root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8b2d3e.first\n\ty_5390f5 -> mul_8b2d3e.second\n\tinstance(x: -147, y: 12) less_than_zero_9a7c1f root.Std_k98ojb.Math.LessThan {}\n\tmul_8b2d3e.result -> less_than_zero_9a7c1f.left\n\t0 -> less_than_zero_9a7c1f.right\n\tless_than_zero_9a7c1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 143, y: -10) modulo_5a8b2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a8b2d.value\n\t11 -> modulo_5a8b2d.divisor\n\tinstance(x: 346, y: -10) equal_1b2e4f root.Std_k98ojb.Logic.Equal {}\n\tmodulo_5a8b2d.result -> equal_1b2e4f.left\n\t0 -> equal_1b2e4f.right\n\tequal_1b2e4f.value -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -100, y: 100) tolower_7a5f4c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7a5f4c.input\n        tolower_7a5f4c.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -123, y: -300) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -123, y: -450) listempty_2d3e4f root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 100, y: -300) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc * item\"\n        }\n        instance(x: 200, y: -450) listflatten_4j5k6l root.Std_k98ojb.List.Flatten {}\n        instance(x: 300, y: -300) listunique_5m6n7o root.Std_k98ojb.Iteration.Filter {\n            handler: func() {\n                in(x: 0, y: 0, name: \"item\") property(Number) item_6p7q8r\n                out(x: 100, y: 0, name: \"out\") property(Bool) out_9s0t1u\n\n                instance(x: 50, y: -50) listcontains_2v3w4x root.Std_k98ojb.List.Contains {}\n                item_6p7q8r -> listcontains_2v3w4x.item\n                listunique_5m6n7o.context -> listcontains_2v3w4x.list\n                instance(x: 0, y: -100) not_3y4z5a root.Std_k98ojb.Logic.Not {}\n                listcontains_2v3w4x.contains -> not_3y4z5a.input\n                not_3y4z5a.result -> out_9s0t1u\n            }\n        }\n\n        execute_19300c -> listunique_5m6n7o.execute\n        list_5fda54 -> listunique_5m6n7o.items\n        listunique_5m6n7o.output -> reduce_3g4h5i.items\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.result -> output_cffcc2\n        continue_45190b -> listunique_5m6n7o.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -293, y: 154) difference_0a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -293, y: 364) difference_1d2e3f root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_0a2b3c.left\n        list2_ai -> difference_0a2b3c.right\n\n        list2_ai -> difference_1d2e3f.left\n        list1_ai -> difference_1d2e3f.right\n\n        instance(x: 54, y: 260) concat_4g5h6i root.Std_k98ojb.List.Concat {}\n\n        difference_0a2b3c.difference -> concat_4g5h6i.left\n        difference_1d2e3f.difference -> concat_4g5h6i.right\n\n        concat_4g5h6i.output_list -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -150) length_0a1b2c root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -150) modulo_1d2e3f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 342, y: -150) slice_4g5h6i root.Std_k98ojb.List.Slice {}\n        instance(x: 577, y: -150) slice_7j8k9l root.Std_k98ojb.List.Slice {}\n        instance(x: 812, y: -150) concat_0m1n2o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_0a1b2c.list\n        n_68068c -> modulo_1d2e3f.value\n        length_0a1b2c.length -> modulo_1d2e3f.divisor\n        modulo_1d2e3f.result -> slice_4g5h6i.start\n        list_48148f -> slice_4g5h6i.list\n        -1 -> slice_4g5h6i.end\n        slice_4g5h6i.slice -> concat_0m1n2o.left\n\n        modulo_1d2e3f.result -> sub_7p8q9r root.Std_k98ojb.Math.Sub {}\n        length_0a1b2c.length -> sub_7p8q9r.first\n        modulo_1d2e3f.result -> sub_7p8q9r.second\n\n        list_48148f -> slice_7j8k9l.list\n        0 -> slice_7j8k9l.start\n        sub_7p8q9r.result -> slice_7j8k9l.end\n        slice_7j8k9l.slice -> concat_0m1n2o.right\n\n        concat_0m1n2o.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 100, y: -100) reduce_9b8d4e root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_9b8d4e.items\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 100, y: 100, name: \"current\") property(Number) current_8d9a2b\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 150, y: 150) add_b4554f root.Std_k98ojb.Math.Add {}\n\n            accumulator_5f51f7 -> add_b4554f.first\n            current_8d9a2b -> add_b4554f.second\n            add_b4554f.result -> out_d0fd24\n        } -> reduce_9b8d4e.reducer\n\n        reduce_9b8d4e.output_value -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -89, y: -350) if_6c4f0d root.Std_k98ojb.Std.If {}\n        instance(x: 72, y: -528) lessthanorequal_1e1b1c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 314, y: -609) if_9a4d2f root.Std_k98ojb.Std.If {}\n        instance(x: 576, y: -667) lessthanorequal_c1c2e1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 307, y: -414) for_9a2d3f root.Std_k98ojb.Std.For {}\n        instance(x: 655, y: -476) mathexpression_7c1e1a root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 823, y: -476) if_7f8d3f root.Std_k98ojb.Std.If {}\n        instance(x: 1052, y: -476) mathexpression_9a2d3f root.Std_k98ojb.Math.Expression {\n            expression: \"(num / i == i)\"\n        }\n        instance(x: 1234, y: -476) and_9a2d3f root.Std_k98ojb.Logic.And {}\n        instance(x: 1500, y: -476) if_9a2d3f root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_1e1b1c.left\n        1 -> lessthanorequal_1e1b1c.right\n        lessthanorequal_1e1b1c.result -> if_6c4f0d.predicate\n        if_6c4f0d.then -> continue_9a54bb\n        if_6c4f0d.else -> lessthanorequal_c1c2e1.left\n        num_5c0677 -> lessthanorequal_c1c2e1.right\n        lessthanorequal_c1c2e1.result -> if_9a4d2f.predicate\n        if_9a4d2f.then -> continue_9a54bb\n        if_9a4d2f.else -> for_9a2d3f.reset\n\n        2 -> for_9a2d3f.start\n        num_5c0677 -> for_9a2d3f.end\n        for_9a2d3f.onItem -> mathexpression_7c1e1a.execute\n        num_5c0677 -> mathexpression_7c1e1a.gen_0\n        for_9a2d3f.item -> mathexpression_7c1e1a.gen_1\n\n        mathexpression_7c1e1a.result -> if_7f8d3f.predicate\n        if_7f8d3f.then -> continue_9a54bb\n        if_7f8d3f.else -> for_9a2d3f.next\n\n        num_5c0677 -> mathexpression_9a2d3f.gen_0\n        for_9a2d3f.item -> mathexpression_9a2d3f.gen_1\n\n        mathexpression_9a2d3f.result -> and_9a2d3f.left\n        if_7f8d3f.value -> and_9a2d3f.right\n        and_9a2d3f.result -> if_9a2d3f.predicate\n        if_9a2d3f.then -> continue_9a54bb\n        if_9a2d3f.else -> for_9a2d3f.next\n\n        for_9a2d3f.done -> output_c457b3\n        output_c457b3 <- true\n        execute_b7b391 -> for_9a2d3f.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -117) mul_8d7b0c root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8d7b0c.first\n\ty_5390f5 -> mul_8d7b0c.second\n\tinstance(x: -41, y: 11) less_than_zero_3a2e1f root.Std_k98ojb.Math.LessThan {}\n\tmul_8d7b0c.result -> less_than_zero_3a2e1f.left\n\t0 -> less_than_zero_3a2e1f.right\n\tless_than_zero_3a2e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5a3b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a3b9d.value\n\t11 -> modulo_5a3b9d.divisor\n\tmodulo_5a3b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9b7f8a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9b7f8a.input\n        search_ai -> replace_9b7f8a.search\n        replace_ai -> replace_9b7f8a.replace\n        replace_9b7f8a.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 100) tolower_4b7f9a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 350, y: 200) isequal_6c8d2e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b7f9a.input\n        tolower_4b7f9a.value -> isequal_6c8d2e.left\n        input_ai -> isequal_6c8d2e.right\n        isequal_6c8d2e.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0a5b3c root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0a5b3c.left\n\tlist2_ai -> difference_0a5b3c.right\n\tdifference_0a5b3c.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -150) length_1a2b3c root.Std_k98ojb.List.Length {}\n        instance(x: 160, y: -150) modulo_2d3e4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 280, y: -150) slice_3g4h5i root.Std_k98ojb.List.Slice {}\n        instance(x: 280, y: -250) slice_4j5k6l root.Std_k98ojb.List.Slice {}\n        instance(x: 400, y: -150) concat_5m6n7o root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_1a2b3c.list\n        length_1a2b3c.length -> modulo_2d3e4f.value\n        n_68068c -> modulo_2d3e4f.divisor\n        modulo_2d3e4f.result -> slice_3g4h5i.start\n        list_48148f -> slice_3g4h5i.list\n        -1 -> slice_3g4h5i.end\n        modulo_2d3e4f.result -> slice_4j5k6l.end\n        0 -> slice_4j5k6l.start\n        list_48148f -> slice_4j5k6l.list\n        slice_3g4h5i.slice -> concat_5m6n7o.left\n        slice_4j5k6l.slice -> concat_5m6n7o.right\n        concat_5m6n7o.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -123) reduce_3d8b2a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b2a.items\n\t0 -> reduce_3d8b2a.initialValue\n\tfunc() {\n\t    in(x: 45, y: -17, name: \"accumulator\") property(Number) accumulator_9f8e1b\n\t    in(x: 165, y: -17, name: \"currentItem\") property(Number) currentItem_2d3a0c\n\n\t    out(x: 240, y: 10, name: \"out\") property(Number) out_9f8e1b\n\n\t    instance(x: 165, y: -17) add_2d3a0c root.Std_k98ojb.Math.Add {}\n\t    accumulator_9f8e1b -> add_2d3a0c.first\n\t    currentItem_2d3a0c -> add_2d3a0c.second\n\t    add_2d3a0c.result -> out_9f8e1b\n\t} -> reduce_3d8b2a.reducer\n\treduce_3d8b2a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "```midio\n\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_1f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_3e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) if_2f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 1278, y: -365) lessthanorequal_4e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1554, y: -365) if_3f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 1830, y: -365) lessthanorequal_5e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2106, y: -365) if_4f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 2382, y: -365) lessthanorequal_6e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 2658, y: -365) if_5f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 2934, y: -365) lessthanorequal_7e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3210, y: -365) if_6f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 3486, y: -365) lessthanorequal_8e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 3762, y: -365) if_7f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 4038, y: -365) lessthanorequal_9e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4314, y: -365) if_8f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 4590, y: -365) lessthanorequal_ae123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 4866, y: -365) if_9f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 5142, y: -365) lessthanorequal_be123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5418, y: -365) if_af8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 5694, y: -365) lessthanorequal_ce123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 5970, y: -365) if_bf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 6246, y: -365) lessthanorequal_de123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 6522, y: -365) if_cf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 6798, y: -365) lessthanorequal_ee123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7074, y: -365) if_df8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 7350, y: -365) lessthanorequal_fe123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 7626, y: -365) if_ef8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 7902, y: -365) lessthanorequal_0e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8178, y: -365) if_ff8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 8454, y: -365) lessthanorequal_1e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 8730, y: -365) if_gf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 8994, y: -365) lessthanorequal_2e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 9270, y: -365) if_hf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 9546, y: -365) lessthanorequal_3e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 9822, y: -365) if_if8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 10098, y: -365) lessthanorequal_4e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10374, y: -365) if_jf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 10650, y: -365) lessthanorequal_5e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 10926, y: -365) if_kf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 11202, y: -365) lessthanorequal_6e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 11478, y: -365) if_lf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 11754, y: -365) lessthanorequal_7e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 12030, y: -365) if_mf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 12306, y: -365) lessthanorequal_8e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 12582, y: -365) if_nf8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 12858, y: -365) lessthanorequal_9e123a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 13134, y: -365) if_of8d2c root.Std_k98ojb.Std.If {}\n        instance(x:"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -47) mul_1d7b3e root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1d7b3e.first\n        y_5390f5 -> mul_1d7b3e.second\n\n        instance(x: -140, y: 133) less_than_zero_ea7c12 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1d7b3e.result -> less_than_zero_ea7c12.left\n        0 -> less_than_zero_ea7c12.right\n\n        less_than_zero_ea7c12.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -140) modulo_3a4b2d root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3a4b2d.value\n        11 -> modulo_3a4b2d.divisor\n        instance(x: 350, y: -140) equal_6e2f8b root.Std_k98ojb.Logic.Equal {}\n        modulo_3a4b2d.result -> equal_6e2f8b.left\n        0 -> equal_6e2f8b.right\n        equal_6e2f8b.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 100, y: 200) replace_9a7f3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f3c.input\n        search_ai -> replace_9a7f3c.search\n        replace_ai -> replace_9a7f3c.replace\n        replace_9a7f3c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -79, y: 33) tolower_45b3a7 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 208, y: 16) equal_f3c1e2 root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_45b3a7.input\n        tolower_45b3a7.value -> equal_f3c1e2.right\n        input_ai -> equal_f3c1e2.left\n        equal_f3c1e2.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -227, y: -268) setdifference_0d5c3f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -147, y: -392) listempty_e1e5a2 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 206, y: -348) if_8c7d6f root.Std_k98ojb.Std.If {}\n        instance(x: 446, y: -268) reduce_f1a5e9 root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc * item\"\n        }\n        instance(x: 307, y: -122) listflatten_6c7f09 root.Std_k98ojb.List.Flatten {}\n        instance(x: 547, y: -122) if_e1a7d9 root.Std_k98ojb.Std.If {}\n\n        list_5fda54 -> setdifference_0d5c3f.left\n        list_5fda54 -> setdifference_0d5c3f.right\n        setdifference_0d5c3f.difference -> listflatten_6c7f09.list\n        listflatten_6c7f09.flattenedList -> reduce_f1a5e9.items\n        1 -> reduce_f1a5e9.initialValue\n        reduce_f1a5e9.result -> if_e1a7d9.value\n        listflatten_6c7f09.flattenedList -> listempty_e1e5a2.list\n        listempty_e1e5a2.isEmpty -> if_8c7d6f.predicate\n        if_8c7d6f.then -> output_cffcc2\n        1 -> if_8c7d6f.value\n        if_8c7d6f.else -> if_e1a7d9.execute\n        if_e1a7d9.then -> output_cffcc2\n        execute_19300c -> listempty_e1e5a2.execute\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -300, y: 150) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -300, y: 250) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -300, y: 350) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 420, y: -112) length_2a7f1b root.Std_k98ojb.List.Length {}\n        instance(x: 560, y: -112) modulo_eb9d4c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 730, y: -112) slice_9f1a7e root.Std_k98ojb.List.Slice {}\n        instance(x: 730, y: -56) slice_b1d4c7 root.Std_k98ojb.List.Slice {}\n        instance(x: 870, y: -112) concat_3f4a89 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2a7f1b.list\n        n_68068c -> modulo_eb9d4c.value\n        length_2a7f1b.length -> modulo_eb9d4c.divisor\n        modulo_eb9d4c.result -> slice_9f1a7e.start\n        list_48148f -> slice_9f1a7e.list\n        -1 -> slice_9f1a7e.end\n        modulo_eb9d4c.result -> slice_b1d4c7.end\n        0 -> slice_b1d4c7.start\n        list_48148f -> slice_b1d4c7.list\n        slice_9f1a7e.slice -> concat_3f4a89.left\n        slice_b1d4c7.slice -> concat_3f4a89.right\n        concat_3f4a89.concatenated -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -133) reduce_3d8b1e root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_3d8b1e.items\n        func() {\n            in(x: -54, y: 47, name: \"accumulator\") property(Number) accumulator_3f8a0b\n            in(x: -54, y: -93, name: \"current\") property(Number) current_2d6c1c\n\n            out(x: 397, y: -23, name: \"out\") property(Number) out_f3db9f\n\n            instance(x: 106, y: -45) add_2f9d09 root.Std_k98ojb.Math.Add {}\n\n            accumulator_3f8a0b -> add_2f9d09.first\n            current_2d6c1c -> add_2f9d09.second\n            add_2f9d09.result -> out_f3db9f\n        } -> reduce_3d8b1e.reducer\n\n        0 -> reduce_3d8b1e.initialValue\n        reduce_3d8b1e.output -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -108, y: -426) if_lessthan_two_f2e3d7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 158, y: -372) and_greater_than_one_e1c2a9 root.Std_k98ojb.Logic.And {}\n        instance(x: 460, y: -318) for_loop_3f5d1c root.Std_k98ojb.Std.For {}\n        instance(x: 740, y: -264) if_divisible_ea2f4b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 990, y: -210) not_divisible_5c3d7f root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> if_lessthan_two_f2e3d7.left\n        2 -> if_lessthan_two_f2e3d7.right\n\n        if_lessthan_two_f2e3d7.result -> and_greater_than_one_e1c2a9.left\n        num_5c0677 -> and_greater_than_one_e1c2a9.right\n\n        and_greater_than_one_e1c2a9.result -> for_loop_3f5d1c.trigger\n        2 -> for_loop_3f5d1c.items\n        num_5c0677 -> if_divisible_ea2f4b.value\n        for_loop_3f5d1c.item -> if_divisible_ea2f4b.divisor\n\n        if_divisible_ea2f4b.result -> not_divisible_5c3d7f.input\n\n        not_divisible_5c3d7f.output -> and_greater_than_one_e1c2a9.left\n        for_loop_3f5d1c.onItem -> and_greater_than_one_e1c2a9.execute\n\n        and_greater_than_one_e1c2a9.result -> output_c457b3\n        and_greater_than_one_e1c2a9.result -> continue_9a54bb\n\n        execute_b7b391 -> for_loop_3f5d1c.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -47) mul_f4b0e5 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_f4b0e5.first\n        y_5390f5 -> mul_f4b0e5.second\n\n        instance(x: 17, y: -121) less_than_zero_e4c1a3 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_f4b0e5.result -> less_than_zero_e4c1a3.left\n        0 -> less_than_zero_e4c1a3.right\n\n        less_than_zero_e4c1a3.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 104, y: 104) modulo_5e4b0a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5e4b0a.value\n        11 -> modulo_5e4b0a.divisor\n        instance(x: 260, y: 103) equal_f8d2c1 root.Std_k98ojb.Logic.Equal {}\n        modulo_5e4b0a.result -> equal_f8d2c1.left\n        0 -> equal_f8d2c1.right\n        equal_f8d2c1.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n    instance(x: 100, y: 100) replace_9f8a7b root.Std_k98ojb.Strings.Replace {}\n    input_ai -> replace_9f8a7b.input\n    search_ai -> replace_9f8a7b.search\n    replace_ai -> replace_9f8a7b.replace\n    replace_9f8a7b.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -70, y: 209) tolower_5c7b9a root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5c7b9a.input\n        tolower_5c7b9a.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n\tinstance(x: -208, y: -339) setdifference_6d5a6c root.Std_k98ojb.Sets.Difference {}\n\tinstance(x: -413, y: -176) flatten_3f9e1b root.Std_k98ojb.List.Flatten {}\n\tinstance(x: 206, y: -242) reduce_ba5c4d root.Std_k98ojb.Iteration.Reduce {}\n\tinstance(x: -632, y: 178) empty_7f348e root.Std_k98ojb.List.Empty {}\n\n\t1 -> setdifference_6d5a6c.left\n\tlist_5fda54 -> flatten_3f9e1b.list\n\tflatten_3f9e1b.flattenedList -> setdifference_6d5a6c.right\n\tsetdifference_6d5a6c.difference -> reduce_ba5c4d.items\n\n\tfunc() {\n\t\tin(x: -8, y: 27, name: \"accumulator\") property(Number) accumulator_e9b130\n\t\tin(x: -3, y: -27, name: \"item\") property(Number) item_67f6e5\n\t\tout(x: 47, y: 5, name: \"result\") property(Number) result_ba8c1d\n\n\t\tinstance(x: 0, y: -19) mul_3b2a61 root.Std_k98ojb.Math.Mul {}\n\t\taccumulator_e9b130 -> mul_3b2a61.first\n\t\titem_67f6e5 -> mul_3b2a61.second\n\t\tmul_3b2a61.result -> result_ba8c1d\n\t} -> reduce_ba5c4d.reducer\n\n\treduce_ba5c4d.accumulatedValue -> output_cffcc2\n\texecute_19300c -> empty_7f348e.trigger\n\tempty_7f348e.isEmpty -> continue_45190b\n}"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 94, y: 102) difference_9e5d4f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -62, y: 335) difference_7a8c23 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_9e5d4f.left\n        list2_ai -> difference_9e5d4f.right\n\n        list2_ai -> difference_7a8c23.left\n        list1_ai -> difference_7a8c23.right\n\n        instance(x: 60, y: 589) concat_9b3f4c root.Std_k98ojb.List.Concat {}\n\n        difference_9e5d4f.difference -> concat_9b3f4c.left\n        difference_7a8c23.difference -> concat_9b3f4c.right\n\n        concat_9b3f4c.outputList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -184, y: -155) length_ea1f9d root.Std_k98ojb.List.Length {}\n        instance(x: 367, y: -180) modulo_f4e3c2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 688, y: -155) slice_7a1b21 root.Std_k98ojb.List.Slice {}\n        instance(x: 688, y: -40) slice_32c32d root.Std_k98ojb.List.Slice {}\n        instance(x: 907, y: -95) concat_93e1f5 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_ea1f9d.list\n        length_ea1f9d.length -> modulo_f4e3c2.value\n        n_68068c -> modulo_f4e3c2.divisor\n        modulo_f4e3c2.result -> slice_7a1b21.start\n        list_48148f -> slice_7a1b21.list\n        -1 -> slice_7a1b21.end\n\n        modulo_f4e3c2.result -> add_b5f9d2.first\n        length_ea1f9d.length -> add_b5f9d2.second\n        instance(x: 608, y: -206) add_b5f9d2 root.Std_k98ojb.Math.Add {}\n        add_b5f9d2.result -> sub_7c43e1.first\n        modulo_f4e3c2.result -> sub_7c43e1.second\n        instance(x: 366, y: -101) sub_7c43e1 root.Std_k98ojb.Math.Sub {}\n\n        list_48148f -> slice_32c32d.list\n        0 -> slice_32c32d.start\n        sub_7c43e1.result -> slice_32c32d.end\n\n        slice_7a1b21.slice -> concat_93e1f5.left\n        slice_32c32d.slice -> concat_93e1f5.right\n        concat_93e1f5.concat -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -290, y: -145) reduce_4e8b0d root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4e8b0d.initialValue\n        list_2c62ab -> reduce_4e8b0d.items\n\n        func() {\n            in(x: -76, y: 46, name: \"acc\") property(Number) acc_5f51f7\n            in(x: -76, y: 46, name: \"item\") property(Number) item_5f51f7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) add_2f9d09 root.Std_k98ojb.Math.Add {}\n            acc_5f51f7 -> add_2f9d09.first\n            item_5f51f7 -> add_2f9d09.second\n            add_2f9d09.result -> out_d0fd24\n        } -> reduce_4e8b0d.reducer\n\n        reduce_4e8b0d.output -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) lessthanorequal_f4c1e6 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 263, y: -408) if_e1d21f root.Std_k98ojb.Std.If {}\n\tinstance(x: 567, y: -416) lessthanorequal_5a7e1c root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 903, y: -427) if_f7f4d5 root.Std_k98ojb.Std.If {}\n\tinstance(x: 1265, y: -376) lessthanorequal_57c7e1 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 1640, y: -401) if_46d95a root.Std_k98ojb.Std.If {}\n\tinstance(x: 2039, y: -376) mathexpression_e1c1e2 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(num % i == 0)\"\n\t}\n\tinstance(x: 2459, y: -376) if_8a9f9d root.Std_k98ojb.Std.If {}\n\tinstance(x: 1038, y: -137) add_a0c7e2 root.Std_k98ojb.Math.Add {}\n\tinstance(x: 1549, y: -168) for_3a8f77 root.Std_k98ojb.Std.For {}\n\n\t2 -> lessthanorequal_f4c1e6.right\n\tnum_5c0677 -> lessthanorequal_f4c1e6.left\n\tlessthanorequal_f4c1e6.result -> if_e1d21f.predicate\n\tif_e1d21f.else -> continue_9a54bb\n\texecute_b7b391 -> for_3a8f77.reset\n\tfor_3a8f77.done -> continue_9a54bb\n\t3 -> lessthanorequal_5a7e1c.right\n\tnum_5c0677 -> lessthanorequal_5a7e1c.left\n\tlessthanorequal_5a7e1c.result -> if_f7f4d5.predicate\n\tif_f7f4d5.then -> output_c457b3\n\tfor_3a8f77.item -> lessthanorequal_57c7e1.right\n\tnum_5c0677 -> lessthanorequal_57c7e1.left\n\tlessthanorequal_57c7e1.result -> if_46d95a.predicate\n\tif_46d95a.then -> for_3a8f77.next\n\tif_46d95a.else -> continue_9a54bb\n\tfor_3a8f77.index -> add_a0c7e2.first\n\t1 -> add_a0c7e2.second\n\tadd_a0c7e2.result -> mathexpression_e1c1e2.gen_1\n\tnum_5c0677 -> mathexpression_e1c1e2.gen_0\n\tmathexpression_e1c1e2.result -> if_8a9f9d.predicate\n\tif_8a9f9d.then -> output_c457b3\n\tfor_3a8f77.onItem -> if_46d95a.execute\n\tif_f7f4d5.else -> if_e1d21f.then\n\tif_e1d21f.then -> for_3a8f77.reset\n\tif_8a9f9d.else -> continue_9a54bb\n}"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -117) mul_8c2b3d root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8c2b3d.first\n\ty_5390f5 -> mul_8c2b3d.second\n\tinstance(x: -417, y: 10) less_than_zero_3a5e1f root.Std_k98ojb.Math.LessThanOrEqual {}\n\tmul_8c2b3d.result -> less_than_zero_3a5e1f.left\n\t0 -> less_than_zero_3a5e1f.right\n\tless_than_zero_3a5e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5b8a2d.value\n\t11 -> modulo_5b8a2d.divisor\n\tmodulo_5b8a2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 100) tolower_4b7f9a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 350, y: 200) isequal_6c8d2e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b7f9a.input\n        tolower_4b7f9a.value -> isequal_6c8d2e.left\n        input_ai -> isequal_6c8d2e.right\n        isequal_6c8d2e.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0 root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0.left\n\tlist2_ai -> difference_0.right\n\tdifference_0.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -150) length_123456 root.Std_k98ojb.List.Length {}\n        instance(x: 100, y: -150) modulo_789012 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 160, y: -150) sub_345678 root.Std_k98ojb.Math.Sub {}\n        instance(x: 220, y: -150) slice_901234 root.Std_k98ojb.List.Slice {}\n        instance(x: 220, y: -210) slice_567890 root.Std_k98ojb.List.Slice {}\n        instance(x: 280, y: -150) concat_135792 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_123456.list\n        length_123456.length -> modulo_789012.value\n        n_68068c -> modulo_789012.divisor\n        length_123456.length -> sub_345678.first\n        modulo_789012.result -> sub_345678.second\n        list_48148f -> slice_901234.list\n        sub_345678.result -> slice_901234.start\n        -1 -> slice_901234.end\n        list_48148f -> slice_567890.list\n        0 -> slice_567890.start\n        modulo_789012.result -> slice_567890.end\n        slice_901234.slice -> concat_135792.left\n        slice_567890.slice -> concat_135792.right\n        concat_135792.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -123) reduce_3d8b2a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b2a.items\n\t0 -> reduce_3d8b2a.initialValue\n\tfunc() {\n\t    in(x: 45, y: -17, name: \"accumulator\") property(Number) accumulator_9f8e1b\n\t    in(x: 165, y: -17, name: \"currentItem\") property(Number) currentItem_2d3a0c\n\n\t    out(x: 240, y: 10, name: \"out\") property(Number) out_9f8e1b\n\n\t    instance(x: 165, y: -17) add_2d3a0c root.Std_k98ojb.Math.Add {}\n\t    accumulator_9f8e1b -> add_2d3a0c.first\n\t    currentItem_2d3a0c -> add_2d3a0c.second\n\t    add_2d3a0c.result -> out_9f8e1b\n\t} -> reduce_3d8b2a.reducer\n\treduce_3d8b2a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e1b9a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_8d3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_8a2e5d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) for_4f1c9b root.Std_k98ojb.Std.For {}\n        instance(x: 1278, y: -365) mathexpression_4a5e1d root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1554, y: -365) if_2c7f8a root.Std_k98ojb.Std.If {}\n        instance(x: 1830, y: -365) mathexpression_2d8e1f root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i <= num)\"\n        }\n        instance(x: 2106, y: -365) add_4a7c1b root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_2e1b9a.left\n        1 -> lessthanorequal_2e1b9a.right\n        lessthanorequal_2e1b9a.result -> if_0f8d2c.predicate\n        if_0f8d2c.then -> continue_9a54bb\n        false -> output_c457b3\n\n        num_5c0677 -> lessthanorequal_8a2e5d.left\n        2 -> lessthanorequal_8a2e5d.right\n        lessthanorequal_8a2e5d.result -> if_8d3f1c.predicate\n        true -> output_c457b3\n        if_8d3f1c.then -> continue_9a54bb\n\n        2 -> add_4a7c1b.first\n        1 -> add_4a7c1b.second\n        add_4a7c1b.result -> for_4f1c9b.start\n        num_5c0677 -> mathexpression_2d8e1f.gen_0\n        for_4f1c9b.index -> mathexpression_2d8e1f.gen_1\n        mathexpression_2d8e1f.result -> if_2c7f8a.predicate\n        if_2c7f8a.then -> continue_9a54bb\n\n        num_5c0677 -> mathexpression_4a5e1d.gen_0\n        for_4f1c9b.index -> mathexpression_4a5e1d.gen_1\n        mathexpression_4a5e1d.result -> if_2c7f8a.else\n\n        false -> output_c457b3\n        true -> output_c457b3\n\n        for_4f1c9b.done -> continue_9a54bb\n        execute_b7b391 -> for_4f1c9b.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -47) mul_3e1b4c root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_3e1b4c.first\n        y_5390f5 -> mul_3e1b4c.second\n        instance(x: -147, y: 77) less_than_zero_b3d5a1 root.Std_k98ojb.Math.LessThan {}\n        mul_3e1b4c.result -> less_than_zero_b3d5a1.left\n        0 -> less_than_zero_b3d5a1.right\n        less_than_zero_b3d5a1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -140) modulo_3a4b2d root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3a4b2d.value\n        11 -> modulo_3a4b2d.divisor\n        instance(x: 350, y: -140) equal_6b3e8c root.Std_k98ojb.Logic.Equal {}\n        modulo_3a4b2d.result -> equal_6b3e8c.left\n        0 -> equal_6b3e8c.right\n        equal_6b3e8c.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 100, y: 200) replace_9a7f3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f3c.input\n        search_ai -> replace_9a7f3c.search\n        replace_ai -> replace_9a7f3c.replace\n        replace_9a7f3c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -79, y: 33) tolower_4f5a2b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 208, y: 164) equal_f2d2c3 root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4f5a2b.input\n        tolower_4f5a2b.value -> equal_f2d2c3.left\n        input_ai -> equal_f2d2c3.right\n        equal_f2d2c3.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -227, y: -268) setdifference_0c9d3e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -145, y: -396) listempty_1f2a7b root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 106, y: -396) listempty_9e4c2f root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 53, y: -268) setintersection_7d4a0e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 195, y: -396) if_e2b0f1 root.Std_k98ojb.Std.If {}\n        instance(x: 359, y: -268) flatten_47c1a5 root.Std_k98ojb.List.Flatten {}\n        instance(x: 540, y: -396) if_3f3c7d root.Std_k98ojb.Std.If {}\n        instance(x: 738, y: -268) reduce_1e1a2c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 540, y: -268) listunique_9f1a2d root.Std_k98ojb.List.Flatten {}\n\n        execute_19300c -> if_e2b0f1.execute\n        list_5fda54 -> setdifference_0c9d3e.left\n        list_5fda54 -> setintersection_7d4a0e.right\n        list_5fda54 -> listempty_1f2a7b.list\n        listunique_9f1a2d.listWithItem -> flatten_47c1a5.list\n        flatten_47c1a5.flattenedList -> reduce_1e1a2c.items\n        func() {\n            in(x: -68, y: 30, name: \"accumulator\") property(Number) accumulator_c9b3f1\n            in(x: -68, y: -47, name: \"element\") property(Number) element_58a2d7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_c9b3f1 -> mul_2f9d09.first\n            element_58a2d7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_1e1a2c.handler\n        1 -> reduce_1e1a2c.initialValue\n        reduce_1e1a2c.accumulator -> output_cffcc2\n        if_e2b0f1.then -> continue_45190b\n        if_e2b0f1.value -> output_cffcc2\n        setdifference_0c9d3e.difference -> listunique_9f1a2d.list\n        setintersection_7d4a0e.intersection -> listempty_9e4c2f.list\n        listempty_1f2a7b.isEmpty -> if_e2b0f1.predicate\n        listempty_9e4c2f.isEmpty -> if_3f3c7d.predicate\n        if_3f3c7d.then -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -300, y: 150) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -300, y: 250) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -300, y: 350) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 420, y: -112) length_2a7f1b root.Std_k98ojb.List.Length {}\n        instance(x: 560, y: -112) modulo_eb5c8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 735, y: -240) sub_1a2f3c root.Std_k98ojb.Math.Sub {}\n        instance(x: 600, y: -240) slice_2d5b9e root.Std_k98ojb.List.Slice {}\n        instance(x: 700, y: -360) slice_1a2f3c root.Std_k98ojb.List.Slice {}\n        instance(x: 800, y: -480) concat_2d5b9e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2a7f1b.list\n        n_68068c -> modulo_eb5c8d.value\n        length_2a7f1b.length -> modulo_eb5c8d.divisor\n        length_2a7f1b.length -> sub_1a2f3c.first\n        modulo_eb5c8d.result -> sub_1a2f3c.second\n        list_48148f -> slice_2d5b9e.list\n        sub_1a2f3c.result -> slice_2d5b9e.start\n        -1 -> slice_2d5b9e.end\n        list_48148f -> slice_1a2f3c.list\n        0 -> slice_1a2f3c.start\n        modulo_eb5c8d.result -> slice_1a2f3c.end\n        slice_2d5b9e.sliced -> concat_2d5b9e.left\n        slice_1a2f3c.sliced -> concat_2d5b9e.right\n        concat_2d5b9e.concatenated -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -131) reduce_3d8b1e root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_3d8b1e.items\n        func() {\n            in(x: -54, y: 47, name: \"accumulator\") property(Number) accumulator_3f9a0b\n            in(x: -123, y: 47, name: \"item\") property(Number) item_8d6c1a\n\n            out(x: 375, y: 49, name: \"out\") property(Number) out_3a1f9e\n\n            instance(x: 201, y: -14) add_4b7c2d root.Std_k98ojb.Math.Add {}\n\n            accumulator_3f9a0b -> add_4b7c2d.first\n            item_8d6c1a -> add_4b7c2d.second\n            add_4b7c2d.result -> out_3a1f9e\n        } -> reduce_3d8b1e.reducer\n\n        0 -> reduce_3d8b1e.initialValue\n        reduce_3d8b1e.accumulatedValue -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -108, y: -426) if_lessthan_two_f4e3d7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 158, y: -369) and_greater_than_one_e1c7a9 root.Std_k98ojb.Logic.And {}\n        instance(x: 209, y: -426) if_not_prime_7d53f2 root.Std_k98ojb.Std.If {}\n        instance(x: 408, y: -426) for_loop_9a1b3c root.Std_k98ojb.Std.For {}\n        instance(x: 561, y: -426) modulo_check_8e7f9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 702, y: -426) if_mod_zero_3c2b8a root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> if_lessthan_two_f4e3d7.left\n        1 -> if_lessthan_two_f4e3d7.right\n        if_lessthan_two_f4e3d7.result -> and_greater_than_one_e1c7a9.left\n\n        num_5c0677 -> modulo_check_8e7f9d.value\n        for_loop_9a1b3c.item -> modulo_check_8e7f9d.divisor\n        modulo_check_8e7f9d.result -> if_mod_zero_3c2b8a.predicate\n\n        2 -> and_greater_than_one_e1c7a9.right\n        and_greater_than_one_e1c7a9.result -> if_not_prime_7d53f2.predicate\n\n        execute_b7b391 -> for_loop_9a1b3c.reset\n        num_5c0677 -> for_loop_9a1b3c.items\n\n        Math.Floor {\n            input: Math.Div {\n                first: num_5c0677,\n                second: 2\n            }\n        } -> for_loop_9a1b3c.to\n\n        2 -> for_loop_9a1b3c.from\n\n        if_not_prime_7d53f2.execute -> for_loop_9a1b3c.next\n        for_loop_9a1b3c.onItem -> if_mod_zero_3c2b8a.execute\n\n        if_mod_zero_3c2b8a.then -> if_not_prime_7d53f2.else\n        if_mod_zero_3c2b8a.else -> continue_9a54bb\n\n        if_not_prime_7d53f2.value -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -47) mul_a2b7c1 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_a2b7c1.first\n        y_5390f5 -> mul_a2b7c1.second\n        instance(x: 84, y: -22) less_than_zero_f8e5d2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_a2b7c1.result -> less_than_zero_f8e5d2.left\n        0 -> less_than_zero_f8e5d2.right\n        less_than_zero_f8e5d2.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 104, y: 104) modulo_5f9b4a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5f9b4a.value\n        11 -> modulo_5f9b4a.divisor\n        modulo_5f9b4a.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n    instance(x: 100, y: 100) replace_9c7f3e root.Std_k98ojb.Strings.Replace {}\n    input_ai -> replace_9c7f3e.input\n    search_ai -> replace_9c7f3e.search\n    replace_ai -> replace_9c7f3e.replace\n    replace_9c7f3e.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -70, y: 209) tolower_5c7b8d root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5c7b8d.input\n        tolower_5c7b8d.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n\tinstance(x: -208, y: -339) setdifference_e1d57c root.Std_k98ojb.Sets.Difference {}\n\tinstance(x: -436, y: -146) listflatten_47a2f8 root.Std_k98ojb.List.Flatten {}\n\tinstance(x: 120, y: -384) unique_list_53e4d6 root.Std_k98ojb.Query.Filter {\n\t\twhere: \"!listContains(list, it)\"\n\t}\n\tinstance(x: 187, y: -210) listcontains_2a33f4 root.Std_k98ojb.List.Contains {}\n\tinstance(x: 570, y: -362) reduce_bf1d21 root.Std_k98ojb.Iteration.Reduce {\n\t\treducer: \"(acc * it)\"\n\t}\n\tlist_5fda54 -> listflatten_47a2f8.list\n\tlistflatten_47a2f8.listWithItem -> unique_list_53e4d6.items\n\tlistflatten_47a2f8.listWithItem -> setdifference_e1d57c.left\n\tunique_list_53e4d6.output_list -> setdifference_e1d57c.right\n\tsetdifference_e1d57c.difference -> reduce_bf1d21.items\n\treduce_bf1d21.accumulator -> output_cffcc2\n\texecute_19300c -> unique_list_53e4d6.trigger\n\tunique_list_53e4d6.item -> listcontains_2a33f4.list\n\tlistflatten_47a2f8.listWithItem -> listcontains_2a33f4.item\n\tlistcontains_2a33f4.contains -> unique_list_53e4d6.predicate\n\treduce_bf1d21.done -> continue_45190b\n}"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 94, y: 102) difference_2b5a1f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -69, y: 337) difference_4e1d2c root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_2b5a1f.left\n        list2_ai -> difference_2b5a1f.right\n\n        list2_ai -> difference_4e1d2c.left\n        list1_ai -> difference_4e1d2c.right\n\n        instance(x: 309, y: 271) concat_9e8a2f root.Std_k98ojb.List.Concat {}\n\n        difference_2b5a1f.difference -> concat_9e8a2f.left\n        difference_4e1d2c.difference -> concat_9e8a2f.right\n\n        concat_9e8a2f.outputList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -184, y: -155) length_ea8d3b root.Std_k98ojb.List.Length {}\n        instance(x: 367, y: -180) modulo_f9e8c2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 444, y: -155) sub_0f24a6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 537, y: -155) slice_402eae root.Std_k98ojb.List.Slice {}\n        instance(x: 537, y: -270) slice_aed4a6 root.Std_k98ojb.List.Slice {}\n        instance(x: 860, y: -155) concat_5d4e03 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_ea8d3b.list\n        n_68068c -> modulo_f9e8c2.value\n        length_ea8d3b.length -> modulo_f9e8c2.divisor\n        modulo_f9e8c2.result -> sub_0f24a6.second\n        length_ea8d3b.length -> sub_0f24a6.first\n        sub_0f24a6.result -> slice_402eae.start\n        list_48148f -> slice_402eae.list\n        -1 -> slice_402eae.end\n        sub_0f24a6.result -> slice_aed4a6.end\n        0 -> slice_aed4a6.start\n        list_48148f -> slice_aed4a6.list\n        slice_402eae.slice -> concat_5d4e03.left\n        slice_aed4a6.slice -> concat_5d4e03.right\n        concat_5d4e03.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -290, y: -110) reduce_19d3a1 root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_19d3a1.items\n        0 -> reduce_19d3a1.initial\n\n        func() {\n            in(x: -74, y: 55, name: \"accumulator\") property(Number) accumulator_4b8f6e\n            in(x: 20, y: 62, name: \"currentItem\") property(Number) currentItem_6a9d1c\n\n            out(x: 382, y: -107, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 156, y: 65) add_b4554f root.Std_k98ojb.Math.Add {}\n\n            accumulator_4b8f6e -> add_b4554f.first\n            currentItem_6a9d1c -> add_b4554f.second\n\n            add_b4554f.result -> out_d0fd24\n        } -> reduce_19d3a1.handler\n\n        reduce_19d3a1.accumulatedValue -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) lessthanorequal_f3c0d3 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 263, y: -159) if_e1f86e root.Std_k98ojb.Std.If {}\n\tinstance(x: 479, y: -341) lessthanorequal_70ca1a root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 285, y: -481) if_f6cd3f root.Std_k98ojb.Std.If {}\n\tinstance(x: 745, y: -162) mathexpression_09aebe root.Std_k98ojb.Math.Expression {\n\t\texpression: \"num % i == 0\"\n\t}\n\tinstance(x: 918, y: -382) if_19d99a root.Std_k98ojb.Std.If {}\n\tinstance(x: 567, y: -458) add_ae3c9b root.Std_k98ojb.Math.Add {}\n\tinstance(x: 602, y: -246) for_f11d9f root.Std_k98ojb.Std.For {}\n\n\tnum_5c0677 -> lessthanorequal_f3c0d3.left\n\t2 -> lessthanorequal_f3c0d3.right\n\tlessthanorequal_f3c0d3.result -> if_e1f86e.predicate\n\tif_e1f86e.execute -> continue_9a54bb\n\tnum_5c0677 -> lessthanorequal_70ca1a.left\n\t2 -> lessthanorequal_70ca1a.right\n\tlessthanorequal_70ca1a.result -> if_f6cd3f.predicate\n\tif_f6cd3f.execute -> continue_9a54bb\n\tnum_5c0677 -> for_f11d9f.items\n\tfor_f11d9f.onItem -> mathexpression_09aebe.execute\n\tmathexpression_09aebe.result -> if_19d99a.predicate\n\tif_19d99a.then -> continue_9a54bb\n\tnum_5c0677 -> mathexpression_09aebe.gen_0\n\tfor_f11d9f.item -> mathexpression_09aebe.gen_1\n\tif_19d99a.else -> for_f11d9f.next\n\texecute_b7b391 -> for_f11d9f.reset\n\tfor_f11d9f.done -> if_19d99a.then\n\t2 -> add_ae3c9b.first\n\tfor_f11d9f.index -> add_ae3c9b.second\n\tadd_ae3c9b.result -> for_f11d9f.items\n\tif_19d99a.else -> output_c457b3\n}"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -117) mul_8c2b3d root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8c2b3d.first\n\ty_5390f5 -> mul_8c2b3d.second\n\tinstance(x: -417, y: 10) less_than_zero_3a5e1f root.Std_k98ojb.Math.LessThanOrEqual {}\n\tmul_8c2b3d.result -> less_than_zero_3a5e1f.left\n\t0 -> less_than_zero_3a5e1f.right\n\tless_than_zero_3a5e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5b8a2d.value\n\t11 -> modulo_5b8a2d.divisor\n\tmodulo_5b8a2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 100) tolower_4b7f9a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 350, y: 200) isequal_6c8d2e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b7f9a.input\n        tolower_4b7f9a.value -> isequal_6c8d2e.left\n        input_ai -> isequal_6c8d2e.right\n        isequal_6c8d2e.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0 root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0.left\n\tlist2_ai -> difference_0.right\n\tdifference_0.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -150) length_123456 root.Std_k98ojb.List.Length {}\n        instance(x: 100, y: -150) modulo_789012 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 160, y: -150) sub_345678 root.Std_k98ojb.Math.Sub {}\n        instance(x: 220, y: -150) slice_901234 root.Std_k98ojb.List.Slice {}\n        instance(x: 220, y: -210) slice_567890 root.Std_k98ojb.List.Slice {}\n        instance(x: 280, y: -150) concat_135792 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_123456.list\n        length_123456.length -> modulo_789012.value\n        n_68068c -> modulo_789012.divisor\n        length_123456.length -> sub_345678.first\n        modulo_789012.result -> sub_345678.second\n        list_48148f -> slice_901234.list\n        sub_345678.result -> slice_901234.start\n        -1 -> slice_901234.end\n        list_48148f -> slice_567890.list\n        0 -> slice_567890.start\n        modulo_789012.result -> slice_567890.end\n        slice_901234.slice -> concat_135792.left\n        slice_567890.slice -> concat_135792.right\n        concat_135792.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -123) reduce_3d8b2a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b2a.items\n\t0 -> reduce_3d8b2a.initialValue\n\tfunc() {\n\t    in(x: 45, y: -17, name: \"accumulator\") property(Number) accumulator_9f8e1b\n\t    in(x: 165, y: -17, name: \"currentItem\") property(Number) currentItem_2d3a0c\n\n\t    out(x: 240, y: 10, name: \"out\") property(Number) out_9f8e1b\n\n\t    instance(x: 165, y: -17) add_2d3a0c root.Std_k98ojb.Math.Add {}\n\t    accumulator_9f8e1b -> add_2d3a0c.first\n\t    currentItem_2d3a0c -> add_2d3a0c.second\n\t    add_2d3a0c.result -> out_9f8e1b\n\t} -> reduce_3d8b2a.reducer\n\treduce_3d8b2a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_0f8d2c root.Std_k98ojb.Std.If {}\n        instance(x: 174, y: -365) lessthanorequal_2e1b9a root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 450, y: -365) if_8d3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 726, y: -365) lessthanorequal_8a2e5d root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 1002, y: -365) for_4f1c9b root.Std_k98ojb.Std.For {}\n        instance(x: 1278, y: -365) mathexpression_4a5e1d root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1554, y: -365) if_2c7f8a root.Std_k98ojb.Std.If {}\n        instance(x: 1830, y: -365) mathexpression_2d8e1f root.Std_k98ojb.Math.Expression {\n            expression: \"(i * i <= num)\"\n        }\n        instance(x: 2106, y: -365) add_4a7c1b root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_2e1b9a.left\n        1 -> lessthanorequal_2e1b9a.right\n        lessthanorequal_2e1b9a.result -> if_0f8d2c.predicate\n        if_0f8d2c.then -> continue_9a54bb\n        false -> output_c457b3\n\n        num_5c0677 -> lessthanorequal_8a2e5d.left\n        2 -> lessthanorequal_8a2e5d.right\n        lessthanorequal_8a2e5d.result -> if_8d3f1c.predicate\n        true -> output_c457b3\n        if_8d3f1c.then -> continue_9a54bb\n\n        2 -> add_4a7c1b.first\n        1 -> add_4a7c1b.second\n        add_4a7c1b.result -> for_4f1c9b.start\n        num_5c0677 -> mathexpression_2d8e1f.gen_0\n        for_4f1c9b.index -> mathexpression_2d8e1f.gen_1\n        mathexpression_2d8e1f.result -> if_2c7f8a.predicate\n        if_2c7f8a.then -> continue_9a54bb\n\n        num_5c0677 -> mathexpression_4a5e1d.gen_0\n        for_4f1c9b.index -> mathexpression_4a5e1d.gen_1\n        mathexpression_4a5e1d.result -> if_2c7f8a.else\n\n        false -> output_c457b3\n        true -> output_c457b3\n\n        for_4f1c9b.done -> continue_9a54bb\n        execute_b7b391 -> for_4f1c9b.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -47) mul_3e1b4c root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_3e1b4c.first\n        y_5390f5 -> mul_3e1b4c.second\n        instance(x: -147, y: 77) less_than_zero_b3d5a1 root.Std_k98ojb.Math.LessThan {}\n        mul_3e1b4c.result -> less_than_zero_b3d5a1.left\n        0 -> less_than_zero_b3d5a1.right\n        less_than_zero_b3d5a1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -140) modulo_3a4b2d root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3a4b2d.value\n        11 -> modulo_3a4b2d.divisor\n        instance(x: 350, y: -140) equal_6b3e8c root.Std_k98ojb.Logic.Equal {}\n        modulo_3a4b2d.result -> equal_6b3e8c.left\n        0 -> equal_6b3e8c.right\n        equal_6b3e8c.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 100, y: 200) replace_9a7f3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7f3c.input\n        search_ai -> replace_9a7f3c.search\n        replace_ai -> replace_9a7f3c.replace\n        replace_9a7f3c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -79, y: 33) tolower_4f5a2b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 208, y: 164) equal_f2d2c3 root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4f5a2b.input\n        tolower_4f5a2b.value -> equal_f2d2c3.left\n        input_ai -> equal_f2d2c3.right\n        equal_f2d2c3.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -227, y: -268) setdifference_0c9d3e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -145, y: -396) listempty_1f2a7b root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 106, y: -396) listempty_9e4c2f root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 53, y: -268) setintersection_7d4a0e root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 195, y: -396) if_e2b0f1 root.Std_k98ojb.Std.If {}\n        instance(x: 359, y: -268) flatten_47c1a5 root.Std_k98ojb.List.Flatten {}\n        instance(x: 540, y: -396) if_3f3c7d root.Std_k98ojb.Std.If {}\n        instance(x: 738, y: -268) reduce_1e1a2c root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 540, y: -268) listunique_9f1a2d root.Std_k98ojb.List.Flatten {}\n\n        execute_19300c -> if_e2b0f1.execute\n        list_5fda54 -> setdifference_0c9d3e.left\n        list_5fda54 -> setintersection_7d4a0e.right\n        list_5fda54 -> listempty_1f2a7b.list\n        listunique_9f1a2d.listWithItem -> flatten_47c1a5.list\n        flatten_47c1a5.flattenedList -> reduce_1e1a2c.items\n        func() {\n            in(x: -68, y: 30, name: \"accumulator\") property(Number) accumulator_c9b3f1\n            in(x: -68, y: -47, name: \"element\") property(Number) element_58a2d7\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_c9b3f1 -> mul_2f9d09.first\n            element_58a2d7 -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_1e1a2c.handler\n        1 -> reduce_1e1a2c.initialValue\n        reduce_1e1a2c.accumulator -> output_cffcc2\n        if_e2b0f1.then -> continue_45190b\n        if_e2b0f1.value -> output_cffcc2\n        setdifference_0c9d3e.difference -> listunique_9f1a2d.list\n        setintersection_7d4a0e.intersection -> listempty_9e4c2f.list\n        listempty_1f2a7b.isEmpty -> if_e2b0f1.predicate\n        listempty_9e4c2f.isEmpty -> if_3f3c7d.predicate\n        if_3f3c7d.then -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -300, y: 150) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -300, y: 250) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -300, y: 350) concat_1 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 420, y: -112) length_2a7f1b root.Std_k98ojb.List.Length {}\n        instance(x: 560, y: -112) modulo_eb5c8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 735, y: -240) sub_1a2f3c root.Std_k98ojb.Math.Sub {}\n        instance(x: 600, y: -240) slice_2d5b9e root.Std_k98ojb.List.Slice {}\n        instance(x: 700, y: -360) slice_1a2f3c root.Std_k98ojb.List.Slice {}\n        instance(x: 800, y: -480) concat_2d5b9e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2a7f1b.list\n        n_68068c -> modulo_eb5c8d.value\n        length_2a7f1b.length -> modulo_eb5c8d.divisor\n        length_2a7f1b.length -> sub_1a2f3c.first\n        modulo_eb5c8d.result -> sub_1a2f3c.second\n        list_48148f -> slice_2d5b9e.list\n        sub_1a2f3c.result -> slice_2d5b9e.start\n        -1 -> slice_2d5b9e.end\n        list_48148f -> slice_1a2f3c.list\n        0 -> slice_1a2f3c.start\n        modulo_eb5c8d.result -> slice_1a2f3c.end\n        slice_2d5b9e.sliced -> concat_2d5b9e.left\n        slice_1a2f3c.sliced -> concat_2d5b9e.right\n        concat_2d5b9e.concatenated -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -131) reduce_3d8b1e root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_3d8b1e.items\n        func() {\n            in(x: -54, y: 47, name: \"accumulator\") property(Number) accumulator_3f9a0b\n            in(x: -123, y: 47, name: \"item\") property(Number) item_8d6c1a\n\n            out(x: 375, y: 49, name: \"out\") property(Number) out_3a1f9e\n\n            instance(x: 201, y: -14) add_4b7c2d root.Std_k98ojb.Math.Add {}\n\n            accumulator_3f9a0b -> add_4b7c2d.first\n            item_8d6c1a -> add_4b7c2d.second\n            add_4b7c2d.result -> out_3a1f9e\n        } -> reduce_3d8b1e.reducer\n\n        0 -> reduce_3d8b1e.initialValue\n        reduce_3d8b1e.accumulatedValue -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -108, y: -426) if_lessthan_two_f4e3d7 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 158, y: -369) and_greater_than_one_e1c7a9 root.Std_k98ojb.Logic.And {}\n        instance(x: 209, y: -426) if_not_prime_7d53f2 root.Std_k98ojb.Std.If {}\n        instance(x: 408, y: -426) for_loop_9a1b3c root.Std_k98ojb.Std.For {}\n        instance(x: 561, y: -426) modulo_check_8e7f9d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 702, y: -426) if_mod_zero_3c2b8a root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> if_lessthan_two_f4e3d7.left\n        1 -> if_lessthan_two_f4e3d7.right\n        if_lessthan_two_f4e3d7.result -> and_greater_than_one_e1c7a9.left\n\n        num_5c0677 -> modulo_check_8e7f9d.value\n        for_loop_9a1b3c.item -> modulo_check_8e7f9d.divisor\n        modulo_check_8e7f9d.result -> if_mod_zero_3c2b8a.predicate\n\n        2 -> and_greater_than_one_e1c7a9.right\n        and_greater_than_one_e1c7a9.result -> if_not_prime_7d53f2.predicate\n\n        execute_b7b391 -> for_loop_9a1b3c.reset\n        num_5c0677 -> for_loop_9a1b3c.items\n\n        Math.Floor {\n            input: Math.Div {\n                first: num_5c0677,\n                second: 2\n            }\n        } -> for_loop_9a1b3c.to\n\n        2 -> for_loop_9a1b3c.from\n\n        if_not_prime_7d53f2.execute -> for_loop_9a1b3c.next\n        for_loop_9a1b3c.onItem -> if_mod_zero_3c2b8a.execute\n\n        if_mod_zero_3c2b8a.then -> if_not_prime_7d53f2.else\n        if_mod_zero_3c2b8a.else -> continue_9a54bb\n\n        if_not_prime_7d53f2.value -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -68, y: -47) mul_a3b0e7 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_a3b0e7.first\n        y_5390f5 -> mul_a3b0e7.second\n\n        instance(x: 154, y: -45) less_than_zero_b3c9a1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_a3b0e7.result -> less_than_zero_b3c9a1.left\n        0 -> less_than_zero_b3c9a1.right\n\n        less_than_zero_b3c9a1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 104, y: 104) modulo_5f9b4a root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5f9b4a.value\n        11 -> modulo_5f9b4a.divisor\n        modulo_5f9b4a.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n    instance(x: 100, y: 100) replace_9c7f3e root.Std_k98ojb.Strings.Replace {}\n    input_ai -> replace_9c7f3e.input\n    search_ai -> replace_9c7f3e.search\n    replace_ai -> replace_9c7f3e.replace\n    replace_9c7f3e.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -70, y: 209) tolower_5c7b8d root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5c7b8d.input\n        tolower_5c7b8d.output -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n\tinstance(x: -208, y: -339) setdifference_e1d57c root.Std_k98ojb.Sets.Difference {}\n\tinstance(x: -436, y: -146) listflatten_47a2f8 root.Std_k98ojb.List.Flatten {}\n\tinstance(x: 120, y: -384) unique_list_53e4d6 root.Std_k98ojb.Query.Filter {\n\t\twhere: \"!listContains(list, it)\"\n\t}\n\tinstance(x: 187, y: -210) listcontains_2a3e8f root.Std_k98ojb.List.Contains {}\n\tinstance(x: 579, y: -466) reduce_bca4d9 root.Std_k98ojb.Iteration.Reduce {\n\t\treducer: \"acc * it\"\n\t}\n\tlist_5fda54 -> unique_list_53e4d6.items\n\tlist_5fda54 -> listflatten_47a2f8.list\n\tlistflatten_47a2f8.listWithItem -> setdifference_e1d57c.left\n\tlist_5fda54 -> setdifference_e1d57c.right\n\tunique_list_53e4d6.output_list -> listcontains_2a3e8f.list\n\tunique_list_53e4d6.item -> listcontains_2a3e8f.item\n\tlistcontains_2a3e8f.contains -> unique_list_53e4d6.predicate\n\tunique_list_53e4d6.output_list -> reduce_bca4d9.items\n\treduce_bca4d9.result -> output_cffcc2\n\texecute_19300c -> unique_list_53e4d6.execute\n\tunique_list_53e4d6.done -> continue_45190b\n}"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 94, y: 102) difference_2b5a1f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -69, y: 337) difference_4e1d2c root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_2b5a1f.left\n        list2_ai -> difference_2b5a1f.right\n\n        list2_ai -> difference_4e1d2c.left\n        list1_ai -> difference_4e1d2c.right\n\n        instance(x: 309, y: 271) concat_9e8a2f root.Std_k98ojb.List.Concat {}\n\n        difference_2b5a1f.difference -> concat_9e8a2f.left\n        difference_4e1d2c.difference -> concat_9e8a2f.right\n\n        concat_9e8a2f.outputList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -184, y: -155) length_ea8d3b root.Std_k98ojb.List.Length {}\n        instance(x: 367, y: -180) modulo_f9e8c2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 444, y: -155) sub_0f24a6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 537, y: -155) slice_402eae root.Std_k98ojb.List.Slice {}\n        instance(x: 537, y: -270) slice_aed9d6 root.Std_k98ojb.List.Slice {}\n        instance(x: 721, y: -215) concat_0f4e91 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_ea8d3b.list\n        n_68068c -> modulo_f9e8c2.value\n        length_ea8d3b.length -> modulo_f9e8c2.divisor\n        modulo_f9e8c2.result -> sub_0f24a6.second\n        length_ea8d3b.length -> sub_0f24a6.first\n        list_48148f -> slice_402eae.list\n        sub_0f24a6.result -> slice_402eae.start\n        -1 -> slice_402eae.end\n        list_48148f -> slice_aed9d6.list\n        0 -> slice_aed9d6.start\n        sub_0f24a6.result -> slice_aed9d6.end\n        slice_402eae.slice -> concat_0f4e91.right\n        slice_aed9d6.slice -> concat_0f4e91.left\n        concat_0f4e91.output_list -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -290, y: -110) reduce_19d3a1 root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_19d3a1.items\n        0 -> reduce_19d3a1.initial\n\n        func() {\n            in(x: -74, y: 55, name: \"accumulator\") property(Number) accumulator_4b8f6e\n            in(x: 20, y: 62, name: \"currentItem\") property(Number) currentItem_6a9d1c\n\n            out(x: 382, y: -107, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 156, y: 65) add_b4554f root.Std_k98ojb.Math.Add {}\n\n            accumulator_4b8f6e -> add_b4554f.first\n            currentItem_6a9d1c -> add_b4554f.second\n\n            add_b4554f.result -> out_d0fd24\n        } -> reduce_19d3a1.handler\n\n        reduce_19d3a1.accumulatedValue -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) lessthanorequal_f3c0d3 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 263, y: -159) if_e1f86e root.Std_k98ojb.Std.If {}\n\tinstance(x: 479, y: -341) lessthanorequal_70ecdb root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 254, y: -514) if_d3a9e6 root.Std_k98ojb.Std.If {}\n\tinstance(x: 745, y: -446) mathexpression_07bb0f root.Std_k98ojb.Math.Expression {\n\t\texpression: \"sqrt(num)\"\n\t}\n\tinstance(x: 921, y: -306) for_e0d9f1 root.Std_k98ojb.Std.For {}\n\tinstance(x: 1457, y: -287) mathexpression_3a67e8 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(num % i == 0)\"\n\t}\n\tinstance(x: 1626, y: -439) if_9c6d53 root.Std_k98ojb.Std.If {}\n\tnum_5c0677 -> lessthanorequal_f3c0d3.left\n\t2 -> lessthanorequal_f3c0d3.right\n\tlessthanorequal_f3c0d3.result -> if_e1f86e.predicate\n\tif_e1f86e.then -> continue_9a54bb\n\tnum_5c0677 -> lessthanorequal_70ecdb.left\n\t2 -> lessthanorequal_70ecdb.right\n\tlessthanorequal_70ecdb.result -> if_d3a9e6.predicate\n\tif_d3a9e6.then -> continue_9a54bb\n\tnum_5c0677 -> mathexpression_07bb0f.gen_0\n\tmathexpression_07bb0f.result -> for_e0d9f1.to\n\t1 -> for_e0d9f1.from\n\tfor_e0d9f1.item -> mathexpression_3a67e8.gen_1\n\tnum_5c0677 -> mathexpression_3a67e8.gen_0\n\tmathexpression_3a67e8.result -> if_9c6d53.predicate\n\tif_9c6d53.then -> continue_9a54bb\n\tfor_e0d9f1.done -> output_c457b3\n\tif_d3a9e6.else -> for_e0d9f1.reset\n\texecute_b7b391 -> if_e1f86e.execute\n\tif_e1f86e.else -> if_d3a9e6.execute\n\tfor_e0d9f1.onItem -> if_9c6d53.execute\n\tif_9c6d53.else -> for_e0d9f1.next\n}"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -117) mul_8d7b0c root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8d7b0c.first\n\ty_5390f5 -> mul_8d7b0c.second\n\tinstance(x: -41, y: 11) less_than_zero_3a2e1f root.Std_k98ojb.Math.LessThan {}\n\tmul_8d7b0c.result -> less_than_zero_3a2e1f.left\n\t0 -> less_than_zero_3a2e1f.right\n\tless_than_zero_3a2e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5a3b9d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5a3b9d.value\n\t11 -> modulo_5a3b9d.divisor\n\tmodulo_5a3b9d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9b7f8a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9b7f8a.input\n        search_ai -> replace_9b7f8a.search\n        replace_ai -> replace_9b7f8a.replace\n        replace_9b7f8a.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 100) tolower_4b7f9a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 350, y: 200) isequal_6c8d2e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b7f9a.input\n        tolower_4b7f9a.value -> isequal_6c8d2e.left\n        input_ai -> isequal_6c8d2e.right\n        isequal_6c8d2e.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0a5b3c root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0a5b3c.left\n\tlist2_ai -> difference_0a5b3c.right\n\tdifference_0a5b3c.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -114) length_4a2b1f root.Std_k98ojb.List.Length {}\n        instance(x: 657, y: -114) modulo_2d8c3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 900, y: -114) slice_1a5f9c root.Std_k98ojb.List.Slice {}\n        instance(x: 900, y: -64) slice_2a5f9d root.Std_k98ojb.List.Slice {}\n        instance(x: 1143, y: -114) concat_3a5f9e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4a2b1f.list\n        n_68068c -> modulo_2d8c3e.value\n        length_4a2b1f.length -> modulo_2d8c3e.divisor\n        modulo_2d8c3e.result -> slice_1a5f9c.start\n        list_48148f -> slice_1a5f9c.list\n        -1 -> slice_1a5f9c.end\n        modulo_2d8c3e.result -> slice_2a5f9d.end\n        0 -> slice_2a5f9d.start\n        list_48148f -> slice_2a5f9d.list\n        slice_1a5f9c.slice -> concat_3a5f9e.left\n        slice_2a5f9d.slice -> concat_3a5f9e.right\n        concat_3a5f9e.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -123) reduce_3d8b2a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b2a.items\n\t0 -> reduce_3d8b2a.initialValue\n\tfunc() {\n\t    in(x: 45, y: -17, name: \"accumulator\") property(Number) accumulator_9f8e1b\n\t    in(x: 165, y: -17, name: \"currentItem\") property(Number) currentItem_2d3a0c\n\n\t    out(x: 240, y: 10, name: \"out\") property(Number) out_9f8e1b\n\n\t    instance(x: 165, y: -17) add_2d3a0c root.Std_k98ojb.Math.Add {}\n\t    accumulator_9f8e1b -> add_2d3a0c.first\n\t    currentItem_2d3a0c -> add_2d3a0c.second\n\t    add_2d3a0c.result -> out_9f8e1b\n\t} -> reduce_3d8b2a.reducer\n\treduce_3d8b2a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 124, y: -365) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 304, y: -365) if_7e1a62 root.Std_k98ojb.Std.If {}\n        instance(x: 504, y: -365) lessthanorequal_9fba8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 704, y: -365) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: -365) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1224, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1424, y: -365) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.else -> lessthanorequal_9fba8c.left\n\n        num_5c0677 -> lessthanorequal_9fba8c.right\n        lessthanorequal_9fba8c.result -> if_7e1a62.predicate\n        if_7e1a62.then -> continue_9a54bb\n        if_7e1a62.else -> for_8cb3f6.reset\n\n        2 -> add_b4554f.first\n        num_5c0677 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.to\n\n        2 -> for_8cb3f6.from\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        num_5c0677 -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> output_c457b3.set(true)\n        execute_b7b391 -> if_07b8c7.execute\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -47) mul_1d7b34 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1d7b34.first\n        y_5390f5 -> mul_1d7b34.second\n\n        instance(x: -140, y: 133) less_than_zero_e1c9a7 root.Std_k98ojb.Math.LessThan {}\n        mul_1d7b34.result -> less_than_zero_e1c9a7.left\n        0 -> less_than_zero_e1c9a7.right\n\n        less_than_zero_e1c9a7.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -145) modulo_3d4a1b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3d4a1b.value\n        11 -> modulo_3d4a1b.divisor\n        instance(x: 360, y: -150) equal_b2a9f8 root.Std_k98ojb.Logic.Equal {}\n        modulo_3d4a1b.result -> equal_b2a9f8.left\n        0 -> equal_b2a9f8.right\n        equal_b2a9f8.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 107, y: 198) replace_3f8a0c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3f8a0c.input\n        search_ai -> replace_3f8a0c.search\n        replace_ai -> replace_3f8a0c.replace\n        replace_3f8a0c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n\tinstance(x: 221, y: 174) tolower_5f3d8a root.Std_k98ojb.Strings.ToLower {}\n\tinput_ai -> tolower_5f3d8a.input\n\ttolower_5f3d8a.value -> output_ai\n}"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -227, y: -268) setdifference_0d5c3f root.Std_k98ojb.Sets.Difference {}\n        instance(x: -147, y: -392) listempty_f2e5a8 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 206, y: -354) if_8d6c4f root.Std_k98ojb.Std.If {}\n        instance(x: 117, y: -128) reduce_f3a2e7 root.Std_k98ojb.Iteration.Reduce {\n            handler: func() {\n                in(x: -105, y: 46, name: \"acc\") property(Number) acc_8c5f4d\n                in(x: -110, y: 123, name: \"item\") property(Number) item_7e9b8a\n\n                out(x: 295, y: 96, name: \"out\") property(Number) out_e0c2f1\n\n                instance(x: 44, y: -11) mul_3d2c3f root.Std_k98ojb.Math.Mul {}\n                acc_8c5f4d -> mul_3d2c3f.first\n                item_7e9b8a -> mul_3d2c3f.second\n                mul_3d2c3f.result -> out_e0c2f1\n            }\n        }\n        instance(x: 62, y: -545) listflatten_f1d2c8 root.Std_k98ojb.List.Flatten {}\n        instance(x: 178, y: -617) listconcat_3e0a7f root.Std_k98ojb.List.Concat {}\n\n        1 -> reduce_f3a2e7.start\n        list_5fda54 -> listflatten_f1d2c8.list\n        listflatten_f1d2c8.flattenedList -> setdifference_0d5c3f.left\n        listflatten_f1d2c8.flattenedList -> setdifference_0d5c3f.right\n        setdifference_0d5c3f.difference -> reduce_f3a2e7.items\n        reduce_f3a2e7.result -> output_cffcc2\n        execute_19300c -> listflatten_f1d2c8.execute\n        reduce_f3a2e7.done -> continue_45190b\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -367, y: 292) difference_15a3d1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -368, y: 402) difference_4c3f12 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_15a3d1.left\n        list2_ai -> difference_15a3d1.right\n\n        list2_ai -> difference_4c3f12.left\n        list1_ai -> difference_4c3f12.right\n\n        instance(x: 67, y: 349) concat_8b9e0a root.Std_k98ojb.List.Concat {}\n\n        difference_15a3d1.difference -> concat_8b9e0a.left\n        difference_4c3f12.difference -> concat_8b9e0a.right\n\n        concat_8b9e0a.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 420, y: -210) length_2a7e5b root.Std_k98ojb.List.Length {}\n        instance(x: 620, y: -210) modulo_2c9f3d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 420, y: -10) slice_2a7e5b root.Std_k98ojb.List.Slice {}\n        instance(x: 620, y: -10) slice_2c9f3d root.Std_k98ojb.List.Slice {}\n        instance(x: 820, y: -10) concat_2a7e5b root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2a7e5b.list\n        n_68068c -> modulo_2c9f3d.value\n        length_2a7e5b.length -> modulo_2c9f3d.divisor\n\n        modulo_2c9f3d.result -> slice_2a7e5b.start\n        list_48148f -> slice_2a7e5b.list\n\n        modulo_2c9f3d.result -> slice_2c9f3d.end\n        0 -> slice_2c9f3d.start\n        list_48148f -> slice_2c9f3d.list\n\n        slice_2a7e5b.slice -> concat_2a7e5b.left\n        slice_2c9f3d.slice -> concat_2a7e5b.right\n\n        concat_2a7e5b.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -133) reduce_3d8b1e root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_3d8b1e.items\n        func() {\n            in(x: -54, y: 47, name: \"accumulator\") property(Number) accumulator_3f9a0b\n            in(x: -125, y: -25, name: \"current\") property(Number) current_8d6c9e\n\n            out(x: 209, y: 34, name: \"out\") property(Number) out_27f8a5\n\n            instance(x: 129, y: 12) add_f8b3d9 root.Std_k98ojb.Math.Add {}\n\n            accumulator_3f9a0b -> add_f8b3d9.first\n            current_8d6c9e -> add_f8b3d9.second\n            add_f8b3d9.result -> out_27f8a5\n        } -> reduce_3d8b1e.reducer\n\n        reduce_3d8b1e.output_list -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -114, y: -82) lessthanorequal_6d4c8f root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 73, y: -205) if_e23b8e root.Std_k98ojb.Std.If {}\n        instance(x: 179, y: -196) lessthanorequal_24a5d9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 303, y: -179) if_e6c2e8 root.Std_k98ojb.Std.If {}\n        instance(x: 424, y: -214) mathexpression_2a5d3c root.Std_k98ojb.Math.Expression {\n            expression: \"sqrt(n)\"\n        }\n        instance(x: 567, y: -178) for_0f42e7 root.Std_k98ojb.Std.For {}\n        instance(x: 675, y: -328) mathexpression_e3c7d9 root.Std_k98ojb.Math.Expression {\n            expression: \"n % i == 0\"\n        }\n        instance(x: 1043, y: -264) if_4a62e7 root.Std_k98ojb.Std.If {}\n        instance(x: 1252, y: -335) and_a2f4c7 root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthanorequal_6d4c8f.left\n        1 -> lessthanorequal_6d4c8f.right\n        lessthanorequal_6d4c8f.result -> if_e23b8e.predicate\n        execute_b7b391 -> if_e23b8e.execute\n\n        num_5c0677 -> lessthanorequal_24a5d9.left\n        3 -> lessthanorequal_24a5d9.right\n        lessthanorequal_24a5d9.result -> if_e6c2e8.predicate\n        if_e23b8e.else -> if_e6c2e8.execute\n\n        num_5c0677 -> mathexpression_2a5d3c.gen_0\n        mathexpression_2a5d3c.result -> for_0f42e7.items\n\n        1 -> for_0f42e7.from\n        2 -> for_0f42e7.to\n        for_0f42e7.item -> mathexpression_e3c7d9.gen_1\n        num_5c0677 -> mathexpression_e3c7d9.gen_0\n        mathexpression_e3c7d9.result -> if_4a62e7.predicate\n        for_0f42e7.onItem -> if_4a62e7.execute\n\n        if_4a62e7.else -> continue_9a54bb\n        false -> if_4a62e7.then\n\n        num_5c0677 -> mathexpression_e3c7d9.gen_1\n        for_0f42e7.item -> add_2b8d4f.first\n        2 -> add_2b8d4f.second\n        add_2b8d4f.result -> mathexpression_e3c7d9.gen_0\n\n        if_e6c2e8.then -> output_c457b3\n        true -> if_e6c2e8.else\n\n        for_0f42e7.done -> continue_9a54bb\n        if_4a62e7.value -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -664, y: -187) mul_a3b7c8 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_a3b7c8.first\n        y_5390f5 -> mul_a3b7c8.second\n\n        instance(x: -42, y: -156) less_than_zero_b4d9a1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        0 -> less_than_zero_b4d9a1.right\n        mul_a3b7c8.result -> less_than_zero_b4d9a1.left\n\n        less_than_zero_b4d9a1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 165, y: 145) modulo_45a8d9 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_45a8d9.value\n        11 -> modulo_45a8d9.divisor\n        modulo_45a8d9.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinput_ai -> Strings.Replace.input\n\tsearch_ai -> Strings.Replace.search\n\treplace_ai -> Strings.Replace.replace\n\tStrings.Replace.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -276, y: 310) tolower_2f4d5a root.Std_k98ojb.Strings.ToLower {}\n\tinput_ai -> tolower_2f4d5a.input\n\ttolower_2f4d5a.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n    instance(x: 223, y: -166) flatten_9d6c9a root.Std_k98ojb.List.Flatten {}\n    instance(x: 506, y: -43) reduce_a7e23f root.Std_k98ojb.Iteration.Reduce {\n        handler: func() {\n            in(x: -148, y: -184, name: \"acc\") property(Number) acc_9c2d87\n            in(x: 660, y: -315, name: \"val\") property(Number) val_e38e5b\n\n            out(x: 622, y: 14, name: \"out\") property(Number) out_c3f858\n\n            instance(x: 147, y: 40) mul_93c1a9 root.Std_k98ojb.Math.Mul {}\n            acc_9c2d87 -> mul_93c1a9.first\n            val_e38e5b -> mul_93c1a9.second\n            mul_93c1a9.result -> out_c3f858\n        }\n    }\n    instance(x: 406, y: -217) unique_b02e6f root.Std_k98ojb.Iteration.Filter {\n        handler: func() {\n            in(x: 169, y: -171, name: \"element\") property(Number) element_5d3b9c\n            in(x: 424, y: -180, name: \"context\") property(List) context_bf4a9e\n\n            out(x: 654, y: 25, name: \"out\") property(Bool) out_f7d32f\n\n            instance(x: 204, y: -118) contains_8694c1 root.Std_k98ojb.List.Contains {}\n            element_5d3b9c -> contains_8694c1.item\n            context_bf4a9e -> contains_8694c1.list\n            instance(x: 208, y: -57) not_c1b649 root.Std_k98ojb.Logic.Not {}\n            contains_8694c1.result -> not_c1b649.in\n            not_c1b649.out -> out_f7d32f\n        }\n    }\n    1 -> reduce_a7e23f.initialValue\n    list_5fda54 -> unique_b02e6f.items\n    unique_b02e6f.context -> unique_b02e6f.handler.gen_1\n    unique_b02e6f.filteredItems -> flatten_9d6c9a.list\n    flatten_9d6c9a.result -> reduce_a7e23f.items\n    execute_19300c -> unique_b02e6f.execute\n    reduce_a7e23f.out -> output_cffcc2\n    continue_45190b -> flatten_9d6c9a.continue\n}"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 34, y: 196) difference_7b1f0a root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_7b1f0a.left\n        list2_ai -> difference_7b1f0a.right\n\n        instance(x: -35, y: 446) difference_f6c3e9 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_f6c3e9.left\n        list1_ai -> difference_f6c3e9.right\n\n        instance(x: 307, y: 351) concat_4f3d0a root.Std_k98ojb.List.Concat {}\n        difference_7b1f0a.difference -> concat_4f3d0a.left\n        difference_f6c3e9.difference -> concat_4f3d0a.right\n\n        concat_4f3d0a.concatenated -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -26, y: -148) length_b1f7d7 root.Std_k98ojb.List.Length {}\n        instance(x: 85, y: -241) modulo_f8e4b9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 360, y: -239) sub_9f2b79 root.Std_k98ojb.Math.Sub {}\n        instance(x: 550, y: -137) slice_1b1e6d root.Std_k98ojb.List.Slice {}\n        instance(x: 475, y: -358) slice_4c1b2a root.Std_k98ojb.List.Slice {}\n        instance(x: 657, y: -252) concat_c7f8a9 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_b1f7d7.list\n        length_b1f7d7.length -> modulo_f8e4b9.value\n        n_68068c -> modulo_f8e4b9.divisor\n        length_b1f7d7.length -> sub_9f2b79.first\n        modulo_f8e4b9.result -> sub_9f2b79.second\n        list_48148f -> slice_1b1e6d.list\n        modulo_f8e4b9.result -> slice_1b1e6d.start\n        -1 -> slice_1b1e6d.end\n        list_48148f -> slice_4c1b2a.list\n        0 -> slice_4c1b2a.start\n        sub_9f2b79.result -> slice_4c1b2a.end\n        slice_4c1b2a.sliced -> concat_c7f8a9.left\n        slice_1b1e6d.sliced -> concat_c7f8a9.right\n        concat_c7f8a9.concatenated -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -340, y: 195) reduce_f8e5b1 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -273, y: 22, name: \"accumulator\") property(Number) accumulator_6d7a1c\n            in(x: -404, y: -25, name: \"item\") property(Number) item_d2b9f8\n\n            out(x: 321, y: -37, name: \"result\") property(Number) result_e3f6a9\n\n            instance(x: 83, y: -43) add_b9c5e0 root.Std_k98ojb.Math.Add {}\n            accumulator_6d7a1c -> add_b9c5e0.first\n            item_d2b9f8 -> add_b9c5e0.second\n            add_b9c5e0.result -> result_e3f6a9\n        } -> reduce_f8e5b1.reducer\n\n        list_2c62ab -> reduce_f8e5b1.items\n        0 -> reduce_f8e5b1.initialValue\n        reduce_f8e5b1.accumulator -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) if_4f3d4c root.Std_k98ojb.Std.If {}\n\tinstance(x: 253, y: -437) lessthanorequal_e1b0e8 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 596, y: -529) lessthanorequal_0f8a6d root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 744, y: -417) expression_e3e3c4 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"sqrt(n)\"\n\t}\n\tinstance(x: 1051, y: -326) for_19d3f2 root.Std_k98ojb.Std.For {}\n\tinstance(x: 1571, y: -438) if_e1a62f root.Std_k98ojb.Std.If {}\n\tinstance(x: 1908, y: -316) expression_9c6b0a root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(n % i == 0)\"\n\t}\n\n\tnum_5c0677 -> lessthanorequal_e1b0e8.left\n\t2 -> lessthanorequal_e1b0e8.right\n\tlessthanorequal_e1b0e8.result -> if_4f3d4c.predicate\n\tif_4f3d4c.then -> output_c457b3\n\tnum_5c0677 -> lessthanorequal_0f8a6d.left\n\t2 -> lessthanorequal_0f8a6d.right\n\tlessthanorequal_0f8a6d.result -> if_e1a62f.predicate\n\tif_e1a62f.then -> output_c457b3\n\tnum_5c0677 -> expression_e3e3c4.gen_0\n\texpression_e3e3c4.result -> for_19d3f2.items\n\tfor_19d3f2.item -> expression_9c6b0a.gen_1\n\tnum_5c0677 -> expression_9c6b0a.gen_0\n\texpression_9c6b0a.result -> if_e1a62f.predicate\n\tif_e1a62f.then -> output_c457b3\n\tfor_19d3f2.onItem -> if_e1a62f.execute\n\tif_e1a62f.else -> continue_9a54bb\n\tfor_19d3f2.done -> continue_9a54bb\n\n\texecute_b7b391 -> for_19d3f2.reset\n}"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -117) mul_8c2b3d root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8c2b3d.first\n\ty_5390f5 -> mul_8c2b3d.second\n\tinstance(x: -417, y: 10) less_than_zero_3a5e1f root.Std_k98ojb.Math.LessThanOrEqual {}\n\tmul_8c2b3d.result -> less_than_zero_3a5e1f.left\n\t0 -> less_than_zero_3a5e1f.right\n\tless_than_zero_3a5e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5b8a2d.value\n\t11 -> modulo_5b8a2d.divisor\n\tmodulo_5b8a2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 100) tolower_4b7f9a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 350, y: 200) isequal_6c8d2e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b7f9a.input\n        tolower_4b7f9a.value -> isequal_6c8d2e.left\n        input_ai -> isequal_6c8d2e.right\n        isequal_6c8d2e.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0 root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0.left\n\tlist2_ai -> difference_0.right\n\tdifference_0.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -114) length_4a2b1f root.Std_k98ojb.List.Length {}\n        instance(x: 657, y: -114) modulo_2d8c3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 900, y: -114) slice_1a5f9c root.Std_k98ojb.List.Slice {}\n        instance(x: 900, y: -64) slice_2a5f9d root.Std_k98ojb.List.Slice {}\n        instance(x: 1143, y: -114) concat_3a5f9e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4a2b1f.list\n        n_68068c -> modulo_2d8c3e.value\n        length_4a2b1f.length -> modulo_2d8c3e.divisor\n        modulo_2d8c3e.result -> slice_1a5f9c.start\n        list_48148f -> slice_1a5f9c.list\n        -1 -> slice_1a5f9c.end\n        modulo_2d8c3e.result -> slice_2a5f9d.end\n        0 -> slice_2a5f9d.start\n        list_48148f -> slice_2a5f9d.list\n        slice_1a5f9c.slice -> concat_3a5f9e.left\n        slice_2a5f9d.slice -> concat_3a5f9e.right\n        concat_3a5f9e.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -123) reduce_3d8b2a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b2a.items\n\t0 -> reduce_3d8b2a.initialValue\n\tfunc() {\n\t    in(x: 45, y: -17, name: \"accumulator\") property(Number) accumulator_9f8e1b\n\t    in(x: 165, y: -17, name: \"currentItem\") property(Number) currentItem_2d3a0c\n\n\t    out(x: 240, y: 10, name: \"out\") property(Number) out_9f8e1b\n\n\t    instance(x: 165, y: -17) add_2d3a0c root.Std_k98ojb.Math.Add {}\n\t    accumulator_9f8e1b -> add_2d3a0c.first\n\t    currentItem_2d3a0c -> add_2d3a0c.second\n\t    add_2d3a0c.result -> out_9f8e1b\n\t} -> reduce_3d8b2a.reducer\n\treduce_3d8b2a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 124, y: -365) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 304, y: -365) if_7e1a62 root.Std_k98ojb.Std.If {}\n        instance(x: 504, y: -365) lessthanorequal_0fba8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 704, y: -365) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: -365) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1224, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1424, y: -365) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.else -> lessthanorequal_0fba8c.left\n\n        num_5c0677 -> lessthanorequal_0fba8c.right\n        lessthanorequal_0fba8c.result -> if_7e1a62.predicate\n        if_7e1a62.then -> continue_9a54bb\n        if_7e1a62.else -> for_8cb3f6.reset\n\n        2 -> add_b4554f.first\n        num_5c0677 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.to\n\n        2 -> for_8cb3f6.from\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        num_5c0677 -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> output_c457b3.set(true)\n        execute_b7b391 -> for_8cb3f6.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -47) mul_3e1b4c root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_3e1b4c.first\n        y_5390f5 -> mul_3e1b4c.second\n        instance(x: -127, y: 68) less_than_zero_b3d5a1 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_3e1b4c.result -> less_than_zero_b3d5a1.left\n        0 -> less_than_zero_b3d5a1.right\n        less_than_zero_b3d5a1.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -145) modulo_3a7e2b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3a7e2b.value\n        11 -> modulo_3a7e2b.divisor\n        instance(x: 400, y: -15) iszero_e4b9d6 root.Std_k98ojb.Logic.Equal {}\n        modulo_3a7e2b.result -> iszero_e4b9d6.left\n        0 -> iszero_e4b9d6.right\n        iszero_e4b9d6.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 107, y: 198) replace_3f9b0a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3f9b0a.input\n        search_ai -> replace_3f9b0a.search\n        replace_ai -> replace_3f9b0a.replace\n        replace_3f9b0a.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n\tinstance(x: 221, y: 174) tolower_5b8a3f root.Std_k98ojb.Strings.ToLower {}\n\tinput_ai -> tolower_5b8a3f.input\n\ttolower_5b8a3f.value -> output_ai\n}"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -227, y: -268) setdifference_0c9d3e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -145, y: -396) listflatten_3a1b0f root.Std_k98ojb.List.Flatten {}\n        instance(x: 273, y: -358) reduce_1c2b3d root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc * it\"\n        }\n        instance(x: -40, y: -167) listempty_e8a7e1 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 524, y: -315) if_0d1c2f root.Std_k98ojb.Std.If {}\n\n        execute_19300c -> setdifference_0c9d3e.trigger\n        list_5fda54 -> setdifference_0c9d3e.left\n        list_5fda54 -> setdifference_0c9d3e.right\n        setdifference_0c9d3e.difference -> listflatten_3a1b0f.list\n        listflatten_3a1b0f.flattenedList -> reduce_1c2b3d.items\n        1 -> reduce_1c2b3d.initialValue\n        reduce_1c2b3d.output_list -> output_cffcc2\n        listflatten_3a1b0f.flattenedList -> listempty_e8a7e1.list\n        listempty_e8a7e1.isEmpty -> if_0d1c2f.predicate\n        if_0d1c2f.then -> continue_45190b\n        if_0d1c2f.else -> reduce_1c2b3d.trigger\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -367, y: 292) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -367, y: 500) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -367, y: 700) concat_0 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_0.list1\n        difference_2.difference -> concat_0.list2\n\n        concat_0.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 421, y: -224) length_2b8e4a root.Std_k98ojb.List.Length {}\n        instance(x: 576, y: -240) modulo_b2d3f7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 715, y: -256) slice_1c2a5e root.Std_k98ojb.List.Slice {}\n        instance(x: 887, y: -240) slice_b3f7d9 root.Std_k98ojb.List.Slice {}\n        instance(x: 1060, y: -224) concat_2c7a5d root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2b8e4a.list\n        n_68068c -> modulo_b2d3f7.value\n        length_2b8e4a.length -> modulo_b2d3f7.divisor\n        modulo_b2d3f7.result -> slice_1c2a5e.start\n        list_48148f -> slice_1c2a5e.list\n        slice_1c2a5e.slice -> concat_2c7a5d.left\n        0 -> slice_b3f7d9.start\n        modulo_b2d3f7.result -> slice_b3f7d9.end\n        list_48148f -> slice_b3f7d9.list\n        slice_b3f7d9.slice -> concat_2c7a5d.right\n        concat_2c7a5d.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -131) reduce_3d8e7b root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_3d8e7b.items\n        func() {\n            in(x: -54, y: 30, name: \"accumulator\") property(Number) accumulator_3a7f9b\n            in(x: -12, y: -11, name: \"current\") property(Number) current_8d6e2c\n\n            out(x: 356, y: 41, name: \"out\") property(Number) out_03f8a7\n\n            instance(x: 95, y: 24) add_b4554f root.Std_k98ojb.Math.Add {}\n\n            accumulator_3a7f9b -> add_b4554f.first\n            current_8d6e2c -> add_b4554f.second\n            add_b4554f.result -> out_03f8a7\n        } -> reduce_3d8e7b.reducer\n\n        reduce_3d8e7b.output_value -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -113, y: -85) if_6d8e5f root.Std_k98ojb.Std.If {}\n        instance(x: 278, y: -154) mathlessthanorequal_a0b9c2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 394, y: -156) mathgreaterthan_2d23f8 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 576, y: -150) and_f2c7a3 root.Std_k98ojb.Logic.And {}\n        instance(x: 745, y: -150) if_7f6d9b root.Std_k98ojb.Std.If {}\n        instance(x: 899, y: -151) mathfloor_e23a54 root.Std_k98ojb.Math.Floor {}\n        instance(x: 1055, y: -157) generaterange_4d6e87 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1209, y: -153) for_3c4f9a root.Std_k98ojb.Std.For {}\n        instance(x: 1363, y: -151) mathmodulo_7e2b8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1517, y: -150) if_f4a5d8 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> mathlessthanorequal_a0b9c2.left\n        1 -> mathlessthanorequal_a0b9c2.right\n        num_5c0677 -> mathgreaterthan_2d23f8.left\n        1 -> mathgreaterthan_2d23f8.right\n        mathlessthanorequal_a0b9c2.result -> and_f2c7a3.left\n        mathgreaterthan_2d23f8.result -> and_f2c7a3.right\n        and_f2c7a3.result -> if_6d8e5f.predicate\n        execute_b7b391 -> if_6d8e5f.execute\n        false -> output_c457b3\n        if_6d8e5f.then -> continue_9a54bb\n\n        num_5c0677 -> mathfloor_e23a54.value\n        0.5 -> mathfloor_e23a54.factor\n        mathfloor_e23a54.result -> generaterange_4d6e87.to\n        2 -> generaterange_4d6e87.from\n        generaterange_4d6e87.list -> for_3c4f9a.items\n\n        for_3c4f9a.item -> mathmodulo_7e2b8f.divisor\n        num_5c0677 -> mathmodulo_7e2b8f.value\n        mathmodulo_7e2b8f.result -> if_f4a5d8.predicate\n\n        if_f4a5d8.then -> output_c457b3\n        false -> output_c457b3\n        if_f4a5d8.else -> for_3c4f9a.next\n        for_3c4f9a.done -> output_c457b3\n\n        true -> output_c457b3\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -664, y: -187) mul_c7d6b8 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_c7d6b8.first\n        y_5390f5 -> mul_c7d6b8.second\n\n        instance(x: -42, y: -153) less_than_zero_ae7c5a root.Std_k98ojb.Math.LessThanOrEqual {}\n        0 -> less_than_zero_ae7c5a.right\n        mul_c7d6b8.result -> less_than_zero_ae7c5a.left\n\n        less_than_zero_ae7c5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 165, y: 145) modulo_49b3f8 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_49b3f8.value\n        11 -> modulo_49b3f8.divisor\n        modulo_49b3f8.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinput_ai -> instance(x: 107, y: 319) replace_4dbf5a root.Strings.Replace {}.input\n\tsearch_ai -> replace_4dbf5a.search\n\treplace_ai -> replace_4dbf5a.replace\n\treplace_4dbf5a.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -276, y: 310) tolower_2f4d5a root.Std_k98ojb.Strings.ToLower {}\n\tinput_ai -> tolower_2f4d5a.input\n\ttolower_2f4d5a.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n    instance(x: 223, y: -161) flatten_6c1e9a root.Std_k98ojb.List.Flatten {}\n    instance(x: 509, y: -207) unique_list_8d5f4c root.Std_k98ojb.Iteration.Reduce {\n        expression: \"if(!acc.contains(cur)) acc.add(cur); acc\"\n    }\n    instance(x: 1386, y: -95) product_calculation_8e365a root.Std_k98ojb.Iteration.Reduce {\n        expression: \"acc * cur\"\n    }\n\n    execute_19300c -> unique_list_8d5f4c.trigger\n    list_5fda54 -> flatten_6c1e9a.list\n    flatten_6c1e9a.flattenedList -> unique_list_8d5f4c.items\n    [] -> unique_list_8d5f4c.initialAccumulatorValue\n\n    execute_19300c -> product_calculation_8e365a.trigger\n    unique_list_8d5f4c.outputList -> product_calculation_8e365a.items\n    1 -> product_calculation_8e365a.initialAccumulatorValue\n\n    product_calculation_8e365a.reducedOutput -> output_cffcc2\n    unique_list_8d5f4c.done -> continue_45190b\n}"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 359, y: 121) difference_3d1a0f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3d1a0f.left\n        list2_ai -> difference_3d1a0f.right\n\n        instance(x: -57, y: 263) difference_f7c2e5 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_f7c2e5.left\n        list1_ai -> difference_f7c2e5.right\n\n        instance(x: 400, y: 266) concat_863eb2 root.Std_k98ojb.List.Concat {}\n        difference_3d1a0f.difference -> concat_863eb2.left\n        difference_f7c2e5.difference -> concat_863eb2.right\n\n        concat_863eb2.concatenated -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -26, y: -148) length_b2d6e2 root.Std_k98ojb.List.Length {}\n        instance(x: 57, y: -325) modulo_c6c40a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 216, y: -228) sub_8cc435 root.Std_k98ojb.Math.Sub {}\n        instance(x: 468, y: -279) slice_f3d1fb root.Std_k98ojb.List.Slice {}\n        instance(x: 700, y: -343) slice_18c6eb root.Std_k98ojb.List.Slice {}\n        instance(x: 959, y: -251) concat_d5d5e4 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_b2d6e2.list\n        length_b2d6e2.length -> modulo_c6c40a.value\n        n_68068c -> modulo_c6c40a.divisor\n        length_b2d6e2.length -> sub_8cc435.first\n        modulo_c6c40a.result -> sub_8cc435.second\n        list_48148f -> slice_f3d1fb.list\n        modulo_c6c40a.result -> slice_f3d1fb.start\n        -1 -> slice_f3d1fb.end\n        list_48148f -> slice_18c6eb.list\n        0 -> slice_18c6eb.start\n        sub_8cc435.result -> slice_18c6eb.end\n        slice_18c6eb.slice -> concat_d5d5e4.left\n        slice_f3d1fb.slice -> concat_d5d5e4.right\n        concat_d5d5e4.concatenated -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -340, y: 195) reduce_faf1e8 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_faf1e8.items\n        func() {\n            in(x: 70, y: -27, name: \"accumulator\") property(Number) accumulator_a45a32\n            in(x: 190, y: -24, name: \"item\") property(Number) item_96fb6c\n\n            out(x: 335, y: 84, name: \"output\") property(Number) output_baf2f1\n\n            instance(x: 204, y: 32) add_e7e8cf root.Std_k98ojb.Math.Add {}\n            accumulator_a45a32 -> add_e7e8cf.first\n            item_96fb6c -> add_e7e8cf.second\n            add_e7e8cf.result -> output_baf2f1\n        } -> reduce_faf1e8.handler\n        0 -> reduce_faf1e8.initialValue\n        reduce_faf1e8.output_value -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) if_7d4fcb root.Std_k98ojb.Std.If {}\n\tinstance(x: 262, y: -257) lessthanorequal_b120a5 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 538, y: -266) for_74afcf root.Std_k98ojb.Std.For {}\n\tinstance(x: 835, y: -314) math_expression_f9ebc1 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"(num % i == 0)\"\n\t}\n\tinstance(x: 677, y: -392) if_0c2d6a root.Std_k98ojb.Std.If {}\n\tinstance(x: 854, y: -111) add_bde0cb root.Std_k98ojb.Math.Add {}\n\n\tnum_5c0677 -> lessthanorequal_b120a5.left\n\t2 -> lessthanorequal_b120a5.right\n\tlessthanorequal_b120a5.result -> if_7d4fcb.predicate\n\tif_7d4fcb.execute -> for_74afcf.reset\n\n\t3 -> add_bde0cb.first\n\t1 -> add_bde0cb.second\n\tadd_bde0cb.result -> for_74afcf.items\n\n\tfor_74afcf.item -> math_expression_f9ebc1.gen_1\n\tnum_5c0677 -> math_expression_f9ebc1.gen_0\n\tmath_expression_f9ebc1.result -> if_0c2d6a.predicate\n\tif_0c2d6a.execute -> continue_9a54bb\n\n\t1 -> if_0c2d6a.value\n\tif_7d4fcb.then -> output_c457b3\n\toutput_c457b3: 1\n\tfor_74afcf.done -> output_c457b3\n\toutput_c457b3: 0\n\n\texecute_b7b391 -> if_7d4fcb.execute\n\tif_0c2d6a.else -> for_74afcf.next\n}"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n\tin(x: -426, y: -248, name: \"x\") property(Number) x_853326\n\tin(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\tout(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n\tinstance(x: -468, y: -117) mul_8c2b3d root.Std_k98ojb.Math.Mul {}\n\tx_853326 -> mul_8c2b3d.first\n\ty_5390f5 -> mul_8c2b3d.second\n\tinstance(x: -417, y: 10) less_than_zero_3a5e1f root.Std_k98ojb.Math.LessThanOrEqual {}\n\tmul_8c2b3d.result -> less_than_zero_3a5e1f.left\n\t0 -> less_than_zero_3a5e1f.right\n\tless_than_zero_3a5e1f.result -> output_3339a3\n}"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n\tin(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\tout(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n\tinstance(x: 140, y: -10) modulo_5b8a2d root.Std_k98ojb.Math.Modulo {}\n\tn_27f29c -> modulo_5b8a2d.value\n\t11 -> modulo_5b8a2d.divisor\n\tmodulo_5b8a2d.result -> output_f2630f\n}"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_9a7b8c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7b8c.input\n        search_ai -> replace_9a7b8c.search\n        replace_ai -> replace_9a7b8c.replace\n        replace_9a7b8c.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 175, y: 100) tolower_4b7f9a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 350, y: 200) isequal_6c8d2e root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> tolower_4b7f9a.input\n        tolower_4b7f9a.value -> isequal_6c8d2e.left\n        input_ai -> isequal_6c8d2e.right\n        isequal_6c8d2e.result -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -181, y: -323) setdifference_1a2b3c root.Std_k98ojb.Sets.Difference {}\n        instance(x: -406, y: -57) listflatten_2d3e4f root.Std_k98ojb.List.Flatten {}\n        instance(x: 123, y: -234) reduce_3g4h5i root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> listflatten_2d3e4f.list\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.left\n        listflatten_2d3e4f.flattenedList -> setdifference_1a2b3c.right\n        setdifference_1a2b3c.difference -> reduce_3g4h5i.items\n\n        func() {\n            in(x: -76, y: 46, name: \"accumulator\") property(Number) accumulator_5f51f7\n            in(x: 108, y: 92, name: \"current\") property(Number) current_6g6h7i\n\n            out(x: 382, y: 19, name: \"out\") property(Number) out_d0fd24\n\n            instance(x: 106, y: 17) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n            accumulator_5f51f7 -> mul_2f9d09.first\n            current_6g6h7i -> mul_2f9d09.second\n            mul_2f9d09.result -> out_d0fd24\n        } -> reduce_3g4h5i.reducer\n\n        1 -> reduce_3g4h5i.initialValue\n        reduce_3g4h5i.output_list -> output_cffcc2\n        execute_19300c -> reduce_3g4h5i.trigger\n        continue_45190b -> listflatten_2d3e4f.continue\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n\tin(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n\tin(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\tout(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n\tinstance(x: -190, y: 160) difference_0 root.Std_k98ojb.Sets.Difference {}\n\tlist1_ai -> difference_0.left\n\tlist2_ai -> difference_0.right\n\tdifference_0.difference -> output_ai\n}"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 414, y: -114) length_4a2b1f root.Std_k98ojb.List.Length {}\n        instance(x: 657, y: -114) modulo_2d8c3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 900, y: -114) slice_1a5f9c root.Std_k98ojb.List.Slice {}\n        instance(x: 900, y: -64) slice_2a5f9d root.Std_k98ojb.List.Slice {}\n        instance(x: 1143, y: -114) concat_3a5f9e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4a2b1f.list\n        n_68068c -> modulo_2d8c3e.value\n        length_4a2b1f.length -> modulo_2d8c3e.divisor\n        modulo_2d8c3e.result -> slice_1a5f9c.start\n        list_48148f -> slice_1a5f9c.list\n        -1 -> slice_1a5f9c.end\n        modulo_2d8c3e.result -> slice_2a5f9d.end\n        0 -> slice_2a5f9d.start\n        list_48148f -> slice_2a5f9d.list\n        slice_1a5f9c.slice -> concat_3a5f9e.left\n        slice_2a5f9d.slice -> concat_3a5f9e.right\n        concat_3a5f9e.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n\tin(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\tout(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n\tinstance(x: 109, y: -123) reduce_3d8b2a root.Std_k98ojb.Iteration.Reduce {}\n\tlist_2c62ab -> reduce_3d8b2a.items\n\t0 -> reduce_3d8b2a.initialValue\n\tfunc() {\n\t    in(x: 45, y: -17, name: \"accumulator\") property(Number) accumulator_9f8e1b\n\t    in(x: 165, y: -17, name: \"currentItem\") property(Number) currentItem_2d3a0c\n\n\t    out(x: 240, y: 10, name: \"out\") property(Number) out_9f8e1b\n\n\t    instance(x: 165, y: -17) add_2d3a0c root.Std_k98ojb.Math.Add {}\n\t    accumulator_9f8e1b -> add_2d3a0c.first\n\t    currentItem_2d3a0c -> add_2d3a0c.second\n\t    add_2d3a0c.result -> out_9f8e1b\n\t} -> reduce_3d8b2a.reducer\n\treduce_3d8b2a.outputValue -> sum_2a848f\n}"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -84, y: -365) if_07b8c7 root.Std_k98ojb.Std.If {}\n        instance(x: 124, y: -365) lessthanorequal_f11fda root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 304, y: -365) if_7e1a62 root.Std_k98ojb.Std.If {}\n        instance(x: 504, y: -365) lessthanorequal_0fba8c root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 704, y: -365) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 1024, y: -365) expression_b720d7 root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 1224, y: -365) if_e19a62 root.Std_k98ojb.Std.If {}\n        instance(x: 1424, y: -365) add_b4554f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_f11fda.left\n        1 -> lessthanorequal_f11fda.right\n        lessthanorequal_f11fda.result -> if_07b8c7.predicate\n        if_07b8c7.then -> continue_9a54bb\n        if_07b8c7.else -> lessthanorequal_0fba8c.left\n\n        num_5c0677 -> lessthanorequal_0fba8c.right\n        lessthanorequal_0fba8c.result -> if_7e1a62.predicate\n        if_7e1a62.then -> continue_9a54bb\n        if_7e1a62.else -> for_8cb3f6.reset\n\n        2 -> add_b4554f.first\n        num_5c0677 -> add_b4554f.second\n        add_b4554f.result -> for_8cb3f6.to\n\n        2 -> for_8cb3f6.from\n        for_8cb3f6.item -> expression_b720d7.gen_1\n        num_5c0677 -> expression_b720d7.gen_0\n        expression_b720d7.result -> if_e19a62.predicate\n\n        if_e19a62.then -> continue_9a54bb\n        if_e19a62.else -> for_8cb3f6.next\n        for_8cb3f6.done -> output_c457b3.set(true)\n        execute_b7b391 -> for_8cb3f6.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -47) mul_34d7c9 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_34d7c9.first\n        y_5390f5 -> mul_34d7c9.second\n        instance(x: -119, y: 134) less_than_zero_ea1b9f root.Std_k98ojb.Math.LessThan {}\n        mul_34d7c9.result -> less_than_zero_ea1b9f.left\n        0 -> less_than_zero_ea1b9f.right\n        less_than_zero_ea1b9f.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 150, y: -145) modulo_3a7e2b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_3a7e2b.value\n        11 -> modulo_3a7e2b.divisor\n        instance(x: 400, y: -15) iszero_e4b9d6 root.Std_k98ojb.Logic.Equal {}\n        modulo_3a7e2b.result -> iszero_e4b9d6.left\n        0 -> iszero_e4b9d6.right\n        iszero_e4b9d6.value -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 107, y: 198) replace_3f9b0a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3f9b0a.input\n        search_ai -> replace_3f9b0a.search\n        replace_ai -> replace_3f9b0a.replace\n        replace_3f9b0a.value -> output_ai\n    }"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n\tinstance(x: 221, y: 174) tolower_5b8a3f root.Std_k98ojb.Strings.ToLower {}\n\tinput_ai -> tolower_5b8a3f.input\n\ttolower_5b8a3f.value -> output_ai\n}"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -227, y: -268) setdifference_0c9d3e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -145, y: -396) listflatten_3a1b0f root.Std_k98ojb.List.Flatten {}\n        instance(x: 273, y: -358) reduce_1c2b3d root.Std_k98ojb.Iteration.Reduce {\n            expression: \"acc * it\"\n        }\n        instance(x: -40, y: -167) listempty_e8a7e1 root.Std_k98ojb.List.IsEmpty {}\n        instance(x: 524, y: -315) if_0d1c2f root.Std_k98ojb.Std.If {}\n\n        execute_19300c -> setdifference_0c9d3e.trigger\n        list_5fda54 -> setdifference_0c9d3e.left\n        list_5fda54 -> setdifference_0c9d3e.right\n        setdifference_0c9d3e.difference -> listflatten_3a1b0f.list\n        listflatten_3a1b0f.flattenedList -> reduce_1c2b3d.items\n        1 -> reduce_1c2b3d.initialValue\n        reduce_1c2b3d.output_list -> output_cffcc2\n        listflatten_3a1b0f.flattenedList -> listempty_e8a7e1.list\n        listempty_e8a7e1.isEmpty -> if_0d1c2f.predicate\n        if_0d1c2f.then -> continue_45190b\n        if_0d1c2f.else -> reduce_1c2b3d.trigger\n    }"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -367, y: 292) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -367, y: 500) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -367, y: 700) concat_0 root.Std_k98ojb.List.Concat {}\n\n        difference_1.difference -> concat_0.list1\n        difference_2.difference -> concat_0.list2\n\n        concat_0.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 421, y: -224) length_2b8e4a root.Std_k98ojb.List.Length {}\n        instance(x: 576, y: -240) modulo_b2d3f7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 715, y: -256) slice_1c2a5e root.Std_k98ojb.List.Slice {}\n        instance(x: 887, y: -240) slice_b3f7d9 root.Std_k98ojb.List.Slice {}\n        instance(x: 1060, y: -224) concat_2c7a5d root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2b8e4a.list\n        n_68068c -> modulo_b2d3f7.value\n        length_2b8e4a.length -> modulo_b2d3f7.divisor\n        modulo_b2d3f7.result -> slice_1c2a5e.start\n        list_48148f -> slice_1c2a5e.list\n        slice_1c2a5e.slice -> concat_2c7a5d.left\n        0 -> slice_b3f7d9.start\n        modulo_b2d3f7.result -> slice_b3f7d9.end\n        list_48148f -> slice_b3f7d9.list\n        slice_b3f7d9.slice -> concat_2c7a5d.right\n        concat_2c7a5d.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 209, y: -131) reduce_3d8e7b root.Std_k98ojb.Iteration.Reduce {}\n\n        list_2c62ab -> reduce_3d8e7b.items\n        func() {\n            in(x: -54, y: 30, name: \"accumulator\") property(Number) accumulator_3a7f9b\n            in(x: -12, y: -11, name: \"current\") property(Number) current_8d6e2c\n\n            out(x: 356, y: 41, name: \"out\") property(Number) out_08e2a7\n\n            instance(x: 94, y: 24) add_f4b3d7 root.Std_k98ojb.Math.Add {}\n\n            accumulator_3a7f9b -> add_f4b3d7.first\n            current_8d6e2c -> add_f4b3d7.second\n            add_f4b3d7.result -> out_08e2a7\n        } -> reduce_3d8e7b.reducer\n\n        0 -> reduce_3d8e7b.initialValue\n        reduce_3d8e7b.output -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -113, y: -85) if_6d8e5f root.Std_k98ojb.Std.If {}\n        instance(x: 278, y: -154) mathlessthanorequal_a0b9c2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 394, y: -156) mathgreaterthan_2d23f8 root.Std_k98ojb.Math.GreaterThan {}\n        instance(x: 576, y: -150) and_f2c7a3 root.Std_k98ojb.Logic.And {}\n        instance(x: 745, y: -150) if_7f6d9b root.Std_k98ojb.Std.If {}\n        instance(x: 899, y: -151) mathfloor_e23a54 root.Std_k98ojb.Math.Floor {}\n        instance(x: 1055, y: -157) generaterange_4d6e87 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 1209, y: -153) for_3c4f9a root.Std_k98ojb.Std.For {}\n        instance(x: 1363, y: -151) mathmodulo_7e2b8f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1517, y: -150) if_f4c8d7 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> mathlessthanorequal_a0b9c2.left\n        1 -> mathlessthanorequal_a0b9c2.right\n        num_5c0677 -> mathgreaterthan_2d23f8.left\n        1 -> mathgreaterthan_2d23f8.right\n        mathlessthanorequal_a0b9c2.result -> and_f2c7a3.left\n        mathgreaterthan_2d23f8.result -> and_f2c7a3.right\n        and_f2c7a3.result -> if_6d8e5f.predicate\n        execute_b7b391 -> if_6d8e5f.execute\n        false -> output_c457b3\n        if_6d8e5f.then -> continue_9a54bb\n\n        num_5c0677 -> mathfloor_e23a54.value\n        0.5 -> mathfloor_e23a54.factor\n        mathfloor_e23a54.result -> generaterange_4d6e87.to\n        2 -> generaterange_4d6e87.from\n        generaterange_4d6e87.list -> for_3c4f9a.items\n\n        for_3c4f9a.item -> mathmodulo_7e2b8f.divisor\n        num_5c0677 -> mathmodulo_7e2b8f.value\n        mathmodulo_7e2b8f.result -> if_f4c8d7.predicate\n\n        if_f4c8d7.then -> output_c457b3\n        false -> output_c457b3\n        true -> output_c457b3\n\n        for_3c4f9a.onItem -> if_f4c8d7.execute\n        if_f4c8d7.else -> continue_9a54bb\n        for_3c4f9a.done -> output_c457b3\n        true -> output_c457b3\n\n        execute_b7b391 -> for_3c4f9a.reset\n    }"
            ]
        }
    },
    {
        "experiment_name": "signatur_coverage_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5-coder:32b-instruct-fp16",
        "largest_context": 4256,
        "task_candidates": {
            "1": [
                "func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -664, y: -187) mul_c7d6b8 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_c7d6b8.first\n        y_5390f5 -> mul_c7d6b8.second\n\n        instance(x: -42, y: -153) less_than_zero_ae7c5a root.Std_k98ojb.Math.LessThanOrEqual {}\n        0 -> less_than_zero_ae7c5a.right\n        mul_c7d6b8.result -> less_than_zero_ae7c5a.left\n\n        less_than_zero_ae7c5a.result -> output_3339a3\n    }"
            ],
            "3": [
                "func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 165, y: 145) modulo_49b3f8 root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_49b3f8.value\n        11 -> modulo_49b3f8.divisor\n        modulo_49b3f8.result -> output_f2630f\n    }"
            ],
            "12": [
                "func(doc: \"function to replace characters in a string.\") replace_char {\n\tin(x: -426, y: 209, name: \"input\") property(String) input_ai\n\tin(x: -426, y: 332, name: \"search\") property(String) search_ai\n\tin(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\tout(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n\tinput_ai -> instance(x: 107, y: 319) replace_4ae2bb root.Strings.Replace {}.input\n\tsearch_ai -> replace_4ae2bb.search\n\treplace_ai -> replace_4ae2bb.replace\n\treplace_4ae2bb.value -> output_ai\n}"
            ],
            "13": [
                "func(doc: \"convert the given string to lower case.\") is_lower {\n\tin(x: -425, y: 209, name: \"input\") property(String) input_ai\n\tout(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -276, y: 310) tolower_2e4a5f root.Std_k98ojb.Strings.ToLower {}\n\tinput_ai -> tolower_2e4a5f.input\n\ttolower_2e4a5f.value -> output_ai\n    }"
            ],
            "16": [
                "func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n\tin(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n\tin(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\tout(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n\tout(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n    instance(x: 223, y: -161) flatten_6c1e9a root.Std_k98ojb.List.Flatten {}\n    instance(x: 509, y: -207) unique_list_8d5f4c root.Std_k98ojb.Iteration.Reduce {\n        expression: \"if(!acc.contains(cur)) acc.add(cur); acc\"\n    }\n    instance(x: 1386, y: -95) product_calculation_8e313a root.Std_k98ojb.Iteration.Reduce {\n        expression: \"acc * cur\"\n    }\n\n    execute_19300c -> unique_list_8d5f4c.trigger\n    list_5fda54 -> flatten_6c1e9a.list\n    flatten_6c1e9a.flattenedList -> unique_list_8d5f4c.items\n    [] -> unique_list_8d5f4c.initialAccumulatorValue\n\n    execute_19300c -> product_calculation_8e313a.trigger\n    unique_list_8d5f4c.outputList -> product_calculation_8e313a.items\n    1 -> product_calculation_8e313a.initialAccumulatorValue\n\n    product_calculation_8e313a.reducedOutput -> output_cffcc2\n    unique_list_8d5f4c.done -> continue_45190b\n}"
            ],
            "18": [
                "func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 359, y: 121) difference_3d1a0f root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_3d1a0f.left\n        list2_ai -> difference_3d1a0f.right\n\n        instance(x: -57, y: 263) difference_f7c2e5 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_f7c2e5.left\n        list1_ai -> difference_f7c2e5.right\n\n        instance(x: 400, y: 266) concat_863fc8 root.Std_k98ojb.List.Concat {}\n        difference_3d1a0f.difference -> concat_863fc8.left\n        difference_f7c2e5.difference -> concat_863fc8.right\n\n        concat_863fc8.concatenatedList -> output_ai\n    }"
            ],
            "34": [
                "func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: -26, y: -148) length_b4d9e4 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -72) modulo_c6c53a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 110, y: -148) sub_b9f5d4 root.Std_k98ojb.Math.Sub {}\n        instance(x: 205, y: -173) slice_8eb36f root.Std_k98ojb.List.Slice {}\n        instance(x: 205, y: -80) slice_e42f0a root.Std_k98ojb.List.Slice {}\n        instance(x: 361, y: -117) concat_2e0858 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_b4d9e4.list\n        length_b4d9e4.length -> modulo_c6c53a.value\n        n_68068c -> modulo_c6c53a.divisor\n        length_b4d9e4.length -> sub_b9f5d4.first\n        modulo_c6c53a.result -> sub_b9f5d4.second\n        list_48148f -> slice_e42f0a.list\n        sub_b9f5d4.result -> slice_e42f0a.start\n        -1 -> slice_e42f0a.end\n        list_48148f -> slice_8eb36f.list\n        0 -> slice_8eb36f.start\n        modulo_c6c53a.result -> slice_8eb36f.end\n        slice_8eb36f.slice -> concat_2e0858.left\n        slice_e42f0a.slice -> concat_2e0858.right\n        concat_2e0858.concatenatedList -> output_823209\n    }"
            ],
            "42": [
                "func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -340, y: 195) reduce_faf1e8 root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_faf1e8.items\n        func() {\n            in(x: 70, y: -27, name: \"accumulator\") property(Number) accumulator_a45a32\n            in(x: 190, y: -24, name: \"item\") property(Number) item_96df2c\n\n            out(x: 335, y: 84, name: \"value\") property(Number) value_f9ce6d\n\n            instance(x: 167, y: 121) add_e038be root.Std_k98ojb.Math.Add {}\n            accumulator_a45a32 -> add_e038be.first\n            item_96df2c -> add_e038be.second\n            add_e038be.result -> value_f9ce6d\n        } -> reduce_faf1e8.handler\n        0 -> reduce_faf1e8.initialValue\n        reduce_faf1e8.outputValue -> sum_2a848f\n    }"
            ],
            "48": [
                "func(doc: \"check if the given integer is a prime number.\") num_prime {\n\tin(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n\tin(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n\tout(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n\tout(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n\tinstance(x: -88, y: -376) if_7d4fcb root.Std_k98ojb.Std.If {}\n\tinstance(x: 262, y: -257) lessthanorequal_b120a5 root.Std_k98ojb.Math.LessThanOrEqual {}\n\tinstance(x: 538, y: -266) for_74bb6c root.Std_k98ojb.Std.For {}\n\tinstance(x: 869, y: -269) greaterthan_f4aae0 root.Std_k98ojb.Math.GreaterThan {}\n\tinstance(x: 1305, y: -263) floordiv_749fb7 root.Std_k98ojb.Math.FloorDiv {}\n\tinstance(x: 1603, y: -315) expression_dad0f2 root.Std_k98ojb.Math.Expression {\n\t\texpression: \"n % i == 0\"\n\t}\n\tinstance(x: 1937, y: -342) if_6d87c5 root.Std_k98ojb.Std.If {}\n\tnum_5c0677 -> lessthanorequal_b120a5.left\n\t2 -> lessthanorequal_b120a5.right\n\tlessthanorequal_b120a5.result -> if_7d4fcb.predicate\n\tif_7d4fcb.else -> continue_9a54bb\n\texecute_b7b391 -> if_7d4fcb.execute\n\tnum_5c0677 -> greaterthan_f4aae0.left\n\t1 -> greaterthan_f4aae0.right\n\tgreaterthan_f4aae0.result -> for_74bb6c.items\n\tfor_74bb6c.item -> floordiv_749fb7.first\n\tnum_5c0677 -> floordiv_749fb7.second\n\tfloordiv_749fb7.result -> expression_dad0f2.gen_1\n\tnum_5c0677 -> expression_dad0f2.gen_0\n\texpression_dad0f2.result -> if_6d87c5.predicate\n\tif_6d87c5.then -> continue_9a54bb\n\tfor_74bb6c.onItem -> if_6d87c5.execute\n\tif_7d4fcb.then -> for_74bb6c.reset\n\tfor_74bb6c.done -> output_c457b3\n\toutput_c457b3 = true\n\tcontinue_9a54bb -> for_74bb6c.next\n\tif_6d87c5.else -> continue_9a54bb\n}"
            ]
        }
    }
]