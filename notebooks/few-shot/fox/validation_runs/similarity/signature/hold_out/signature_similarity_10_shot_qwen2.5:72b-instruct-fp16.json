[
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7b5d5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -107) lessthan_3f7e6b root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7b5d5c.first\n        y_5390f5 -> mul_7b5d5c.second\n        mul_7b5d5c.result -> lessthan_3f7e6b.left\n        lessthan_3f7e6b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -184, y: 20) opposite_signs_2b45d5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5b0d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -18) equal_2c2e0b root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0d1a.value\n        11 -> modulo_5b0d1a.divisor\n        modulo_5b0d1a.result -> equal_2c2e0b.left\n        0 -> equal_2c2e0b.right\n        equal_2c2e0b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: -15) is_diff_7d98a7 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3b2cbb root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b2cbb.input\n        search_ai -> replace_3b2cbb.search\n        replace_ai -> replace_3b2cbb.replace\n        replace_3b2cbb.output -> output_ai\n    }\n\n    \n\n    instance(x: -164, y: 50) replace_char_789eac root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2f5a4c\n            in(x: -45, y: 101, name: \"item\") property(Number) item_6b9d8e\n\n            out(x: 265, y: 31, name: \"\") property(Number) _7dd980\n\n            instance(x: 108, y: 40) mul_88bb8a root.Std_k98ojb.Math.Mul {}\n            item_6b9d8e -> mul_88bb8a.second\n            acc_2f5a4c -> mul_88bb8a.first\n            mul_88bb8a.result -> _7dd980\n        } -> reduce_2d6da6.reducer\n        1 -> reduce_2d6da6.accumulator\n        list_5fda54 -> reduce_2d6da6.items\n        instance(x: -3, y: -1) unique_3d7de6 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 303, y: -1) unique_2d6da6 root.Std_k98ojb.List.Sort {}\n        list_5fda54 -> unique_2d6da6.list\n        unique_2d6da6.sorted_list -> unique_3d7de6.left\n        unique_3d7de6.difference -> reduce_2d6da6.items\n        unique_3d7de6.right -> list_5fda54\n        execute_19300c -> unique_2d6da6.execute\n        continue_45190b -> reduce_2d6da6.continue\n        reduce_2d6da6.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 18, y: -7) unique_product_33ad5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -396, y: 129) difference_5b2e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b2e.left\n        list2_ai -> difference_5b2e.right\n        instance(x: -396, y: 247) difference_bf0a root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_bf0a.left\n        list1_ai -> difference_bf0a.right\n        instance(x: -255, y: 183) concat_6d1e root.Std_k98ojb.List.Concat {}\n        difference_5b2e.difference -> concat_6d1e.list1\n        difference_bf0a.difference -> concat_6d1e.list2\n        concat_6d1e.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 43, y: -7) find_dissimilar_5b9c root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2b4d6a root.Std_k98ojb.List.Length {}\n        instance(x: 57, y: -21) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 309, y: -101) sub_1d6fcb root.Std_k98ojb.Math.Sub {}\n        instance(x: 307, y: -20) slice_1a54c7 root.Std_k98ojb.List.Slice {}\n        instance(x: 306, y: -182) slice_2d5f5e root.Std_k98ojb.List.Slice {}\n        instance(x: 562, y: -109) concat_4c7a1c root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2b4d6a.list\n        n_68068c -> modulo_4e8c54.value\n        length_2b4d6a.length -> modulo_4e8c54.divisor\n        length_2b4d6a.length -> sub_1d6fcb.first\n        modulo_4e8c54.result -> sub_1d6fcb.second\n        list_48148f -> slice_1a54c7.list\n        0 -> slice_1a54c7.start\n        sub_1d6fcb.result -> slice_1a54c7.end\n        list_48148f -> slice_2d5f5e.list\n        sub_1d6fcb.result -> slice_2d5f5e.start\n        -1 -> slice_2d5f5e.end\n        slice_2d5f5e.slice -> concat_4c7a1c.left\n        slice_1a54c7.slice -> concat_4c7a1c.right\n        concat_4c7a1c.result -> output_823209\n    }\n\n    \n\n    instance(x: -16, y: 12) rotate_right_2b4d6a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6b4d1e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -175, y: -39, name: \"accumulated\") property(Number) accumulated_2c62ab\n            in(x: -170, y: 44, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 822, y: -5, name: \"sum\") property(Number) sum_2a848f\n\n            instance(x: 39, y: 10) add_7b3b7b root.Std_k98ojb.Math.Add {}\n            accumulated_2c62ab -> add_7b3b7b.first\n            current_2c62ab -> add_7b3b7b.second\n            add_7b3b7b.result -> sum_2a848f\n        } -> reduce_6b4d1e.reducer\n        0 -> reduce_6b4d1e.initialValue\n        list_2c62ab -> reduce_6b4d1e.items\n        reduce_6b4d1e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -35, y: 10) _sum_7b3b7b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f5d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 379, y: -111, name: \"getter_4e4a2b\") getter_4e4a2b = is_prime\n        setter(x: 658, y: -109) setter_4d5c1f root.Std_k98ojb.Setter {\n            property: Bool\n        }\n        instance(x: 378, y: -216) for_1e4a1c root.Std_k98ojb.Std.For {}\n        instance(x: 604, y: -215) ifexpression_2d6f6b root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 379, y: -29, name: \"setter_4e4a2b\") setter_4e4a2b = is_prime\n        instance(x: 1056, y: -218) not_4d5c1f root.Std_k98ojb.Logic.Not {}\n        num_5c0677 -> ifexpression_0f5d6c.gen_0\n        getter_4e4a2b.value -> output_c457b3\n        2 -> for_1e4a1c.from\n        num_5c0677 -> for_1e4a1c.to\n        ifexpression_0f5d6c.else -> setter_4e4a2b.execute\n        true -> setter_4e4a2b.new_value\n        execute_b7b391 -> ifexpression_0f5d6c.execute\n        for_1e4a1c.item -> ifexpression_2d6f6b.gen_0\n        num_5c0677 -> ifexpression_2d6f6b.gen_1\n        ifexpression_2d6f6b.then -> setter_4d5c1f.execute\n        false -> setter_4d5c1f.new_value\n        for_1e4a1c.onItem -> ifexpression_2d6f6b.execute\n        ifexpression_0f5d6c.value -> continue_9a54bb\n        setter_4d5c1f.continue -> for_1e4a1c.next\n        for_1e4a1c.done -> continue_9a54bb\n        setter_4e4a2b.continue -> for_1e4a1c.reset\n    }\n\n    \n\n    instance(x: -30, y: -68) num_prime_7d6fcb root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -247) mul_2b2c6d root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -152) lessthan_4f6e1d root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_2b2c6d.first\n        y_5390f5 -> mul_2b2c6d.second\n        mul_2b2c6d.result -> lessthan_4f6e1d.left\n        lessthan_4f6e1d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -178, y: 50) opposite_signs_33ad55 root.main.opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 142, y: -24) modulo_5b0d5e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -22) equal_4c7a25 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0d5e.value\n        11 -> modulo_5b0d5e.divisor\n        modulo_5b0d5e.result -> equal_4c7a25.left\n        0 -> equal_4c7a25.right\n        equal_4c7a25.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -18, y: -19) is_diff_4b9d1e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 279) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_59bc6e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 209) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -123, y: 111) reduce_7d7c0e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -465, y: -101, name: \"current\") property(Number) current_4a7f52\n            in(x: -395, y: 11, name: \"accumulated\") property(Object) accumulated_8b3c0d\n\n            out(x: 602, y: -104, name: \"\") property(Object) _e54a7f\n\n            instance(x: -256, y: -95) contains_42d10b root.Std_k98ojb.List.Contains {}\n            data_instance(x: 365, y: -100) data_3c7455  = {list: list, product: product}\n            instance(x: 104, y: -97) mul_2d6e4a root.Std_k98ojb.Math.Mul {}\n            contains_42d10b.is_contained -> ifexpression_3f35c5.gen_0\n            current_4a7f52 -> contains_42d10b.item\n            accumulated_8b3c0d -> data_3c7455.accumulated\n            data_3c7455.list -> contains_42d10b.list\n            ifexpression_3f35c5.then -> setter_69e4a6.execute\n            current_4a7f52 -> mul_2d6e4a.first\n            accumulated_8b3c0d.product -> mul_2d6e4a.second\n            mul_2d6e4a.result -> data_3c7455.product\n            ifexpression_3f35c5.else -> setter_19302d.execute\n            accumulated_8b3c0d.list -> list_5fda54\n            setter_69e4a6.continue -> _e54a7f\n            data_3c7455 -> setter_69e4a6.new_value\n            setter_19302d.continue -> _e54a7f\n            data_3c7455 -> setter_19302d.new_value\n        } -> reduce_7d7c0e.reducer\n        instance(x: 286, y: -1) getter_2b4d1c root.Std_k98ojb.Logic.Getter {}\n        data_instance(x: -581, y: -319) data_2f5a0d  = {list: [], product: 1}\n        instance(x: -67, y: -109) ifexpression_3f35c5 root.Std_k98ojb.Std.IfExpression {\n            expression: \"not contains\"\n        }\n        setter(x: -24, y: -223, name: \"setter_69e4a6\") setter_69e4a6 = {list: list, product: product}\n        setter(x: 105, y: -287, name: \"setter_19302d\") setter_19302d = {list: list, product: product}\n        data_2f5a0d -> reduce_7d7c0e.accumulated\n        getter_2b4d1c.value.product -> output_cffcc2\n        execute_19300c -> reduce_7d7c0e.execute\n        list_5fda54 -> reduce_7d7c0e.items\n        reduce_7d7c0e.result -> getter_2b4d1c.value\n        reduce_7d7c0e.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -36, y: -18) unique_product_3f5a1c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -397, y: 101) difference_5b1d6a root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b1d6a.left\n        list2_ai -> difference_5b1d6a.right\n\n        instance(x: -397, y: 140) difference_bf1e6c root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_bf1e6c.left\n        list1_ai -> difference_bf1e6c.right\n\n        instance(x: -253, y: 77) concat_0d4a6b root.Std_k98ojb.List.Concat {}\n        difference_5b1d6a.difference -> concat_0d4a6b.left\n        difference_bf1e6c.difference -> concat_0d4a6b.right\n\n        instance(x: -253, y: 117) unique_8d9b6c root.Std_k98ojb.List.Flatten {}\n        concat_0d4a6b.concatenated -> unique_8d9b6c.items\n        unique_8d9b6c.flattened -> output_ai\n    }\n\n    \n\n    instance(x: -123, y: 7) find_dissimilar_5f1e6a root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 46, y: -102) length_0b5ebe root.Std_k98ojb.List.Length {}\n        instance(x: 275, y: -103) modulo_7f4c0d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 562, y: -102) sub_4e2a4b root.Std_k98ojb.Math.Sub {}\n        instance(x: 814, y: -103) slice_7c4d0f root.Std_k98ojb.List.Slice {}\n        instance(x: 562, y: -25) slice_6a2e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 1041, y: -103) concat_7d6f4e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_0b5ebe.list\n        n_68068c -> modulo_7f4c0d.value\n        length_0b5ebe.length -> modulo_7f4c0d.divisor\n        length_0b5ebe.length -> sub_4e2a4b.first\n        modulo_7f4c0d.result -> sub_4e2a4b.second\n        list_48148f -> slice_7c4d0f.list\n        0 -> slice_7c4d0f.start\n        sub_4e2a4b.result -> slice_7c4d0f.end\n        list_48148f -> slice_6a2e4c.list\n        sub_4e2a4b.result -> slice_6a2e4c.start\n        -1 -> slice_6a2e4c.end\n        slice_7c4d0f.slice -> concat_7d6f4e.left\n        slice_6a2e4c.slice -> concat_7d6f4e.right\n        concat_7d6f4e.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: 12) rotate_right_4b901d root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -29) reduce_3b5d4e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -176, y: -116, name: \"accumulated\") property(Number) accumulated_0f3a7c\n            in(x: -172, y: 54, name: \"current\") property(Number) current_8b9d6e\n\n            out(x: 554, y: -115, name: \"sum\") property(Number) sum_0f3a7c\n\n            instance(x: 102, y: -115) add_1d554c root.Std_k98ojb.Math.Add {}\n            accumulated_0f3a7c -> add_1d554c.first\n            current_8b9d6e -> add_1d554c.second\n            add_1d554c.result -> sum_0f3a7c\n        } -> reduce_3b5d4e.reducer\n        0 -> reduce_3b5d4e.initialValue\n        list_2c62ab -> reduce_3b5d4e.items\n        reduce_3b5d4e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -17, y: 109) _sum_3b5d4e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 184, y: -116) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        setter(x: 206, y: 134, name: \"setter_5f3a2e\") setter_5f3a2e = is_prime\n        getter(x: 798, y: -11) name: \"getter_5f3a2e\" getter_5f3a2e = is_prime\n        instance(x: 604, y: -116) if_f81713 root.Std_k98ojb.Std.If {}\n        instance(x: 421, y: -116) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n        setter(x: 509, y: -251, name: \"setter_7d3e6c\") setter_7d3e6c = is_prime\n        instance(x: 423, y: -251) ifexpression_8f4b4a root.Std_k98ojb.Std.IfExpression {\n            expression: \"i * i > num\"\n        }\n        getter(x: 407, y: -26, name: \"getter_7d3e6c\") getter_7d3e6c = is_prime\n        instance(x: 195, y: -251) for_d26972 root.Std_k98ojb.Std.For {}\n        setter(x: 407, y: -251, name: \"setter_7d3e6c\") setter_7d3e6c = is_prime\n        instance(x: 195, y: -386) generaterange_82d404 root.Std_k98ojb.List.GenerateRange {}\n        getter(x: 184, y: -116, name: \"getter_5f3a2e\") getter_5f3a2e = is_prime\n        instance(x: 798, y: -11) not_0d5b0c root.Std_k98ojb.Logic.Not {}\n        num_5c0677 -> ifexpression_3d7de6.gen_0\n        execute_b7b391 -> setter_5f3a2e.execute\n        true -> setter_5f3a2e.new_value\n        setter_5f3a2e.continue -> ifexpression_3d7de6.execute\n        ifexpression_3d7de6.then -> continue_9a54bb\n        num_5c0677 -> generaterange_82d404.from\n        1 -> generaterange_82d404.to\n        generaterange_82d404.list -> for_d26972.items\n        ifexpression_3d7de6.else -> for_d26972.reset\n        num_5c0677 -> modulo_adfa16.value\n        for_d26972.item -> modulo_adfa16.divisor\n        modulo_adfa16.result -> if_f81713.predicate\n        for_d26972.onItem -> if_f81713.execute\n        false -> setter_7d3e6c.new_value\n        if_f81713.then -> setter_7d3e6c.execute\n        num_5c0677 -> ifexpression_8f4b4a.gen_0\n        for_d26972.index -> ifexpression_8f4b4a.gen_1\n        if_f81713.else -> for_d26972.next\n        getter_7d3e6c.value -> output_c457b3\n        ifexpression_8f4b4a.then -> continue_9a54bb\n        ifexpression_8f4b4a.else -> for_d26972.next\n        getter_5f3a2e.value -> not_0d5b0c.input\n    }\n\n    \n\n    instance(x: -19, y: -11) num_prime_f8f3ba root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -247) mul_7d1b6c root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -218) lessthan_7f7e5d root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7d1b6c.first\n        y_5390f5 -> mul_7d1b6c.second\n        mul_7d1b6c.result -> lessthan_7f7e5d.left\n        lessthan_7f7e5d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -204, y: 18) opposite_signs_0582b6 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 141, y: -25) modulo_1b9d0e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 375, y: -25) equal_3c6a25 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_1b9d0e.value\n        11 -> modulo_1b9d0e.divisor\n        modulo_1b9d0e.result -> equal_3c6a25.left\n        0 -> equal_3c6a25.right\n        equal_3c6a25.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: -18) is_diff_9b7ebe root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9b5fcb root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9b5fcb.input\n        search_ai -> replace_9b5fcb.search\n        replace_ai -> replace_9b5fcb.replace\n        replace_9b5fcb.output -> output_ai\n    }\n\n    \n\n    instance(x: -124, y: 30) replace_char_68d7c6 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -104, y: 103) reduce_0d1f3c root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 655, y: 176) data_2a7ebe  = 1\n        instance(x: -104, y: -38) unique_43d6f0 root.Std_k98ojb.Sets.Difference {}\n        setter(x: 252, y: 115, name: \"setter_27e9a8\") setter_27e9a8 = product\n        getter(x: -156, y: 104, name: \"getter_3c1d3b\") getter_3c1d3b = product\n        func() {\n            in(x: -249, y: -107, name: \"current\") property(Number) current_8a5e6f\n            in(x: -248, y: 10, name: \"product\") property(Number) product_3b9d5c\n\n            out(x: 513, y: -107, name: \"\") property(Number) _59b7a7\n\n            instance(x: 61, y: -84) mul_2e2f6e root.Std_k98ojb.Math.Mul {}\n            product_3b9d5c -> mul_2e2f6e.first\n            current_8a5e6f -> mul_2e2f6e.second\n            mul_2e2f6e.result -> _59b7a7\n        } -> reduce_0d1f3c.reducer\n        list_5fda54 -> unique_43d6f0.left\n        1 -> setter_27e9a8.new_value\n        data_2a7ebe -> reduce_0d1f3c.initial\n        getter_3c1d3b.value -> reduce_0d1f3c.accumulator\n        unique_43d6f0.difference -> reduce_0d1f3c.items\n        setter_27e9a8.continue -> continue_45190b\n        execute_19300c -> setter_27e9a8.execute\n        list_5fda54 -> unique_43d6f0.right\n        reduce_0d1f3c.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -17, y: -17) unique_product_5b6e9a root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 107) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -264, y: 107) difference_2 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        instance(x: -130, y: 107) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 45, y: -63) find_dissimilar_node root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -103) length_2d1a1e root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -105) modulo_6c1f5c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 403, y: -102) slice_a9d5e0 root.Std_k98ojb.List.Slice {}\n        instance(x: 407, y: -257) slice_6a2f4c root.Std_k98ojb.List.Slice {}\n        instance(x: 634, y: -103) concat_7d0e47 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d1a1e.list\n        n_68068c -> modulo_6c1f5c.value\n        length_2d1a1e.length -> modulo_6c1f5c.divisor\n        modulo_6c1f5c.result -> slice_a9d5e0.start\n        0 -> slice_a9d5e0.end\n        list_48148f -> slice_a9d5e0.list\n        length_2d1a1e.length -> slice_6a2f4c.end\n        modulo_6c1f5c.result -> slice_6a2f4c.start\n        list_48148f -> slice_6a2f4c.list\n        slice_a9d5e0.slice -> concat_7d0e47.right\n        slice_6a2f4c.slice -> concat_7d0e47.left\n        concat_7d0e47.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: 12) rotate_right_0b442c root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -10) reduce_5b4eac root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -176, y: -32, name: \"accumulated\") property(Number) accumulated_1d7c1a\n            in(x: -170, y: 54, name: \"current\") property(Number) current_8e9b4f\n\n            out(x: 1061, y: 23, name: \"result\") property(Number) result_3d0c2a\n\n            instance(x: 274, y: 25) add_2d638a root.Std_k98ojb.Math.Add {}\n            accumulated_1d7c1a -> add_2d638a.first\n            current_8e9b4f -> add_2d638a.second\n            add_2d638a.result -> result_3d0c2a\n        } -> reduce_5b4eac.reducer\n        0 -> reduce_5b4eac.initialValue\n        list_2c62ab -> reduce_5b4eac.items\n        reduce_5b4eac.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -19, y: -37) _sum_0d165a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 184, y: -116) ifexpression_2c3f5e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 706, y: -115, name: \"getter_0d6a4c\") getter_0d6a4c = is_prime\n        setter(x: 398, y: -229, name: \"setter_1b4f2e\") setter_1b4f2e = is_prime\n        instance(x: 759, y: -116) if_f0a7d0 root.Std_k98ojb.Std.If {}\n        setter(x: 398, y: -1, name: \"setter_c6c786\") setter_c6c786 = is_prime\n        instance(x: 542, y: -116) expression_0f5d1a root.Std_k98ojb.Math.Expression {\n            expression: \"(num % i == 0)\"\n        }\n        instance(x: 398, y: 177) for_f5e4c7 root.Std_k98ojb.Std.For {}\n        setter(x: 625, y: -229, name: \"setter_1b4f2e\") setter_0d6a4c = is_prime\n        instance(x: 398, y: -117) generaterange_766b4b root.Std_k98ojb.List.GenerateRange {}\n        ifexpression_2c3f5e.else -> for_f5e4c7.reset\n        num_5c0677 -> expression_0f5d1a.gen_0\n        generaterange_766b4b.list -> for_f5e4c7.items\n        2 -> generaterange_766b4b.from\n        ifexpression_2c3f5e.then -> setter_1b4f2e.execute\n        false -> setter_1b4f2e.new_value\n        true -> setter_c6c786.new_value\n        for_f5e4c7.index -> expression_0f5d1a.gen_1\n        ifexpression_2c3f5e.value -> output_c457b3\n        num_5c0677 -> generaterange_766b4b.to\n        execute_b7b391 -> ifexpression_2c3f5e.execute\n        expression_0f5d1a.result -> if_f0a7d0.predicate\n        for_f5e4c7.onItem -> if_f0a7d0.execute\n        if_f0a7d0.then -> setter_0d6a4c.execute\n        false -> setter_0d6a4c.new_value\n        if_f0a7d0.else -> for_f5e4c7.next\n        for_f5e4c7.done -> continue_9a54bb\n        getter_0d6a4c.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -182, y: 11) num_prime_8f5b47 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7b9c0d root.Std_k98ojb.Math.Mul {}\n        instance(x: 5, y: -107) lessthan_0f5ebe root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7b9c0d.first\n        y_5390f5 -> mul_7b9c0d.second\n        mul_7b9c0d.result -> lessthan_0f5ebe.left\n        lessthan_0f5ebe.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -164, y: 28) opposite_signs_2247b5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5d5b0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -19) equal_2c3e05 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5d5b0a.value\n        11 -> modulo_5d5b0a.divisor\n        modulo_5d5b0a.result -> equal_2c3e05.left\n        0 -> equal_2c3e05.right\n        equal_2c3e05.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: -17) is_diff_8b9d6a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3b5c4d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b5c4d.input\n        search_ai -> replace_3b5c4d.search\n        replace_ai -> replace_3b5c4d.replace\n        replace_3b5c4d.output -> output_ai\n    }\n\n    \n\n    instance(x: -219, y: 167) replace_char_0e8a4f root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2a7c1f\n            in(x: -45, y: 30, name: \"item\") property(Number) item_6b98d7\n\n            out(x: 301, y: -2, name: \"\") property(Number) _e4525b\n\n            instance(x: 129, y: -2) mul_2a7c1f root.Std_k98ojb.Math.Mul {}\n            acc_2a7c1f -> mul_2a7c1f.first\n            item_6b98d7 -> mul_2a7c1f.second\n            mul_2a7c1f.result -> _e4525b\n        } -> reduce_2d6da6.reducer\n        1 -> reduce_2d6da6.accumulator\n        list_5fda54 -> reduce_2d6da6.items\n        instance(x: -30, y: 197) unique_8c2b1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -30, y: 301) distinct_8c2b1a root.Std_k98ojb.List.Sort {}\n        list_5fda54 -> unique_8c2b1a.right\n        list_5fda54 -> distinct_8c2b1a.list\n        distinct_8c2b1a.sorted_list -> unique_8c2b1a.left\n        unique_8c2b1a.difference -> reduce_2d6da6.items\n        execute_19300c -> unique_8c2b1a.execute\n        continue_45190b -> distinct_8c2b1a.execute\n        reduce_2d6da6.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 17, y: -3) unique_product_24d4b5 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -396, y: 129) difference_5b2e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b2e.left\n        list2_ai -> difference_5b2e.right\n        instance(x: -396, y: 247) difference_bf0a root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_bf0a.left\n        list1_ai -> difference_bf0a.right\n        instance(x: -255, y: 183) concat_6dcb root.Std_k98ojb.List.Concat {}\n        difference_5b2e.difference -> concat_6dcb.list1\n        difference_bf0a.difference -> concat_6dcb.list2\n        concat_6dcb.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 189) find_dissimilar_7b5e root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2d6b1a root.Std_k98ojb.List.Length {}\n        instance(x: 57, y: -21) modulo_4c2fcb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 304, y: -101) sub_1d6ebe root.Std_k98ojb.Math.Sub {}\n        instance(x: 572, y: -101) slice_0a2f6c root.Std_k98ojb.List.Slice {}\n        instance(x: 304, y: 10) slice_2d6b1a root.Std_k98ojb.List.Slice {}\n        instance(x: 572, y: -21) concat_2d6b1a root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d6b1a.list\n        n_68068c -> modulo_4c2fcb.value\n        length_2d6b1a.length -> modulo_4c2fcb.divisor\n        length_2d6b1a.length -> sub_1d6ebe.first\n        modulo_4c2fcb.result -> sub_1d6ebe.second\n        list_48148f -> slice_0a2f6c.list\n        sub_1d6ebe.result -> slice_0a2f6c.start\n        -1 -> slice_0a2f6c.end\n        list_48148f -> slice_2d6b1a.list\n        0 -> slice_2d6b1a.start\n        sub_1d6ebe.result -> slice_2d6b1a.end\n        slice_0a2f6c.slice -> concat_2d6b1a.right\n        slice_2d6b1a.slice -> concat_2d6b1a.left\n        concat_2d6b1a.result -> output_823209\n    }\n\n    \n\n    instance(x: -54, y: 17) rotate_right_2c856f root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6e7b4e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -153, y: -11, name: \"accumulated\") property(Number) accumulated_2a848f\n            in(x: -150, y: 76, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 197, y: 33, name: \"result\") property(Number) result_2a848f\n\n            instance(x: -14, y: 35) add_0b075e root.Std_k98ojb.Math.Add {}\n            accumulated_2a848f -> add_0b075e.first\n            current_2c62ab -> add_0b075e.second\n            add_0b075e.result -> result_2a848f\n        } -> reduce_6e7b4e.reducer\n        0 -> reduce_6e7b4e.initialValue\n        list_2c62ab -> reduce_6e7b4e.items\n        reduce_6e7b4e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -15, y: 30) _sum_9d7945 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f7d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 322, y: -106, name: \"getter_45a2e4\") getter_45a2e4 = is_prime\n        setter(x: 798, y: -106, name: \"setter_2b5d5c\") setter_2b5d5c = is_prime\n        instance(x: 322, y: -216) for_0f4a1e root.Std_k98ojb.Std.For {}\n        instance(x: 798, y: -216) ifexpression_45a2e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 322, y: 114, name: \"setter_7d6c45\") setter_7d6c45 = is_prime\n        ifexpression_0f7d6c.then -> continue_9a54bb\n        getter_45a2e4.value -> output_c457b3\n        num_5c0677 -> for_0f4a1e.items\n        2 -> for_0f4a1e.from\n        ifexpression_0f7d6c.else -> setter_7d6c45.execute\n        true -> setter_7d6c45.new_value\n        num_5c0677 -> ifexpression_0f7d6c.gen_0\n        for_0f4a1e.item -> ifexpression_45a2e4.gen_0\n        num_5c0677 -> ifexpression_45a2e4.gen_1\n        for_0f4a1e.onItem -> ifexpression_45a2e4.execute\n        ifexpression_45a2e4.then -> setter_2b5d5c.execute\n        false -> setter_2b5d5c.new_value\n        execute_b7b391 -> for_0f4a1e.reset\n        num_5c0677 -> for_0f4a1e.to\n        ifexpression_45a2e4.else -> for_0f4a1e.next\n        setter_2b5d5c.continue -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -36, y: -87) num_prime_24d4b5 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -247) mul_2b2c4d root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -156) lessthan_7f9e0a root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_2b2c4d.first\n        y_5390f5 -> mul_2b2c4d.second\n        mul_2b2c4d.result -> lessthan_7f9e0a.left\n        lessthan_7f9e0a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -185, y: 6) opposite_signs_33ad55 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 142, y: -24) modulo_5b0d5e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -22) equal_4c8a8d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0d5e.value\n        11 -> modulo_5b0d5e.divisor\n        modulo_5b0d5e.result -> equal_4c8a8d.left\n        0 -> equal_4c8a8d.right\n        equal_4c8a8d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -19, y: -17) is_diff_5b5e4b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 279) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_59bc6e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 209) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -124, y: 111) reduce_7d7c5e root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 609, y: 33) data_4a2f9b  = 1\n        instance(x: -122, y: -10) unique_7c3d75 root.Std_k98ojb.Sets.Difference {}\n        func() {\n            in(x: -162, y: -10, name: \"acc\") property(Number) acc_4f8a7e\n            in(x: -158, y: 73, name: \"item\") property(Number) item_e9b9d8\n\n            out(x: 289, y: 60, name: \"\") property(Number) _c12284\n\n            instance(x: 59, y: 61) mul_7e3f5a root.Std_k98ojb.Math.Mul {}\n            acc_4f8a7e -> mul_7e3f5a.first\n            item_e9b9d8 -> mul_7e3f5a.second\n            mul_7e3f5a.result -> _c12284\n        } -> reduce_7d7c5e.reducer\n        data_4a2f9b -> reduce_7d7c5e.accumulator\n        unique_7c3d75.difference -> reduce_7d7c5e.items\n        list_5fda54 -> unique_7c3d75.right\n        list_5fda54 -> unique_7c3d75.left\n        execute_19300c -> unique_7c3d75.execute\n        reduce_7d7c5e.result -> output_cffcc2\n        reduce_7d7c5e.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -168, y: 2) unique_product_3f2a35 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -397, y: 101) difference_5b1d0e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b1d0e.left\n        list2_ai -> difference_5b1d0e.right\n\n        instance(x: -397, y: 164) difference_bf1d0e root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_bf1d0e.left\n        list1_ai -> difference_bf1d0e.right\n\n        instance(x: -253, y: 132) concat_7c4a6b root.Std_k98ojb.List.Concat {}\n        difference_5b1d0e.difference -> concat_7c4a6b.left\n        difference_bf1d0e.difference -> concat_7c4a6b.right\n\n        instance(x: -123, y: 101) unique_9b8d0e root.Std_k98ojb.List.Sort {}\n        concat_7c4a6b.concatenated -> unique_9b8d0e.list\n        unique_9b8d0e.sorted -> output_ai\n    }\n\n    \n\n    instance(x: 123, y: -5) find_dissimilar_7a4dad root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 46, y: -102) length_0b1eac root.Std_k98ojb.List.Length {}\n        instance(x: 275, y: -105) modulo_7f4c2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 536, y: -104) sub_1e2a1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 778, y: -102) slice_3d6f75 root.Std_k98ojb.List.Slice {}\n        instance(x: 778, y: -241) slice_ea4c4e root.Std_k98ojb.List.Slice {}\n        instance(x: 1027, y: -102) concat_3d6f75 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_0b1eac.list\n        n_68068c -> modulo_7f4c2d.value\n        length_0b1eac.length -> modulo_7f4c2d.divisor\n        length_0b1eac.length -> sub_1e2a1c.first\n        modulo_7f4c2d.result -> sub_1e2a1c.second\n        list_48148f -> slice_3d6f75.list\n        0 -> slice_3d6f75.start\n        sub_1e2a1c.result -> slice_3d6f75.end\n        list_48148f -> slice_ea4c4e.list\n        sub_1e2a1c.result -> slice_ea4c4e.start\n        -1 -> slice_ea4c4e.end\n        slice_3d6f75.slice -> concat_3d6f75.left\n        slice_ea4c4e.slice -> concat_3d6f75.right\n        concat_3d6f75.result -> output_823209\n    }\n\n    \n\n    instance(x: -11, y: 1) rotate_right_6b20eb root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -29) reduce_3b5d7e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -164, y: -115, name: \"accumulated\") property(Number) accumulated_3c3f7a\n            in(x: -160, y: 21, name: \"current\") property(Number) current_9b8d0e\n\n            out(x: 140, y: -15, name: \"sum\") property(Number) sum_c8b53c\n\n            instance(x: -7, y: -16) add_2a49f7 root.Std_k98ojb.Math.Add {}\n            accumulated_3c3f7a -> add_2a49f7.first\n            current_9b8d0e -> add_2a49f7.second\n            add_2a49f7.result -> sum_c8b53c\n        } -> reduce_3b5d7e.reducer\n        0 -> reduce_3b5d7e.initialValue\n        list_2c62ab -> reduce_3b5d7e.items\n        reduce_3b5d7e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -19, y: 10) _sum_417b25 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 189, y: -116) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        setter(x: 204, y: 149, name: \"setter_5a4f6e\") setter_5a4f6e = is_prime\n        getter(x: 738, y: -11) name: \"getter_5a4f6e\" getter_5a4f6e = is_prime\n        instance(x: 209, y: -22) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 731, y: -113) if_f81713 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -405, y: -20, name: \"current\") property(Number) current_6a9e0d\n            in(x: -414, y: -166, name: \"_index\") property(Number) _index_7b3c8f\n\n            out(x: 351, y: -24, name: \"output\") property(Bool) output_9e0d6a\n\n            instance(x: -264, y: -16) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n            num_5c0677 -> modulo_adfa16.value\n            current_6a9e0d -> modulo_adfa16.divisor\n            0 -> output_9e0d6a\n            modulo_adfa16.result -> output_9e0d6a\n        } -> for_8cb3f6.handler\n        instance(x: 725, y: -4) equal_010c84 root.Std_k98ojb.Logic.Equal {}\n        num_5c0677 -> for_8cb3f6.items\n        ifexpression_3d7de6.then -> setter_5a4f6e.execute\n        false -> setter_5a4f6e.new_value\n        getter_5a4f6e.value -> output_c457b3\n        execute_b7b391 -> ifexpression_3d7de6.execute\n        for_8cb3f6.onItem -> if_f81713.execute\n        num_5c0677 -> equal_010c84.right\n        for_8cb3f6.item -> equal_010c84.left\n        if_f81713.else -> continue_9a54bb\n        ifexpression_3d7de6.value -> output_c457b3\n        if_f81713.then -> setter_5a4f6e.execute\n        true -> setter_5a4f6e.new_value\n        for_8cb3f6.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -20, y: -10) num_prime_7b2c1d root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -247) mul_7d1b2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -218) lessthan_6f3e5a root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7d1b2c.first\n        y_5390f5 -> mul_7d1b2c.second\n        mul_7d1b2c.result -> lessthan_6f3e5a.left\n        lessthan_6f3e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -184, y: 20) opposite_signs_e27d6b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 141, y: -25) modulo_1b9d0e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 375, y: -25) equal_3c6a24 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_1b9d0e.value\n        11 -> modulo_1b9d0e.divisor\n        modulo_1b9d0e.result -> equal_3c6a24.left\n        0 -> equal_3c6a24.right\n        equal_3c6a24.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -5, y: -18) is_diff_9b7ebe root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9b8d5c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9b8d5c.input\n        search_ai -> replace_9b8d5c.search\n        replace_ai -> replace_9b8d5c.replace\n        replace_9b8d5c.output -> output_ai\n    }\n\n    \n\n    instance(x: 12, y: -63) replace_char_4f70a3 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -104, y: 100) reduce_5d1c9a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -266, y: -37, name: \"acc\") property(Number) acc_1f7ebe\n            in(x: -244, y: 50, name: \"item\") property(Number) item_c9b8c0\n\n            out(x: 495, y: -6, name: \"result\") property(Number) result_3d5a1f\n\n            instance(x: 73, y: 2) mul_e9e22b root.Std_k98ojb.Math.Mul {}\n            acc_1f7ebe -> mul_e9e22b.first\n            item_c9b8c0 -> mul_e9e22b.second\n            mul_e9e22b.result -> result_3d5a1f\n        } -> reduce_5d1c9a.handler\n        instance(x: -67, y: 24) unique_255180 root.Std_k98ojb.Sets.Difference {}\n        data_instance(x: 284, y: 31) data_5fda54  = []\n        list_5fda54 -> unique_255180.left\n        list_5fda54 -> unique_255180.right\n        unique_255180.difference -> reduce_5d1c9a.items\n        data_instance(x: 376, y: -1) data_1  = 1\n        execute_19300c -> reduce_5d1c9a.execute\n        data_1 -> reduce_5d1c9a.accumulator\n        reduce_5d1c9a.result -> output_cffcc2\n        continue_45190b -> reduce_5d1c9a.continue\n    }\n\n    \n\n    instance(x: -36, y: 17) unique_product_8e9f5c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 107) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -264, y: 107) difference_2 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        instance(x: -130, y: 107) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 45, y: -63) find_dissimilar_node root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -103) length_2d1a1e root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -105) modulo_6c6f6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 407, y: -102) slice_a3a4e0 root.Std_k98ojb.List.Slice {}\n        instance(x: 404, y: -258) slice_7c6f1d root.Std_k98ojb.List.Slice {}\n        instance(x: 629, y: -106) concat_d3a2e5 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d1a1e.list\n        n_68068c -> modulo_6c6f6d.value\n        length_2d1a1e.length -> modulo_6c6f6d.divisor\n        modulo_6c6f6d.result -> slice_a3a4e0.start\n        list_48148f -> slice_a3a4e0.list\n        -1 -> slice_a3a4e0.end\n        length_2d1a1e.length -> slice_7c6f1d.end\n        0 -> slice_7c6f1d.start\n        list_48148f -> slice_7c6f1d.list\n        modulo_6c6f6d.result -> slice_7c6f1d.start\n        slice_a3a4e0.slice -> concat_d3a2e5.left\n        slice_7c6f1d.slice -> concat_d3a2e5.right\n        concat_d3a2e5.result -> output_823209\n    }\n\n    \n\n    instance(x: -11, y: 4) rotate_right_4b164e root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -10) reduce_5b2ebe root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -176, y: -32, name: \"accumulated\") property(Number) accumulated_4d2c1a\n            in(x: -170, y: 56, name: \"current\") property(Number) current_8e9b4f\n\n            out(x: 1073, y: 11, name: \"result\") property(Number) result_4d2c1a\n\n            instance(x: 456, y: -11) add_63541a root.Std_k98ojb.Math.Add {}\n            accumulated_4d2c1a -> add_63541a.first\n            current_8e9b4f -> add_63541a.second\n            add_63541a.result -> result_4d2c1a\n        } -> reduce_5b2ebe.reducer\n        0 -> reduce_5b2ebe.initialValue\n        list_2c62ab -> reduce_5b2ebe.items\n        reduce_5b2ebe.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -137, y: -90) _sum_5d5bca root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 189, y: -116) ifexpression_2c3f1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 706, y: -115, name: \"getter_4d6a4c\") getter_4d6a4c = is_prime\n        setter(x: 398, y: -224, name: \"setter_3b4e3f\") setter_3b4e3f = is_prime\n        instance(x: 1057, y: -112) not_6d1a9c root.Std_k98ojb.Logic.Not {}\n        instance(x: 509, y: -114) find_65612e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 734, y: -114) if_1d1f6c root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -202, y: -59, name: \"item\") property(Number) item_0a24e2\n\n            out(x: 371, y: -60, name: \"output\") property(Bool) output_8d2b0c\n\n            instance(x: -15, y: -60) modulo_d9f45d root.Std_k98ojb.Math.Modulo {}\n            num_5c0677 -> modulo_d9f45d.value\n            item_0a24e2 -> modulo_d9f45d.divisor\n            0 -> output_8d2b0c\n            modulo_d9f45d.result -> output_8d2b0c\n        } -> find_65612e.handler\n        instance(x: -3, y: -117) generaterange_7a78bb root.Std_k98ojb.List.GenerateRange {}\n        2 -> generaterange_7a78bb.from\n        num_5c0677 -> generaterange_7a78bb.to\n        ifexpression_2c3f1e.then -> setter_3b4e3f.execute\n        false -> setter_3b4e3f.new_value\n        find_65612e.item -> getter_4d6a4c.value\n        generaterange_7a78bb.list -> find_65612e.items\n        ifexpression_2c3f1e.else -> find_65612e.execute\n        find_65612e.done -> continue_9a54bb\n        not_6d1a9c.result -> output_c457b3\n        getter_4d6a4c.value -> if_1d1f6c.predicate\n        if_1d1f6c.else -> find_65612e.reset\n        true -> setter_3b4e3f.new_value\n        execute_b7b391 -> ifexpression_2c3f1e.execute\n        if_1d1f6c.then -> continue_9a54bb\n        if_1d1f6c.value -> not_6d1a9c.input\n    }\n\n    \n\n    instance(x: -207, y: 18) num_prime_3b5b0e root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7b9c0d root.Std_k98ojb.Math.Mul {}\n        instance(x: 5, y: -107) lessthan_0f5ebe root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7b9c0d.first\n        y_5390f5 -> mul_7b9c0d.second\n        mul_7b9c0d.result -> lessthan_0f5ebe.left\n        lessthan_0f5ebe.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -164, y: 28) opposite_signs_2247b5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5d5b0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -19) equal_2c3e05 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5d5b0a.value\n        11 -> modulo_5d5b0a.divisor\n        modulo_5d5b0a.result -> equal_2c3e05.left\n        0 -> equal_2c3e05.right\n        equal_2c3e05.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: -17) is_diff_8b9d6a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3b5fbb root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b5fbb.input\n        search_ai -> replace_3b5fbb.search\n        replace_ai -> replace_3b5fbb.replace\n        replace_3b5fbb.output -> output_ai\n    }\n\n    \n\n    instance(x: -246, y: 109) replace_char_78d6e7 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2a7c1f\n            in(x: -45, y: 30, name: \"item\") property(Number) item_6b98d7\n\n            out(x: 301, y: -2, name: \"\") property(Number) _e4525b\n\n            instance(x: 129, y: -2) mul_2a7c1f root.Std_k98ojb.Math.Mul {}\n            acc_2a7c1f -> mul_2a7c1f.first\n            item_6b98d7 -> mul_2a7c1f.second\n            mul_2a7c1f.result -> _e4525b\n        } -> reduce_2d6da6.reducer\n        1 -> reduce_2d6da6.accumulator\n        list_5fda54 -> reduce_2d6da6.items\n        instance(x: -30, y: 197) unique_8c2b1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -30, y: 301) distinct_8c2b1a root.Std_k98ojb.List.Sort {}\n        list_5fda54 -> unique_8c2b1a.right\n        list_5fda54 -> distinct_8c2b1a.list\n        distinct_8c2b1a.sorted_list -> unique_8c2b1a.left\n        unique_8c2b1a.difference -> reduce_2d6da6.items\n        execute_19300c -> unique_8c2b1a.execute\n        continue_45190b -> distinct_8c2b1a.execute\n        reduce_2d6da6.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 17, y: -3) unique_product_24d4b5 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -396, y: 129) difference_5b2e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b2e.left\n        list2_ai -> difference_5b2e.right\n        instance(x: -396, y: 247) difference_bf0a root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_bf0a.left\n        list1_ai -> difference_bf0a.right\n        instance(x: -255, y: 183) concat_6dcb root.Std_k98ojb.List.Concat {}\n        difference_5b2e.difference -> concat_6dcb.list1\n        difference_bf0a.difference -> concat_6dcb.list2\n        concat_6dcb.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -34, y: 189) find_dissimilar_7b5e root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2d6b1a root.Std_k98ojb.List.Length {}\n        instance(x: 57, y: -21) modulo_4c2fcb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 304, y: -101) sub_1d6ebe root.Std_k98ojb.Math.Sub {}\n        instance(x: 572, y: -101) slice_0a2f6c root.Std_k98ojb.List.Slice {}\n        instance(x: 304, y: 10) slice_2d6b1a root.Std_k98ojb.List.Slice {}\n        instance(x: 572, y: -21) concat_2d6b1a root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d6b1a.list\n        n_68068c -> modulo_4c2fcb.value\n        length_2d6b1a.length -> modulo_4c2fcb.divisor\n        length_2d6b1a.length -> sub_1d6ebe.first\n        modulo_4c2fcb.result -> sub_1d6ebe.second\n        list_48148f -> slice_0a2f6c.list\n        sub_1d6ebe.result -> slice_0a2f6c.start\n        -1 -> slice_0a2f6c.end\n        list_48148f -> slice_2d6b1a.list\n        0 -> slice_2d6b1a.start\n        sub_1d6ebe.result -> slice_2d6b1a.end\n        slice_0a2f6c.slice -> concat_2d6b1a.right\n        slice_2d6b1a.slice -> concat_2d6b1a.left\n        concat_2d6b1a.result -> output_823209\n    }\n\n    \n\n    instance(x: -54, y: 17) rotate_right_2c856f root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6e7b4e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -153, y: -11, name: \"accumulated\") property(Number) accumulated_2a848f\n            in(x: -150, y: 76, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 197, y: 33, name: \"result\") property(Number) result_2a848f\n\n            instance(x: -14, y: 35) add_0b075e root.Std_k98ojb.Math.Add {}\n            accumulated_2a848f -> add_0b075e.first\n            current_2c62ab -> add_0b075e.second\n            add_0b075e.result -> result_2a848f\n        } -> reduce_6e7b4e.reducer\n        0 -> reduce_6e7b4e.initialValue\n        list_2c62ab -> reduce_6e7b4e.items\n        reduce_6e7b4e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -15, y: 30) _sum_9d7945 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f7d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 322, y: -106, name: \"getter_45a2e4\") getter_45a2e4 = is_prime\n        setter(x: 798, y: -106, name: \"setter_2b5d5c\") setter_2b5d5c = is_prime\n        instance(x: 322, y: -216) for_0f4e5a root.Std_k98ojb.Std.For {}\n        instance(x: 798, y: -216) ifexpression_45a2e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 322, y: 114, name: \"setter_7d6c45\") setter_7d6c45 = is_prime\n        num_5c0677 -> ifexpression_0f7d6c.gen_0\n        getter_45a2e4.value -> output_c457b3\n        execute_b7b391 -> ifexpression_0f7d6c.execute\n        for_0f4e5a.onItem -> ifexpression_45a2e4.execute\n        num_5c0677 -> for_0f4e5a.items\n        2 -> for_0f4e5a.start\n        num_5c0677 -> for_0f4e5a.end\n        ifexpression_45a2e4.then -> setter_2b5d5c.execute\n        false -> setter_2b5d5c.new_value\n        true -> setter_7d6c45.new_value\n        ifexpression_0f7d6c.else -> for_0f4e5a.reset\n        ifexpression_45a2e4.value -> setter_2b5d5c.new_value\n        ifexpression_0f7d6c.then -> setter_7d6c45.execute\n        for_0f4e5a.done -> continue_9a54bb\n        ifexpression_45a2e4.else -> for_0f4e5a.next\n    }\n\n    \n\n    instance(x: -183, y: 17) num_prime_6b4d6c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -247) mul_2b2c4d root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -156) lessthan_7f9e0a root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_2b2c4d.first\n        y_5390f5 -> mul_2b2c4d.second\n        mul_2b2c4d.result -> lessthan_7f9e0a.left\n        lessthan_7f9e0a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -185, y: 6) opposite_signs_33ad55 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 142, y: -24) modulo_5b0d5e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -22) equal_4c8a8d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0d5e.value\n        11 -> modulo_5b0d5e.divisor\n        modulo_5b0d5e.result -> equal_4c8a8d.left\n        0 -> equal_4c8a8d.right\n        equal_4c8a8d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -19, y: -17) is_diff_5b5e4b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 279) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -192, y: 139) replace_char_59bc6e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 209) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -124, y: 111) reduce_7d7c5e root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 609, y: 33) data_4a2f9b  = 1\n        instance(x: -122, y: -10) unique_7c3d75 root.Std_k98ojb.Sets.Difference {}\n        func() {\n            in(x: -162, y: -10, name: \"acc\") property(Number) acc_4f8a7e\n            in(x: -158, y: 73, name: \"item\") property(Number) item_e9b9d8\n\n            out(x: 289, y: 60, name: \"\") property(Number) _c12274\n\n            instance(x: 59, y: 61) mul_7e3f5a root.Std_k98ojb.Math.Mul {}\n            acc_4f8a7e -> mul_7e3f5a.first\n            item_e9b9d8 -> mul_7e3f5a.second\n            mul_7e3f5a.result -> _c12274\n        } -> reduce_7d7c5e.reducer\n        data_4a2f9b -> reduce_7d7c5e.accumulator\n        unique_7c3d75.difference -> reduce_7d7c5e.items\n        list_5fda54 -> unique_7c3d75.right\n        list_5fda54 -> unique_7c3d75.left\n        execute_19300c -> unique_7c3d75.execute\n        reduce_7d7c5e.result -> output_cffcc2\n        reduce_7d7c5e.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -168, y: 16) unique_product_3a4f6d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -397, y: 101) difference_5b1d0e root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_5b1d0e.left\n        list2_ai -> difference_5b1d0e.right\n\n        instance(x: -397, y: 164) difference_bf1d0e root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_bf1d0e.left\n        list1_ai -> difference_bf1d0e.right\n\n        instance(x: -253, y: 132) concat_7c4a6b root.Std_k98ojb.List.Concat {}\n        difference_5b1d0e.difference -> concat_7c4a6b.left\n        difference_bf1d0e.difference -> concat_7c4a6b.right\n\n        instance(x: -123, y: 101) unique_9b8d0e root.Std_k98ojb.List.Sort {}\n        concat_7c4a6b.concatenated -> unique_9b8d0e.list\n        unique_9b8d0e.sorted -> output_ai\n    }\n\n    \n\n    instance(x: 123, y: -5) find_dissimilar_7a4dad root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 46, y: -102) length_0b1eac root.Std_k98ojb.List.Length {}\n        instance(x: 275, y: -105) modulo_7f4c2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 536, y: -104) sub_1e2a1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 778, y: -102) slice_3d6f75 root.Std_k98ojb.List.Slice {}\n        instance(x: 778, y: -241) slice_ea4c4e root.Std_k98ojb.List.Slice {}\n        instance(x: 1027, y: -102) concat_3d6f75 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_0b1eac.list\n        n_68068c -> modulo_7f4c2d.value\n        length_0b1eac.length -> modulo_7f4c2d.divisor\n        length_0b1eac.length -> sub_1e2a1c.first\n        modulo_7f4c2d.result -> sub_1e2a1c.second\n        list_48148f -> slice_3d6f75.list\n        0 -> slice_3d6f75.start\n        sub_1e2a1c.result -> slice_3d6f75.end\n        list_48148f -> slice_ea4c4e.list\n        sub_1e2a1c.result -> slice_ea4c4e.start\n        -1 -> slice_ea4c4e.end\n        slice_3d6f75.slice -> concat_3d6f75.left\n        slice_ea4c4e.slice -> concat_3d6f75.right\n        concat_3d6f75.result -> output_823209\n    }\n\n    \n\n    instance(x: -11, y: 1) rotate_right_6b24cb root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -29) reduce_3b5d7e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -164, y: -115, name: \"accumulated\") property(Number) accumulated_3c3f7a\n            in(x: -160, y: 21, name: \"current\") property(Number) current_9b8d0e\n\n            out(x: 140, y: -15, name: \"sum\") property(Number) sum_c8b53c\n\n            instance(x: -7, y: -16) add_2a48f7 root.Std_k98ojb.Math.Add {}\n            accumulated_3c3f7a -> add_2a48f7.first\n            current_9b8d0e -> add_2a48f7.second\n            add_2a48f7.result -> sum_c8b53c\n        } -> reduce_3b5d7e.reducer\n        0 -> reduce_3b5d7e.initialValue\n        list_2c62ab -> reduce_3b5d7e.items\n        reduce_3b5d7e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -19, y: 10) _sum_41c435 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 189, y: -116) ifexpression_3d7de6 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        setter(x: 204, y: 149, name: \"setter_5a4f6e\") setter_5a4f6e = is_prime\n        getter(x: 738, y: -11) name: \"getter_5a4f6e\" getter_5a4f6e = is_prime\n        instance(x: 209, y: -22) for_8cb3f6 root.Std_k98ojb.Std.For {}\n        instance(x: 731, y: -113) if_f81713 root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -405, y: -20, name: \"current\") property(Number) current_6a9e0d\n            in(x: -414, y: -166, name: \"_index\") property(Number) _index_7b3c8f\n\n            out(x: 351, y: -24, name: \"output\") property(Bool) output_f9a0d0\n\n            instance(x: -264, y: -16) modulo_adfa16 root.Std_k98ojb.Math.Modulo {}\n            num_5c0677 -> modulo_adfa16.value\n            current_6a9e0d -> modulo_adfa16.divisor\n            0 -> output_f9a0d0\n            modulo_adfa16.result -> output_f9a0d0\n        } -> for_8cb3f6.handler\n        instance(x: 725, y: -4) not_75283f root.Std_k98ojb.Logic.Not {}\n        setter(x: 1001, y: -112, name: \"setter_5a4f6e\") setter_5a4f6e = is_prime\n        num_5c0677 -> for_8cb3f6.items\n        ifexpression_3d7de6.then -> setter_5a4f6e.execute\n        false -> setter_5a4f6e.new_value\n        execute_b7b391 -> ifexpression_3d7de6.execute\n        getter_5a4f6e.value -> output_c457b3\n        for_8cb3f6.onItem -> if_f81713.execute\n        if_f81713.then -> setter_5a4f6e.execute\n        true -> setter_5a4f6e.new_value\n        ifexpression_3d7de6.else -> for_8cb3f6.reset\n        if_f81713.value -> not_75283f.input\n        if_f81713.else -> continue_9a54bb\n        for_8cb3f6.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -10, y: -10) num_prime_7a4dad root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -247) mul_7d1b2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -218) lessthan_6f3e5a root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7d1b2c.first\n        y_5390f5 -> mul_7d1b2c.second\n        mul_7d1b2c.result -> lessthan_6f3e5a.left\n        lessthan_6f3e5a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -184, y: 20) opposite_signs_e27d6b root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 141, y: -25) modulo_1b9d0e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 375, y: -25) equal_3c6a24 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_1b9d0e.value\n        11 -> modulo_1b9d0e.divisor\n        modulo_1b9d0e.result -> equal_3c6a24.left\n        0 -> equal_3c6a24.right\n        equal_3c6a24.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -5, y: -18) is_diff_9b7ebe root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9b8d5c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9b8d5c.input\n        search_ai -> replace_9b8d5c.search\n        replace_ai -> replace_9b8d5c.replace\n        replace_9b8d5c.output -> output_ai\n    }\n\n    \n\n    instance(x: 12, y: -63) replace_char_4f70a3 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -104, y: 100) reduce_5d1c9a root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -266, y: -37, name: \"acc\") property(Number) acc_1f7ebe\n            in(x: -244, y: 50, name: \"item\") property(Number) item_c9b8c0\n\n            out(x: 495, y: -6, name: \"result\") property(Number) result_3d5a1f\n\n            instance(x: 73, y: 2) mul_e9e22b root.Std_k98ojb.Math.Mul {}\n            acc_1f7ebe -> mul_e9e22b.first\n            item_c9b8c0 -> mul_e9e22b.second\n            mul_e9e22b.result -> result_3d5a1f\n        } -> reduce_5d1c9a.handler\n        instance(x: -67, y: 24) unique_255180 root.Std_k98ojb.Sets.Difference {}\n        data_instance(x: 284, y: 31) data_5fda54  = []\n        list_5fda54 -> unique_255180.left\n        list_5fda54 -> unique_255180.right\n        unique_255180.difference -> reduce_5d1c9a.items\n        data_instance(x: 376, y: -1) data_1  = 1\n        execute_19300c -> reduce_5d1c9a.execute\n        data_1 -> reduce_5d1c9a.accumulator\n        reduce_5d1c9a.result -> output_cffcc2\n        continue_45190b -> reduce_5d1c9a.continue\n    }\n\n    \n\n    instance(x: -36, y: 17) unique_product_8e9f5c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 107) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -264, y: 107) difference_2 root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        instance(x: -130, y: 107) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 45, y: -63) find_dissimilar_node root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -103) length_2d1a1e root.Std_k98ojb.List.Length {}\n        instance(x: 167, y: -105) modulo_6c6f6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 407, y: -102) slice_a3a4e0 root.Std_k98ojb.List.Slice {}\n        instance(x: 404, y: -258) slice_7c6f1d root.Std_k98ojb.List.Slice {}\n        instance(x: 629, y: -106) concat_d3a2e5 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d1a1e.list\n        n_68068c -> modulo_6c6f6d.value\n        length_2d1a1e.length -> modulo_6c6f6d.divisor\n        modulo_6c6f6d.result -> slice_a3a4e0.start\n        list_48148f -> slice_a3a4e0.list\n        -1 -> slice_a3a4e0.end\n        length_2d1a1e.length -> slice_7c6f1d.end\n        0 -> slice_7c6f1d.start\n        list_48148f -> slice_7c6f1d.list\n        modulo_6c6f6d.result -> slice_7c6f1d.start\n        slice_a3a4e0.slice -> concat_d3a2e5.left\n        slice_7c6f1d.slice -> concat_d3a2e5.right\n        concat_d3a2e5.result -> output_823209\n    }\n\n    \n\n    instance(x: -11, y: 4) rotate_right_4b164e root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -10) reduce_5b2ebe root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -176, y: -32, name: \"accumulated\") property(Number) accumulated_4d2c1a\n            in(x: -170, y: 56, name: \"current\") property(Number) current_8e9b4f\n\n            out(x: 1073, y: 11, name: \"result\") property(Number) result_4d2c1a\n\n            instance(x: 456, y: -11) add_63541a root.Std_k98ojb.Math.Add {}\n            accumulated_4d2c1a -> add_63541a.first\n            current_8e9b4f -> add_63541a.second\n            add_63541a.result -> result_4d2c1a\n        } -> reduce_5b2ebe.reducer\n        0 -> reduce_5b2ebe.initialValue\n        list_2c62ab -> reduce_5b2ebe.items\n        reduce_5b2ebe.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -137, y: -90) _sum_5d5bca root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 189, y: -116) ifexpression_2c3f1e root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 706, y: -115, name: \"getter_4d6a4c\") getter_4d6a4c = is_prime\n        setter(x: 398, y: -224, name: \"setter_3b4e3f\") setter_3b4e3f = is_prime\n        instance(x: 1057, y: -112) not_6d1a9c root.Std_k98ojb.Logic.Not {}\n        instance(x: 509, y: -114) find_65612e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 734, y: -114) if_1d1f6c root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -202, y: -59, name: \"item\") property(Number) item_0a24e2\n\n            out(x: 371, y: -60, name: \"output\") property(Bool) output_8d2b0c\n\n            instance(x: -15, y: -60) modulo_d9f45d root.Std_k98ojb.Math.Modulo {}\n            num_5c0677 -> modulo_d9f45d.value\n            item_0a24e2 -> modulo_d9f45d.divisor\n            0 -> output_8d2b0c\n            modulo_d9f45d.result -> output_8d2b0c\n        } -> find_65612e.handler\n        instance(x: -3, y: -117) generaterange_7a78be root.Std_k98ojb.List.GenerateRange {}\n        2 -> generaterange_7a78be.from\n        num_5c0677 -> generaterange_7a78be.to\n        ifexpression_2c3f1e.then -> setter_3b4e3f.execute\n        false -> setter_3b4e3f.new_value\n        find_65612e.item -> getter_4d6a4c.value\n        generaterange_7a78be.list -> find_65612e.items\n        ifexpression_2c3f1e.else -> find_65612e.execute\n        find_65612e.done -> continue_9a54bb\n        true -> output_c457b3\n        getter_4d6a4c.value -> not_6d1a9c.input\n        ifexpression_2c3f1e.then -> continue_9a54bb\n        find_65612e.found -> if_1d1f6c.execute\n        if_1d1f6c.else -> setter_3b4e3f.execute\n        true -> setter_3b4e3f.new_value\n        not_6d1a9c.result -> output_c457b3\n        execute_b7b391 -> ifexpression_2c3f1e.execute\n        if_1d1f6c.then -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -80, y: 11) num_prime_71b7e3 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7b5d5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -107) lessthan_3f7e6b root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7b5d5c.first\n        y_5390f5 -> mul_7b5d5c.second\n        mul_7b5d5c.result -> lessthan_3f7e6b.left\n        lessthan_3f7e6b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -184, y: 20) opposite_signs_2b45d5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5b0d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -18) equal_2c2e0b root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0d1a.value\n        11 -> modulo_5b0d1a.divisor\n        modulo_5b0d1a.result -> equal_2c2e0b.left\n        0 -> equal_2c2e0b.right\n        equal_2c2e0b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: -15) is_diff_7d98a7 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3b2cbb root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b2cbb.input\n        search_ai -> replace_3b2cbb.search\n        replace_ai -> replace_3b2cbb.replace\n        replace_3b2cbb.output -> output_ai\n    }\n\n    \n\n    instance(x: -164, y: 50) replace_char_789eac root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2f5a4c\n            in(x: -45, y: 101, name: \"item\") property(Number) item_6b9d8e\n\n            out(x: 269, y: 31, name: \"\") property(Number) _7dd980\n\n            instance(x: 102, y: 45) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_2f5a4c -> mul_584bfd.first\n            item_6b9d8e -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_2d6da6.reducer\n        instance(x: -13, y: 21) unique_78d487 root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_78d487.left\n        list_5fda54 -> unique_78d487.right\n        unique_78d487.difference -> reduce_2d6da6.items\n        1 -> reduce_2d6da6.initial_value\n        execute_19300c -> unique_78d487.execute\n        unique_78d487.difference -> reduce_2d6da6.items\n        reduce_2d6da6.result -> output_cffcc2\n        reduce_2d6da6.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: 3, y: -1) unique_product_33ad5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -395, y: 264) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -207, y: 194) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 40, y: -3) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2b4ebe root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: -107) modulo_4d6c1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 483, y: -109) sub_2f5e5b root.Std_k98ojb.Math.Sub {}\n        instance(x: 702, y: -109) slice_6d6c0a root.Std_k98ojb.List.Slice {}\n        instance(x: 483, y: -21) slice_4f5e5b root.Std_k98ojb.List.Slice {}\n        instance(x: 702, y: -21) concat_6d6c0a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2b4ebe.list\n        n_68068c -> modulo_4d6c1a.value\n        length_2b4ebe.length -> modulo_4d6c1a.divisor\n        length_2b4ebe.length -> sub_2f5e5b.first\n        modulo_4d6c1a.result -> sub_2f5e5b.second\n        list_48148f -> slice_6d6c0a.list\n        0 -> slice_6d6c0a.start\n        sub_2f5e5b.result -> slice_6d6c0a.end\n        list_48148f -> slice_4f5e5b.list\n        sub_2f5e5b.result -> slice_4f5e5b.start\n        -1 -> slice_4f5e5b.end\n        slice_4f5e5b.slice -> concat_6d6c0a.left\n        slice_6d6c0a.slice -> concat_6d6c0a.right\n        concat_6d6c0a.result -> output_823209\n    }\n\n    \n\n    instance(x: -14, y: 57) rotate_right_7b4ebe root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6b4d1e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -175, y: -39, name: \"accumulated\") property(Number) accumulated_2c62ab\n            in(x: -170, y: 44, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 822, y: -5, name: \"sum\") property(Number) sum_2a848f\n\n            instance(x: 39, y: 10) add_7b3b7b root.Std_k98ojb.Math.Add {}\n            accumulated_2c62ab -> add_7b3b7b.first\n            current_2c62ab -> add_7b3b7b.second\n            add_7b3b7b.result -> sum_2a848f\n        } -> reduce_6b4d1e.reducer\n        0 -> reduce_6b4d1e.initialValue\n        list_2c62ab -> reduce_6b4d1e.items\n        reduce_6b4d1e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -35, y: 10) _sum_7b3b7b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f5d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 379, y: -111, name: \"getter_4e4a2b\") getter_4e4a2b = is_prime\n        setter(x: 658, y: -109) setter_4d5c1f root.Std_k98ojb.Setter {\n            property: Bool\n        }\n        instance(x: 378, y: -216) for_1e4a1c root.Std_k98ojb.Std.For {}\n        instance(x: 604, y: -215) ifexpression_4d5c1f root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 379, y: -28, name: \"setter_4e4a2b\") setter_4e4a2b = is_prime\n        instance(x: 1056, y: -215) if_4d5c1f root.Std_k98ojb.Std.If {}\n        num_5c0677 -> for_1e4a1c.items\n        execute_b7b391 -> ifexpression_0f5d6c.execute\n        2 -> for_1e4a1c.start\n        true -> setter_4e4a2b.new_value\n        num_5c0677 -> ifexpression_0f5d6c.gen_0\n        getter_4e4a2b.value -> output_c457b3\n        for_1e4a1c.item -> ifexpression_4d5c1f.gen_0\n        num_5c0677 -> ifexpression_4d5c1f.gen_1\n        ifexpression_4d5c1f.result -> if_4d5c1f.predicate\n        for_1e4a1c.onItem -> if_4d5c1f.execute\n        if_4d5c1f.then -> setter_4d5c1f.execute\n        false -> setter_4d5c1f.new_value\n        ifexpression_0f5d6c.else -> for_1e4a1c.reset\n        if_4d5c1f.value -> continue_9a54bb\n        if_4d5c1f.else -> for_1e4a1c.next\n    }\n\n    \n\n    instance(x: -20, y: -63) num_prime_7b8c7f root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -174) mul_1d7b5e root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -220) lessthan_bf6c64 root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_1d7b5e.first\n        y_5390f5 -> mul_1d7b5e.second\n        mul_1d7b5e.result -> lessthan_bf6c64.left\n        lessthan_bf6c64.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -208, y: 1) opposite_signs_155b0d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -11) modulo_5b0a5d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -10) equal_8c8e1d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0a5d.value\n        11 -> modulo_5b0a5d.divisor\n        modulo_5b0a5d.result -> equal_8c8e1d.left\n        0 -> equal_8c8e1d.right\n        equal_8c8e1d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -74, y: -9) is_diff_5b2a5c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 379) replace_1f5b4a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1f5b4a.input\n        search_ai -> replace_1f5b4a.search\n        replace_ai -> replace_1f5b4a.replace\n        replace_1f5b4a.output -> output_ai\n    }\n\n    \n\n    instance(x: -206, y: 137) replace_char_89e5c6 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_59bc6e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -78, y: -11) reduce_4c2eac root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -156, y: -30, name: \"current\") property(Number) current_e2f4a7\n            in(x: -156, y: 30, name: \"acc\") property(Number) acc_8b9c2d\n\n            out(x: 456, y: 0, name: \"\") property(Number) _e70510\n\n            instance(x: 93, y: -22) mul_ea4b1f root.Std_k98ojb.Math.Mul {}\n            current_e2f4a7 -> mul_ea4b1f.first\n            acc_8b9c2d -> mul_ea4b1f.second\n            mul_ea4b1f.result -> _e70510\n        } -> reduce_4c2eac.reducer\n        1 -> reduce_4c2eac.initial_value\n        instance(x: -38, y: 99) unique_6d0655 root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_6d0655.left\n        list_5fda54 -> unique_6d0655.right\n        unique_6d0655.difference -> reduce_4c2eac.items\n        execute_19300c -> reduce_4c2eac.execute\n        reduce_4c2eac.result -> output_cffcc2\n        reduce_4c2eac.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: -87, y: 16) unique_product_ea3d5f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -339, y: 224) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -339, y: 365) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -170, y: 295) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n    instance(x: 43, y: -7) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 462, y: -221) concat_4d7fbb root.Std_k98ojb.List.Concat {}\n        instance(x: 152, y: -209) slice_0c3a5e root.Std_k98ojb.List.Slice {}\n        instance(x: 160, y: -39) length_4d7fbb root.Std_k98ojb.List.Length {}\n        instance(x: 304, y: -209) slice_b6c5a7 root.Std_k98ojb.List.Slice {}\n        instance(x: 219, y: -122) sub_7e65f6 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> length_4d7fbb.list\n        n_68068c -> sub_7e65f6.second\n        length_4d7fbb.length -> sub_7e65f6.first\n        sub_7e65f6.result -> slice_0c3a5e.start\n        -1 -> slice_0c3a5e.end\n        list_48148f -> slice_0c3a5e.list\n        0 -> slice_b6c5a7.start\n        sub_7e65f6.result -> slice_b6c5a7.end\n        list_48148f -> slice_b6c5a7.list\n        slice_b6c5a7.slice -> concat_4d7fbb.left\n        slice_0c3a5e.slice -> concat_4d7fbb.right\n        concat_4d7fbb.result -> output_823209\n    }\n\n    \n\n    instance(x: -136, y: 2) rotate_right_eb9d0b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -4) reduce_6b6e6d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -275, y: -30, name: \"accumulator\") property(Number) accumulator_6c3f4a\n            in(x: -271, y: 115, name: \"currentValue\") property(Number) currentValue_9b8d6e\n\n            out(x: 291, y: 40, name: \"result\") property(Number) result_13c4f6\n\n            instance(x: -79, y: 42) add_5c5a7a root.Std_k98ojb.Math.Add {}\n            accumulator_6c3f4a -> add_5c5a7a.first\n            currentValue_9b8d6e -> add_5c5a7a.second\n            add_5c5a7a.result -> result_13c4f6\n        } -> reduce_6b6e6d.reducer\n        0 -> reduce_6b6e6d.initialValue\n        list_2c62ab -> reduce_6b6e6d.items\n        reduce_6b6e6d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -15, y: 179) _sum_3b530b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 284, y: -216) generaterange_4e7c5d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 388, y: -108) for_e6b2f4 root.Std_k98ojb.Std.For {}\n        instance(x: 602, y: -110) modulo_75d5a2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 831, y: -112) equal_bf4e6c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1046, y: -117) if_5d05a6 root.Std_k98ojb.Std.If {}\n        setter(x: 113, y: -226, name: \"setter_d7f4c4\") setter_d7f4c4 = is_prime\n        getter(x: 788, y: -210, name: \"getter_59e7a2\") getter_59e7a2 = is_prime\n        instance(x: 367, y: 26) lessthanorequal_4d6b0f root.Std_k98ojb.Math.LessThanOrEqual {}\n        setter(x: -101, y: 31, name: \"setter_c5e6c8\") setter_c5e6c8 = is_prime\n        getter(x: 275, y: 24, name: \"getter_2d9f4b\") getter_2d9f4b = is_prime\n        1 -> generaterange_4e7c5d.from\n        num_5c0677 -> generaterange_4e7c5d.to\n        true -> setter_c5e6c8.new_value\n        execute_b7b391 -> setter_c5e6c8.execute\n        setter_c5e6c8.continue -> for_e6b2f4.reset\n        num_5c0677 -> lessthanorequal_4d6b0f.right\n        2 -> lessthanorequal_4d6b0f.left\n        lessthanorequal_4d6b0f.result -> getter_2d9f4b.execute\n        generaterange_4e7c5d.list -> for_e6b2f4.items\n        num_5c0677 -> modulo_75d5a2.value\n        for_e6b2f4.item -> modulo_75d5a2.divisor\n        0 -> equal_bf4e6c.right\n        modulo_75d5a2.result -> equal_bf4e6c.left\n        equal_bf4e6c.result -> if_5d05a6.predicate\n        for_e6b2f4.onItem -> if_5d05a6.execute\n        false -> setter_d7f4c4.new_value\n        getter_59e7a2.value -> output_c457b3\n        if_5d05a6.then -> setter_d7f4c4.execute\n        for_e6b2f4.done -> continue_9a54bb\n        if_5d05a6.else -> for_e6b2f4.next\n    }\n\n    \n\n    instance(x: -183, y: 114) num_prime_7e7c0d root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -267) mul_4e7b2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 54, y: -219) lessthanzero_c7f01d root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_4e7b2c.first\n        y_5390f5 -> mul_4e7b2c.second\n        0 -> lessthanzero_c7f01d.right\n        mul_4e7b2c.result -> lessthanzero_c7f01d.left\n        lessthanzero_c7f01d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -165, y: 18) opposite_signs_e8748e root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 169, y: -14) modulo_5a8b8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -10) equal_3e5b6c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5a8b8d.value\n        11 -> modulo_5a8b8d.divisor\n        modulo_5a8b8d.result -> equal_3e5b6c.left\n        0 -> equal_3e5b6c.right\n        equal_3e5b6c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: -1) is_diff_8b74d9 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9c0a7e root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9c0a7e.input\n        search_ai -> replace_9c0a7e.search\n        replace_ai -> replace_9c0a7e.replace\n        replace_9c0a7e.output -> output_ai\n    }\n\n    \n\n    instance(x: -316, y: 285) replace_char_eb4d5f root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_695b5e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -56, y: 123) reduce_5c6f3d root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 304, y: 76) data_7a1ebe  = 1\n        func() {\n            in(x: -199, y: -123, name: \"accumulated\") property(Number) accumulated_e5b80f\n            in(x: -204, y: -26, name: \"value\") property(Number) value_7d3e84\n\n            out(x: 329, y: -113, name: \"\") property(Number) _5b07c6\n\n            instance(x: -14, y: -99) mul_24b0a6 root.Std_k98ojb.Math.Mul {}\n            accumulated_e5b80f -> mul_24b0a6.first\n            value_7d3e84 -> mul_24b0a6.second\n            mul_24b0a6.result -> _5b07c6\n        } -> reduce_5c6f3d.reducer\n        data_7a1ebe -> reduce_5c6f3d.accumulator\n        list_5fda54 -> reduce_5c6f3d.items\n        execute_19300c -> reduce_5c6f3d.execute\n        reduce_5c6f3d.result -> output_cffcc2\n        continue_45190b -> reduce_5c6f3d.continue\n    }\n\n    \n    instance(x: -87, y: 143) unique_product_ea25e4 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 159) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 264) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 30, y: 211) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -50, y: 438) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -115) length_ba8d8b root.Std_k98ojb.List.Length {}\n        list_48148f -> length_ba8d8b.list\n        instance(x: 37, y: -262) modulo_e54c0e root.Std_k98ojb.Math.Modulo {}\n        n_68068c -> modulo_e54c0e.value\n        length_ba8d8b.length -> modulo_e54c0e.divisor\n        instance(x: 172, y: -23) sub_8f939e root.Std_k98ojb.Math.Sub {}\n        length_ba8d8b.length -> sub_8f939e.first\n        modulo_e54c0e.result -> sub_8f939e.second\n        instance(x: 264, y: -112) slice_a7d104 root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_a7d104.list\n        sub_8f939e.result -> slice_a7d104.start\n        length_ba8d8b.length -> slice_a7d104.end\n        instance(x: 265, y: -277) slice_d2c75d root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_d2c75d.list\n        sub_8f939e.result -> slice_d2c75d.end\n        0 -> slice_d2c75d.start\n        instance(x: 626, y: -171) concat_ea4c8b root.Std_k98ojb.List.Concat {}\n        slice_a7d104.slice -> concat_ea4c8b.left\n        slice_d2c75d.slice -> concat_ea4c8b.right\n        concat_ea4c8b.result -> output_823209\n    }\n\n    \n\n    instance(x: -26, y: 13) rotate_right_2e5f1f root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 290, y: -10) reduce_5d1d0e root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 67, y: -13) data_cde0dc  = 0\n        func() {\n            in(x: -142, y: -15, name: \"current\") property(Number) current_8f9c7a\n            in(x: -145, y: 127, name: \"accumulated\") property(Number) accumulated_c3d6b0\n\n            out(x: 337, y: 62, name: \"result\") property(Number) result_8f9c7a\n\n            instance(x: -84, y: 57) add_b6136e root.Std_k98ojb.Math.Add {}\n            accumulated_c3d6b0 -> add_b6136e.first\n            current_8f9c7a -> add_b6136e.second\n            add_b6136e.result -> result_8f9c7a\n        } -> reduce_5d1d0e.reducer\n        list_2c62ab -> reduce_5d1d0e.items\n        data_cde0dc -> reduce_5d1d0e.initialValue\n        reduce_5d1d0e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -39, y: 76) _sum_15f9e9 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -38, y: -119) expression_6b2e6a root.Std_k98ojb.Math.Expression {\n            expression: \"(num < 2)\"\n        }\n        instance(x: 270, y: -119) if_4d5c04 root.Std_k98ojb.Std.If {}\n        instance(x: 325, y: 16) generaterange_ea7b8f root.Std_k98ojb.List.GenerateRange {}\n        getter(x: 1152, y: -216, name: \"getter_04e105\") getter_04e105 = is_prime\n        setter(x: 383, y: -219, name: \"setter_7a80f5\") setter_7a80f5 = is_prime\n        instance(x: 670, y: 16) for_4b9e6d root.Std_k98ojb.Std.For {}\n        func() {\n            in(x: -213, y: 36, name: \"divisor\") property(Number) divisor_f5f7c9\n\n            out(x: 304, y: 31, name: \"is_prime\") property(Bool) is_prime_4b8a5d\n\n            instance(x: -26, y: 38) modulo_e4e74f root.Std_k98ojb.Math.Modulo {}\n            num_5c0677 -> modulo_e4e74f.value\n            divisor_f5f7c9 -> modulo_e4e74f.divisor\n            modulo_e4e74f.result -> is_prime_4b8a5d\n        } -> for_4b9e6d.handler\n        instance(x: 1032, y: -212) not_2c4596 root.Std_k98ojb.Logic.Not {}\n        expression_6b2e6a.result -> if_4d5c04.predicate\n        execute_b7b391 -> if_4d5c04.execute\n        2 -> generaterange_ea7b8f.from\n        num_5c0677 -> generaterange_ea7b8f.to\n        if_4d5c04.else -> setter_7a80f5.execute\n        true -> setter_7a80f5.new_value\n        for_4b9e6d.items -> generaterange_ea7b8f.list\n        for_4b9e6d.done -> continue_9a54bb\n        if_4d5c04.then -> continue_9a54bb\n        setter_7a80f5.continue -> for_4b9e6d.reset\n        num_5c0677 -> for_4b9e6d.items\n        generaterange_ea7b8f.list -> for_4b9e6d.items\n        if_4d5c04.else -> for_4b9e6d.reset\n        getter_04e105.value -> output_c457b3\n        for_4b9e6d.onItem -> for_4b9e6d.handler.execute\n        for_4b9e6d.handler.output_is_prime -> not_2c4596.input\n        not_2c4596.result -> setter_7a80f5.new_value\n        if_4d5c04.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -14, y: 1) num_prime_b14e0b root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7d5c0b root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: -219) lessthan_2f5ebe root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7d5c0b.first\n        y_5390f5 -> mul_7d5c0b.second\n        mul_7d5c0b.result -> lessthan_2f5ebe.left\n        lessthan_2f5ebe.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -164, y: -181) opposite_signs_2557d5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5d5b0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -19) equal_2c3e05 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5d5b0a.value\n        11 -> modulo_5d5b0a.divisor\n        modulo_5d5b0a.result -> equal_2c3e05.left\n        0 -> equal_2c3e05.right\n        equal_2c3e05.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: -17) is_diff_8b9a1d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3d5c6b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3d5c6b.input\n        search_ai -> replace_3d5c6b.search\n        replace_ai -> replace_3d5c6b.replace\n        replace_3d5c6b.output -> output_ai\n    }\n\n    \n\n    instance(x: -249, y: 107) replace_char_8f7a1e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2a7c1f\n            in(x: -45, y: 30, name: \"item\") property(Number) item_6b98d7\n\n            out(x: 301, y: -2, name: \"\") property(Number) _7dd980\n\n            instance(x: 122, y: -4) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_2a7c1f -> mul_584bfd.first\n            item_6b98d7 -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_2d6da6.reducer\n        1 -> reduce_2d6da6.accumulator\n        instance(x: -3, y: 18) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_7b3b7b.left\n        list_5fda54 -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_2d6da6.items\n        execute_19300c -> unique_7b3b7b.execute\n        continue_45190b -> reduce_2d6da6.continue\n        reduce_2d6da6.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 18, y: -11) unique_product_2c856f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -395, y: 264) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -207, y: 194) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 40, y: -35) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2d1b1a root.Std_k98ojb.List.Length {}\n        instance(x: 567, y: -107) slice_1c2fca root.Std_k98ojb.List.Slice {}\n        instance(x: 43, y: -214) sub_1e2b0d root.Std_k98ojb.Math.Sub {}\n        instance(x: 567, y: -211) slice_2a7f4c root.Std_k98ojb.List.Slice {}\n        instance(x: 312, y: -109) concat_25d6e5 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d1b1a.list\n        n_68068c -> sub_1e2b0d.second\n        length_2d1b1a.length -> sub_1e2b0d.first\n        sub_1e2b0d.result -> slice_1c2fca.start\n        -1 -> slice_1c2fca.end\n        list_48148f -> slice_1c2fca.list\n        0 -> slice_2a7f4c.start\n        sub_1e2b0d.result -> slice_2a7f4c.end\n        list_48148f -> slice_2a7f4c.list\n        slice_1c2fca.slice -> concat_25d6e5.right\n        slice_2a7f4c.slice -> concat_25d6e5.left\n        concat_25d6e5.result -> output_823209\n    }\n\n    \n\n    instance(x: -10, y: 1) rotate_right_0b741a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6e7b4e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -153, y: -11, name: \"accumulated\") property(Number) accumulated_2a848f\n            in(x: -150, y: 76, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 197, y: 33, name: \"result\") property(Number) result_2a848f\n\n            instance(x: -14, y: 35) add_0b1ebe root.Std_k98ojb.Math.Add {}\n            accumulated_2a848f -> add_0b1ebe.first\n            current_2c62ab -> add_0b1ebe.second\n            add_0b1ebe.result -> result_2a848f\n        } -> reduce_6e7b4e.reducer\n        0 -> reduce_6e7b4e.initialValue\n        list_2c62ab -> reduce_6e7b4e.items\n        reduce_6e7b4e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -15, y: 30) _sum_9d6bfb root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f7d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 322, y: -106, name: \"getter_45a2e4\") getter_45a2e4 = is_prime\n        setter(x: 798, y: -106, name: \"setter_2b5d5c\") setter_2b5d5c = is_prime\n        instance(x: 322, y: -216) for_0a4e5f root.Std_k98ojb.Std.For {}\n        instance(x: 798, y: -216) ifexpression_45a2e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 322, y: 113, name: \"setter_7c4d6f\") setter_7c4d6f = is_prime\n        ifexpression_0f7d6c.then -> continue_9a54bb\n        getter_45a2e4.value -> output_c457b3\n        num_5c0677 -> for_0a4e5f.items\n        2 -> for_0a4e5f.start\n        ifexpression_0f7d6c.else -> setter_7c4d6f.execute\n        true -> setter_7c4d6f.new_value\n        num_5c0677 -> ifexpression_0f7d6c.gen_0\n        for_0a4e5f.item -> ifexpression_45a2e4.gen_1\n        num_5c0677 -> ifexpression_45a2e4.gen_0\n        setter_7c4d6f.continue -> for_0a4e5f.reset\n        ifexpression_45a2e4.then -> setter_2b5d5c.execute\n        false -> setter_2b5d5c.new_value\n        execute_b7b391 -> ifexpression_0f7d6c.execute\n        for_0a4e5f.onItem -> ifexpression_45a2e4.execute\n        ifexpression_45a2e4.else -> for_0a4e5f.next\n        for_0a4e5f.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -167, y: 38) num_prime_2b4d1c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -174) mul_1d2c0e root.Std_k98ojb.Math.Mul {}\n        instance(x: 5, y: -215) lessthan_42d10f root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_1d2c0e.first\n        y_5390f5 -> mul_1d2c0e.second\n        mul_1d2c0e.result -> lessthan_42d10f.left\n        lessthan_42d10f.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -56, y: 78) opposite_signs_2b7394 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -11) modulo_5b0a8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -10) equal_8c8b8d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0a8e.value\n        11 -> modulo_5b0a8e.divisor\n        modulo_5b0a8e.result -> equal_8c8b8d.left\n        0 -> equal_8c8b8d.right\n        equal_8c8b8d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -19, y: -45) is_diff_e7e29a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 379) replace_1f5b0c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1f5b0c.input\n        search_ai -> replace_1f5b0c.search\n        replace_ai -> replace_1f5b0c.replace\n        replace_1f5b0c.output -> output_ai\n    }\n\n    \n\n    instance(x: -234, y: 89) replace_char_7367a2 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_59bc6e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -78, y: -11) reduce_4f45d4 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -60, y: 130, name: \"acc\") property(Number) acc_2e02c4\n            in(x: -74, y: 202, name: \"item\") property(Number) item_5a8d5b\n\n            out(x: 169, y: 139, name: \"result\") property(Number) result_1820d0\n\n            instance(x: -7, y: 148) mul_e606f5 root.Std_k98ojb.Math.Mul {}\n            acc_2e02c4 -> mul_e606f5.first\n            item_5a8d5b -> mul_e606f5.second\n            mul_e606f5.result -> result_1820d0\n        } -> reduce_4f45d4.reducer\n        instance(x: 397, y: -1) unique_b2ebe5 root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_b2ebe5.left\n        list_5fda54 -> unique_b2ebe5.right\n        1 -> reduce_4f45d4.accumulator\n        unique_b2ebe5.difference -> reduce_4f45d4.items\n        execute_19300c -> reduce_4f45d4.execute\n        reduce_4f45d4.result -> output_cffcc2\n        reduce_4f45d4.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -67, y: -38) unique_product_2e2b2c root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -339, y: 224) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -339, y: 365) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -170, y: 295) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n    instance(x: 43, y: -7) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 462, y: -221) concat_4d3f5a root.Std_k98ojb.List.Concat {}\n        instance(x: 274, y: -119) slice_7530e6 root.Std_k98ojb.List.Slice {}\n        instance(x: 274, y: -225) slice_2c2d55 root.Std_k98ojb.List.Slice {}\n        instance(x: 41, y: -219) length_3a0f67 root.Std_k98ojb.List.Length {}\n        instance(x: 223, y: -315) sub_7d39e5 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_7530e6.list\n        n_68068c -> sub_7d39e5.second\n        length_3a0f67.length -> sub_7d39e5.first\n        sub_7d39e5.result -> slice_7530e6.start\n        -1 -> slice_7530e6.end\n        list_48148f -> length_3a0f67.list\n        0 -> slice_2c2d55.start\n        sub_7d39e5.result -> slice_2c2d55.end\n        list_48148f -> slice_2c2d55.list\n        slice_2c2d55.slice -> concat_4d3f5a.left\n        slice_7530e6.slice -> concat_4d3f5a.right\n        concat_4d3f5a.result -> output_823209\n    }\n\n    \n\n    instance(x: -10, y: 127) rotate_right_7c09b6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -4) reduce_2b3d3e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -75, y: -69, name: \"accumulator\") property(Number) accumulator_7a3f6d\n            in(x: -102, y: 41, name: \"currentValue\") property(Number) currentValue_8e2b4c\n\n            out(x: 115, y: -29, name: \"sum\") property(Number) sum_71536f\n\n            instance(x: 20, y: -29) add_d3b6a5 root.Std_k98ojb.Math.Add {}\n            accumulator_7a3f6d -> add_d3b6a5.first\n            currentValue_8e2b4c -> add_d3b6a5.second\n            add_d3b6a5.result -> sum_71536f\n        } -> reduce_2b3d3e.reducer\n        0 -> reduce_2b3d3e.initialValue\n        list_2c62ab -> reduce_2b3d3e.items\n        reduce_2b3d3e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -17, y: 105) _sum_c9b1cb root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 284, y: -216) generaterange_05e0f7 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 381, y: -122) filter_025b2c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 476, y: -26) length_14f62d root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -139, y: -150, name: \"current\") property(Number) current_065e1a\n            in(x: -147, y: 13, name: \"_index\") property(Number) _index_b3d2c8\n\n            out(x: 309, y: -145, name: \"output\") property(Bool) output_6f8b7e\n\n            instance(x: -35, y: -147) modulo_d111a4 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 200, y: -147) equal_c6c7d6 root.Std_k98ojb.Logic.Equal {}\n            current_065e1a -> modulo_d111a4.value\n            _index_b3d2c8 -> modulo_d111a4.divisor\n            0 -> equal_c6c7d6.right\n            modulo_d111a4.result -> equal_c6c7d6.left\n            equal_c6c7d6.result -> output_6f8b7e\n        } -> filter_025b2c.handler\n        generaterange_05e0f7.list -> filter_025b2c.items\n        1 -> generaterange_05e0f7.from\n        num_5c0677 -> generaterange_05e0f7.to\n        filter_025b2c.output_list -> length_14f62d.list\n        length_14f62d.length -> output_c457b3\n        1 -> output_c457b3\n        execute_b7b391 -> generaterange_05e0f7.reset\n        filter_025b2c.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -6, y: -18) num_prime_0d40ee root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -267) mul_3e6d8b root.Std_k98ojb.Math.Mul {}\n        instance(x: 160, y: -250) lessthan_b63b8c root.Std_k98ojb.Math.LessThan {\n            left: \"result\"\n            right: \"0\"\n        }\n        x_853326 -> mul_3e6d8b.first\n        y_5390f5 -> mul_3e6d8b.second\n        mul_3e6d8b.result -> lessthan_b63b8c.left\n        lessthan_b63b8c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -140, y: 27) opposite_signs_a5f7af root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 169, y: -14) modulo_5e5d4b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -10) equal_3d759c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5e5d4b.value\n        11 -> modulo_5e5d4b.divisor\n        modulo_5e5d4b.result -> equal_3d759c.left\n        0 -> equal_3d759c.right\n        equal_3d759c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -18, y: -17) is_diff_e5b8e4 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9d4c7a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9d4c7a.input\n        search_ai -> replace_9d4c7a.search\n        replace_ai -> replace_9d4c7a.replace\n        replace_9d4c7a.output -> output_ai\n    }\n\n    \n\n    instance(x: 16, y: -38) replace_char_e24b0e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_695b5e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -56, y: 125) reduce_5c1aef root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -402, y: -73, name: \"current\") property(Number) current_e53d0e\n            in(x: -406, y: 74, name: \"accumulated\") property(Object) accumulated_8b90a1\n\n            out(x: 183, y: -82, name: \"\") property(Object) _9f9b5f\n\n            instance(x: -287, y: -69) contains_a4e1ac root.Std_k98ojb.List.Contains {}\n            instance(x: -105, y: -83) add_648c2d root.Std_k98ojb.List.Add {}\n            data_instance(x: 147, y: -85) data_e30eaa  = {list: list, value: value}\n            contains_a4e1ac.list -> accumulated_8b90a1.get(\"list\")\n            current_e53d0e -> add_648c2d.item\n            add_648c2d.listWithItem -> data_e30eaa.set(\"list\")\n            1 -> data_e30eaa.set(\"value\")\n            contains_a4e1ac.item -> current_e53d0e\n            contains_a4e1ac.result -> accumulated_8b90a1.get(\"value\")\n            add_648c2d.listWithItem -> _9f9b5f.set(\"list\")\n            data_e30eaa -> _9f9b5f\n        } -> reduce_5c1aef.reducer\n        instance(x: 647, y: -139) mul_8bf2d7 root.Std_k98ojb.Math.Mul {}\n        func() {\n            in(x: -307, y: 36, name: \"current\") property(Number) current_5c78ec\n            in(x: -311, y: -44, name: \"accumulated\") property(Object) accumulated_93e8d2\n\n            out(x: 180, y: -25, name: \"\") property(Object) _b651dd\n\n            instance(x: -117, y: -34) mul_ea5c02 root.Std_k98ojb.Math.Mul {}\n            data_instance(x: 136, y: -38) data_7e16f4  = {value: value}\n            accumulated_93e8d2.get(\"value\") -> mul_ea5c02.first\n            current_5c78ec -> mul_ea5c02.second\n            mul_ea5c02.result -> data_7e16f4.set(\"value\")\n            data_7e16f4 -> _b651dd\n        } -> reduce_a903e1.reducer\n        instance(x: 480, y: -3) reduce_a903e1 root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: -274, y: 126) data_52d5a3  = {list: [], value: 1}\n        instance(x: -73, y: 210) firstitem_8e4f9c root.Std_k98ojb.List.FirstItem {}\n        reduce_a903e1.result -> firstitem_8e4f9c.list\n        data_instance(x: -654, y: -171) data_9d25cb  = {list: [], value: 1}\n        list_5fda54 -> reduce_5c1aef.items\n        execute_19300c -> reduce_5c1aef.execute\n        reduce_5c1aef.result.get(\"list\") -> reduce_a903e1.items\n        data_52d5a3 -> reduce_a903e1.accumulator\n        firstitem_8e4f9c.item -> output_cffcc2\n        reduce_a903e1.continue -> continue_45190b\n        data_9d25cb -> reduce_5c1aef.accumulator\n    }\n\n    \n\n    instance(x: -67, y: 8) unique_product_b5c6f3 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 159) difference_7a3e7b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_7a3e7b.left\n        list2_ai -> difference_7a3e7b.right\n        instance(x: -294, y: 260) difference_54d6c5 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_54d6c5.left\n        list1_ai -> difference_54d6c5.right\n        instance(x: -293, y: 360) concat_bf7e3d root.Std_k98ojb.List.Concat {}\n        difference_7a3e7b.difference -> concat_bf7e3d.left\n        difference_54d6c5.difference -> concat_bf7e3d.right\n        instance(x: 210, y: 77) unique_899bb7 root.Std_k98ojb.List.Sort {}\n        concat_bf7e3d.concatenatedList -> unique_899bb7.list\n        unique_899bb7.sorted -> output_ai\n    }\n\n    \n\n    instance(x: -16, y: 45) find_dissimilar_00a1cb root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 44, y: -115) length_ba9dfe root.Std_k98ojb.List.Length {}\n        instance(x: 179, y: -67) mod_d30c3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 294, y: -115) sub_31d80a root.Std_k98ojb.Math.Sub {}\n        instance(x: 431, y: -67) slice_end_e7ee3e root.Std_k98ojb.List.Slice {}\n        instance(x: 428, y: -158) slice_start_950a81 root.Std_k98ojb.List.Slice {}\n        instance(x: 589, y: -116) concat_a7c3be root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_ba9dfe.list\n        n_68068c -> mod_d30c3e.value\n        length_ba9dfe.length -> mod_d30c3e.divisor\n        mod_d30c3e.result -> sub_31d80a.second\n        list_48148f -> slice_end_e7ee3e.list\n        -1 -> slice_end_e7ee3e.end\n        length_ba9dfe.length -> sub_31d80a.first\n        mod_d30c3e.result -> slice_start_950a81.start\n        list_48148f -> slice_start_950a81.list\n        sub_31d80a.result -> slice_end_e7ee3e.start\n        sub_31d80a.result -> slice_start_950a81.end\n        slice_start_950a81.slice -> concat_a7c3be.left\n        slice_end_e7ee3e.slice -> concat_a7c3be.right\n        concat_a7c3be.result -> output_823209\n    }\n\n    \n\n    instance(x: -46, y: 5) rotate_right_bf2a71 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 290, y: -10) reduce_0d1c4e root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 65, y: -73) initial_value_data  = 0\n        func() {\n            in(x: -194, y: -29, name: \"accumulated\") property(Number) accumulated_9e4a8f\n            in(x: -196, y: 58, name: \"current_item\") property(Number) current_item_3d7098\n\n            out(x: 209, y: -55, name: \"sum\") property(Number) sum_2e34a6\n            instance(x: -13, y: -4) add_28f0b6 root.Std_k98ojb.Math.Add {}\n            accumulated_9e4a8f -> add_28f0b6.first\n            current_item_3d7098 -> add_28f0b6.second\n            add_28f0b6.result -> sum_2e34a6\n        } -> reduce_0d1c4e.reducer\n        initial_value_data -> reduce_0d1c4e.initialValue\n        list_2c62ab -> reduce_0d1c4e.items\n        reduce_0d1c4e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 135, y: -117) _sum_e9aa44 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -38, y: -119) expression_68c7e8 root.Std_k98ojb.Math.Expression {\n            expression: \"n < 2\"\n        }\n        getter(x: 506, y: -214, name: \"getter_6d6a1f\") getter_6d6a1f = is_prime\n        setter(x: 339, y: 87, name: \"setter_6d6a1f\") setter_6d6a1f = is_prime\n        instance(x: -324, y: 50) expression_b23c98 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        func() {\n            in(x: -71, y: -56, name: \"current\") property(Number) current_4e3a96\n\n            out(x: 298, y: -48, name: \"output\") property(Bool) output_b0d5f9\n\n            instance(x: 22, y: -57) expression_6b5c15 root.Std_k98ojb.Math.Expression {\n                expression: \"(current + 1)\"\n            }\n            current_4e3a96 -> expression_6b5c15.gen_0\n            expression_6b5c15.result -> output_b0d5f9\n        } -> for_265478.handler\n        instance(x: 339, y: -211) if_2a0b7b root.Std_k98ojb.Std.If {}\n        instance(x: 188, y: -216) expression_2d8f7c root.Std_k98ojb.Math.Expression {\n            expression: \"n % i == 0\"\n        }\n        num_5c0677 -> for_265478.items\n        num_5c0677 -> expression_b23c98.gen_0\n        num_5c0677 -> if_2a0b7b.predicate\n        1 -> setter_6d6a1f.new_value\n        execute_b7b391 -> setter_6d6a1f.execute\n        true -> expression_68c7e8.gen_0\n        num_5c0677 -> for_265478.reset\n        getter_6d6a1f.value -> output_c457b3\n        setter_6d6a1f.continue -> if_2a0b7b.execute\n        expression_b23c98.result -> for_265478.handler.current_4e3a96\n        num_5c0677 -> expression_2d8f7c.gen_0\n        expression_b23c98.result -> expression_2d8f7c.gen_1\n        if_2a0b7b.else -> for_265478.next\n        expression_2d8f7c.result -> if_2a0b7b.predicate\n        num_5c0677 -> for_265478.handler.current_4e3a96\n        2 -> for_265478.start\n        num_5c0677 -> expression_68c7e8.gen_1\n        if_2a0b7b.then -> continue_9a54bb\n        for_265478.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -30, y: 17) num_prime_c7b0d7 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7d5c0b root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: -219) lessthan_2f5ebe root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7d5c0b.first\n        y_5390f5 -> mul_7d5c0b.second\n        mul_7d5c0b.result -> lessthan_2f5ebe.left\n        lessthan_2f5ebe.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -164, y: -181) opposite_signs_2557d5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5d5b0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -19) equal_2c3e05 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5d5b0a.value\n        11 -> modulo_5d5b0a.divisor\n        modulo_5d5b0a.result -> equal_2c3e05.left\n        0 -> equal_2c3e05.right\n        equal_2c3e05.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: -17) is_diff_8b9a1d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3d5c6b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3d5c6b.input\n        search_ai -> replace_3d5c6b.search\n        replace_ai -> replace_3d5c6b.replace\n        replace_3d5c6b.output -> output_ai\n    }\n\n    \n\n    instance(x: -249, y: 107) replace_char_8f7a1e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2a7c1f\n            in(x: -45, y: 30, name: \"item\") property(Number) item_6b98d7\n\n            out(x: 301, y: -2, name: \"\") property(Number) _7dd980\n\n            instance(x: 122, y: -4) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_2a7c1f -> mul_584bfd.first\n            item_6b98d7 -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_2d6da6.reducer\n        1 -> reduce_2d6da6.accumulator\n        instance(x: -3, y: 18) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_7b3b7b.left\n        list_5fda54 -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_2d6da6.items\n        execute_19300c -> unique_7b3b7b.execute\n        continue_45190b -> reduce_2d6da6.continue\n        reduce_2d6da6.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 18, y: -11) unique_product_2c856f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -395, y: 264) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -207, y: 194) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 40, y: -35) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2d1b1a root.Std_k98ojb.List.Length {}\n        instance(x: 567, y: -107) slice_1c2fca root.Std_k98ojb.List.Slice {}\n        instance(x: 43, y: -214) sub_1e2b0d root.Std_k98ojb.Math.Sub {}\n        instance(x: 567, y: -211) slice_2a7f4c root.Std_k98ojb.List.Slice {}\n        instance(x: 312, y: -109) concat_25d6e5 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d1b1a.list\n        n_68068c -> sub_1e2b0d.second\n        length_2d1b1a.length -> sub_1e2b0d.first\n        sub_1e2b0d.result -> slice_1c2fca.start\n        -1 -> slice_1c2fca.end\n        list_48148f -> slice_1c2fca.list\n        0 -> slice_2a7f4c.start\n        sub_1e2b0d.result -> slice_2a7f4c.end\n        list_48148f -> slice_2a7f4c.list\n        slice_1c2fca.slice -> concat_25d6e5.right\n        slice_2a7f4c.slice -> concat_25d6e5.left\n        concat_25d6e5.result -> output_823209\n    }\n\n    \n\n    instance(x: -10, y: 1) rotate_right_0b701a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6e7b4e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -153, y: -11, name: \"accumulated\") property(Number) accumulated_2a848f\n            in(x: -150, y: 76, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 197, y: 33, name: \"result\") property(Number) result_2a848f\n\n            instance(x: -14, y: 35) add_0b1ebe root.Std_k98ojb.Math.Add {}\n            accumulated_2a848f -> add_0b1ebe.first\n            current_2c62ab -> add_0b1ebe.second\n            add_0b1ebe.result -> result_2a848f\n        } -> reduce_6e7b4e.reducer\n        0 -> reduce_6e7b4e.initialValue\n        list_2c62ab -> reduce_6e7b4e.items\n        reduce_6e7b4e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -15, y: 30) _sum_9d7ebe root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f7d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 322, y: -106, name: \"getter_45a2e4\") getter_45a2e4 = is_prime\n        setter(x: 798, y: -106, name: \"setter_2b5d5c\") setter_2b5d5c = is_prime\n        instance(x: 322, y: -216) for_0a4e5f root.Std_k98ojb.Std.For {}\n        instance(x: 798, y: -216) ifexpression_45a2e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 322, y: 113, name: \"setter_7c4d6f\") setter_7c4d6f = is_prime\n        ifexpression_0f7d6c.then -> continue_9a54bb\n        getter_45a2e4.value -> output_c457b3\n        num_5c0677 -> for_0a4e5f.items\n        2 -> for_0a4e5f.start\n        ifexpression_0f7d6c.else -> setter_7c4d6f.execute\n        true -> setter_7c4d6f.new_value\n        num_5c0677 -> ifexpression_0f7d6c.gen_0\n        for_0a4e5f.item -> ifexpression_45a2e4.gen_1\n        num_5c0677 -> ifexpression_45a2e4.gen_0\n        setter_7c4d6f.continue -> for_0a4e5f.reset\n        ifexpression_45a2e4.then -> setter_2b5d5c.execute\n        false -> setter_2b5d5c.new_value\n        execute_b7b391 -> ifexpression_0f7d6c.execute\n        for_0a4e5f.onItem -> ifexpression_45a2e4.execute\n        ifexpression_45a2e4.else -> for_0a4e5f.next\n        for_0a4e5f.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -167, y: 38) num_prime_2b4d1c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -174) mul_1d2c0e root.Std_k98ojb.Math.Mul {}\n        instance(x: 5, y: -215) lessthan_44000f root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_1d2c0e.first\n        y_5390f5 -> mul_1d2c0e.second\n        mul_1d2c0e.result -> lessthan_44000f.left\n        lessthan_44000f.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -56, y: 78) opposite_signs_2b1d54 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -11) modulo_5b0a8e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -10) equal_8c8b8d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0a8e.value\n        11 -> modulo_5b0a8e.divisor\n        modulo_5b0a8e.result -> equal_8c8b8d.left\n        0 -> equal_8c8b8d.right\n        equal_8c8b8d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -19, y: -45) is_diff_e7e29a root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 379) replace_1f5b0c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1f5b0c.input\n        search_ai -> replace_1f5b0c.search\n        replace_ai -> replace_1f5b0c.replace\n        replace_1f5b0c.output -> output_ai\n    }\n\n    \n\n    instance(x: -234, y: 89) replace_char_7764a2 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_59bc6e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -78, y: -11) reduce_4f40d4 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -265, y: 33, name: \"current\") property(Number) current_e5e55c\n            in(x: -270, y: 108, name: \"acc\") property(Object) acc_4b96a6\n\n            out(x: 293, y: 71, name: \"\") property(Object) _32f714\n\n            instance(x: 50, y: -12) if_1840e5 root.Std_k98ojb.Std.If {}\n            data_instance(x: 176, y: 104) data_19c2a3  = 1\n            func() {\n                in(x: -252, y: -4, name: \"current\") property(Number) current_e5e55c\n\n                out(x: 181, y: -67, name: \"\") property(Object) _90b3f7\n\n                instance(x: -24, y: -6) mul_54a1d3 root.Std_k98ojb.Math.Mul {}\n                data_instance(x: 139, y: -65) data_e7b7e4  = product\n                current_e5e55c -> mul_54a1d3.second\n                getter_e0d2f6.value -> mul_54a1d3.first\n                setter_283596.new_value -> _90b3f7.product\n                data_e7b7e4 -> setter_283596.field_name\n                mul_54a1d3.result -> setter_283596.new_value\n            } -> if_1840e5.then\n            func() {\n                in(x: -266, y: 74, name: \"current\") property(Number) current_e5e55c\n\n                out(x: 196, y: 39, name: \"\") property(Object) _b88d0a\n\n                data_instance(x: 149, y: 32) data_78b2f5  = seen\n                current_e5e55c -> setter_c187a6.new_value\n                getter_d149cb.value -> setter_c187a6.field_name\n                data_78b2f5 -> setter_c187a6.field_name\n                setter_c187a6.new_value -> _b88d0a.seen\n            } -> if_1840e5.else\n            getter_3d9c15.value -> data_e20c7f\n            current_e5e55c -> contains_d40f0c.item\n            getter_635b44.value -> contains_d40f0c.list\n            contains_d40f0c.is_contained -> if_1840e5.input\n            data_e20c7f.seen -> setter_c187a6.field_name\n            current_e5e55c -> getter_d149cb.field_name\n            data_e20c7f.product -> getter_e0d2f6.field_name\n            if_1840e5.then -> _32f714\n            if_1840e5.else -> _32f714\n        } -> reduce_4f40d4.reducer\n        data_instance(x: 19, y: -68) data_25c1b7  = {product: 1, seen: []}\n        list_5fda54 -> reduce_4f40d4.items\n        execute_19300c -> reduce_4f40d4.execute\n        data_25c1b7 -> reduce_4f40d4.initial_value\n        getter_c86a1c.value -> output_cffcc2\n        getter_c86a1c.field_name -> product\n        reduce_4f40d4.result -> getter_c86a1c.object\n        continue_45190b -> reduce_4f40d4.continue\n    }\n\n    \n\n    instance(x: 32, y: -17) unique_product_44939e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -339, y: 224) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -339, y: 365) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -170, y: 295) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n    instance(x: 43, y: -7) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 462, y: -221) concat_4f1d5a root.Std_k98ojb.List.Concat {}\n        instance(x: 274, y: -119) slice_75b1e6 root.Std_k98ojb.List.Slice {}\n        instance(x: 301, y: -295) slice_2f7d55 root.Std_k98ojb.List.Slice {}\n        instance(x: 47, y: -197) length_03a6e0 root.Std_k98ojb.List.Length {}\n        instance(x: 45, y: -315) sub_f207f5 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_75b1e6.list\n        n_68068c -> slice_75b1e6.end\n        0 -> slice_75b1e6.start\n        list_48148f -> length_03a6e0.list\n        sub_f207f5.result -> slice_2f7d55.start\n        -1 -> slice_2f7d55.end\n        n_68068c -> sub_f207f5.first\n        list_48148f -> slice_2f7d55.list\n        length_03a6e0.length -> sub_f207f5.second\n        slice_2f7d55.slice -> concat_4f1d5a.left\n        slice_75b1e6.slice -> concat_4f1d5a.right\n        concat_4f1d5a.result -> output_823209\n    }\n\n    \n\n    instance(x: -10, y: 5) rotate_right_7d4c57 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 190, y: -4) reduce_2b3d3e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -75, y: -69, name: \"accumulator\") property(Number) accumulator_7a3f6d\n            in(x: -102, y: 41, name: \"currentValue\") property(Number) currentValue_8e2b4c\n\n            out(x: 115, y: -29, name: \"sum\") property(Number) sum_77b36f\n\n            instance(x: 20, y: -29) add_d3b6a5 root.Std_k98ojb.Math.Add {}\n            accumulator_7a3f6d -> add_d3b6a5.first\n            currentValue_8e2b4c -> add_d3b6a5.second\n            add_d3b6a5.result -> sum_77b36f\n        } -> reduce_2b3d3e.reducer\n        0 -> reduce_2b3d3e.initialValue\n        list_2c62ab -> reduce_2b3d3e.items\n        reduce_2b3d3e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -17, y: 105) _sum_f59c32 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 284, y: -216) generaterange_05e0f7 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 381, y: -122) filter_025b2c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 476, y: -26) length_14f66d root.Std_k98ojb.List.Length {}\n        func() {\n            in(x: -139, y: -150, name: \"current\") property(Number) current_065e1a\n            in(x: -142, y: 7, name: \"_index\") property(Number) _index_e8f0c5\n\n            out(x: 54, y: -39, name: \"output\") property(Bool) output_7b9c6e\n\n            instance(x: 231, y: -43) modulo_b1d5a8 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 304, y: -41) equal_240f76 root.Std_k98ojb.Logic.Equal {}\n            current_065e1a -> modulo_b1d5a8.value\n            num_5c0677 -> modulo_b1d5a8.divisor\n            0 -> equal_240f76.right\n            modulo_b1d5a8.result -> equal_240f76.left\n            equal_240f76.result -> output_7b9c6e\n        } -> filter_025b2c.handler\n        generaterange_05e0f7.list -> filter_025b2c.items\n        1 -> generaterange_05e0f7.from\n        num_5c0677 -> generaterange_05e0f7.to\n        length_14f66d.length -> output_c457b3\n        filter_025b2c.output_list -> length_14f66d.list\n        execute_b7b391 -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -8, y: 10) num_prime_4c561e root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -148, y: -267) mul_3e6d8b root.Std_k98ojb.Math.Mul {}\n        instance(x: 160, y: -250) lessthan_b6337c root.Std_k98ojb.Math.LessThan {\n            left: \"result\"\n            right: \"0\"\n        }\n        x_853326 -> mul_3e6d8b.first\n        y_5390f5 -> mul_3e6d8b.second\n        mul_3e6d8b.result -> lessthan_b6337c.left\n        lessthan_b6337c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -102, y: 145) opposite_signs_f7585e root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 169, y: -14) modulo_5e5d4b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -10) equal_3d759c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5e5d4b.value\n        11 -> modulo_5e5d4b.divisor\n        modulo_5e5d4b.result -> equal_3d759c.left\n        0 -> equal_3d759c.right\n        equal_3d759c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -18, y: -17) is_diff_e5b8e4 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9d4c7a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9d4c7a.input\n        search_ai -> replace_9d4c7a.search\n        replace_ai -> replace_9d4c7a.replace\n        replace_9d4c7a.output -> output_ai\n    }\n\n    \n\n    instance(x: 16, y: -38) replace_char_e24b0e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_695b5e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -56, y: 125) reduce_5f7eab root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -402, y: -136, name: \"accumulator\") property(Number) accumulator_5c7a1d\n            in(x: -410, y: 6, name: \"value\") property(Number) value_b892f6\n\n            out(x: 596, y: -4, name: \"\") property(Number) _e237b2\n\n            instance(x: 321, y: -7) mul_0a7cfe root.Std_k98ojb.Math.Mul {}\n            accumulator_5c7a1d -> mul_0a7cfe.first\n            value_b892f6 -> mul_0a7cfe.second\n            mul_0a7cfe.result -> _e237b2\n        } -> reduce_5f7eab.reducer\n        1 -> reduce_5f7eab.initial_value\n        instance(x: -248, y: 169) sets_difference_f420d4 root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> sets_difference_f420d4.left\n        list_5fda54 -> sets_difference_f420d4.right\n        sets_difference_f420d4.difference -> reduce_5f7eab.items\n        execute_19300c -> sets_difference_f420d4.execute\n        continue_45190b <- reduce_5f7eab.continue\n        reduce_5f7eab.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -86, y: -3) unique_product_a123c6 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 159) difference_7a3e7b root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_7a3e7b.left\n        list2_ai -> difference_7a3e7b.right\n        instance(x: -294, y: 260) difference_54d6c5 root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_54d6c5.left\n        list1_ai -> difference_54d6c5.right\n        instance(x: -293, y: 360) concat_bf7e3d root.Std_k98ojb.List.Concat {}\n        difference_7a3e7b.difference -> concat_bf7e3d.left\n        difference_54d6c5.difference -> concat_bf7e3d.right\n        instance(x: 210, y: 77) unique_899cd2 root.Std_k98ojb.List.Sort {}\n        concat_bf7e3d.concatenatedList -> unique_899cd2.list\n        unique_899cd2.sorted -> output_ai\n    }\n\n    \n\n    instance(x: -16, y: 5) find_dissimilar_a4a807 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 44, y: -115) length_ba9dfe root.Std_k98ojb.List.Length {}\n        instance(x: 179, y: -67) mod_d30c3e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 294, y: -115) sub_3e2be6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 446, y: -117) slice_start_ea90c6 root.Std_k98ojb.List.Slice {}\n        instance(x: 448, y: -235) slice_end_63dcda root.Std_k98ojb.List.Slice {}\n        instance(x: 624, y: -117) concat_fb3f05 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_ba9dfe.list\n        n_68068c -> mod_d30c3e.value\n        length_ba9dfe.length -> mod_d30c3e.divisor\n        length_ba9dfe.length -> sub_3e2be6.first\n        mod_d30c3e.result -> sub_3e2be6.second\n\n        list_48148f -> slice_start_ea90c6.list\n        0 -> slice_start_ea90c6.start\n        sub_3e2be6.result -> slice_start_ea90c6.end\n        \n        list_48148f -> slice_end_63dcda.list\n        sub_3e2be6.result -> slice_end_63dcda.start\n        -1 -> slice_end_63dcda.end\n\n        slice_end_63dcda.slice -> concat_fb3f05.left\n        slice_start_ea90c6.slice -> concat_fb3f05.right\n        concat_fb3f05.result -> output_823209\n    }\n\n    \n\n    instance(x: -17, y: 4) rotate_right_c7b0e8 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 290, y: -10) reduce_0d19b3 root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: 65, y: -10) initial_value_7e9cda  = 0\n        func() {\n            in(x: -248, y: -85, name: \"accumulated\") property(Number) accumulated_d3d6f3\n            in(x: -253, y: -21, name: \"current\") property(Number) current_97d2a0\n\n            out(x: 313, y: -104, name: \"result\") property(Number) result_8ad7b5\n\n            instance(x: 36, y: -103) add_bf4cda root.Std_k98ojb.Math.Add {}\n            accumulated_d3d6f3 -> add_bf4cda.first\n            current_97d2a0 -> add_bf4cda.second\n            add_bf4cda.result -> result_8ad7b5\n        } -> reduce_0d19b3.reducer\n        initial_value_7e9cda -> reduce_0d19b3.initialValue\n        list_2c62ab -> reduce_0d19b3.items\n        reduce_0d19b3.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 57, y: -20) _sum_d7cbad root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -38, y: -119) expression_68c7e8 root.Std_k98ojb.Math.Expression {\n            expression: \"n < 2\"\n        }\n        getter(x: 506, y: -214, name: \"getter_6d6a1f\") getter_6d6a1f = is_prime\n        setter(x: 339, y: 87, name: \"setter_6d6a1f\") setter_6d6a1f = is_prime\n        instance(x: -324, y: 50) expression_b23c98 root.Std_k98ojb.Math.Expression {\n            expression: \"(n % i == 0)\"\n        }\n        func() {\n            in(x: -71, y: -56, name: \"current\") property(Number) current_4e3a96\n\n            out(x: 298, y: -48, name: \"output\") property(Bool) output_b0d5f9\n\n            instance(x: 22, y: -57) expression_7b718c root.Std_k98ojb.Math.Expression {\n                expression: \"(current + 1)\"\n            }\n            current_4e3a96 -> expression_7b718c.gen_0\n            expression_7b718c.result -> output_b0d5f9\n        } -> for_298192.handler\n        instance(x: -324, y: 50) if_2fe6e6 root.Std_k98ojb.Std.If {}\n        instance(x: 177, y: -114) and_2d8a2c root.Std_k98ojb.Logic.And {}\n        instance(x: 357, y: -109) if_7c05f8 root.Std_k98ojb.Std.If {}\n        instance(x: 685, y: -205) not_4d35eb root.Std_k98ojb.Logic.Not {}\n        setter(x: 838, y: 120, name: \"setter_ea752f\") setter_ea752f = is_prime\n        instance(x: 688, y: -24) for_298192 root.Std_k98ojb.Std.For {}\n        num_5c0677 -> expression_b23c98.gen_0\n        execute_b7b391 -> expression_68c7e8.execute\n        2 -> for_298192.items\n        num_5c0677 -> if_2fe6e6.value\n        true -> setter_ea752f.new_value\n        false -> setter_6d6a1f.new_value\n        expression_b23c98.result -> and_2d8a2c.left\n        for_298192.onItem -> if_2fe6e6.execute\n        num_5c0677 -> for_298192.end\n        expression_68c7e8.result -> if_7c05f8.predicate\n        and_2d8a2c.result -> not_4d35eb.input\n        setter_ea752f.continue -> continue_9a54bb\n        for_298192.done -> continue_9a54bb\n        if_7c05f8.then -> setter_6d6a1f.execute\n        getter_6d6a1f.value -> output_c457b3\n        num_5c0677 -> for_298192.items\n        not_4d35eb.result -> if_7c05f8.predicate\n        and_2d8a2c.right -> if_7c05f8.value\n        expression_b23c98.result -> if_2fe6e6.predicate\n        for_298192.onItem -> setter_ea752f.execute\n        if_7c05f8.else -> for_298192.next\n        execute_b7b391 -> for_298192.reset\n    }\n\n    \n\n    instance(x: -46, y: -18) num_prime_ea6e0d root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7b5d5c root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -107) lessthan_3f7e6b root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7b5d5c.first\n        y_5390f5 -> mul_7b5d5c.second\n        mul_7b5d5c.result -> lessthan_3f7e6b.left\n        lessthan_3f7e6b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -184, y: 20) opposite_signs_2b45d5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5b0d1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 373, y: -18) equal_2c2e0b root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0d1a.value\n        11 -> modulo_5b0d1a.divisor\n        modulo_5b0d1a.result -> equal_2c2e0b.left\n        0 -> equal_2c2e0b.right\n        equal_2c2e0b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -4, y: -15) is_diff_7d98a7 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3b2cbb root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3b2cbb.input\n        search_ai -> replace_3b2cbb.search\n        replace_ai -> replace_3b2cbb.replace\n        replace_3b2cbb.output -> output_ai\n    }\n\n    \n\n    instance(x: -164, y: 50) replace_char_789eac root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2f5a4c\n            in(x: -45, y: 101, name: \"item\") property(Number) item_6b9d8e\n\n            out(x: 269, y: 31, name: \"\") property(Number) _7dd980\n\n            instance(x: 102, y: 45) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_2f5a4c -> mul_584bfd.first\n            item_6b9d8e -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_2d6da6.reducer\n        instance(x: -13, y: 21) unique_78d487 root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_78d487.left\n        list_5fda54 -> unique_78d487.right\n        unique_78d487.difference -> reduce_2d6da6.items\n        1 -> reduce_2d6da6.initial_value\n        execute_19300c -> unique_78d487.execute\n        unique_78d487.difference -> reduce_2d6da6.items\n        reduce_2d6da6.result -> output_cffcc2\n        reduce_2d6da6.continue -> continue_45190b\n    }\n\n    \n\n    instance(x: 3, y: -1) unique_product_33ad5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -395, y: 264) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -207, y: 194) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 40, y: -3) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2b4ebe root.Std_k98ojb.List.Length {}\n        instance(x: 265, y: -107) modulo_4d6c1a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 483, y: -109) sub_2f5e5b root.Std_k98ojb.Math.Sub {}\n        instance(x: 702, y: -109) slice_6d6c0a root.Std_k98ojb.List.Slice {}\n        instance(x: 483, y: -21) slice_4f5e5b root.Std_k98ojb.List.Slice {}\n        instance(x: 702, y: -21) concat_6d6c0a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2b4ebe.list\n        n_68068c -> modulo_4d6c1a.value\n        length_2b4ebe.length -> modulo_4d6c1a.divisor\n        length_2b4ebe.length -> sub_2f5e5b.first\n        modulo_4d6c1a.result -> sub_2f5e5b.second\n        list_48148f -> slice_6d6c0a.list\n        0 -> slice_6d6c0a.start\n        sub_2f5e5b.result -> slice_6d6c0a.end\n        list_48148f -> slice_4f5e5b.list\n        sub_2f5e5b.result -> slice_4f5e5b.start\n        -1 -> slice_4f5e5b.end\n        slice_4f5e5b.slice -> concat_6d6c0a.left\n        slice_6d6c0a.slice -> concat_6d6c0a.right\n        concat_6d6c0a.result -> output_823209\n    }\n\n    \n\n    instance(x: -14, y: 57) rotate_right_7b4ebe root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6b4d1e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -175, y: -39, name: \"accumulated\") property(Number) accumulated_2c62ab\n            in(x: -170, y: 44, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 822, y: -5, name: \"sum\") property(Number) sum_2a848f\n\n            instance(x: 39, y: 10) add_7b3b7b root.Std_k98ojb.Math.Add {}\n            accumulated_2c62ab -> add_7b3b7b.first\n            current_2c62ab -> add_7b3b7b.second\n            add_7b3b7b.result -> sum_2a848f\n        } -> reduce_6b4d1e.reducer\n        0 -> reduce_6b4d1e.initialValue\n        list_2c62ab -> reduce_6b4d1e.items\n        reduce_6b4d1e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -35, y: 10) _sum_7b3b7b root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f5d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 379, y: -111, name: \"getter_4e4a2b\") getter_4e4a2b = is_prime\n        setter(x: 658, y: -109) setter_4d5c1f root.Std_k98ojb.Setter {\n            property: Bool\n        }\n        instance(x: 378, y: -216) for_1e4a1c root.Std_k98ojb.Std.For {}\n        instance(x: 604, y: -215) ifexpression_4d6f6b root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 379, y: -29, name: \"setter_4e4a2b\") setter_4e4a2b = is_prime\n        instance(x: 1056, y: -218) not_4d6f6b root.Std_k98ojb.Logic.Not {}\n        num_5c0677 -> ifexpression_0f5d6c.gen_0\n        getter_4e4a2b.value -> output_c457b3\n        for_1e4a1c.item -> ifexpression_4d6f6b.gen_0\n        num_5c0677 -> ifexpression_4d6f6b.gen_1\n        2 -> for_1e4a1c.from\n        num_5c0677 -> for_1e4a1c.to\n        true -> setter_4e4a2b.new_value\n        false -> setter_4d5c1f.new_value\n        ifexpression_0f5d6c.then -> setter_4d5c1f.execute\n        execute_b7b391 -> ifexpression_0f5d6c.execute\n        ifexpression_0f5d6c.else -> for_1e4a1c.reset\n        ifexpression_4d6f6b.then -> setter_4d5c1f.execute\n        ifexpression_4d6f6b.value -> not_4d6f6b.input\n        for_1e4a1c.onItem -> ifexpression_4d6f6b.execute\n        for_1e4a1c.done -> setter_4e4a2b.execute\n        setter_4d5c1f.continue -> continue_9a54bb\n        setter_4e4a2b.continue -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -30, y: -68) num_prime_7a4dad root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -174) mul_1d7c6e root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -225) lessthan_b54b9c root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_1d7c6e.first\n        y_5390f5 -> mul_1d7c6e.second\n        mul_1d7c6e.result -> lessthan_b54b9c.left\n        lessthan_b54b9c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -208, y: 11) opposite_signs_1f55d7 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -11) modulo_5b0a5e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 357, y: -10) equal_3d7b9c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0a5e.value\n        11 -> modulo_5b0a5e.divisor\n        modulo_5b0a5e.result -> equal_3d7b9c.left\n        0 -> equal_3d7b9c.right\n        equal_3d7b9c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -18, y: -14) is_diff_5a1ebe root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 370) replace_9d5b0e root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9d5b0e.input\n        search_ai -> replace_9d5b0e.search\n        replace_ai -> replace_9d5b0e.replace\n        replace_9d5b0e.output -> output_ai\n    }\n\n    \n\n    instance(x: -216, y: 43) replace_char_e8f7a5 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_59bc6e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -78, y: -11) reduce_4f4eac root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -156, y: -30, name: \"current\") property(Number) current_b8c2a7\n            in(x: -149, y: 59, name: \"acc\") property(Number) acc_4b4f7e\n\n            out(x: 554, y: -16, name: \"\") property(Number) _053d54\n\n            instance(x: 208, y: -20) mul_ea95c8 root.Std_k98ojb.Math.Mul {}\n            acc_4b4f7e -> mul_ea95c8.first\n            current_b8c2a7 -> mul_ea95c8.second\n            mul_ea95c8.result -> _053d54\n        } -> reduce_4f4eac.reducer\n        1 -> reduce_4f4eac.accumulator\n        instance(x: -11, y: 26) unique_72b54a root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_72b54a.left\n        unique_72b54a.difference -> reduce_4f4eac.items\n        execute_19300c -> unique_72b54a.execute\n        reduce_4f4eac.result -> output_cffcc2\n        unique_72b54a.execute -> reduce_4f4eac.execute\n        list_5fda54 -> unique_72b54a.right\n        continue_45190b -> reduce_4f4eac.continue\n    }\n\n    \n\n    instance(x: -36, y: 8) unique_product_4c4d6d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: 232) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 364) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -105, y: 298) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n    instance(x: 43, y: -16) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 464, y: -241) slice_1d4fca root.Std_k98ojb.List.Slice {}\n        instance(x: 575, y: -13) slice_e6a8e4 root.Std_k98ojb.List.Slice {}\n        instance(x: 709, y: -126) concat_7d7c1f root.Std_k98ojb.List.Concat {}\n        instance(x: 258, y: -34) length_32a41b root.Std_k98ojb.List.Length {}\n        instance(x: 305, y: -149) sub_f4d6c5 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> slice_1d4fca.list\n        n_68068c -> slice_1d4fca.start\n        -1 -> slice_1d4fca.end\n        list_48148f -> length_32a41b.list\n        length_32a41b.length -> sub_f4d6c5.first\n        n_68068c -> sub_f4d6c5.second\n        0 -> slice_e6a8e4.start\n        sub_f4d6c5.result -> slice_e6a8e4.end\n        list_48148f -> slice_e6a8e4.list\n        slice_1d4fca.slice -> concat_7d7c1f.right\n        slice_e6a8e4.slice -> concat_7d7c1f.left\n        concat_7d7c1f.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: 20) rotate_right_f8b50b root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: 31) reduce_2b5e6d root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -75, y: -44, name: \"current\") property(Number) current_7a3f0d\n            in(x: -76, y: 121, name: \"accumulated\") property(Number) accumulated_e8b9c7\n\n            out(x: 162, y: 55, name: \"result\") property(Number) result_b54a4f\n\n            instance(x: 30, y: 53) add_1e55d7 root.Std_k98ojb.Math.Add {}\n            current_7a3f0d -> add_1e55d7.first\n            accumulated_e8b9c7 -> add_1e55d7.second\n            add_1e55d7.result -> result_b54a4f\n        } -> reduce_2b5e6d.reducer\n        0 -> reduce_2b5e6d.initialValue\n        list_2c62ab -> reduce_2b5e6d.items\n        reduce_2b5e6d.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -139, y: 170) _sum_e2446e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 218, y: -216) generaterange_1e6c6b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 376, y: -109) filter_0f35d4 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 216, y: 134) ifexpression_1c5a25 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num < 2\"\n        }\n        getter(x: -0, y: -176, name: \"getter_1b7e5f\") getter_1b7e5f = is_prime\n        setter(x: 436, y: 189) setter_ea8c3a root.Std_k98ojb.Logic.Not {}\n        instance(x: 209, y: -29) if_f320d4 root.Std_k98ojb.Std.If {}\n        instance(x: 587, y: -116) length_3e0c0f root.Std_k98ojb.List.Length {}\n        setter(x: 1004, y: -215) setter_ba150c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1007, y: -163) if_1f7e2d root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -142, y: -215, name: \"current\") property(Number) current_0c6a7b\n\n            out(x: 324, y: -215, name: \"output\") property(Bool) output_8e79f5\n\n            instance(x: -35, y: -215) modulo_23d71c root.Std_k98ojb.Math.Modulo {}\n            num_5c0677 -> modulo_23d71c.value\n            current_0c6a7b -> modulo_23d71c.divisor\n            0 -> output_8e79f5\n            modulo_23d71c.result -> output_8e79f5\n        } -> filter_0f35d4.handler\n        num_5c0677 -> ifexpression_1c5a25.gen_0\n        2 -> generaterange_1e6c6b.from\n        execute_b7b391 -> ifexpression_1c5a25.execute\n        filter_0f35d4.output_list -> length_3e0c0f.list\n        num_5c0677 -> generaterange_1e6c6b.to\n        generaterange_1e6c6b.list -> filter_0f35d4.items\n        ifexpression_1c5a25.then -> setter_ea8c3a.execute\n        ifexpression_1c5a25.else -> filter_0f35d4.reset\n        length_3e0c0f.length -> if_1f7e2d.predicate\n        0 -> if_1f7e2d.value\n        setter_ea8c3a.input -> if_1f7e2d.then\n        if_1f7e2d.else -> continue_9a54bb\n        filter_0f35d4.done -> length_3e0c0f.reset\n        getter_1b7e5f.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -6, y: 18) num_prime_f29a15 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -144, y: -186) mul_7e6d3b root.Std_k98ojb.Math.Mul {}\n        instance(x: 180, y: -186) lessthan_e5f51c root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7e6d3b.first\n        y_5390f5 -> mul_7e6d3b.second\n        mul_7e6d3b.result -> lessthan_e5f51c.left\n        lessthan_e5f51c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -204, y: 182) opposite_signs_f2878c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 423, y: -11) modulo_ea5d3b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_ea5d3b.value\n        11 -> modulo_ea5d3b.divisor\n        instance(x: 416, y: -86) equal_b825e2 root.Std_k98ojb.Logic.Equal {}\n        0 -> equal_b825e2.right\n        modulo_ea5d3b.result -> equal_b825e2.left\n        equal_b825e2.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -19, y: -14) is_diff_3c2677 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: -79, y: 304) replace_2d9cbe root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_2d9cbe.input\n        search_ai -> replace_2d9cbe.search\n        replace_ai -> replace_2d9cbe.replace\n        replace_2d9cbe.output -> output_ai\n    }\n\n    \n\n    instance(x: -84, y: -57) replace_char_c160e3 root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 221, y: 135) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -242, y: 150) to_lower_e54b7f root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: 32, y: 139) reduce_0f9c3d root.Std_k98ojb.Iteration.Reduce {}\n        data_instance(x: -165, y: 74) data_7a3ebe  = 1\n        func() {\n            in(x: -126, y: 19, name: \"acc\") property(Number) acc_8f0b70\n            in(x: -153, y: 77, name: \"current\") property(Number) current_e55a4e\n\n            out(x: 497, y: 26, name: \"\") property(Number) _56c35a\n\n            instance(x: 89, y: -14) mul_c0d60c root.Std_k98ojb.Math.Mul {}\n            acc_8f0b70 -> mul_c0d60c.first\n            current_e55a4e -> mul_c0d60c.second\n            mul_c0d60c.result -> _56c35a\n        } -> reduce_0f9c3d.reducer\n        data_7a3ebe -> reduce_0f9c3d.accumulator\n        execute_19300c -> reduce_0f9c3d.execute\n        list_5fda54 -> reduce_0f9c3d.items\n        instance(x: -1, y: 236) unique_c8b74b root.Std_k98ojb.Sets.Difference {}\n        data_instance(x: -246, y: 187) data_f5a70e  = [list]\n        list_5fda54 -> unique_c8b74b.right\n        list_5fda54 -> unique_c8b74b.left\n        unique_c8b74b.difference -> reduce_0f9c3d.items\n        data_f5a70e -> unique_c8b74b.right\n        continue_45190b -> reduce_0f9c3d.continue\n        reduce_0f9c3d.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 163, y: -2) unique_product_8a89e7 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 159) difference_5b9c5a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -300, y: -68) difference_e4f71d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 296, y: 63) concat_6e5a3e root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_5b9c5a.left\n        list2_ai -> difference_e4f71d.left\n        list2_ai -> difference_5b9c5a.right\n        list1_ai -> difference_e4f71d.right\n        difference_5b9c5a.difference -> concat_6e5a3e.first\n        difference_e4f71d.difference -> concat_6e5a3e.second\n        concat_6e5a3e.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 102, y: 29) find_dissimilar_f12c8b root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 144, y: -115) length_c6e05b root.Std_k98ojb.List.Length {}\n        list_48148f -> length_c6e05b.list\n        instance(x: 274, y: -134) mod_e2d4c5 root.Std_k98ojb.Math.Modulo {}\n        n_68068c -> mod_e2d4c5.value\n        length_c6e05b.length -> mod_e2d4c5.divisor\n        instance(x: 371, y: -106) sub_d9d4a4 root.Std_k98ojb.Math.Sub {}\n        mod_e2d4c5.result -> sub_d9d4a4.second\n        length_c6e05b.length -> sub_d9d4a4.first\n        instance(x: 473, y: -162) slice_83e5f5 root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_83e5f5.list\n        sub_d9d4a4.result -> slice_83e5f5.start\n        length_c6e05b.length -> slice_83e5f5.end\n        instance(x: 577, y: -51) slice_2b0d4c root.Std_k98ojb.List.Slice {}\n        list_48148f -> slice_2b0d4c.list\n        0 -> slice_2b0d4c.start\n        sub_d9d4a4.result -> slice_2b0d4c.end\n        instance(x: 674, y: -103) concat_b75e08 root.Std_k98ojb.List.Concat {}\n        slice_83e5f5.slice -> concat_b75e08.right\n        slice_2b0d4c.slice -> concat_b75e08.left\n        concat_b75e08.result -> output_823209\n    }\n\n    \n\n    instance(x: 16, y: -44) rotate_right_f4f2a6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 390, y: -10) reduce_0d1d0e root.Std_k98ojb.Iteration.Reduce {}\n        list_2c62ab -> reduce_0d1d0e.items\n        func() {\n            in(x: -57, y: -14, name: \"accumulated\") property(Number) accumulated_2a3b1f\n            in(x: -89, y: 83, name: \"currentValue\") property(Number) currentValue_b3c06b\n\n            out(x: 76, y: -15, name: \"sum\") property(Number) sum_e42e77\n\n            instance(x: -14, y: 45) add_98a7f1 root.Std_k98ojb.Math.Add {}\n            accumulated_2a3b1f -> add_98a7f1.first\n            currentValue_b3c06b -> add_98a7f1.second\n            add_98a7f1.result -> sum_e42e77\n        } -> reduce_0d1d0e.reducer\n        0 -> reduce_0d1d0e.initialValue\n        reduce_0d1d0e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -6, y: 359) _sum_b1b7c2 root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -44, y: -89) ifexpression_bf62d0 root.Std_k98ojb.Std.IfExpression {\n            expression: \"n < 2\"\n        }\n        setter(x: 73, y: -167, name: \"setter_5c5a1e\") setter_5c5a1e = is_prime\n        getter(x: 709, y: 44, name: \"getter_82f4b9\") getter_82f4b9 = is_prime\n        func() {\n            in(x: -634, y: -23, name: \"i\") property(Number) i_c5e6c7\n\n            out(x: 601, y: -19, name: \"bool\") property(Bool) bool_34b71f\n            getter(x: -380, y: -32, name: \"getter_ea4d47\") getter_ea4d47 = is_prime\n\n            instance(x: 64, y: 195) modulo_d24c57 root.Std_k98ojb.Math.Modulo {}\n            instance(x: 203, y: -17) equal_04f4e0 root.Std_k98ojb.Logic.Equal {}\n            0 -> equal_04f4e0.right\n            num_5c0677 -> modulo_d24c57.first\n            i_c5e6c7 -> modulo_d24c57.second\n            getter_ea4d47.value -> bool_34b71f\n        } -> handler_982b97\n        instance(x: 316, y: -103) for_23e496 root.Std_k98ojb.Std.For {}\n        setter(x: 586, y: -116, name: \"setter_a6a5c5\") setter_a6a5c5 = is_prime\n        instance(x: 905, y: -77) if_24f32c root.Std_k98ojb.Std.If {}\n        func() {\n            in(x: -157, y: -27, name: \"i\") property(Number) i_ea7e6e\n\n            out(x: 573, y: -23, name: \"bool\") property(Bool) bool_9d48f0\n        } -> handler_a75b9b\n        instance(x: 713, y: -156) not_4c1a6e root.Std_k98ojb.Logic.Not {}\n        ifexpression_bf62d0.else -> for_23e496.reset\n        num_5c0677 -> ifexpression_bf62d0.gen_0\n        execute_b7b391 -> ifexpression_bf62d0.execute\n        2 -> for_23e496.starting_index\n        handler_a75b9b -> for_23e496.handler\n        num_5c0677 -> for_23e496.items\n        true -> setter_5c5a1e.new_value\n        setter_5c5a1e.continue -> ifexpression_bf62d0.execute\n        handler_982b97 -> for_23e496.handler\n        num_5c0677 -> for_23e496.stop_index\n        0 -> not_4c1a6e.input\n        not_4c1a6e.result -> setter_a6a5c5.new_value\n        if_24f32c.else -> continue_9a54bb\n        for_23e496.onItem -> if_24f32c.execute\n        getter_82f4b9.value -> output_c457b3\n        setter_a6a5c5.continue -> continue_9a54bb\n        for_23e496.done -> continue_9a54bb\n        if_24f32c.value -> if_24f32c.then\n    }\n\n    \n\n    instance(x: 17, y: -5) num_prime_c5031d root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7d5c0b root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: -219) lessthan_2f5ebe root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7d5c0b.first\n        y_5390f5 -> mul_7d5c0b.second\n        mul_7d5c0b.result -> lessthan_2f5ebe.left\n        lessthan_2f5ebe.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -164, y: -181) opposite_signs_25b7d7 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5d5b0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -19) equal_2c3e05 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5d5b0a.value\n        11 -> modulo_5d5b0a.divisor\n        modulo_5d5b0a.result -> equal_2c3e05.left\n        0 -> equal_2c3e05.right\n        equal_2c3e05.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: -17) is_diff_8b9a1d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3d5c6b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3d5c6b.input\n        search_ai -> replace_3d5c6b.search\n        replace_ai -> replace_3d5c6b.replace\n        replace_3d5c6b.output -> output_ai\n    }\n\n    \n\n    instance(x: -249, y: 107) replace_char_8f7a1e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2a7c1f\n            in(x: -45, y: 30, name: \"item\") property(Number) item_6b98d7\n\n            out(x: 301, y: -2, name: \"\") property(Number) _7dd980\n\n            instance(x: 122, y: -4) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_2a7c1f -> mul_584bfd.first\n            item_6b98d7 -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_2d6da6.reducer\n        1 -> reduce_2d6da6.accumulator\n        instance(x: -3, y: 18) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_7b3b7b.left\n        list_5fda54 -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_2d6da6.items\n        execute_19300c -> unique_7b3b7b.execute\n        continue_45190b -> reduce_2d6da6.continue\n        reduce_2d6da6.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 18, y: -11) unique_product_2c856f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -395, y: 264) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -207, y: 194) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 40, y: -35) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2d1b0a root.Std_k98ojb.List.Length {}\n        instance(x: 567, y: -107) slice_1c2f5e root.Std_k98ojb.List.Slice {}\n        instance(x: 43, y: -216) sub_15d5a7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 567, y: -209) slice_4f5e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 309, y: -107) concat_4d6a4b root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d1b0a.list\n        n_68068c -> sub_15d5a7.second\n        length_2d1b0a.length -> sub_15d5a7.first\n        sub_15d5a7.result -> slice_1c2f5e.start\n        -1 -> slice_1c2f5e.end\n        list_48148f -> slice_1c2f5e.list\n        0 -> slice_4f5e4c.start\n        sub_15d5a7.result -> slice_4f5e4c.end\n        list_48148f -> slice_4f5e4c.list\n        slice_1c2f5e.slice -> concat_4d6a4b.left\n        slice_4f5e4c.slice -> concat_4d6a4b.right\n        concat_4d6a4b.result -> output_823209\n    }\n\n    \n\n    instance(x: -17, y: 1) rotate_right_0d541a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6e7b4e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -153, y: -11, name: \"accumulated\") property(Number) accumulated_2a848f\n            in(x: -150, y: 76, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 197, y: 33, name: \"result\") property(Number) result_2a848f\n\n            instance(x: -14, y: 35) add_0b1ebe root.Std_k98ojb.Math.Add {}\n            accumulated_2a848f -> add_0b1ebe.first\n            current_2c62ab -> add_0b1ebe.second\n            add_0b1ebe.result -> result_2a848f\n        } -> reduce_6e7b4e.reducer\n        0 -> reduce_6e7b4e.initialValue\n        list_2c62ab -> reduce_6e7b4e.items\n        reduce_6e7b4e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -15, y: 30) _sum_9d6cbe root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f7d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 322, y: -106, name: \"getter_45a2e4\") getter_45a2e4 = is_prime\n        setter(x: 798, y: -106, name: \"setter_2b5d5c\") setter_2b5d5c = is_prime\n        instance(x: 322, y: -216) for_0a4e5f root.Std_k98ojb.Std.For {}\n        instance(x: 798, y: -216) ifexpression_45a2e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 322, y: 113, name: \"setter_7c4d6f\") setter_7c4d6f = is_prime\n        ifexpression_0f7d6c.then -> continue_9a54bb\n        getter_45a2e4.value -> output_c457b3\n        num_5c0677 -> for_0a4e5f.items\n        2 -> for_0a4e5f.start\n        ifexpression_0f7d6c.else -> setter_7c4d6f.execute\n        true -> setter_7c4d6f.new_value\n        num_5c0677 -> ifexpression_0f7d6c.gen_0\n        for_0a4e5f.item -> ifexpression_45a2e4.gen_1\n        num_5c0677 -> ifexpression_45a2e4.gen_0\n        setter_7c4d6f.continue -> for_0a4e5f.reset\n        ifexpression_45a2e4.then -> setter_2b5d5c.execute\n        false -> setter_2b5d5c.new_value\n        execute_b7b391 -> ifexpression_0f7d6c.execute\n        for_0a4e5f.onItem -> ifexpression_45a2e4.execute\n        ifexpression_45a2e4.else -> for_0a4e5f.next\n        for_0a4e5f.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -167, y: 38) num_prime_2b4d1c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -174) mul_1d2e6a root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -225) lessthan_e87b6b root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_1d2e6a.first\n        y_5390f5 -> mul_1d2e6a.second\n        mul_1d2e6a.result -> lessthan_e87b6b.left\n        lessthan_e87b6b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -205, y: -141) opposite_signs_2f7c4a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -11) modulo_5b0ebe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 355, y: -11) equal_ba9d9b root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0ebe.value\n        11 -> modulo_5b0ebe.divisor\n        modulo_5b0ebe.result -> equal_ba9d9b.left\n        0 -> equal_ba9d9b.right\n        equal_ba9d9b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -41, y: 8) is_diff_5475c3 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 370) replace_9d5b4c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9d5b4c.input\n        search_ai -> replace_9d5b4c.search\n        replace_ai -> replace_9d5b4c.replace\n        replace_9d5b4c.output -> output_ai\n    }\n\n    \n\n    instance(x: -236, y: 180) replace_char_e78e0f root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_59bc6e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -78, y: -11) reduce_4f44d4 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -205, y: 36, name: \"current\") property(Number) current_b7552c\n            in(x: -206, y: 119, name: \"acc\") property(Object) acc_484f7e\n\n            out(x: 555, y: 133, name: \"output\") property(Object) output_e820e4\n\n            instance(x: -24, y: 67) ifexpression_c4b4a6 root.Std_k98ojb.Std.IfExpression {\n                expression: \"!acc.contains\"\n            }\n            data_instance(x: 351, y: 135) data_0f62e2  = acc\n            instance(x: 179, y: 64) ifexpression_0d8c5c root.Std_k98ojb.Std.IfExpression {\n                expression: \"acc.product\"\n            }\n            data_instance(x: -39, y: 146) data_bf623e  = 1\n            instance(x: 347, y: 102) mul_5c7a8d root.Std_k98ojb.Math.Mul {}\n            ifexpression_c4b4a6.then -> data_0f62e2.new_value\n            ifexpression_c4b4a6.else -> ifexpression_0d8c5c.execute\n            current_b7552c -> mul_5c7a8d.first\n            acc_484f7e -> ifexpression_c4b4a6.gen_0\n            data_bf623e -> ifexpression_0d8c5c.then\n            ifexpression_0d8c5c.else -> mul_5c7a8d.second\n            acc_484f7e -> ifexpression_0d8c5c.gen_0\n            mul_5c7a8d.result -> data_0f62e2.product\n            current_b7552c -> data_0f62e2.contains\n            data_0f62e2.value -> output_e820e4\n        } -> reduce_4f44d4.reducer\n        list_5fda54 -> reduce_4f44d4.items\n        setter(x: 379, y: -13) setter_d9b6c0 = { \"contains\": [], \"product\": 1 }\n        data_instance(x: 285, y: -13) data_b16e2a  = acc\n        instance(x: 447, y: -141) get_68f749 root.Std_k98ojb.Logic.Get {}\n        setter_d9b6c0.continue -> reduce_4f44d4.execute\n        execute_19300c -> setter_d9b6c0.execute\n        data_b16e2a -> get_68f749.object\n        \"product\" -> get_68f749.key\n        get_68f749.value -> output_cffcc2\n        reduce_4f44d4.result -> setter_d9b6c0.new_value\n        reduce_4f44d4.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -34, y: 7) unique_product_2c8e0e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: 232) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 364) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -105, y: 298) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n\n    \n\n    instance(x: 30, y: -67) find_dissimilar_instance root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 464, y: -241) slice_1f0e1a root.Std_k98ojb.List.Slice {}\n        instance(x: 574, y: -41) slice_c2752b root.Std_k98ojb.List.Slice {}\n        instance(x: 369, y: -122) length_7c0f5d root.Std_k98ojb.List.Length {}\n        instance(x: 740, y: -114) concat_04a2be root.Std_k98ojb.List.Concat {}\n        instance(x: 369, y: -224) sub_b6e5f7 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> length_7c0f5d.list\n        n_68068c -> sub_b6e5f7.first\n        length_7c0f5d.length -> sub_b6e5f7.second\n        0 -> slice_c2752b.start\n        list_48148f -> slice_c2752b.list\n        -1 -> slice_c2752b.end\n        sub_b6e5f7.result -> slice_1f0e1a.start\n        length_7c0f5d.length -> slice_1f0e1a.end\n        list_48148f -> slice_1f0e1a.list\n        slice_c2752b.slice -> concat_04a2be.left\n        slice_1f0e1a.slice -> concat_04a2be.right\n        concat_04a2be.result -> output_823209\n    }\n\n    \n\n    instance(x: -16, y: 17) rotate_right_f3d5c7 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: 31) reduce_2b3d3b root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -275, y: -160, name: \"accumulated\") property(Number) accumulated_d42f1e\n            in(x: -276, y: 3, name: \"current\") property(Number) current_8b29c7\n\n            out(x: 265, y: -78, name: \"sum\") property(Number) sum_b0924d\n\n            instance(x: -122, y: -78) add_e4e2c5 root.Std_k98ojb.Math.Add {}\n            accumulated_d42f1e -> add_e4e2c5.first\n            current_8b29c7 -> add_e4e2c5.second\n            add_e4e2c5.result -> sum_b0924d\n        } -> reduce_2b3d3b.reducer\n        0 -> reduce_2b3d3b.initialValue\n        list_2c62ab -> reduce_2b3d3b.items\n        reduce_2b3d3b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -159, y: 70) _sum_e6887e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 218, y: -216) generaterange_01e06d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 377, y: -214) for_e8234f root.Std_k98ojb.Std.For {}\n        instance(x: 596, y: -213) modulo_0a7c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 839, y: -213) equal_c494f6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 995, y: -213) if_06e7b6 root.Std_k98ojb.Std.If {}\n        generaterange_01e06d.list -> for_e8234f.items\n        num_5c0677 -> modulo_0a7c6d.value\n        2 -> generaterange_01e06d.from\n        for_e8234f.item -> generaterange_01e06d.to\n        for_e8234f.item -> modulo_0a7c6d.divisor\n        modulo_0a7c6d.result -> equal_c494f6.left\n        0 -> equal_c494f6.right\n        equal_c494f6.result -> if_06e7b6.predicate\n        for_e8234f.onItem -> if_06e7b6.execute\n        if_06e7b6.then -> continue_9a54bb\n        if_06e7b6.else -> for_e8234f.next\n        num_5c0677 -> generaterange_01e06d.to\n        execute_b7b391 -> for_e8234f.reset\n        for_e8234f.done -> continue_9a54bb\n        if_06e7b6.value -> output_c457b3\n    }\n\n    \n\n    instance(x: 4, y: -20) num_prime_b61d0c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -144, y: -186) mul_79c1ab root.Std_k98ojb.Math.Mul {}\n        instance(x: 209, y: -190) lessthan_b664e0 root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_79c1ab.first\n        y_5390f5 -> mul_79c1ab.second\n        mul_79c1ab.result -> lessthan_b664e0.left\n        lessthan_b664e0.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -28, y: -153) opposite_signs_e8dfb9 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 449, y: 11) modulo_e6a5eb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 527, y: -26) equal_0820ad root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_e6a5eb.value\n        11 -> modulo_e6a5eb.divisor\n        0 -> equal_0820ad.right\n        modulo_e6a5eb.result -> equal_0820ad.left\n        equal_0820ad.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -19, y: -79) is_diff_4ca2a2 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: -79, y: 304) replace_1f8c2e root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1f8c2e.input\n        search_ai -> replace_1f8c2e.search\n        replace_ai -> replace_1f8c2e.replace\n        replace_1f8c2e.output -> output_ai\n    }\n\n    \n\n    instance(x: 39, y: -57) replace_char_f08b6a root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given string is in lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -207, y: 210) tolower_5a4b61 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 387, y: 134) equal_b2d1a0 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_5a4b61.input\n        tolower_5a4b61.output -> equal_b2d1a0.left\n        input_ai -> equal_b2d1a0.right\n        equal_b2d1a0.result -> output_ai\n    }\n\n    \n\n    instance(x: -348, y: 279) is_lower_5ae0f8 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: 32, y: 133) reduce_9a9eaf root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -604, y: -7, name: \"current\") property(Number) current_d55c9d\n            in(x: -620, y: 143, name: \"accumulated\") property(Number) accumulated_c38a6c\n\n            out(x: -313, y: 50, name: \"result\") property(Number) result_7e85be\n            \n            instance(x: -495, y: 89) mul_a2b2d4 root.Std_k98ojb.Math.Mul {}\n            \n            current_d55c9d -> mul_a2b2d4.first\n            accumulated_c38a6c -> mul_a2b2d4.second\n            mul_a2b2d4.result -> result_7e85be\n        } -> reduce_9a9eaf.handler\n        1 -> reduce_9a9eaf.accumulator\n        execute_19300c -> continue_45190b\n        list_5fda54 -> reduce_9a9eaf.items\n        reduce_9a9eaf.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: -16, y: 27) unique_product_b8ebad root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 159) difference_4e8c9b root.Std_k98ojb.Sets.Difference {}\n        instance(x: -300, y: -67) difference_4e8c9a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 415, y: -29) concat_d6b88f root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_4e8c9b.left\n        list2_ai -> difference_4e8c9a.left\n        list1_ai -> difference_4e8c9a.right\n        list2_ai -> difference_4e8c9b.right\n\n        difference_4e8c9b.difference -> concat_d6b88f.left\n        difference_4e8c9a.difference -> concat_d6b88f.right\n\n        concat_d6b88f.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -35, y: 237) find_dissimilar_e15d03 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 144, y: -115) length_f22fdd root.Std_k98ojb.List.Length {}\n        instance(x: 575, y: -64) slice_a8d1a3 root.Std_k98ojb.List.Slice {}\n        instance(x: 570, y: -171) slice_8c972f root.Std_k98ojb.List.Slice {}\n        instance(x: 1005, y: -69) concat_daae34 root.Std_k98ojb.List.Concat {}\n        instance(x: 376, y: -276) sub_6aebe5 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> length_f22fdd.list\n        n_68068c -> sub_6aebe5.second\n        length_f22fdd.length -> sub_6aebe5.first\n        length_f22fdd.length -> slice_a8d1a3.end\n        0 -> slice_a8d1a3.start\n        list_48148f -> slice_a8d1a3.list\n        -1 -> slice_8c972f.end\n        sub_6aebe5.result -> slice_8c972f.start\n        list_48148f -> slice_8c972f.list\n        slice_8c972f.slice -> concat_daae34.left\n        slice_a8d1a3.slice -> concat_daae34.right\n        concat_daae34.result -> output_823209\n    }\n\n    \n\n    instance(x: 64, y: -65) rotate_right_7a88c4 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 390, y: -10) reduce_e3e5a5 root.Std_k98ojb.Iteration.Reduce {}\n        func(doc: \"\") add_func {\n            in(x: -67, y: 13, name: \"accumulated\") property(Number) accumulated_2c42fa\n            in(x: -70, y: 79, name: \"item\") property(Number) item_b5e0f8\n\n            out(x: 157, y: 68, name: \"result\") property(Number) result_ea7d43\n\n            instance(x: -12, y: 55) add_92b1f6 root.Std_k98ojb.Math.Add {}\n            accumulated_2c42fa -> add_92b1f6.first\n            item_b5e0f8 -> add_92b1f6.second\n            add_92b1f6.result -> result_ea7d43\n        } -> reduce_e3e5a5.reducer\n        list_2c62ab -> reduce_e3e5a5.items\n        0 -> reduce_e3e5a5.initialValue\n        reduce_e3e5a5.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 192, y: -54) _sum_7f3e6c root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -408, y: -116) generaterange_b7e3f3 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 523, y: -133) equal_c971c8 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 406, y: -110) find_8d82f4 root.Std_k98ojb.Iteration.Find {}\n        func() {\n            in(x: -15, y: 179, name: \"current\") property(Number) current_b4a8c0\n            in(x: -3, y: 83, name: \"_index\") property(Number) _index_2fcb6e\n\n            out(x: 470, y: 50, name: \"output\") property(Bool) output_a6b91e\n\n            instance(x: 254, y: -38) modulo_30a8ca root.Std_k98ojb.Math.Modulo {}\n            num_5c0677 -> modulo_30a8ca.value\n            current_b4a8c0 -> modulo_30a8ca.divisor\n            modulo_30a8ca.result -> output_a6b91e\n        } -> find_8d82f4.predicate\n        1 -> generaterange_b7e3f3.from\n        num_5c0677 -> generaterange_b7e3f3.to\n        generaterange_b7e3f3.list -> find_8d82f4.items\n        num_5c0677 -> equal_c971c8.right\n        1 -> equal_c971c8.left\n        equal_c971c8.result -> output_c457b3\n        execute_b7b391 -> find_8d82f4.reset\n        find_8d82f4.done -> continue_9a54bb\n        find_8d82f4.item -> equal_c971c8.left\n    }\n\n    \n\n    instance(x: -160, y: 23) num_prime_bab5b4 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -246, y: -248) mul_7d5c0b root.Std_k98ojb.Math.Mul {}\n        instance(x: 16, y: -219) lessthan_2f5ebe root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_7d5c0b.first\n        y_5390f5 -> mul_7d5c0b.second\n        mul_7d5c0b.result -> lessthan_2f5ebe.left\n        lessthan_2f5ebe.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -164, y: -181) opposite_signs_25b7d7 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 149, y: -21) modulo_5d5b0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 374, y: -19) equal_2c3e05 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5d5b0a.value\n        11 -> modulo_5d5b0a.divisor\n        modulo_5d5b0a.result -> equal_2c3e05.left\n        0 -> equal_2c3e05.right\n        equal_2c3e05.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -14, y: -17) is_diff_8b9a1d root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 709, y: 132) replace_3d5c6b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3d5c6b.input\n        search_ai -> replace_3d5c6b.search\n        replace_ai -> replace_3d5c6b.replace\n        replace_3d5c6b.output -> output_ai\n    }\n\n    \n\n    instance(x: -249, y: 107) replace_char_8f7a1e root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_407e1b root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 122, y: 101) reduce_2d6da6 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -45, y: -37, name: \"acc\") property(Number) acc_2a7c1f\n            in(x: -45, y: 30, name: \"item\") property(Number) item_6b98d7\n\n            out(x: 301, y: -2, name: \"\") property(Number) _7dd980\n\n            instance(x: 122, y: -4) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_2a7c1f -> mul_584bfd.first\n            item_6b98d7 -> mul_584bfd.second\n            mul_584bfd.result -> _7dd980\n        } -> reduce_2d6da6.reducer\n        1 -> reduce_2d6da6.accumulator\n        instance(x: -3, y: 18) unique_7b3b7b root.Std_k98ojb.Sets.Difference {}\n        list_5fda54 -> unique_7b3b7b.left\n        list_5fda54 -> unique_7b3b7b.right\n        unique_7b3b7b.difference -> reduce_2d6da6.items\n        execute_19300c -> unique_7b3b7b.execute\n        continue_45190b -> reduce_2d6da6.continue\n        reduce_2d6da6.result -> output_cffcc2\n    }\n\n    \n\n    instance(x: 18, y: -11) unique_product_2c856f root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -395, y: 125) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -395, y: 264) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -207, y: 194) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.left\n        difference_2.difference -> concat.right\n\n        concat.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: 40, y: -35) find_dissimilar_node root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 42, y: -102) length_2d1b0a root.Std_k98ojb.List.Length {}\n        instance(x: 567, y: -107) slice_1c2f5e root.Std_k98ojb.List.Slice {}\n        instance(x: 43, y: -216) sub_15d5a7 root.Std_k98ojb.Math.Sub {}\n        instance(x: 567, y: -209) slice_4f5e4c root.Std_k98ojb.List.Slice {}\n        instance(x: 309, y: -107) concat_4d6a4b root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_2d1b0a.list\n        n_68068c -> sub_15d5a7.second\n        length_2d1b0a.length -> sub_15d5a7.first\n        sub_15d5a7.result -> slice_1c2f5e.start\n        -1 -> slice_1c2f5e.end\n        list_48148f -> slice_1c2f5e.list\n        0 -> slice_4f5e4c.start\n        sub_15d5a7.result -> slice_4f5e4c.end\n        list_48148f -> slice_4f5e4c.list\n        slice_1c2f5e.slice -> concat_4d6a4b.left\n        slice_4f5e4c.slice -> concat_4d6a4b.right\n        concat_4d6a4b.result -> output_823209\n    }\n\n    \n\n    instance(x: -17, y: 1) rotate_right_0d521a root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -11) reduce_6e7b4e root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -153, y: -11, name: \"accumulated\") property(Number) accumulated_2a848f\n            in(x: -150, y: 76, name: \"current\") property(Number) current_2c62ab\n\n            out(x: 197, y: 33, name: \"result\") property(Number) result_2a848f\n\n            instance(x: -14, y: 35) add_0b1ebe root.Std_k98ojb.Math.Add {}\n            accumulated_2a848f -> add_0b1ebe.first\n            current_2c62ab -> add_0b1ebe.second\n            add_0b1ebe.result -> result_2a848f\n        } -> reduce_6e7b4e.reducer\n        0 -> reduce_6e7b4e.initialValue\n        list_2c62ab -> reduce_6e7b4e.items\n        reduce_6e7b4e.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -15, y: 30) _sum_9b9d1a root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 82, y: -106) ifexpression_0f7d6c root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        getter(x: 322, y: -106, name: \"getter_45a2e4\") getter_45a2e4 = is_prime\n        setter(x: 798, y: -106, name: \"setter_2b5d5c\") setter_2b5d5c = is_prime\n        instance(x: 322, y: -216) for_0a4e5f root.Std_k98ojb.Std.For {}\n        instance(x: 798, y: -216) ifexpression_45a2e4 root.Std_k98ojb.Std.IfExpression {\n            expression: \"num % i == 0\"\n        }\n        setter(x: 322, y: 113, name: \"setter_7c4d6f\") setter_7c4d6f = is_prime\n        ifexpression_0f7d6c.then -> continue_9a54bb\n        getter_45a2e4.value -> output_c457b3\n        num_5c0677 -> for_0a4e5f.items\n        2 -> for_0a4e5f.start\n        ifexpression_0f7d6c.else -> setter_7c4d6f.execute\n        true -> setter_7c4d6f.new_value\n        num_5c0677 -> ifexpression_0f7d6c.gen_0\n        for_0a4e5f.item -> ifexpression_45a2e4.gen_1\n        num_5c0677 -> ifexpression_45a2e4.gen_0\n        setter_7c4d6f.continue -> for_0a4e5f.reset\n        ifexpression_45a2e4.then -> setter_2b5d5c.execute\n        false -> setter_2b5d5c.new_value\n        execute_b7b391 -> ifexpression_0f7d6c.execute\n        for_0a4e5f.onItem -> ifexpression_45a2e4.execute\n        ifexpression_45a2e4.else -> for_0a4e5f.next\n        for_0a4e5f.done -> continue_9a54bb\n    }\n\n    \n\n    instance(x: -167, y: 38) num_prime_2b4d1c root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -286, y: -174) mul_1d2e6a root.Std_k98ojb.Math.Mul {}\n        instance(x: 0, y: -225) lessthan_e8732b root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_1d2e6a.first\n        y_5390f5 -> mul_1d2e6a.second\n        mul_1d2e6a.result -> lessthan_e8732b.left\n        lessthan_e8732b.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -205, y: -141) opposite_signs_2f7c4a root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 147, y: -11) modulo_5b0ebe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 355, y: -11) equal_ba9d9b root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b0ebe.value\n        11 -> modulo_5b0ebe.divisor\n        modulo_5b0ebe.result -> equal_ba9d9b.left\n        0 -> equal_ba9d9b.right\n        equal_ba9d9b.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -41, y: 8) is_diff_537b0b root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 370) replace_9c2b4d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9c2b4d.input\n        search_ai -> replace_9c2b4d.search\n        replace_ai -> replace_9c2b4d.replace\n        replace_9c2b4d.output -> output_ai\n    }\n\n    \n\n    instance(x: -31, y: 67) replace_char_e8354a root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") to_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 220, y: 132) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: -174, y: -63) to_lower_59bc6e root.main.to_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -78, y: -11) reduce_4f44d4 root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -205, y: 36, name: \"current\") property(Number) current_b7552c\n            in(x: -206, y: 119, name: \"acc\") property(Object) acc_482a5f\n\n            out(x: 555, y: 133, name: \"output\") property(Object) output_79459d\n            data_instance(x: -106, y: 168) data_1314e0  = [current]\n            instance(x: 213, y: 166) contains_f7a1f3 root.Std_k98ojb.List.Contains {}\n            current_b7552c -> contains_f7a1f3.item\n            acc_482a5f.numbers -> contains_f7a1f3.list\n            instance(x: 30, y: -2) if_6d0e9e root.Std_k98ojb.Std.If {}\n            data_instance(x: 432, y: 84) data_d30155  = [acc.numbers, current]\n            data_instance(x: 437, y: -10) data_6f34c6  = acc.product\n            contains_f7a1f3.is_contained -> if_6d0e9e.input\n            if_6d0e9e.then -> output_79459d\n            data_d30155 -> if_6d0e9e.value\n            if_6d0e9e.else -> output_79459d\n            data_6f34c6 -> if_6d0e9e.value2\n        } -> reduce_4f44d4.reducer\n        instance(x: 18, y: -159) mul_2a48db root.Std_k98ojb.Math.Mul {}\n        data_instance(x: 372, y: -66) data_0c005e  = [1]\n        list_5fda54 -> reduce_4f44d4.items\n        execute_19300c -> reduce_4f44d4.execute\n        continue_45190b -> mul_2a48db.execute\n        data_0c005e -> mul_2a48db.first\n        output_cffcc2 -> mul_2a48db.second\n        reduce_4f44d4.result.product -> output_cffcc2\n    }\n\n    \n\n    instance(x: 16, y: -39) unique_product_52c05e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: 232) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 364) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -105, y: 298) concat root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n\n    \n\n    instance(x: 30, y: -67) find_dissimilar_instance root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 464, y: -241) slice_1f0e1a root.Std_k98ojb.List.Slice {}\n        instance(x: 574, y: -41) slice_c2652b root.Std_k98ojb.List.Slice {}\n        instance(x: 326, y: -124) length_2b0d5c root.Std_k98ojb.List.Length {}\n        instance(x: 733, y: -113) concat_f594a5 root.Std_k98ojb.List.Concat {}\n        instance(x: 169, y: -160) sub_285e4d root.Std_k98ojb.Math.Sub {}\n        list_48148f -> length_2b0d5c.list\n        n_68068c -> sub_285e4d.second\n        0 -> slice_c2652b.start\n        length_2b0d5c.length -> sub_285e4d.first\n        list_48148f -> slice_c2652b.list\n        -1 -> slice_1f0e1a.end\n        sub_285e4d.result -> slice_1f0e1a.start\n        list_48148f -> slice_1f0e1a.list\n        slice_c2652b.slice -> concat_f594a5.left\n        slice_1f0e1a.slice -> concat_f594a5.right\n        concat_f594a5.result -> output_823209\n    }\n\n    \n\n    instance(x: -107, y: 26) rotate_right_4b77d6 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: 31) reduce_2b3d3b root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -275, y: -160, name: \"accumulated\") property(Number) accumulated_d44e1f\n            in(x: -276, y: 3, name: \"current\") property(Number) current_8b79c5\n\n            out(x: 261, y: -78, name: \"sum\") property(Number) sum_b0c5d4\n\n            instance(x: -86, y: -78) add_e4e2c5 root.Std_k98ojb.Math.Add {}\n            accumulated_d44e1f -> add_e4e2c5.first\n            current_8b79c5 -> add_e4e2c5.second\n            add_e4e2c5.result -> sum_b0c5d4\n        } -> reduce_2b3d3b.reducer\n        0 -> reduce_2b3d3b.initialValue\n        list_2c62ab -> reduce_2b3d3b.items\n        reduce_2b3d3b.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -159, y: 70) _sum_e6817e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 218, y: -216) generaterange_01e06d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 377, y: -214) for_e7224f root.Std_k98ojb.Std.For {}\n        instance(x: 596, y: -213) modulo_0a7c6d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 839, y: -213) equal_c494f6 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 995, y: -213) if_06e7e4 root.Std_k98ojb.Std.If {}\n        setter(x: 1212, y: -222, name: \"setter_ea10ad\") setter_ea10ad = is_prime\n        getter(x: 594, y: -369, name: \"getter_7c240b\") getter_7c240b = is_prime\n        instance(x: 1284, y: -213) not_3e1f1a root.Std_k98ojb.Logic.Not {}\n        setter(x: 596, y: -522, name: \"setter_c780b0\") setter_c780b0 = is_prime\n        instance(x: 240, y: -36) ifexpression_1e9a5d root.Std_k98ojb.Std.IfExpression {\n            expression: \"num <= 1\"\n        }\n        2 -> generaterange_01e06d.from\n        num_5c0677 -> generaterange_01e06d.to\n        execute_b7b391 -> ifexpression_1e9a5d.execute\n        ifexpression_1e9a5d.then -> setter_c780b0.execute\n        false -> setter_c780b0.new_value\n        generaterange_01e06d.list -> for_e7224f.items\n        num_5c0677 -> modulo_0a7c6d.value\n        for_e7224f.item -> modulo_0a7c6d.divisor\n        0 -> equal_c494f6.right\n        modulo_0a7c6d.result -> equal_c494f6.left\n        equal_c494f6.result -> if_06e7e4.predicate\n        for_e7224f.onItem -> if_06e7e4.execute\n        getter_7c240b.value -> output_c457b3\n        true -> setter_ea10ad.new_value\n        not_3e1f1a.result -> output_c457b3\n        for_e7224f.done -> continue_9a54bb\n        ifexpression_1e9a5d.else -> generaterange_01e06d.reset\n        setter_c780b0.continue -> generaterange_01e06d.reset\n        if_06e7e4.then -> setter_ea10ad.execute\n        if_06e7e4.else -> for_e7224f.next\n        getter_7c240b.value -> not_3e1f1a.input\n    }\n\n    \n\n    instance(x: -195, y: 18) num_prime_10c42d root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_10_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 13762,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -144, y: -186) mul_71e0ab root.Std_k98ojb.Math.Mul {}\n        instance(x: 253, y: -192) lessthan_b9906e root.Std_k98ojb.Math.LessThan {\n            right: 0\n        }\n        x_853326 -> mul_71e0ab.first\n        y_5390f5 -> mul_71e0ab.second\n        mul_71e0ab.result -> lessthan_b9906e.left\n        lessthan_b9906e.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -24, y: -157) opposite_signs_e2df81 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 449, y: 11) modulo_e6a5be root.Std_k98ojb.Math.Modulo {}\n        instance(x: 527, y: 15) equal_0934ad root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_e6a5be.value\n        11 -> modulo_e6a5be.divisor\n        modulo_e6a5be.result -> equal_0934ad.left\n        0 -> equal_0934ad.right\n        equal_0934ad.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -17, y: -85) is_diff_e61bdc root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: -79, y: 304) replace_1a9c2e root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1a9c2e.input\n        search_ai -> replace_1a9c2e.search\n        replace_ai -> replace_1a9c2e.replace\n        replace_1a9c2e.output -> output_ai\n    }\n\n    \n\n    instance(x: 37, y: -58) replace_char_f09b6d root.main.replace_char {}\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given string is in lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -207, y: 210) tolower_5a4b61 root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 387, y: 134) equal_b2d1a0 root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_5a4b61.input\n        tolower_5a4b61.output -> equal_b2d1a0.left\n        input_ai -> equal_b2d1a0.right\n        equal_b2d1a0.result -> output_ai\n    }\n\n    \n\n    instance(x: -348, y: 279) is_lower_5ad4f8 root.main.is_lower {}\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        \n        instance(x: 32, y: 133) reduce_9a9eaf root.Std_k98ojb.Iteration.Reduce {}\n        func() {\n            in(x: -604, y: -7, name: \"current\") property(Number) current_d54c9d\n            in(x: -620, y: 143, name: \"accumulated\") property(Number) accumulated_c38a6c\n\n            out(x: -313, y: 50, name: \"result\") property(Number) result_7e85be\n            \n            instance(x: -495, y: 89) mul_a2b2d4 root.Std_k98ojb.Math.Mul {}\n            \n            current_d54c9d -> mul_a2b2d4.first\n            accumulated_c38a6c -> mul_a2b2d4.second\n            mul_a2b2d4.result -> result_7e85be\n        } -> reduce_9a9eaf.handler\n        instance(x: 314, y: 10) sets_difference_bdfb55 root.Std_k98ojb.Sets.Difference {}\n        \n        list_5fda54 -> sets_difference_bdfb55.left\n        list_5fda54 -> sets_difference_bdfb55.right\n        \n        sets_difference_bdfb55.difference -> reduce_9a9eaf.items\n\n        1 -> reduce_9a9eaf.initial_value\n        \n        execute_19300c -> reduce_9a9eaf.execute\n        reduce_9a9eaf.result -> output_cffcc2\n        reduce_9a9eaf.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -286, y: 27) unique_product_e1c3eb root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 159) difference_4e8c9b root.Std_k98ojb.Sets.Difference {}\n        instance(x: -300, y: -67) difference_4e8c9a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 415, y: -29) concat_d6588f root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_4e8c9b.left\n        list2_ai -> difference_4e8c9a.left\n        list1_ai -> difference_4e8c9a.right\n        list2_ai -> difference_4e8c9b.right\n\n        difference_4e8c9b.difference -> concat_d6588f.left\n        difference_4e8c9a.difference -> concat_d6588f.right\n\n        concat_d6588f.concatenated -> output_ai\n    }\n\n    \n\n    instance(x: -73, y: 202) find_dissimilar_a4b1d1 root.main.find_dissimilar {}\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 144, y: -115) length_f22eab root.Std_k98ojb.List.Length {}\n        instance(x: 575, y: -64) slice_a0d4a3 root.Std_k98ojb.List.Slice {}\n        instance(x: 575, y: -161) slice_3cf2ce root.Std_k98ojb.List.Slice {}\n        instance(x: 352, y: -115) modulo_a74fe7 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 405, y: -265) sub_c0d331 root.Std_k98ojb.Math.Sub {}\n        list_48148f -> length_f22eab.list\n        n_68068c -> modulo_a74fe7.value\n        length_f22eab.length -> modulo_a74fe7.divisor\n        modulo_a74fe7.result -> sub_c0d331.first\n        list_48148f -> slice_a0d4a3.list\n        list_48148f -> slice_3cf2ce.list\n        0 -> slice_3cf2ce.start\n        modulo_a74fe7.result -> slice_3cf2ce.end\n        length_f22eab.length -> sub_c0d331.second\n        sub_c0d331.result -> slice_a0d4a3.start\n        -1 -> slice_a0d4a3.end\n        instance(x: 659, y: -114) concat_8b207e root.Std_k98ojb.List.Concat {}\n        slice_3cf2ce.slice -> concat_8b207e.left\n        slice_a0d4a3.slice -> concat_8b207e.right\n        concat_8b207e.result -> output_823209\n    }\n\n    \n\n    instance(x: -15, y: -69) rotate_right_bab128 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 390, y: -10) reduce_e3e5c4 root.Std_k98ojb.Iteration.Reduce {}\n        func(doc: \"\") add_func {\n            in(x: -67, y: 13, name: \"accumulated\") property(Number) accumulated_2a84f7\n            in(x: -75, y: 68, name: \"current\") property(Number) current_d6d046\n\n            out(x: 307, y: 13, name: \"sum\") property(Number) sum_2a85af\n\n            instance(x: 94, y: -6) add_2bcb1f root.Std_k98ojb.Math.Add {}\n            accumulated_2a84f7 -> add_2bcb1f.first\n            current_d6d046 -> add_2bcb1f.second\n            add_2bcb1f.result -> sum_2a85af\n        }\n        reduce_e3e5c4.reducer = add_func\n        list_2c62ab -> reduce_e3e5c4.items\n        0 -> reduce_e3e5c4.initialValue\n        reduce_e3e5c4.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 9, y: -13) sum_node root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: -408, y: -116) generaterange_b7e3f3 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 523, y: -133) equal_c97f6d root.Std_k98ojb.Logic.Equal {}\n        instance(x: 401, y: -110) length_8cfead root.Std_k98ojb.List.Length {}\n        instance(x: 752, y: -104) if_fed8f3 root.Std_k98ojb.Std.If {}\n        instance(x: 168, y: -94) filter_b0cefa root.Std_k98ojb.Iteration.Filter {}\n        func() {\n            in(x: -278, y: -119, name: \"n\") property(Number) n_2a1dfc\n            in(x: -257, y: 43, name: \"_index\") property(Number) _index_67d0be\n\n            out(x: 637, y: 19, name: \"output\") property(Bool) output_e58a9e\n\n            instance(x: -212, y: -24) expression_30dbb7 root.Std_k98ojb.Math.Expression {\n                expression: \"(n % item == 0)\"\n            }\n            n_2a1dfc -> expression_30dbb7.gen_0\n            _index_67d0be -> expression_30dbb7.gen_1\n            expression_30dbb7.result -> output_e58a9e\n        } -> filter_b0cefa.handler\n        getter(x: 42, y: -101, name: \"getter_a67c96\") getter_a67c96 = list\n        setter(x: -36, y: -117, name: \"setter_ea8f5b\") setter_ea8f5b = list\n        2 -> generaterange_b7e3f3.from\n        num_5c0677 -> generaterange_b7e3f3.to\n        generaterange_b7e3f3.list -> filter_b0cefa.items\n        equal_c97f6d.result -> if_fed8f3.predicate\n        1 -> equal_c97f6d.right\n        length_8cfead.length -> equal_c97f6d.left\n        getter_a67c96.value -> filter_b0cefa.items\n        filter_b0cefa.output_list -> length_8cfead.list\n        if_fed8f3.else -> continue_9a54bb\n        execute_b7b391 -> generaterange_b7e3f3.reset\n        if_fed8f3.then -> continue_9a54bb\n        filter_b0cefa.continue_handler -> setter_ea8f5b.execute\n        generaterange_b7e3f3.list -> setter_ea8f5b.new_value\n        if_fed8f3.value -> output_c457b3\n    }\n\n    \n\n    instance(x: 32, y: -169) num_prime_020aa7 root.main.num_prime {}\n}"
            ]
        }
    }
]