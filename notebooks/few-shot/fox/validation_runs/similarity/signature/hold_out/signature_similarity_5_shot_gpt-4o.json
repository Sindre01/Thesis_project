[
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) mul_9f8b2c root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -178) lessthan_7b3c9d root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_9f8b2c.first\n        y_5390f5 -> mul_9f8b2c.second\n        mul_9f8b2c.result -> lessthan_7b3c9d.left\n        0 -> lessthan_7b3c9d.right\n        lessthan_7b3c9d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_signs_3f7b9c root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 250, y: -10) modulo_11c7b2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 450, y: 0) equal_3b8a55 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_11c7b2.value\n        11 -> modulo_11c7b2.divisor\n        modulo_11c7b2.result -> equal_3b8a55.left\n        0 -> equal_3b8a55.right\n        equal_3b8a55.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 50) is_diff_7a4dad root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 300, y: 210) replace_1a2b3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1a2b3c.input\n        search_ai -> replace_1a2b3c.search\n        replace_ai -> replace_1a2b3c.replace\n        replace_1a2b3c.output -> output_ai\n    }\n\n    \n\n    instance(x: 100, y: 200) replace_char_4d5e6f root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 250, y: 180) tolower_3a4b2c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 600, y: 150) equal_5b6c7d root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3a4b2c.input\n        tolower_3a4b2c.output -> equal_5b6c7d.left\n        input_ai -> equal_5b6c7d.right\n        equal_5b6c7d.equal -> output_ai\n    }\n\n    \n    instance(x: 250, y: 180) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 24) filter_unique_1a2b3c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 400, y: 24) reduce_product_4d5e6f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 200, y: 24) empty_list_7g8h9i root.Std_k98ojb.List.Empty {}\n        instance(x: 300, y: 24) add_to_list_0j1k2l root.Std_k98ojb.List.Add {}\n\n        list_5fda54 -> filter_unique_1a2b3c.items\n        func() {\n            in(x: -50, y: 0, name: \"item\") property(Number) item_123abc\n            out(x: 50, y: 0, name: \"is_unique\") property(Bool) is_unique_456def\n\n            instance(x: 0, y: 0) contains_check_789ghi root.Std_k98ojb.List.Contains {}\n            instance(x: 100, y: 0) not_contains_012jkl root.Std_k98ojb.Logic.Not {}\n\n            empty_list_7g8h9i.list -> contains_check_789ghi.list\n            item_123abc -> contains_check_789ghi.item\n            contains_check_789ghi.result -> not_contains_012jkl.input\n            not_contains_012jkl.result -> is_unique_456def\n        } -> filter_unique_1a2b3c.handler\n\n        filter_unique_1a2b3c.output_list -> reduce_product_4d5e6f.items\n        func() {\n            in(x: -50, y: 0, name: \"acc\") property(Number) acc_789mno\n            in(x: 50, y: 0, name: \"item\") property(Number) item_012pqr\n            out(x: 150, y: 0, name: \"result\") property(Number) result_345stu\n\n            instance(x: 0, y: 0) multiply_678vwx root.Std_k98ojb.Math.Mul {}\n            acc_789mno -> multiply_678vwx.first\n            item_012pqr -> multiply_678vwx.second\n            multiply_678vwx.result -> result_345stu\n        } -> reduce_product_4d5e6f.reducer\n\n        1 -> reduce_product_4d5e6f.initial\n        reduce_product_4d5e6f.result -> output_cffcc2\n        execute_19300c -> filter_unique_1a2b3c.execute\n        reduce_product_4d5e6f.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 101, y: -67) unique_product_496e5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 45, y: 30) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 45, y: 130) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 80) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.list -> output_ai\n    }\n\n    \n\n    instance(x: -138, y: -63) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 158, y: -78) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 392, y: -20) modulo_4e8c54 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 620, y: -100) slice_1_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 620, y: 40) slice_2_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 850, y: -30) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_4b8927.list\n        n_68068c -> modulo_4e8c54.value\n        length_4b8927.length -> modulo_4e8c54.divisor\n        modulo_4e8c54.result -> slice_1_3f3ee6.start\n        modulo_4e8c54.result -> slice_2_76ecda.end\n        list_48148f -> slice_1_3f3ee6.list\n        list_48148f -> slice_2_76ecda.list\n        -1 -> slice_1_3f3ee6.end\n        0 -> slice_2_76ecda.start\n        slice_1_3f3ee6.slice -> concat_0234d2.right\n        slice_2_76ecda.slice -> concat_0234d2.left\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: 10, y: -177) rotate_right_fc79d5 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 30) reduce_4b8e90 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4b8e90.initialValue\n        list_2c62ab -> reduce_4b8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_3f11cd\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_3f11cd -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_4b8e90.reducer\n        reduce_4b8e90.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 92, y: -216) if_8b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 303, y: -28) generaterange_5b9f3e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 533, y: 25) for_3b7c9d root.Std_k98ojb.Std.For {}\n        instance(x: 760, y: -150) modulo_4f8b7c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1010, y: -25) equal_9f8b7c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1230, y: -25) if_2b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 150) not_3b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 300) if_4b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 450) not_5b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 600) if_6b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 750) not_7b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 900) if_8b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 1050) not_9b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 1200) if_10b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 1350) not_11b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 1500) if_12b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 1650) not_13b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 1800) if_14b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 1950) not_15b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 2100) if_16b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 2250) not_17b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 2400) if_18b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 2550) not_19b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 2700) if_20b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 2850) not_21b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 3000) if_22b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 3150) not_23b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y: 3300) if_24b7f6a root.Std_k98ojb.Std.If {}\n        instance(x: 1230, y: 3450) not_25b7f6a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1230, y:"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -179) lessthan_8f7b2a root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_2f9d09.first\n        y_5390f5 -> mul_2f9d09.second\n        mul_2f9d09.result -> lessthan_8f7b2a.left\n        0 -> lessthan_8f7b2a.right\n        lessthan_8f7b2a.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_signs_7a4dad root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 300, y: -10) modulo_11e7b2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 500, y: 0) equal_3b9a7c root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_11e7b2.value\n        11 -> modulo_11e7b2.divisor\n        modulo_11e7b2.result -> equal_3b9a7c.left\n        0 -> equal_3b9a7c.right\n        equal_3b9a7c.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 50) is_diff_4a7b3c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 200, y: 200) replace_5d3f9b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5d3f9b.input\n        search_ai -> replace_5d3f9b.search\n        replace_ai -> replace_5d3f9b.replace\n        replace_5d3f9b.output -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: 0) replace_char_123456 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 250, y: 180) tolower_3a4b5c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 600, y: 150) equal_9d8f7e root.Std_k98ojb.Logic.Equal {}\n        \n        input_ai -> tolower_3a4b5c.input\n        tolower_3a4b5c.output -> equal_9d8f7e.left\n        input_ai -> equal_9d8f7e.right\n        equal_9d8f7e.equal -> output_ai\n    }\n\n    \n    instance(x: 250, y: 180) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 0, y: 0) filter_unique_8b3f7a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 300, y: 0) reduce_product_9c4d2b root.Std_k98ojb.Iteration.Reduce {}\n\n        list_5fda54 -> filter_unique_8b3f7a.items\n        func() {\n            in(x: -100, y: 0, name: \"item\") property(Number) item_1a2b3c\n            out(x: 100, y: 0, name: \"is_unique\") property(Bool) is_unique_4d5e6f\n\n            instance(x: 0, y: 0) contains_check_7e8f9a root.Std_k98ojb.List.Contains {}\n            instance(x: 0, y: 0) remove_duplicates_0a1b2c root.Std_k98ojb.List.Remove {}\n\n            list_5fda54 -> remove_duplicates_0a1b2c.list\n            item_1a2b3c -> contains_check_7e8f9a.item\n            remove_duplicates_0a1b2c.listWithoutItem -> contains_check_7e8f9a.list\n            contains_check_7e8f9a.result -> is_unique_4d5e6f\n        } -> filter_unique_8b3f7a.handler\n\n        filter_unique_8b3f7a.output_list -> reduce_product_9c4d2b.items\n        func() {\n            in(x: -100, y: 0, name: \"acc\") property(Number) acc_7g8h9i\n            in(x: 100, y: 0, name: \"item\") property(Number) item_0j1k2l\n            out(x: 200, y: 0, name: \"result\") property(Number) result_3m4n5o\n\n            instance(x: 0, y: 0) mul_6p7q8r root.Std_k98ojb.Math.Mul {}\n            acc_7g8h9i -> mul_6p7q8r.first\n            item_0j1k2l -> mul_6p7q8r.second\n            mul_6p7q8r.result -> result_3m4n5o\n        } -> reduce_product_9c4d2b.reducer\n\n        1 -> reduce_product_9c4d2b.initial\n        reduce_product_9c4d2b.result -> output_cffcc2\n        execute_19300c -> filter_unique_8b3f7a.execute\n        reduce_product_9c4d2b.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 101, y: -67) unique_product_496e5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 47, y: 30) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 47, y: 130) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 80) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        difference_1.difference -> concat_1.left\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_2.difference -> concat_1.right\n\n        concat_1.list -> output_ai\n    }\n\n    \n\n    instance(x: -138, y: -63) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 204, y: -78) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 431, y: -82) sub_3e8b1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 660, y: -83) slice_1a2c3d root.Std_k98ojb.List.Slice {}\n        instance(x: 663, y: 58) slice_5b3f4e root.Std_k98ojb.List.Slice {}\n        instance(x: 882, y: -12) concat_7c8d9e root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> sub_3e8b1c.first\n        n_68068c -> sub_3e8b1c.second\n        sub_3e8b1c.result -> slice_1a2c3d.start\n        list_48148f -> slice_1a2c3d.list\n        -1 -> slice_1a2c3d.end\n        slice_1a2c3d.slice -> concat_7c8d9e.left\n        list_48148f -> slice_5b3f4e.list\n        0 -> slice_5b3f4e.start\n        sub_3e8b1c.result -> slice_5b3f4e.end\n        slice_5b3f4e.slice -> concat_7c8d9e.right\n        concat_7c8d9e.result -> output_823209\n    }\n\n    \n\n    instance(x: 10, y: -177) rotate_right_3f9d5e root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 25) reduce_3b9f8a root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3b9f8a.initialValue\n        list_2c62ab -> reduce_3b9f8a.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1a2b3c\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1a2b3c -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_3b9f8a.reducer\n        reduce_3b9f8a.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 92, y: -216) if_2a7f3c root.Std_k98ojb.Std.If {}\n        instance(x: 303, y: -28) generaterange_5b9f3e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 533, y: 5) for_3b7c9f root.Std_k98ojb.Std.For {}\n        instance(x: 760, y: -150) expression_4f8b7d root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1013, y: -30) not_3c8b9f root.Std_k98ojb.Logic.Not {}\n        instance(x: 1200, y: -30) if_9b8f3d root.Std_k98ojb.Std.If {}\n        instance(x: 92, y: -50) lessthanorequal_3f7b9e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 92, y: -100) equal_4f7b9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 92, y: -150) equal_5f7b9f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 92, y: -200) equal_6f7b9f root.Std_k98ojb.Logic.Equal {}\n        2 -> lessthanorequal_3f7b9e.right\n        num_5c0677 -> lessthanorequal_3f7b9e.left\n        lessthanorequal_3f7b9e.result -> if_2a7f3c.predicate\n        if_2a7f3c.then -> continue_9a54bb\n        if_2a7f3c.then -> output_c457b3\n        2 -> equal_4f7b9f.right\n        num_5c0677 -> equal_4f7b9f.left\n        equal_4f7b9f.result -> if_2a7f3c.predicate\n        1 -> equal_5f7b9f.right\n        num_5c0677 -> equal_5f7b9f.left\n        equal_5f7b9f.result -> if_2a7f3c.predicate\n        0 -> equal_6f7b9f.right\n        num_5c0677 -> equal_6f7b9f.left\n        equal_6f7b9f.result -> if_2a7f3c.predicate\n        2 -> generaterange_5b9f3e.from\n        num_5c0677 -> generaterange_5b9f3e.to\n        generaterange_5b9f3e.list -> for_3b7c9f.items\n        for_3b7c9f.item -> expression_4f8b7d.gen_0\n        num_5c0677 -> expression_4f8b7d.gen_1\n        expression_4f8b7d.result -> not_3c8b9f.input\n        not_3c8b9f.result -> if_9b8f3d.predicate\n        for_3b7c9f.onItem -> if_9b8f3d.execute\n        if_9b8f3d.then -> continue_9a54bb\n        if_9b8f3d.then -> output_c457b3\n        if_9b8f3d.else -> for_3b7c9f.next\n        for_3b7c9f.done -> continue_9a54bb\n        for_3b7c9f.done -> output_c457b3\n        execute_b7b391 -> for_3b7c9f.reset\n    }\n\n    \n\n    instance(x: 10, y: -177) num_prime_3f7b9f root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -150, y: -178) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 50, y: -179) lessthan_8f7b2c root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_2f9d09.first\n        y_5390f5 -> mul_2f9d09.second\n        mul_2f9d09.result -> lessthan_8f7b2c.left\n        0 -> lessthan_8f7b2c.right\n        lessthan_8f7b2c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_signs_7a4dad root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 300, y: -10) modulo_11e7b2 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 500, y: 0) equal_3b9a55 root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_11e7b2.value\n        11 -> modulo_11e7b2.divisor\n        modulo_11e7b2.result -> equal_3b9a55.left\n        0 -> equal_3b9a55.right\n        equal_3b9a55.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 50) is_diff_9a7b3c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 520, y: 132) replace_5d3e9f root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5d3e9f.input\n        search_ai -> replace_5d3e9f.search\n        replace_ai -> replace_5d3e9f.replace\n        replace_5d3e9f.output -> output_ai\n    }\n\n    \n\n    instance(x: 0, y: 0) replace_char_1a2b3c root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 250, y: 180) tolower_3a4b2c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 600, y: 150) equal_9b3c4d root.Std_k98ojb.Logic.Equal {}\n        \n        input_ai -> tolower_3a4b2c.input\n        tolower_3a4b2c.output -> equal_9b3c4d.left\n        input_ai -> equal_9b3c4d.right\n        equal_9b3c4d.equal -> output_ai\n    }\n\n    \n    instance(x: 250, y: 180) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 0, y: 0) filter_unique_8f3b7b root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 300, y: 0) reduce_product_9f3b7b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 600, y: 0) if_empty_7b3b7b root.Std_k98ojb.Std.IfExpression {\n            expression: \"length == 0 ? 1 : product\"\n        }\n        list_5fda54 -> filter_unique_8f3b7b.items\n        func() {\n            in(x: -113, y: 34, name: \"elem\") property(Number) elem_9f6850\n            out(x: 515, y: 44, name: \"bool\") property(Bool) bool_af09a7\n            instance(x: 89, y: 29) contains_1088d5 root.Std_k98ojb.List.Contains {}\n            elem_9f6850 -> contains_1088d5.item\n            list_5fda54 -> contains_1088d5.list\n            contains_1088d5.result -> bool_af09a7\n        } -> filter_unique_8f3b7b.handler\n        filter_unique_8f3b7b.output_list -> reduce_product_9f3b7b.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_8ee839\n            in(x: -121, y: -37, name: \"elem\") property(Number) elem_8ee839\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n            instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_8ee839 -> mul_584bfd.first\n            elem_8ee839 -> mul_584bfd.second\n            mul_584bfd.result -> result_7dd980\n        } -> reduce_product_9f3b7b.reducer\n        1 -> reduce_product_9f3b7b.initial\n        reduce_product_9f3b7b.result -> if_empty_7b3b7b.product\n        filter_unique_8f3b7b.output_list -> if_empty_7b3b7b.length\n        if_empty_7b3b7b.value -> output_cffcc2\n        execute_19300c -> filter_unique_8f3b7b.execute\n        reduce_product_9f3b7b.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 101, y: -67) unique_product_496e5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 47, y: 30) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 47, y: 130) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 80) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n\n        concat_1.list -> output_ai\n    }\n\n    \n\n    instance(x: -138, y: -63) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 204, y: -78) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 431, y: -82) sub_3e8b1c root.Std_k98ojb.Math.Sub {}\n        instance(x: 660, y: -83) slice_1a2b3c root.Std_k98ojb.List.Slice {}\n        instance(x: 663, y: 58) slice_4d5e6f root.Std_k98ojb.List.Slice {}\n        instance(x: 882, y: -12) concat_7f8a9b root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> sub_3e8b1c.first\n        n_68068c -> sub_3e8b1c.second\n        sub_3e8b1c.result -> slice_1a2b3c.start\n        list_48148f -> slice_1a2b3c.list\n        -1 -> slice_1a2b3c.end\n        slice_1a2b3c.slice -> concat_7f8a9b.left\n        list_48148f -> slice_4d5e6f.list\n        0 -> slice_4d5e6f.start\n        sub_3e8b1c.result -> slice_4d5e6f.end\n        slice_4d5e6f.slice -> concat_7f8a9b.right\n        concat_7f8a9b.result -> output_823209\n    }\n\n    \n\n    instance(x: 10, y: -177) rotate_right_abc123 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 25) reduce_4b8f3a root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_4b8f3a.initialValue\n        list_2c62ab -> reduce_4b8f3a.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_1a2b3c\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_1a2b3c -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_4b8f3a.reducer\n        reduce_4b8f3a.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 120, y: -50) if_8c7f3d root.Std_k98ojb.Std.If {}\n        instance(x: 320, y: 50) generaterange_5b9f3e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 540, y: 50) for_3b7c9f root.Std_k98ojb.Std.For {}\n        instance(x: 760, y: -50) modulo_4f8d2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 980, y: -50) equal_2a6f3b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1200, y: -50) if_9b8c7d root.Std_k98ojb.Std.If {}\n        instance(x: 1400, y: 50) not_3c7f8d root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> if_8c7f3d.input\n        2 -> if_8c7f3d.value\n        if_8c7f3d.then -> output_c457b3\n        if_8c7f3d.else -> generaterange_5b9f3e.trigger\n\n        2 -> generaterange_5b9f3e.from\n        num_5c0677 -> generaterange_5b9f3e.to\n        generaterange_5b9f3e.list -> for_3b7c9f.items\n\n        for_3b7c9f.item -> modulo_4f8d2c.divisor\n        num_5c0677 -> modulo_4f8d2c.value\n        modulo_4f8d2c.result -> equal_2a6f3b.left\n        0 -> equal_2a6f3b.right\n\n        equal_2a6f3b.result -> if_9b8c7d.input\n        if_9b8c7d.then -> not_3c7f8d.input\n        if_9b8c7d.else -> for_3b7c9f.next\n\n        not_3c7f8d.result -> output_c457b3\n        for_3b7c9f.done -> continue_9a54bb\n\n        execute_b7b391 -> if_8c7f3d.execute\n    }\n\n    \n\n    instance(x: -50, y: -150) num_prime_3f7c9d root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -140, y: -178) expression_9b8f7c root.Std_k98ojb.Math.Expression {\n            expression: \"x * y < 0\"\n        }\n        x_853326 -> expression_9b8f7c.x\n        y_5390f5 -> expression_9b8f7c.y\n        expression_9b8f7c.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -192, y: 139) opposite_signs_935476 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 240, y: -10) modulo_5b7c3a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 460, y: -5) equal_3f8b7d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5b7c3a.value\n        11 -> modulo_5b7c3a.divisor\n        modulo_5b7c3a.result -> equal_3f8b7d.left\n        0 -> equal_3f8b7d.right\n        equal_3f8b7d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 50) is_diff_3a4b2c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 230, y: 132) replace_7b3b7b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7b3b7b.input\n        search_ai -> replace_7b3b7b.search\n        replace_ai -> replace_7b3b7b.replace\n        replace_7b3b7b.output -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) ReplaceChar_59bc6e root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 250, y: 180) tolower_3a4b5c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 600, y: 150) equal_4b5c6d root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3a4b5c.input\n        tolower_3a4b5c.output -> equal_4b5c6d.left\n        input_ai -> equal_4b5c6d.right\n        equal_4b5c6d.equal -> output_ai\n    }\n\n    \n    instance(x: 250, y: 180) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 100, y: 24) filter_unique_1a2b3c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 400, y: 24) reduce_product_4d5e6f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 200, y: 24) find_duplicates_7g8h9i root.Std_k98ojb.Iteration.Find {}\n        \n        list_5fda54 -> filter_unique_1a2b3c.items\n        func() {\n            in(x: -50, y: 0, name: \"item\") property(Number) item_123456\n            out(x: 50, y: 0, name: \"is_unique\") property(Bool) is_unique_654321\n\n            instance(x: 0, y: 0) contains_check_abcdef root.Std_k98ojb.List.Contains {}\n            list_5fda54 -> contains_check_abcdef.list\n            item_123456 -> contains_check_abcdef.item\n            contains_check_abcdef.result -> is_unique_654321\n        } -> filter_unique_1a2b3c.handler\n\n        filter_unique_1a2b3c.output_list -> reduce_product_4d5e6f.items\n        func() {\n            in(x: -50, y: 0, name: \"acc\") property(Number) acc_abcdef\n            in(x: 50, y: 0, name: \"item\") property(Number) item_fedcba\n            out(x: 150, y: 0, name: \"result\") property(Number) result_abcdef\n\n            instance(x: 0, y: 0) mul_123456 root.Std_k98ojb.Math.Mul {}\n            acc_abcdef -> mul_123456.first\n            item_fedcba -> mul_123456.second\n            mul_123456.result -> result_abcdef\n        } -> reduce_product_4d5e6f.reducer\n\n        1 -> reduce_product_4d5e6f.initial\n        reduce_product_4d5e6f.result -> output_cffcc2\n        execute_19300c -> filter_unique_1a2b3c.execute\n        reduce_product_4d5e6f.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 101, y: -67) unique_product_123abc root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 48, y: 30) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 48, y: 130) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 80) concat_1 root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n        concat_1.list -> output_ai\n    }\n\n    \n\n    instance(x: -138, y: -63) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 210, y: -78) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 420, y: -20) sub_3f3ee6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 640, y: -50) slice_1a2b3c root.Std_k98ojb.List.Slice {}\n        instance(x: 640, y: 50) slice_4d5e6f root.Std_k98ojb.List.Slice {}\n        instance(x: 850, y: 0) concat_7f8g9h root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> sub_3f3ee6.first\n        n_68068c -> sub_3f3ee6.second\n        sub_3f3ee6.result -> slice_1a2b3c.start\n        0 -> slice_4d5e6f.start\n        sub_3f3ee6.result -> slice_4d5e6f.end\n        list_48148f -> slice_1a2b3c.list\n        list_48148f -> slice_4d5e6f.list\n        slice_1a2b3c.slice -> concat_7f8g9h.right\n        slice_4d5e6f.slice -> concat_7f8g9h.left\n        concat_7f8g9h.result -> output_823209\n    }\n\n    \n\n    instance(x: 10, y: -177) rotate_right_abc123 root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 30) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3a8e90.initialValue\n        list_2c62ab -> reduce_3a8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_3f11cd\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_3f11cd -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 92, y: -210) if_8b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 303, y: -28) generaterange_5b9f3e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 533, y: 31) for_3b7c9d root.Std_k98ojb.Std.For {}\n        instance(x: 760, y: -150) expression_4f8b7a root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1010, y: -30) if_9b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: -30) not_5b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 100) if_2b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 230) not_2b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 360) if_3b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 490) not_3b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 620) if_4b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 750) not_4b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 880) if_5b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 1010) not_5b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 1140) if_6b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 1270) not_6b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 1400) if_7b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 1530) not_7b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 1660) if_8b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 1790) not_8b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 1920) if_9b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 2050) not_9b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 2180) if_10b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 2310) not_10b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 2440) if_11b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 2570) not_11b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 2700) if_12b7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 1220, y: 2830) not_12b7f6c root.Std_k98ojb.Logic.Not {}\n        instance(x: 1220, y: 2960) if_13b7f6c root.Std_k98ojb.Std.If {}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -133, y: -177) mul_2f9d09 root.Std_k98ojb.Math.Mul {}\n        instance(x: 67, y: -179) lessthan_8a7f3e root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_2f9d09.first\n        y_5390f5 -> mul_2f9d09.second\n        mul_2f9d09.result -> lessthan_8a7f3e.left\n        0 -> lessthan_8a7f3e.right\n        lessthan_8a7f3e.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_signs_ac7dfb root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 240, y: -10) modulo_1f5c2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 452, y: 0) equal_6b7a3f root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_1f5c2a.value\n        11 -> modulo_1f5c2a.divisor\n        modulo_1f5c2a.result -> equal_6b7a3f.left\n        0 -> equal_6b7a3f.right\n        equal_6b7a3f.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: 50) is_diff_3a4f6e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 520, y: 132) replace_5d3b9a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5d3b9a.input\n        search_ai -> replace_5d3b9a.search\n        replace_ai -> replace_5d3b9a.replace\n        replace_5d3b9a.output -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_char_4f3a7b root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 250, y: 180) tolower_3a4b7a root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 580, y: 150) equal_9b3f6a root.Std_k98ojb.Logic.Equal {}\n        \n        input_ai -> tolower_3a4b7a.input\n        tolower_3a4b7a.output -> equal_9b3f6a.left\n        input_ai -> equal_9b3f6a.right\n        equal_9b3f6a.equal -> output_ai\n    }\n\n    \n    instance(x: 250, y: 180) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 109, y: 25) filter_unique_8b4d7a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 460, y: 25) reduce_product_3e4f8b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 109, y: 175) find_duplicates_5a7c9e root.Std_k98ojb.Iteration.Find {}\n        instance(x: 109, y: 325) not_duplicated_9f3d8e root.Std_k98ojb.Logic.Not {}\n        instance(x: 460, y: 175) math_mul_7e3b9c root.Std_k98ojb.Math.Mul {}\n\n        list_5fda54 -> filter_unique_8b4d7a.items\n        func() {\n            in(x: -75, y: 50, name: \"item\") property(Number) item_4f3d7e\n            out(x: 75, y: 50, name: \"unique\") property(Bool) unique_3e7b8f\n\n            instance(x: 0, y: 0) contains_5b7d8e root.Std_k98ojb.List.Contains {}\n            list_5fda54 -> contains_5b7d8e.list\n            item_4f3d7e -> contains_5b7d8e.item\n            contains_5b7d8e.contains -> unique_3e7b8f\n        } -> filter_unique_8b4d7a.handler\n\n        filter_unique_8b4d7a.output_list -> reduce_product_3e4f8b.items\n        func() {\n            in(x: -75, y: 50, name: \"acc\") property(Number) acc_4f3d7e\n            in(x: 75, y: 50, name: \"item\") property(Number) item_3e7b8f\n            out(x: 225, y: 50, name: \"result\") property(Number) result_7e3b9c\n\n            acc_4f3d7e -> math_mul_7e3b9c.first\n            item_3e7b8f -> math_mul_7e3b9c.second\n            math_mul_7e3b9c.result -> result_7e3b9c\n        } -> reduce_product_3e4f8b.reducer\n\n        reduce_product_3e4f8b.result -> output_cffcc2\n        execute_19300c -> filter_unique_8b4d7a.execute\n        reduce_product_3e4f8b.done -> continue_45190b\n    }\n\n    instance(x: 101, y: -67) unique_product_496e5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 82, y: 44) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 82, y: -33) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 233, y: 5) concat_0 root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_1.difference -> concat_0.list1\n        difference_2.difference -> concat_0.list2\n        concat_0.concat -> output_ai\n    }\n\n    \n\n    instance(x: -158, y: -54) find_dissimilar_0 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 158, y: -55) length_6c0b1f root.Std_k98ojb.List.Length {}\n        instance(x: 362, y: -49) modulo_8b1c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 569, y: -105) slice_4f3d2b root.Std_k98ojb.List.Slice {}\n        instance(x: 569, y: 32) slice_4f3d2b_2 root.Std_k98ojb.List.Slice {}\n        instance(x: 777, y: -34) concat_1a3f5d root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_6c0b1f.list\n        length_6c0b1f.length -> modulo_8b1c0a.divisor\n        n_68068c -> modulo_8b1c0a.value\n        modulo_8b1c0a.result -> slice_4f3d2b.start\n        list_48148f -> slice_4f3d2b.list\n        modulo_8b1c0a.result -> slice_4f3d2b_2.end\n        list_48148f -> slice_4f3d2b_2.list\n        slice_4f3d2b.slice -> concat_1a3f5d.left\n        slice_4f3d2b_2.slice -> concat_1a3f5d.right\n        concat_1a3f5d.result -> output_823209\n        -1 -> slice_4f3d2b.end\n        0 -> slice_4f3d2b_2.start\n    }\n\n    \n\n    instance(x: -196, y: 41) rotate_right_1d2f3e root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 150, y: 15) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3a8e90.initialValue\n        list_2c62ab -> reduce_3a8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_123456\n            in(x: -177, y: 22, name: \"current\") property(Number) current_654321\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_abcdef\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_123456 -> add_0f3be6.first\n            current_654321 -> add_0f3be6.second\n            add_0f3be6.result -> sum_abcdef\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 106, y: -126) if_2a7f6c root.Std_k98ojb.Std.If {}\n        instance(x: 303, y: 28) generaterange_5b9f3e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 533, y: 13) for_efb2c9 root.Std_k98ojb.Std.For {}\n        instance(x: 771, y: -126) if_7a3f5b root.Std_k98ojb.Std.If {}\n        instance(x: 987, y: -4) modulo_7f3b6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1212, y: -114) equal_4b3f8c root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1011, y: 192) not_1a9f8d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1213, y: 191) if_3c8f7a root.Std_k98ojb.Std.If {}\n        instance(x: 348, y: -218) lessthanorequal_2b9f6e root.Std_k98ojb.Math.LessThanOrEqual {}\n        2 -> if_2a7f6c.value\n        num_5c0677 -> if_2a7f6c.input\n        if_2a7f6c.then -> continue_9a54bb\n        if_2a7f6c.then -> output_c457b3\n        2 -> generaterange_5b9f3e.from\n        num_5c0677 -> generaterange_5b9f3e.to\n        generaterange_5b9f3e.list -> for_efb2c9.items\n        for_efb2c9.onItem -> if_7a3f5b.execute\n        for_efb2c9.item -> modulo_7f3b6a.value\n        num_5c0677 -> modulo_7f3b6a.divisor\n        modulo_7f3b6a.result -> equal_4b3f8c.left\n        0 -> equal_4b3f8c.right\n        equal_4b3f8c.result -> if_7a3f5b.input\n        if_7a3f5b.then -> continue_9a54bb\n        if_7a3f5b.then -> output_c457b3\n        if_7a3f5b.else -> for_efb2c9.next\n        for_efb2c9.done -> not_1a9f8d.input\n        not_1a9f8d.result -> if_3c8f7a.input\n        if_3c8f7a.then -> continue_9a54bb\n        if_3c8f7a.then -> output_c457b3\n        execute_b7b391 -> lessthanorequal_2b9f6e.left\n        1 -> lessthanorequal_2b9f6e.right\n        lessthanorequal_2b9f6e.result -> if_2a7f6c.input\n    }\n\n    \n\n    instance(x: -70, y: -85) num_prime_8c9f3b root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -97, y: -182) mul_e2d3b4 root.Std_k98ojb.Math.Mul {}\n        instance(x: 75, y: -182) lessthan_8c7d54 root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_e2d3b4.first\n        y_5390f5 -> mul_e2d3b4.second\n        mul_e2d3b4.result -> lessthan_8c7d54.left\n        0 -> lessthan_8c7d54.right\n        lessthan_8c7d54.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -87, y: 31) opposite_signs_9f0c8d root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 240, y: -10) modulo_5e7c2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 452, y: 0) equal_6b7e3a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5e7c2a.value\n        11 -> modulo_5e7c2a.divisor\n        modulo_5e7c2a.result -> equal_6b7e3a.left\n        0 -> equal_6b7e3a.right\n        equal_6b7e3a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -100, y: -50) is_diff_3a4f6d root.main.is_diff {}\n\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 520, y: 132) replace_5d3e9d root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5d3e9d.input\n        search_ai -> replace_5d3e9d.search\n        replace_ai -> replace_5d3e9d.replace\n        replace_5d3e9d.output -> output_ai\n    }\n\n    \n\n    instance(x: 81, y: 52) replace_char_4f3a7d root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 426, y: 303) to_lower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 666, y: 132) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> to_lower_node.input\n        input_ai -> logic_equal_node.left\n        to_lower_node.output -> logic_equal_node.right\n        logic_equal_node.equal -> output_ai\n    }\n\n    \n    instance(x: 426, y: 303) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 109, y: 25) filter_unique_8b4d7a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 540, y: 74) reduce_product_3de4a2 root.Std_k98ojb.Iteration.Reduce {}\n        \n        list_5fda54 -> filter_unique_8b4d7a.items\n        func() {\n            in(x: -121, y: -37, name: \"x\") property(Number) x_31b839\n            out(x: 333, y: -50, name: \"\") property(Bool) _7dd980\n\n            instance(x: 92, y: -22) count_x_1088d5 root.Std_k98ojb.List.Count {}\n            instance(x: 310, y: 35) equal_807ffd root.Std_k98ojb.Logic.Equal {}\n            count_x_1088d5.result -> equal_807ffd.left\n            1 -> equal_807ffd.right\n            equal_807ffd.result -> _7dd980\n            x_31b839 -> count_x_1088d5.item\n            list_5fda54 -> count_x_1088d5.list\n        } -> filter_unique_8b4d7a.handler\n        \n        filter_unique_8b4d7a.output_list -> reduce_product_3de4a2.items\n        func() {\n            in(x: -121, y: -37, name: \"acc\") property(Number) acc_9f6850\n            in(x: 90, y: -37, name: \"elem\") property(Number) elem_9f6850\n            out(x: 333, y: -50, name: \"result\") property(Number) result_7dd980\n\n            instance(x: 92, y: -22) mul_584bfd root.Std_k98ojb.Math.Mul {}\n            acc_9f6850 -> mul_584bfd.first\n            elem_9f6850 -> mul_584bfd.second\n            mul_584bfd.result -> result_7dd980\n        } -> reduce_product_3de4a2.reducer\n        \n        1 -> reduce_product_3de4a2.initial\n        reduce_product_3de4a2.result -> output_cffcc2\n        execute_19300c -> filter_unique_8b4d7a.execute\n        reduce_product_3de4a2.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 101, y: -67) unique_product_496e5e root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 15, y: 26) difference1_7b3f64 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 182, y: 26) difference2_9f4c8d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 259, y: 26) concat_6d7f8a root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference1_7b3f64.left\n        list2_ai -> difference1_7b3f64.right\n        list2_ai -> difference2_9f4c8d.left\n        list1_ai -> difference2_9f4c8d.right\n        difference1_7b3f64.difference -> concat_6d7f8a.left\n        difference2_9f4c8d.difference -> concat_6d7f8a.right\n        concat_6d7f8a.result -> output_ai\n    }\n\n    \n\n    instance(x: -138, y: -63) find_dissimilar_342fbc root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 204, y: -55) length_6c0b1f root.Std_k98ojb.List.Length {}\n        instance(x: 428, y: -49) modulo_8b1c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 642, y: -105) slice_4d3d2b root.Std_k98ojb.List.Slice {}\n        instance(x: 648, y: 64) slice_4f5f7d root.Std_k98ojb.List.Slice {}\n        instance(x: 858, y: -11) concat_a82c1a root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_6c0b1f.list\n        n_68068c -> modulo_8b1c0a.value\n        length_6c0b1f.length -> modulo_8b1c0a.divisor\n        list_48148f -> slice_4d3d2b.list\n        list_48148f -> slice_4f5f7d.list\n        modulo_8b1c0a.result -> slice_4d3d2b.start\n        slice_4d3d2b.slice -> concat_a82c1a.left\n        0 -> slice_4f5f7d.start\n        modulo_8b1c0a.result -> slice_4f5f7d.end\n        slice_4f5f7d.slice -> concat_a82c1a.right\n        concat_a82c1a.result -> output_823209\n    }\n\n    \n\n    instance(x: 22, y: -17) rotate_right_1a2d3f root.main.rotate_right {}\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 81, y: 15) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3a8e90.initialValue\n        list_2c62ab -> reduce_3a8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_12345\n            in(x: -177, y: 22, name: \"current\") property(Number) current_67890\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_abcdef\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_12345 -> add_0f3be6.first\n            current_67890 -> add_0f3be6.second\n            add_0f3be6.result -> sum_abcdef\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 360, y: 27) if_2a7e6c root.Std_k98ojb.Std.If {}\n        instance(x: 200, y: 28) lessthanorequal_ebf3d9 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 403, y: -152) expression_0f23a7 root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 637, y: -152) not_2b3d7f root.Std_k98ojb.Logic.Not {}\n        instance(x: 844, y: -153) if_0c8b2f root.Std_k98ojb.Std.If {}\n        instance(x: 649, y: 29) for_6a2f4f root.Std_k98ojb.Std.For {}\n        instance(x: 218, y: -149) lessthanorequal_5f9d49 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 15, y: -149) expression_9d3c5f root.Std_k98ojb.Math.Expression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 1071, y: -154) not_8c4d8b root.Std_k98ojb.Logic.Not {}\n        instance(x: 1221, y: -153) if_5d7d8b root.Std_k98ojb.Std.If {}\n        2 -> lessthanorequal_ebf3d9.right\n        num_5c0677 -> lessthanorequal_ebf3d9.left\n        lessthanorequal_ebf3d9.result -> if_2a7e6c.predicate\n        if_2a7e6c.then -> continue_9a54bb\n        if_2a7e6c.value -> output_c457b3\n        execute_b7b391 -> if_2a7e6c.execute\n        num_5c0677 -> expression_9d3c5f.gen_0\n        expression_9d3c5f.result -> lessthanorequal_5f9d49.result\n        lessthanorequal_5f9d49.result -> if_2a7e6c.predicate\n        if_2a7e6c.else -> for_6a2f4f.reset\n        2 -> for_6a2f4f.items\n        for_6a2f4f.item -> expression_0f23a7.gen_1\n        num_5c0677 -> expression_0f23a7.gen_0\n        expression_0f23a7.result -> not_2b3d7f.input\n        not_2b3d7f.result -> if_0c8b2f.predicate\n        for_6a2f4f.onItem -> if_0c8b2f.execute\n        if_0c8b2f.then -> continue_9a54bb\n        if_0c8b2f.value -> output_c457b3\n        if_0c8b2f.else -> for_6a2f4f.next\n        for_6a2f4f.done -> continue_9a54bb\n        for_6a2f4f.index -> not_8c4d8b.input\n        not_8c4d8b.result -> if_5d7d8b.predicate\n        if_5d7d8b.then -> continue_9a54bb\n        if_5d7d8b.value -> output_c457b3\n    }\n\n    \n\n    instance(x: -46, y: 105) num_prime_1e3b6f root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -140, y: -177) mul_9f3b2d root.Std_k98ojb.Math.Mul {}\n        instance(x: 61, y: -178) lessthan_7b3c5e root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_9f3b2d.first\n        y_5390f5 -> mul_9f3b2d.second\n        mul_9f3b2d.result -> lessthan_7b3c5e.left\n        0 -> lessthan_7b3c5e.right\n        lessthan_7b3c5e.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -85, y: 59) opposite_signs_3f7c9b root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 240, y: -10) modulo_5f8c2b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 460, y: -8) equal_3b7a9d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5f8c2b.value\n        11 -> modulo_5f8c2b.divisor\n        modulo_5f8c2b.result -> equal_3b7a9d.left\n        0 -> equal_3b7a9d.right\n        equal_3b7a9d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -50, y: 50) is_diff_3a4b2c root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 230, y: 210) replace_1a2b3c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_1a2b3c.input\n        search_ai -> replace_1a2b3c.search\n        replace_ai -> replace_1a2b3c.replace\n        replace_1a2b3c.output -> output_ai\n    }\n\n    \n\n    instance(x: 100, y: 300) replace_char_4d5e6f root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 250, y: 180) tolower_3a4b5c root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 600, y: 150) equal_4b5c6d root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3a4b5c.input\n        tolower_3a4b5c.output -> equal_4b5c6d.left\n        input_ai -> equal_4b5c6d.right\n        equal_4b5c6d.equal -> output_ai\n    }\n\n    \n    instance(x: 250, y: 180) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 130, y: 25) filter_unique_1a2b3c root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 460, y: 25) reduce_product_4d5e6f root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 300, y: 25) empty_list_7g8h9i root.Std_k98ojb.List.Empty {}\n\n        list_5fda54 -> filter_unique_1a2b3c.items\n        func() {\n            in(x: -100, y: 50, name: \"item\") property(Number) item_123abc\n            out(x: 100, y: 50, name: \"is_unique\") property(Bool) is_unique_456def\n\n            instance(x: 0, y: 0) contains_check_789ghi root.Std_k98ojb.List.Contains {}\n            empty_list_7g8h9i.list -> contains_check_789ghi.list\n            item_123abc -> contains_check_789ghi.item\n            contains_check_789ghi.result -> is_unique_456def\n        } -> filter_unique_1a2b3c.handler\n\n        filter_unique_1a2b3c.output_list -> reduce_product_4d5e6f.items\n        func() {\n            in(x: -50, y: 50, name: \"acc\") property(Number) acc_abc123\n            in(x: 50, y: 50, name: \"item\") property(Number) item_def456\n            out(x: 150, y: 50, name: \"result\") property(Number) result_ghi789\n\n            instance(x: 0, y: 0) mul_123456 root.Std_k98ojb.Math.Mul {}\n            acc_abc123 -> mul_123456.first\n            item_def456 -> mul_123456.second\n            mul_123456.result -> result_ghi789\n        } -> reduce_product_4d5e6f.reducer\n\n        1 -> reduce_product_4d5e6f.initial\n        reduce_product_4d5e6f.result -> output_cffcc2\n        execute_19300c -> filter_unique_1a2b3c.execute\n        reduce_product_4d5e6f.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 101, y: -67) unique_product_abc123 root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 47, y: 30) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 47, y: 130) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 200, y: 80) concat_1 root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_1.difference -> concat_1.list1\n        difference_2.difference -> concat_1.list2\n        concat_1.list -> output_ai\n    }\n\n    \n\n    instance(x: -138, y: -63) find_dissimilar_aad0c2 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 210, y: -78) length_4b8927 root.Std_k98ojb.List.Length {}\n        instance(x: 432, y: -20) sub_3f3ee6 root.Std_k98ojb.Math.Sub {}\n        instance(x: 656, y: -76) slice_83e5f5 root.Std_k98ojb.List.Slice {}\n        instance(x: 656, y: 56) slice_76ecda root.Std_k98ojb.List.Slice {}\n        instance(x: 872, y: -10) concat_0234d2 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_4b8927.list\n        length_4b8927.length -> sub_3f3ee6.first\n        n_68068c -> sub_3f3ee6.second\n        sub_3f3ee6.result -> slice_83e5f5.start\n        list_48148f -> slice_83e5f5.list\n        -1 -> slice_83e5f5.end\n        sub_3f3ee6.result -> slice_76ecda.end\n        0 -> slice_76ecda.start\n        list_48148f -> slice_76ecda.list\n        slice_83e5f5.slice -> concat_0234d2.left\n        slice_76ecda.slice -> concat_0234d2.right\n        concat_0234d2.result -> output_823209\n    }\n\n    \n\n    instance(x: 0, y: -50) rotate_right_72ef29 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 125, y: 15) reduce_3b8e90 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3b8e90.initialValue\n        list_2c62ab -> reduce_3b8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_3f11cd\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_3f11cd -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_3b8e90.reducer\n        reduce_3b8e90.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: -97, y: -68) _sum_49c6ac root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 192, y: -210) if_8b7f3a root.Std_k98ojb.Std.If {}\n        instance(x: 425, y: -28) for_1f3b9c root.Std_k98ojb.Std.For {}\n        instance(x: 680, y: -26) if_3c7f9b root.Std_k98ojb.Std.If {}\n        instance(x: 900, y: -26) not_4f7c3a root.Std_k98ojb.Logic.Not {}\n        instance(x: 1130, y: -26) if_5f7c9b root.Std_k98ojb.Std.If {}\n        instance(x: 250, y: 90) generaterange_3f7c9b root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 700, y: 90) modulo_7f7c9b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 500, y: 90) equal_8f7c9b root.Std_k98ojb.Logic.Equal {}\n        instance(x: 900, y: 90) not_9f7c9b root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> if_8b7f3a.input\n        2 -> if_8b7f3a.value\n        if_8b7f3a.then -> continue_9a54bb\n        if_8b7f3a.else -> for_1f3b9c.reset\n\n        2 -> generaterange_3f7c9b.from\n        num_5c0677 -> generaterange_3f7c9b.to\n        generaterange_3f7c9b.list -> for_1f3b9c.items\n\n        for_1f3b9c.item -> modulo_7f7c9b.divisor\n        num_5c0677 -> modulo_7f7c9b.value\n        modulo_7f7c9b.result -> equal_8f7c9b.left\n        0 -> equal_8f7c9b.right\n        equal_8f7c9b.result -> not_9f7c9b.input\n        not_9f7c9b.result -> if_3c7f9b.input\n\n        if_3c7f9b.then -> continue_9a54bb\n        if_3c7f9b.else -> for_1f3b9c.next\n\n        for_1f3b9c.done -> not_4f7c3a.input\n        not_4f7c3a.result -> if_5f7c9b.input\n        if_5f7c9b.then -> output_c457b3\n        if_5f7c9b.else -> continue_9a54bb\n\n        execute_b7b391 -> if_8b7f3a.execute\n    }\n\n    \n\n    instance(x: 10, y: -177) num_prime_24d4b5 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -133, y: -177) mul_2b3c1a root.Std_k98ojb.Math.Mul {}\n        instance(x: 95, y: -212) lessthan_8d4c32 root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_2b3c1a.first\n        y_5390f5 -> mul_2b3c1a.second\n        mul_2b3c1a.result -> lessthan_8d4c32.left\n        0 -> lessthan_8d4c32.right\n        lessthan_8d4c32.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -84, y: 59) opposite_signs_6b2c3f root.main.opposite_signs {}\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 240, y: -10) modulo_5f7c2a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 452, y: -8) equal_6b7a3d root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5f7c2a.value\n        11 -> modulo_5f7c2a.divisor\n        modulo_5f7c2a.result -> equal_6b7a3d.left\n        0 -> equal_6b7a3d.right\n        equal_6b7a3d.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -50, y: 50) is_diff_3a4f6e root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 520, y: 132) replace_5d3c9a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5d3c9a.input\n        search_ai -> replace_5d3c9a.search\n        replace_ai -> replace_5d3c9a.replace\n        replace_5d3c9a.output -> output_ai\n    }\n\n    \n\n    instance(x: 51, y: 234) replace_char_93f4a7 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 250, y: 180) tolower_3a4d7b root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 580, y: 132) equal_9b3f6a root.Std_k98ojb.Logic.Equal {}\n        input_ai -> tolower_3a4d7b.input\n        input_ai -> equal_9b3f6a.left\n        tolower_3a4d7b.output -> equal_9b3f6a.right\n        equal_9b3f6a.equal -> output_ai\n    }\n\n    \n    instance(x: 250, y: 180) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 109, y: 25) filter_unique_8b4d7a root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 460, y: 37) reduce_product_3e4a2b root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 332, y: 34) empty_list_5a2c9d root.Std_k98ojb.List.Empty {}\n        instance(x: 243, y: 33) not_contains_2b5d3c root.Std_k98ojb.List.Contains {}\n        instance(x: 332, y: 78) add_to_list_7a3d5f root.Std_k98ojb.List.Add {}\n        \n        list_5fda54 -> filter_unique_8b4d7a.items\n        func() {\n            in(x: -88, y: 27, name: \"item\") property(Number) item_2a3d5b\n            out(x: 214, y: 29, name: \"bool\") property(Bool) bool_5d3f7c\n\n            not_contains_2b5d3c.item -> bool_5d3f7c\n            item_2a3d5b -> not_contains_2b5d3c.item\n            empty_list_5a2c9d.list -> not_contains_2b5d3c.list\n            add_to_list_7a3d5f.listWithItem -> empty_list_5a2c9d.list\n            item_2a3d5b -> add_to_list_7a3d5f.item\n        } -> filter_unique_8b4d7a.handler\n\n        filter_unique_8b4d7a.output_list -> reduce_product_3e4a2b.items\n        func() {\n            in(x: -78, y: 37, name: \"acc\") property(Number) acc_3d4e5f\n            in(x: -78, y: 65, name: \"val\") property(Number) val_6e7f8g\n            out(x: 214, y: 51, name: \"result\") property(Number) result_9f0a1b\n\n            instance(x: 72, y: 48) mul_1b2c3d root.Std_k98ojb.Math.Mul {}\n            acc_3d4e5f -> mul_1b2c3d.first\n            val_6e7f8g -> mul_1b2c3d.second\n            mul_1b2c3d.result -> result_9f0a1b\n        } -> reduce_product_3e4a2b.reducer\n\n        1 -> reduce_product_3e4a2b.initial\n        reduce_product_3e4a2b.result -> output_cffcc2\n        execute_19300c -> filter_unique_8b4d7a.execute\n        reduce_product_3e4a2b.done -> continue_45190b\n    }\n\n    \n\n    instance(x: -50, y: 180) unique_product_4f5e6d root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 82, y: 44) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 82, y: 144) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 232, y: 94) concat_0 root.Std_k98ojb.List.Concat {}\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n        difference_1.difference -> concat_0.list1\n        difference_2.difference -> concat_0.list2\n        concat_0.result -> output_ai\n    }\n\n    \n\n    instance(x: -158, y: -54) find_dissimilar_0 root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 204, y: -55) length_6c0b1f root.Std_k98ojb.List.Length {}\n        instance(x: 428, y: -49) modulo_8b1c0a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 642, y: -105) slice_8d3e2b root.Std_k98ojb.List.Slice {}\n        instance(x: 648, y: 32) slice_4f5a7d root.Std_k98ojb.List.Slice {}\n        instance(x: 858, y: -44) concat_0c1a77 root.Std_k98ojb.List.Concat {}\n        list_48148f -> length_6c0b1f.list\n        length_6c0b1f.length -> modulo_8b1c0a.value\n        n_68068c -> modulo_8b1c0a.divisor\n        list_48148f -> slice_8d3e2b.list\n        list_48148f -> slice_4f5a7d.list\n        modulo_8b1c0a.result -> slice_8d3e2b.start\n        0 -> slice_8d3e2b.end\n        modulo_8b1c0a.result -> slice_4f5a7d.end\n        slice_8d3e2b.slice -> concat_0c1a77.right\n        slice_4f5a7d.slice -> concat_0c1a77.left\n        concat_0c1a77.result -> output_823209\n    }\n\n    \n\n    instance(x: 77, y: -32) rotate_right_32f7d9 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 125, y: 15) reduce_3a8e90 root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_3a8e90.initialValue\n        list_2c62ab -> reduce_3a8e90.items\n        func() {\n            in(x: -185, y: -84, name: \"accumulated\") property(Number) accumulated_c750f1\n            in(x: -177, y: 22, name: \"current\") property(Number) current_3f11cd\n\n            out(x: 1072, y: -77, name: \"sum\") property(Number) sum_72dd2a\n\n            instance(x: 74, y: 2) add_0f3be6 root.Std_k98ojb.Math.Add {}\n            accumulated_c750f1 -> add_0f3be6.first\n            current_3f11cd -> add_0f3be6.second\n            add_0f3be6.result -> sum_72dd2a\n        } -> reduce_3a8e90.reducer\n        reduce_3a8e90.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 118, y: -26) _sum_9dcc3d root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 106, y: -126) if_2aef8d root.Std_k98ojb.Std.If {}\n        instance(x: 246, y: 30) generaterange_0f89f4 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 505, y: 18) for_9d3bde root.Std_k98ojb.Std.For {}\n        instance(x: 748, y: -80) modulo_18e7a3 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 984, y: -79) equal_5f7d3a root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1180, y: -36) if_5b4e3b root.Std_k98ojb.Std.If {}\n        instance(x: 1142, y: 119) not_5e4b8d root.Std_k98ojb.Logic.Not {}\n        instance(x: 1333, y: 124) if_2f6a9b root.Std_k98ojb.Std.If {}\n        2 -> if_2aef8d.value\n        num_5c0677 -> if_2aef8d.input\n        2 -> generaterange_0f89f4.from\n        num_5c0677 -> generaterange_0f89f4.to\n        generaterange_0f89f4.list -> for_9d3bde.items\n        for_9d3bde.item -> modulo_18e7a3.divisor\n        num_5c0677 -> modulo_18e7a3.value\n        modulo_18e7a3.result -> equal_5f7d3a.left\n        0 -> equal_5f7d3a.right\n        equal_5f7d3a.result -> if_5b4e3b.input\n        if_5b4e3b.else -> for_9d3bde.next\n        if_5b4e3b.then -> continue_9a54bb\n        if_5b4e3b.then -> output_c457b3\n        for_9d3bde.done -> not_5e4b8d.input\n        not_5e4b8d.result -> if_2f6a9b.input\n        if_2f6a9b.then -> continue_9a54bb\n        if_2f6a9b.then -> output_c457b3\n        if_2f6a9b.else -> continue_9a54bb\n        if_2f6a9b.else -> output_c457b3\n        if_2aef8d.then -> continue_9a54bb\n        if_2aef8d.then -> output_c457b3\n        if_2aef8d.else -> for_9d3bde.reset\n        execute_b7b391 -> if_2aef8d.execute\n    }\n\n    \n\n    instance(x: -184, y: -138) num_prime_2e89c4 root.main.num_prime {}\n\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_5_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": -1,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "gpt-4o",
        "largest_context": 6194,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -97, y: -182) mul_e2d875 root.Std_k98ojb.Math.Mul {}\n        instance(x: 105, y: -220) lessthan_27ec8d root.Std_k98ojb.Math.LessThanOrEqual {}\n        x_853326 -> mul_e2d875.first\n        y_5390f5 -> mul_e2d875.second\n        mul_e2d875.result -> lessthan_27ec8d.left\n        0 -> lessthan_27ec8d.right\n        lessthan_27ec8d.result -> output_3339a3\n    }\n\n    \n\n    instance(x: -267, y: 77) opposite_signs_afa7e9 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 307, y: -19) modulo_5e5f2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 504, y: 0) equal_6b7e3a root.Std_k98ojb.Logic.Equal {}\n        n_27f29c -> modulo_5e5f2c.value\n        11 -> modulo_5e5f2c.divisor\n        modulo_5e5f2c.result -> equal_6b7e3a.left\n        0 -> equal_6b7e3a.right\n        equal_6b7e3a.result -> output_f2630f\n    }\n\n    \n\n    instance(x: -170, y: -73) is_diff_3a14f6 root.main.is_diff {}\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 520, y: 132) replace_5d56e9 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_5d56e9.input\n        search_ai -> replace_5d56e9.search\n        replace_ai -> replace_5d56e9.replace\n        replace_5d56e9.output -> output_ai\n    }\n\n    \n\n    instance(x: 109, y: 225) replace_char_99a7f4 root.main.replace_char {}\n\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 426, y: 173) to_lower_node root.Std_k98ojb.Strings.ToLower {}\n        instance(x: 666, y: 132) logic_equal_node root.Std_k98ojb.Logic.Equal {}\n\n        input_ai -> to_lower_node.input\n        input_ai -> logic_equal_node.left\n        to_lower_node.output -> logic_equal_node.right\n        logic_equal_node.equal -> output_ai\n    }\n\n    \n    instance(x: 42, y: 205) is_lower_node root.main.is_lower {}\n\n    \n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: 109, y: 25) filter_unique_d8e4f7 root.Std_k98ojb.Iteration.Filter {}\n        instance(x: 413, y: -43) reduce_product_4f7b5a root.Std_k98ojb.Iteration.Reduce {}\n\n        func() {\n            in(x: -157, y: 34, name: \"item\") property(Number) item_9b89f6\n            out(x: 512, y: 42, name: \"isUnique\") property(Bool) isUnique_dad542\n            instance(x: 100, y: 38) count_66d3bb root.Std_k98ojb.Query.Filter {\n                where: \"it == item\"\n            }\n            instance(x: 325, y: 43) equal_4db1d1 root.Std_k98ojb.Logic.Equal {}\n            1 -> equal_4db1d1.right\n            list_5fda54 -> count_66d3bb.list\n            count_66d3bb.result -> equal_4db1d1.left\n            equal_4db1d1.result -> isUnique_dad542\n        } -> filter_unique_d8e4f7.handler\n\n        execute_19300c -> filter_unique_d8e4f7.trigger\n        list_5fda54 -> filter_unique_d8e4f7.items\n        filter_unique_d8e4f7.result -> reduce_product_4f7b5a.items\n\n        func() {\n            in(x: -145, y: 30, name: \"accumulated\") property(Number) accumulated_66b1d3\n            in(x: 50, y: 29, name: \"item\") property(Number) item_1847c2\n            out(x: 256, y: 32, name: \"product\") property(Number) product_7f35d8\n            instance(x: 100, y: 30) mul_48dbef root.Std_k98ojb.Math.Mul {}\n            accumulated_66b1d3 -> mul_48dbef.first\n            item_1847c2 -> mul_48dbef.second\n            mul_48dbef.result -> product_7f35d8\n        } -> reduce_product_4f7b5a.reducer\n\n        1 -> reduce_product_4f7b5a.initialValue\n        reduce_product_4f7b5a.result -> output_cffcc2\n        reduce_product_4f7b5a.done -> continue_45190b\n    }\n\n    \n\n    instance(x: 110, y: 212) unique_product_8a5f7b root.main.unique_product {}\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n   func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: 15, y: 26, name: \"difference_1\") difference_9f5b1c root.Std_k98ojb.Sets.Difference {}\n        instance(x: 182, y: 26, name: \"difference_2\") difference_3c1a5d root.Std_k98ojb.Sets.Difference {}\n        instance(x: 245, y: 119, name: \"concat\") concat_4a8f68 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_9f5b1c.left\n        list2_ai -> difference_9f5b1c.right\n\n        list2_ai -> difference_3c1a5d.left\n        list1_ai -> difference_3c1a5d.right\n\n        difference_9f5b1c.difference -> concat_4a8f68.left\n        difference_3c1a5d.difference -> concat_4a8f68.right\n\n        concat_4a8f68.concat -> output_ai\n    }\n\n    \n\n    instance(x: 93, y: 96) find_dissimilar_56ac29 root.main.find_dissimilar {}\n\n\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 204, y: -55) length_6c0b27 root.Std_k98ojb.List.Length {}\n        instance(x: 298, y: 56) sub_29e3f5 root.Std_k98ojb.Math.Sub {}\n        instance(x: 564, y: -45) concat_9b38cc root.Std_k98ojb.List.Concat {}\n        instance(x: 412, y: -156) slice_3f3ee6 root.Std_k98ojb.List.Slice {}\n        instance(x: 419, y: 3) slice_26a3a2 root.Std_k98ojb.List.Slice {}\n        list_48148f -> length_6c0b27.list\n        list_48148f -> slice_26a3a2.list\n        list_48148f -> slice_3f3ee6.list\n        n_68068c -> sub_29e3f5.second\n        length_6c0b27.length -> sub_29e3f5.first\n        sub_29e3f5.result -> slice_26a3a2.start\n        slice_26a3a2.slice -> concat_9b38cc.left\n        0 -> slice_26a3a2.end\n        sub_29e3f5.result -> slice_3f3ee6.end\n        slice_3f3ee6.slice -> concat_9b38cc.right\n        concat_9b38cc.result -> output_823209\n    }\n\n    \n\n    instance(x: -209, y: 42) rotate_right_172c67 root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 160, y: 20) reduce_1a2d3c root.Std_k98ojb.Iteration.Reduce {}\n        0 -> reduce_1a2d3c.initialValue\n        list_2c62ab -> reduce_1a2d3c.items\n        func() {\n            in(x: -182, y: -85, name: \"accumulated\") property(Number) accumulated_18d321\n            in(x: -179, y: 23, name: \"current\") property(Number) current_9b2d15\n\n            out(x: 492, y: -73, name: \"sum\") property(Number) sum_2e9d3a\n\n            instance(x: 113, y: 2) add_3f8d2a root.Std_k98ojb.Math.Add {}\n            accumulated_18d321 -> add_3f8d2a.first\n            current_9b2d15 -> add_3f8d2a.second\n            add_3f8d2a.result -> sum_2e9d3a\n        } -> reduce_1a2d3c.reducer\n        reduce_1a2d3c.output -> sum_2a848f\n    }\n\n    \n\n    instance(x: 106, y: -24) _sum_6a2f4e root.main._sum {}\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 360, y: 27) if_2aef8d root.Std_k98ojb.Std.If {}\n        instance(x: 155, y: 162) lessthanorequal_89ebbd root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 780, y: -164) generaterange_41baf6 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 783, y: 28) for_239423 root.Std_k98ojb.Std.For {}\n        instance(x: 1051, y: 4) expression_80f3df root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 1277, y: -106) not_6e2e1e root.Std_k98ojb.Logic.Not {}\n        instance(x: 1450, y: -87) if_7c2ab2 root.Std_k98ojb.Std.If {}\n        2 -> lessthanorequal_89ebbd.left\n        num_5c0677 -> lessthanorequal_89ebbd.right\n        lessthanorequal_89ebbd.result -> if_2aef8d.predicate\n        if_2aef8d.then -> continue_9a54bb\n        num_5c0677 -> lessthanorequal_89ebbd.right\n        lessthanorequal_89ebbd.result -> if_2aef8d.predicate\n        if_2aef8d.then -> output_c457b3\n        num_5c0677 -> generaterange_41baf6.to\n        2 -> generaterange_41baf6.from\n        generaterange_41baf6.list -> for_239423.items\n        for_239423.index -> expression_80f3df.gen_1\n        num_5c0677 -> expression_80f3df.gen_0\n        expression_80f3df.result -> not_6e2e1e.input\n        not_6e2e1e.result -> if_7c2ab2.predicate\n        for_239423.onItem -> if_7c2ab2.execute\n        if_7c2ab2.else -> continue_9a54bb\n        for_239423.done -> continue_9a54bb\n        for_239423.done -> output_c457b3\n        execute_b7b391 -> for_239423.reset\n        if_7c2ab2.then -> for_239423.next\n    }\n\n    \n\n    instance(x: -191, y: 140) num_prime_59cb2f root.main.num_prime {}\n}"
            ]
        }
    }
]