[
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2d1b0c root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2d1b0c.first\n        y_5390f5 -> mul_2d1b0c.second\n\n        instance(x: -74, y: -176) less_than_or_equal_0 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2d1b0c.result -> less_than_or_equal_0.left\n        0 -> less_than_or_equal_0.right\n\n        instance(x: 54, y: -176) not_3a2e1f root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_0.output -> not_3a2e1f.input\n\n        not_3a2e1f.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b8d.value\n        11 -> modulo_5a7b8d.divisor\n        modulo_5a7b8d.result -> equal_7c3e2b.left\n        0 -> equal_7c3e2b.right\n        equal_7c3e2b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 104, y: 129) concat_ae root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_ae.list1\n        difference_2a.difference -> concat_ae.list2\n\n        concat_ae.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2b1d6a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -110) modulo_2c1f6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 340, y: -110) sub_3d1e6a root.Std_k98ojb.Math.Sub {}\n        instance(x: 520, y: -110) slice_7c1f6a root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: -40) slice_7d1e6a root.Std_k98ojb.List.Slice {}\n        instance(x: 630, y: -75) concat_7c1f6a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2b1d6a.list\n        n_68068c -> modulo_2c1f6e.value\n        length_2b1d6a.length -> modulo_2c1f6e.divisor\n        length_2b1d6a.length -> sub_3d1e6a.first\n        modulo_2c1f6e.result -> sub_3d1e6a.second\n        list_48148f -> slice_7c1f6a.list\n        sub_3d1e6a.result -> slice_7c1f6a.start\n        -1 -> slice_7c1f6a.end\n        list_48148f -> slice_7d1e6a.list\n        0 -> slice_7d1e6a.start\n        sub_3d1e6a.result -> slice_7d1e6a.end\n        slice_7c1f6a.slice -> concat_7c1f6a.right\n        slice_7d1e6a.slice -> concat_7c1f6a.left\n        concat_7c1f6a.concatenatedList -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -112) reduce_2b5d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 367, y: -112) add_2c8b1a root.Std_k98ojb.Math.Add {}\n        setter(x: 400, y: -212, name: \"setter_5d6f6e\") setter_5d6f6e = sum\n        0 -> reduce_2b5d1e.initial_value\n        list_2c62ab -> reduce_2b5d1e.items\n        add_2c8b1a.result -> setter_5d6f6e.new_value\n        reduce_2b5d1e.reduce_complete -> setter_5d6f6e.execute\n        setter_5d6f6e.continue -> sum_2a848f\n        add_2c8b1a.first -> reduce_2b5d1e.accumulated_value\n        add_2c8b1a.second -> reduce_2b5d1e.current_value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 184, y: -126) generate_range_0e2d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 376, y: -126) for_loop_3f1c root.Std_k98ojb.Std.For {}\n        instance(x: 544, y: -126) modulo_check_0e2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 712, y: -126) if_statement_3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 880, y: -126) not_equal_check_3f1c root.Std_k98ojb.Logic.NotEqual {}\n\n        num_5c0677 -> generate_range_0e2d.from\n        2 -> generate_range_0e2d.to\n        Math.Floor(Math.Sqrt(num_5c0677)) -> for_loop_3f1c.items\n\n        execute_b7b391 -> for_loop_3f1c.trigger\n\n        for_loop_3f1c.item -> modulo_check_0e2d.value\n        num_5c0677 -> modulo_check_0e2d.divisor\n\n        modulo_check_0e2d.result -> not_equal_check_3f1c.left\n        0 -> not_equal_check_3f1c.right\n\n        not_equal_check_3f1c.result -> if_statement_3f1c.predicate\n\n        for_loop_3f1c.onItem -> if_statement_3f1c.execute\n\n        if_statement_3f1c.else -> continue_9a54bb\n        if_statement_3f1c.value -> output_c457b3\n\n        for_loop_3f1c.done -> if_statement_3f1c.execute\n        for_loop_3f1c.done -> continue_9a54bb\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -174) mul_1b0c1d Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1b0c1d.first\n        y_5390f5 -> mul_1b0c1d.second\n\n        instance(x: -147, y: -145) less_than_or_equal_1e4a55 Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1b0c1d.result -> less_than_or_equal_1e4a55.left\n        0 -> less_than_or_equal_1e4a55.right\n\n        instance(x: -23, y: -176) not_8f9b1b Std_k98ojb.Logic.Not {}\n        less_than_or_equal_1e4a55.result -> not_8f9b1b.input\n\n        not_8f9b1b.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -109) modulo_5a7d1b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 315, y: -109) equal_9c1e1d root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7d1b.value\n        11 -> modulo_5a7d1b.divisor\n        modulo_5a7d1b.result -> equal_9c1e1d.left\n        0 -> equal_9c1e1d.right\n        equal_9c1e1d.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 132) replace_7a7b14 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a7b14.input\n        search_ai -> replace_7a7b14.search\n        replace_ai -> replace_7a7b14.replace\n        replace_7a7b14.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> unique_set.trigger\n        unique_set.trigger -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.trigger -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: 132) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -294, y: 260) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -157, y: 196) concat_ae root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_ae.list1\n        difference_2a.difference -> concat_ae.list2\n\n        concat_ae.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 148, y: -104) length_2d7b4e root.Std_k98ojb.List.Length {}\n        instance(x: 156, y: 12) modulo_5a4f1c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 324, y: -104) slice_start_7d6e1c root.Std_k98ojb.List.Slice {}\n        instance(x: 324, y: 12) slice_end_5f4a2c root.Std_k98ojb.List.Slice {}\n        instance(x: 500, y: -104) concat_7d6e1c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2d7b4e.list\n        n_68068c -> modulo_5a4f1c.value\n        length_2d7b4e.length -> modulo_5a4f1c.divisor\n        list_48148f -> slice_start_7d6e1c.list\n        list_48148f -> slice_end_5f4a2c.list\n        length_2d7b4e.length -> slice_end_5f4a2c.start\n        modulo_5a4f1c.result -> slice_start_7d6e1c.end\n        Math_k98ojb.Math.Sub {\n            first: length_2d7b4e.length,\n            second: modulo_5a4f1c.result\n        } -> slice_end_5f4a2c.end\n\n        slice_end_5f4a2c.slice -> concat_7d6e1c.left\n        slice_start_7d6e1c.slice -> concat_7d6e1c.right\n        concat_7d6e1c.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -112) reduce_2b8e1d root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 365, y: -176) add_8c102a root.Std_k98ojb.Math.Add {}\n        setter(x: 465, y: -28, name: \"setter_2d6e1f\") setter_2d6e1f = sum\n        0 -> reduce_2b8e1d.accumulator\n        list_2c62ab -> reduce_2b8e1d.items\n        add_8c102a.result -> setter_2d6e1f.new_value\n        setter_2d6e1f.continue -> sum_2a848f\n        reduce_2b8e1d.accumulator -> add_8c102a.first\n        reduce_2b8e1d.item -> add_8c102a.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 181, y: -116) if_0d2c6f root.Std_k98ojb.Std.If {}\n        instance(x: 377, y: -124) expression_8e4a5d root.Std_k98ojb.Math.Expression {\n            expression: \"num <= 1\"\n        }\n        instance(x: 570, y: -161) if_7f4c3b root.Std_k98ojb.Std.If {}\n        instance(x: 752, y: -161) expression_3a2d9e root.Std_k98ojb.Math.Expression {\n            expression: \"num == 2\"\n        }\n        instance(x: 940, y: -159) if_4f3c1a root.Std_k98ojb.Std.If {}\n        instance(x: 1136, y: -171) expression_4d6e5c root.Std_k98ojb.Math.Expression {\n            expression: \"num % 2 == 0\"\n        }\n        instance(x: 1328, y: -171) not_1a7f9b root.Std_k98ojb.Logic.Not {}\n        instance(x: 1526, y: -171) and_4e2d8c root.Std_k98ojb.Logic.And {}\n        instance(x: 1730, y: -171) if_5a2d8f root.Std_k98ojb.Std.If {}\n        instance(x: 1926, y: -171) for_4e2d8c root.Std_k98ojb.Std.For {}\n        instance(x: 2130, y: -171) expression_5a2d8f root.Std_k98ojb.Math.Expression {\n            expression: \"i * i <= num\"\n        }\n        instance(x: 2340, y: -171) if_6e2d8c root.Std_k98ojb.Std.If {}\n        instance(x: 2550, y: -171) expression_7a2d8f root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 2760, y: -171) not_8e2d8c root.Std_k98ojb.Logic.Not {}\n        instance(x: 2970, y: -171) and_9a2d8c root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> expression_8e4a5d.gen_0\n        execute_b7b391 -> if_0d2c6f.execute\n        expression_8e4a5d.result -> if_0d2c6f.predicate\n        if_0d2c6f.value -> output_c457b3\n        num_5c0677 -> expression_3a2d9e.gen_0\n        if_0d2c6f.then -> if_7f4c3b.execute\n        expression_3a2d9e.result -> if_7f4c3b.predicate\n        if_7f4c3b.value -> output_c457b3\n        num_5c0677 -> expression_4d6e5c.gen_0\n        if_7f4c3b.then -> if_4f3c1a.execute\n        expression_4d6e5c.result -> if_4f3c1a.predicate\n        if_4f3c1a.value -> output_c457b3\n        if_4f3c1a.else -> not_1a7f9b.input\n        num_5c0677 -> for_4e2d8c.items\n        2 -> for_4e2d8c.from\n        expression_5a2d8f.result -> for_4e2d8c.to\n        if_4f3c1a.then -> and_4e2d8c.left\n        not_1a7f9b.output -> and_4e2d8c.right\n        and_4e2d8c.result -> if_5a2d8f.predicate\n        if_5a2d8f.else -> continue_9a54bb\n        for_4e2d8c.onItem -> if_6e2d8c.execute\n        num_5c0677 -> expression_7a2d8f.gen_0\n        for_4e2d8c.item -> expression_7a2d8f.gen_1\n        expression_7a2d8f.result -> if_6e2d8c.predicate\n        if_6e2d8c.else -> not_8e2d8c.input\n        if_6e2d8c.value -> output_c457b3\n        not_8e2d8c.output -> and_9a2d8c.left\n        for_4e2d8c.done -> and_9a2d8c.right\n        and_9a2d8c.result -> if_5a2d8f.then\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -184, y: -176) mul_4b7c5d Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_4b7c5d.first\n        y_5390f5 -> mul_4b7c5d.second\n\n        instance(x: -18, y: -176) less_than_or_equal_4a7ebe Std_k98ojb.Math.LessThanOrEqual {}\n        mul_4b7c5d.result -> less_than_or_equal_4a7ebe.left\n        0 -> less_than_or_equal_4a7ebe.right\n\n        instance(x: 136, y: -176) not_2f8911 Std_k98ojb.Logic.Not {}\n        less_than_or_equal_4a7ebe.result -> not_2f8911.input\n        not_2f8911.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -109) modulo_5a3b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 377, y: -109) equal_8c0e6c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a3b2d.value\n        11 -> modulo_5a3b2d.divisor\n        modulo_5a3b2d.result -> equal_8c0e6c.left\n        0 -> equal_8c0e6c.right\n        equal_8c0e6c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -179, y: 209) tolower_5a4b8c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5a4b8c.input\n        tolower_5a4b8c.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_instance root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_instance.trigger\n        reduce_instance.result -> output_cffcc2\n        reduce_instance.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 128) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 240) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -137, y: 184) concat_a root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_a.list1\n        difference_2a.difference -> concat_a.list2\n\n        concat_a.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 143, y: -109) length_4d5b9a root.Std_k98ojb.List.Length {}\n        instance(x: 147, y: 69) modulo_7f3c2e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 346, y: -109) slice_start_5a4d8b root.Std_k98ojb.List.Slice {}\n        instance(x: 346, y: 69) slice_end_2e7f6c root.Std_k98ojb.List.Slice {}\n        instance(x: 552, y: -109) concat_7a2d07 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4d5b9a.list\n        n_68068c -> modulo_7f3c2e.value\n        length_4d5b9a.length -> modulo_7f3c2e.divisor\n        length_4d5b9a.length -> slice_start_5a4d8b.start\n        length_4d5b9a.length -> slice_end_2e7f6c.end\n        list_48148f -> slice_start_5a4d8b.list\n        list_48148f -> slice_end_2e7f6c.list\n        modulo_7f3c2e.result -> slice_start_5a4d8b.end\n        modulo_7f3c2e.result -> slice_end_2e7f6c.start\n        slice_start_5a4d8b.slice -> concat_7a2d07.left\n        slice_end_2e7f6c.slice -> concat_7a2d07.right\n        concat_7a2d07.result -> output_823209\n    }\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_7b7d6e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 250, y: -100) add_3c4d5a root.Std_k98ojb.Math.Add {}\n        setter(x: 400, y: -100, name: \"setter_7f6e2c\") setter_7f6e2c = sum\n        0 -> reduce_7b7d6e.accumulator\n        list_2c62ab -> reduce_7b7d6e.items\n        reduce_7b7d6e.result -> sum_2a848f\n        add_3c4d5a.result -> setter_7f6e2c.new_value\n        reduce_7b7d6e.execute -> add_3c4d5a.execute\n        reduce_7b7d6e.accumulator -> add_3c4d5a.first\n        reduce_7b7d6e.item -> add_3c4d5a.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 185, y: -126) generate_range_7d2e root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 350, y: -126) for_loop_3f1c root.Std_k98ojb.Std.For {}\n        instance(x: 540, y: -126) modulo_check_7d2e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 730, y: -126) if_statement_7d2e root.Std_k98ojb.Std.If {}\n        instance(x: 920, y: -126) not_equal_check_7d2e root.Std_k98ojb.Logic.NotEqual {}\n\n        num_5c0677 -> generate_range_7d2e.to\n        2 -> generate_range_7d2e.from\n\n        generate_range_7d2e.list -> for_loop_3f1c.items\n\n        execute_b7b391 -> for_loop_3f1c.reset\n\n        num_5c0677 -> modulo_check_7d2e.value\n        for_loop_3f1c.item -> modulo_check_7d2e.divisor\n\n        modulo_check_7d2e.result -> not_equal_check_7d2e.left\n        0 -> not_equal_check_7d2e.right\n\n        not_equal_check_7d2e.result -> if_statement_7d2e.predicate\n\n        for_loop_3f1c.onItem -> if_statement_7d2e.execute\n\n        if_statement_7d2e.else -> continue_9a54bb\n        if_statement_7d2e.value -> output_c457b3\n\n        for_loop_3f1c.done -> continue_9a54bb\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2c2b0d root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2c2b0d.first\n        y_5390f5 -> mul_2c2b0d.second\n\n        instance(x: -147, y: -176) less_than_or_equal_2e2a1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2c2b0d.result -> less_than_or_equal_2e2a1a.left\n        0 -> less_than_or_equal_2e2a1a.right\n\n        instance(x: -46, y: -176) not_5f389b root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_2e2a1a.result -> not_5f389b.input\n        not_5f389b.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b2d.value\n        11 -> modulo_5a7b2d.divisor\n        modulo_5a7b2d.result -> equal_7c3e2c.left\n        0 -> equal_7c3e2c.right\n        equal_7c3e2c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 104, y: 129) concat_ae root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_ae.list1\n        difference_2a.difference -> concat_ae.list2\n\n        concat_ae.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2e2b1a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -168) modulo_2d6fcb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 340, y: -110) slice_start_1e2a2c root.Std_k98ojb.List.Slice {}\n        instance(x: 340, y: -57) slice_end_6d6f5a root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: -110) concat_1e2a2c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2e2b1a.list\n        n_68068c -> modulo_2d6fcb.value\n        length_2e2b1a.length -> modulo_2d6fcb.divisor\n        list_48148f -> slice_start_1e2a2c.list\n        list_48148f -> slice_end_6d6f5a.list\n        modulo_2d6fcb.result -> slice_start_1e2a2c.start\n        length_2e2b1a.length -> slice_start_1e2a2c.end\n        0 -> slice_end_6d6f5a.start\n        modulo_2d6fcb.result -> slice_end_6d6f5a.end\n        slice_end_6d6f5a.slice -> concat_1e2a2c.left\n        slice_start_1e2a2c.slice -> concat_1e2a2c.right\n        concat_1e2a2c.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -114) reduce_2b3d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 356, y: -71) add_2c3d1e root.Std_k98ojb.Math.Add {}\n        setter(x: 350, y: 149, name: \"setter_2a848f\") setter_2a848f = sum\n        list_2c62ab -> reduce_2b3d1e.items\n        0 -> reduce_2b3d1e.accumulator\n        reduce_2b3d1e.accumulate -> add_2c3d1e.first\n        reduce_2b3d1e.value -> add_2c3d1e.second\n        add_2c3d1e.result -> setter_2a848f.new_value\n        setter_2a848f.continue -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 184, y: -126) if_lessthanthree_f3d0c1 root.Std_k98ojb.Std.If {}\n        instance(x: 472, y: -126) lessthantwo_2f5eac root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 760, y: -126) if_equaltwo_f3d0c1 root.Std_k98ojb.Std.If {}\n        instance(x: 1048, y: -126) if_equalthree_f3d0c1 root.Std_k98ojb.Std.If {}\n        instance(x: 1336, y: -126) for_loop_5f7a8e root.Std_k98ojb.Std.For {}\n        instance(x: 1624, y: -126) if_divisible_f3d0c1 root.Std_k98ojb.Std.If {}\n        instance(x: 1912, y: -126) and_5f7a8e root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthantwo_2f5eac.left\n        2 -> lessthantwo_2f5eac.right\n        lessthantwo_2f5eac.result -> if_lessthanthree_f3d0c1.predicate\n        execute_b7b391 -> if_lessthanthree_f3d0c1.execute\n\n        num_5c0677 -> if_equaltwo_f3d0c1.value\n        2 -> if_equaltwo_f3d0c1.input\n        if_lessthanthree_f3d0c1.then -> if_equaltwo_f3d0c1.execute\n\n        num_5c0677 -> if_equalthree_f3d0c1.value\n        3 -> if_equalthree_f3d0c1.input\n        if_equaltwo_f3d0c1.else -> if_equalthree_f3d0c1.execute\n\n        instance(x: 2104, y: -126) generate_range_5f7a8e root.Std_k98ojb.List.GenerateRange {}\n        num_5c0677 -> generate_range_5f7a8e.to\n        2 -> generate_range_5f7a8e.from\n\n        if_equalthree_f3d0c1.else -> for_loop_5f7a8e.reset\n        generate_range_5f7a8e.list -> for_loop_5f7a8e.items\n\n        instance(x: 2392, y: -126) modulo_check_5f7a8e root.Std_k98ojb.Math.Modulo {}\n        num_5c0677 -> modulo_check_5f7a8e.first\n        for_loop_5f7a8e.item -> modulo_check_5f7a8e.second\n\n        0 -> if_divisible_f3d0c1.input\n        modulo_check_5f7a8e.result -> if_divisible_f3d0c1.value\n        for_loop_5f7a8e.onItem -> if_divisible_f3d0c1.execute\n\n        if_divisible_f3d0c1.then -> continue_9a54bb\n        if_divisible_f3d0c1.else -> for_loop_5f7a8e.next\n\n        for_loop_5f7a8e.done -> and_5f7a8e.right\n        if_equalthree_f3d0c1.then -> and_5f7a8e.left\n        if_equaltwo_f3d0c1.then -> and_5f7a8e.left\n\n        and_5f7a8e.result -> output_c457b3\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -174) mul_1b3c4d root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1b3c4d.first\n        y_5390f5 -> mul_1b3c4d.second\n\n        instance(x: -117, y: -174) less_than_or_equal_3a7e21 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1b3c4d.result -> less_than_or_equal_3a7e21.left\n        0 -> less_than_or_equal_3a7e21.right\n\n        instance(x: -6, y: -175) not_8f9b74 root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_3a7e21.result -> not_8f9b74.input\n        not_8f9b74.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -102) modulo_5a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 312, y: -102) equal_6c1e45 root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b2d.value\n        11 -> modulo_5a7b2d.divisor\n        modulo_5a7b2d.result -> equal_6c1e45.left\n        0 -> equal_6c1e45.right\n        equal_6c1e45.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 132) replace_7a7b7c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a7b7c.input\n        search_ai -> replace_7a7b7c.search\n        replace_ai -> replace_7a7b7c.replace\n        replace_7a7b7c.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> unique_set.trigger\n        unique_set.trigger -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.trigger -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: 132) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -294, y: 260) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -157, y: 196) concat_ae root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_ae.list1\n        difference_2a.difference -> concat_ae.list2\n\n        concat_ae.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 148, y: -104) length_2d7b5e root.Std_k98ojb.List.Length {}\n        instance(x: 160, y: 71) mod_3f4a2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 328, y: -104) slice_start_5d1e67 root.Std_k98ojb.List.Slice {}\n        instance(x: 328, y: 71) slice_end_8a2f4c root.Std_k98ojb.List.Slice {}\n        instance(x: 504, y: -104) concat_8d6b4e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2d7b5e.list\n        n_68068c -> mod_3f4a2c.value\n        length_2d7b5e.length -> mod_3f4a2c.divisor\n        list_48148f -> slice_start_5d1e67.list\n        list_48148f -> slice_end_8a2f4c.list\n        length_2d7b5e.length -> slice_end_8a2f4c.start\n        mod_3f4a2c.result -> slice_start_5d1e67.start\n        mod_3f4a2c.result -> slice_end_8a2f4c.end\n        -1 -> slice_end_8a2f4c.end\n        slice_start_5d1e67.slice -> concat_8d6b4e.left\n        slice_end_8a2f4c.slice -> concat_8d6b4e.right\n        concat_8d6b4e.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -114) reduce_2b4d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 357, y: -68) add_8c1f5d root.Std_k98ojb.Math.Add {}\n        setter(x: 301, y: -182, name: \"setter_4a2eac\") setter_4a2eac = sum\n        getter(x: 576, y: -109, name: \"getter_1c4b7f\") getter_1c4b7f = sum\n\n        list_2c62ab -> reduce_2b4d1e.items\n        0 -> setter_4a2eac.new_value\n        add_8c1f5d.result -> setter_4a2eac.new_value\n        setter_4a2eac.continue -> getter_1c4b7f.execute\n        getter_1c4b7f.value -> sum_2a848f\n        reduce_2b4d1e.accumulate -> add_8c1f5d.first\n        reduce_2b4d1e.item -> add_8c1f5d.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 183, y: -146) generate_range_1 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 374, y: -216) for_loop_1 root.Std_k98ojb.Std.For {}\n        instance(x: 565, y: -200) modulo_op_1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 756, y: -184) equal_op_1 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 947, y: -168) if_stmt_1 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> generate_range_1.to\n        2 -> generate_range_1.from\n\n        execute_b7b391 -> for_loop_1.reset\n        generate_range_1.list -> for_loop_1.items\n\n        for_loop_1.item -> modulo_op_1.value\n        num_5c0677 -> modulo_op_1.divisor\n\n        modulo_op_1.result -> equal_op_1.left\n        0 -> equal_op_1.right\n\n        equal_op_1.result -> if_stmt_1.predicate\n\n        for_loop_1.onItem -> if_stmt_1.execute\n\n        if_stmt_1.then -> continue_9a54bb\n        false -> output_c457b3\n\n        if_stmt_1.else -> for_loop_1.next\n\n        for_loop_1.done -> if_stmt_2.execute\n        true -> output_c457b3\n    }\n\n    instance(x: -189, y: 222) num_prime_f0be66 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -184, y: -176) mul_4b9c5d Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_4b9c5d.first\n        y_5390f5 -> mul_4b9c5d.second\n\n        instance(x: -17, y: -175) less_than_or_equal_0 Std_k98ojb.Math.LessThanOrEqual {}\n        mul_4b9c5d.result -> less_than_or_equal_0.left\n        0 -> less_than_or_equal_0.right\n\n        less_than_or_equal_0.result -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -109) modulo_5a3b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 377, y: -109) equal_8c8e6a root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a3b2d.value\n        11 -> modulo_5a3b2d.divisor\n        modulo_5a3b2d.result -> equal_8c8e6a.left\n        0 -> equal_8c8e6a.right\n        equal_8c8e6a.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -179, y: 209) tolower_5a4b8c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5a4b8c.input\n        tolower_5a4b8c.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_instance root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_instance.trigger\n        reduce_instance.result -> output_cffcc2\n        reduce_instance.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 128) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 240) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -137, y: 184) concat_a root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_a.list1\n        difference_2a.difference -> concat_a.list2\n\n        concat_a.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 143, y: -109) length_6b2fcb root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: 10) mod_7d5ebe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 430, y: -109) slice_start_6a2fcb root.Std_k98ojb.List.Slice {}\n        instance(x: 430, y: 10) slice_end_7d5ebe root.Std_k98ojb.List.Slice {}\n        instance(x: 580, y: -112) concat_6a2fcb root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_6b2fcb.list\n        n_68068c -> mod_7d5ebe.value\n        length_6b2fcb.length -> mod_7d5ebe.divisor\n        list_48148f -> slice_start_6a2fcb.list\n        list_48148f -> slice_end_7d5ebe.list\n        length_6b2fcb.length -> slice_end_7d5ebe.start\n        mod_7d5ebe.result -> slice_start_6a2fcb.end\n        mod_7d5ebe.result -> slice_end_7d5ebe.end\n        -1 -> slice_end_7d5ebe.start\n        slice_start_6a2fcb.slice -> concat_6a2fcb.left\n        slice_end_7d5ebe.slice -> concat_6a2fcb.right\n        concat_6a2fcb.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_7b7d6e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 250, y: -100) add_3c4d5a root.Std_k98ojb.Math.Add {}\n        setter(x: 400, y: -100, name: \"setter_7f6e2c\") setter_7f6e2c = sum\n        0 -> reduce_7b7d6e.accumulator\n        list_2c62ab -> reduce_7b7d6e.items\n        reduce_7b7d6e.result -> sum_2a848f\n        add_3c4d5a.result -> setter_7f6e2c.new_value\n        reduce_7b7d6e.execute -> add_3c4d5a.execute\n        reduce_7b7d6e.accumulator -> add_3c4d5a.first\n        reduce_7b7d6e.item -> add_3c4d5a.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 185, y: -126) generate_range_7d2e6c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 362, y: -101) for_loop_3f1d5a root.Std_k98ojb.Std.For {}\n        instance(x: 548, y: -76) mod_5e8c8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 725, y: -51) equal_3d0a7f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 902, y: -26) if_statement_4e2c1c root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> generate_range_7d2e6c.to\n        2 -> generate_range_7d2e6c.from\n\n        execute_b7b391 -> for_loop_3f1d5a.reset\n        generate_range_7d2e6c.list -> for_loop_3f1d5a.items\n\n        num_5c0677 -> mod_5e8c8b.value\n        for_loop_3f1d5a.item -> mod_5e8c8b.divisor\n\n        mod_5e8c8b.result -> equal_3d0a7f.left\n        0 -> equal_3d0a7f.right\n\n        equal_3d0a7f.result -> if_statement_4e2c1c.predicate\n        for_loop_3f1d5a.onItem -> if_statement_4e2c1c.execute\n\n        if_statement_4e2c1c.then -> continue_9a54bb\n        false -> output_c457b3\n\n        if_statement_4e2c1c.else -> for_loop_3f1d5a.next\n\n        for_loop_3f1d5a.done -> func() {\n            in(x: 0, y: 0) num property(Number)\n            out(x: 0, y: 0) is_prime property(Bool)\n\n            instance(x: 0, y: 0) equal_2 root.Std_k98ojb.Logic.Equal {}\n            num -> equal_2.left\n            1 -> equal_2.right\n\n            equal_2.result -> if_statement_2 root.Std_k98ojb.Std.If {}\n\n            if_statement_2.then -> is_prime\n            false -> is_prime\n\n            if_statement_2.else -> continue_9a54bb\n            true -> output_c457b3\n        }\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2c2b0d root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2c2b0d.first\n        y_5390f5 -> mul_2c2b0d.second\n\n        instance(x: -147, y: -176) less_than_or_equal_2e2a1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2c2b0d.result -> less_than_or_equal_2e2a1a.left\n        0 -> less_than_or_equal_2e2a1a.right\n\n        instance(x: -46, y: -176) not_5f389b root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_2e2a1a.result -> not_5f389b.input\n        not_5f389b.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b2d.value\n        11 -> modulo_5a7b2d.divisor\n        modulo_5a7b2d.result -> equal_7c3e2c.left\n        0 -> equal_7c3e2c.right\n        equal_7c3e2c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 104, y: 129) concat_ae root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_ae.list1\n        difference_2a.difference -> concat_ae.list2\n\n        concat_ae.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2e2b1a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -168) modulo_2d6fcb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 340, y: -110) slice_start_1e2a2c root.Std_k98ojb.List.Slice {}\n        instance(x: 340, y: -57) slice_end_6d6f5a root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: -110) concat_1e2a2c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2e2b1a.list\n        n_68068c -> modulo_2d6fcb.value\n        length_2e2b1a.length -> modulo_2d6fcb.divisor\n        list_48148f -> slice_start_1e2a2c.list\n        list_48148f -> slice_end_6d6f5a.list\n        modulo_2d6fcb.result -> slice_start_1e2a2c.start\n        length_2e2b1a.length -> slice_start_1e2a2c.end\n        0 -> slice_end_6d6f5a.start\n        modulo_2d6fcb.result -> slice_end_6d6f5a.end\n        slice_end_6d6f5a.slice -> concat_1e2a2c.left\n        slice_start_1e2a2c.slice -> concat_1e2a2c.right\n        concat_1e2a2c.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -114) reduce_2b3d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 356, y: -71) add_2c3d1e root.Std_k98ojb.Math.Add {}\n        setter(x: 350, y: 149, name: \"setter_2a848f\") setter_2a848f = sum\n        list_2c62ab -> reduce_2b3d1e.items\n        0 -> reduce_2b3d1e.accumulator\n        reduce_2b3d1e.accumulate -> add_2c3d1e.first\n        reduce_2b3d1e.value -> add_2c3d1e.second\n        add_2c3d1e.result -> setter_2a848f.new_value\n        setter_2a848f.continue -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 184, y: -126) if_lessthanthree_f3d0c1 root.Std_k98ojb.Std.If {}\n        instance(x: 472, y: -126) lessthantwo_2f5eac root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 760, y: -126) if_equaltwo_f3d0c1 root.Std_k98ojb.Std.If {}\n        instance(x: 1048, y: -126) if_equalthree_f3d0c1 root.Std_k98ojb.Std.If {}\n        instance(x: 1336, y: -126) for_loop_5f7a8e root.Std_k98ojb.Std.For {}\n        instance(x: 1624, y: -126) if_divisible_f3d0c1 root.Std_k98ojb.Std.If {}\n        instance(x: 1912, y: -126) and_5f7a8e root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthantwo_2f5eac.left\n        2 -> lessthantwo_2f5eac.right\n        lessthantwo_2f5eac.result -> if_lessthanthree_f3d0c1.predicate\n        execute_b7b391 -> if_lessthanthree_f3d0c1.execute\n\n        num_5c0677 -> if_equaltwo_f3d0c1.value\n        2 -> if_equaltwo_f3d0c1.input\n        if_lessthanthree_f3d0c1.then -> if_equaltwo_f3d0c1.execute\n\n        num_5c0677 -> if_equalthree_f3d0c1.value\n        3 -> if_equalthree_f3d0c1.input\n        if_equaltwo_f3d0c1.else -> if_equalthree_f3d0c1.execute\n\n        instance(x: 2104, y: -126) generate_range_5f7a8e root.Std_k98ojb.List.GenerateRange {}\n        num_5c0677 -> generate_range_5f7a8e.to\n        2 -> generate_range_5f7a8e.from\n\n        if_equalthree_f3d0c1.else -> for_loop_5f7a8e.reset\n        generate_range_5f7a8e.list -> for_loop_5f7a8e.items\n\n        instance(x: 2392, y: -126) modulo_check_5f7a8e root.Std_k98ojb.Math.Modulo {}\n        num_5c0677 -> modulo_check_5f7a8e.first\n        for_loop_5f7a8e.item -> modulo_check_5f7a8e.second\n\n        0 -> if_divisible_f3d0c1.input\n        modulo_check_5f7a8e.result -> if_divisible_f3d0c1.value\n        for_loop_5f7a8e.onItem -> if_divisible_f3d0c1.execute\n\n        if_divisible_f3d0c1.then -> continue_9a54bb\n        if_divisible_f3d0c1.else -> for_loop_5f7a8e.next\n\n        for_loop_5f7a8e.done -> and_5f7a8e.right\n        if_equalthree_f3d0c1.then -> and_5f7a8e.left\n        if_equaltwo_f3d0c1.then -> and_5f7a8e.left\n\n        and_5f7a8e.result -> output_c457b3\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -268, y: -174) mul_1b3c4d root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1b3c4d.first\n        y_5390f5 -> mul_1b3c4d.second\n\n        instance(x: -117, y: -174) less_than_or_equal_3a7e21 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1b3c4d.result -> less_than_or_equal_3a7e21.left\n        0 -> less_than_or_equal_3a7e21.right\n\n        instance(x: -6, y: -175) not_8f9b74 root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_3a7e21.result -> not_8f9b74.input\n        not_8f9b74.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -102) modulo_5a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 312, y: -102) equal_6c1e45 root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b2d.value\n        11 -> modulo_5a7b2d.divisor\n        modulo_5a7b2d.result -> equal_6c1e45.left\n        0 -> equal_6c1e45.right\n        equal_6c1e45.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 132) replace_7a7b7c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a7b7c.input\n        search_ai -> replace_7a7b7c.search\n        replace_ai -> replace_7a7b7c.replace\n        replace_7a7b7c.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> unique_set.trigger\n        unique_set.trigger -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.trigger -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -294, y: 132) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -294, y: 260) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -157, y: 196) concat_ae root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_ae.list1\n        difference_2a.difference -> concat_ae.list2\n\n        concat_ae.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 148, y: -104) length_2d7b5e root.Std_k98ojb.List.Length {}\n        instance(x: 160, y: 71) mod_3f4a2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 328, y: -104) slice_start_5d1e67 root.Std_k98ojb.List.Slice {}\n        instance(x: 328, y: 71) slice_end_8a2f4c root.Std_k98ojb.List.Slice {}\n        instance(x: 504, y: -104) concat_8d6b4e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2d7b5e.list\n        n_68068c -> mod_3f4a2c.value\n        length_2d7b5e.length -> mod_3f4a2c.divisor\n        list_48148f -> slice_start_5d1e67.list\n        list_48148f -> slice_end_8a2f4c.list\n        length_2d7b5e.length -> slice_end_8a2f4c.start\n        mod_3f4a2c.result -> slice_start_5d1e67.start\n        mod_3f4a2c.result -> slice_end_8a2f4c.end\n        -1 -> slice_end_8a2f4c.end\n        slice_start_5d1e67.slice -> concat_8d6b4e.left\n        slice_end_8a2f4c.slice -> concat_8d6b4e.right\n        concat_8d6b4e.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -114) reduce_2b4d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 357, y: -68) add_8c1f5d root.Std_k98ojb.Math.Add {}\n        setter(x: 301, y: -182, name: \"setter_4a2eac\") setter_4a2eac = sum\n        getter(x: 576, y: -109, name: \"getter_1c4b7f\") getter_1c4b7f = sum\n\n        list_2c62ab -> reduce_2b4d1e.items\n        0 -> setter_4a2eac.new_value\n        add_8c1f5d.result -> setter_4a2eac.new_value\n        setter_4a2eac.continue -> getter_1c4b7f.execute\n        getter_1c4b7f.value -> sum_2a848f\n        reduce_2b4d1e.accumulate -> add_8c1f5d.first\n        reduce_2b4d1e.item -> add_8c1f5d.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 183, y: -146) generate_range_1 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 374, y: -216) for_loop_1 root.Std_k98ojb.Std.For {}\n        instance(x: 565, y: -200) modulo_op_1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 756, y: -184) equal_op_1 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 947, y: -168) if_stmt_1 root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> generate_range_1.to\n        2 -> generate_range_1.from\n\n        execute_b7b391 -> for_loop_1.reset\n        generate_range_1.list -> for_loop_1.items\n\n        for_loop_1.item -> modulo_op_1.value\n        num_5c0677 -> modulo_op_1.divisor\n\n        modulo_op_1.result -> equal_op_1.left\n        0 -> equal_op_1.right\n\n        equal_op_1.result -> if_stmt_1.predicate\n\n        for_loop_1.onItem -> if_stmt_1.execute\n\n        if_stmt_1.then -> continue_9a54bb\n        false -> output_c457b3\n\n        if_stmt_1.else -> for_loop_1.next\n\n        for_loop_1.done -> if_stmt_2.execute\n        true -> output_c457b3\n    }\n\n    instance(x: -189, y: 222) num_prime_f0be66 root.main.num_prime {}\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.2,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -184, y: -176) mul_4b9c5d Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_4b9c5d.first\n        y_5390f5 -> mul_4b9c5d.second\n\n        instance(x: -17, y: -175) less_than_or_equal_0 Std_k98ojb.Math.LessThanOrEqual {}\n        mul_4b9c5d.result -> less_than_or_equal_0.left\n        0 -> less_than_or_equal_0.right\n\n        less_than_or_equal_0.result -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: -109) modulo_5a3b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 377, y: -109) equal_8c8e6a root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a3b2d.value\n        11 -> modulo_5a3b2d.divisor\n        modulo_5a3b2d.result -> equal_8c8e6a.left\n        0 -> equal_8c8e6a.right\n        equal_8c8e6a.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -179, y: 209) tolower_5a4b8c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5a4b8c.input\n        tolower_5a4b8c.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_instance root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_instance.trigger\n        reduce_instance.result -> output_cffcc2\n        reduce_instance.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -295, y: 128) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -295, y: 240) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -137, y: 184) concat_a root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_a.list1\n        difference_2a.difference -> concat_a.list2\n\n        concat_a.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 143, y: -109) length_6b2fcb root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: 10) mod_7d5ebe root.Std_k98ojb.Math.Modulo {}\n        instance(x: 430, y: -109) slice_start_6a2fcb root.Std_k98ojb.List.Slice {}\n        instance(x: 430, y: 10) slice_end_7d5ebe root.Std_k98ojb.List.Slice {}\n        instance(x: 580, y: -112) concat_6a2fcb root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_6b2fcb.list\n        n_68068c -> mod_7d5ebe.value\n        length_6b2fcb.length -> mod_7d5ebe.divisor\n        list_48148f -> slice_start_6a2fcb.list\n        list_48148f -> slice_end_7d5ebe.list\n        length_6b2fcb.length -> slice_end_7d5ebe.start\n        mod_7d5ebe.result -> slice_start_6a2fcb.end\n        mod_7d5ebe.result -> slice_end_7d5ebe.end\n        -1 -> slice_end_7d5ebe.start\n        slice_start_6a2fcb.slice -> concat_6a2fcb.left\n        slice_end_7d5ebe.slice -> concat_6a2fcb.right\n        concat_6a2fcb.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -100) reduce_7b7d6e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 250, y: -100) add_3c4d5a root.Std_k98ojb.Math.Add {}\n        setter(x: 400, y: -100, name: \"setter_7f6e2c\") setter_7f6e2c = sum\n        0 -> reduce_7b7d6e.accumulator\n        list_2c62ab -> reduce_7b7d6e.items\n        reduce_7b7d6e.result -> sum_2a848f\n        add_3c4d5a.result -> setter_7f6e2c.new_value\n        reduce_7b7d6e.execute -> add_3c4d5a.execute\n        reduce_7b7d6e.accumulator -> add_3c4d5a.first\n        reduce_7b7d6e.item -> add_3c4d5a.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 185, y: -126) generate_range_7d2e6c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 362, y: -101) for_loop_3f1d5a root.Std_k98ojb.Std.For {}\n        instance(x: 548, y: -76) mod_5e8c8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 725, y: -51) equal_3d0a7f root.Std_k98ojb.Logic.Equal {}\n        instance(x: 902, y: -26) if_statement_4e2c1c root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> generate_range_7d2e6c.to\n        2 -> generate_range_7d2e6c.from\n\n        execute_b7b391 -> for_loop_3f1d5a.reset\n        generate_range_7d2e6c.list -> for_loop_3f1d5a.items\n\n        num_5c0677 -> mod_5e8c8b.value\n        for_loop_3f1d5a.item -> mod_5e8c8b.divisor\n\n        mod_5e8c8b.result -> equal_3d0a7f.left\n        0 -> equal_3d0a7f.right\n\n        equal_3d0a7f.result -> if_statement_4e2c1c.predicate\n        for_loop_3f1d5a.onItem -> if_statement_4e2c1c.execute\n\n        if_statement_4e2c1c.then -> continue_9a54bb\n        false -> output_c457b3\n\n        if_statement_4e2c1c.else -> for_loop_3f1d5a.next\n\n        for_loop_3f1d5a.done -> func() {\n            in(x: 0, y: 0) num property(Number)\n            out(x: 0, y: 0) is_prime property(Bool)\n\n            instance(x: 0, y: 0) equal_2 root.Std_k98ojb.Logic.Equal {}\n            num -> equal_2.left\n            1 -> equal_2.right\n\n            equal_2.result -> if_statement_2 root.Std_k98ojb.Std.If {}\n\n            if_statement_2.then -> is_prime\n            false -> is_prime\n\n            if_statement_2.else -> continue_9a54bb\n            true -> output_c457b3\n        }\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2d1b0c root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2d1b0c.first\n        y_5390f5 -> mul_2d1b0c.second\n\n        instance(x: -74, y: -176) less_than_or_equal_0 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2d1b0c.result -> less_than_or_equal_0.left\n        0 -> less_than_or_equal_0.right\n\n        instance(x: 54, y: -176) not_3a2e1f root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_0.output -> not_3a2e1f.input\n\n        not_3a2e1f.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b8d.value\n        11 -> modulo_5a7b8d.divisor\n        modulo_5a7b8d.result -> equal_7c3e2b.left\n        0 -> equal_7c3e2b.right\n        equal_7c3e2b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 104, y: 129) concat_ae root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_ae.list1\n        difference_2a.difference -> concat_ae.list2\n\n        concat_ae.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2b1d6a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -110) modulo_2c1f6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 340, y: -110) sub_3d1e6a root.Std_k98ojb.Math.Sub {}\n        instance(x: 520, y: -110) slice_7c1f6a root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: -40) slice_7d1e6a root.Std_k98ojb.List.Slice {}\n        instance(x: 630, y: -75) concat_7c1f6a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2b1d6a.list\n        n_68068c -> modulo_2c1f6e.value\n        length_2b1d6a.length -> modulo_2c1f6e.divisor\n        length_2b1d6a.length -> sub_3d1e6a.first\n        modulo_2c1f6e.result -> sub_3d1e6a.second\n        list_48148f -> slice_7c1f6a.list\n        sub_3d1e6a.result -> slice_7c1f6a.start\n        -1 -> slice_7c1f6a.end\n        list_48148f -> slice_7d1e6a.list\n        0 -> slice_7d1e6a.start\n        sub_3d1e6a.result -> slice_7d1e6a.end\n        slice_7c1f6a.slice -> concat_7c1f6a.right\n        slice_7d1e6a.slice -> concat_7c1f6a.left\n        concat_7c1f6a.concatenatedList -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -112) reduce_2b5d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 367, y: -112) add_2c8b1a root.Std_k98ojb.Math.Add {}\n        setter(x: 400, y: -212, name: \"setter_5d6f6e\") setter_5d6f6e = sum\n        0 -> reduce_2b5d1e.initial_value\n        list_2c62ab -> reduce_2b5d1e.items\n        add_2c8b1a.result -> setter_5d6f6e.new_value\n        reduce_2b5d1e.reduce_complete -> setter_5d6f6e.execute\n        setter_5d6f6e.continue -> sum_2a848f\n        add_2c8b1a.first -> reduce_2b5d1e.accumulated_value\n        add_2c8b1a.second -> reduce_2b5d1e.current_value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 182, y: -126) generate_range_0e2d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 374, y: -126) for_loop_7c1f root.Std_k98ojb.Std.For {}\n        instance(x: 566, y: -126) modulo_check_0e2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 758, y: -126) if_statement_0e2d root.Std_k98ojb.Std.If {}\n        instance(x: 950, y: -126) not_equal_check_0e2d root.Std_k98ojb.Logic.NotEqual {}\n\n        num_5c0677 -> generate_range_0e2d.to\n        2 -> generate_range_0e2d.from\n\n        generate_range_0e2d.list -> for_loop_7c1f.items\n        execute_b7b391 -> for_loop_7c1f.reset\n\n        num_5c0677 -> modulo_check_0e2d.value\n        for_loop_7c1f.item -> modulo_check_0e2d.divisor\n\n        modulo_check_0e2d.result -> not_equal_check_0e2d.left\n        0 -> not_equal_check_0e2d.right\n\n        not_equal_check_0e2d.result -> if_statement_0e2d.predicate\n\n        for_loop_7c1f.onItem -> if_statement_0e2d.execute\n\n        if_statement_0e2d.else -> continue_9a54bb\n        false -> output_c457b3\n\n        for_loop_7c1f.done -> if_statement_8c1f.execute\n        num_5c0677 -> if_statement_8c1f.predicate\n        1 -> if_statement_8c1f.left\n        true -> if_statement_8c1f.right\n\n        if_statement_8c1f.then -> continue_9a54bb\n        if_statement_8c1f.value -> output_c457b3\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -164, y: -87) mul_1d1e1b Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1d1e1b.first\n        y_5390f5 -> mul_1d1e1b.second\n\n        instance(x: -4, y: -171) less_than_or_equal_5a8c21 Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1d1e1b.result -> less_than_or_equal_5a8c21.left\n        0 -> less_than_or_equal_5a8c21.right\n\n        instance(x: 143, y: -176) not_9f551a Std_k98ojb.Logic.Not {}\n        less_than_or_equal_5a8c21.result -> not_9f551a.input\n        not_9f551a.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: 75) modulo_0a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 318, y: 75) equal_1c0e4a root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_0a7b2d.value\n        11 -> modulo_0a7b2d.divisor\n        modulo_0a7b2d.result -> equal_1c0e4a.left\n        0 -> equal_1c0e4a.right\n        equal_1c0e4a.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -124, y: 164) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 307, y: 164) reduce_instance root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_instance.trigger\n        reduce_instance.result -> output_cffcc2\n        reduce_instance.done -> continue_45190b\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: -48) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 163) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 50, y: 77) concat_dissimilar root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_dissimilar.list1\n        difference_2a.difference -> concat_dissimilar.list2\n\n        concat_dissimilar.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 149, y: -109) length_4f3d0b root.Std_k98ojb.List.Length {}\n        instance(x: 357, y: -161) mod_1e7a2c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 555, y: -154) slice_0f5d5e root.Std_k98ojb.List.Slice {}\n        instance(x: 354, y: -26) slice_c7a7c6 root.Std_k98ojb.List.Slice {}\n        instance(x: 551, y: -28) concat_0f5d5e root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4f3d0b.list\n        n_68068c -> mod_1e7a2c.value\n        length_4f3d0b.length -> mod_1e7a2c.divisor\n        mod_1e7a2c.result -> slice_0f5d5e.start\n        list_48148f -> slice_0f5d5e.list\n        0 -> slice_c7a7c6.start\n        length_4f3d0b.length -> slice_c7a7c6.end\n        mod_1e7a2c.result -> slice_c7a7c6.start\n        list_48148f -> slice_c7a7c6.list\n        slice_c7a7c6.slice -> concat_0f5d5e.left\n        slice_0f5d5e.slice -> concat_0f5d5e.right\n        concat_0f5d5e.result -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -138) for_1b4d0e root.Std_k98ojb.Std.For {}\n        instance(x: 90, y: -57) add_6d65c8 root.Std_k98ojb.Math.Add {}\n        setter(x: 260, y: -39, name: \"setter_1f4a5e\") setter_1f4a5e = sum\n        getter(x: 457, y: -116, name: \"getter_8c40d4\") getter_8c40d4 = sum\n        instance(x: 90, y: 23) if_f9b3f6 root.Std_k98ojb.Std.If {}\n        setter(x: 572, y: -10, name: \"setter_e5e2a6\") setter_e5e2a6 = sum\n\n        list_2c62ab -> for_1b4d0e.items\n        for_1b4d0e.on_item -> add_6d65c8.execute\n        0 -> setter_1f4a5e.new_value\n        setter_1f4a5e.continue -> if_f9b3f6.execute\n        getter_8c40d4.value -> add_6d65c8.first\n        for_1b4d0e.item -> add_6d65c8.second\n        add_6d65c8.result -> setter_e5e2a6.new_value\n        if_f9b3f6.then -> for_1b4d0e.next\n        if_f9b3f6.else -> sum_2a848f\n        for_1b4d0e.done -> sum_2a848f\n        setter_e5e2a6.continue -> if_f9b3f6.execute\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 282, y: -226) for_0c0f1e root.Std_k98ojb.Std.For {}\n        instance(x: 374, y: -226) lessthanorequal_f2b0d4 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 548, y: -226) mod_1e4c6a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 722, y: -226) equal_e0d0f3 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 896, y: -226) if_5e4c1c root.Std_k98ojb.Std.If {}\n        instance(x: 1070, y: -226) not_c0a3d4 root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> for_0c0f1e.items\n        execute_b7b391 -> for_0c0f1e.reset\n\n        2 -> lessthanorequal_f2b0d4.left\n        for_0c0f1e.index -> lessthanorequal_f2b0d4.right\n        lessthanorequal_f2b0d4.result -> if_5e4c1c.predicate\n\n        num_5c0677 -> mod_1e4c6a.value\n        for_0c0f1e.index -> mod_1e4c6a.divisor\n        mod_1e4c6a.result -> equal_e0d0f3.left\n        0 -> equal_e0d0f3.right\n        equal_e0d0f3.result -> not_c0a3d4.input\n\n        for_0c0f1e.onItem -> if_5e4c1c.execute\n        if_5e4c1c.then -> continue_9a54bb\n        if_5e4c1c.else -> mod_1e4c6a.execute\n        not_c0a3d4.output -> output_c457b3\n\n        for_0c0f1e.done -> continue_9a54bb\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -184, y: -176) expression_4e0cdd root.Std_k98ojb.Math.Expression {\n            expression: \"(x > 0 && y < 0) || (x < 0 && y > 0)\"\n        }\n        x_853326 -> expression_4e0cdd.gen_x\n        y_5390f5 -> expression_4e0cdd.gen_y\n        expression_4e0cdd.result -> output_3339a3\n    }\n\n    instance(x: 178, y: -26) opposite_signs_4b7d9c root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 184, y: -102) modulo_d5b8a6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 402, y: -72) equal_8d9ebe root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_d5b8a6.value\n        11 -> modulo_d5b8a6.divisor\n        modulo_d5b8a6.result -> equal_8d9ebe.left\n        0 -> equal_8d9ebe.right\n        equal_8d9ebe.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_7a9f9c root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9f9c.input\n        search_ai -> replace_7a9f9c.search\n        replace_ai -> replace_7a9f9c.replace\n        replace_7a9f9c.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -175, y: 209) toLower_5b4d6c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> toLower_5b4d6c.input\n        instance(x: 364, y: 209) equal_1f4a7a root.Std_k98ojb.Logic.Equal {}\n        toLower_5b4d6c.output -> equal_1f4a7a.left\n        input_ai -> equal_1f4a7a.right\n        equal_1f4a7a.result -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: -100, y: 100) sets_intersection root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n        instance(x: 100, y: 200) unique_list root.List.RemoveDuplicates {\n            inputList: sets_intersection.intersection\n        }\n        instance(x: 300, y: 300) product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_list.outputList\n            reducer: \"a * b\"\n            initial: 1\n        }\n        execute_19300c -> product.trigger\n        product.result -> output_cffcc2\n        product.done -> continue_45190b\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: 159) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 253) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 206) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 214, y: -109) length_6d1e1a root.Std_k98ojb.List.Length {}\n        instance(x: 557, y: -114) modulo_b2f9c6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 325, y: 102) slice_4e8d8b root.Std_k98ojb.List.Slice {}\n        instance(x: 325, y: -37) slice_63a92f root.Std_k98ojb.List.Slice {}\n        instance(x: 554, y: 107) concat_b9e2d3 root.Std_k98ojb.List.Concat {}\n        \n        list_48148f -> length_6d1e1a.list\n        n_68068c -> modulo_b2f9c6.value\n        length_6d1e1a.length -> modulo_b2f9c6.divisor\n        list_48148f -> slice_4e8d8b.list\n        list_48148f -> slice_63a92f.list\n        length_6d1e1a.length -> slice_63a92f.end\n        modulo_b2f9c6.result -> slice_4e8d8b.start\n        length_6d1e1a.length -> slice_4e8d8b.end\n        Math.Sub(left: 0, right: modulo_b2f9c6.result) -> slice_63a92f.start\n        slice_4e8d8b.slice -> concat_b9e2d3.left\n        slice_63a92f.slice -> concat_b9e2d3.right\n        concat_b9e2d3.list -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -96, y: -102) for_0e70b1 root.Std_k98ojb.Std.For {}\n        setter(x: 356, y: -162, name: \"setter_7c1d7a\") setter_7c1d7a = sum\n        instance(x: 402, y: -32) add_0e9f8b root.Std_k98ojb.Math.Add {}\n        getter(x: 561, y: -38, name: \"getter_e3320a\") getter_e3320a = sum\n        instance(x: -177, y: -249) setter_7c1d7b root.Std_k98ojb.Math.Sub {}\n        0 -> setter_7c1d7b.first\n        list_2c62ab -> for_0e70b1.items\n        0 -> setter_7c1d7a.new_value\n        setter_7c1d7a.continue -> for_0e70b1.trigger\n        for_0e70b1.on item -> add_0e9f8b.first\n        getter_e3320a.value -> add_0e9f8b.second\n        add_0e9f8b.result -> setter_7c1d7a.new_value\n        setter_7c1d7a.continue -> for_0e70b1.next\n        for_0e70b1.done -> setter_7c1d7b.second\n        setter_7c1d7b.result -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 80, y: -120) lessthanorequal_6f2eac root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 347, y: -150) if_1d0c2a root.Std_k98ojb.Std.If {}\n        instance(x: 540, y: -166) generateRange_f55e1f root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 733, y: -150) for_2d9a8c root.Std_k98ojb.Std.For {}\n        instance(x: 926, y: -150) mod_b4e0f9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1119, y: -150) equal_73a8c8 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1216, y: -324) if_9d4f8e root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_6f2eac.left\n        2 -> lessthanorequal_6f2eac.right\n        lessthanorequal_6f2eac.result -> if_1d0c2a.predicate\n        execute_b7b391 -> if_1d0c2a.execute\n        if_1d0c2a.then -> continue_9a54bb\n        num_5c0677 -> generateRange_f55e1f.to\n        2 -> generateRange_f55e1f.from\n        generateRange_f55e1f.list -> for_2d9a8c.items\n        if_1d0c2a.else -> for_2d9a8c.reset\n\n        num_5c0677 -> mod_b4e0f9.left\n        for_2d9a8c.item -> mod_b4e0f9.right\n        mod_b4e0f9.result -> equal_73a8c8.left\n        0 -> equal_73a8c8.right\n        equal_73a8c8.result -> if_9d4f8e.predicate\n        for_2d9a8c.onItem -> if_9d4f8e.execute\n\n        if_9d4f8e.then -> continue_9a54bb\n        false -> if_9d4f8e.value\n        true -> if_1d0c2a.value\n        for_2d9a8c.done -> if_9d4f8e.else\n        true -> if_9d4f8e.value\n\n        output_c457b3 <- if_9d4f8e.value\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2c2b0d root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2c2b0d.first\n        y_5390f5 -> mul_2c2b0d.second\n\n        instance(x: -147, y: -176) less_than_or_equal_2e2a1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2c2b0d.result -> less_than_or_equal_2e2a1a.left\n        0 -> less_than_or_equal_2e2a1a.right\n\n        instance(x: -46, y: -176) not_5f389b root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_2e2a1a.result -> not_5f389b.input\n        not_5f389b.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b2d.value\n        11 -> modulo_5a7b2d.divisor\n        modulo_5a7b2d.result -> equal_7c3e2c.left\n        0 -> equal_7c3e2c.right\n        equal_7c3e2c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_3f3b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3f3b.input\n        search_ai -> replace_3f3b.search\n        replace_ai -> replace_3f3b.replace\n        replace_3f3b.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 34, y: 129) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2e2b1a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -168) modulo_2d6fbb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 342, y: -109) sub_4c3e5a root.Std_k98ojb.Math.Sub {}\n        instance(x: 527, y: -110) slice_6d5f6a root.Std_k98ojb.List.Slice {}\n        instance(x: 527, y: -168) slice_4c3e5a root.Std_k98ojb.List.Slice {}\n        instance(x: 692, y: -110) concat_4c3e5a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2e2b1a.list\n        n_68068c -> modulo_2d6fbb.value\n        length_2e2b1a.length -> modulo_2d6fbb.divisor\n        length_2e2b1a.length -> sub_4c3e5a.first\n        modulo_2d6fbb.result -> sub_4c3e5a.second\n        list_48148f -> slice_6d5f6a.list\n        sub_4c3e5a.result -> slice_6d5f6a.start\n        length_2e2b1a.length -> slice_6d5f6a.end\n        list_48148f -> slice_4c3e5a.list\n        0 -> slice_4c3e5a.start\n        sub_4c3e5a.result -> slice_4c3e5a.end\n        slice_6d5f6a.slice -> concat_4c3e5a.left\n        slice_4c3e5a.slice -> concat_4c3e5a.right\n        concat_4c3e5a.concatenatedList -> output_823209\n    }\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -114) reduce_2b3d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 356, y: -71) add_2c3d1e root.Std_k98ojb.Math.Add {}\n        setter(x: 350, y: 149, name: \"setter_2a848f\") setter_2a848f = sum\n        list_2c62ab -> reduce_2b3d1e.items\n        0 -> reduce_2b3d1e.accumulator\n        reduce_2b3d1e.accumulate -> add_2c3d1e.first\n        reduce_2b3d1e.value -> add_2c3d1e.second\n        add_2c3d1e.result -> setter_2a848f.new_value\n        setter_2a848f.continue -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 182, y: -126) generate_range_0e2d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 374, y: -126) for_loop_7c8f root.Std_k98ojb.Std.For {}\n        instance(x: 566, y: -126) modulo_check_0e2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 758, y: -126) if_statement_7c8f root.Std_k98ojb.Std.If {}\n        instance(x: 950, y: -126) not_equal_check_7c8f root.Std_k98ojb.Logic.NotEqual {}\n\n        num_5c0677 -> generate_range_0e2d.to\n        2 -> generate_range_0e2d.from\n\n        generate_range_0e2d.list -> for_loop_7c8f.items\n        execute_b7b391 -> for_loop_7c8f.reset\n\n        num_5c0677 -> modulo_check_0e2d.value\n        for_loop_7c8f.item -> modulo_check_0e2d.divisor\n\n        modulo_check_0e2d.result -> not_equal_check_7c8f.left\n        0 -> not_equal_check_7c8f.right\n\n        not_equal_check_7c8f.result -> if_statement_7c8f.predicate\n        for_loop_7c8f.onItem -> if_statement_7c8f.execute\n\n        if_statement_7c8f.else -> continue_9a54bb\n        if_statement_7c8f.value -> output_c457b3\n\n        for_loop_7c8f.done -> if_statement_7c8f.then\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -164, y: -87) mul_1d10c5 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1d10c5.first\n        y_5390f5 -> mul_1d10c5.second\n\n        instance(x: -14, y: -178) lessthanorequal_c24e4b root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1d10c5.result -> lessthanorequal_c24e4b.left\n        0 -> lessthanorequal_c24e4b.right\n\n        instance(x: 136, y: -179) not_8f5a45 root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_c24e4b.result -> not_8f5a45.input\n        not_8f5a45.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: 75) modulo_0a7bcb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 315, y: 100) equal_3c0e0d root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_0a7bcb.value\n        11 -> modulo_0a7bcb.divisor\n        modulo_0a7bcb.result -> equal_3c0e0d.left\n        0 -> equal_3c0e0d.right\n        equal_3c0e0d.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -124, y: 164) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 307, y: 164) reduce_instance root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_instance.trigger\n        reduce_instance.result -> output_cffcc2\n        reduce_instance.done -> continue_45190b\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: -48) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 163) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 50, y: 77) concat_dissimilar root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_dissimilar.list1\n        difference_2a.difference -> concat_dissimilar.list2\n\n        concat_dissimilar.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 149, y: -109) length_4f4d3b root.Std_k98ojb.List.Length {}\n        instance(x: 357, y: -161) mod_1a8e5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 211, y: -20) slice_4d50f4 root.Std_k98ojb.List.Slice {}\n        instance(x: 357, y: 56) slice_1d5c25 root.Std_k98ojb.List.Slice {}\n        instance(x: 512, y: -41) concat_1d0b5f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4f4d3b.list\n        n_68068c -> mod_1a8e5a.value\n        length_4f4d3b.length -> mod_1a8e5a.divisor\n        mod_1a8e5a.result -> slice_4d50f4.start\n        0 -> slice_4d50f4.end\n        list_48148f -> slice_4d50f4.list\n        length_4f4d3b.length -> slice_1d5c25.start\n        mod_1a8e5a.result -> slice_1d5c25.end\n        list_48148f -> slice_1d5c25.list\n        slice_1d5c25.slice -> concat_1d0b5f.left\n        slice_4d50f4.slice -> concat_1d0b5f.right\n        concat_1d0b5f.result -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -138) for_1b4d4e root.Std_k98ojb.Std.For {}\n        instance(x: 90, y: -57) add_63c672 root.Std_k98ojb.Math.Add {}\n        setter(x: 258, y: -116, name: \"setter_4d10a4\") setter_4d10a4 = sum\n        getter(x: 420, y: -137, name: \"getter_4b5e9c\") getter_4b5e9c = sum\n\n        list_2c62ab -> for_1b4d4e.items\n        0 -> setter_4d10a4.new_value\n        setter_4d10a4.continue -> for_1b4d4e.trigger\n        for_1b4d4e.on_item -> add_63c672.first\n        getter_4b5e9c.value -> add_63c672.second\n        add_63c672.result -> setter_4d10a4.new_value\n        for_1b4d4e.done -> setter_4d10a4.continue\n        getter_4b5e9c.value -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 282, y: -226) for_0c7f6e root.Std_k98ojb.Std.For {}\n        instance(x: 374, y: -21) math_expression_2f4b7d root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 566, y: -21) if_8c3a6e root.Std_k98ojb.Std.If {}\n        instance(x: 758, y: -21) and_bf4d9f root.Std_k98ojb.Logic.And {}\n        instance(x: 950, y: -21) if_5a3c7e root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> for_0c7f6e.items\n        execute_b7b391 -> for_0c7f6e.reset\n\n        2 -> for_0c7f6e.from\n        num_5c0677 -> for_0c7f6e.to\n\n        for_0c7f6e.item -> math_expression_2f4b7d.gen_1\n        num_5c0677 -> math_expression_2f4b7d.gen_0\n\n        math_expression_2f4b7d.result -> if_8c3a6e.predicate\n        for_0c7f6e.onItem -> if_8c3a6e.execute\n\n        false -> and_bf4d9f.left\n        true -> and_bf4d9f.right\n        if_8c3a6e.value -> and_bf4d9f.right\n\n        and_bf4d9f.result -> if_5a3c7e.predicate\n        if_8c3a6e.then -> if_5a3c7e.execute\n\n        for_0c7f6e.done -> continue_9a54bb\n        if_5a3c7e.else -> continue_9a54bb\n\n        false -> output_c457b3\n        true -> output_c457b3\n        if_5a3c7e.value -> output_c457b3\n\n        for_0c7f6e.next -> if_8c3a6e.else\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -184, y: -176) expression_34d3c0 root.Std_k98ojb.Math.Expression {\n            expression: \"(x > 0 && y < 0) || (x < 0 && y > 0)\"\n        }\n        x_853326 -> expression_34d3c0.x\n        y_5390f5 -> expression_34d3c0.y\n        expression_34d3c0.result -> output_3339a3\n    }\n\n    instance(x: 178, y: -263) opposite_signs_2b2e23 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 184, y: -102) modulo_d5b7a6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -102) equal_6d72c8 root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_d5b7a6.value\n        11 -> modulo_d5b7a6.divisor\n        modulo_d5b7a6.result -> equal_6d72c8.left\n        0 -> equal_6d72c8.right\n        equal_6d72c8.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_7a9f2b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9f2b.input\n        search_ai -> replace_7a9f2b.search\n        replace_ai -> replace_7a9f2b.replace\n        replace_7a9f2b.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -175, y: 209) toLower_0f4b0c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> toLower_0f4b0c.input\n        instance(x: 326, y: 209) equal_4d1a7e root.Std_k98ojb.Logic.Equal {}\n        toLower_0f4b0c.output -> equal_4d1a7e.left\n        input_ai -> equal_4d1a7e.right\n        equal_4d1a7e.result -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: -100, y: 100) sets_intersection root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n        instance(x: 100, y: 200) unique_list root.List.RemoveDuplicates {\n            inputList: sets_intersection.intersection\n        }\n        instance(x: 300, y: 300) product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_list.outputList\n            reducer: \"a * b\"\n            initial: 1\n        }\n        execute_19300c -> product.trigger\n        product.result -> output_cffcc2\n        product.done -> continue_45190b\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: 159) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 253) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 206) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 214, y: -109) length_eb0fbb root.Std_k98ojb.List.Length {}\n        instance(x: 451, y: -26) modulo_b7a10c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 313, y: 115) sub_5e59d2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 450, y: 261) slice_a6a7ce root.Std_k98ojb.List.Slice {}\n        instance(x: 453, y: 108) slice_3c10ae root.Std_k98ojb.List.Slice {}\n        instance(x: 599, y: -25) concat_f2f737 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_eb0fbb.list\n        n_68068c -> modulo_b7a10c.value\n        length_eb0fbb.length -> modulo_b7a10c.divisor\n        modulo_b7a10c.result -> sub_5e59d2.second\n        length_eb0fbb.length -> sub_5e59d2.first\n        list_48148f -> slice_a6a7ce.list\n        0 -> slice_a6a7ce.start\n        sub_5e59d2.result -> slice_a6a7ce.end\n        list_48148f -> slice_3c10ae.list\n        sub_5e59d2.result -> slice_3c10ae.start\n        -1 -> slice_3c10ae.end\n        slice_3c10ae.slice -> concat_f2f737.left\n        slice_a6a7ce.slice -> concat_f2f737.right\n        concat_f2f737.result -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -96, y: -102) for_loop_eb23d3 root.Std_k98ojb.Std.For {}\n        setter(x: 358, y: -72, name: \"setter_sum\") setter_sum = sum\n        getter(x: 484, y: -168, name: \"getter_sum\") getter_sum = sum\n        instance(x: 199, y: -150) add_item_3a3e4b root.Std_k98ojb.Math.Add {}\n        \n        list_2c62ab -> for_loop_eb23d3.items\n        0 -> setter_sum.new_value\n        setter_sum.continue -> for_loop_eb23d3.trigger\n        \n        getter_sum.value -> add_item_3a3e4b.first\n        for_loop_eb23d3.item -> add_item_3a3e4b.second\n        add_item_3a3e4b.result -> setter_sum.new_value\n        setter_sum.continue -> for_loop_eb23d3.next\n        \n        for_loop_eb23d3.done -> getter_sum.execute\n        getter_sum.value -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 80, y: -120) lessthanorequal_6f4dfe root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 230, y: -20) generaterange_b7c2e5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 410, y: -20) for_6a21f7 root.Std_k98ojb.Std.For {}\n        instance(x: 630, y: -20) modulo_e9d2af root.Std_k98ojb.Math.Modulo {}\n        instance(x: 850, y: -20) equal_4e51ca root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1070, y: -20) if_8c3d6a root.Std_k98ojb.Std.If {}\n\n        execute_b7b391 -> lessthanorequal_6f4dfe.execute\n        num_5c0677 -> lessthanorequal_6f4dfe.left\n        2 -> lessthanorequal_6f4dfe.right\n\n        lessthanorequal_6f4dfe.result -> if_8c3d6a.predicate\n        if_8c3d6a.else -> generaterange_b7c2e5.trigger\n        num_5c0677 -> generaterange_b7c2e5.to\n        2 -> generaterange_b7c2e5.from\n\n        generaterange_b7c2e5.list -> for_6a21f7.items\n        for_6a21f7.trigger -> if_8c3d6a.else\n        for_6a21f7.item -> modulo_e9d2af.value\n        num_5c0677 -> modulo_e9d2af.divisor\n\n        modulo_e9d2af.result -> equal_4e51ca.left\n        0 -> equal_4e51ca.right\n\n        equal_4e51ca.result -> if_8c3d6a.predicate\n        if_8c3d6a.then -> continue_9a54bb\n        if_8c3d6a.value -> output_c457b3\n        for_6a21f7.done -> if_8c3d6a.else\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2c2b0d root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2c2b0d.first\n        y_5390f5 -> mul_2c2b0d.second\n\n        instance(x: -147, y: -176) less_than_or_equal_2e2a1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2c2b0d.result -> less_than_or_equal_2e2a1a.left\n        0 -> less_than_or_equal_2e2a1a.right\n\n        instance(x: -46, y: -176) not_5f389b root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_2e2a1a.result -> not_5f389b.input\n        not_5f389b.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b2d.value\n        11 -> modulo_5a7b2d.divisor\n        modulo_5a7b2d.result -> equal_7c3e2c.left\n        0 -> equal_7c3e2c.right\n        equal_7c3e2c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_3f3b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3f3b.input\n        search_ai -> replace_3f3b.search\n        replace_ai -> replace_3f3b.replace\n        replace_3f3b.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 34, y: 129) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2e2b1a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -168) modulo_2d6fbb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 342, y: -109) sub_4c3e5a root.Std_k98ojb.Math.Sub {}\n        instance(x: 527, y: -110) slice_6d5f6a root.Std_k98ojb.List.Slice {}\n        instance(x: 527, y: -168) slice_4c3e5a root.Std_k98ojb.List.Slice {}\n        instance(x: 692, y: -110) concat_4c3e5a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2e2b1a.list\n        n_68068c -> modulo_2d6fbb.value\n        length_2e2b1a.length -> modulo_2d6fbb.divisor\n        length_2e2b1a.length -> sub_4c3e5a.first\n        modulo_2d6fbb.result -> sub_4c3e5a.second\n        list_48148f -> slice_6d5f6a.list\n        sub_4c3e5a.result -> slice_6d5f6a.start\n        length_2e2b1a.length -> slice_6d5f6a.end\n        list_48148f -> slice_4c3e5a.list\n        0 -> slice_4c3e5a.start\n        sub_4c3e5a.result -> slice_4c3e5a.end\n        slice_6d5f6a.slice -> concat_4c3e5a.left\n        slice_4c3e5a.slice -> concat_4c3e5a.right\n        concat_4c3e5a.concatenatedList -> output_823209\n    }\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -114) reduce_2b3d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 356, y: -71) add_2c3d1e root.Std_k98ojb.Math.Add {}\n        setter(x: 350, y: 149, name: \"setter_2a848f\") setter_2a848f = sum\n        list_2c62ab -> reduce_2b3d1e.items\n        0 -> reduce_2b3d1e.accumulator\n        reduce_2b3d1e.accumulate -> add_2c3d1e.first\n        reduce_2b3d1e.value -> add_2c3d1e.second\n        add_2c3d1e.result -> setter_2a848f.new_value\n        setter_2a848f.continue -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 182, y: -126) generate_range_0e2d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 374, y: -126) for_loop_7c8f root.Std_k98ojb.Std.For {}\n        instance(x: 566, y: -126) modulo_check_0e2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 758, y: -126) if_statement_7c8f root.Std_k98ojb.Std.If {}\n        instance(x: 950, y: -126) not_equal_check_7c8f root.Std_k98ojb.Logic.NotEqual {}\n\n        num_5c0677 -> generate_range_0e2d.to\n        2 -> generate_range_0e2d.from\n\n        generate_range_0e2d.list -> for_loop_7c8f.items\n        execute_b7b391 -> for_loop_7c8f.reset\n\n        num_5c0677 -> modulo_check_0e2d.value\n        for_loop_7c8f.item -> modulo_check_0e2d.divisor\n\n        modulo_check_0e2d.result -> not_equal_check_7c8f.left\n        0 -> not_equal_check_7c8f.right\n\n        not_equal_check_7c8f.result -> if_statement_7c8f.predicate\n        for_loop_7c8f.onItem -> if_statement_7c8f.execute\n\n        if_statement_7c8f.else -> continue_9a54bb\n        if_statement_7c8f.value -> output_c457b3\n\n        for_loop_7c8f.done -> if_statement_7c8f.then\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -164, y: -87) mul_1d13c5 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1d13c5.first\n        y_5390f5 -> mul_1d13c5.second\n\n        instance(x: -14, y: -178) lessthanorequal_7a1eac root.Std_k98ojb.Math.LessThanOrEqual {\n            right: 0\n        }\n        mul_1d13c5.result -> lessthanorequal_7a1eac.left\n\n        instance(x: 142, y: -167) not_2b2d19 root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_7a1eac.result -> not_2b2d19.input\n\n        not_2b2d19.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 146, y: 75) modulo_0a7d8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 318, y: 75) equal_1c053e root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_0a7d8b.value\n        11 -> modulo_0a7d8b.divisor\n        modulo_0a7d8b.result -> equal_1c053e.left\n        0 -> equal_1c053e.right\n        equal_1c053e.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 772, y: 76) tolower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -124, y: 164) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 307, y: 164) reduce_instance root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_instance.trigger\n        reduce_instance.result -> output_cffcc2\n        reduce_instance.done -> continue_45190b\n    }\n    \n\n    instance(x: -34, y: 127) unique_product_node root.main.unique_product {}\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: -48) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 163) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 50, y: 77) concat_dissimilar root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_dissimilar.list1\n        difference_2a.difference -> concat_dissimilar.list2\n\n        concat_dissimilar.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 149, y: -109) length_4f4d3b root.Std_k98ojb.List.Length {}\n        instance(x: 357, y: -161) mod_1a8e5a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 211, y: -20) slice_4d54f4 root.Std_k98ojb.List.Slice {}\n        instance(x: 357, y: 56) slice_85c2a2 root.Std_k98ojb.List.Slice {}\n        instance(x: 512, y: -105) concat_3e0d4f root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4f4d3b.list\n        n_68068c -> mod_1a8e5a.value\n        length_4f4d3b.length -> mod_1a8e5a.divisor\n        list_48148f -> slice_4d54f4.list\n        mod_1a8e5a.result -> slice_4d54f4.start\n        -1 -> slice_4d54f4.end\n        list_48148f -> slice_85c2a2.list\n        0 -> slice_85c2a2.start\n        mod_1a8e5a.result -> slice_85c2a2.end\n        slice_4d54f4.slice -> concat_3e0d4f.right\n        slice_85c2a2.slice -> concat_3e0d4f.left\n        concat_3e0d4f.result -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -138) for_1b4eac root.Std_k98ojb.Std.For {}\n        instance(x: 90, y: -75) add_6d4c8c root.Std_k98ojb.Math.Add {}\n        setter(x: 245, y: -135, name: \"setter_3a7f8e\") setter_3a7f8e = sum\n        getter(x: 400, y: -75, name: \"getter_e694b6\") getter_e694b6 = sum\n        instance(x: 245, y: -192) floor_3d11a2 root.Std_k98ojb.Math.Floor {}\n        0 -> setter_3a7f8e.new_value\n        list_2c62ab -> for_1b4eac.items\n        for_1b4eac.trigger -> setter_3a7f8e.execute\n        setter_3a7f8e.continue -> add_6d4c8c.execute\n        getter_e694b6.value -> add_6d4c8c.first\n        for_1b4eac.item -> floor_3d11a2.input\n        floor_3d11a2.output -> add_6d4c8c.second\n        add_6d4c8c.result -> setter_3a7f8e.new_value\n        for_1b4eac.done -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 282, y: -226) for_0c7f6e root.Std_k98ojb.Std.For {}\n        instance(x: 374, y: -21) math_expression_2f4b7d root.Std_k98ojb.Math.Expression {\n            expression: \"num % i == 0\"\n        }\n        instance(x: 566, y: -21) if_8c3a6e root.Std_k98ojb.Std.If {}\n        instance(x: 758, y: -21) and_bf4d9f root.Std_k98ojb.Logic.And {}\n        instance(x: 950, y: -21) if_5a3c7e root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> for_0c7f6e.items\n        execute_b7b391 -> for_0c7f6e.reset\n\n        2 -> for_0c7f6e.from\n        num_5c0677 -> for_0c7f6e.to\n\n        for_0c7f6e.item -> math_expression_2f4b7d.gen_1\n        num_5c0677 -> math_expression_2f4b7d.gen_0\n\n        math_expression_2f4b7d.result -> if_8c3a6e.predicate\n        for_0c7f6e.onItem -> if_8c3a6e.execute\n\n        false -> and_bf4d9f.left\n        true -> and_bf4d9f.right\n        if_8c3a6e.value -> and_bf4d9f.right\n\n        and_bf4d9f.result -> if_5a3c7e.predicate\n        if_8c3a6e.then -> if_5a3c7e.execute\n\n        for_0c7f6e.done -> continue_9a54bb\n        if_5a3c7e.else -> continue_9a54bb\n\n        false -> output_c457b3\n        true -> output_c457b3\n        if_5a3c7e.value -> output_c457b3\n\n        for_0c7f6e.next -> if_8c3a6e.else\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.6,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -184, y: -176) expression_34d3c0 root.Std_k98ojb.Math.Expression {\n            expression: \"(x > 0 && y < 0) || (x < 0 && y > 0)\"\n        }\n        x_853326 -> expression_34d3c0.x\n        y_5390f5 -> expression_34d3c0.y\n        expression_34d3c0.result -> output_3339a3\n    }\n\n    instance(x: 178, y: -263) opposite_signs_2b2e23 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 184, y: -102) modulo_d5b7a6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 400, y: -102) equal_6d72c8 root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_d5b7a6.value\n        11 -> modulo_d5b7a6.divisor\n        modulo_d5b7a6.result -> equal_6d72c8.left\n        0 -> equal_6d72c8.right\n        equal_6d72c8.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_7a9f2b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_7a9f2b.input\n        search_ai -> replace_7a9f2b.search\n        replace_ai -> replace_7a9f2b.replace\n        replace_7a9f2b.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -175, y: 209) toLower_0f4b0c root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> toLower_0f4b0c.input\n        instance(x: 326, y: 209) equal_4d1a7e root.Std_k98ojb.Logic.Equal {}\n        toLower_0f4b0c.output -> equal_4d1a7e.left\n        input_ai -> equal_4d1a7e.right\n        equal_4d1a7e.result -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: -100, y: 100) sets_intersection root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n        instance(x: 100, y: 200) unique_list root.List.RemoveDuplicates {\n            inputList: sets_intersection.intersection\n        }\n        instance(x: 300, y: 300) product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_list.outputList\n            reducer: \"a * b\"\n            initial: 1\n        }\n        execute_19300c -> product.trigger\n        product.result -> output_cffcc2\n        product.done -> continue_45190b\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: 159) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 253) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: -105, y: 206) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 214, y: -109) length_eb0fbb root.Std_k98ojb.List.Length {}\n        instance(x: 451, y: -26) modulo_b7a10c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 313, y: 115) sub_5e59d2 root.Std_k98ojb.Math.Sub {}\n        instance(x: 450, y: 261) slice_a6a7fe root.Std_k98ojb.List.Slice {}\n        instance(x: 453, y: 108) slice_3c10ab root.Std_k98ojb.List.Slice {}\n        instance(x: 599, y: -28) concat_f2f787 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_eb0fbb.list\n        n_68068c -> modulo_b7a10c.value\n        length_eb0fbb.length -> modulo_b7a10c.divisor\n        modulo_b7a10c.result -> sub_5e59d2.second\n        length_eb0fbb.length -> sub_5e59d2.first\n        list_48148f -> slice_a6a7fe.list\n        0 -> slice_a6a7fe.start\n        sub_5e59d2.result -> slice_a6a7fe.end\n        list_48148f -> slice_3c10ab.list\n        sub_5e59d2.result -> slice_3c10ab.start\n        -1 -> slice_3c10ab.end\n        slice_a6a7fe.slice -> concat_f2f787.left\n        slice_3c10ab.slice -> concat_f2f787.right\n        concat_f2f787.result -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -96, y: -102) for_loop_eb23d3 root.Std_k98ojb.Std.For {}\n        setter(x: 358, y: -72, name: \"setter_sum\") setter_sum = sum\n        getter(x: 484, y: -168, name: \"getter_sum\") getter_sum = sum\n        instance(x: 199, y: -150) add_item_3a3e4b root.Std_k98ojb.Math.Add {}\n        \n        list_2c62ab -> for_loop_eb23d3.items\n        0 -> setter_sum.new_value\n        setter_sum.continue -> for_loop_eb23d3.trigger\n        \n        getter_sum.value -> add_item_3a3e4b.first\n        for_loop_eb23d3.item -> add_item_3a3e4b.second\n        add_item_3a3e4b.result -> setter_sum.new_value\n        setter_sum.continue -> for_loop_eb23d3.next\n        \n        for_loop_eb23d3.done -> getter_sum.execute\n        getter_sum.value -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 80, y: -120) lessthanorequal_6f4dfe root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 230, y: -20) generaterange_b7c2e5 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 410, y: -20) for_6a21f7 root.Std_k98ojb.Std.For {}\n        instance(x: 630, y: -20) modulo_ebf1c9 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 850, y: -20) equal_4d6bda root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1070, y: -20) if_9e3c6a root.Std_k98ojb.Std.If {}\n\n        num_5c0677 -> lessthanorequal_6f4dfe.right\n        2 -> lessthanorequal_6f4dfe.left\n\n        lessthanorequal_6f4dfe.result -> if_9e3c6a.predicate\n        execute_b7b391 -> if_9e3c6a.execute\n\n        num_5c0677 -> generaterange_b7c2e5.to\n        2 -> generaterange_b7c2e5.from\n\n        generaterange_b7c2e5.list -> for_6a21f7.items\n        execute_b7b391 -> for_6a21f7.trigger\n\n        num_5c0677 -> modulo_ebf1c9.value\n        for_6a21f7.item -> modulo_ebf1c9.divisor\n\n        modulo_ebf1c9.result -> equal_4d6bda.left\n        0 -> equal_4d6bda.right\n\n        equal_4d6bda.result -> if_9e3c6a.predicate\n\n        for_6a21f7.onItem -> if_9e3c6a.execute\n\n        false -> output_c457b3\n        true -> continue_9a54bb\n\n        if_9e3c6a.else -> for_6a21f7.next\n        if_9e3c6a.then -> continue_9a54bb\n\n        for_6a21f7.done -> if_9e3c6a.execute\n\n        true -> output_c457b3\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2d1b0c root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2d1b0c.first\n        y_5390f5 -> mul_2d1b0c.second\n\n        instance(x: -74, y: -176) less_than_or_equal_0 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2d1b0c.result -> less_than_or_equal_0.left\n        0 -> less_than_or_equal_0.right\n\n        instance(x: 54, y: -176) not_3a7e1f root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_0.output -> not_3a7e1f.input\n\n        not_3a7e1f.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b8d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2b root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b8d.value\n        11 -> modulo_5a7b8d.divisor\n        modulo_5a7b8d.result -> equal_7c3e2b.left\n        0 -> equal_7c3e2b.right\n        equal_7c3e2b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 104, y: 129) concat_ae root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_ae.list1\n        difference_2a.difference -> concat_ae.list2\n\n        concat_ae.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2b1d6a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -110) modulo_2c1f6e root.Std_k98ojb.Math.Modulo {}\n        instance(x: 340, y: -110) sub_3d1e6a root.Std_k98ojb.Math.Sub {}\n        instance(x: 520, y: -110) slice_7c1f6a root.Std_k98ojb.List.Slice {}\n        instance(x: 520, y: -40) slice_7d1e6a root.Std_k98ojb.List.Slice {}\n        instance(x: 630, y: -75) concat_7c1f6a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2b1d6a.list\n        n_68068c -> modulo_2c1f6e.value\n        length_2b1d6a.length -> modulo_2c1f6e.divisor\n        length_2b1d6a.length -> sub_3d1e6a.first\n        modulo_2c1f6e.result -> sub_3d1e6a.second\n        list_48148f -> slice_7c1f6a.list\n        sub_3d1e6a.result -> slice_7c1f6a.start\n        -1 -> slice_7c1f6a.end\n        list_48148f -> slice_7d1e6a.list\n        0 -> slice_7d1e6a.start\n        sub_3d1e6a.result -> slice_7d1e6a.end\n        slice_7c1f6a.slice -> concat_7c1f6a.right\n        slice_7d1e6a.slice -> concat_7c1f6a.left\n        concat_7c1f6a.concatenatedList -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -112) reduce_2b5d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 367, y: -112) add_2c8b1a root.Std_k98ojb.Math.Add {}\n        setter(x: 400, y: -212, name: \"setter_5d6f6e\") setter_5d6f6e = sum\n        0 -> reduce_2b5d1e.initial_value\n        list_2c62ab -> reduce_2b5d1e.items\n        add_2c8b1a.result -> setter_5d6f6e.new_value\n        reduce_2b5d1e.reduce_complete -> setter_5d6f6e.execute\n        setter_5d6f6e.continue -> sum_2a848f\n        add_2c8b1a.first -> reduce_2b5d1e.accumulated_value\n        add_2c8b1a.second -> reduce_2b5d1e.current_value\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 182, y: -126) generate_range_0e5d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 374, y: -126) for_loop_3f2c root.Std_k98ojb.Std.For {}\n        instance(x: 566, y: -126) modulo_check_0e5d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 758, y: -126) if_statement_3f2c root.Std_k98ojb.Std.If {}\n        instance(x: 950, y: -126) not_equal_check_3f2c root.Std_k98ojb.Logic.NotEqual {}\n\n        num_5c0677 -> generate_range_0e5d.to\n        2 -> generate_range_0e5d.from\n\n        generate_range_0e5d.list -> for_loop_3f2c.items\n        execute_b7b391 -> for_loop_3f2c.reset\n\n        num_5c0677 -> modulo_check_0e5d.value\n        for_loop_3f2c.item -> modulo_check_0e5d.divisor\n\n        modulo_check_0e5d.result -> not_equal_check_3f2c.left\n        0 -> not_equal_check_3f2c.right\n\n        not_equal_check_3f2c.result -> if_statement_3f2c.predicate\n        for_loop_3f2c.onItem -> if_statement_3f2c.execute\n\n        if_statement_3f2c.else -> continue_9a54bb\n        if_statement_3f2c.value -> output_c457b3\n\n        for_loop_3f2c.done -> if_statement_3f2c.then\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -164, y: -87) mul_1d1e1b Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1d1e1b.first\n        y_5390f5 -> mul_1d1e1b.second\n\n        instance(x: -4, y: -171) less_than_or_equal_5a8c21 Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1d1e1b.result -> less_than_or_equal_5a8c21.left\n        0 -> less_than_or_equal_5a8c21.right\n\n        instance(x: 143, y: -179) not_6f5b1a Std_k98ojb.Logic.Not {}\n        less_than_or_equal_5a8c21.result -> not_6f5b1a.input\n        not_6f5b1a.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 144, y: -121) modulo_5a7d8b root.Std_k98ojb.Math.Modulo {}\n        instance(x: 316, y: -118) equal_d6b2e6 root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7d8b.value\n        11 -> modulo_5a7d8b.divisor\n        modulo_5a7d8b.result -> equal_d6b2e6.left\n        0 -> equal_d6b2e6.right\n        equal_d6b2e6.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -174, y: 220) tolower_5a2b8f root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5a2b8f.input\n        instance(x: 361, y: 220) equal_b2d5e4 root.Std_k98ojb.Logic.Equal {}\n        tolower_5a2b8f.output -> equal_b2d5e4.left\n        input_ai -> equal_b2d5e4.right\n        equal_b2d5e4.value -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -50, y: 24) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 170, y: 24) unique_list root.Std_k98ojb.List.Remove {\n            index: -1\n        }\n\n        instance(x: 350, y: 24) product root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n\n        unique_set.intersect -> unique_list.list\n        unique_list.listWithoutItem -> product.items\n\n        execute_19300c -> continue_45190b\n        product.result -> output_cffcc2\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: -55) difference_1a root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 134) difference_2a root.Std_k98ojb.Sets.Difference {}\n        instance(x: 76, y: 40) concat_1a root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1a.left\n        list2_ai -> difference_1a.right\n\n        list2_ai -> difference_2a.left\n        list1_ai -> difference_2a.right\n\n        difference_1a.difference -> concat_1a.list1\n        difference_2a.difference -> concat_1a.list2\n\n        concat_1a.concatenatedList -> output_ai\n    }\n\n    instance(x: 340, y: -56) find_dissimilar_test root.main.find_dissimilar {}\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 214, y: 101) length_4f7d0b root.Std_k98ojb.List.Length {}\n        instance(x: 215, y: -65) modulo_ea3a3a root.Std_k98ojb.Math.Modulo {}\n        instance(x: 455, y: -12) slice_1f7d0b root.Std_k98ojb.List.Slice {}\n        instance(x: 455, y: 165) slice_2f7d0b root.Std_k98ojb.List.Slice {}\n        instance(x: 596, y: -31) concat_ea3a3a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4f7d0b.list\n        n_68068c -> modulo_ea3a3a.value\n        length_4f7d0b.length -> modulo_ea3a3a.divisor\n        list_48148f -> slice_1f7d0b.list\n        list_48148f -> slice_2f7d0b.list\n        length_4f7d0b.length -> slice_1f7d0b.start\n        modulo_ea3a3a.result -> slice_1f7d0b.end\n        0 -> slice_2f7d0b.start\n        modulo_ea3a3a.result -> slice_2f7d0b.end\n        slice_2f7d0b.slice -> concat_ea3a3a.left\n        slice_1f7d0b.slice -> concat_ea3a3a.right\n        concat_ea3a3a.list -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -138) for_1b4d0e root.Std_k98ojb.Std.For {}\n        instance(x: 90, y: -57) add_6a20c3 root.Std_k98ojb.Math.Add {}\n        setter(x: 364, y: -125, name: \"setter_1d2fcb\") setter_1d2fcb = sum\n        getter(x: 364, y: -79, name: \"getter_0b8b5a\") getter_0b8b5a = sum\n        instance(x: 364, y: 3) if_54e1c7 root.Std_k98ojb.Std.If {}\n        setter(x: 210, y: -215, name: \"setter_c6d115\") setter_c6d115 = sum\n        0 -> setter_c6d115.new_value\n        list_2c62ab -> for_1b4d0e.items\n        for_1b4d0e.on_item -> add_6a20c3.execute\n        for_1b4d0e.item -> add_6a20c3.first\n        getter_0b8b5a.value -> add_6a20c3.second\n        setter_c6d115.continue -> if_54e1c7.execute\n        list_2c62ab -> for_1b4d0e.trigger\n        if_54e1c7.then -> continue_d9efd7\n        add_6a20c3.result -> setter_1d2fcb.new_value\n        setter_1d2fcb.continue -> for_1b4d0e.next\n        0 -> sum_2a848f\n        if_54e1c7.value -> continue_d9efd7\n        list_2c62ab -> getter_0b8b5a.list\n        setter_c6d115.continue -> for_1b4d0e.reset\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 208, y: -226) if_1f6d0e root.Std_k98ojb.Std.If {}\n        instance(x: 375, y: -321) lessthanorequal_e455c6 root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 605, y: -204) for_1d5f4e root.Std_k98ojb.Std.For {}\n        instance(x: 778, y: -330) mod_c7a7c8 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 951, y: -268) equal_4f4d1e root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1124, y: -304) if_b7a8c1 root.Std_k98ojb.Std.If {}\n        instance(x: 512, y: -62) add_7d0b4f root.Std_k98ojb.Math.Add {}\n\n        num_5c0677 -> lessthanorequal_e455c6.left\n        2 -> lessthanorequal_e455c6.right\n        lessthanorequal_e455c6.result -> if_1f6d0e.predicate\n        execute_b7b391 -> if_1f6d0e.execute\n        if_1f6d0e.then -> continue_9a54bb\n        2 -> for_1d5f4e.from\n        num_5c0677 -> for_1d5f4e.to\n        num_5c0677 -> mod_c7a7c8.value\n        for_1d5f4e.item -> mod_c7a7c8.divisor\n        mod_c7a7c8.result -> equal_4f4d1e.left\n        0 -> equal_4f4d1e.right\n        equal_4f4d1e.result -> if_b7a8c1.predicate\n        for_1d5f4e.onItem -> if_b7a8c1.execute\n        if_b7a8c1.then -> continue_9a54bb\n        1 -> output_c457b3\n        if_b7a8c1.else -> add_7d0b4f.first\n        1 -> add_7d0b4f.second\n        add_7d0b4f.result -> for_1d5f4e.next\n        if_1f6d0e.else -> for_1d5f4e.reset\n        for_1d5f4e.done -> if_b7a8c1.execute\n        if_b7a8c1.value -> output_c457b3\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 10,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -174) mul_d2c7d3 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_d2c7d3.first\n        y_5390f5 -> mul_d2c7d3.second\n\n        instance(x: 13, y: -211) less_than_or_equal_b4e5a2 root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_d2c7d3.result -> less_than_or_equal_b4e5a2.left\n        const(value: 0.0) -> less_than_or_equal_b4e5a2.right\n\n        instance(x: 216, y: -208) not_95a1f9 root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_b4e5a2.result -> not_95a1f9.input\n        not_95a1f9.output -> output_3339a3\n    }\n\n    \n\n    instance(x: 203, y: -192) check_opposite_signs_24d4b5 root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 164, y: -102) modulo_b5d9a6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 405, y: -73) equal_3e702c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_b5d9a6.value\n        11 -> modulo_b5d9a6.divisor\n        modulo_b5d9a6.result -> equal_3e702c.left\n        0 -> equal_3e702c.right\n        equal_3e702c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9a7c8b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9a7c8b.input\n        search_ai -> replace_9a7c8b.search\n        replace_ai -> replace_9a7c8b.replace\n        replace_9a7c8b.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -227, y: 209) toLower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> toLower_7b3b7b.input\n        toLower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 200, y: 200) sets_intersection root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 450, y: 150) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            expression: \"a * b\"\n        }\n        list_5fda54 -> sets_intersection.left\n        list_5fda54 -> sets_intersection.right\n        sets_intersection.intersect -> reduce_7b3b7b.items\n        execute_19300c -> reduce_7b3b7b.execute\n        1 -> reduce_7b3b7b.initialValue\n        continue_45190b <- execute_19300c\n        reduce_7b3b7b.result -> output_cffcc2\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -259, y: 119) difference_7c5b5d root.Std_k98ojb.Sets.Difference {}\n        list1_ai -> difference_7c5b5d.left\n        list2_ai -> difference_7c5b5d.right\n        instance(x: -60, y: 143) difference_bf7c1e root.Std_k98ojb.Sets.Difference {}\n        list2_ai -> difference_bf7c1e.left\n        list1_ai -> difference_bf7c1e.right\n        instance(x: 145, y: 160) concat_3e6a3d root.Std_k98ojb.List.Concat {}\n        difference_7c5b5d.difference -> concat_3e6a3d.list1\n        difference_bf7c1e.difference -> concat_3e6a3d.list2\n        concat_3e6a3d.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 334, y: -106) length_bf25d8 root.Std_k98ojb.List.Length {}\n        instance(x: 357, y: -36) modulo_d7a15c root.Std_k98ojb.Math.Modulo {}\n        instance(x: 342, y: 40) sub_1e1f71 root.Std_k98ojb.Math.Sub {}\n        instance(x: 375, y: 109) slice_657b67 root.Std_k98ojb.List.Slice {}\n        instance(x: 369, y: 214) slice_a8d4f2 root.Std_k98ojb.List.Slice {}\n        instance(x: 425, y: 303) concat_3b627e root.Std_k98ojb.List.Concat {}\n\n        length_bf25d8.length -> modulo_d7a15c.value\n        n_68068c -> modulo_d7a15c.divisor\n        list_48148f -> length_bf25d8.list\n        sub_1e1f71.result -> slice_657b67.start\n        0 -> slice_657b67.end\n        modulo_d7a15c.result -> sub_1e1f71.first\n        length_bf25d8.length -> sub_1e1f71.second\n        list_48148f -> slice_657b67.list\n        slice_657b67.slice -> concat_3b627e.left\n        modulo_d7a15c.result -> slice_a8d4f2.start\n        -1 -> slice_a8d4f2.end\n        list_48148f -> slice_a8d4f2.list\n        slice_a8d4f2.slice -> concat_3b627e.right\n        concat_3b627e.result -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -99, y: 101) for_3e5b9d root.Std_k98ojb.Std.For {}\n        instance(x: -136, y: 222) getat_f75c3a root.Std_k98ojb.List.GetAt {}\n        instance(x: 142, y: 303) add_6d93e6 root.Std_k98ojb.Math.Add {}\n        setter(x: 175, y: -80, name: \"setter_eb3a7d\") setter_eb3a7d = sum\n        getter(x: 402, y: 114, name: \"getter_6e13c9\") getter_6e13c9 = sum\n\n        list_2c62ab -> for_3e5b9d.items\n        for_3e5b9d.execute -> getat_f75c3a.execute\n        for_3e5b9d.item_index -> getat_f75c3a.index\n        0 -> setter_eb3a7d.new_value\n        list_2c62ab -> getter_6e13c9.list\n        setter_eb3a7d.continue -> for_3e5b9d.trigger\n        getat_f75c3a.item -> add_6d93e6.first\n        getter_6e13c9.value -> add_6d93e6.second\n        add_6d93e6.result -> setter_eb3a7d.new_value\n        for_3e5b9d.done -> getter_6e13c9.execute\n        getter_6e13c9.value -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 358, y: -116) generaterange_e6b5e4 root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 623, y: -79) for_b5f3c0 root.Std_k98ojb.Std.For {}\n        instance(x: 897, y: -12) mod_e7a16d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1094, y: 79) if_5a7e83 root.Std_k98ojb.Std.If {}\n        instance(x: 1358, y: -255) and_6f1e1c root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> generaterange_e6b5e4.from\n        func() {\n            in(x: 59, y: -432, name: \"n\") property(Number) n_7a5f6d\n\n            out(x: 108, y: -251, name: \"out\") property(Number) out_f65e8d\n            (n_7a5f6d + 1) -> out_f65e8d\n        } -> generaterange_e6b5e4.to\n\n        num_5c0677 -> for_b5f3c0.items\n        execute_b7b391 -> for_b5f3c0.trigger\n        for_b5f3c0.item -> mod_e7a16d.value\n        2 -> mod_e7a16d.divisor\n\n        num_5c0677 -> if_5a7e83.predicate\n        mod_e7a16d.result -> and_6f1e1c.left\n        for_b5f3c0.item -> and_6f1e1c.right\n\n        and_6f1e1c.result -> if_5a7e83.value\n        if_5a7e83.else -> continue_9a54bb\n        if_5a7e83.then -> for_b5f3c0.next\n\n        for_b5f3c0.done -> func() {\n            in(x: -16, y: 245, name: \"input\") property(Bool) input_e9d4b7\n\n            out(x: 66, y: 281, name: \"output\") property(Bool) output_4b4c30\n            (not(input_e9d4b7)) -> output_4b4c30\n        } -> if_5a7e83.output\n\n        for_b5f3c0.done -> func() {\n            in(x: -12, y: 224, name: \"input\") property(Bool) input_d9d654\n\n            out(x: 77, y: 260, name: \"output\") property(Bool) output_28f5e2\n            (not(input_d9d654)) -> output_28f5e2\n        } -> if_5a7e83.output\n\n        if_5a7e83.value -> output_c457b3\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2c2b0d root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2c2b0d.first\n        y_5390f5 -> mul_2c2b0d.second\n\n        instance(x: -147, y: -176) less_than_or_equal_2e2a1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2c2b0d.result -> less_than_or_equal_2e2a1a.left\n        0 -> less_than_or_equal_2e2a1a.right\n\n        instance(x: -46, y: -176) not_5f389b root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_2e2a1a.result -> not_5f389b.input\n        not_5f389b.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b2d.value\n        11 -> modulo_5a7b2d.divisor\n        modulo_5a7b2d.result -> equal_7c3e2c.left\n        0 -> equal_7c3e2c.right\n        equal_7c3e2c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_3f3b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3f3b.input\n        search_ai -> replace_3f3b.search\n        replace_ai -> replace_3f3b.replace\n        replace_3f3b.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 34, y: 129) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2e2b1a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -168) modulo_2d6fbb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 342, y: -109) sub_4c3e5a root.Std_k98ojb.Math.Sub {}\n        instance(x: 527, y: -110) slice_6d5f6a root.Std_k98ojb.List.Slice {}\n        instance(x: 527, y: -168) slice_4c3e5a root.Std_k98ojb.List.Slice {}\n        instance(x: 692, y: -110) concat_4c3e5a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2e2b1a.list\n        n_68068c -> modulo_2d6fbb.value\n        length_2e2b1a.length -> modulo_2d6fbb.divisor\n        length_2e2b1a.length -> sub_4c3e5a.first\n        modulo_2d6fbb.result -> sub_4c3e5a.second\n        list_48148f -> slice_6d5f6a.list\n        sub_4c3e5a.result -> slice_6d5f6a.start\n        length_2e2b1a.length -> slice_6d5f6a.end\n        list_48148f -> slice_4c3e5a.list\n        0 -> slice_4c3e5a.start\n        sub_4c3e5a.result -> slice_4c3e5a.end\n        slice_6d5f6a.slice -> concat_4c3e5a.left\n        slice_4c3e5a.slice -> concat_4c3e5a.right\n        concat_4c3e5a.concatenatedList -> output_823209\n    }\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -114) reduce_2b3d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 356, y: -71) add_2c3d1e root.Std_k98ojb.Math.Add {}\n        setter(x: 350, y: 149, name: \"setter_2a848f\") setter_2a848f = sum\n        list_2c62ab -> reduce_2b3d1e.items\n        0 -> reduce_2b3d1e.accumulator\n        reduce_2b3d1e.accumulate -> add_2c3d1e.first\n        reduce_2b3d1e.value -> add_2c3d1e.second\n        add_2c3d1e.result -> setter_2a848f.new_value\n        setter_2a848f.continue -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 182, y: -126) generate_range_0e5d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 374, y: -126) for_loop_3f1c root.Std_k98ojb.Std.For {}\n        instance(x: 566, y: -126) modulo_check_0e5d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 758, y: -126) if_statement_3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 950, y: -126) not_equal_check_3f1c root.Std_k98ojb.Logic.NotEqual {}\n\n        num_5c0677 -> generate_range_0e5d.to\n        2 -> generate_range_0e5d.from\n\n        generate_range_0e5d.list -> for_loop_3f1c.items\n        execute_b7b391 -> for_loop_3f1c.reset\n\n        num_5c0677 -> modulo_check_0e5d.value\n        for_loop_3f1c.item -> modulo_check_0e5d.divisor\n\n        modulo_check_0e5d.result -> not_equal_check_3f1c.left\n        0 -> not_equal_check_3f1c.right\n\n        not_equal_check_3f1c.result -> if_statement_3f1c.predicate\n        for_loop_3f1c.onItem -> if_statement_3f1c.execute\n\n        if_statement_3f1c.else -> continue_9a54bb\n        if_statement_3f1c.value -> output_c457b3\n\n        for_loop_3f1c.done -> continue_9a54bb\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -164, y: -87) mul_1d52c5 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1d52c5.first\n        y_5390f5 -> mul_1d52c5.second\n\n        instance(x: -14, y: -174) lessthanorequal_d70a2e root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1d52c5.result -> lessthanorequal_d70a2e.left\n        0 -> lessthanorequal_d70a2e.right\n\n        instance(x: 136, y: -149) not_e8b5f7 root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_d70a2e.result -> not_e8b5f7.input\n        not_e8b5f7.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 144, y: -129) modulo_5a7d9b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5a7d9b.value\n        11 -> modulo_5a7d9b.divisor\n\n        instance(x: 340, y: -69) equal_6e7e4b root.Std_k98ojb.Logic.Equal {}\n        modulo_5a7d9b.result -> equal_6e7e4b.left\n        0 -> equal_6e7e4b.right\n\n        equal_6e7e4b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -174, y: 220) tolower_5b3a4f root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5b3a4f.input\n        tolower_5b3a4f.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -50, y: 24) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 170, y: 24) unique_list root.Std_k98ojb.List.Remove {\n            index: -1\n        }\n\n        instance(x: 350, y: 24) product root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n\n        unique_set.intersect -> unique_list.list\n        unique_list.listWithoutItem -> product.items\n\n        execute_19300c -> continue_45190b\n        product.result -> output_cffcc2\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: -55) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 123) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 64, y: 30) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.list -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 214, y: 101) length_4f4d9b root.Std_k98ojb.List.Length {}\n        instance(x: 565, y: -72) slice_353b9a root.Std_k98ojb.List.Slice {}\n        instance(x: 559, y: 101) slice_e4d5c5 root.Std_k98ojb.List.Slice {}\n        instance(x: 645, y: -271) concat_3f82a5 root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4f4d9b.list\n        n_68068c -> slice_353b9a.start\n        0 -> slice_e4d5c5.start\n        length_4f4d9b.length -> slice_e4d5c5.end\n        list_48148f -> slice_353b9a.list\n        list_48148f -> slice_e4d5c5.list\n        n_68068c -> slice_e4d5c5.start\n        length_4f4d9b.length -> Math_k98ojb.Math.Sub.first\n        n_68068c -> Math_k98ojb.Math.Sub.second\n        Math_k98ojb.Math.Sub.result -> slice_353b9a.end\n        slice_e4d5c5.slice -> concat_3f82a5.left\n        slice_353b9a.slice -> concat_3f82a5.right\n        concat_3f82a5.concatenated -> output_823209\n    }\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -138) for_1b4eac root.Std_k98ojb.Std.For {}\n        instance(x: 90, y: -75) add_6d4c8c root.Std_k98ojb.Math.Add {}\n        setter(x: 243, y: -125, name: \"setter_3a7f8e\") setter_3a7f8e = sum\n        getter(x: 405, y: -69, name: \"getter_d146b2\") getter_d146b2 = sum\n        instance(x: 90, y: 54) if_42f2c6 root.Std_k98ojb.Std.If {}\n        setter(x: 378, y: -203, name: \"setter_3f4d1e\") setter_3f4d1e = sum\n        0 -> setter_3a7f8e.new_value\n        list_2c62ab -> for_1b4eac.items\n        for_1b4eac.on_item -> add_6d4c8c.execute\n        getter_d146b2.value -> add_6d4c8c.first\n        for_1b4eac.item -> add_6d4c8c.second\n        add_6d4c8c.result -> setter_3f4d1e.new_value\n        setter_3a7f8e.continue -> if_42f2c6.execute\n        list_2c62ab -> if_42f2c6.input\n        for_1b4eac.done -> getter_d146b2.execute\n        getter_d146b2.value -> sum_2a848f\n        setter_3f4d1e.continue -> for_1b4eac.next\n        if_42f2c6.then -> for_1b4eac.trigger\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 208, y: -226) if_1f2d5a root.Std_k98ojb.Std.If {}\n        instance(x: 375, y: -327) lessthanorequal_f2530e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 464, y: -114) for_2d6a7a root.Std_k98ojb.Std.For {}\n        instance(x: 669, y: -154) modulo_0e3c34 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 877, y: -152) if_4b2c7f root.Std_k98ojb.Std.If {}\n        instance(x: 1067, y: -334) and_4d14e6 root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthanorequal_f2530e.left\n        2 -> lessthanorequal_f2530e.right\n        lessthanorequal_f2530e.result -> if_1f2d5a.predicate\n        execute_b7b391 -> if_1f2d5a.execute\n        if_1f2d5a.else -> for_2d6a7a.reset\n        num_5c0677 -> for_2d6a7a.items\n        2 -> for_2d6a7a.start\n        num_5c0677 -> for_2d6a7a.end\n        for_2d6a7a.item -> modulo_0e3c34.value\n        num_5c0677 -> modulo_0e3c34.divisor\n        modulo_0e3c34.result -> if_4b2c7f.predicate\n        for_2d6a7a.onItem -> if_4b2c7f.execute\n        if_4b2c7f.then -> and_4d14e6.left\n        if_4b2c7f.else -> for_2d6a7a.next\n        for_2d6a7a.done -> continue_9a54bb\n        0 == modulo_0e3c34.result -> and_4d14e6.right\n        and_4d14e6.result -> if_1f2d5a.value\n        if_1f2d5a.then -> output_c457b3\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 50,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -174) mul_d4c8d3 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_d4c8d3.first\n        y_5390f5 -> mul_d4c8d3.second\n\n        instance(x: 14, y: -201) lessthanorequal_ea8b1e root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_d4c8d3.result -> lessthanorequal_ea8b1e.left\n        const(value: 0.0) zero_52f897\n        zero_52f897 -> lessthanorequal_ea8b1e.right\n\n        instance(x: 167, y: -202) not_b4b2d4 root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_ea8b1e.result -> not_b4b2d4.input\n        not_b4b2d4.output -> output_3339a3\n    }\n\n    \n\n    instance(x: 203, y: -192) check_consecutive_24d4b5 root.main.opposite_signs {}\n\n\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 164, y: -102) modulo_b5d9b6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 405, y: -72) equal_6e72ad root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_b5d9b6.value\n        11 -> modulo_b5d9b6.divisor\n        modulo_b5d9b6.result -> equal_6e72ad.left\n        0 -> equal_6e72ad.right\n        equal_6e72ad.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9f1d2a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9f1d2a.input\n        search_ai -> replace_9f1d2a.search\n        replace_ai -> replace_9f1d2a.replace\n        replace_9f1d2a.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -227, y: 209) toLower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> toLower_7b3b7b.input\n        toLower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 200, y: 200) sets_intersection root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 450, y: 150) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            expression: \"a * b\"\n        }\n        list_5fda54 -> sets_intersection.left\n        list_5fda54 -> sets_intersection.right\n        sets_intersection.intersect -> reduce_7b3b7b.items\n        execute_19300c -> reduce_7b3b7b.execute\n        1 -> reduce_7b3b7b.initialValue\n        continue_45190b <- execute_19300c\n        reduce_7b3b7b.result -> output_cffcc2\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -259, y: 119) difference_7e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -65, y: 233) difference_bf root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_7e.left\n        list2_ai -> difference_7e.right\n\n        list2_ai -> difference_bf.left\n        list1_ai -> difference_bf.right\n\n        instance(x: 160, y: 149) concat_lists root.Std_k98ojb.List.Concat {}\n        difference_7e.difference -> concat_lists.list1\n        difference_bf.difference -> concat_lists.list2\n\n        concat_lists.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 33, y: -45) length_37f6ac root.Std_k98ojb.List.Length {}\n        instance(x: 194, y: 164) mod_7035bb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 352, y: -45) slice_0d9a36 root.Std_k98ojb.List.Slice {}\n        instance(x: 364, y: 164) slice_f7c6ea root.Std_k98ojb.List.Slice {}\n        instance(x: 545, y: 72) concat_0e1fbb root.Std_k98ojb.List.Concat {}\n\n        length_37f6ac.length -> mod_7035bb.divisor\n        n_68068c -> mod_7035bb.value\n        list_48148f -> length_37f6ac.list\n        mod_7035bb.result -> slice_f7c6ea.start\n        -1 -> slice_f7c6ea.end\n        0 -> slice_0d9a36.start\n        mod_7035bb.result -> slice_0d9a36.end\n        list_48148f -> slice_0d9a36.list\n        list_48148f -> slice_f7c6ea.list\n        slice_0d9a36.slice -> concat_0e1fbb.left\n        slice_f7c6ea.slice -> concat_0e1fbb.right\n        concat_0e1fbb.result -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -99, y: 101) for_3a4dcb root.Std_k98ojb.Std.For {}\n        instance(x: 86, y: 217) add_e6395e root.Std_k98ojb.Math.Add {}\n        setter(x: 263, y: -105, name: \"setter_4cbfda\") setter_4cbfda = sum\n        getter(x: 466, y: 177, name: \"getter_f14ed9\") getter_f14ed9 = sum\n        instance(x: 328, y: -45) if_daa6c0 root.Std_k98ojb.Std.If {}\n        setter(x: -126, y: -47, name: \"setter_0bfece\") setter_0bfece = sum\n        instance(x: 308, y: 155) getat_ea90e4 root.Std_k98ojb.List.GetAt {}\n        \n        0 -> setter_0bfece.new_value\n        list_2c62ab -> for_3a4dcb.items\n        list_2c62ab -> getter_f14ed9.list\n        getter_f14ed9.value -> add_e6395e.first\n        for_3a4dcb.index -> getat_ea90e4.index\n        for_3a4dcb.item -> if_daa6c0.gen_1\n        list_2c62ab -> getat_ea90e4.list\n        add_e6395e.result -> setter_4cbfda.new_value\n        setter_4cbfda.value -> sum_2a848f\n        for_3a4dcb.on_item -> if_daa6c0.execute\n        for_3a4dcb.done -> setter_4cbfda.execute\n        setter_0bfece.continue -> for_3a4dcb.trigger\n        if_daa6c0.then -> add_e6395e.execute\n        getat_ea90e4.item -> add_e6395e.second\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 358, y: -116) generaterange_e10f2c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 678, y: -152) for_bcb296 root.Std_k98ojb.Std.For {}\n        instance(x: 934, y: -187) mod_0eb512 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1117, y: -220) if_2e3640 root.Std_k98ojb.Std.If {}\n        instance(x: 1355, y: -220) not_d0a390 root.Std_k98ojb.Logic.Not {}\n\n        num_5c0677 -> generaterange_e10f2c.from\n        num_5c0677 -> mod_0eb512.value\n\n        2 -> generaterange_e10f2c.to\n        generaterange_e10f2c.list -> for_bcb296.items\n\n        for_bcb296.index -> mod_0eb512.divisor\n        mod_0eb512.result -> if_2e3640.predicate\n        execute_b7b391 -> for_bcb296.reset\n\n        if_2e3640.else -> continue_9a54bb\n        if_2e3640.then -> not_d0a390.left\n        for_bcb296.done -> not_d0a390.right\n\n        not_d0a390.result -> output_c457b3\n        if_2e3640.else -> for_bcb296.next\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.2,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -248, y: -176) mul_2c2b0d root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_2c2b0d.first\n        y_5390f5 -> mul_2c2b0d.second\n\n        instance(x: -147, y: -176) less_than_or_equal_2e2a1a root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_2c2b0d.result -> less_than_or_equal_2e2a1a.left\n        0 -> less_than_or_equal_2e2a1a.right\n\n        instance(x: -46, y: -176) not_5f389b root.Std_k98ojb.Logic.Not {}\n        less_than_or_equal_2e2a1a.result -> not_5f389b.input\n        not_5f389b.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 148, y: -104) modulo_5a7b2d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 341, y: -104) equal_7c3e2c root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_5a7b2d.value\n        11 -> modulo_5a7b2d.divisor\n        modulo_5a7b2d.result -> equal_7c3e2c.left\n        0 -> equal_7c3e2c.right\n        equal_7c3e2c.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 209, y: 270) replace_3f3b root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_3f3b.input\n        search_ai -> replace_3f3b.search\n        replace_ai -> replace_3f3b.replace\n        replace_3f3b.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: 100, y: 200) tolower_7b3b7b Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_7b3b7b.input\n        tolower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -100, y: 100) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 100, y: 200) reduce_product root.Std_k98ojb.Iteration.Reduce {\n            items: unique_set.intersect\n            handler: \"a * b\"\n            initial_value: 1\n        }\n\n        execute_19300c -> reduce_product.trigger\n        reduce_product.result -> output_cffcc2\n        reduce_product.done -> continue_45190b\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -349, y: 129) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -156, y: 129) difference_2 root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        instance(x: 34, y: 129) concat root.Std_k98ojb.List.Concat {}\n        difference_1.difference -> concat.list1\n        difference_2.difference -> concat.list2\n\n        concat.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 40, y: -110) length_2e2b1a root.Std_k98ojb.List.Length {}\n        instance(x: 157, y: -168) modulo_2d6fbb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 342, y: -109) sub_4c3e5a root.Std_k98ojb.Math.Sub {}\n        instance(x: 527, y: -110) slice_6d5f6a root.Std_k98ojb.List.Slice {}\n        instance(x: 527, y: -168) slice_4c3e5a root.Std_k98ojb.List.Slice {}\n        instance(x: 692, y: -110) concat_4c3e5a root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_2e2b1a.list\n        n_68068c -> modulo_2d6fbb.value\n        length_2e2b1a.length -> modulo_2d6fbb.divisor\n        length_2e2b1a.length -> sub_4c3e5a.first\n        modulo_2d6fbb.result -> sub_4c3e5a.second\n        list_48148f -> slice_6d5f6a.list\n        sub_4c3e5a.result -> slice_6d5f6a.start\n        length_2e2b1a.length -> slice_6d5f6a.end\n        list_48148f -> slice_4c3e5a.list\n        0 -> slice_4c3e5a.start\n        sub_4c3e5a.result -> slice_4c3e5a.end\n        slice_6d5f6a.slice -> concat_4c3e5a.left\n        slice_4c3e5a.slice -> concat_4c3e5a.right\n        concat_4c3e5a.concatenatedList -> output_823209\n    }\n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 109, y: -114) reduce_2b3d1e root.Std_k98ojb.Iteration.Reduce {}\n        instance(x: 356, y: -71) add_2c3d1e root.Std_k98ojb.Math.Add {}\n        setter(x: 350, y: 149, name: \"setter_2a848f\") setter_2a848f = sum\n        list_2c62ab -> reduce_2b3d1e.items\n        0 -> reduce_2b3d1e.accumulator\n        reduce_2b3d1e.accumulate -> add_2c3d1e.first\n        reduce_2b3d1e.value -> add_2c3d1e.second\n        add_2c3d1e.result -> setter_2a848f.new_value\n        setter_2a848f.continue -> sum_2a848f\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 182, y: -126) generate_range_0e5d root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 374, y: -126) for_loop_3f1c root.Std_k98ojb.Std.For {}\n        instance(x: 566, y: -126) modulo_check_0e5d root.Std_k98ojb.Math.Modulo {}\n        instance(x: 758, y: -126) if_statement_3f1c root.Std_k98ojb.Std.If {}\n        instance(x: 950, y: -126) not_equal_check_3f1c root.Std_k98ojb.Logic.NotEqual {}\n\n        num_5c0677 -> generate_range_0e5d.to\n        2 -> generate_range_0e5d.from\n\n        generate_range_0e5d.list -> for_loop_3f1c.items\n        execute_b7b391 -> for_loop_3f1c.reset\n\n        num_5c0677 -> modulo_check_0e5d.value\n        for_loop_3f1c.item -> modulo_check_0e5d.divisor\n\n        modulo_check_0e5d.result -> not_equal_check_3f1c.left\n        0 -> not_equal_check_3f1c.right\n\n        not_equal_check_3f1c.result -> if_statement_3f1c.predicate\n        for_loop_3f1c.onItem -> if_statement_3f1c.execute\n\n        if_statement_3f1c.else -> continue_9a54bb\n        if_statement_3f1c.value -> output_c457b3\n\n        for_loop_3f1c.done -> continue_9a54bb\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.6,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -164, y: -87) mul_1d5d5e root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_1d5d5e.first\n        y_5390f5 -> mul_1d5d5e.second\n\n        instance(x: -14, y: -174) lessthanorequal_5a954c root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_1d5d5e.result -> lessthanorequal_5a954c.left\n        0.0 -> lessthanorequal_5a954c.right\n\n        instance(x: 137, y: -268) not_1b5d3d root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_5a954c.result -> not_1b5d3d.input\n        not_1b5d3d.output -> output_3339a3\n    }\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 144, y: -129) modulo_5a7d9b root.Std_k98ojb.Math.Modulo {}\n        n_27f29c -> modulo_5a7d9b.value\n        11 -> modulo_5a7d9b.divisor\n\n        instance(x: 340, y: -69) equal_6e7e4b root.Std_k98ojb.Logic.Equal {}\n        modulo_5a7d9b.result -> equal_6e7e4b.left\n        0 -> equal_6e7e4b.right\n\n        equal_6e7e4b.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 0) replace_306f69 root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_306f69.input\n        search_ai -> replace_306f69.search\n        replace_ai -> replace_306f69.replace\n        replace_306f69.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -174, y: 220) tolower_5b3a4f root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> tolower_5b3a4f.input\n        tolower_5b3a4f.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc:\"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n\n        instance(x: -50, y: 24) unique_set root.Std_k98ojb.Sets.Intersection {\n            left: list_5fda54\n            right: list_5fda54\n        }\n\n        instance(x: 170, y: 24) unique_list root.Std_k98ojb.List.Remove {\n            index: -1\n        }\n\n        instance(x: 350, y: 24) product root.Std_k98ojb.Iteration.Reduce {\n            handler: \"acc * it\"\n            initial_value: 1\n        }\n\n        unique_set.intersect -> unique_list.list\n        unique_list.listWithoutItem -> product.items\n\n        execute_19300c -> continue_45190b\n        product.result -> output_cffcc2\n    }\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -299, y: -55) difference_1 root.Std_k98ojb.Sets.Difference {}\n        instance(x: -299, y: 123) difference_2 root.Std_k98ojb.Sets.Difference {}\n        instance(x: 64, y: 30) concat_1 root.Std_k98ojb.List.Concat {}\n\n        list1_ai -> difference_1.left\n        list2_ai -> difference_1.right\n\n        list2_ai -> difference_2.left\n        list1_ai -> difference_2.right\n\n        difference_1.difference -> concat_1.left\n        difference_2.difference -> concat_1.right\n\n        concat_1.list -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 214, y: 101) length_4f4d9b root.Std_k98ojb.List.Length {}\n        instance(x: 565, y: -72) slice_3533e6 root.Std_k98ojb.List.Slice {}\n        instance(x: 559, y: 101) slice_d4d5c4 root.Std_k98ojb.List.Slice {}\n        instance(x: 718, y: -23) concat_284f6c root.Std_k98ojb.List.Concat {}\n\n        list_48148f -> length_4f4d9b.list\n        n_68068c -> slice_3533e6.start\n        length_4f4d9b.length -> slice_3533e6.end\n        list_48148f -> slice_3533e6.list\n        0 -> slice_d4d5c4.start\n        n_68068c -> slice_d4d5c4.end\n        list_48148f -> slice_d4d5c4.list\n        slice_d4d5c4.slice -> concat_284f6c.left\n        slice_3533e6.slice -> concat_284f6c.right\n        concat_284f6c.result -> output_823209\n    }\n\n    \n\n    instance(x: -197, y: -3) rotate_right_def9ac root.main.rotate_right {}\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: 90, y: -138) for_1b4eac root.Std_k98ojb.Std.For {}\n        instance(x: 90, y: -75) add_6d4c8c root.Std_k98ojb.Math.Add {}\n        setter(x: 243, y: -125, name: \"setter_3a7f8e\") setter_3a7f8e = sum\n        getter(x: 405, y: -69, name: \"getter_d126b2\") getter_d126b2 = sum\n        instance(x: 90, y: 54) if_4282c6 root.Std_k98ojb.Std.If {}\n        setter(x: 375, y: -312, name: \"setter_15e2f6\") setter_15e2f6 = sum\n        getter(x: 375, y: -240, name: \"getter_84d95c\") getter_84d95c = sum\n\n        list_2c62ab -> for_1b4eac.items\n        for_1b4eac.on_item -> add_6d4c8c.execute\n        0 -> setter_3a7f8e.new_value\n        setter_3a7f8e.continue -> if_4282c6.execute\n        getter_d126b2.value -> add_6d4c8c.first\n        for_1b4eac.item -> add_6d4c8c.second\n        add_6d4c8c.result -> setter_15e2f6.new_value\n        setter_15e2f6.continue -> if_4282c6.then\n        getter_84d95c.value -> sum_2a848f\n        for_1b4eac.done -> if_4282c6.else\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 208, y: -226) if_1f2d5a root.Std_k98ojb.Std.If {}\n        instance(x: 375, y: -327) lessthanorequal_f2522e root.Std_k98ojb.Math.LessThanOrEqual {}\n        instance(x: 460, y: -135) for_2d6c55 root.Std_k98ojb.Std.For {}\n        instance(x: 717, y: -311) modulo_4b9a4f root.Std_k98ojb.Math.Modulo {}\n        instance(x: 905, y: -182) if_6c7e77 root.Std_k98ojb.Std.If {}\n        instance(x: 1063, y: -131) and_4f8d1d root.Std_k98ojb.Logic.And {}\n\n        num_5c0677 -> lessthanorequal_f2522e.left\n        2 -> lessthanorequal_f2522e.right\n        lessthanorequal_f2522e.result -> if_1f2d5a.predicate\n        execute_b7b391 -> if_1f2d5a.execute\n        if_1f2d5a.else -> for_2d6c55.reset\n\n        num_5c0677 -> for_2d6c55.items\n        2 -> for_2d6c55.from\n        num_5c0677 -> for_2d6c55.to\n\n        for_2d6c55.item -> modulo_4b9a4f.value\n        num_5c0677 -> modulo_4b9a4f.divisor\n        modulo_4b9a4f.result -> if_6c7e77.predicate\n        0 -> if_6c7e77.input\n\n        for_2d6c55.onItem -> if_6c7e77.execute\n        if_6c7e77.then -> and_4f8d1d.left\n        if_6c7e77.value -> and_4f8d1d.right\n        and_4f8d1d.result -> output_c457b3\n\n        for_2d6c55.done -> continue_9a54bb\n        if_6c7e77.else -> for_2d6c55.next\n        if_1f2d5a.then -> and_4f8d1d.left\n    }\n}"
            ]
        }
    },
    {
        "experiment_name": "signature_similarity_1_shot",
        "temperature": 0.9,
        "top_p": 0.9,
        "top_k": 100,
        "seed": 9,
        "n_generations_per_task": 1,
        "model": "qwen2.5:72b-instruct-fp16",
        "largest_context": 4254,
        "task_candidates": {
            "1": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main {\n    func(doc: \"checks whether the given two integers have opposite sign or not.\") opposite_signs {\n        in(x: -426, y: -248, name: \"x\") property(Number) x_853326\n        in(x: -420, y: -107, name: \"y\") property(Number) y_5390f5\n        out(x: 159, y: -219, name: \"output\") property(Bool) output_3339a3\n\n        instance(x: -168, y: -174) mul_d4c8d3 root.Std_k98ojb.Math.Mul {}\n        x_853326 -> mul_d4c8d3.first\n        y_5390f5 -> mul_d4c8d3.second\n\n        instance(x: 14, y: -201) lessthanorequal_ea8b1e root.Std_k98ojb.Math.LessThanOrEqual {}\n        mul_d4c8d3.result -> lessthanorequal_ea8b1e.left\n        const(value: 0.0) zero_52f8a7\n        zero_52f8a7 -> lessthanorequal_ea8b1e.right\n\n        instance(x: 165, y: -225) not_b9c3d3 root.Std_k98ojb.Logic.Not {}\n        lessthanorequal_ea8b1e.result -> not_b9c3d3.input\n        not_b9c3d3.output -> output_3339a3\n    }\n\n    \n\n    instance(x: 203, y: -192) opposite_signs_test root.main.opposite_signs {}\n}"
            ],
            "3": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"finds whether a number is divisible by 11.\") is_diff {\n        in(x: 5, y: -25, name: \"n\") property(Number) n_27f29c\n        out(x: 668, y: 2, name: \"output\") property(Bool) output_f2630f\n\n        instance(x: 164, y: -102) modulo_b5d9b6 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 405, y: -72) equal_6e72ad root.Std_k98ojb.Logic.Equal {}\n\n        n_27f29c -> modulo_b5d9b6.value\n        11 -> modulo_b5d9b6.divisor\n        modulo_b5d9b6.result -> equal_6e72ad.left\n        0 -> equal_6e72ad.right\n        equal_6e72ad.result -> output_f2630f\n    }\n}"
            ],
            "12": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    func(doc: \"function to replace characters in a string.\") replace_char {\n        in(x: -426, y: 209, name: \"input\") property(String) input_ai\n        in(x: -426, y: 332, name: \"search\") property(String) search_ai\n        in(x: -426, y: 455, name: \"replace\") property(String) replace_ai\n        out(x: 866, y: 132, name: \"output\") property(String) output_ai\n\n        instance(x: 0, y: 270) replace_9f1d2a root.Std_k98ojb.Strings.Replace {}\n        input_ai -> replace_9f1d2a.input\n        search_ai -> replace_9f1d2a.search\n        replace_ai -> replace_9f1d2a.replace\n        replace_9f1d2a.output -> output_ai\n    }\n}"
            ],
            "13": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n\n    func(doc: \"convert the given string to lower case.\") is_lower {\n        in(x: -425, y: 209, name: \"input\") property(String) input_ai\n        out(x: 866, y: 132, name: \"output\") property(Bool) output_ai\n\n        instance(x: -227, y: 209) toLower_7b3b7b root.Std_k98ojb.Strings.ToLower {}\n        input_ai -> toLower_7b3b7b.input\n        toLower_7b3b7b.output -> output_ai\n    }\n\n}"
            ],
            "16": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n\n    func(doc: \"Calculates the product of the unique numbers in a given list.\") unique_product {\n        in(x: -757, y: -167, name: \"execute\") trigger() execute_19300c\n        in(x: -241, y: 24, name: \"list\") property(List) list_5fda54\n        out(x: 887, y: -144, name: \"continue\") trigger() continue_45190b\n        out(x: 683, y: 73, name: \"output\") property(Number) output_cffcc2\n        instance(x: 200, y: 200) sets_intersection root.Std_k98ojb.Sets.Intersection {}\n        instance(x: 450, y: 150) reduce_7b3b7b root.Std_k98ojb.Iteration.Reduce {\n            expression: \"a * b\"\n        }\n        list_5fda54 -> sets_intersection.left\n        list_5fda54 -> sets_intersection.right\n        sets_intersection.intersect -> reduce_7b3b7b.items\n        execute_19300c -> reduce_7b3b7b.execute\n        1 -> reduce_7b3b7b.initialValue\n        continue_45190b <- execute_19300c\n        reduce_7b3b7b.result -> output_cffcc2\n    }\n\n}"
            ],
            "18": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"find the dissimilar elements in the given two lists.\") find_dissimilar {\n        in(x: -531, y: 2, name: \"list1\") property(List) list1_ai\n        in(x: -165, y: 68, name: \"list2\") property(List) list2_ai\n\n        out(x: 340, y: 77, name: \"output\") property(List) output_ai\n\n        instance(x: -259, y: 119) difference_7e root.Std_k98ojb.Sets.Difference {}\n        instance(x: -65, y: 233) difference_bf root.Std_k98ojb.Sets.Difference {}\n\n        list1_ai -> difference_7e.left\n        list2_ai -> difference_7e.right\n\n        list2_ai -> difference_bf.left\n        list1_ai -> difference_bf.right\n\n        instance(x: 160, y: 149) concat_lists root.Std_k98ojb.List.Concat {}\n        difference_7e.difference -> concat_lists.list1\n        difference_bf.difference -> concat_lists.list2\n\n        concat_lists.concatenatedList -> output_ai\n    }\n}"
            ],
            "34": [
                "import(\"std\", Std_k98ojb)\nimport(\"http\", Http_q7o96c)\n\nmodule() main { \n    \n    func(doc: \"Rotates a given list by specified number of items to the right direction.\") rotate_right {\n        in(x: -186, y: -89, name: \"list\") property(List) list_48148f\n        in(x: -193, y: -3, name: \"n\") property(Number) n_68068c\n\n        out(x: 735, y: -112, name: \"output\") property(Any) output_823209\n\n        instance(x: 33, y: -45) length_30f1da root.Std_k98ojb.List.Length {}\n        instance(x: 176, y: 156) mod_762bcb root.Std_k98ojb.Math.Modulo {}\n        instance(x: 335, y: -45) slice_0d9eac root.Std_k98ojb.List.Slice {}\n        instance(x: 509, y: -104) reversed_75cf2f root.Std_k98ojb.List.Reversed {}\n        getter(x: 368, y: 226, name: \"getter_f1d4b1\") getter_f1d4b1 = slice\n        instance(x: 330, y: 375) slice_ebf6f2 root.Std_k98ojb.List.Slice {}\n        instance(x: 489, y: 134) reversed_00a4c8 root.Std_k98ojb.List.Reversed {}\n        getter(x: 614, y: 307, name: \"getter_eed5a4\") getter_eed5a4 = slice\n        instance(x: 523, y: -246) concat_05b0d9 root.Std_k98ojb.List.Concat {}\n        \n        list_48148f -> length_30f1da.list\n        n_68068c -> mod_762bcb.value\n        length_30f1da.length -> mod_762bcb.divisor\n        list_48148f -> slice_0d9eac.list\n        mod_762bcb.result -> slice_0d9eac.start\n        -mod_762bcb.result -> slice_ebf6f2.end\n        list_48148f -> slice_ebf6f2.list\n        slice_0d9eac.slice -> reversed_75cf2f.list\n        slice_ebf6f2.slice -> reversed_00a4c8.list\n        reversed_75cf2f.reversedList -> concat_05b0d9.left\n        reversed_00a4c8.reversedList -> concat_05b0d9.right\n        concat_05b0d9.concatenatedList -> output_823209\n    }\n\n    \n\n}"
            ],
            "42": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main { \n    \n    func(doc: \"Finds the sum of an array.\") _sum {\n        in(x: -213, y: 28, name: \"list\") property(List) list_2c62ab\n        out(x: 567, y: 3, name: \"sum\") property(Number) sum_2a848f\n\n        instance(x: -99, y: 101) for_3a4e0d root.Std_k98ojb.Std.For {}\n        instance(x: -126, y: 200) getter_75b0d7 = item\n        instance(x: 183, y: 261) add_d151b4 root.Std_k98ojb.Math.Add {}\n        setter(x: 436, y: -30, name: \"setter_ea6e36\") setter_ea6e36 = sum\n        getter(x: 442, y: 347, name: \"getter_15c0b9\") getter_15c0b9 = sum\n\n        for_3a4e0d.next -> add_d151b4.execute\n        add_d151b4.result -> setter_ea6e36.new_value\n        list_2c62ab -> for_3a4e0d.items\n        getter_75b0d7.value -> add_d151b4.first\n        0 -> setter_ea6e36.new_value\n        for_3a4e0d.on_item -> getter_75b0d7.execute\n        setter_ea6e36.continue -> for_3a4e0d.next\n        getter_15c0b9.value -> sum_2a848f\n        setter_ea6e36.execute -> for_3a4e0d.trigger\n    }\n\n}"
            ],
            "48": [
                "import(\"std\", Std_k98ojb)\n\nmodule() main {\n    func(doc: \"check if the given integer is a prime number.\") num_prime {\n        in(x: -167, y: 27, name: \"num\") property(Number) num_5c0677\n        in(x: -112, y: -216, name: \"execute\") trigger() execute_b7b391\n\n        out(x: 1016, y: -26, name: \"output\") property(Bool) output_c457b3\n        out(x: 1211, y: -110, name: \"continue\") trigger() continue_9a54bb\n\n        instance(x: 358, y: -116) generaterange_e10f2c root.Std_k98ojb.List.GenerateRange {}\n        instance(x: 678, y: -152) for_bcb197 root.Std_k98ojb.Std.For {}\n        instance(x: 934, y: -184) mod_0ab3e1 root.Std_k98ojb.Math.Modulo {}\n        instance(x: 1138, y: -215) equal_b67ca2 root.Std_k98ojb.Logic.Equal {}\n        instance(x: 1300, y: -247) if_8a6cf2 root.Std_k98ojb.Std.If {}\n        instance(x: 1573, y: -278) not_cdd6e8 root.Std_k98ojb.Logic.Not {}\n        \n        num_5c0677 -> generaterange_e10f2c.to\n        2 -> generaterange_e10f2c.from\n        \n        generaterange_e10f2c.list -> for_bcb197.items\n\n        for_bcb197.item -> mod_0ab3e1.value\n        num_5c0677 -> mod_0ab3e1.divisor\n\n        mod_0ab3e1.result -> equal_b67ca2.left\n        0 -> equal_b67ca2.right\n        \n        equal_b67ca2.result -> if_8a6cf2.predicate\n\n        if_8a6cf2.then -> continue_9a54bb\n        if_8a6cf2.else -> for_bcb197.next\n\n        execute_b7b391 -> for_bcb197.reset\n        for_bcb197.done -> not_cdd6e8.left\n        \n        num_5c0677 -> equal_b67ca2.left\n        2 -> equal_b67ca2.right\n        \n        equal_b67ca2.result -> if_8a6cf2.predicate\n\n        for_bcb197.done -> if_8a6cf2.execute\n        not_cdd6e8.result -> output_c457b3\n    }\n}"
            ]
        }
    }
]